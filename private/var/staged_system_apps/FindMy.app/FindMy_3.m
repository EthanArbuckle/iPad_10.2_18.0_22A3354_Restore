double sub_1001C221C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t Strong;
  double result;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v9 = (char *)Strong;
    v10 = a3 & 1;
    *(_BYTE *)(Strong + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_isNotifyWhenLeftBehindOnOverride) = v10;
    objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_notificationsView), "setUserInteractionEnabled:", 0);
    v11 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v9[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator] + 24)
                    + 32);
    v12 = swift_allocObject(&unk_10054BA30, 25, 7);
    *(_QWORD *)(v12 + 16) = v9;
    *(_BYTE *)(v12 + 24) = v10;
    swift_retain(v11);
    v13 = v9;
    sub_1000B7698(a4, v10, (uint64_t)sub_1001D43FC, v12);

    swift_release(v11);
    *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  }
  return result;
}

uint64_t sub_1001C2320(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[24];

  v6 = type metadata accessor for FMIPActionStatus(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FMDeviceDetailViewModel(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(*(id *)(a3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_notificationsView), "setUserInteractionEnabled:", 1);
  v13 = *(_QWORD *)(a3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource)
      + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
  swift_beginAccess(v13, v19, 0, 0);
  sub_10004FC74(v13, (uint64_t)v12, type metadata accessor for FMDeviceDetailViewModel);
  sub_1001BEEB4((uint64_t)v12);
  sub_10004FCB8((uint64_t)v12, type metadata accessor for FMDeviceDetailViewModel);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for FMIPActionStatus.success(_:), v6);
  v14 = sub_100008000(&qword_1005D9928, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPActionStatus, (uint64_t)&protocol conformance descriptor for FMIPActionStatus);
  dispatch thunk of RawRepresentable.rawValue.getter(&v18, v6, v14);
  dispatch thunk of RawRepresentable.rawValue.getter(&v17, v6, v14);
  LOBYTE(v13) = v18 == v17;
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(_BYTE *)(a3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_isNotifyWhenLeftBehindOnOverride) = v13 & a4;
  return result;
}

void sub_1001C24E8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *v4;
  id v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  objc_class *v17;
  char *v18;
  id v19;
  char *v20;
  char *v21;
  id v22;
  char *v23;
  uint64_t v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  NSString v30;
  char *v31;
  objc_super v32;
  uint64_t v33;

  v1 = v0;
  v2 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator;
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator];
  v4 = (objc_class *)type metadata accessor for FMSeparationWelcomeScreenViewController();
  v5 = objc_allocWithZone(v4);
  v6 = swift_retain(v3);
  v7 = sub_1004206A8(v6, 0);
  v8 = *(_QWORD *)&v1[v2];
  v9 = objc_allocWithZone(v4);
  v10 = swift_retain(v8);
  v11 = sub_1004206A8(v10, 1);
  v12 = &v11[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_delegate];
  *((_QWORD *)v12 + 1) = &off_10054B498;
  swift_unknownObjectWeakAssign(v12, v1);
  v13 = *(_QWORD *)&v1[v2];
  v14 = sub_100053F2C(&qword_1005D2F10);
  v15 = swift_allocObject(v14, 48, 7);
  *(_OWORD *)(v15 + 16) = xmmword_1004820B0;
  *(_QWORD *)(v15 + 32) = v7;
  *(_QWORD *)(v15 + 40) = v11;
  v33 = v15;
  specialized Array._endMutation()(v15);
  v16 = v33;
  v17 = (objc_class *)type metadata accessor for FMPageViewController();
  v18 = (char *)objc_allocWithZone(v17);
  *(_QWORD *)&v18[OBJC_IVAR____TtC6FindMy20FMPageViewController_pages] = _swiftEmptyArrayStorage;
  v19 = objc_allocWithZone((Class)UIPageViewController);
  swift_retain(v13);
  v31 = v7;
  v20 = v11;
  v21 = v18;
  v22 = objc_msgSend(v19, "initWithTransitionStyle:navigationOrientation:options:", 1, 0, 0);
  *(_QWORD *)&v21[OBJC_IVAR____TtC6FindMy20FMPageViewController_pageViewController] = v22;

  v32.receiver = v21;
  v32.super_class = v17;
  v23 = (char *)objc_msgSendSuper2(&v32, "initWithNibName:bundle:", 0, 0);
  swift_release(v13);
  v24 = *(_QWORD *)&v23[OBJC_IVAR____TtC6FindMy20FMPageViewController_pages];
  *(_QWORD *)&v23[OBJC_IVAR____TtC6FindMy20FMPageViewController_pages] = v16;
  swift_bridgeObjectRelease(v24);
  v25 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMTransparentNavigationController()), "initWithRootViewController:", v23);
  objc_msgSend(v1, "presentViewController:animated:completion:", v25, 1, 0);
  v26 = *(void **)(*(_QWORD *)&v1[v2] + 16);
  v27 = (void *)objc_opt_self(NSUserDefaults);
  v28 = v26;
  v29 = objc_msgSend(v27, "standardUserDefaults");
  v30 = String._bridgeToObjectiveC()();
  objc_msgSend(v29, "setBool:forKey:", 1, v30);

}

void sub_1001C277C(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  id v28;
  uint64_t v29;
  Class isa;
  Class v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  char *v46;
  char *v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  Swift::String v55;
  unint64_t v56;
  id v57;
  NSString v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  unint64_t v70;
  unint64_t v71;
  char v72[24];
  char v73[24];
  char v74[24];
  char v75[32];

  v65 = a1;
  v2 = sub_100053F2C(&qword_1005DDFA0);
  __chkstk_darwin(v2);
  v66 = (uint64_t)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100053F2C((uint64_t *)&unk_1005E2270);
  __chkstk_darwin(v4);
  v64 = (uint64_t)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = (_QWORD *)type metadata accessor for TimeZone(0);
  v6 = *(v62 - 1);
  __chkstk_darwin(v62);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  __chkstk_darwin(v9);
  v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FMPendingActionInfo(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Date(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v68 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = v1;
  v63 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource;
  v18 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource]
      + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
  swift_beginAccess(v18, v75, 0, 0);
  v19 = *(_QWORD *)(v18 + 24);
  if (v19)
  {
    v61 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator;
    v20 = *(_QWORD *)(v18 + 16);
    v21 = *(_QWORD *)(*(_QWORD *)&v69[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator] + 56)
        + OBJC_IVAR____TtC6FindMy21FMSelectionController_pendingActionInfo;
    swift_beginAccess(v21, v74, 0, 0);
    v67 = v15;
    sub_10004FC74(v21, (uint64_t)v14, type metadata accessor for FMPendingActionInfo);
    sub_100007464((uint64_t)&v14[*(int *)(v12 + 28)], (uint64_t)v11, (uint64_t *)&unk_1005D3320);
    swift_bridgeObjectRetain(v19);
    v22 = v67;
    sub_10004FCB8((uint64_t)v14, type metadata accessor for FMPendingActionInfo);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v11, 1, v22) == 1)
    {
      swift_bridgeObjectRelease(v19);
      sub_1000051EC((uint64_t)v11, (uint64_t *)&unk_1005D3320);
    }
    else
    {
      v60 = v16;
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v68, v11, v22);
      v28 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
      static TimeZone.autoupdatingCurrent.getter();
      v29 = v20;
      isa = TimeZone._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, _QWORD *))(v6 + 8))(v8, v62);
      objc_msgSend(v28, "setTimeZone:", isa);

      objc_msgSend(v28, "setTimeStyle:", 1);
      v31 = Date._bridgeToObjectiveC()().super.isa;
      v62 = v28;
      v32 = objc_msgSend(v28, "stringFromDate:", v31);

      v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v32);
      v35 = v34;

      v36 = v69;
      v37 = v61;
      v38 = *(_QWORD *)&v69[v61];
      v39 = sub_100053F2C((uint64_t *)&unk_1005D2A90);
      v40 = swift_allocObject(v39, 48, 7);
      *(_OWORD *)(v40 + 16) = xmmword_100481740;
      *(_QWORD *)(v40 + 32) = v29;
      *(_QWORD *)(v40 + 40) = v19;
      v41 = (uint64_t)&v36[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pendingSafeLocation];
      swift_beginAccess(&v36[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pendingSafeLocation], v73, 0, 0);
      v42 = v64;
      sub_100007464(v41, v64, (uint64_t *)&unk_1005E2270);
      v43 = v66;
      sub_100007464(v65, v66, &qword_1005DDFA0);
      v44 = objc_allocWithZone((Class)type metadata accessor for FMSeparationNotificationWelcomeViewController(0));
      v45 = swift_retain(v38);
      v46 = sub_100291AA4(v45, 0, v40, v42, v33, v35, v43);
      swift_release(v38);
      v47 = &v46[OBJC_IVAR____TtC6FindMy45FMSeparationNotificationWelcomeViewController_delegate];
      *((_QWORD *)v47 + 1) = &off_10054B488;
      swift_unknownObjectWeakAssign(v47, v36);
      v48 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMTransparentNavigationController()), "initWithRootViewController:", v46);
      objc_msgSend(v36, "presentViewController:animated:completion:", v48, 1, 0);
      v49 = *(void **)(*(_QWORD *)&v36[v37] + 16);
      v50 = *(_QWORD *)&v36[v63] + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
      swift_beginAccess(v50, v72, 0, 0);
      v51 = *(_QWORD *)(v50 + 24);
      if (v51)
      {
        v52 = *(_QWORD *)(v50 + 16);
        v53 = *(void **)(v50 + 24);
      }
      else
      {
        v52 = 0;
        v53 = (void *)0xE000000000000000;
      }
      v70 = 0xD00000000000001ELL;
      v71 = 0x80000001004B2370;
      v54 = v49;
      swift_bridgeObjectRetain(v51);
      v55._countAndFlagsBits = v52;
      v55._object = v53;
      String.append(_:)(v55);
      v56 = v71;
      swift_bridgeObjectRetain(v51);
      swift_bridgeObjectRelease(v53);
      v57 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
      v58 = String._bridgeToObjectiveC()();
      objc_msgSend(v57, "setBool:forKey:", 1, v58, swift_bridgeObjectRelease(v56).n128_f64[0]);

      swift_bridgeObjectRelease(v51);
      (*(void (**)(char *, uint64_t))(v60 + 8))(v68, v67);
    }
  }
  else
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v23 = type metadata accessor for Logger(0);
    v24 = sub_100056D88(v23, (uint64_t)qword_1005F5748);
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.default.getter(v25);
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "FMDeivceDetailViewController: Cannot present onboarding for unknown identifier", v27, 2u);
      swift_slowDealloc(v27, -1, -1);
    }

  }
}

double sub_1001C2E14(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  __n128 v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double result;
  uint64_t v38;
  char v39[24];

  v5 = v4;
  HIDWORD(v38) = a2;
  v9 = type metadata accessor for FMIPSafeLocation(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v39[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v13 = type metadata accessor for Logger(0);
  v14 = sub_100056D88(v13, (uint64_t)qword_1005F5748);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "FMItemNotificationsViewController: Add Safe Location", v17, 2u);
    swift_slowDealloc(v17, -1, -1);
  }

  v18 = *(_QWORD *)(v5 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource)
      + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
  swift_beginAccess(v18, v39, 0, 0);
  v19 = *(_QWORD *)(v18 + 16);
  v22 = v18 + 24;
  v21 = *(_QWORD *)(v18 + 24);
  v20 = *(_QWORD *)(v22 + 8);
  if (v20 && *(_QWORD *)(v20 + 16))
  {
    v23 = v20;
  }
  else
  {
    v24 = sub_100053F2C((uint64_t *)&unk_1005D2A90);
    v25 = swift_allocObject(v24, 48, 7);
    v20 = v25;
    *(_OWORD *)(v25 + 16) = xmmword_100481740;
    if (v21)
      v26 = v19;
    else
      v26 = 0;
    v27 = 0xE000000000000000;
    if (v21)
      v27 = v21;
    *(_QWORD *)(v25 + 32) = v26;
    *(_QWORD *)(v25 + 40) = v27;
    v23 = v21;
  }
  v28 = swift_bridgeObjectRetain(v23);
  if ((v38 & 0x100000000) != 0)
  {
    v29 = swift_bridgeObjectRelease(v20);
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v12, a1, v9, v29);
    v30 = type metadata accessor for FMIPAssignSafeLocationToAllSupportedBeaconsAction(0);
    swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
    v31 = FMIPAssignSafeLocationToAllSupportedBeaconsAction.init(location:)(v12);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v12, a1, v9, v28);
    v32 = type metadata accessor for FMIPAssignMultipleSafeLocationsItemAction(0);
    swift_allocObject(v32, *(unsigned int *)(v32 + 48), *(unsigned __int16 *)(v32 + 52));
    v31 = FMIPAssignMultipleSafeLocationsItemAction.init(beaconUUIDs:location:)(v20, v12, v33);
  }
  v34 = v31;
  v35 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v5 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator) + 24)
                  + 32);
  v36 = swift_allocObject(&unk_10054B9E0, 32, 7);
  *(_QWORD *)(v36 + 16) = a3;
  *(_QWORD *)(v36 + 24) = a4;
  swift_retain(v35);
  swift_retain(a4);
  sub_1000B1B20(v34, (uint64_t)sub_1001D431C, v36);
  swift_release(v34);
  swift_release(v35);
  *(_QWORD *)&result = swift_release(v36).n128_u64[0];
  return result;
}

uint64_t sub_1001C30D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(BOOL))
{
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v7 = type metadata accessor for Logger(0);
  sub_100056D88(v7, (uint64_t)qword_1005F5748);
  swift_errorRetain(a1);
  v8 = swift_errorRetain(a1);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v18 = a1;
    v19 = v12;
    *(_DWORD *)v11 = 136315138;
    swift_errorRetain(a1);
    v13 = sub_100053F2C(&qword_1005D7E40);
    v14 = String.init<A>(describing:)(&v18, v13);
    v16 = v15;
    v18 = sub_100056DA0(v14, v15, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19);
    swift_bridgeObjectRelease(v16);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "FMDeivceDetailViewController: Add Safe Location completed with error: %s", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }

  return a5(a1 == 0);
}

void sub_1001C32B0()
{
  char *v0;
  char *v1;
  void (*v2)(void ***, _QWORD);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  void *v12;
  id v13;
  Swift::String v14;
  Swift::String_optional v15;
  Swift::String v16;
  Swift::String v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  Swift::String v28;
  Swift::String_optional v29;
  Swift::String v30;
  void *object;
  uint64_t v32;
  NSString v33;
  void *v34;
  void *v35;
  id v36;
  Swift::String v37;
  Swift::String_optional v38;
  Swift::String v39;
  void *v40;
  NSString v41;
  NSString v42;
  id v43;
  void *v44;
  id v45;
  Swift::String v46;
  Swift::String_optional v47;
  Swift::String v48;
  void *v49;
  uint64_t v50;
  NSString v51;
  void *v52;
  id v53;
  id v54;
  Swift::String v55;
  Swift::String v56;
  void *v57;
  NSString v58;
  void *v59;
  id v60;
  id v61;
  char *v62;
  char *v63;
  id v64;
  void **aBlock;
  unint64_t v66;
  void (*v67)(uint64_t, void *);
  void *v68;
  uint64_t (*v69)(uint64_t);
  uint64_t v70;
  Swift::String v71;
  Swift::String v72;
  Swift::String v73;
  Swift::String v74;
  Swift::String v75;

  v1 = v0;
  v2 = (void (*)(void ***, _QWORD))sub_100197D44((uint64_t)&aBlock);
  v4 = v3;
  v5 = type metadata accessor for FMIPSeparationEvent(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
    FMIPSeparationEvent.addSafeLocationTapped.setter(1);
  v2(&aBlock, 0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100056D88(v6, (uint64_t)qword_1005F5748);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "FMDeviceDetailContentViewController: Left Behind Button Toggled", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  if (v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pendingSafeLocationAdded] == 1)
  {
    v11 = swift_allocObject(&unk_10054B5D0, 24, 7);
    swift_unknownObjectWeakInit(v11 + 16);
    sub_1000A0F40((uint64_t)sub_1001D40A4, v11, 0, 0);
    swift_release(v11);
  }
  else
  {
    v12 = (void *)objc_opt_self(NSBundle);
    v13 = objc_msgSend(v12, "mainBundle");
    v14._countAndFlagsBits = 0xD00000000000002ALL;
    v71._object = (void *)0x80000001004A91F0;
    v14._object = (void *)0x80000001004B2240;
    v15.value._countAndFlagsBits = 0xD000000000000016;
    v15.value._object = (void *)0x80000001004A91D0;
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    v71._countAndFlagsBits = 0xD00000000000001BLL;
    v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, v15, (NSBundle)v13, v16, v71);

    v18 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
    v19 = swift_allocObject(v18, 72, 7);
    *(_OWORD *)(v19 + 16) = xmmword_100481740;
    v21 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_separationAddress];
    v20 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_separationAddress + 8];
    *(_QWORD *)(v19 + 56) = &type metadata for String;
    *(_QWORD *)(v19 + 64) = sub_100071E88();
    if (v20)
      v22 = v21;
    else
      v22 = 0;
    v23 = 0xE000000000000000;
    if (v20)
      v23 = v20;
    *(_QWORD *)(v19 + 32) = v22;
    *(_QWORD *)(v19 + 40) = v23;
    swift_bridgeObjectRetain(v20);
    String.init(format:_:)(v17._countAndFlagsBits, v17._object, v19);
    v25 = v24;
    v26 = v12;
    v27 = objc_msgSend(v12, "mainBundle", swift_bridgeObjectRelease(v17._object).n128_f64[0]);
    v28._countAndFlagsBits = 0xD00000000000002DLL;
    v72._object = (void *)0x80000001004A91F0;
    v28._object = (void *)0x80000001004B2270;
    v29.value._countAndFlagsBits = 0xD000000000000016;
    v29.value._object = (void *)0x80000001004A91D0;
    v30._countAndFlagsBits = 0;
    v30._object = (void *)0xE000000000000000;
    v72._countAndFlagsBits = 0xD00000000000001BLL;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, v29, (NSBundle)v27, v30, v72)._object;

    v32 = swift_allocObject(&unk_10054B788, 24, 7);
    *(_QWORD *)(v32 + 16) = v1;
    v62 = v1;
    v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v69 = sub_1001D4234;
    v70 = v32;
    aBlock = _NSConcreteStackBlock;
    v66 = 1107296256;
    v67 = sub_100008B40;
    v68 = &unk_10054B7A0;
    v34 = _Block_copy(&aBlock);
    swift_release(v70);
    v61 = (id)objc_opt_self(UIAlertAction);
    v64 = objc_msgSend(v61, "actionWithTitle:style:handler:", v33, 0, v34);
    _Block_release(v34);

    v35 = v26;
    v36 = objc_msgSend(v26, "mainBundle");
    v37._countAndFlagsBits = 0xD000000000000030;
    v73._object = (void *)0x80000001004A91F0;
    v37._object = (void *)0x80000001004B22A0;
    v38.value._countAndFlagsBits = 0xD000000000000016;
    v38.value._object = (void *)0x80000001004A91D0;
    v39._countAndFlagsBits = 0;
    v39._object = (void *)0xE000000000000000;
    v73._countAndFlagsBits = 0xD00000000000001BLL;
    v40 = NSLocalizedString(_:tableName:bundle:value:comment:)(v37, v38, (NSBundle)v36, v39, v73)._object;

    v41 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v25);
    v42 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v40);
    v43 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v41, v42, 1);

    objc_msgSend(v43, "addAction:", v64);
    v44 = v35;
    v45 = objc_msgSend(v35, "mainBundle");
    v46._countAndFlagsBits = 0xD000000000000034;
    v74._object = (void *)0x80000001004A91F0;
    v46._object = (void *)0x80000001004B22E0;
    v47.value._countAndFlagsBits = 0xD000000000000016;
    v47.value._object = (void *)0x80000001004A91D0;
    v48._countAndFlagsBits = 0;
    v48._object = (void *)0xE000000000000000;
    v74._countAndFlagsBits = 0xD00000000000001BLL;
    v49 = NSLocalizedString(_:tableName:bundle:value:comment:)(v46, v47, (NSBundle)v45, v48, v74)._object;

    v50 = swift_allocObject(&unk_10054B7D8, 24, 7);
    *(_QWORD *)(v50 + 16) = v62;
    v63 = v62;
    v51 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v49);
    v69 = sub_1001D4264;
    v70 = v50;
    aBlock = _NSConcreteStackBlock;
    v66 = 1107296256;
    v67 = sub_100008B40;
    v68 = &unk_10054B7F0;
    v52 = _Block_copy(&aBlock);
    v53 = objc_msgSend(v61, "actionWithTitle:style:handler:", v51, 0, v52, swift_release(v70).n128_f64[0]);
    _Block_release(v52);

    objc_msgSend(v43, "addAction:", v53);
    aBlock = 0;
    v66 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    v54 = objc_msgSend(v44, "mainBundle", swift_bridgeObjectRelease(v66).n128_f64[0]);
    v55._countAndFlagsBits = 0xD000000000000013;
    v75._countAndFlagsBits = 0xD000000000000025;
    v75._object = (void *)0x80000001004A73C0;
    v55._object = (void *)0x80000001004A73A0;
    v56._countAndFlagsBits = 0;
    v56._object = (void *)0xE000000000000000;
    v57 = NSLocalizedString(_:tableName:bundle:value:comment:)(v55, (Swift::String_optional)0, (NSBundle)v54, v56, v75)._object;

    v58 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v57);
    v69 = (uint64_t (*)(uint64_t))State.rawValue.getter;
    v70 = 0;
    aBlock = _NSConcreteStackBlock;
    v66 = 1107296256;
    v67 = sub_100008B40;
    v68 = &unk_10054B818;
    v59 = _Block_copy(&aBlock);
    v60 = objc_msgSend(v61, "actionWithTitle:style:handler:", v58, 0, v59, swift_release(v70).n128_f64[0]);
    _Block_release(v59);

    objc_msgSend(v43, "addAction:", v60);
    objc_msgSend(v63, "presentViewController:animated:completion:", v43, 1, 0);

  }
}

void sub_1001C3A28(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  char *v20;
  __n128 v21;
  _BYTE v22[32];

  v2 = sub_100053F2C((uint64_t *)&unk_1005E2270);
  __chkstk_darwin(v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for FMIPSafeLocation(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_100197D44((uint64_t)v22);
  v11 = v10;
  v12 = type metadata accessor for FMIPSeparationEvent(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
    FMIPSeparationEvent.addToAllTapped.setter(1);
  ((void (*)(_BYTE *, _QWORD))v9)(v22, 0);
  v13 = (uint64_t)&a1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pendingSafeLocation];
  swift_beginAccess(&a1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pendingSafeLocation], v22, 0, 0);
  sub_100007464(v13, (uint64_t)v4, (uint64_t *)&unk_1005E2270);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1000051EC((uint64_t)v4, (uint64_t *)&unk_1005E2270);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v14 = type metadata accessor for Logger(0);
    v15 = sub_100056D88(v14, (uint64_t)qword_1005F5748);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.default.getter(v16);
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "FMDeviceDetailContentViewController: No pending safe location", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }

  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(v8, v4, v5);
    v19 = swift_allocObject(&unk_10054B968, 24, 7);
    *(_QWORD *)(v19 + 16) = a1;
    v20 = a1;
    sub_1001C2E14((uint64_t)v8, 1, (uint64_t)sub_1001D42EC, v19);
    v21 = swift_release(v19);
    (*(void (**)(_BYTE *, uint64_t, __n128))(v6 + 8))(v8, v5, v21);
  }
}

uint64_t sub_1001C3C98(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[5];
  uint64_t v29;

  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v27 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for DispatchQoS(0);
  v12 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v16 = (void *)static OS_dispatch_queue.main.getter(v15);
  v17 = swift_allocObject(a3, 24, 7);
  *(_QWORD *)(v17 + 16) = a2;
  aBlock[4] = a4;
  v29 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = a5;
  v18 = _Block_copy(aBlock);
  v19 = v29;
  v20 = a2;
  swift_release(v19);
  static DispatchQoS.unspecified.getter(v21);
  aBlock[0] = _swiftEmptyArrayStorage;
  v22 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v23 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v24 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v23, v24, v9, v22);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v11, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v26);
}

void sub_1001C3E98(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  char *v16;
  __n128 v17;
  char v19[24];

  v2 = sub_100053F2C((uint64_t *)&unk_1005E2270);
  __chkstk_darwin(v2);
  v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for FMIPSafeLocation(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = (uint64_t)&a1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pendingSafeLocation];
  swift_beginAccess(&a1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pendingSafeLocation], v19, 0, 0);
  sub_100007464(v9, (uint64_t)v4, (uint64_t *)&unk_1005E2270);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1000051EC((uint64_t)v4, (uint64_t *)&unk_1005E2270);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v10 = type metadata accessor for Logger(0);
    v11 = sub_100056D88(v10, (uint64_t)qword_1005F5748);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.default.getter(v12);
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "FMDeviceDetailContentViewController: No pending safe location", v14, 2u);
      swift_slowDealloc(v14, -1, -1);
    }

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    v15 = swift_allocObject(&unk_10054B8A0, 24, 7);
    *(_QWORD *)(v15 + 16) = a1;
    v16 = a1;
    sub_1001C2E14((uint64_t)v8, 0, (uint64_t)sub_1001D429C, v15);
    v17 = swift_release(v15);
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v17);
  }
}

double sub_1001C40BC(char a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  double result;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  void *v33;
  id v34;
  Swift::String v35;
  Swift::String_optional v36;
  Swift::String v37;
  Swift::String v38;
  id v39;
  Swift::String v40;
  Swift::String_optional v41;
  Swift::String v42;
  Swift::String v43;
  id v44;
  Swift::String v45;
  Swift::String v46;
  Swift::String v47;
  uint64_t v48;
  void (**v49)(char *, uint64_t);
  void **aBlock;
  unint64_t v51;
  uint64_t (*v52)(uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  Swift::String v56;
  Swift::String v57;
  Swift::String v58;

  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v49 = *(void (***)(char *, uint64_t))(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    v17 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
    v48 = static OS_dispatch_queue.main.getter(v17);
    v18 = swift_allocObject(a3, 24, 7);
    *(_QWORD *)(v18 + 16) = a2;
    v54 = a4;
    v55 = v18;
    aBlock = _NSConcreteStackBlock;
    v51 = 1107296256;
    v52 = sub_100037DF8;
    v53 = a5;
    v19 = _Block_copy(&aBlock);
    v20 = v55;
    v21 = a2;
    swift_release(v20);
    static DispatchQoS.unspecified.getter(v22);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v23 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v24 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
    v25 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v24, v25, v10, v23);
    v26 = (void *)v48;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v16, v12, v19);
    _Block_release(v19);

    v49[1](v12, v10);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  else
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v49 = (void (**)(char *, uint64_t))a2;
    v28 = type metadata accessor for Logger(0);
    v29 = sub_100056D88(v28, (uint64_t)qword_1005F5748);
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.default.getter(v30);
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "FMDeviceDetailContentViewController: Add Safe Location failed", v32, 2u);
      swift_slowDealloc(v32, -1, -1);
    }

    v33 = (void *)objc_opt_self(NSBundle);
    v34 = objc_msgSend(v33, "mainBundle");
    v35._countAndFlagsBits = 0xD00000000000001ELL;
    v56._object = (void *)0x80000001004A91F0;
    v35._object = (void *)0x80000001004B2320;
    v36.value._countAndFlagsBits = 0xD000000000000016;
    v36.value._object = (void *)0x80000001004A91D0;
    v37._countAndFlagsBits = 0;
    v37._object = (void *)0xE000000000000000;
    v56._countAndFlagsBits = 0xD00000000000001BLL;
    v38 = NSLocalizedString(_:tableName:bundle:value:comment:)(v35, v36, (NSBundle)v34, v37, v56);

    v39 = objc_msgSend(v33, "mainBundle");
    v40._countAndFlagsBits = 0xD00000000000002ALL;
    v57._object = (void *)0x80000001004A91F0;
    v40._object = (void *)0x80000001004B2340;
    v41.value._countAndFlagsBits = 0xD000000000000016;
    v41.value._object = (void *)0x80000001004A91D0;
    v42._countAndFlagsBits = 0;
    v42._object = (void *)0xE000000000000000;
    v57._countAndFlagsBits = 0xD00000000000001BLL;
    v43 = NSLocalizedString(_:tableName:bundle:value:comment:)(v40, v41, (NSBundle)v39, v42, v57);

    aBlock = 0;
    v51 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    v44 = objc_msgSend(v33, "mainBundle", swift_bridgeObjectRelease(v51).n128_f64[0]);
    v58._countAndFlagsBits = 0xD000000000000021;
    v58._object = (void *)0x80000001004A5EE0;
    v45._countAndFlagsBits = 0x4F545455425F4B4FLL;
    v45._object = (void *)0xEF454C5449545F4ELL;
    v46._countAndFlagsBits = 0;
    v46._object = (void *)0xE000000000000000;
    v47 = NSLocalizedString(_:tableName:bundle:value:comment:)(v45, (Swift::String_optional)0, (NSBundle)v44, v46, v58);

    sub_100228360(v38._countAndFlagsBits, (uint64_t)v38._object, v43._countAndFlagsBits, (uint64_t)v43._object, v47._countAndFlagsBits, (uint64_t)v47._object);
    swift_bridgeObjectRelease(v38._object);
    swift_bridgeObjectRelease(v43._object);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v47._object).n128_u64[0];
  }
  return result;
}

uint64_t sub_1001C4558(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _BYTE v8[24];

  v2 = type metadata accessor for FMDeviceDetailViewModel(0);
  __chkstk_darwin(v2);
  v4 = &v8[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  *(_BYTE *)(a1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pendingSafeLocationAdded) = 1;
  v5 = *(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource)
     + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
  swift_beginAccess(v5, v8, 0, 0);
  sub_10004FC74(v5, (uint64_t)v4, type metadata accessor for FMDeviceDetailViewModel);
  sub_1001B7378();
  return sub_10004FCB8((uint64_t)v4, type metadata accessor for FMDeviceDetailViewModel);
}

void sub_1001C4654()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  int v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  void **v41;
  void **v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  __n128 v46;
  void (*v47)(char *, uint64_t, __n128);
  void **v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  _BOOL4 v55;
  uint8_t *v56;
  void **v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  __n128 v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  id v66;
  _QWORD *v67;
  id v68;
  id v69;
  id v70;
  id v71;
  uint64_t v72;
  id v73;
  id v74;
  double v75;
  double v76;
  double v77;
  double v78;
  void *v79;
  id v80;
  Swift::String v81;
  Swift::String v82;
  void *object;
  id v84;
  Swift::String v85;
  Swift::String v86;
  void *v87;
  NSString v88;
  NSString v89;
  char *v90;
  id v91;
  Swift::String v92;
  Swift::String v93;
  void *v94;
  NSString v95;
  void *v96;
  id v97;
  id v98;
  Swift::String v99;
  Swift::String v100;
  void *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  id v108;
  NSString v109;
  void *v110;
  id v111;
  char *v112;
  uint64_t v113;
  uint64_t (*v114)(char *, char *, uint64_t);
  uint64_t v115;
  void (*v116)(uint64_t, char *, uint64_t);
  uint64_t v117;
  char *v118;
  char *v119;
  char *v120;
  char *v121;
  void **aBlock;
  unint64_t v123;
  void (*v124)(uint64_t, void *);
  void *v125;
  double (*v126)(uint64_t);
  uint64_t v127;
  uint64_t v128;
  _BYTE v129[32];
  char v130[32];
  Swift::String v131;
  Swift::String v132;
  Swift::String v133;
  Swift::String v134;

  v1 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v1);
  v3 = (char *)&v113 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FMIPDevice(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = __chkstk_darwin(v4);
  v116 = (void (*)(uint64_t, char *, uint64_t))((char *)&v113 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __chkstk_darwin(v7);
  v119 = (char *)&v113 - v9;
  v10 = __chkstk_darwin(v8);
  v118 = (char *)&v113 - v11;
  __chkstk_darwin(v10);
  v121 = (char *)&v113 - v12;
  v117 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator;
  v13 = *(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator] + 24);
  v14 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource;
  v120 = v0;
  v15 = (uint64_t *)(*(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource]
                  + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel);
  swift_beginAccess(v15, v130, 0, 0);
  v16 = *v15;
  v17 = v15[1];
  swift_retain(v13);
  swift_bridgeObjectRetain(v17);
  v19 = FMIPManager.devices.getter(v18);
  swift_bridgeObjectRetain(v17);
  v20 = sub_100414D38(v19, v16, v17);
  swift_bridgeObjectRelease(v19);
  v21 = swift_bridgeObjectRelease(v17);
  if (v20[2])
  {
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16))(v3, (unint64_t)v20+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), v4, v21);
    v22 = 0;
  }
  else
  {
    v22 = 1;
  }
  v23 = v4;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, v22, 1, v4);
  swift_release(v13);
  swift_bridgeObjectRelease(v20);
  v24 = swift_bridgeObjectRelease(v17);
  v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v5 + 48))(v3, 1, v4, v24);
  v26 = v121;
  if (v25 == 1)
  {
    sub_1000051EC((uint64_t)v3, &qword_1005D6710);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v27 = type metadata accessor for Logger(0);
    v28 = sub_100056D88(v27, (uint64_t)qword_1005F5748);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.error.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "FMDeviceDetailContentViewController: cannot remove an unknown device", v31, 2u);
      swift_slowDealloc(v31, -1, -1);
    }

  }
  else
  {
    v32 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v32(v121, v3, v23);
    v33 = *(_QWORD *)&v120[v14] + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
    swift_beginAccess(v33, v129, 0, 0);
    if ((*(_BYTE *)(v33 + *(int *)(type metadata accessor for FMDeviceDetailViewModel(0) + 88) + 2) & 0x10) != 0)
    {
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v116 = (void (*)(uint64_t, char *, uint64_t))v32;
      v49 = type metadata accessor for Logger(0);
      sub_100056D88(v49, (uint64_t)qword_1005F5748);
      v50 = v118;
      v114 = *(uint64_t (**)(char *, char *, uint64_t))(v5 + 16);
      v51 = v114(v118, v26, v23);
      v52 = Logger.logObject.getter(v51);
      v117 = v5;
      v53 = v52;
      v54 = static os_log_type_t.default.getter(v52);
      v55 = os_log_type_enabled(v53, v54);
      v115 = v23;
      if (v55)
      {
        v56 = (uint8_t *)swift_slowAlloc(12, -1);
        v57 = (void **)swift_slowAlloc(32, -1);
        aBlock = v57;
        *(_DWORD *)v56 = 136315138;
        v58 = v117;
        v59 = FMIPDevice.name.getter(v57);
        v61 = v60;
        v128 = sub_100056DA0(v59, v60, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v128, v129);
        v62 = swift_bridgeObjectRelease(v61);
        (*(void (**)(char *, uint64_t, __n128))(v58 + 8))(v118, v23, v62);
        _os_log_impl((void *)&_mh_execute_header, v53, v54, "FMDeviceDetailContentViewController: Remove button selected but needs repair for device: %s", v56, 0xCu);
        swift_arrayDestroy(v57, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v57, -1, -1);
        swift_slowDealloc(v56, -1, -1);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v117 + 8))(v50, v23);
      }

      aBlock = 0;
      v123 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(v123);
      v79 = (void *)objc_opt_self(NSBundle);
      v80 = objc_msgSend(v79, "mainBundle");
      v81._countAndFlagsBits = 0xD000000000000019;
      v131._countAndFlagsBits = 0xD00000000000002BLL;
      v131._object = (void *)0x80000001004B20F0;
      v81._object = (void *)0x80000001004B20D0;
      v82._countAndFlagsBits = 0;
      v82._object = (void *)0xE000000000000000;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v81, (Swift::String_optional)0, (NSBundle)v80, v82, v131)._object;

      aBlock = 0;
      v123 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      v84 = objc_msgSend(v79, "mainBundle", swift_bridgeObjectRelease(v123).n128_f64[0]);
      v85._countAndFlagsBits = 0xD00000000000001CLL;
      v132._countAndFlagsBits = 0xD00000000000002ELL;
      v132._object = (void *)0x80000001004B2140;
      v85._object = (void *)0x80000001004B2120;
      v86._countAndFlagsBits = 0;
      v86._object = (void *)0xE000000000000000;
      v87 = NSLocalizedString(_:tableName:bundle:value:comment:)(v85, (Swift::String_optional)0, (NSBundle)v84, v86, v132)._object;

      v88 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(object);
      v89 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v87);
      v90 = (char *)objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v88, v89, 1);
      v118 = v90;

      aBlock = 0;
      v123 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      v91 = objc_msgSend(v79, "mainBundle", swift_bridgeObjectRelease(v123).n128_f64[0]);
      v133._countAndFlagsBits = 0xD000000000000025;
      v133._object = (void *)0x80000001004A73C0;
      v92._object = (void *)0x80000001004A73A0;
      v92._countAndFlagsBits = 0xD000000000000013;
      v93._countAndFlagsBits = 0;
      v93._object = (void *)0xE000000000000000;
      v94 = NSLocalizedString(_:tableName:bundle:value:comment:)(v92, (Swift::String_optional)0, (NSBundle)v91, v93, v133)._object;

      v95 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v94);
      v96 = (void *)objc_opt_self(UIAlertAction);
      v97 = objc_msgSend(v96, "actionWithTitle:style:handler:", v95, 1, 0);

      objc_msgSend(v90, "addAction:", v97);
      aBlock = 0;
      v123 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      v98 = objc_msgSend(v79, "mainBundle", swift_bridgeObjectRelease(v123).n128_f64[0]);
      v99._countAndFlagsBits = 0xD000000000000015;
      v134._countAndFlagsBits = 0xD000000000000027;
      v134._object = (void *)0x80000001004A7370;
      v99._object = (void *)0x80000001004A7350;
      v100._countAndFlagsBits = 0;
      v100._object = (void *)0xE000000000000000;
      v101 = NSLocalizedString(_:tableName:bundle:value:comment:)(v99, (Swift::String_optional)0, (NSBundle)v98, v100, v134)._object;

      v102 = v119;
      v26 = v121;
      v103 = v115;
      v114(v119, v121, v115);
      v104 = *(unsigned __int8 *)(v117 + 80);
      v105 = (v104 + 24) & ~v104;
      v106 = swift_allocObject(&unk_10054B710, v105 + v6, v104 | 7);
      v107 = v120;
      *(_QWORD *)(v106 + 16) = v120;
      v116(v106 + v105, v102, v103);
      v108 = v107;
      v109 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v101);
      v126 = sub_1001D4118;
      v127 = v106;
      aBlock = _NSConcreteStackBlock;
      v123 = 1107296256;
      v124 = sub_100008B40;
      v125 = &unk_10054B728;
      v110 = _Block_copy(&aBlock);
      v111 = objc_msgSend(v96, "actionWithTitle:style:handler:", v109, 0, v110, swift_release(v127).n128_f64[0]);
      _Block_release(v110);

      v112 = v118;
      objc_msgSend(v118, "addAction:", v111);

      objc_msgSend(v108, "presentViewController:animated:completion:", v112, 1, 0);
      v47 = *(void (**)(char *, uint64_t, __n128))(v117 + 8);
      v23 = v103;
    }
    else
    {
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v34 = type metadata accessor for Logger(0);
      sub_100056D88(v34, (uint64_t)qword_1005F5748);
      v35 = *(char **)(v5 + 16);
      v36 = (char *)v116;
      v37 = ((uint64_t (*)(_QWORD, char *, uint64_t))v35)(v116, v26, v23);
      v38 = Logger.logObject.getter(v37);
      v39 = static os_log_type_t.default.getter(v38);
      if (os_log_type_enabled(v38, v39))
      {
        v40 = (uint8_t *)swift_slowAlloc(12, -1);
        v41 = (void **)swift_slowAlloc(32, -1);
        v118 = v35;
        v42 = v41;
        aBlock = v41;
        *(_DWORD *)v40 = 136315138;
        v43 = FMIPDevice.name.getter(v41);
        v45 = v44;
        v128 = sub_100056DA0(v43, v44, (uint64_t *)&aBlock);
        v26 = v121;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v128, v129);
        v46 = swift_bridgeObjectRelease(v45);
        v47 = *(void (**)(char *, uint64_t, __n128))(v5 + 8);
        v47(v36, v23, v46);
        _os_log_impl((void *)&_mh_execute_header, v38, v39, "FMDeviceDetailContentViewController: Remove Accessory Device %s", v40, 0xCu);
        swift_arrayDestroy(v42, 1, (char *)&type metadata for Any + 8);
        v48 = v42;
        v35 = v118;
        swift_slowDealloc(v48, -1, -1);
        swift_slowDealloc(v40, -1, -1);
      }
      else
      {
        v47 = *(void (**)(char *, uint64_t, __n128))(v5 + 8);
        ((void (*)(char *, uint64_t))v47)(v36, v23);
      }

      v63 = (uint64_t)v119;
      v64 = v120;
      v65 = *(_QWORD *)&v120[v117];
      ((void (*)(char *, char *, uint64_t))v35)(v119, v26, v23);
      v66 = objc_allocWithZone((Class)type metadata accessor for FMRemoveDeviceViewController(0));
      v67 = (_QWORD *)swift_retain(v65);
      v68 = sub_100445F98(v67, v63);
      v69 = objc_allocWithZone((Class)type metadata accessor for FMTransparentNavigationController());
      v70 = v68;
      v71 = sub_1000A750C(v70, 2);
      objc_msgSend(v71, "setDelegate:", v71);
      v72 = qword_1005D1E80;
      v73 = v71;
      if (v72 != -1)
        swift_once(&qword_1005D1E80, sub_100008974);
      v74 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      objc_msgSend(v74, "bounds");
      v76 = v75;
      v78 = v77;

      objc_msgSend(v73, "setPreferredContentSize:", fmin(v76, 520.0), fmin(v78, 720.0));
      objc_msgSend(v64, "presentViewController:animated:completion:", v73, 1, 0);

    }
    ((void (*)(char *, uint64_t))v47)(v26, v23);
  }
}

double sub_1001C527C(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;

  v5 = type metadata accessor for FMIPDevice(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&a2[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator] + 24)
                 + 32);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a3, v5);
  v10 = *(unsigned __int8 *)(v6 + 80);
  v11 = (v10 + 16) & ~v10;
  v12 = (v7 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = swift_allocObject(&unk_10054B760, v12 + 8, v10 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v13 + v11, v8, v5);
  *(_QWORD *)(v13 + v12) = a2;
  swift_retain(v9);
  sub_1000B78F8(a3, (uint64_t)a2, (uint64_t)sub_1001D41CC, v13);
  swift_release(v13);
  *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  return result;
}

void sub_1001C53A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  __n128 v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  __n128 v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  void *v59;
  id v60;
  Swift::String v61;
  Swift::String v62;
  void *object;
  id v64;
  Swift::String v65;
  Swift::String v66;
  void *v67;
  NSString v68;
  NSString v69;
  id v70;
  id v71;
  Swift::String v72;
  Swift::String v73;
  void *v74;
  NSString v75;
  id v76;
  uint64_t v77;
  _QWORD v78[3];
  char v79[8];
  _QWORD v80[3];
  char v81[8];
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  Swift::String v86;
  Swift::String v87;
  Swift::String v88;

  v8 = type metadata accessor for FMIPDevice(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v78[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v78[-1] - v14;
  __chkstk_darwin(v13);
  v17 = (char *)&v78[-1] - v16;
  if (!a2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(AKAppleIDAuthenticationErrorDomain);
    swift_bridgeObjectRelease(v26);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v27 = type metadata accessor for Logger(0);
    sub_100056D88(v27, (uint64_t)qword_1005F5748);
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v17, a4, v8);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.default.getter(v29);
    if (!os_log_type_enabled(v29, v30))
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
      goto LABEL_29;
    }
    v31 = (uint8_t *)swift_slowAlloc(12, -1);
    v32 = swift_slowAlloc(32, -1);
    v82 = v32;
    *(_DWORD *)v31 = 136315138;
    v33 = FMIPDevice.name.getter(v32);
    v35 = v34;
    v84 = sub_100056DA0(v33, v34, &v82);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, &v85);
    v36 = swift_bridgeObjectRelease(v35);
    (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v17, v8, v36);
    v37 = "FMDeviceDetailContentViewController: Repair device %s succeeded";
LABEL_20:
    _os_log_impl((void *)&_mh_execute_header, v29, v30, v37, v31, 0xCu);
    swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1, -1);
    swift_slowDealloc(v31, -1, -1);
LABEL_29:

    return;
  }
  swift_getErrorValue(a2, v79, v78);
  v18 = sub_10021EF24(v78[1], v78[2]);
  v20 = v19;
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(AKAppleIDAuthenticationErrorDomain);
  v23 = v22;
  if (v20)
  {
    if (v18 == v21 && v20 == v22)
    {
      swift_bridgeObjectRelease_n(v20, 2);
    }
    else
    {
      v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v21, v22, 0);
      swift_bridgeObjectRelease(v20);
      swift_bridgeObjectRelease(v23);
      if ((v25 & 1) == 0)
        goto LABEL_21;
    }
    swift_getErrorValue(a2, v81, v80);
    if (sub_10021EE24(v80[1], v80[2]) == (id)-7003)
    {
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v38 = type metadata accessor for Logger(0);
      sub_100056D88(v38, (uint64_t)qword_1005F5748);
      v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a4, v8);
      v29 = Logger.logObject.getter(v39);
      v30 = static os_log_type_t.default.getter(v29);
      if (!os_log_type_enabled(v29, v30))
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
        goto LABEL_29;
      }
      v31 = (uint8_t *)swift_slowAlloc(12, -1);
      v32 = swift_slowAlloc(32, -1);
      v82 = v32;
      *(_DWORD *)v31 = 136315138;
      v40 = FMIPDevice.name.getter(v32);
      v42 = v41;
      v84 = sub_100056DA0(v40, v41, &v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, &v85);
      v43 = swift_bridgeObjectRelease(v42);
      (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v12, v8, v43);
      v37 = "FMDevicesListDataSource: Repair device %s, user cancelled auth.";
      goto LABEL_20;
    }
  }
  else
  {
    swift_bridgeObjectRelease(v22);
  }
LABEL_21:
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v44 = type metadata accessor for Logger(0);
  sub_100056D88(v44, (uint64_t)qword_1005F5748);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v15, a4, v8);
  swift_errorRetain(a2);
  v45 = swift_errorRetain(a2);
  v46 = Logger.logObject.getter(v45);
  v47 = static os_log_type_t.error.getter(v46);
  if (os_log_type_enabled(v46, v47))
  {
    v48 = swift_slowAlloc(22, -1);
    v49 = swift_slowAlloc(64, -1);
    v77 = v49;
    v82 = v49;
    *(_DWORD *)v48 = 136315394;
    v50 = FMIPDevice.name.getter(v49);
    v52 = v51;
    v84 = sub_100056DA0(v50, v51, &v82);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, &v85);
    v53 = swift_bridgeObjectRelease(v52);
    (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v15, v8, v53);
    *(_WORD *)(v48 + 12) = 2080;
    v84 = a2;
    swift_errorRetain(a2);
    v54 = sub_100053F2C(&qword_1005D7E40);
    v55 = String.init<A>(describing:)(&v84, v54);
    v57 = v56;
    v84 = sub_100056DA0(v55, v56, &v82);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, &v85);
    swift_bridgeObjectRelease(v57);
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    _os_log_impl((void *)&_mh_execute_header, v46, v47, "FMDeviceDetailContentViewController: Repair device %s failed with error: %s", (uint8_t *)v48, 0x16u);
    v58 = v77;
    swift_arrayDestroy(v77, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v58, -1, -1);
    swift_slowDealloc(v48, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
    swift_errorRelease(a2);
    swift_errorRelease(a2);
  }

  v82 = 0;
  v83 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v83);
  v59 = (void *)objc_opt_self(NSBundle);
  v60 = objc_msgSend(v59, "mainBundle");
  v61._countAndFlagsBits = 0xD00000000000001FLL;
  v86._countAndFlagsBits = 0xD000000000000031;
  v86._object = (void *)0x80000001004B2190;
  v61._object = (void *)0x80000001004B2170;
  v62._countAndFlagsBits = 0;
  v62._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v61, (Swift::String_optional)0, (NSBundle)v60, v62, v86)._object;

  v82 = 0;
  v83 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v64 = objc_msgSend(v59, "mainBundle", swift_bridgeObjectRelease(v83).n128_f64[0]);
  v87._countAndFlagsBits = 0xD000000000000033;
  v87._object = (void *)0x80000001004B2200;
  v65._object = (void *)0x80000001004B21D0;
  v65._countAndFlagsBits = 0xD000000000000021;
  v66._countAndFlagsBits = 0;
  v66._object = (void *)0xE000000000000000;
  v67 = NSLocalizedString(_:tableName:bundle:value:comment:)(v65, (Swift::String_optional)0, (NSBundle)v64, v66, v87)._object;

  v68 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v69 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v67);
  v70 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v68, v69, 1);

  v82 = 0;
  v83 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v71 = objc_msgSend(v59, "mainBundle", swift_bridgeObjectRelease(v83).n128_f64[0]);
  v88._object = (void *)0x80000001004A5EE0;
  v72._countAndFlagsBits = 0x4F545455425F4B4FLL;
  v72._object = (void *)0xEF454C5449545F4ELL;
  v73._countAndFlagsBits = 0;
  v73._object = (void *)0xE000000000000000;
  v88._countAndFlagsBits = 0xD000000000000021;
  v74 = NSLocalizedString(_:tableName:bundle:value:comment:)(v72, (Swift::String_optional)0, (NSBundle)v71, v73, v88)._object;

  v75 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v74);
  v76 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v75, 0, 0);

  objc_msgSend(v70, "addAction:", v76);
  objc_msgSend(a5, "presentViewController:animated:completion:", v70, 1, 0);

}

void sub_1001C5CA4()
{
  sub_1001089F4((uint64_t)&unk_10054B6C0, (uint64_t)sub_1001D40EC, (uint64_t)&unk_10054B6D8);
}

void sub_1001C5CC0()
{
  sub_1001089F4((uint64_t)&unk_10054B670, (uint64_t)sub_1001D40CC, (uint64_t)&unk_10054B688);
}

uint64_t sub_1001C5D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unsigned int *v24;
  char *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v3 = v2;
  v28 = a2;
  v29 = a1;
  v4 = type metadata accessor for FMIPDevice(0);
  v31 = *(_QWORD *)(v4 - 8);
  v32 = v4;
  __chkstk_darwin(v4);
  v30 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FMIPAnalyticsProductType(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FMIPAnalyticsOwnerContext(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FMIPAnalyticsActionType(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for FMIPActionEvent(0);
  v17 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator) + 24);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v28, v13);
  v21 = swift_retain(v20);
  v22 = v29;
  v23 = FMIPDevice.isOwned.getter(v21);
  v24 = (unsigned int *)&enum case for FMIPAnalyticsOwnerContext.owner(_:);
  if ((v23 & 1) == 0)
    v24 = (unsigned int *)&enum case for FMIPAnalyticsOwnerContext.shared(_:);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *v24, v9);
  v25 = v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v30, v22, v32);
  FMIPAnalyticsProductType.init(device:)(v25);
  FMIPActionEvent.init(type:ownerContext:productType:)(v16, v12, v8);
  FMIPManager.enqueue(actionEvent:)(v19);
  swift_release(v20);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v27);
}

void sub_1001C5F3C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource));
  sub_10005E190(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_delegate);
  sub_10005E190(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundDelegate);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_conditionsSubscription));

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_connectionMaterialTask));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_localFindableConnectionMaterialMonitoringSession));

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showContactDetailsWelcomeScreenViewController));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showContactDetailsPhoneNumber
                                      + 8));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_trustedLocationsDetailViewController));

  sub_1000051EC(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundInFlight, (uint64_t *)&unk_1005D3320);
  sub_1000051EC(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_canShowQueueAlert, (uint64_t *)&unk_1005D3320);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_lastPlayAction));
  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_cancelOnlinePlaySoundWorkItem));

  sub_1000051EC(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pendingPlaySoundAnalytics, &qword_1005D9940);
  sub_1000051EC(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pendingSafeLocation, (uint64_t *)&unk_1005E2270);
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_separationAddress
                                      + 8));
  sub_1000051EC(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_separationEvent, &qword_1005E4440);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_geocodingCache));

}

id sub_1001C62B0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMDeviceDetailContentViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1001C665C()
{
  return type metadata accessor for FMDeviceDetailContentViewController(0);
}

uint64_t type metadata accessor for FMDeviceDetailContentViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D9910;
  if (!qword_1005D9910)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMDeviceDetailContentViewController);
  return result;
}

void sub_1001C66A0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[40];
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  char *v15;
  void *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  char *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;

  v10[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v10[1] = &unk_100486AE8;
  v10[2] = &unk_100486AE8;
  v10[3] = &unk_100486B00;
  v10[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v10[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v10[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v10[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v10[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v10[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v10[10] = &unk_100486B00;
  v10[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v10[12] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v10[13] = &unk_100486B00;
  v10[14] = &unk_100486B00;
  v10[15] = &unk_100486B00;
  v10[16] = &unk_100486B00;
  v10[17] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v10[18] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v10[19] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v10[20] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v10[21] = &unk_100486B00;
  v10[22] = &unk_100486B18;
  v10[23] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v10[24] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v10[25] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v10[26] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v10[27] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v10[28] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v10[29] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v10[30] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v10[31] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v10[32] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v10[33] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v10[34] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v10[35] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v10[36] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v10[37] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v10[38] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v10[39] = &unk_100486B00;
  sub_100007178(319, (unint64_t *)&qword_1005D7210, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
  if (v3 <= 0x3F)
  {
    v11 = *(_QWORD *)(v2 - 8) + 64;
    v12 = &unk_100486B30;
    v13 = &unk_100486B30;
    v14 = v11;
    v15 = (char *)&value witness table for Builtin.BridgeObject + 64;
    v16 = &unk_100486B00;
    v17 = (char *)&value witness table for Builtin.UnknownObject + 64;
    sub_100007178(319, &qword_1005D9920, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPAirPodsPlaySoundEvent);
    if (v5 <= 0x3F)
    {
      v18 = *(_QWORD *)(v4 - 8) + 64;
      sub_100007178(319, (unint64_t *)&qword_1005DDF70, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPSafeLocation);
      if (v7 <= 0x3F)
      {
        v19 = *(_QWORD *)(v6 - 8) + 64;
        v20 = &unk_100486B48;
        v21 = &unk_100486B60;
        sub_100007178(319, (unint64_t *)&qword_1005E4420, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPSeparationEvent);
        if (v9 <= 0x3F)
        {
          v22 = *(_QWORD *)(v8 - 8) + 64;
          v23 = (char *)&value witness table for Builtin.NativeObject + 64;
          v24 = &unk_100486B60;
          v25 = &unk_100486B60;
          v26 = &unk_100486B60;
          v27 = &unk_100486B00;
          swift_updateClassMetadata2(a1, 256, 57, v10, a1 + 488);
        }
      }
    }
  }
}

void sub_1001C686C(uint64_t a1, int a2)
{
  sub_1001C1DF8(a2);
}

uint64_t sub_1001C6874(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  sub_100006C5C(0, (unint64_t *)&qword_1005D7A60, NSObject_ptr);
  result = static NSObject.== infix(_:_:)(a1, *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_notificationsOffAttention));
  if ((result & 1) != 0)
    return sub_10037AEB8();
  return result;
}

void sub_1001C68D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int v4;
  uint64_t v5;
  _BYTE v7[24];

  v1 = type metadata accessor for FMDeviceDetailViewModel(0);
  __chkstk_darwin(v1);
  v3 = &v7[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1001C1DF8(0);
  v4 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showSeparationAttention);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showSeparationAttention) = 0;
  if (v4 == 1)
  {
    v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource)
       + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
    swift_beginAccess(v5, v7, 0, 0);
    sub_10004FC74(v5, (uint64_t)v3, type metadata accessor for FMDeviceDetailViewModel);
    sub_10019D3D0((uint64_t)v3);
    sub_10004FCB8((uint64_t)v3, type metadata accessor for FMDeviceDetailViewModel);
  }
}

void sub_1001C69AC()
{
  sub_1001C1DF8(1);
}

double sub_1001C69B8(char *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double result;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = type metadata accessor for FMDeviceDetailViewModel(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100053F2C(&qword_1005D81A0);
  __chkstk_darwin(v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_connectionMaterialTask;
  if (!*(_QWORD *)&a1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_connectionMaterialTask]
    && !*(_QWORD *)&a1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_btDeviceDiscoveryToken])
  {
    v13 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v11, 1, 1, v13);
    sub_10004FC74(a2, (uint64_t)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for FMDeviceDetailViewModel);
    v14 = *(unsigned __int8 *)(v5 + 80);
    v15 = (v14 + 32) & ~v14;
    v16 = (v6 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
    v17 = swift_allocObject(&unk_10054EFA0, v16 + 8, v14 | 7);
    *(_QWORD *)(v17 + 16) = 0;
    *(_QWORD *)(v17 + 24) = 0;
    sub_100051774((uint64_t)v7, v17 + v15, type metadata accessor for FMDeviceDetailViewModel);
    *(_QWORD *)(v17 + v16) = a1;
    v18 = a1;
    v19 = sub_1000F9D6C((uint64_t)v11, (uint64_t)&unk_1005D99C0, v17);
    v20 = *(_QWORD *)&a1[v12];
    *(_QWORD *)&a1[v12] = v19;
    *(_QWORD *)&result = swift_release(v20).n128_u64[0];
  }
  return result;
}

uint64_t sub_1001C6B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v5[32] = a4;
  v5[33] = a5;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v5[34] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[35] = v7;
  v5[36] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v5[37] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v5[38] = v9;
  v5[39] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100053F2C((uint64_t *)&unk_1005D53A0);
  v5[40] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UUID(0);
  v5[41] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v5[42] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[43] = swift_task_alloc(v13);
  v5[44] = swift_task_alloc(v13);
  return swift_task_switch(sub_1001C6C10, 0, 0);
}

uint64_t sub_1001C6C10(__n128 a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(v1 + 256);
  v3 = *(_QWORD *)(v2 + 24);
  if (v3)
  {
    v4 = *(_QWORD *)(v1 + 328);
    v5 = *(_QWORD *)(v1 + 336);
    v6 = *(_QWORD *)(v1 + 320);
    UUID.init(uuidString:)(*(_QWORD *)(v2 + 16), v3, a1);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) != 1)
    {
      v7 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 336) + 32))(*(_QWORD *)(v1 + 352), *(_QWORD *)(v1 + 320), *(_QWORD *)(v1 + 328));
      static Task<>.checkCancellation()(v7);
      *(_QWORD *)(v1 + 360) = 0;
      v8 = type metadata accessor for MainActor(0);
      *(_QWORD *)(v1 + 368) = static MainActor.shared.getter(v8);
      v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
      return swift_task_switch(sub_1001C7058, v9, v10);
    }
    sub_1000051EC(*(_QWORD *)(v1 + 320), (uint64_t *)&unk_1005D53A0);
  }
  v12 = *(_QWORD *)(v1 + 344);
  v14 = *(_QWORD *)(v1 + 312);
  v13 = *(_QWORD *)(v1 + 320);
  v15 = *(_QWORD *)(v1 + 288);
  swift_task_dealloc(*(_QWORD *)(v1 + 352));
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1001C7058()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;

  v1 = v0[33];
  swift_release(v0[46]);
  v2 = *(void **)(v1
                + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_localFindableConnectionMaterialMonitoringSession);
  v0[47] = v2;
  v3 = v2;
  return swift_task_switch(sub_1001C70AC, 0, 0);
}

uint64_t sub_1001C70AC()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  Class isa;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v1 = *(void **)(v0 + 376);
  if (v1)
  {
    v2 = v0 + 16;
    v3 = v1;
    isa = UUID._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)(v0 + 384) = isa;
    *(_QWORD *)(v0 + 56) = v0 + 232;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_1001C7344;
    v5 = swift_continuation_init(v0 + 16, 1);
    *(_QWORD *)(v0 + 176) = _NSConcreteStackBlock;
    v6 = (_QWORD *)(v0 + 176);
    v6[1] = 0x40000000;
    v6[2] = sub_1001C7F08;
    v6[3] = &unk_10054F008;
    v6[4] = v5;
    objc_msgSend(v3, "peripheralConnectionMaterialForAccessoryIdentifier:completion:", isa, v6);
    return swift_continuation_await(v2);
  }
  else
  {
    v25 = *(_QWORD *)(v0 + 328);
    v26 = *(_QWORD *)(v0 + 352);
    v8 = *(_QWORD *)(v0 + 312);
    v9 = *(_QWORD *)(v0 + 288);
    v23 = *(_QWORD *)(v0 + 296);
    v24 = *(_QWORD *)(v0 + 336);
    v10 = *(_QWORD *)(v0 + 272);
    v21 = *(_QWORD *)(v0 + 280);
    v22 = *(_QWORD *)(v0 + 304);
    v11 = *(void **)(v0 + 264);
    v12 = swift_allocObject(&unk_10054EFC8, 24, 7);
    *(_QWORD *)(v12 + 16) = v11;
    *(_QWORD *)(v0 + 112) = sub_1001D5F50;
    *(_QWORD *)(v0 + 120) = v12;
    *(_QWORD *)(v0 + 80) = _NSConcreteStackBlock;
    *(_QWORD *)(v0 + 88) = 1107296256;
    *(_QWORD *)(v0 + 96) = sub_100037DF8;
    *(_QWORD *)(v0 + 104) = &unk_10054EFE0;
    v13 = _Block_copy((const void *)(v0 + 80));
    static DispatchQoS.unspecified.getter(v11);
    *(_QWORD *)(v0 + 216) = _swiftEmptyArrayStorage;
    v14 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v15 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
    v16 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
    dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 216, v15, v16, v10, v14);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v9, v13);
    _Block_release(v13);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v9, v10);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v8, v23);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v26, v25);
    swift_release(*(_QWORD *)(v0 + 120));
    v17 = *(_QWORD *)(v0 + 344);
    v19 = *(_QWORD *)(v0 + 312);
    v18 = *(_QWORD *)(v0 + 320);
    v20 = *(_QWORD *)(v0 + 288);
    swift_task_dealloc(*(_QWORD *)(v0 + 352));
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    swift_task_dealloc(v19);
    swift_task_dealloc(v20);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1001C7344()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 392) = v1;
  if (v1)
    v2 = sub_1001C7B84;
  else
    v2 = sub_1001C73A4;
  return swift_task_switch(v2, 0, 0);
}

uint64_t sub_1001C73A4()
{
  _QWORD *v0;
  os_log_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*__ptr32 *v12)();
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  __n128 v31;
  uint8_t *v32;
  uint64_t v33;
  void *v34;
  void *v35;
  id v36;
  uint64_t v37;
  os_log_t v38;
  unint64_t v39;
  unint64_t v40;
  Class isa;
  id v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  Class v46;
  id v47;
  uint64_t v48;
  void *v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (**aBlock)(os_log_t, _QWORD);
  uint64_t v80;
  NSObject *loga;
  os_log_t log;
  os_log_t logb;
  uint64_t v84;

  v1 = (os_log_t)v0[29];
  v2 = v0[45];

  static Task<>.checkCancellation()();
  if (v2)
  {
    v3 = (void *)v0[47];

    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v4 = type metadata accessor for Logger(0);
    sub_100056D88(v4, (uint64_t)qword_1005F5748);
    swift_errorRetain(v2);
    v5 = swift_errorRetain(v2);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.default.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      loga = v6;
      v8 = (uint8_t *)swift_slowAlloc(12, -1);
      v9 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v8 = 138412290;
      swift_errorRetain(v2);
      v10 = _swift_stdlib_bridgeErrorToNSError(v2);
      v0[28] = v10;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 28, v0 + 29);
      *v9 = v10;
      swift_errorRelease(v2);
      swift_errorRelease(v2);
      _os_log_impl((void *)&_mh_execute_header, loga, v7, "FMDeviceDetailContentViewController: Attempting to get connection material failed with error: %@", v8, 0xCu);
      v11 = sub_100053F2C((uint64_t *)&unk_1005D9680);
      swift_arrayDestroy(v9, 1, v11);
      swift_slowDealloc(v9, -1, -1);
      swift_slowDealloc(v8, -1, -1);

      swift_errorRelease(v2);
    }
    else
    {
      swift_errorRelease(v2);
      swift_errorRelease(v2);
      swift_errorRelease(v2);

    }
    v12 = &off_10047F000;
  }
  else
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v14 = v0[43];
    v13 = v0[44];
    v16 = v0[41];
    v15 = v0[42];
    v17 = type metadata accessor for Logger(0);
    sub_100056D88(v17, (uint64_t)qword_1005F5748);
    v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v14, v13, v16);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.default.getter(v19);
    v21 = os_log_type_enabled(v19, v20);
    v23 = v0[42];
    v22 = v0[43];
    v24 = v0[41];
    log = v1;
    if (v21)
    {
      v25 = (uint8_t *)swift_slowAlloc(12, -1);
      v26 = swift_slowAlloc(32, -1);
      v84 = v26;
      *(_DWORD *)v25 = 136315138;
      v27 = sub_100008000((unint64_t *)&qword_1005DA7C0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v28 = dispatch thunk of CustomStringConvertible.description.getter(v24, v27);
      v30 = v29;
      v0[31] = sub_100056DA0(v28, v29, &v84);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 31, v0 + 32);
      v31 = swift_bridgeObjectRelease(v30);
      (*(void (**)(uint64_t, uint64_t, __n128))(v23 + 8))(v22, v24, v31);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "FMDeviceDetailContentViewController: Got pheripheral connection material successfully for %s", v25, 0xCu);
      swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v26, -1, -1);
      v32 = v25;
      v1 = log;
      swift_slowDealloc(v32, -1, -1);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    }

    v33 = v0[39];
    v75 = v0[38];
    v77 = v0[37];
    v72 = (void *)v0[47];
    v73 = v0[35];
    v34 = (void *)v0[33];
    v70 = v0[36];
    v71 = v0[34];
    v35 = (void *)objc_opt_self(NISession);
    v36 = -[NSObject btAddressWithTypeData](v1, "btAddressWithTypeData");
    v37 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v36);
    v38 = v1;
    v40 = v39;

    isa = Data._bridgeToObjectiveC()().super.isa;
    sub_100027BDC(v37, v40);
    v42 = -[NSObject irkData](v38, "irkData");
    v43 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v42);
    v45 = v44;

    v46 = Data._bridgeToObjectiveC()().super.isa;
    sub_100027BDC(v43, v45);
    v47 = objc_msgSend(v35, "generateBluetoothDeviceTokenWithPublicAddress:IRK:", isa, v46);

    v48 = swift_allocObject(&unk_10054F030, 32, 7);
    *(_QWORD *)(v48 + 16) = v34;
    *(_QWORD *)(v48 + 24) = v47;
    v0[20] = sub_1001D5F94;
    v0[21] = v48;
    v0[16] = _NSConcreteStackBlock;
    v12 = &off_10047F000;
    v0[17] = 1107296256;
    v0[18] = sub_100037DF8;
    v0[19] = &unk_10054F048;
    v49 = _Block_copy(v0 + 16);
    v50 = v34;
    v51 = v47;
    v52 = v33;
    static DispatchQoS.unspecified.getter(v51);
    v0[30] = _swiftEmptyArrayStorage;
    v53 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v54 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
    v55 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
    dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 30, v54, v55, v71, v53);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v52, v70, v49);
    _Block_release(v49);

    (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v70, v71);
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v52, v77);
    swift_release(v0[21]);
  }
  v80 = v0[41];
  logb = (os_log_t)v0[44];
  v56 = v0[39];
  v57 = v0[36];
  v78 = v0[37];
  aBlock = (void (**)(os_log_t, _QWORD))v0[42];
  v58 = v0[34];
  v74 = v0[35];
  v76 = v0[38];
  v59 = (void *)v0[33];
  v60 = swift_allocObject(&unk_10054EFC8, 24, 7);
  *(_QWORD *)(v60 + 16) = v59;
  v0[14] = sub_1001D5F50;
  v0[15] = v60;
  v0[10] = _NSConcreteStackBlock;
  v0[11] = *((_QWORD *)v12 + 362);
  v0[12] = sub_100037DF8;
  v0[13] = &unk_10054EFE0;
  v61 = _Block_copy(v0 + 10);
  static DispatchQoS.unspecified.getter(v59);
  v0[27] = _swiftEmptyArrayStorage;
  v62 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v63 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v64 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(v0 + 27, v63, v64, v58, v62);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v56, v57, v61);
  _Block_release(v61);
  (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v57, v58);
  (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v56, v78);
  aBlock[1](logb, v80);
  swift_release(v0[15]);
  v65 = v0[43];
  v67 = v0[39];
  v66 = v0[40];
  v68 = v0[36];
  swift_task_dealloc(v0[44]);
  swift_task_dealloc(v65);
  swift_task_dealloc(v66);
  swift_task_dealloc(v67);
  swift_task_dealloc(v68);
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_1001C7B84(uint64_t a1)
{
  _QWORD *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = (void *)v1[48];
  v3 = (void *)v1[47];
  swift_willThrow(a1);

  v4 = v1[49];
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v5 = type metadata accessor for Logger(0);
  sub_100056D88(v5, (uint64_t)qword_1005F5748);
  swift_errorRetain(v4);
  v6 = swift_errorRetain(v4);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = (uint64_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v9 = 138412290;
    swift_errorRetain(v4);
    v11 = _swift_stdlib_bridgeErrorToNSError(v4);
    v1[28] = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 28, v1 + 29);
    *v10 = v11;
    swift_errorRelease(v4);
    swift_errorRelease(v4);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "FMDeviceDetailContentViewController: Attempting to get connection material failed with error: %@", v9, 0xCu);
    v12 = sub_100053F2C((uint64_t *)&unk_1005D9680);
    swift_arrayDestroy(v10, 1, v12);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

    swift_errorRelease(v4);
  }
  else
  {
    swift_errorRelease(v4);
    swift_errorRelease(v4);
    swift_errorRelease(v4);

  }
  v31 = v1[41];
  v32 = v1[44];
  v13 = v1[39];
  v14 = v1[36];
  v29 = v1[37];
  v30 = v1[42];
  v15 = v1[34];
  v27 = v1[35];
  v28 = v1[38];
  v16 = (void *)v1[33];
  v17 = swift_allocObject(&unk_10054EFC8, 24, 7);
  *(_QWORD *)(v17 + 16) = v16;
  v1[14] = sub_1001D5F50;
  v1[15] = v17;
  v1[10] = _NSConcreteStackBlock;
  v1[11] = 1107296256;
  v1[12] = sub_100037DF8;
  v1[13] = &unk_10054EFE0;
  v18 = _Block_copy(v1 + 10);
  static DispatchQoS.unspecified.getter(v16);
  v1[27] = _swiftEmptyArrayStorage;
  v19 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v20 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v21 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(v1 + 27, v20, v21, v15, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v14, v18);
  _Block_release(v18);
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v14, v15);
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v13, v29);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v32, v31);
  swift_release(v1[15]);
  v22 = v1[43];
  v24 = v1[39];
  v23 = v1[40];
  v25 = v1[36];
  swift_task_dealloc(v1[44]);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return ((uint64_t (*)(void))v1[1])();
}

uint64_t sub_1001C7F08(uint64_t result, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  id v9;

  v3 = *(_QWORD *)(result + 32);
  if (a3)
  {
    v5 = sub_100053F2C((uint64_t *)&unk_1005D2AC0);
    v6 = swift_allocError(v5, &protocol self-conformance witness table for Error, 0, 0);
    *v7 = a3;
    v8 = a3;
    return swift_continuation_throwingResumeWithError(v3, v6);
  }
  else if (a2)
  {
    **(_QWORD **)(*(_QWORD *)(v3 + 64) + 40) = a2;
    v9 = a2;
    return swift_continuation_throwingResume(v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001C7F94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001C7FBC(a1, a2, a3, "FMDeviceDetailContentViewController: Entering foreground, start discovery", sub_100199648);
}

uint64_t sub_1001C7FA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001C7FBC(a1, a2, a3, "FMDeviceDetailContentViewController: Entering background, stop discovery", sub_10019A6BC);
}

uint64_t sub_1001C7FBC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t (*a5)(void))
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100056D88(v6, (uint64_t)qword_1005F5748);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, a4, v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  return a5();
}

void sub_1001C80A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t Strong;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  void **p_cache;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  __n128 v49;
  double (*v50)(char *, uint64_t, uint64_t, __n128);
  __n128 v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  void (*v68)(char *, char *, uint64_t);
  uint64_t v69;
  _QWORD v70[2];
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  char v79[24];
  char v80[24];
  uint64_t v81[3];
  uint64_t v82;
  _QWORD v83[2];
  char v84[32];

  v5 = type metadata accessor for FindingMode(0);
  __chkstk_darwin(v5);
  v7 = (char *)v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100053F2C((uint64_t *)&unk_1005D53A0);
  __chkstk_darwin(v8);
  v77 = (char *)v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FMIPDevice(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v78 = (char *)v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v19 = (char *)v70 - v18;
  a3 += 16;
  swift_beginAccess(a3, v84, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v21 = (void *)Strong;
    v73 = v13;
    v74 = v5;
    v75 = v11;
    v76 = v10;
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v22 = type metadata accessor for Logger(0);
    sub_100056D88(v22, (uint64_t)qword_1005F5748);
    v23 = v21;
    swift_errorRetain(a2);
    v24 = v23;
    v25 = swift_errorRetain(a2);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.default.getter(v26);
    p_cache = &OBJC_METACLASS____TtC6FindMy19FMActionLandingView.cache;
    if (os_log_type_enabled(v26, v27))
    {
      v29 = swift_slowAlloc(22, -1);
      v71 = swift_slowAlloc(64, -1);
      v81[0] = v71;
      *(_DWORD *)v29 = 136315394;
      v70[1] = v29 + 4;
      v30 = *(_QWORD *)((char *)v24 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource)
          + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
      v31 = swift_beginAccess(v30, v79, 0, 0);
      v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))(v19, v30, v14, v31);
      v33 = FMIPDevice.baIdentifier.getter(v32);
      v72 = v7;
      v35 = v34;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v14);
      v82 = v33;
      v83[0] = v35;
      v36 = sub_100053F2C(&qword_1005D2BD0);
      v37 = String.init<A>(describing:)(&v82, v36);
      v39 = v38;
      v82 = sub_100056DA0(v37, v38, v81);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v82, v83);

      swift_bridgeObjectRelease(v39);
      *(_WORD *)(v29 + 12) = 2080;
      v82 = a2;
      swift_errorRetain(a2);
      v40 = sub_100053F2C(&qword_1005D7E40);
      v41 = String.init<A>(describing:)(&v82, v40);
      v43 = v42;
      v82 = sub_100056DA0(v41, v42, v81);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v82, v83);
      v44 = v43;
      v7 = v72;
      swift_bridgeObjectRelease(v44);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "FMDeviceDetailContentViewController, fast advertisement stopped for device: %s. With error?: %s", (uint8_t *)v29, 0x16u);
      v45 = v71;
      swift_arrayDestroy(v71, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v45, -1, -1);
      v46 = v29;
      p_cache = (void **)(&OBJC_METACLASS____TtC6FindMy19FMActionLandingView + 16);
      swift_slowDealloc(v46, -1, -1);
    }
    else
    {

      swift_errorRelease(a2);
      swift_errorRelease(a2);
    }

    v47 = (char *)p_cache[228];
    v48 = *(_QWORD *)&v47[(_QWORD)v24] + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
    v49 = swift_beginAccess(v48, &v82, 0, 0);
    v50 = *(double (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16);
    v51.n128_f64[0] = v50(v19, v48, v14, v49);
    LOBYTE(v48) = FMIPDevice.isLocalFindable.getter(v51);
    v52 = *(void (**)(char *, uint64_t))(v15 + 8);
    v52(v19, v14);
    if ((v48 & 1) != 0)
    {
      v53 = *(_QWORD *)&v47[(_QWORD)v24];
      v54 = v53 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
      swift_beginAccess(v53 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel, v81, 0, 0);
      if (*(_BYTE *)(v54 + *(int *)(type metadata accessor for FMDeviceDetailViewModel(0) + 156)) == 1)
      {
        v55 = v53 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
        v56 = swift_beginAccess(v53 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice, v80, 0, 0);
        v57 = v78;
        v58 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v50)(v78, v55, v14, v56);
        v59 = FMIPDevice.baIdentifier.getter(v58);
        v61 = v60;
        v52(v57, v14);
        if (v61)
        {
          v63 = (uint64_t)v77;
          UUID.init(uuidString:)(v59, v61, v62);
          v64 = swift_bridgeObjectRelease(v61);
          v66 = v75;
          v65 = v76;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v75 + 48))(v63, 1, v76, v64) == 1)
          {

            sub_1000051EC(v63, (uint64_t *)&unk_1005D53A0);
            return;
          }
          v67 = v73;
          (*(void (**)(char *, uint64_t, uint64_t))(v66 + 32))(v73, v63, v65);
          v68 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
          v68(v7, v67, v65);
          v69 = v74;
          swift_storeEnumTagMultiPayload(v7, v74, 0);
          sub_10012DDE8((uint64_t)v7);
          sub_10004FCB8((uint64_t)v7, type metadata accessor for FindingMode);
          v68(v7, v67, v65);
          swift_storeEnumTagMultiPayload(v7, v69, 0);
          sub_1003A7E0C((uint64_t)v7);
          sub_10004FCB8((uint64_t)v7, type metadata accessor for FindingMode);
          (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v65);
        }
      }
    }

  }
}

void sub_1001C86B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, void (*a6)(_QWORD), uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  void (*v34)(_QWORD);
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[3];
  char v38[8];
  uint64_t v39;
  uint64_t v40;

  v13 = type metadata accessor for FMIPItemActionStatus(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    v35 = a1;
    v36 = a7;
    swift_errorRetain(a3);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v17 = type metadata accessor for Logger(0);
    sub_100056D88(v17, (uint64_t)qword_1005F5748);
    swift_errorRetain(a3);
    swift_bridgeObjectRetain(a5);
    swift_errorRetain(a3);
    swift_bridgeObjectRetain(a5);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.error.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc(22, -1);
      v34 = a6;
      v22 = v21;
      v23 = swift_slowAlloc(64, -1);
      v33 = v14;
      v24 = v23;
      v40 = v23;
      *(_DWORD *)v22 = 136315394;
      swift_bridgeObjectRetain(a5);
      v39 = sub_100056DA0(a4, a5, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);
      swift_bridgeObjectRelease_n(a5, 3);
      *(_WORD *)(v22 + 12) = 2080;
      swift_getErrorValue(a3, v38, v37);
      v25 = Error.localizedDescription.getter(v37[1], v37[2]);
      v27 = v26;
      v39 = sub_100056DA0(v25, v26, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);
      swift_bridgeObjectRelease(v27);
      swift_errorRelease(a3);
      swift_errorRelease(a3);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "FMDeviceDetailContentViewController: Failed to play sound for item identifier: %s - error: %s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy(v24, 2, (char *)&type metadata for Any + 8);
      v28 = v24;
      v14 = v33;
      swift_slowDealloc(v28, -1, -1);
      v29 = v22;
      a6 = v34;
      swift_slowDealloc(v29, -1, -1);

      swift_errorRelease(a3);
    }
    else
    {
      swift_errorRelease(a3);
      swift_bridgeObjectRelease_n(a5, 2);
      swift_errorRelease(a3);
      swift_errorRelease(a3);

    }
  }
  if (a6)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for FMIPItemActionStatus.success(_:), v13);
    v30 = v14;
    v31 = sub_100008000((unint64_t *)&qword_1005D9930, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItemActionStatus, (uint64_t)&protocol conformance descriptor for FMIPItemActionStatus);
    dispatch thunk of RawRepresentable.rawValue.getter(&v40, v13, v31);
    dispatch thunk of RawRepresentable.rawValue.getter(&v39, v13, v31);
    v32 = v40 == v39;
    (*(void (**)(char *, uint64_t))(v30 + 8))(v16, v13);
    a6(v32);
  }
}

void sub_1001C89EC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1001CF5BC(a2, a3 & 1, a4, a5, a6, a7);
}

uint64_t sub_1001C8A08(uint64_t a1, int a2, uint64_t a3)
{
  return sub_1001D3DDC(a2, a3);
}

void sub_1001C8A14(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t Strong;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  __n128 v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  id v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  void *v66;
  id v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  char *v81;
  void *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t aBlock;
  _QWORD v95[4];
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  _BYTE v99[24];
  uint64_t v100;
  char v101[24];
  char v102[32];

  v82 = a2;
  v88 = type metadata accessor for DispatchWorkItemFlags(0);
  v87 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v86 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = type metadata accessor for DispatchQoS(0);
  v84 = *(_QWORD *)(v85 - 8);
  __chkstk_darwin(v85);
  v83 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID(0);
  v8 = *(_QWORD *)(v7 - 8);
  v91 = v7;
  v92 = v8;
  v9 = *(_QWORD *)(v8 + 64);
  v10 = __chkstk_darwin(v7);
  v11 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v81 = (char *)&v81 - v12;
  v13 = type metadata accessor for FMIPDevice(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = a3;
  v18 = a3 + 16;
  v90 = a1;
  v19 = UUID.uuidString.getter(v15);
  v21 = v20;
  swift_beginAccess(v18, v102, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v18);
  v89 = v13;
  if (!Strong)
    goto LABEL_6;
  v23 = (void *)Strong;
  v24 = *(_QWORD *)(Strong + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource);
  swift_retain(v24);

  v25 = v24 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
  v26 = swift_beginAccess(v24 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice, v101, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))(v17, v25, v13, v26);
  swift_release(v24);
  v28 = FMIPDevice.baIdentifier.getter(v27);
  v30 = v29;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  if (v30)
  {
    if (v19 == v28 && v30 == v21)
    {
      swift_bridgeObjectRelease(v21);
      swift_bridgeObjectRelease(v30);
      v31 = v91;
      goto LABEL_14;
    }
    v53 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v21, v28, v30, 0);
    swift_bridgeObjectRelease(v21);
    swift_bridgeObjectRelease(v30);
    v31 = v91;
    if ((v53 & 1) != 0)
    {
LABEL_14:
      swift_beginAccess(v18, v99, 0, 0);
      v54 = swift_unknownObjectWeakLoadStrong(v18);
      v55 = v92;
      if (v54)
      {
        v56 = (void *)v54;
        v57 = objc_retain(*(id *)(v54
                                + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_connectionMaterialUpdateQueue));

        v58 = v81;
        (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v81, v90, v31);
        v59 = *(unsigned __int8 *)(v55 + 80);
        v60 = (v59 + 16) & ~v59;
        v61 = (v9 + v60 + 7) & 0xFFFFFFFFFFFFFFF8;
        v62 = (v61 + 15) & 0xFFFFFFFFFFFFFFF8;
        v63 = swift_allocObject(&unk_10054F198, v62 + 8, v59 | 7);
        (*(void (**)(uint64_t, char *, uint64_t))(v55 + 32))(v63 + v60, v58, v31);
        v64 = v82;
        *(_QWORD *)(v63 + v61) = v82;
        v65 = v93;
        *(_QWORD *)(v63 + v62) = v93;
        v95[3] = sub_1001D6070;
        v96 = v63;
        aBlock = (uint64_t)_NSConcreteStackBlock;
        v95[0] = 1107296256;
        v95[1] = sub_100037DF8;
        v95[2] = &unk_10054F1B0;
        v66 = _Block_copy(&aBlock);
        v67 = v64;
        v68 = swift_retain(v65);
        v69 = v83;
        static DispatchQoS.unspecified.getter(v68);
        v97 = _swiftEmptyArrayStorage;
        v70 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v71 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
        v72 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
        v73 = v86;
        v74 = v71;
        v75 = v88;
        dispatch thunk of SetAlgebra.init<A>(_:)(&v97, v74, v72, v88, v70);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v69, v73, v66);
        _Block_release(v66);

        (*(void (**)(char *, uint64_t))(v87 + 8))(v73, v75);
        (*(void (**)(char *, uint64_t))(v84 + 8))(v69, v85);
        swift_release(v96);
      }
      return;
    }
  }
  else
  {
LABEL_6:
    swift_bridgeObjectRelease(v21);
    v31 = v91;
  }
  v32 = v92;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v33 = type metadata accessor for Logger(0);
  sub_100056D88(v33, (uint64_t)qword_1005F5748);
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v11, v90, v31);
  v34 = v93;
  v35 = swift_retain_n(v93, 2);
  v36 = Logger.logObject.getter(v35);
  v37 = static os_log_type_t.default.getter(v36);
  if (os_log_type_enabled(v36, (os_log_type_t)v37))
  {
    LODWORD(v91) = v37;
    v38 = swift_slowAlloc(22, -1);
    v90 = swift_slowAlloc(64, -1);
    v100 = v90;
    *(_DWORD *)v38 = 136315394;
    v39 = sub_100008000((unint64_t *)&qword_1005DA7C0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v40 = dispatch thunk of CustomStringConvertible.description.getter(v31, v39);
    v42 = v41;
    aBlock = sub_100056DA0(v40, v41, &v100);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v95);
    v43 = swift_bridgeObjectRelease(v42);
    (*(void (**)(char *, uint64_t, __n128))(v32 + 8))(v11, v31, v43);
    *(_WORD *)(v38 + 12) = 2080;
    swift_beginAccess(v18, &aBlock, 0, 0);
    v44 = swift_unknownObjectWeakLoadStrong(v18);
    v45 = (void *)v44;
    if (v44)
    {
      v46 = *(_QWORD *)(v44 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource);
      swift_retain(v46);

      v47 = v46 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
      v48 = swift_beginAccess(v46 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice, v99, 0, 0);
      v49 = v89;
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v14 + 16))(v17, v47, v89, v48);
      swift_release(v46);
      v45 = (void *)FMIPDevice.baIdentifier.getter(v50);
      v52 = v51;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v49);
    }
    else
    {
      v52 = 0;
    }
    v97 = v45;
    v98 = v52;
    v76 = sub_100053F2C(&qword_1005D2BD0);
    v77 = String.init<A>(describing:)(&v97, v76);
    v79 = v78;
    v97 = (_QWORD *)sub_100056DA0(v77, v78, &v100);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v97, &v98);
    swift_release_n(v93, 2);
    swift_bridgeObjectRelease(v79);
    _os_log_impl((void *)&_mh_execute_header, v36, (os_log_type_t)v91, "Peripheral connection updated for id: %s, doesn't match deviceId: %s", (uint8_t *)v38, 0x16u);
    v80 = v90;
    swift_arrayDestroy(v90, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v80, -1, -1);
    swift_slowDealloc(v38, -1, -1);

  }
  else
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v31);

    swift_release_n(v34, 2);
  }
}

void sub_1001C9194(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  char **v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  __n128 v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  double v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  Class isa;
  id v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  Class v49;
  id v50;
  char *Strong;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56[3];

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a3 + 16;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v11 = type metadata accessor for Logger(0);
  sub_100056D88(v11, (uint64_t)qword_1005F5748);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v12 = a2;
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter(v13);
  v15 = &selRef_handleFenceTapWithGestureRecognizer_;
  if (os_log_type_enabled(v13, v14))
  {
    v16 = swift_slowAlloc(32, -1);
    v53 = swift_slowAlloc(96, -1);
    v56[0] = v53;
    *(_DWORD *)v16 = 136315650;
    v54 = v10;
    v17 = sub_100008000((unint64_t *)&qword_1005DA7C0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v18 = dispatch thunk of CustomStringConvertible.description.getter(v6, v17);
    v20 = v19;
    v55 = sub_100056DA0(v18, v19, v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, v56);
    v21 = swift_bridgeObjectRelease(v20);
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v21);
    *(_WORD *)(v16 + 12) = 2080;
    v22 = objc_msgSend(v12, "irkData");
    v23 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v22);
    v25 = v24;

    v26 = Data.description.getter(v23, v25);
    v28 = v27;
    sub_100027BDC(v23, v25);
    v55 = sub_100056DA0(v26, v28, v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, v56);

    *(_QWORD *)&v29 = swift_bridgeObjectRelease(v28).n128_u64[0];
    *(_WORD *)(v16 + 22) = 2080;
    v30 = objc_msgSend(v12, "btAddressWithTypeData", v29);
    v31 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v30);
    v33 = v32;

    v34 = Data.description.getter(v31, v33);
    v36 = v35;
    sub_100027BDC(v31, v33);
    v55 = sub_100056DA0(v34, v36, v56);
    v15 = &selRef_handleFenceTapWithGestureRecognizer_;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, v56);

    v37 = v36;
    v10 = v54;
    swift_bridgeObjectRelease(v37);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Peripheral connection updated for id: %s - irk: %s btAddress: %s", (uint8_t *)v16, 0x20u);
    v38 = v53;
    swift_arrayDestroy(v53, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1, -1);
    swift_slowDealloc(v16, -1, -1);

  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);

  }
  v39 = (void *)objc_opt_self(NISession);
  v40 = objc_msgSend(v12, v15[191]);
  v41 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v40);
  v43 = v42;

  isa = Data._bridgeToObjectiveC()().super.isa;
  sub_100027BDC(v41, v43);
  v45 = objc_msgSend(v12, "irkData");
  v46 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v45);
  v48 = v47;

  v49 = Data._bridgeToObjectiveC()().super.isa;
  sub_100027BDC(v46, v48);
  v50 = objc_msgSend(v39, "generateBluetoothDeviceTokenWithPublicAddress:IRK:", isa, v49);

  swift_beginAccess(v10, v56, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(v10);
  if (Strong)
  {
    v52 = *(void **)&Strong[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_btDeviceDiscoveryToken];
    *(_QWORD *)&Strong[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_btDeviceDiscoveryToken] = v50;

    v50 = v52;
  }

}

uint64_t sub_1001C960C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, id);
  id v12;
  uint64_t v14;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void (**)(char *, id))(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)(a2);
  swift_retain(v10);
  v12 = a3;
  v11(v9, v12);

  swift_release(v10);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_1001C96D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  char *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  char *v8;
  _QWORD aBlock[6];
  char v10[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (char *)Strong;
    v4 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_localFindableConnectionMaterialMonitoringSession;
    v5 = *(void **)(Strong
                  + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_localFindableConnectionMaterialMonitoringSession);
    *(_QWORD *)(Strong
              + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_localFindableConnectionMaterialMonitoringSession) = 0;

    sub_100199CE4();
    v6 = *(void **)&v3[v4];
    if (v6)
    {
      aBlock[4] = sub_1001C97B0;
      aBlock[5] = 0;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000063D8;
      aBlock[3] = &unk_10054F160;
      v7 = _Block_copy(aBlock);
      v8 = v6;
      objc_msgSend(v8, "startLocalFindableConnectionMaterialMonitoringWithCompletion:", v7);
      _Block_release(v7);

      v3 = v8;
    }

  }
}

void sub_1001C97B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  NSObject *oslog;
  uint64_t v14;
  uint64_t v15;

  if (a1)
  {
    swift_errorRetain(a1);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v2 = type metadata accessor for Logger(0);
    sub_100056D88(v2, (uint64_t)qword_1005F5748);
    swift_errorRetain(a1);
    v3 = swift_errorRetain(a1);
    oslog = Logger.logObject.getter(v3);
    v4 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc(12, -1);
      v6 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v5 = 138412290;
      swift_errorRetain(a1);
      v7 = _swift_stdlib_bridgeErrorToNSError(a1);
      v14 = v7;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15);
      *v6 = v7;
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, oslog, v4, "Error starting characteristic monitoring session: %@", v5, 0xCu);
      v8 = sub_100053F2C((uint64_t *)&unk_1005D9680);
      swift_arrayDestroy(v6, 1, v8);
      swift_slowDealloc(v6, -1, -1);
      swift_slowDealloc(v5, -1, -1);

      swift_errorRelease(a1);
      return;
    }
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }
  else
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v9 = type metadata accessor for Logger(0);
    v10 = sub_100056D88(v9, (uint64_t)qword_1005F5748);
    oslog = Logger.logObject.getter(v10);
    v11 = static os_log_type_t.default.getter(oslog);
    if (os_log_type_enabled(oslog, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v11, "Accessory Characteristics monitoring session started!", v12, 2u);
      swift_slowDealloc(v12, -1, -1);
    }
  }

}

void sub_1001C9A34(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, const char *a5, const char *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v11 = type metadata accessor for FMIPActionStatus(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for FMIPActionStatus.success(_:), v11);
  v15 = sub_100008000(&qword_1005D9928, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPActionStatus, (uint64_t)&protocol conformance descriptor for FMIPActionStatus);
  dispatch thunk of RawRepresentable.rawValue.getter(&v34, v11, v15);
  dispatch thunk of RawRepresentable.rawValue.getter(&v33, v11, v15);
  v17 = v33;
  v16 = v34;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (v16 == v17)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v18 = type metadata accessor for Logger(0);
    sub_100056D88(v18, (uint64_t)qword_1005F5748);
    v19 = swift_bridgeObjectRetain_n(a4, 2);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.default.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(12, -1);
      v23 = swift_slowAlloc(32, -1);
      v34 = v23;
      *(_DWORD *)v22 = 136315138;
      swift_bridgeObjectRetain(a4);
      v33 = sub_100056DA0(a3, a4, &v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v33, &v34);
      swift_bridgeObjectRelease_n(a4, 3);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, a5, v22, 0xCu);
      swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v23, -1, -1);
      swift_slowDealloc(v22, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a4, 2);
    }
  }
  else
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v24 = type metadata accessor for Logger(0);
    sub_100056D88(v24, (uint64_t)qword_1005F5748);
    swift_errorRetain(a2);
    v25 = swift_errorRetain(a2);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.default.getter(v26);
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(12, -1);
      v29 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v28 = 138412290;
      if (a2)
      {
        swift_errorRetain(a2);
        v30 = _swift_stdlib_bridgeErrorToNSError(a2);
        v34 = v30;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);
      }
      else
      {
        v34 = 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, &v35);
        v30 = 0;
      }
      *v29 = v30;
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, a6, v28, 0xCu);
      v31 = sub_100053F2C((uint64_t *)&unk_1005D9680);
      swift_arrayDestroy(v29, 1, v31);
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v28, -1, -1);
    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);
    }

  }
}

uint64_t sub_1001C9E44(uint64_t (*a1)(void))
{
  uint64_t result;

  result = a1();
  if (result)
    return _swift_stdlib_bridgeErrorToNSError();
  return result;
}

void sub_1001C9E6C(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  Swift::Int v4;
  Swift::Int v5[2];

  v2 = *(_QWORD *)(sub_100053F2C((uint64_t *)&unk_1005D6840) - 8);
  v3 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v3 = (_QWORD *)sub_10020CF4C(v3);
  v4 = v3[2];
  v5[0] = (Swift::Int)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1001C9EF0(v5);
  *a1 = v3;
}

void sub_1001C9EF0(Swift::Int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::Int v22;
  Swift::Int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  Swift::Int v29;
  unint64_t v30;
  Swift::Int v31;
  Swift::Int v32;
  Swift::Int v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  Swift::Int v41;
  uint64_t v42;
  Swift::Int v43;
  Swift::Int v44;
  uint64_t v45;
  Swift::Int v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  BOOL v51;
  int v52;
  uint64_t v53;
  Swift::Int v54;
  uint64_t v55;
  uint64_t v56;
  Swift::Int v57;
  uint64_t v58;
  Swift::Int v59;
  uint64_t v60;
  uint64_t v61;
  Swift::Int v62;
  unint64_t v63;
  Swift::Int v64;
  Swift::Int v65;
  uint64_t v66;
  Swift::Int v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  Swift::Int v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v78;
  Swift::Int v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  char *v84;
  char *v85;
  Swift::Int v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  BOOL v98;
  unint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  BOOL v108;
  uint64_t v109;
  char v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  BOOL v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  unint64_t v132;
  Swift::Int v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  unint64_t v138;
  char *v139;
  _QWORD *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  _QWORD *v144;
  Swift::Int v145;
  _QWORD *v146;
  _QWORD *v147;
  Swift::Int v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  _QWORD *v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  char *v157;
  uint64_t v158;
  Swift::Int v159;
  uint64_t v160;
  uint64_t v161;
  Swift::Int *v162;

  v2 = v1;
  v4 = sub_100053F2C((uint64_t *)&unk_1005D6840);
  v154 = *(_QWORD *)(v4 - 8);
  v155 = v4;
  v5 = __chkstk_darwin(v4);
  v149 = (uint64_t)&v141 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v160 = (uint64_t)&v141 - v8;
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v141 - v10;
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v141 - v13;
  v15 = __chkstk_darwin(v12);
  v152 = (uint64_t *)((char *)&v141 - v16);
  v17 = __chkstk_darwin(v15);
  v151 = (uint64_t *)((char *)&v141 - v18);
  v19 = __chkstk_darwin(v17);
  v147 = (uint64_t *)((char *)&v141 - v20);
  __chkstk_darwin(v19);
  v146 = (uint64_t *)((char *)&v141 - v21);
  v162 = a1;
  v22 = a1[1];
  v23 = _minimumMergeRunLength(_:)(v22);
  if (v23 >= v22)
  {
    if (v22 < 0)
      goto LABEL_160;
    if (v22)
      sub_1001CA9A0(0, v22, 1, v162);
    return;
  }
  if (v22 >= 0)
    v24 = v22;
  else
    v24 = v22 + 1;
  if (v22 < -1)
    goto LABEL_168;
  v156 = v14;
  v157 = v11;
  v145 = v23;
  if (v22 < 2)
  {
    v28 = (char *)_swiftEmptyArrayStorage;
    v153 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80));
    v144 = _swiftEmptyArrayStorage;
    if (v22 != 1)
    {
      v30 = _swiftEmptyArrayStorage[2];
LABEL_123:
      if (v30 >= 2)
      {
        v133 = *v162;
        do
        {
          v134 = v30 - 2;
          if (v30 < 2)
            goto LABEL_155;
          if (!v133)
            goto LABEL_167;
          v127 = v28;
          v135 = *(_QWORD *)&v28[16 * v134 + 32];
          v136 = *(_QWORD *)&v28[16 * v30 + 24];
          sub_1001CAC0C(v133 + *(_QWORD *)(v154 + 72) * v135, v133 + *(_QWORD *)(v154 + 72) * *(_QWORD *)&v28[16 * v30 + 16], v133 + *(_QWORD *)(v154 + 72) * v136, v153);
          if (v2)
            goto LABEL_135;
          if (v136 < v135)
            goto LABEL_156;
          if ((swift_isUniquelyReferenced_nonNull_native(v28) & 1) == 0)
            v127 = sub_10020CE70((uint64_t)v28);
          if (v134 >= *((_QWORD *)v127 + 2))
            goto LABEL_157;
          v137 = &v127[16 * v134 + 32];
          *(_QWORD *)v137 = v135;
          *((_QWORD *)v137 + 1) = v136;
          v138 = *((_QWORD *)v127 + 2);
          if (v30 > v138)
            goto LABEL_158;
          memmove(&v127[16 * v30 + 16], &v127[16 * v30 + 32], 16 * (v138 - v30));
          *((_QWORD *)v127 + 2) = v138 - 1;
          v30 = v138 - 1;
          v28 = v127;
        }
        while (v138 > 2);
      }
      v139 = v28;
LABEL_137:
      swift_bridgeObjectRelease(v139);
      v140 = v144;
      v144[2] = 0;
      swift_bridgeObjectRelease(v140);
      return;
    }
  }
  else
  {
    v25 = v24 >> 1;
    v26 = static Array._allocateBufferUninitialized(minimumCapacity:)(v24 >> 1, v155);
    *(_QWORD *)(v26 + 16) = v25;
    v27 = *(unsigned __int8 *)(v154 + 80);
    v144 = (_QWORD *)v26;
    v153 = v26 + ((v27 + 32) & ~v27);
  }
  v29 = 0;
  v28 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    v31 = v29;
    v32 = v29 + 1;
    if (v29 + 1 >= v22)
    {
      v41 = v29 + 1;
      v42 = (uint64_t)v157;
    }
    else
    {
      v33 = *v162;
      v34 = *(_QWORD *)(v154 + 72);
      v35 = v146;
      sub_100007464(*v162 + v34 * v32, (uint64_t)v146, (uint64_t *)&unk_1005D6840);
      v150 = v31;
      v161 = v34;
      v36 = v33 + v34 * v31;
      v37 = v147;
      sub_100007464(v36, (uint64_t)v147, (uint64_t *)&unk_1005D6840);
      v38 = v35[1];
      v39 = v37[1];
      v40 = *v35 == *v37 && v38 == v39;
      LODWORD(v159) = v40 ? 0 : _stringCompareWithSmolCheck(_:_:expecting:)(*v35, v38, *v37, v39, 1);
      sub_1000051EC((uint64_t)v147, (uint64_t *)&unk_1005D6840);
      sub_1000051EC((uint64_t)v146, (uint64_t *)&unk_1005D6840);
      v31 = v150;
      v148 = v33;
      if (v150 + 2 >= v22)
      {
        v44 = v150 + 2;
        if ((v159 & 1) == 0)
          goto LABEL_35;
      }
      else
      {
        v158 = v161 * v32;
        v43 = v33;
        v44 = v150 + 2;
        v45 = v161 * (v150 + 2);
        while (1)
        {
          v46 = v22;
          v47 = v151;
          sub_100007464(v43 + v45, (uint64_t)v151, (uint64_t *)&unk_1005D6840);
          v48 = v152;
          sub_100007464(v43 + v158, (uint64_t)v152, (uint64_t *)&unk_1005D6840);
          v49 = v47[1];
          v50 = v48[1];
          v51 = *v47 == *v48 && v49 == v50;
          v52 = v51 ? 0 : _stringCompareWithSmolCheck(_:_:expecting:)(*v47, v49, *v48, v50, 1);
          sub_1000051EC((uint64_t)v152, (uint64_t *)&unk_1005D6840);
          sub_1000051EC((uint64_t)v151, (uint64_t *)&unk_1005D6840);
          v22 = v46;
          if (((v159 ^ v52) & 1) != 0)
            break;
          v43 += v161;
          if (v46 == ++v44)
          {
            v44 = v46;
            break;
          }
        }
        v31 = v150;
        if ((v159 & 1) == 0)
        {
LABEL_35:
          v42 = (uint64_t)v157;
          v41 = v44;
          goto LABEL_51;
        }
      }
      if (v44 < v31)
        goto LABEL_161;
      v41 = v44;
      if (v31 >= v44)
      {
        v42 = (uint64_t)v157;
      }
      else
      {
        v158 = v22;
        v143 = v28;
        v53 = 0;
        v54 = v31;
        v55 = v161 * (v41 - 1);
        v56 = v41 * v161;
        v57 = v54;
        v58 = v54 * v161;
        v42 = (uint64_t)v157;
        do
        {
          if (v57 != v41 + v53 - 1)
          {
            v61 = v2;
            v62 = v148;
            if (!v148)
              goto LABEL_166;
            v63 = v148 + v58;
            v159 = v148 + v55;
            sub_10005DAA0(v148 + v58, v149, (uint64_t *)&unk_1005D6840);
            if (v58 < v55 || v63 >= v62 + v56)
            {
              v59 = v62 + v58;
              v60 = v159;
              swift_arrayInitWithTakeFrontToBack(v59, v159);
            }
            else
            {
              v60 = v159;
              if (v58 != v55)
                swift_arrayInitWithTakeBackToFront(v63, v159);
            }
            sub_10005DAA0(v149, v60, (uint64_t *)&unk_1005D6840);
            v42 = (uint64_t)v157;
            v2 = v61;
          }
          ++v57;
          --v53;
          v55 -= v161;
          v56 -= v161;
          v58 += v161;
        }
        while (v57 < v41 + v53);
        v28 = v143;
        v31 = v150;
        v22 = v158;
      }
    }
LABEL_51:
    v159 = v41;
    if (v41 >= v22)
      goto LABEL_75;
    if (__OFSUB__(v41, v31))
      goto LABEL_159;
    if (v41 - v31 >= v145)
      goto LABEL_75;
    if (__OFADD__(v31, v145))
      goto LABEL_162;
    v64 = v31 + v145 >= v22 ? v22 : v31 + v145;
    if (v64 < v31)
      break;
    v150 = v31;
    v65 = v159;
    if (v159 != v64)
    {
      v142 = v2;
      v143 = v28;
      v66 = *(_QWORD *)(v154 + 72);
      v161 = v66 * (v159 - 1);
      v158 = v66;
      v67 = v159 * v66;
      v148 = v64;
      do
      {
        v68 = 0;
        v69 = v150;
        v159 = v67;
        while (1)
        {
          v70 = (_QWORD *)v42;
          v71 = *v162;
          v72 = v67 + v68 + *v162;
          v73 = v156;
          sub_100007464(v72, (uint64_t)v156, (uint64_t *)&unk_1005D6840);
          v74 = v161 + v68 + v71;
          v42 = (uint64_t)v70;
          sub_100007464(v74, (uint64_t)v70, (uint64_t *)&unk_1005D6840);
          v75 = v73[1];
          v76 = v70[1];
          if (*v73 == *v70 && v75 == v76)
            break;
          v78 = _stringCompareWithSmolCheck(_:_:expecting:)(*v73, v75, *v70, v76, 1);
          sub_1000051EC(v42, (uint64_t *)&unk_1005D6840);
          sub_1000051EC((uint64_t)v73, (uint64_t *)&unk_1005D6840);
          if ((v78 & 1) == 0)
            goto LABEL_62;
          v79 = *v162;
          v67 = v159;
          if (!*v162)
            goto LABEL_164;
          v80 = v79 + v159 + v68;
          v81 = v79 + v161 + v68;
          sub_10005DAA0(v80, v160, (uint64_t *)&unk_1005D6840);
          swift_arrayInitWithTakeFrontToBack(v80, v81);
          sub_10005DAA0(v160, v81, (uint64_t *)&unk_1005D6840);
          v42 = (uint64_t)v157;
          v68 -= v158;
          if (v65 == ++v69)
            goto LABEL_63;
        }
        sub_1000051EC((uint64_t)v70, (uint64_t *)&unk_1005D6840);
        sub_1000051EC((uint64_t)v73, (uint64_t *)&unk_1005D6840);
LABEL_62:
        v67 = v159;
LABEL_63:
        ++v65;
        v161 += v158;
        v67 += v158;
      }
      while (v65 != v148);
      v159 = v148;
      v2 = v142;
      v28 = v143;
    }
    v31 = v150;
LABEL_75:
    if (v159 < v31)
      goto LABEL_154;
    if ((swift_isUniquelyReferenced_nonNull_native(v28) & 1) == 0)
      v28 = sub_10020C830(0, *((_QWORD *)v28 + 2) + 1, 1, v28);
    v83 = *((_QWORD *)v28 + 2);
    v82 = *((_QWORD *)v28 + 3);
    v30 = v83 + 1;
    if (v83 >= v82 >> 1)
      v28 = sub_10020C830((char *)(v82 > 1), v83 + 1, 1, v28);
    *((_QWORD *)v28 + 2) = v30;
    v84 = v28 + 32;
    v85 = &v28[16 * v83 + 32];
    v86 = v159;
    *(_QWORD *)v85 = v31;
    *((_QWORD *)v85 + 1) = v86;
    if (v83)
    {
      while (1)
      {
        v87 = v30 - 1;
        if (v30 >= 4)
        {
          v92 = &v84[16 * v30];
          v93 = *((_QWORD *)v92 - 8);
          v94 = *((_QWORD *)v92 - 7);
          v98 = __OFSUB__(v94, v93);
          v95 = v94 - v93;
          if (v98)
            goto LABEL_143;
          v97 = *((_QWORD *)v92 - 6);
          v96 = *((_QWORD *)v92 - 5);
          v98 = __OFSUB__(v96, v97);
          v90 = v96 - v97;
          v91 = v98;
          if (v98)
            goto LABEL_144;
          v99 = v30 - 2;
          v100 = &v84[16 * v30 - 32];
          v102 = *(_QWORD *)v100;
          v101 = *((_QWORD *)v100 + 1);
          v98 = __OFSUB__(v101, v102);
          v103 = v101 - v102;
          if (v98)
            goto LABEL_146;
          v98 = __OFADD__(v90, v103);
          v104 = v90 + v103;
          if (v98)
            goto LABEL_149;
          if (v104 >= v95)
          {
            v122 = &v84[16 * v87];
            v124 = *(_QWORD *)v122;
            v123 = *((_QWORD *)v122 + 1);
            v98 = __OFSUB__(v123, v124);
            v125 = v123 - v124;
            if (v98)
              goto LABEL_153;
            v115 = v90 < v125;
            goto LABEL_112;
          }
        }
        else
        {
          if (v30 != 3)
          {
            v116 = *((_QWORD *)v28 + 4);
            v117 = *((_QWORD *)v28 + 5);
            v98 = __OFSUB__(v117, v116);
            v109 = v117 - v116;
            v110 = v98;
            goto LABEL_106;
          }
          v89 = *((_QWORD *)v28 + 4);
          v88 = *((_QWORD *)v28 + 5);
          v98 = __OFSUB__(v88, v89);
          v90 = v88 - v89;
          v91 = v98;
        }
        if ((v91 & 1) != 0)
          goto LABEL_145;
        v99 = v30 - 2;
        v105 = &v84[16 * v30 - 32];
        v107 = *(_QWORD *)v105;
        v106 = *((_QWORD *)v105 + 1);
        v108 = __OFSUB__(v106, v107);
        v109 = v106 - v107;
        v110 = v108;
        if (v108)
          goto LABEL_148;
        v111 = &v84[16 * v87];
        v113 = *(_QWORD *)v111;
        v112 = *((_QWORD *)v111 + 1);
        v98 = __OFSUB__(v112, v113);
        v114 = v112 - v113;
        if (v98)
          goto LABEL_151;
        if (__OFADD__(v109, v114))
          goto LABEL_152;
        if (v109 + v114 >= v90)
        {
          v115 = v90 < v114;
LABEL_112:
          if (v115)
            v87 = v99;
          goto LABEL_114;
        }
LABEL_106:
        if ((v110 & 1) != 0)
          goto LABEL_147;
        v118 = &v84[16 * v87];
        v120 = *(_QWORD *)v118;
        v119 = *((_QWORD *)v118 + 1);
        v98 = __OFSUB__(v119, v120);
        v121 = v119 - v120;
        if (v98)
          goto LABEL_150;
        if (v121 < v109)
          goto LABEL_14;
LABEL_114:
        v126 = v87 - 1;
        if (v87 - 1 >= v30)
        {
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
          goto LABEL_163;
        }
        if (!*v162)
          goto LABEL_165;
        v127 = v28;
        v128 = &v84[16 * v126];
        v129 = *(_QWORD *)v128;
        v130 = &v84[16 * v87];
        v131 = *((_QWORD *)v130 + 1);
        sub_1001CAC0C(*v162 + *(_QWORD *)(v154 + 72) * *(_QWORD *)v128, *v162 + *(_QWORD *)(v154 + 72) * *(_QWORD *)v130, *v162 + *(_QWORD *)(v154 + 72) * v131, v153);
        if (v2)
        {
LABEL_135:
          v139 = v127;
          goto LABEL_137;
        }
        if (v131 < v129)
          goto LABEL_140;
        if (v87 > *((_QWORD *)v127 + 2))
          goto LABEL_141;
        *(_QWORD *)v128 = v129;
        *(_QWORD *)&v84[16 * v126 + 8] = v131;
        v132 = *((_QWORD *)v127 + 2);
        if (v87 >= v132)
          goto LABEL_142;
        v28 = v127;
        v30 = v132 - 1;
        memmove(&v84[16 * v87], v130 + 16, 16 * (v132 - 1 - v87));
        *((_QWORD *)v127 + 2) = v132 - 1;
        if (v132 <= 2)
          goto LABEL_14;
      }
    }
    v30 = 1;
LABEL_14:
    v22 = v162[1];
    v29 = v159;
    if (v159 >= v22)
      goto LABEL_123;
  }
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
LABEL_168:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

uint64_t sub_1001CA9A0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v34 = a1;
  v35 = sub_100053F2C((uint64_t *)&unk_1005D6840);
  v7 = __chkstk_darwin(v35);
  v39 = (uint64_t)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v11 = (uint64_t *)((char *)&v32 - v10);
  result = __chkstk_darwin(v9);
  v15 = (uint64_t *)((char *)&v32 - v14);
  v38 = a3;
  v33 = a2;
  if (a3 != a2)
  {
    v16 = *(_QWORD *)(v13 + 72);
    v41 = v16 * (v38 - 1);
    v36 = (char *)&v32 - v14;
    v37 = v16;
    v40 = v16 * v38;
    v17 = (uint64_t *)&unk_1005D6840;
LABEL_6:
    v18 = 0;
    v19 = v34;
    while (1)
    {
      v20 = *a4;
      sub_100007464(v40 + v18 + *a4, (uint64_t)v15, v17);
      sub_100007464(v41 + v18 + v20, (uint64_t)v11, v17);
      v21 = v15[1];
      v22 = v11[1];
      if (*v15 == *v11 && v21 == v22)
      {
        sub_1000051EC((uint64_t)v11, v17);
        result = sub_1000051EC((uint64_t)v15, v17);
LABEL_5:
        v41 += v37;
        v40 += v37;
        if (++v38 == v33)
          return result;
        goto LABEL_6;
      }
      v24 = _stringCompareWithSmolCheck(_:_:expecting:)(*v15, v21, *v11, v22, 1);
      sub_1000051EC((uint64_t)v11, v17);
      result = sub_1000051EC((uint64_t)v15, v17);
      if ((v24 & 1) == 0)
        goto LABEL_5;
      v25 = *a4;
      if (!*a4)
        break;
      v26 = v11;
      v27 = v17;
      v28 = a4;
      v29 = v25 + v40 + v18;
      v30 = v25 + v41 + v18;
      v31 = v27;
      sub_10005DAA0(v29, v39, v27);
      swift_arrayInitWithTakeFrontToBack(v29, v30);
      result = sub_10005DAA0(v39, v30, v31);
      v18 -= v37;
      ++v19;
      a4 = v28;
      v17 = v31;
      v11 = v26;
      v15 = v36;
      if (v38 == v19)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1001CAC0C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  char v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;

  v49 = sub_100053F2C((uint64_t *)&unk_1005D6840);
  v8 = __chkstk_darwin(v49);
  v51 = (unint64_t)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v50 = (uint64_t *)((char *)&v48 - v11);
  v12 = __chkstk_darwin(v10);
  v14 = (uint64_t *)((char *)&v48 - v13);
  __chkstk_darwin(v12);
  v17 = (uint64_t *)((char *)&v48 - v16);
  v18 = *(_QWORD *)(v15 + 72);
  if (!v18)
  {
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  v19 = *(_QWORD *)(v15 + 72);
  if (a2 - a1 == 0x8000000000000000 && v19 == -1)
    goto LABEL_72;
  v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v18 == -1)
    goto LABEL_73;
  v21 = (uint64_t)(a2 - a1) / v18;
  v54 = a1;
  v53 = a4;
  v22 = v20 / v18;
  if (v21 >= v20 / v19)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      v24 = v22 * v19;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4, a2);
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4, a2);
      }
      v33 = a4 + v24;
      v52 = a4 + v24;
      v54 = a2;
      if (v24 >= 1 && a1 < a2)
      {
        v35 = -v19;
        do
        {
          v36 = a1;
          v37 = v50;
          sub_100007464(v33 + v35, (uint64_t)v50, (uint64_t *)&unk_1005D6840);
          v38 = a2 + v35;
          v39 = (_QWORD *)v51;
          sub_100007464(a2 + v35, v51, (uint64_t *)&unk_1005D6840);
          v40 = v37[1];
          v41 = v39[1];
          if (*v37 == *v39 && v40 == v41)
            v43 = 0;
          else
            v43 = _stringCompareWithSmolCheck(_:_:expecting:)(*v37, v40, *v39, v41, 1);
          v44 = a3 + v35;
          sub_1000051EC(v51, (uint64_t *)&unk_1005D6840);
          sub_1000051EC((uint64_t)v50, (uint64_t *)&unk_1005D6840);
          if ((v43 & 1) != 0)
          {
            if (a3 < a2 || v44 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack(v44, a2 + v35);
              a1 = v36;
            }
            else
            {
              a1 = v36;
              if (a3 != a2)
                swift_arrayInitWithTakeBackToFront(v44, a2 + v35);
            }
            v54 += v35;
          }
          else
          {
            v45 = v52;
            v46 = v52 + v35;
            v52 += v35;
            if (a3 < v45 || v44 >= v45)
            {
              swift_arrayInitWithTakeFrontToBack(v44, v46);
              v38 = a2;
              a1 = v36;
            }
            else
            {
              a1 = v36;
              if (a3 != v45)
                swift_arrayInitWithTakeBackToFront(v44, v46);
              v38 = a2;
            }
          }
          v33 = v52;
          if (v52 <= a4)
            break;
          a2 = v38;
          a3 += v35;
        }
        while (v38 > a1);
      }
LABEL_70:
      sub_10020CC24(&v54, &v53, (uint64_t *)&v52);
      return 1;
    }
  }
  else if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21 * v19;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4, a1);
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront(a4, a1);
    }
    v51 = a4 + v23;
    v52 = a4 + v23;
    if (v23 >= 1 && a2 < a3)
    {
      while (1)
      {
        sub_100007464(a2, (uint64_t)v17, (uint64_t *)&unk_1005D6840);
        sub_100007464(a4, (uint64_t)v14, (uint64_t *)&unk_1005D6840);
        v26 = v17[1];
        v27 = v14[1];
        if (*v17 == *v14 && v26 == v27)
          break;
        v29 = _stringCompareWithSmolCheck(_:_:expecting:)(*v17, v26, *v14, v27, 1);
        sub_1000051EC((uint64_t)v14, (uint64_t *)&unk_1005D6840);
        sub_1000051EC((uint64_t)v17, (uint64_t *)&unk_1005D6840);
        if ((v29 & 1) == 0)
          goto LABEL_32;
        v30 = v54;
        v31 = a2 + v19;
        if (v54 < a2 || v54 >= v31)
        {
          swift_arrayInitWithTakeFrontToBack(v54, a2);
        }
        else if (v54 == a2)
        {
          v30 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront(v54, a2);
        }
LABEL_38:
        v54 = v30 + v19;
        a4 = v53;
        if (v53 < v51)
        {
          a2 = v31;
          if (v31 < a3)
            continue;
        }
        goto LABEL_70;
      }
      sub_1000051EC((uint64_t)v14, (uint64_t *)&unk_1005D6840);
      sub_1000051EC((uint64_t)v17, (uint64_t *)&unk_1005D6840);
LABEL_32:
      v30 = v54;
      v32 = v53 + v19;
      if (v54 < v53 || v54 >= v32)
      {
        swift_arrayInitWithTakeFrontToBack(v54, v53);
      }
      else if (v54 != v53)
      {
        swift_arrayInitWithTakeBackToFront(v54, v53);
      }
      v53 = v32;
      v31 = a2;
      goto LABEL_38;
    }
    goto LABEL_70;
  }
LABEL_74:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void sub_1001CB134(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = sub_100053F2C((uint64_t *)&unk_1005E3C80);
  __chkstk_darwin(v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FMIPPlaySoundChannels(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v24 - v11;
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return;
  v13 = *(_QWORD *)(a1 + 56);
  v25 = a1 + 56;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v17 = (unint64_t)(v14 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v18 = 0;
  while (1)
  {
    if (v16)
    {
      v19 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v20 = v19 | (v18 << 6);
      goto LABEL_6;
    }
    v21 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v17)
      goto LABEL_24;
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v18;
    if (!v22)
    {
      v18 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_24;
      v22 = *(_QWORD *)(v25 + 8 * v18);
      if (!v22)
      {
        v18 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_24;
        v22 = *(_QWORD *)(v25 + 8 * v18);
        if (!v22)
        {
          v18 = v21 + 3;
          if (v21 + 3 >= v17)
            goto LABEL_24;
          v22 = *(_QWORD *)(v25 + 8 * v18);
          if (!v22)
            break;
        }
      }
    }
LABEL_23:
    v16 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v18 << 6);
LABEL_6:
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v7 + 72) * v20, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v12, v6);
    sub_1001CC7B8((uint64_t)v10, (uint64_t)v5);
    sub_1000051EC((uint64_t)v5, (uint64_t *)&unk_1005E3C80);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  v23 = v21 + 4;
  if (v23 >= v17)
  {
LABEL_24:
    swift_release(a1);
    return;
  }
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v18 = v23;
    goto LABEL_23;
  }
  while (1)
  {
    v18 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v18 >= v17)
      goto LABEL_24;
    v22 = *(_QWORD *)(v25 + 8 * v18);
    ++v23;
    if (v22)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
}

void *sub_1001CB398(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  __n128 v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t, __n128);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void (*v27)(char *, uint64_t);
  uint64_t isStackAllocationSafe;
  char v29;
  unsigned int v30;
  unint64_t v31;
  uint64_t v32;
  size_t v33;
  void *v34;
  void *v35;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;

  v4 = type metadata accessor for FMIPPlaySoundChannels(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v37 - v9;
  if (*(_QWORD *)(a2 + 16))
  {
    v39 = a1;
    v11 = *(_QWORD *)(a1 + 16);
    v12 = swift_bridgeObjectRetain(a1);
    if (v11)
    {
      v13 = 0;
      v37 = v5;
      v38 = (char *)(a2 + 56);
      while (1)
      {
        if (v13 >= v11)
          __break(1u);
        v14 = *(_QWORD *)(v5 + 72);
        v15 = a1
            + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
            + v14 * v13;
        v40 = v13 + 1;
        v16 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16);
        v16(v10, v15, v4, v12);
        v17 = *(_QWORD *)(a2 + 40);
        v18 = sub_100008000(&qword_1005D7300, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
        v19 = dispatch thunk of Hashable._rawHashValue(seed:)(v17, v4, v18);
        v20 = a2;
        v21 = -1 << *(_BYTE *)(a2 + 32);
        v22 = v5;
        v23 = v19 & ~v21;
        if (((*(_QWORD *)&v38[(v23 >> 3) & 0xFFFFFFFFFFFFF8] >> v23) & 1) != 0)
          break;
        v27 = *(void (**)(char *, uint64_t))(v22 + 8);
LABEL_11:
        v27(v10, v4);
        a1 = v39;
        v13 = v40;
        v11 = *(_QWORD *)(v39 + 16);
        a2 = v20;
        v5 = v37;
        if (v40 == v11)
          goto LABEL_12;
      }
      v24 = ~v21;
      while (1)
      {
        ((void (*)(char *, unint64_t, uint64_t))v16)(v8, *(_QWORD *)(v20 + 48) + v23 * v14, v4);
        v25 = sub_100008000(&qword_1005D7308, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
        v26 = dispatch thunk of static Equatable.== infix(_:_:)(v8, v10, v4, v25);
        v27 = *(void (**)(char *, uint64_t))(v37 + 8);
        v27(v8, v4);
        if ((v26 & 1) != 0)
          break;
        v23 = (v23 + 1) & v24;
        if (((*(_QWORD *)&v38[(v23 >> 3) & 0xFFFFFFFFFFFFF8] >> v23) & 1) == 0)
          goto LABEL_11;
      }
      isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v27)(v10, v4);
      v29 = *(_BYTE *)(v20 + 32);
      v30 = v29 & 0x3F;
      v31 = (1 << v29) + 63;
      v32 = v31 >> 6;
      v33 = 8 * (v31 >> 6);
      if (v30 <= 0xD
        || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v31 >> 6), 8),
            (_DWORD)isStackAllocationSafe))
      {
        __chkstk_darwin(isStackAllocationSafe);
        memcpy((char *)&v37 - ((v33 + 15) & 0x3FFFFFFFFFFFFFF0), v38, v33);
        v34 = sub_1001CBD0C((unint64_t *)((char *)&v37 - ((v33 + 15) & 0x3FFFFFFFFFFFFFF0)), v32, v20, v23, &v39);
        swift_release(v20);
        swift_bridgeObjectRelease(v39);
      }
      else
      {
        v35 = (void *)swift_slowAlloc(v33, -1);
        memcpy(v35, v38, v33);
        v34 = sub_1001CBD0C((unint64_t *)v35, v32, v20, v23, &v39);
        swift_release(v20);
        swift_bridgeObjectRelease(v39);
        swift_slowDealloc(v35, -1, -1);
      }
      return v34;
    }
    else
    {
LABEL_12:
      swift_bridgeObjectRelease(a1);
    }
  }
  else
  {
    swift_release(a2);
    return &_swiftEmptySetSingleton;
  }
  return (void *)a2;
}

void *sub_1001CB750(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, unint64_t, uint64_t);
  uint64_t v43;
  char v44;
  void (*v45)(char *, uint64_t);
  uint64_t isStackAllocationSafe;
  char v47;
  unsigned int v48;
  unint64_t v49;
  uint64_t v50;
  size_t v51;
  void *v52;
  void *v54;
  uint64_t v55;
  char *v56;
  unint64_t v57;
  int64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int64_t v65;
  unint64_t v66;

  v4 = sub_100053F2C((uint64_t *)&unk_1005E3C80);
  __chkstk_darwin(v4);
  v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FMIPPlaySoundChannels(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v61 = (char *)&v55 - v12;
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release(a2);
    return &_swiftEmptySetSingleton;
  }
  v13 = -1 << *(_BYTE *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = ~v13;
  v16 = -v13;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v62 = a1;
  v63 = a1 + 56;
  v18 = a1;
  v19 = a1 + 56;
  v20 = v17 & v14;
  v21 = v15;
  v64 = v15;
  v65 = 0;
  v66 = v17 & v14;
  v60 = (char *)(a2 + 56);
  v22 = v18;
  v23 = swift_bridgeObjectRetain(v18);
  v24 = 0;
  v56 = v6;
  v59 = a2;
  v57 = v20;
  v58 = 0;
  if (!v20)
    goto LABEL_8;
LABEL_6:
  v25 = (v20 - 1) & v20;
  v26 = __clz(__rbit64(v20)) | (v24 << 6);
  v27 = v24;
  v28 = v19;
LABEL_7:
  (*(void (**)(char *, unint64_t, uint64_t, __n128))(v8 + 16))(v6, *(_QWORD *)(v22 + 48) + *(_QWORD *)(v8 + 72) * v26, v7, v23);
  v29 = 0;
  while (1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v29, 1, v7);
    v62 = v22;
    v63 = v28;
    v64 = v21;
    v65 = v27;
    v66 = v25;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_100073BB4(v22);
      sub_1000051EC((uint64_t)v6, (uint64_t *)&unk_1005E3C80);
      return (void *)v59;
    }
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v61, v6, v7);
    v33 = v59;
    v34 = *(_QWORD *)(v59 + 40);
    v35 = sub_100008000(&qword_1005D7300, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
    v36 = dispatch thunk of Hashable._rawHashValue(seed:)(v34, v7, v35);
    v37 = -1 << *(_BYTE *)(v33 + 32);
    v38 = v36 & ~v37;
    if (((*(_QWORD *)&v60[(v38 >> 3) & 0xFFFFFFFFFFFFF8] >> v38) & 1) != 0)
      break;
    v45 = *(void (**)(char *, uint64_t))(v8 + 8);
LABEL_34:
    v45(v61, v7);
    v24 = v65;
    v20 = v66;
    v22 = v62;
    v19 = v63;
    v21 = v64;
    v6 = v56;
    v57 = v66;
    v58 = v65;
    if (v66)
      goto LABEL_6;
LABEL_8:
    v27 = v24 + 1;
    if (__OFADD__(v24, 1))
      __break(1u);
    v28 = v19;
    v30 = (unint64_t)(v21 + 64) >> 6;
    if (v27 >= v30)
      goto LABEL_26;
    v31 = *(_QWORD *)(v19 + 8 * v27);
    if (v31)
      goto LABEL_11;
    v24 += 2;
    if (v27 + 1 >= v30)
      goto LABEL_36;
    v31 = *(_QWORD *)(v19 + 8 * v24);
    if (v31)
      goto LABEL_14;
    if (v27 + 2 >= v30)
    {
LABEL_26:
      v25 = 0;
      v29 = 1;
      v27 = v24;
    }
    else
    {
      v31 = *(_QWORD *)(v19 + 8 * (v27 + 2));
      if (v31)
      {
        v27 += 2;
        goto LABEL_11;
      }
      v24 = v27 + 3;
      if (v27 + 3 >= v30)
      {
        v25 = 0;
        v29 = 1;
        v27 += 2;
      }
      else
      {
        v31 = *(_QWORD *)(v19 + 8 * v24);
        if (v31)
        {
LABEL_14:
          v27 = v24;
LABEL_11:
          v25 = (v31 - 1) & v31;
          v26 = __clz(__rbit64(v31)) + (v27 << 6);
          goto LABEL_7;
        }
        v27 += 4;
        if (v27 >= v30)
          goto LABEL_26;
        v31 = *(_QWORD *)(v19 + 8 * v27);
        if (v31)
          goto LABEL_11;
        v27 = v30 - 1;
        v32 = v58 + 6;
        while (v30 != v32)
        {
          v31 = *(_QWORD *)(v19 + 8 * v32++);
          if (v31)
          {
            v27 = v32 - 1;
            goto LABEL_11;
          }
        }
LABEL_36:
        v25 = 0;
        v29 = 1;
      }
    }
  }
  v39 = v33;
  v40 = ~v37;
  v41 = *(_QWORD *)(v8 + 72);
  v42 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  while (1)
  {
    v42(v11, *(_QWORD *)(v39 + 48) + v41 * v38, v7);
    v43 = sub_100008000(&qword_1005D7308, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
    v44 = dispatch thunk of static Equatable.== infix(_:_:)(v11, v61, v7, v43);
    v45 = *(void (**)(char *, uint64_t))(v8 + 8);
    v45(v11, v7);
    if ((v44 & 1) != 0)
      break;
    v38 = (v38 + 1) & v40;
    if (((*(_QWORD *)&v60[(v38 >> 3) & 0xFFFFFFFFFFFFF8] >> v38) & 1) == 0)
      goto LABEL_34;
  }
  isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v45)(v61, v7);
  v47 = *(_BYTE *)(v39 + 32);
  v48 = v47 & 0x3F;
  v49 = (1 << v47) + 63;
  v50 = v49 >> 6;
  v51 = 8 * (v49 >> 6);
  if (v48 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v49 >> 6), 8), (_DWORD)isStackAllocationSafe))
  {
    __chkstk_darwin(isStackAllocationSafe);
    memcpy((char *)&v55 - ((v51 + 15) & 0x3FFFFFFFFFFFFFF0), v60, v51);
    v52 = sub_1001CC050((unint64_t *)((char *)&v55 - ((v51 + 15) & 0x3FFFFFFFFFFFFFF0)), v50, v39, v38, &v62);
    swift_release(v39);
    sub_100073BB4(v62);
  }
  else
  {
    v54 = (void *)swift_slowAlloc(v51, -1);
    memcpy(v54, v60, v51);
    v52 = sub_1001CC050((unint64_t *)v54, v50, v39, v38, &v62);
    swift_release(v39);
    sub_100073BB4(v62);
    swift_slowDealloc(v54, -1, -1);
  }
  return v52;
}

void *sub_1001CBD0C(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *result;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t);
  uint64_t v28;
  char *v29;
  void (*v30)(uint64_t, unint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v44 = a2;
  v9 = type metadata accessor for FMIPPlaySoundChannels(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v11);
  result = (void *)__chkstk_darwin(v14);
  v18 = (char *)&v44 - v17;
  v19 = *(_QWORD *)(a3 + 16);
  v20 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  v21 = *(unint64_t *)((char *)a1 + v20);
  v45 = a1;
  *(unint64_t *)((char *)a1 + v20) = v21 & ((-1 << a4) - 1);
  v22 = v19 - 1;
  v23 = *a5;
  v24 = a5[1];
  v25 = *(_QWORD *)(*a5 + 16);
  v46 = v22;
  if (v24 == v25)
  {
LABEL_2:
    swift_retain(a3);
    return (void *)sub_1001CC4C8(v45, v44, v46, a3, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, &qword_1005D9988, &qword_1005D7300, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
  }
  v48 = v16;
  v49 = a3 + 56;
  v51 = v10;
  v26 = v16;
  v47 = a5;
  while (v24 < v25)
  {
    v28 = v23 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v50 = *(_QWORD *)(v10 + 72);
    v29 = v18;
    v30 = *(void (**)(uint64_t, unint64_t, uint64_t))(v10 + 16);
    v30(v26, v28 + v50 * v24, v9);
    a5[1] = v24 + 1;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v29, v26, v9);
    v31 = *(_QWORD *)(a3 + 40);
    v32 = sub_100008000(&qword_1005D7300, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
    v33 = v29;
    v34 = dispatch thunk of Hashable._rawHashValue(seed:)(v31, v9, v32);
    v35 = a3;
    v36 = -1 << *(_BYTE *)(a3 + 32);
    v37 = v34 & ~v36;
    if (((*(_QWORD *)(v49 + ((v37 >> 3) & 0xFFFFFFFFFFFFF8)) >> v37) & 1) == 0)
    {
      v27 = *(uint64_t (**)(char *, uint64_t))(v51 + 8);
LABEL_6:
      v18 = v33;
      result = (void *)v27(v33, v9);
LABEL_7:
      a3 = v35;
      v10 = v51;
      v26 = v48;
      goto LABEL_8;
    }
    v38 = ~v36;
    while (1)
    {
      v30((uint64_t)v13, *(_QWORD *)(v35 + 48) + v37 * v50, v9);
      v39 = sub_100008000(&qword_1005D7308, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
      v40 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v33, v9, v39);
      v27 = *(uint64_t (**)(char *, uint64_t))(v51 + 8);
      v27(v13, v9);
      if ((v40 & 1) != 0)
        break;
      v37 = (v37 + 1) & v38;
      if (((*(_QWORD *)(v49 + ((v37 >> 3) & 0xFFFFFFFFFFFFF8)) >> v37) & 1) == 0)
        goto LABEL_6;
    }
    v18 = v33;
    result = (void *)v27(v33, v9);
    v41 = (v37 >> 3) & 0x1FFFFFFFFFFFFFF8;
    v42 = *(unint64_t *)((char *)v45 + v41);
    *(unint64_t *)((char *)v45 + v41) = v42 & ~(1 << v37);
    if ((v42 & (1 << v37)) == 0)
      goto LABEL_7;
    v43 = v46 - 1;
    v10 = v51;
    v26 = v48;
    if (__OFSUB__(v46, 1))
      goto LABEL_20;
    a3 = v35;
    --v46;
    if (!v43)
      return &_swiftEmptySetSingleton;
LABEL_8:
    a5 = v47;
    v23 = *v47;
    v24 = v47[1];
    v25 = *(_QWORD *)(*v47 + 16);
    if (v24 == v25)
      goto LABEL_2;
  }
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

void *sub_1001CC050(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, unint64_t, uint64_t);
  uint64_t v41;
  char v42;
  int64_t v43;
  int64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t *v54;
  char *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;

  v52 = a2;
  v9 = sub_100053F2C((uint64_t *)&unk_1005E3C80);
  __chkstk_darwin(v9);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FMIPPlaySoundChannels(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (void *)__chkstk_darwin(v14);
  v60 = (char *)&v51 - v18;
  v19 = *(_QWORD *)(a3 + 16);
  v20 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  v21 = *(unint64_t *)((char *)a1 + v20) & ((-1 << a4) - 1);
  v54 = a1;
  v55 = v11;
  *(unint64_t *)((char *)a1 + v20) = v21;
  v22 = v19 - 1;
  v58 = a3 + 56;
  v59 = a3;
  v56 = a5;
  while (2)
  {
    v53 = v22;
    do
    {
      while (1)
      {
        v24 = *a5;
        v25 = a5[1];
        v27 = a5[2];
        v26 = a5[3];
        v28 = a5[4];
        v57 = v27;
        if (v28)
        {
          v29 = (v28 - 1) & v28;
          v30 = __clz(__rbit64(v28)) | (v26 << 6);
LABEL_7:
          (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v11, *(_QWORD *)(v24 + 48) + *(_QWORD *)(v13 + 72) * v30, v12);
          v31 = 0;
          goto LABEL_8;
        }
        v43 = v26 + 1;
        if (__OFADD__(v26, 1))
        {
          __break(1u);
          goto LABEL_44;
        }
        v44 = (unint64_t)(v27 + 64) >> 6;
        if (v43 >= v44)
        {
          v29 = 0;
          v31 = 1;
          goto LABEL_8;
        }
        v45 = *(_QWORD *)(v25 + 8 * v43);
        if (v45)
          goto LABEL_17;
        v48 = v26 + 2;
        if (v26 + 2 >= v44)
          goto LABEL_35;
        v45 = *(_QWORD *)(v25 + 8 * v48);
        if (v45)
          goto LABEL_23;
        if (v26 + 3 >= v44)
          goto LABEL_36;
        v45 = *(_QWORD *)(v25 + 8 * (v26 + 3));
        if (v45)
        {
          v43 = v26 + 3;
          goto LABEL_17;
        }
        v48 = v26 + 4;
        if (v26 + 4 < v44)
        {
          v45 = *(_QWORD *)(v25 + 8 * v48);
          if (v45)
          {
LABEL_23:
            v43 = v48;
LABEL_17:
            v29 = (v45 - 1) & v45;
            v30 = __clz(__rbit64(v45)) + (v43 << 6);
            v26 = v43;
            goto LABEL_7;
          }
          v43 = v26 + 5;
          if (v26 + 5 < v44)
          {
            v45 = *(_QWORD *)(v25 + 8 * v43);
            if (v45)
              goto LABEL_17;
            v43 = v44 - 1;
            v49 = v26 + 6;
            while (v44 != v49)
            {
              v45 = *(_QWORD *)(v25 + 8 * v49++);
              if (v45)
              {
                v43 = v49 - 1;
                goto LABEL_17;
              }
            }
LABEL_35:
            v29 = 0;
            v31 = 1;
            v26 = v43;
            goto LABEL_8;
          }
LABEL_36:
          v29 = 0;
          v31 = 1;
          v26 = v48;
          goto LABEL_8;
        }
        v29 = 0;
        v31 = 1;
        v26 += 3;
LABEL_8:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v31, 1, v12);
        *a5 = v24;
        a5[1] = v25;
        a5[2] = v57;
        a5[3] = v26;
        a5[4] = v29;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
        {
          sub_1000051EC((uint64_t)v11, (uint64_t *)&unk_1005E3C80);
          v50 = v59;
          swift_retain(v59);
          return (void *)sub_1001CC4C8(v54, v52, v53, v50, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, &qword_1005D9988, &qword_1005D7300, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
        }
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v60, v11, v12);
        v32 = v59;
        v33 = *(_QWORD *)(v59 + 40);
        v34 = sub_100008000(&qword_1005D7300, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
        v35 = dispatch thunk of Hashable._rawHashValue(seed:)(v33, v12, v34);
        v36 = -1 << *(_BYTE *)(v32 + 32);
        v37 = v35 & ~v36;
        if (((*(_QWORD *)(v58 + ((v37 >> 3) & 0xFFFFFFFFFFFFF8)) >> v37) & 1) != 0)
          break;
        v23 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
LABEL_4:
        result = (void *)v23(v60, v12);
        v11 = v55;
        a5 = v56;
      }
      v38 = ~v36;
      v39 = *(_QWORD *)(v13 + 72);
      v40 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
      while (1)
      {
        v40(v16, *(_QWORD *)(v59 + 48) + v39 * v37, v12);
        v41 = sub_100008000(&qword_1005D7308, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
        v42 = dispatch thunk of static Equatable.== infix(_:_:)(v16, v60, v12, v41);
        v23 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
        v23(v16, v12);
        if ((v42 & 1) != 0)
          break;
        v37 = (v37 + 1) & v38;
        if (((*(_QWORD *)(v58 + ((v37 >> 3) & 0xFFFFFFFFFFFFF8)) >> v37) & 1) == 0)
          goto LABEL_4;
      }
      result = (void *)v23(v60, v12);
      v46 = (v37 >> 3) & 0x1FFFFFFFFFFFFFF8;
      v11 = v55;
      v47 = *(unint64_t *)((char *)v54 + v46);
      *(unint64_t *)((char *)v54 + v46) = v47 & ~(1 << v37);
      a5 = v56;
    }
    while ((v47 & (1 << v37)) == 0);
    v22 = v53 - 1;
    if (__OFSUB__(v53, 1))
    {
LABEL_44:
      __break(1u);
      return result;
    }
    if (v53 != 1)
      continue;
    return &_swiftEmptySetSingleton;
  }
}

uint64_t sub_1001CC4C8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t *a6, unint64_t *a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  unint64_t *v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t);
  unint64_t *v43;
  uint64_t v44;
  uint64_t v45;

  v43 = a7;
  v44 = a8;
  v42 = a5;
  v13 = a5(0);
  v45 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v40 - v14;
  if (!a3)
  {
    swift_release(a4);
    return (uint64_t)&_swiftEmptySetSingleton;
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    return a4;
  sub_100053F2C(a6);
  result = static _SetStorage.allocate(capacity:)(a3);
  v16 = result;
  v40 = a1;
  v41 = a2;
  if (a2 < 1)
    v18 = 0;
  else
    v18 = *a1;
  v19 = 0;
  v20 = result + 56;
  while (1)
  {
    if (v18)
    {
      v21 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v22 = v21 | (v19 << 6);
    }
    else
    {
      v23 = v19 + 1;
      if (__OFADD__(v19, 1))
        goto LABEL_40;
      if (v23 >= v41)
      {
LABEL_37:
        swift_release(a4);
        return v16;
      }
      v24 = v40[v23];
      ++v19;
      if (!v24)
      {
        v19 = v23 + 1;
        if (v23 + 1 >= v41)
          goto LABEL_37;
        v24 = v40[v19];
        if (!v24)
        {
          v19 = v23 + 2;
          if (v23 + 2 >= v41)
            goto LABEL_37;
          v24 = v40[v19];
          if (!v24)
          {
            v25 = v23 + 3;
            if (v25 >= v41)
              goto LABEL_37;
            v24 = v40[v25];
            if (!v24)
            {
              while (1)
              {
                v19 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_41;
                if (v19 >= v41)
                  goto LABEL_37;
                v24 = v40[v19];
                ++v25;
                if (v24)
                  goto LABEL_24;
              }
            }
            v19 = v25;
          }
        }
      }
LABEL_24:
      v18 = (v24 - 1) & v24;
      v22 = __clz(__rbit64(v24)) + (v19 << 6);
    }
    v26 = a4;
    v27 = *(_QWORD *)(a4 + 48);
    v28 = *(_QWORD *)(v45 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v45 + 16))(v15, v27 + v28 * v22, v13);
    v29 = *(_QWORD *)(v16 + 40);
    v30 = sub_100008000(v43, v42, v44);
    result = dispatch thunk of Hashable._rawHashValue(seed:)(v29, v13, v30);
    v31 = -1 << *(_BYTE *)(v16 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v20 + 8 * (v32 >> 6))) != 0)
    {
      v34 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v20 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v37 = v33 == v36;
        if (v33 == v36)
          v33 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v20 + 8 * v33);
      }
      while (v38 == -1);
      v34 = __clz(__rbit64(~v38)) + (v33 << 6);
    }
    *(_QWORD *)(v20 + ((v34 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v34;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v45 + 32))(*(_QWORD *)(v16 + 48) + v34 * v28, v15, v13);
    ++*(_QWORD *)(v16 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v26;
    if (!a3)
      goto LABEL_37;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1001CC7B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, unint64_t, uint64_t);
  unint64_t v20;
  uint64_t v21;
  char v22;
  __n128 v23;
  uint64_t v24;
  uint64_t *v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v3 = v2;
  v6 = type metadata accessor for FMIPPlaySoundChannels(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v13 = sub_100008000(&qword_1005D7300, v12, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
  swift_bridgeObjectRetain(v10);
  v34 = a1;
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  v16 = v14 & ~v15;
  if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v32 = v3;
    v33 = a2;
    v17 = ~v15;
    v18 = *(_QWORD *)(v7 + 72);
    v35 = v7;
    v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v20 = v18 * v16;
      v19(v9, *(_QWORD *)(v10 + 48) + v18 * v16, v6);
      v21 = sub_100008000(&qword_1005D7308, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
      v22 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v34, v6, v21);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v6);
      if ((v22 & 1) != 0)
        break;
      v16 = (v16 + 1) & v17;
      if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        v23 = swift_bridgeObjectRelease(v10);
        v24 = 1;
        a2 = v33;
        v7 = v35;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(a2, v24, 1, v6, v23);
      }
    }
    swift_bridgeObjectRelease(v10);
    v25 = v32;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v32);
    v27 = *v25;
    v36 = *v25;
    *v25 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100206E18();
      v27 = v36;
    }
    v28 = *(_QWORD *)(v27 + 48) + v20;
    v7 = v35;
    a2 = v33;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v35 + 32))(v33, v28, v6);
    sub_1001CC9F4(v16);
    v29 = *v25;
    *v25 = v36;
    v23 = swift_bridgeObjectRelease(v29);
    v24 = 0;
  }
  else
  {
    v23 = swift_bridgeObjectRelease(v10);
    v24 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(a2, v24, 1, v6, v23);
}

void sub_1001CC9F4(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;

  v3 = type metadata accessor for FMIPPlaySoundChannels(0);
  v32 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = *v1 + 56;
  v8 = -1 << *(_BYTE *)(*v1 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(v7 + 8 * (v9 >> 6))) != 0)
  {
    v29 = v1;
    v10 = ~v8;
    swift_retain(v6);
    v11 = _HashTable.previousHole(before:)(a1, v7, v10);
    v31 = v7;
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v12 = (v11 + 1) & v10;
      v13 = *(_QWORD *)(v32 + 72);
      v30 = *(void (**)(char *, unint64_t, uint64_t))(v32 + 16);
      do
      {
        v14 = v13 * v9;
        v30(v5, *(_QWORD *)(v6 + 48) + v13 * v9, v3);
        v15 = *(_QWORD *)(v6 + 40);
        v16 = sub_100008000(&qword_1005D7300, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
        v17 = dispatch thunk of Hashable._rawHashValue(seed:)(v15, v3, v16);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v3);
        v18 = v17 & v10;
        if (a1 >= (uint64_t)v12)
        {
          if (v18 < v12 || a1 < (uint64_t)v18)
            goto LABEL_6;
        }
        else if (v18 < v12 && a1 < (uint64_t)v18)
        {
          goto LABEL_6;
        }
        v21 = *(_QWORD *)(v6 + 48);
        v22 = v13 * a1;
        v23 = v21 + v13 * a1;
        v24 = v21 + v14;
        if (v13 * a1 < v14 || v23 >= v24 + v13)
        {
          swift_arrayInitWithTakeFrontToBack(v23, v24);
        }
        else
        {
          a1 = v9;
          if (v22 == v14)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront(v23, v24);
        }
        a1 = v9;
LABEL_6:
        v9 = (v9 + 1) & v10;
      }
      while (((*(_QWORD *)(v31 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    *(_QWORD *)(v31 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    swift_release(v6);
    v1 = v29;
  }
  else
  {
    *(_QWORD *)(v7 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v25 = *v1;
  v26 = *(_QWORD *)(*v1 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v25 + 16) = v28;
    ++*(_DWORD *)(v25 + 36);
  }
}

uint64_t sub_1001CCC70(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  size_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v12;

  v2 = isStackAllocationSafe;
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = v3 & 0x3F;
  v5 = (1 << v3) + 63;
  v6 = v5 >> 6;
  v7 = 8 * (v5 >> 6);
  if (v4 <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(8 * (v5 >> 6), 8), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v12 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    v8 = sub_1001CCDCC((unint64_t *)((char *)&v12 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, v2);
    swift_release(v2);
    if (v1)
      swift_willThrow(v9);
  }
  else
  {
    v10 = (void *)swift_slowAlloc(v7, -1);
    bzero(v10, v7);
    v8 = sub_1001CCDCC((unint64_t *)v10, v6, v2);
    swift_release(v2);
    swift_slowDealloc(v10, -1, -1);
  }
  return v8;
}

uint64_t sub_1001CCDCC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t);
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  int64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int64_t v50;

  v36 = a2;
  v37 = a1;
  v4 = type metadata accessor for FMItemCapabilities(0);
  v46 = *(_QWORD *)(v4 - 8);
  v47 = v4;
  v5 = __chkstk_darwin(v4);
  v45 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v44 = (char *)&v35 - v7;
  v8 = type metadata accessor for FMIPItem(0);
  v42 = *(_QWORD *)(v8 - 8);
  v43 = v8;
  result = __chkstk_darwin(v8);
  v41 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = 0;
  v48 = a3;
  v12 = *(_QWORD *)(a3 + 56);
  v40 = a3 + 56;
  v13 = 1 << *(_BYTE *)(a3 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v38 = 0;
  v39 = (unint64_t)(v13 + 63) >> 6;
  v17 = v41;
  v16 = v42;
  v18 = v43;
  v19 = v44;
  v20 = v45;
  v21 = v47;
  while (1)
  {
    if (v15)
    {
      v49 = (v15 - 1) & v15;
      v50 = v11;
      v22 = __clz(__rbit64(v15)) | (v11 << 6);
      goto LABEL_5;
    }
    v29 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
    if (v29 >= v39)
      goto LABEL_22;
    v30 = *(_QWORD *)(v40 + 8 * v29);
    v31 = v11 + 1;
    if (!v30)
    {
      v31 = v29 + 1;
      if (v29 + 1 >= v39)
        goto LABEL_22;
      v30 = *(_QWORD *)(v40 + 8 * v31);
      if (!v30)
        break;
    }
LABEL_18:
    v49 = (v30 - 1) & v30;
    v50 = v31;
    v22 = __clz(__rbit64(v30)) + (v31 << 6);
LABEL_5:
    v23 = v22;
    v24 = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v16 + 16))(v17, *(_QWORD *)(v48 + 48) + *(_QWORD *)(v16 + 72) * v22, v18);
    v25 = FMIPItem.capabilities.getter(v24);
    static FMItemCapabilities.canBTFinding.getter(v25);
    v26 = sub_100008000((unint64_t *)&qword_1005E3B40, (uint64_t (*)(uint64_t))&type metadata accessor for FMItemCapabilities, (uint64_t)&protocol conformance descriptor for FMItemCapabilities);
    v27 = dispatch thunk of SetAlgebra.isSuperset(of:)(v20, v21, v26);
    v28 = *(void (**)(char *, uint64_t))(v46 + 8);
    v28(v20, v21);
    v28(v19, v21);
    result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v17, v18);
    v11 = v50;
    v15 = v49;
    if ((v27 & 1) != 0)
    {
      *(unint64_t *)((char *)v37 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      if (__OFADD__(v38++, 1))
      {
        __break(1u);
LABEL_22:
        v34 = v48;
        swift_retain(v48);
        return sub_1001CC4C8(v37, v36, v38, v34, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItem, &qword_1005D9950, &qword_1005D4DD0, (uint64_t)&protocol conformance descriptor for FMIPItem);
      }
    }
  }
  v32 = v29 + 2;
  if (v32 >= v39)
    goto LABEL_22;
  v30 = *(_QWORD *)(v40 + 8 * v32);
  if (v30)
  {
    v31 = v32;
    goto LABEL_18;
  }
  while (1)
  {
    v31 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v31 >= v39)
      goto LABEL_22;
    v30 = *(_QWORD *)(v40 + 8 * v31);
    ++v32;
    if (v30)
      goto LABEL_18;
  }
LABEL_24:
  __break(1u);
  return result;
}

int64_t sub_1001CD0D4(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1001CD1B8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1001CD1DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001C9A34(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), "FMDeviceDetailContentViewController: Finding action STOP succeeded for identifier: %s", "FMDeviceDetailContentViewController: Finding action STOP failed with error %@");
}

void sub_1001CD204(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001C9A34(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), "FMDeviceDetailContentViewController: Finding action START succeeded for identifier: %s", "FMDeviceDetailContentViewController: Finding action START failed with error %@");
}

void sub_1001CD22C(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  __n128 v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  char *v39;
  char *v40;
  int v41;
  char v42[24];

  v41 = a1;
  v2 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FMIPDevice(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = __chkstk_darwin(v5);
  v39 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v40 = (char *)&v38 - v9;
  v10 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator) + 24);
  v11 = (uint64_t *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource)
                  + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel);
  swift_beginAccess(v11, v42, 0, 0);
  v12 = *v11;
  v13 = v11[1];
  swift_retain(v10);
  swift_bridgeObjectRetain(v13);
  v15 = FMIPManager.devices.getter(v14);
  swift_bridgeObjectRetain(v13);
  v16 = sub_100414D38(v15, v12, v13);
  swift_bridgeObjectRelease(v15);
  v17 = swift_bridgeObjectRelease(v13);
  if (v16[2])
  {
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v6 + 16))(v4, (unint64_t)v16+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), v5, v17);
    v18 = 0;
  }
  else
  {
    v18 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, v18, 1, v5);
  swift_release(v10);
  swift_bridgeObjectRelease(v16);
  v19 = swift_bridgeObjectRelease(v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v6 + 48))(v4, 1, v5, v19) == 1)
  {
    sub_1000051EC((uint64_t)v4, &qword_1005D6710);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v20 = type metadata accessor for Logger(0);
    v21 = sub_100056D88(v20, (uint64_t)qword_1005F5748);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.error.getter(v22);
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "FMDeviceDetailContentViewController: cannot enable notify me for unknown device", v24, 2u);
      swift_slowDealloc(v24, -1, -1);
    }

  }
  else
  {
    v25 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v26 = v40;
    v25(v40, v4, v5);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v27 = type metadata accessor for Logger(0);
    v28 = sub_100056D88(v27, (uint64_t)qword_1005F5748);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.default.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "FMDeviceDetailContentViewController: Notify Me button toggled", v31, 2u);
      swift_slowDealloc(v31, -1, -1);
    }

    v32 = swift_allocObject(&unk_10054B5D0, 24, 7);
    swift_unknownObjectWeakInit(v32 + 16);
    v33 = v39;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v39, v26, v5);
    v34 = *(unsigned __int8 *)(v6 + 80);
    v35 = (v34 + 25) & ~v34;
    v36 = swift_allocObject(&unk_10054B5F8, v35 + v7, v34 | 7);
    *(_QWORD *)(v36 + 16) = v32;
    *(_BYTE *)(v36 + 24) = v41 & 1;
    v25((char *)(v36 + v35), v33, v5);
    sub_1000A0F40((uint64_t)sub_1001D40B0, v36, 0, 0);
    v37 = swift_release(v36);
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v26, v5, v37);
  }
}

void *sub_1001CD650()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  __n128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v105;
  __n128 v106;
  void (*v107)(char *, uint64_t, __n128);
  uint64_t v108;
  void (*v109)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  unint64_t v110;
  uint64_t (*v111)(_QWORD, _QWORD, _QWORD, __n128);
  __n128 v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v124;
  __n128 v125;
  void (*v126)(char *, uint64_t, __n128);
  uint64_t v127;
  __n128 v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  void (*v134)(char *, uint64_t);
  __n128 v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  void (*v144)(char *, uint64_t);
  __n128 v145;
  __n128 v146;
  char *v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  char v155;
  __n128 v156;
  void (*v157)(char *, uint64_t, __n128);
  void (*v158)(char *, uint64_t);
  __n128 v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t (*v163)(char *, unint64_t, uint64_t, __n128);
  __n128 v164;
  uint64_t v165;
  char *v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char v175;
  __n128 v176;
  void (*v177)(char *, uint64_t, __n128);
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  void (*v184)(char *, uint64_t);
  __n128 v185;
  uint64_t v186;
  uint64_t (*v187)(uint64_t, uint64_t, uint64_t);
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  char v210;
  void (*v211)(char *, uint64_t);
  uint64_t (*v212)(char *, char *, uint64_t);
  char *v213;
  uint64_t v214;
  char *v215;
  char v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  char *v224;
  char *v225;
  char v226;
  char *v227;
  uint64_t v228;
  char *v229;
  char v230;
  uint64_t v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  char *v238;
  char v239;
  char *v240;
  uint64_t v241;
  char *v242;
  char v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  char *v249;
  char *v250;
  char v251;
  uint64_t v252;
  char *v253;
  char v254;
  uint64_t v255;
  char *v256;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  NSObject *v262;
  os_log_type_t v263;
  uint64_t v264;
  uint64_t v265;
  void *v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  unint64_t v270;
  unint64_t v271;
  char v273;
  char *v274;
  char v275;
  char *v276;
  char *v277;
  char v278;
  char v279;
  uint64_t v280;
  unint64_t v281;
  char *v282;
  char *v283;
  char *v284;
  char *v285;
  uint64_t v286;
  char *v287;
  char *v288;
  char *v289;
  char *v290;
  char *v291;
  char *v292;
  char *v293;
  uint64_t v294;
  uint64_t v295;
  char *v296;
  char *v297;
  char *v298;
  char *v299;
  char *v300;
  char *v301;
  char *v302;
  uint64_t v303;
  char *v304;
  char *v305;
  uint64_t v306;
  void (*v307)(uint64_t, uint64_t, uint64_t, uint64_t, __n128);
  char *v308;
  uint64_t v309;
  unint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  char *v316;
  char *v317;
  char *v318;
  uint64_t v319;
  uint64_t v320;
  char *v321;
  unsigned int v322;
  uint64_t (*v323)(_QWORD, _QWORD, _QWORD, __n128);
  char *v324;
  char *v325;
  char *v326;
  char *v327;
  uint64_t (*v328)(char *, unint64_t, uint64_t, __n128);
  void (*v329)(char *, _QWORD, uint64_t);
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  void *v340;

  v0 = type metadata accessor for FMIPPlaySoundChannels(0);
  v320 = *(_QWORD *)(v0 - 8);
  v1 = __chkstk_darwin(v0);
  v308 = (char *)&v280 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  v319 = (uint64_t)&v280 - v3;
  v4 = type metadata accessor for FMIPItemState(0);
  v306 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v305 = (char *)&v280 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v304 = (char *)&v280 - v8;
  v9 = __chkstk_darwin(v7);
  v302 = (char *)&v280 - v10;
  v11 = __chkstk_darwin(v9);
  v301 = (char *)&v280 - v12;
  v13 = __chkstk_darwin(v11);
  v300 = (char *)&v280 - v14;
  v15 = __chkstk_darwin(v13);
  v299 = (char *)&v280 - v16;
  v17 = __chkstk_darwin(v15);
  v298 = (char *)&v280 - v18;
  v19 = __chkstk_darwin(v17);
  v297 = (char *)&v280 - v20;
  v21 = __chkstk_darwin(v19);
  v321 = (char *)&v280 - v22;
  v23 = __chkstk_darwin(v21);
  v285 = (char *)&v280 - v24;
  v25 = __chkstk_darwin(v23);
  v316 = (char *)&v280 - v26;
  v27 = __chkstk_darwin(v25);
  v284 = (char *)&v280 - v28;
  v29 = __chkstk_darwin(v27);
  v318 = (char *)&v280 - v30;
  v31 = __chkstk_darwin(v29);
  v283 = (char *)&v280 - v32;
  v33 = __chkstk_darwin(v31);
  v317 = (char *)&v280 - v34;
  v35 = __chkstk_darwin(v33);
  v282 = (char *)&v280 - v36;
  __chkstk_darwin(v35);
  v38 = (char *)&v280 - v37;
  v39 = type metadata accessor for FMIPPartType(0);
  v40 = *(_QWORD *)(v39 - 8);
  v331 = v39;
  v332 = v40;
  v41 = __chkstk_darwin(v39);
  v291 = (char *)&v280 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __chkstk_darwin(v41);
  v290 = (char *)&v280 - v44;
  v45 = __chkstk_darwin(v43);
  v289 = (char *)&v280 - v46;
  v47 = __chkstk_darwin(v45);
  v288 = (char *)&v280 - v48;
  v49 = __chkstk_darwin(v47);
  v324 = (char *)&v280 - v50;
  v51 = __chkstk_darwin(v49);
  v287 = (char *)&v280 - v52;
  v53 = __chkstk_darwin(v51);
  v55 = (char *)&v280 - v54;
  __chkstk_darwin(v53);
  v57 = (char *)&v280 - v56;
  v58 = type metadata accessor for FMIPItem(0);
  v333 = *(_QWORD *)(v58 - 8);
  v334 = v58;
  v59 = __chkstk_darwin(v58);
  v327 = (char *)&v280 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __chkstk_darwin(v59);
  v326 = (char *)&v280 - v62;
  v63 = __chkstk_darwin(v61);
  v325 = (char *)&v280 - v64;
  __chkstk_darwin(v63);
  v66 = (char *)&v280 - v65;
  v67 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  v68 = __chkstk_darwin(v67);
  v296 = (char *)&v280 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __chkstk_darwin(v68);
  v295 = (uint64_t)&v280 - v71;
  v72 = __chkstk_darwin(v70);
  v294 = (uint64_t)&v280 - v73;
  v74 = __chkstk_darwin(v72);
  v292 = (char *)&v280 - v75;
  v76 = __chkstk_darwin(v74);
  v313 = (uint64_t)&v280 - v77;
  v78 = __chkstk_darwin(v76);
  v312 = (uint64_t)&v280 - v79;
  v80 = __chkstk_darwin(v78);
  v314 = (uint64_t)&v280 - v81;
  __chkstk_darwin(v80);
  v315 = (uint64_t)&v280 - v82;
  v83 = sub_100053F2C(&qword_1005D72D0);
  v84 = __chkstk_darwin(v83);
  v86 = (char *)&v280 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  v303 = FMIPDevice.identifier.getter(v84);
  v310 = v87;
  v340 = &_swiftEmptySetSingleton;
  FMIPDevice.itemGroup.getter(v303);
  v88 = type metadata accessor for FMIPItemGroup(0);
  v89 = *(_QWORD *)(v88 - 8);
  v90 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v89 + 48))(v86, 1, v88);
  if ((_DWORD)v90 == 1)
  {
    sub_1000051EC((uint64_t)v86, &qword_1005D72D0);
    v91 = v310;
    v92 = v0;
    goto LABEL_83;
  }
  v293 = v38;
  v286 = v4;
  v309 = v0;
  v93 = FMIPItemGroup.items.getter(v90);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v86, v88);
  v94 = *(_QWORD *)(v93 + 16);
  v95 = v334;
  v311 = v93;
  v330 = v94;
  if (v94)
  {
    v96 = v93 + ((*(unsigned __int8 *)(v333 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v333 + 80));
    LODWORD(v329) = enum case for FMIPPartType.leftBud(_:);
    v323 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD, __n128))(v333 + 72);
    v328 = *(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v333 + 16);
    v97 = swift_bridgeObjectRetain(v93);
    v98 = v331;
    v99 = v332;
    while (1)
    {
      v100 = v328(v66, v96, v95, v97);
      FMIPItem.partType.getter(v100);
      (*(void (**)(char *, _QWORD, uint64_t))(v99 + 104))(v55, v329, v98);
      v101 = sub_100008000((unint64_t *)&unk_1005E3AF0, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPartType, (uint64_t)&protocol conformance descriptor for FMIPPartType);
      dispatch thunk of RawRepresentable.rawValue.getter(&v338, v98, v101);
      dispatch thunk of RawRepresentable.rawValue.getter(&v336, v98, v101);
      v102 = v339;
      v103 = v337;
      if (v338 == v336 && v339 == v337)
        break;
      v105 = _stringCompareWithSmolCheck(_:_:expecting:)(v338, v339, v336, v337, 0);
      swift_bridgeObjectRelease(v102);
      v106 = swift_bridgeObjectRelease(v103);
      v107 = *(void (**)(char *, uint64_t, __n128))(v99 + 8);
      v107(v55, v98, v106);
      ((void (*)(char *, uint64_t))v107)(v57, v98);
      if ((v105 & 1) != 0)
        goto LABEL_22;
      v95 = v334;
      (*(void (**)(char *, uint64_t))(v333 + 8))(v66, v334);
      v96 += (unint64_t)v323;
      if (!--v94)
      {
        v93 = v311;
        swift_bridgeObjectRelease(v311);
        v94 = v330;
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease_n(v339, 2);
    v134 = *(void (**)(char *, uint64_t))(v99 + 8);
    v134(v55, v98);
    v134(v57, v98);
LABEL_22:
    v93 = v311;
    v135 = swift_bridgeObjectRelease(v311);
    v108 = v333;
    v136 = v334;
    v137 = v315;
    (*(void (**)(uint64_t, char *, uint64_t, __n128))(v333 + 32))(v315, v66, v334, v135);
    v109 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v108 + 56);
    v138 = v137;
    v95 = v136;
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v109)(v138, 0, 1, v136);
    v94 = v330;
    if (!v330)
      goto LABEL_23;
  }
  else
  {
LABEL_12:
    v108 = v333;
    v109 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v333 + 56);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v109)(v315, 1, 1, v95);
    if (!v94)
    {
LABEL_23:
      v139 = 1;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v109)(v314, 1, 1, v95);
      v140 = v286;
      v141 = v312;
      v142 = v306;
      v143 = v331;
      goto LABEL_37;
    }
  }
  v307 = v109;
  v110 = v93 + ((*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80));
  v322 = enum case for FMIPPartType.rightBud(_:);
  v328 = *(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v108 + 72);
  v111 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD, __n128))(v108 + 16);
  v112 = swift_bridgeObjectRetain(v93);
  v281 = v110;
  v114 = v331;
  v113 = v332;
  v115 = v287;
  v117 = v324;
  v116 = v325;
  v323 = v111;
  while (1)
  {
    v118 = v111(v116, v110, v95, v112);
    FMIPItem.partType.getter(v118);
    v329 = *(void (**)(char *, _QWORD, uint64_t))(v113 + 104);
    v329(v117, v322, v114);
    v119 = sub_100008000((unint64_t *)&unk_1005E3AF0, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPartType, (uint64_t)&protocol conformance descriptor for FMIPPartType);
    dispatch thunk of RawRepresentable.rawValue.getter(&v338, v114, v119);
    dispatch thunk of RawRepresentable.rawValue.getter(&v336, v114, v119);
    v120 = v339;
    v121 = v113;
    v122 = v337;
    if (v338 == v336 && v339 == v337)
      break;
    v124 = _stringCompareWithSmolCheck(_:_:expecting:)(v338, v339, v336, v337, 0);
    swift_bridgeObjectRelease(v120);
    v125 = swift_bridgeObjectRelease(v122);
    v126 = *(void (**)(char *, uint64_t, __n128))(v121 + 8);
    v126(v117, v114, v125);
    ((void (*)(char *, uint64_t))v126)(v115, v114);
    if ((v124 & 1) != 0)
      goto LABEL_25;
    v113 = v121;
    v95 = v334;
    v116 = v325;
    (*(void (**)(char *, uint64_t))(v333 + 8))(v325, v334);
    v110 += (unint64_t)v328;
    --v94;
    v111 = v323;
    if (!v94)
    {
      v127 = v311;
      v128 = swift_bridgeObjectRelease(v311);
      v129 = 1;
      v130 = v95;
      v131 = v314;
      v132 = v330;
      v133 = v281;
      goto LABEL_26;
    }
  }
  swift_bridgeObjectRelease_n(v339, 2);
  v144 = *(void (**)(char *, uint64_t))(v121 + 8);
  v144(v117, v114);
  v144(v115, v114);
LABEL_25:
  v127 = v311;
  v145 = swift_bridgeObjectRelease(v311);
  v130 = v334;
  v131 = v314;
  (*(void (**)(uint64_t, char *, uint64_t, __n128))(v333 + 32))(v314, v325, v334, v145);
  v129 = 0;
  v132 = v330;
  v133 = v281;
  v111 = v323;
LABEL_26:
  v307(v131, v129, 1, v130, v128);
  LODWORD(v325) = enum case for FMIPPartType.case(_:);
  v146 = swift_bridgeObjectRetain(v127);
  v95 = v130;
  v147 = v289;
  v148 = v288;
  v149 = v326;
  v143 = v331;
  while (1)
  {
    v150 = v111(v149, v133, v95, v146);
    FMIPItem.partType.getter(v150);
    v329(v147, v325, v143);
    dispatch thunk of RawRepresentable.rawValue.getter(&v338, v143, v119);
    dispatch thunk of RawRepresentable.rawValue.getter(&v336, v143, v119);
    v151 = v339;
    v152 = v148;
    v153 = v337;
    if (v338 == v336 && v339 == v337)
      break;
    v155 = _stringCompareWithSmolCheck(_:_:expecting:)(v338, v339, v336, v337, 0);
    swift_bridgeObjectRelease(v151);
    v156 = swift_bridgeObjectRelease(v153);
    v157 = *(void (**)(char *, uint64_t, __n128))(v332 + 8);
    v157(v147, v143, v156);
    ((void (*)(char *, uint64_t))v157)(v152, v143);
    if ((v155 & 1) != 0)
      goto LABEL_35;
    v148 = v152;
    v95 = v334;
    v149 = v326;
    (*(void (**)(char *, uint64_t))(v333 + 8))(v326, v334);
    v133 += (unint64_t)v328;
    if (!--v132)
    {
      swift_bridgeObjectRelease(v311);
      v139 = 1;
      v140 = v286;
      v141 = v312;
      goto LABEL_36;
    }
  }
  swift_bridgeObjectRelease_n(v339, 2);
  v158 = *(void (**)(char *, uint64_t))(v332 + 8);
  v158(v147, v143);
  v158(v152, v143);
LABEL_35:
  v159 = swift_bridgeObjectRelease(v311);
  v95 = v334;
  v141 = v312;
  (*(void (**)(uint64_t, char *, uint64_t, __n128))(v333 + 32))(v312, v326, v334, v159);
  v139 = 0;
  v140 = v286;
LABEL_36:
  v142 = v306;
  v109 = v307;
LABEL_37:
  v160 = 1;
  v307 = v109;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v109)(v141, v139, 1, v95);
  if (v330)
  {
    v161 = v333;
    v162 = v311 + ((*(unsigned __int8 *)(v161 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v161 + 80));
    LODWORD(v331) = enum case for FMIPPartType.standalone(_:);
    v329 = *(void (**)(char *, _QWORD, uint64_t))(v333 + 72);
    v163 = *(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v333 + 16);
    v164 = swift_bridgeObjectRetain(v311);
    v165 = v334;
    v166 = v291;
    v167 = v290;
    v168 = v327;
    while (1)
    {
      v169 = v163(v168, v162, v165, v164);
      FMIPItem.partType.getter(v169);
      v170 = v332;
      (*(void (**)(char *, _QWORD, uint64_t))(v332 + 104))(v166, v331, v143);
      v171 = sub_100008000((unint64_t *)&unk_1005E3AF0, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPartType, (uint64_t)&protocol conformance descriptor for FMIPPartType);
      dispatch thunk of RawRepresentable.rawValue.getter(&v338, v143, v171);
      dispatch thunk of RawRepresentable.rawValue.getter(&v336, v143, v171);
      v172 = v339;
      v173 = v337;
      if (v338 == v336 && v339 == v337)
        break;
      v175 = _stringCompareWithSmolCheck(_:_:expecting:)(v338, v339, v336, v337, 0);
      swift_bridgeObjectRelease(v172);
      v176 = swift_bridgeObjectRelease(v173);
      v177 = *(void (**)(char *, uint64_t, __n128))(v170 + 8);
      v177(v166, v143, v176);
      ((void (*)(char *, uint64_t))v177)(v167, v143);
      if ((v175 & 1) != 0)
        goto LABEL_48;
      v168 = v327;
      v165 = v334;
      (*(void (**)(char *, uint64_t))(v161 + 8))(v327, v334);
      v162 += (unint64_t)v329;
      if (!--v330)
      {
        v178 = v311;
        swift_bridgeObjectRelease(v311);
        v179 = v165;
        v180 = v161;
        v160 = 1;
        v140 = v286;
        v141 = v312;
        v181 = v313;
        goto LABEL_49;
      }
    }
    swift_bridgeObjectRelease_n(v339, 2);
    v184 = *(void (**)(char *, uint64_t))(v170 + 8);
    v184(v166, v143);
    v184(v167, v143);
LABEL_48:
    v178 = v311;
    v185 = swift_bridgeObjectRelease(v311);
    v181 = v313;
    v179 = v334;
    (*(void (**)(uint64_t, char *, uint64_t, __n128))(v161 + 32))(v313, v327, v334, v185);
    v180 = v161;
    v160 = 0;
    v140 = v286;
    v141 = v312;
LABEL_49:
    v183 = v306;
    v182 = (uint64_t)v292;
  }
  else
  {
    v180 = v333;
    v179 = v334;
    v182 = (uint64_t)v292;
    v178 = v311;
    v183 = v142;
    v181 = v313;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v307)(v181, v160, 1, v179);
  swift_bridgeObjectRelease(v178);
  sub_100007464(v315, v182, (uint64_t *)&unk_1005D3AA0);
  v186 = v182;
  v187 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v180 + 48);
  v188 = v187(v186, 1, v179);
  v189 = v180;
  if ((_DWORD)v188 == 1)
  {
    v190 = sub_1000051EC(v186, (uint64_t *)&unk_1005D3AA0);
    v191 = v293;
    static FMIPItemState.normal.getter(v190);
  }
  else
  {
    v192 = v282;
    FMIPItem.state.getter(v188);
    v179 = v334;
    (*(void (**)(uint64_t, uint64_t))(v189 + 8))(v186, v334);
    v191 = v293;
    (*(void (**)(char *, char *, uint64_t))(v183 + 32))(v293, v192, v140);
  }
  v193 = v294;
  v194 = v318;
  sub_100007464(v314, v294, (uint64_t *)&unk_1005D3AA0);
  v195 = v187(v193, 1, v179);
  if ((_DWORD)v195 == 1)
  {
    v196 = sub_1000051EC(v193, (uint64_t *)&unk_1005D3AA0);
    static FMIPItemState.normal.getter(v196);
  }
  else
  {
    v197 = v283;
    FMIPItem.state.getter(v195);
    v179 = v334;
    (*(void (**)(uint64_t, uint64_t))(v189 + 8))(v193, v334);
    (*(void (**)(char *, char *, uint64_t))(v183 + 32))(v317, v197, v140);
  }
  v198 = (uint64_t)v296;
  v199 = v295;
  sub_100007464(v141, v295, (uint64_t *)&unk_1005D3AA0);
  v200 = v187(v199, 1, v179);
  if ((_DWORD)v200 == 1)
  {
    v201 = sub_1000051EC(v199, (uint64_t *)&unk_1005D3AA0);
    static FMIPItemState.normal.getter(v201);
  }
  else
  {
    v202 = v284;
    FMIPItem.state.getter(v200);
    v179 = v334;
    (*(void (**)(uint64_t, uint64_t))(v189 + 8))(v199, v334);
    (*(void (**)(char *, char *, uint64_t))(v183 + 32))(v194, v202, v140);
  }
  sub_100007464(v313, v198, (uint64_t *)&unk_1005D3AA0);
  v203 = v187(v198, 1, v179);
  if ((_DWORD)v203 == 1)
  {
    v204 = sub_1000051EC(v198, (uint64_t *)&unk_1005D3AA0);
    v205 = static FMIPItemState.normal.getter(v204);
  }
  else
  {
    v206 = v285;
    FMIPItem.state.getter(v203);
    (*(void (**)(uint64_t, uint64_t))(v189 + 8))(v198, v179);
    v205 = (*(uint64_t (**)(char *, char *, uint64_t))(v183 + 32))(v316, v206, v140);
  }
  v207 = v309;
  v208 = v321;
  static FMIPItemState.soundPlaying.getter(v205);
  v209 = sub_100008000((unint64_t *)&qword_1005E2280, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItemState, (uint64_t)&protocol conformance descriptor for FMIPItemState);
  v210 = dispatch thunk of SetAlgebra.isSuperset(of:)(v208, v140, v209);
  v211 = *(void (**)(char *, uint64_t))(v183 + 8);
  v211(v208, v140);
  v212 = *(uint64_t (**)(char *, char *, uint64_t))(v183 + 16);
  v213 = v297;
  v214 = v212(v297, v191, v140);
  if ((v210 & 1) != 0)
  {
    v211(v213, v140);
    v215 = v298;
    v212(v298, v191, v140);
LABEL_65:
    v211(v215, v140);
    v218 = v321;
LABEL_66:
    v219 = v320;
    v220 = (uint64_t)v308;
    (*(void (**)(char *, _QWORD, uint64_t))(v320 + 104))(v308, enum case for FMIPPlaySoundChannels.left(_:), v207);
    v221 = v319;
    sub_100203DE4(v319, v220);
    v222 = (*(uint64_t (**)(uint64_t, uint64_t))(v219 + 8))(v221, v207);
    goto LABEL_67;
  }
  static FMIPItemState.soundPending.getter(v214);
  v216 = dispatch thunk of SetAlgebra.isSuperset(of:)(v208, v140, v209);
  v211(v208, v140);
  v211(v213, v140);
  v215 = v298;
  v217 = v212(v298, v191, v140);
  if ((v216 & 1) != 0)
    goto LABEL_65;
  v218 = v321;
  static FMIPItemState.soundQueued.getter(v217);
  v273 = dispatch thunk of SetAlgebra.isSuperset(of:)(v218, v140, v209);
  v211(v218, v140);
  v222 = ((uint64_t (*)(char *, uint64_t))v211)(v215, v140);
  if ((v273 & 1) != 0)
    goto LABEL_66;
LABEL_67:
  static FMIPItemState.soundPlaying.getter(v222);
  v223 = v218;
  v224 = v218;
  v225 = v317;
  v226 = dispatch thunk of SetAlgebra.isSuperset(of:)(v223, v140, v209);
  v211(v224, v140);
  v227 = v299;
  v228 = v212(v299, v225, v140);
  if ((v226 & 1) != 0)
  {
    v211(v227, v140);
    v229 = v300;
    v212(v300, v225, v140);
LABEL_70:
    v211(v229, v140);
    v232 = v304;
    v233 = (uint64_t)v308;
LABEL_71:
    v234 = v320;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v320 + 104))(v233, enum case for FMIPPlaySoundChannels.right(_:), v207);
    v235 = v319;
    sub_100203DE4(v319, v233);
    v236 = (*(uint64_t (**)(uint64_t, uint64_t))(v234 + 8))(v235, v207);
    goto LABEL_72;
  }
  static FMIPItemState.soundPending.getter(v228);
  v230 = dispatch thunk of SetAlgebra.isSuperset(of:)(v224, v140, v209);
  v211(v224, v140);
  v211(v227, v140);
  v229 = v300;
  v231 = v212(v300, v225, v140);
  if ((v230 & 1) != 0)
    goto LABEL_70;
  v274 = v321;
  static FMIPItemState.soundQueued.getter(v231);
  v275 = dispatch thunk of SetAlgebra.isSuperset(of:)(v274, v140, v209);
  v211(v274, v140);
  v236 = ((uint64_t (*)(char *, uint64_t))v211)(v229, v140);
  v232 = v304;
  v233 = (uint64_t)v308;
  if ((v275 & 1) != 0)
    goto LABEL_71;
LABEL_72:
  v237 = v321;
  static FMIPItemState.soundPlaying.getter(v236);
  v238 = v318;
  v239 = dispatch thunk of SetAlgebra.isSuperset(of:)(v237, v140, v209);
  v211(v237, v140);
  v240 = v301;
  v241 = v212(v301, v238, v140);
  if ((v239 & 1) != 0)
  {
    v211(v240, v140);
    v242 = v302;
    v212(v302, v238, v140);
LABEL_75:
    v211(v242, v140);
LABEL_76:
    v245 = v320;
    v246 = v309;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v320 + 104))(v233, enum case for FMIPPlaySoundChannels.case(_:), v309);
    v247 = v319;
    sub_100203DE4(v319, v233);
    v248 = (*(uint64_t (**)(uint64_t, uint64_t))(v245 + 8))(v247, v246);
    goto LABEL_77;
  }
  static FMIPItemState.soundPending.getter(v241);
  v243 = dispatch thunk of SetAlgebra.isSuperset(of:)(v237, v140, v209);
  v211(v237, v140);
  v211(v240, v140);
  v242 = v302;
  v244 = v212(v302, v238, v140);
  if ((v243 & 1) != 0)
    goto LABEL_75;
  v276 = v242;
  v277 = v321;
  static FMIPItemState.soundQueued.getter(v244);
  v278 = dispatch thunk of SetAlgebra.isSuperset(of:)(v277, v140, v209);
  v211(v277, v140);
  v248 = ((uint64_t (*)(char *, uint64_t))v211)(v276, v140);
  if ((v278 & 1) != 0)
    goto LABEL_76;
LABEL_77:
  v249 = v321;
  static FMIPItemState.soundPlaying.getter(v248);
  v250 = v316;
  v251 = dispatch thunk of SetAlgebra.isSuperset(of:)(v249, v140, v209);
  v211(v249, v140);
  v252 = v212(v232, v250, v140);
  if ((v251 & 1) != 0)
  {
    v211(v232, v140);
    v253 = v305;
    v212(v305, v250, v140);
  }
  else
  {
    static FMIPItemState.soundPending.getter(v252);
    v254 = dispatch thunk of SetAlgebra.isSuperset(of:)(v249, v140, v209);
    v211(v249, v140);
    v211(v232, v140);
    v253 = v305;
    v255 = v212(v305, v250, v140);
    if ((v254 & 1) == 0)
    {
      static FMIPItemState.soundQueued.getter(v255);
      v279 = dispatch thunk of SetAlgebra.isSuperset(of:)(v249, v140, v209);
      v211(v249, v140);
      v211(v253, v140);
      v256 = v318;
      v257 = v317;
      v92 = v309;
      if ((v279 & 1) == 0)
        goto LABEL_82;
      goto LABEL_81;
    }
  }
  v211(v253, v140);
  v256 = v318;
  v257 = v317;
  v92 = v309;
LABEL_81:
  v258 = v320;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v320 + 104))(v233, enum case for FMIPPlaySoundChannels.standalone(_:), v92);
  v259 = v319;
  sub_100203DE4(v319, v233);
  (*(void (**)(uint64_t, uint64_t))(v258 + 8))(v259, v92);
LABEL_82:
  v211(v316, v140);
  v211(v256, v140);
  v211(v257, v140);
  v211(v293, v140);
  sub_1000051EC(v313, (uint64_t *)&unk_1005D3AA0);
  sub_1000051EC(v312, (uint64_t *)&unk_1005D3AA0);
  sub_1000051EC(v314, (uint64_t *)&unk_1005D3AA0);
  sub_1000051EC(v315, (uint64_t *)&unk_1005D3AA0);
  v91 = v310;
LABEL_83:
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v260 = type metadata accessor for Logger(0);
  sub_100056D88(v260, (uint64_t)qword_1005F5748);
  swift_bridgeObjectRetain(v91);
  v262 = Logger.logObject.getter(v261);
  v263 = static os_log_type_t.default.getter(v262);
  if (os_log_type_enabled(v262, v263))
  {
    v264 = swift_slowAlloc(32, -1);
    v265 = swift_slowAlloc(64, -1);
    v338 = v265;
    *(_DWORD *)v264 = 141558531;
    v336 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v336, &v337);
    *(_WORD *)(v264 + 12) = 2081;
    swift_bridgeObjectRetain(v91);
    v336 = sub_100056DA0(v303, v91, &v338);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v336, &v337);
    swift_bridgeObjectRelease_n(v91, 3);
    *(_WORD *)(v264 + 22) = 2082;
    swift_beginAccess(&v340, &v336, 0, 0);
    v266 = v340;
    v267 = sub_100008000(&qword_1005D7300, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
    swift_bridgeObjectRetain(v266);
    v269 = Set.description.getter(v268, v92, v267);
    v271 = v270;
    swift_bridgeObjectRelease(v266);
    v335 = sub_100056DA0(v269, v271, &v338);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v335, &v336);
    swift_bridgeObjectRelease(v271);
    _os_log_impl((void *)&_mh_execute_header, v262, v263, "FMDeviceDetailContentViewController: offlineActiveChannels for %{private,mask.hash}s %{public}s.", (uint8_t *)v264, 0x20u);
    swift_arrayDestroy(v265, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v265, -1, -1);
    swift_slowDealloc(v264, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v91, 2);
  }
  swift_beginAccess(&v340, &v338, 0, 0);
  return v340;
}

double sub_1001CF13C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  _BYTE v9[24];

  v1 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  __chkstk_darwin(v1);
  v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if ((*(_BYTE *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundButton)
                 + OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_active) & 1) != 0
    || (v4 = v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundInFlight,
        swift_beginAccess(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundInFlight, v9, 0, 0), sub_100007464(v4, (uint64_t)v3, (uint64_t *)&unk_1005D3320), v5 = type metadata accessor for Date(0), LODWORD(v4) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5), sub_1000051EC((uint64_t)v3, (uint64_t *)&unk_1005D3320), (_DWORD)v4 != 1))
  {
    sub_1001AE864();
  }
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource);
  *(_BYTE *)(v6 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_updatesEnabled) = 0;
  swift_retain(v6);
  sub_100423124();
  *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  return result;
}

double sub_1001CF260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  char *v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double result;
  uint64_t v37;
  uint64_t (*v38)(char *, uint64_t, uint64_t, __n128);
  uint64_t v39;
  _BYTE v40[24];
  _BYTE v41[24];
  _BYTE v42[24];

  v1 = v0;
  v2 = type metadata accessor for FMIPFeatures(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v37 - v7;
  v9 = type metadata accessor for FMIPDevice(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource;
  v13 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource);
  v14 = v13 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
  swift_beginAccess(v13 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel, v42, 0, 0);
  if ((*(_BYTE *)(v14 + *(int *)(type metadata accessor for FMDeviceDetailViewModel(0) + 148)) & 1) == 0)
  {
    v15 = v13 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
    v16 = swift_beginAccess(v13 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice, v41, 0, 0);
    v38 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
    v17 = v38(v12, v15, v9, v16);
    FMIPDevice.features.getter(v17);
    v18 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
    v19 = v18(v12, v9);
    static FMIPFeatures.isBTFindingSupported.getter(v19);
    v20 = sub_100008000((unint64_t *)&qword_1005D72F0, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPFeatures, (uint64_t)&protocol conformance descriptor for FMIPFeatures);
    LOBYTE(v15) = dispatch thunk of SetAlgebra.isSuperset(of:)(v6, v2, v20);
    v21 = *(void (**)(char *, uint64_t))(v3 + 8);
    v21(v6, v2);
    v21(v8, v2);
    if ((v15 & 1) != 0)
    {
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v22 = type metadata accessor for Logger(0);
      v23 = sub_100056D88(v22, (uint64_t)qword_1005F5748);
      v24 = Logger.logObject.getter(v23);
      v25 = static os_log_type_t.default.getter(v24);
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v26 = 0;
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "FMDeviceDetailContentViewController, attempting to stop fast advertisement", v26, 2u);
        swift_slowDealloc(v26, -1, -1);
      }

      v27 = *(char **)(v1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_findingExperienceCoordinator);
      v28 = *(_QWORD *)(v1 + v39) + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
      v29 = swift_beginAccess(v28, v40, 0, 0);
      v30 = v38(v12, v28, v9, v29);
      v31 = FMIPDevice.baIdentifier.getter(v30);
      v33 = v32;
      v18(v12, v9);
      v34 = swift_allocObject(&unk_10054B5D0, 24, 7);
      swift_unknownObjectWeakInit(v34 + 16);
      sub_100164018(v31, v33, 0, v27, v34);
      swift_release(v34);
      swift_bridgeObjectRelease(v33);
    }
  }
  v35 = *(_QWORD *)(v1 + v39);
  *(_BYTE *)(v35 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_updatesEnabled) = 1;
  swift_retain(v35);
  sub_100423124();
  *(_QWORD *)&result = swift_release(v35).n128_u64[0];
  return result;
}

void sub_1001CF5BC(uint64_t a1, int a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, unint64_t, uint64_t, __n128);
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  __n128 v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  __n128 v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v64 = a5;
  v60 = a2;
  v11 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  __chkstk_darwin(v11);
  v63 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FMIPItem(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v62 = (char *)&v56 - v18;
  v61 = v6;
  v59 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator;
  v19 = *(_QWORD *)(*(_QWORD *)(v6 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator) + 24);
  v20 = swift_retain(v19);
  v21 = FMIPManager.items.getter(v20);
  v22 = v19;
  v23 = v21;
  v24 = swift_release(v22);
  v25 = *(_QWORD *)(v23 + 16);
  if (v25)
  {
    v57 = a6;
    v58 = a1;
    v26 = v23;
    v27 = v23 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v28 = *(_QWORD *)(v14 + 72);
    v65 = v14;
    v29 = *(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v14 + 16);
    v56 = v26;
    v30 = swift_bridgeObjectRetain(v26);
    while (1)
    {
      v31 = v29(v17, v27, v13, v30);
      v32 = FMIPItem.identifier.getter(v31);
      v34 = v33;
      if (v32 == a3 && v33 == a4)
      {
        v23 = v56;
        swift_bridgeObjectRelease(v56);
        v43 = a4;
        goto LABEL_11;
      }
      v35 = a3;
      v36 = a3;
      v37 = a4;
      v38 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v33, v36, a4, 0);
      v39 = swift_bridgeObjectRelease(v34);
      if ((v38 & 1) != 0)
        break;
      (*(void (**)(char *, uint64_t, __n128))(v65 + 8))(v17, v13, v39);
      v27 += v28;
      --v25;
      a4 = v37;
      a3 = v35;
      if (!v25)
      {
        v23 = v56;
        v24 = swift_bridgeObjectRelease(v56);
        v40 = 1;
        a6 = v57;
        a1 = v58;
        v41 = v64;
        v14 = v65;
        v42 = (uint64_t)v63;
        goto LABEL_13;
      }
    }
    v23 = v56;
    v43 = v56;
    a4 = v37;
    a3 = v35;
LABEL_11:
    v44 = swift_bridgeObjectRelease(v43);
    v14 = v65;
    v42 = (uint64_t)v63;
    (*(void (**)(char *, char *, uint64_t, __n128))(v65 + 32))(v63, v17, v13, v44);
    v40 = 0;
    a6 = v57;
    a1 = v58;
  }
  else
  {
    v40 = 1;
    v42 = (uint64_t)v63;
  }
  v41 = v64;
LABEL_13:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v14 + 56))(v42, v40, 1, v13, v24);
  v45 = swift_bridgeObjectRelease(v23);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v14 + 48))(v42, 1, v13, v45) == 1)
  {
    sub_1000051EC(v42, (uint64_t *)&unk_1005D3AA0);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v46 = type metadata accessor for Logger(0);
    sub_100056D88(v46, (uint64_t)qword_1005F5748);
    v47 = swift_bridgeObjectRetain_n(a4, 2);
    v48 = Logger.logObject.getter(v47);
    v49 = static os_log_type_t.error.getter(v48);
    if (os_log_type_enabled(v48, v49))
    {
      v50 = (uint8_t *)swift_slowAlloc(12, -1);
      v51 = swift_slowAlloc(32, -1);
      v67 = v51;
      *(_DWORD *)v50 = 136315138;
      swift_bridgeObjectRetain(a4);
      v66 = sub_100056DA0(a3, a4, &v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, &v67);
      swift_bridgeObjectRelease_n(a4, 3);
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "FMDeviceDetailContentViewController: Requested play sound for unknown item identifier: %s", v50, 0xCu);
      swift_arrayDestroy(v51, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v51, -1, -1);
      swift_slowDealloc(v50, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a4, 2);
    }
  }
  else
  {
    LODWORD(v65) = v60 & 1;
    v52 = (uint64_t)v62;
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v62, v42, v13);
    v53 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v61 + v59) + 24) + 32);
    v54 = (_QWORD *)swift_allocObject(&unk_10054B5A8, 48, 7);
    v54[2] = a3;
    v54[3] = a4;
    v54[4] = v41;
    v54[5] = a6;
    swift_retain(v53);
    swift_bridgeObjectRetain(a4);
    sub_1000A190C(v41, a6);
    sub_1000B5044(v52, a1, v65, (uint64_t)sub_1001CFAA4, (uint64_t)v54);
    swift_release(v53);
    v55 = swift_release(v54);
    (*(void (**)(uint64_t, uint64_t, __n128))(v14 + 8))(v52, v13, v55);
  }
}

uint64_t sub_1001CFA70()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[3]);
  if (v0[4])
    swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

void sub_1001CFAA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1001C86B0(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(void (**)(_QWORD))(v3 + 32), *(_QWORD *)(v3 + 40));
}

uint64_t sub_1001CFAB0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1001CFAD4()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void *v14;
  id v15;
  objc_class *v16;
  id v17;
  char *v18;
  uint64_t v19;
  id v20;
  id v21;
  char *v22;
  uint64_t v23;
  id v24;
  id v25;
  char *v26;
  uint64_t v27;
  id v28;
  id v29;
  char *v30;
  uint64_t v31;
  id v32;
  id v33;
  char *v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  id v54;
  _QWORD *v55;
  uint64_t v56;
  objc_class *v57;
  id v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  objc_class *v62;
  id v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  _BYTE *v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  void (*v89)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  _QWORD *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unsigned int v107;
  char *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  __int128 v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  __int128 v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char v125;
  __int128 v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  __int128 v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  __int128 v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  __int128 v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char v145;

  v1 = v0;
  v2 = sub_100053F2C(&qword_1005D33B0);
  __chkstk_darwin(v2);
  v111 = (char *)&v105 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v113);
  v110 = (char *)&v105 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v5);
  v112 = (char *)&v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v109 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v108 = (char *)&v105 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FMPlatterIcon(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v105 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = &v0[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_delegate];
  *((_QWORD *)v11 + 1) = 0;
  swift_unknownObjectWeakInit(v11);
  v12 = &v0[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundDelegate];
  *((_QWORD *)v12 + 1) = 0;
  swift_unknownObjectWeakInit(v12);
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_conditionsSubscription] = 0;
  v13 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundButton;
  v14 = (void *)objc_opt_self(UIColor);
  v15 = objc_msgSend(v14, "systemIndigoColor");
  swift_storeEnumTagMultiPayload(v10, v8, 4);
  *(_QWORD *)&v141 = 0xD00000000000001ELL;
  *((_QWORD *)&v141 + 1) = 0x80000001004B1AA0;
  v16 = (objc_class *)type metadata accessor for FMIconPlatterButton(0);
  v143 = 0;
  v144 = 0;
  v142 = 0;
  v145 = 0;
  v17 = objc_allocWithZone(v16);
  v18 = sub_1000B0244(v15, (uint64_t)v10, &v141, 1, 1);

  *(_QWORD *)&v1[v13] = v18;
  v19 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_muteLeftButton;
  v20 = objc_msgSend(v14, "systemIndigoColor");
  swift_storeEnumTagMultiPayload(v10, v8, 7);
  *(_QWORD *)&v136 = 0xD000000000000028;
  *((_QWORD *)&v136 + 1) = 0x80000001004B1AC0;
  v138 = 0;
  v139 = 0;
  v137 = 0;
  v140 = 0;
  v21 = objc_allocWithZone(v16);
  v22 = sub_1000B0244(v20, (uint64_t)v10, &v136, 0, 0);

  *(_QWORD *)&v1[v19] = v22;
  v23 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_muteRightButton;
  v24 = objc_msgSend(v14, "systemIndigoColor");
  swift_storeEnumTagMultiPayload(v10, v8, 8);
  *(_QWORD *)&v131 = 0xD000000000000029;
  *((_QWORD *)&v131 + 1) = 0x80000001004B1AF0;
  v133 = 0;
  v134 = 0;
  v132 = 0;
  v135 = 0;
  v25 = objc_allocWithZone(v16);
  v26 = sub_1000B0244(v24, (uint64_t)v10, &v131, 0, 0);

  *(_QWORD *)&v1[v23] = v26;
  v27 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_stopSoundButton;
  v28 = objc_msgSend(v14, "systemIndigoColor");
  swift_storeEnumTagMultiPayload(v10, v8, 5);
  *(_QWORD *)&v126 = 0xD00000000000001ELL;
  *((_QWORD *)&v126 + 1) = 0x80000001004B1B20;
  v128 = 0;
  v129 = 0;
  v127 = 0;
  v130 = 0;
  v29 = objc_allocWithZone(v16);
  v30 = sub_1000B0244(v28, (uint64_t)v10, &v126, 0, 0);

  *(_QWORD *)&v1[v27] = v30;
  v31 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_directionsButton;
  v32 = objc_msgSend(v14, "systemBlueColor");
  swift_storeEnumTagMultiPayload(v10, v8, 3);
  *(_QWORD *)&v121 = 0xD00000000000001FLL;
  *((_QWORD *)&v121 + 1) = 0x80000001004AB420;
  v123 = 0;
  v124 = 0;
  v122 = 0;
  v125 = 0;
  v33 = objc_allocWithZone(v16);
  v34 = sub_1000B0244(v32, (uint64_t)v10, &v121, 0, 0);

  *(_QWORD *)&v1[v31] = v34;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_itemConnectionManager] = 0;
  v35 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_findButton;
  v36 = objc_msgSend(v14, "systemBlueColor");
  v37 = *(int *)(sub_100053F2C(&qword_1005D9938) + 48);
  v38 = enum case for FMFindingType.owner(_:);
  v39 = type metadata accessor for FMFindingType(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 104))(v10, v38, v39);
  v10[v37] = 0;
  v40 = enum case for FMFindingTechnology.proximity(_:);
  v41 = type metadata accessor for FMFindingTechnology(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 104))(v10, v40, v41);
  swift_storeEnumTagMultiPayload(v10, v8, 1);
  *(_QWORD *)&v116 = 0xD000000000000019;
  *((_QWORD *)&v116 + 1) = 0x80000001004B1B40;
  v118 = 0;
  v119 = 0;
  v117 = 0;
  v120 = 0;
  v42 = objc_allocWithZone(v16);
  v43 = sub_1000B0244(v36, (uint64_t)v10, &v116, 0, 0);

  *(_QWORD *)&v1[v35] = v43;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_btDeviceDiscoveryToken] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController____lazy_storage___ownerSession] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_connectionMaterialTask] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_localFindableConnectionMaterialMonitoringSession] = 0;
  v44 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_connectionMaterialUpdateQueue;
  sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v107 = enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:);
  v45 = v108;
  v109 = *(_QWORD *)(v109 + 104);
  v46 = ((uint64_t (*)(char *))v109)(v108);
  v47 = v112;
  static DispatchQoS.unspecified.getter(v46);
  v115 = _swiftEmptyArrayStorage;
  v48 = sub_100008000((unint64_t *)&unk_1005D3970, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v49 = sub_100053F2C((uint64_t *)&unk_1005D20F0);
  v105 = v49;
  v106 = sub_10003F734((unint64_t *)&unk_1005D3980, (uint64_t *)&unk_1005D20F0);
  v50 = v110;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v115, v49, v106, v113, v48);
  *(_QWORD *)&v1[v44] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000004DLL, 0x80000001004B1B60, v47, v50, v45, 0);
  v51 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_notificationsView;
  v52 = objc_allocWithZone((Class)type metadata accessor for FMDeviceNotificationsView());
  *(_QWORD *)&v1[v51] = sub_1001F0FA4();
  v53 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showContactDetailsView;
  v54 = objc_allocWithZone((Class)type metadata accessor for FMDeviceShowContactDetailsView());
  *(_QWORD *)&v1[v53] = sub_10039BBC0();
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showContactDetailsWelcomeScreenViewController] = 0;
  v55 = &v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showContactDetailsPhoneNumber];
  *v55 = 0;
  v55[1] = 0xE000000000000000;
  v56 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_separationAttention;
  v57 = (objc_class *)type metadata accessor for FMExtendedPlatterInfoView(0);
  v58 = objc_allocWithZone(v57);
  *(_QWORD *)&v1[v56] = sub_1002C114C(1, 0);
  v59 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_markAsLostView;
  v60 = objc_allocWithZone((Class)type metadata accessor for FMDeviceMarkAsLostView());
  *(_QWORD *)&v1[v59] = sub_100223250();
  v61 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_cancelEraseDeviceButton;
  v62 = (objc_class *)type metadata accessor for FMSingleLinePlatterButton();
  v63 = objc_allocWithZone(v62);
  *(_QWORD *)&v1[v61] = sub_1000472FC(0, 0, 0, 1);
  v64 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_eraseDeviceButton;
  v65 = objc_allocWithZone(v62);
  *(_QWORD *)&v1[v64] = sub_1000472FC(0, 0, 0, 1);
  v66 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_removeDeviceButton;
  v67 = objc_allocWithZone(v62);
  *(_QWORD *)&v1[v66] = sub_1000472FC(0, 0, 0, 1);
  v68 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_inaccurateAttention;
  v69 = objc_allocWithZone(v57);
  *(_QWORD *)&v1[v68] = sub_1002C114C(1, 0);
  v70 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_soundPendingAttention;
  v71 = objc_allocWithZone((Class)type metadata accessor for FMFailablePlatterInfoView(0));
  v72 = OBJC_IVAR____TtC6FindMy25FMFailablePlatterInfoView_isActionable;
  v71[OBJC_IVAR____TtC6FindMy25FMFailablePlatterInfoView_isActionable] = 0;
  v71[OBJC_IVAR____TtC6FindMy25FMFailablePlatterInfoView_playSoundFailureCode] = 0;
  v71[OBJC_IVAR____TtC6FindMy25FMFailablePlatterInfoView_localizableType] = 1;
  v71[v72] = 1;
  v73 = sub_10025638C(1);
  sub_1003509B4();

  *(_QWORD *)&v1[v70] = v73;
  v74 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_mismatchAttention;
  v75 = objc_allocWithZone(v57);
  *(_QWORD *)&v1[v74] = sub_1002C114C(1, 0);
  v76 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pairingIncompleteAttention;
  v77 = objc_allocWithZone(v57);
  *(_QWORD *)&v1[v76] = sub_1002C114C(1, 0);
  v78 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pairingStatusDebugView;
  v79 = objc_allocWithZone(v57);
  *(_QWORD *)&v1[v78] = sub_1002C114C(0, 0);
  v80 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_notificationsOffAttention;
  v81 = objc_allocWithZone(v57);
  *(_QWORD *)&v1[v80] = sub_1002C114C(1, 1);
  v82 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_repairModeAttention;
  v83 = objc_allocWithZone(v57);
  *(_QWORD *)&v1[v82] = sub_1002C114C(0, 0);
  v84 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_firstButtonsStackView;
  *(_QWORD *)&v1[v84] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v85 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_actionButtonsStackView;
  *(_QWORD *)&v1[v85] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v86 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_verticalStackView;
  *(_QWORD *)&v1[v86] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_verticalStackBottomConstraint] = 0;
  v87 = &v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundInFlight];
  v88 = type metadata accessor for Date(0);
  v89 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 56);
  v89(v87, 1, 1, v88);
  v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_isNotifyWhenFoundOnOverride] = 2;
  v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_isNotifyWhenLeftBehindOnOverride] = 2;
  v89(&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_canShowQueueAlert], 1, 1, v88);
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_lastPlayAction] = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_cancelOnlinePlaySoundWorkItem] = 0;
  v90 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_actionQueue;
  v91 = ((uint64_t (*)(char *, _QWORD, uint64_t))v109)(v45, v107, v114);
  v92 = v112;
  static DispatchQoS.unspecified.getter(v91);
  v115 = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v115, v105, v106, v113, v48);
  *(_QWORD *)&v1[v90] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000034, 0x80000001004B1BB0, v92, v50, v45, 0);
  v93 = &v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pendingPlaySoundAnalytics];
  v94 = type metadata accessor for FMIPAirPodsPlaySoundEvent(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 56))(v93, 1, 1, v94);
  v95 = &v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pendingSafeLocation];
  v96 = type metadata accessor for FMIPSafeLocation(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 56))(v95, 1, 1, v96);
  v97 = &v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_separationAddress];
  *v97 = 0;
  v97[1] = 0;
  v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_pendingSafeLocationAdded] = 0;
  v98 = &v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_separationEvent];
  v99 = type metadata accessor for FMIPSeparationEvent(0);
  v100 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 56))(v98, 1, 1, v99);
  v101 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_geocodingCache;
  v102 = v111;
  static Locale.autoupdatingCurrent.getter(v100);
  v103 = type metadata accessor for Locale(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 56))(v102, 0, 1, v103);
  v104 = type metadata accessor for FMIPReverseGeocodingCache(0);
  swift_allocObject(v104, *(unsigned int *)(v104 + 48), *(unsigned __int16 *)(v104 + 52));
  *(_QWORD *)&v1[v101] = FMIPReverseGeocodingCache.init(preferredLocale:)(v102);
  v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showSeparationAttention] = 0;
  v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_soundPlayingOrPending] = 0;
  v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_isRangingAvailable] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_soundPendingTimer] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMDeviceDetailContentViewController.swift", 48, 2, 252, 0);
  __break(1u);
}

uint64_t sub_1001D06FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;

  v4 = type metadata accessor for FMIPPlaySoundChannels(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v16 - v9;
  v17 = a2;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v12 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v13 = *(_QWORD *)(v5 + 72);
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    do
    {
      v14(v8, v12, v4);
      sub_100203DE4((uint64_t)v10, (uint64_t)v8);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      v12 += v13;
      --v11;
    }
    while (v11);
    return v17;
  }
  return a2;
}

double sub_1001D0800(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  NSObject *v23;
  uint64_t v24;
  os_log_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  void (*v33)(char *, uint64_t, uint64_t, __n128);
  char *v34;
  char *v35;
  uint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  unint64_t v40;
  unint64_t v41;
  void *v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  void *v51;
  char v52;
  uint64_t v53;
  NSObject *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  char *v92;
  unint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  NSObject *v100;
  os_log_type_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  __n128 v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  unint64_t v125;
  os_log_t v126;
  char *v127;
  uint64_t v128;
  os_log_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  _QWORD *v133;
  uint64_t v134;
  __n128 v135;
  double result;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  int64_t v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v147;
  __n128 v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  unint64_t v152;
  uint64_t v153;
  NSObject *v154;
  os_log_type_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  unint64_t v161;
  __n128 v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  unint64_t v167;
  uint64_t v168;
  void (*v169)(char *, uint64_t);
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  unint64_t v174;
  unint64_t v175;
  os_log_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  _BYTE *v181;
  _BYTE *v182;
  char *v183;
  _BYTE *v184;
  void *v185;
  uint64_t v186;
  void *v187;
  uint64_t v188;
  _BYTE *v189;
  _QWORD *v190;
  uint64_t v191;
  uint64_t v192;
  unint64_t v193;
  unint64_t v194;
  unint64_t v195;
  unint64_t v196;
  unint64_t v197;
  uint64_t v198;
  void (*v199)(uint64_t, _QWORD, uint64_t);
  uint64_t v200;
  _QWORD *v201;
  unint64_t v202;
  uint64_t v203;
  id (**v204)();
  uint64_t v205;
  __n128 v206;
  os_log_t v207;
  char *v208;
  __int128 v209;
  char *v210;
  char *v211;
  uint64_t v212;
  os_log_t v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  unint64_t v225;
  uint64_t v226;
  uint64_t aBlock[5];
  uint64_t v228;
  uint64_t v229;
  _BYTE v230[16];
  char v231[16];
  char v232[8];

  v215 = type metadata accessor for FMIPPlaySoundMethod(0);
  v214 = *(_QWORD *)(v215 - 8);
  v6 = __chkstk_darwin(v215);
  v211 = (char *)&v207 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v213 = (os_log_t)((char *)&v207 - v8);
  v9 = type metadata accessor for FMIPDevice(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v207 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FMIPPlaySoundChannels(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v16 = __chkstk_darwin(v13);
  *(_QWORD *)&v209 = (char *)&v207 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v208 = (char *)&v207 - v18;
  v19 = __chkstk_darwin(v17);
  v210 = (char *)&v207 - v20;
  __chkstk_darwin(v19);
  v22 = (char *)&v207 - v21;
  v217 = swift_allocObject(&unk_10054C318, 24, 7);
  *(_QWORD *)(v217 + 16) = a3;
  v222 = v14;
  v23 = *(NSObject **)(v14 + 16);
  v224 = v22;
  v212 = a1;
  v24 = a1;
  v25 = v23;
  v26 = v13;
  ((void (*)(char *, uint64_t, uint64_t))v23)(v22, v24, v13);
  v220 = a2;
  v27 = *(_QWORD *)(a2 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource);
  v28 = v27 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
  swift_beginAccess(v27 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel, v232, 0, 0);
  v29 = type metadata accessor for FMDeviceDetailViewModel(0);
  v30 = v27 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
  v31 = *(unsigned __int8 *)(v28 + *(int *)(v29 + 96));
  v32 = swift_beginAccess(v30, v231, 0, 0);
  v218 = v10;
  v33 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
  v34 = v12;
  v219 = v9;
  v33(v12, v30, v9, v32);
  v35 = a3;
  v36 = FMIPDevice.identifier.getter(v35);
  v225 = v37;
  v38 = sub_1001CD650();
  v39 = sub_1001AF4A0(v31);
  v40 = v38[2];
  v41 = v39[2];
  v221 = v36;
  if (v40 > v41 >> 3)
  {
    v42 = sub_1001CB750((uint64_t)v38, (uint64_t)v39);
  }
  else
  {
    aBlock[0] = (uint64_t)v39;
    sub_1001CB134((uint64_t)v38);
    v42 = (void *)aBlock[0];
  }
  v43 = (uint64_t)v224;
  v44 = sub_10012A830((uint64_t)v224, (uint64_t)v42);
  v216 = v34;
  v223 = v26;
  if ((v44 & 1) == 0)
  {
    v52 = sub_10012A830(v43, (uint64_t)v38);
    v53 = v222;
    if ((v52 & 1) != 0)
    {
      swift_bridgeObjectRelease(v42);
      v54 = sub_100053F2C(&qword_1005D2AA8);
      v55 = *(unsigned __int8 *)(v53 + 80);
      v56 = (v55 + 32) & ~v55;
      v57 = v56 + *(_QWORD *)(v53 + 72);
      v213 = v54;
      v212 = v57;
      v210 = (char *)(v55 | 7);
      v58 = swift_allocObject(v54, v57, v55 | 7);
      v209 = xmmword_100481740;
      *(_OWORD *)(v58 + 16) = xmmword_100481740;
      v59 = v223;
      ((void (*)(uint64_t, uint64_t, uint64_t))v25)(v58 + v56, v43, v223);
      v60 = sub_1001CB398(v58, (uint64_t)v38);
      swift_setDeallocating(v58);
      swift_arrayDestroy(v58 + v56, *(_QWORD *)(v58 + 16), v59);
      swift_deallocClassInstance(v58, 32, 7);
      v61 = qword_1005D1CA0;
      swift_retain(v60);
      if (v61 != -1)
        swift_once(&qword_1005D1CA0, sub_100197BF4);
      v62 = type metadata accessor for Logger(0);
      sub_100056D88(v62, (uint64_t)qword_1005F5140);
      v63 = v225;
      swift_bridgeObjectRetain_n(v225, 2);
      v64 = swift_retain_n(v60, 2);
      v65 = Logger.logObject.getter(v64);
      v66 = static os_log_type_t.default.getter(v65);
      if (os_log_type_enabled(v65, v66))
      {
        v67 = swift_slowAlloc(32, -1);
        v68 = swift_slowAlloc(64, -1);
        aBlock[0] = v68;
        *(_DWORD *)v67 = 136446723;
        v69 = sub_100008000(&qword_1005D7300, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
        v208 = (char *)v56;
        v70 = v69;
        v71 = swift_retain(v60);
        v72 = Set.description.getter(v71, v223, v70);
        v74 = v73;
        swift_release(v60);
        v229 = sub_100056DA0(v72, v74, aBlock);
        v75 = v222;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v229, v230);
        swift_release_n(v60, 2);
        swift_bridgeObjectRelease(v74);
        *(_WORD *)(v67 + 12) = 2160;
        v229 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v229, v230);
        *(_WORD *)(v67 + 22) = 2081;
        swift_bridgeObjectRetain(v225);
        v229 = sub_100056DA0(v221, v225, aBlock);
        v56 = (uint64_t)v208;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v229, v230);
        swift_bridgeObjectRelease_n(v225, 3);
        _os_log_impl((void *)&_mh_execute_header, v65, v66, "FMDeviceDetailContentViewController: mute sound selecting channels to play LE %{public}s for %{private,mask.hash}s.", (uint8_t *)v67, 0x20u);
        swift_arrayDestroy(v68, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v68, -1, -1);
        v63 = v225;
        swift_slowDealloc(v67, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v63, 2);
        swift_release_n(v60, 2);
        v75 = v53;
      }
      v137 = v214;
      v138 = (uint64_t)v211;
      v139 = v215;
      (*(void (**)(char *, _QWORD, uint64_t))(v214 + 104))(v211, enum case for FMIPPlaySoundMethod.ble(_:), v215);
      v140 = swift_allocObject(v213, v212, v210);
      *(_OWORD *)(v140 + 16) = v209;
      v141 = v223;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v75 + 104))(v140 + v56, enum case for FMIPPlaySoundChannels.mute(_:), v223);
      v142 = v60[2] + 1;
      swift_retain(v60);
      aBlock[0] = sub_100070298(0, v142, 0, (unint64_t)_swiftEmptyArrayStorage);
      swift_bridgeObjectRetain(v60);
      sub_1003E5754(v143);
      sub_1003E5740(v140);
      swift_release(v60);
      v144 = aBlock[0];
      v145 = (_QWORD *)swift_allocObject(&unk_10054C3B8, 56, 7);
      v146 = v221;
      v145[2] = v60;
      v145[3] = v146;
      v145[4] = v63;
      v145[5] = sub_1001D4FA8;
      v147 = v217;
      v145[6] = v217;
      swift_retain(v147);
      sub_1001B20A0(v138, 1, 0, v144, (uint64_t)sub_1001D4F8C, (uint64_t)v145);
      swift_bridgeObjectRelease(v144);
      v148 = swift_release(v145);
      (*(void (**)(uint64_t, uint64_t, __n128))(v137 + 8))(v138, v139, v148);
      (*(void (**)(char *, uint64_t))(v218 + 8))(v216, v219);
      (*(void (**)(char *, uint64_t))(v75 + 8))(v224, v141);
      swift_release(v147);
LABEL_36:
      v190 = v60;
LABEL_37:
      *(_QWORD *)&result = swift_release(v190).n128_u64[0];
      return result;
    }
    v90 = (uint64_t *)(v220 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_lastPlayAction);
    swift_beginAccess(v220 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_lastPlayAction, &v229, 0, 0);
    v91 = *v90;
    v92 = v210;
    if (*(_QWORD *)(v91 + 16))
    {
      swift_bridgeObjectRetain(v91);
      v93 = sub_100171C38(v43);
      if ((v94 & 1) != 0)
      {
        v95 = *(_QWORD *)(*(_QWORD *)(v91 + 56) + 8 * v93);
        swift_retain(v95);
        swift_bridgeObjectRelease(v91);
        v214 = v95;
        v215 = sub_1001AF938(v95, (uint64_t)v38, v43, (uint64_t)v42);
        if (qword_1005D1CA0 != -1)
          swift_once(&qword_1005D1CA0, sub_100197BF4);
        v96 = type metadata accessor for Logger(0);
        sub_100056D88(v96, (uint64_t)qword_1005F5140);
        v97 = v208;
        v98 = v223;
        ((void (*)(char *, uint64_t, uint64_t))v25)(v208, v212, v223);
        swift_bridgeObjectRetain_n(v225, 2);
        swift_bridgeObjectRetain_n(v42, 2);
        swift_bridgeObjectRetain_n(v38, 2);
        v99 = swift_retain_n(v215, 2);
        v100 = Logger.logObject.getter(v99);
        v101 = static os_log_type_t.default.getter(v100);
        v102 = v101;
        if (os_log_type_enabled(v100, v101))
        {
          v103 = swift_slowAlloc(62, -1);
          v211 = (char *)swift_slowAlloc(160, -1);
          aBlock[0] = (uint64_t)v211;
          *(_DWORD *)v103 = 136447491;
          LODWORD(v210) = v102;
          v104 = sub_100008000(&qword_1005D9978, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
          v105 = dispatch thunk of CustomStringConvertible.description.getter(v98, v104);
          v213 = v25;
          v107 = v106;
          v226 = sub_100056DA0(v105, v106, aBlock);
          v207 = v100;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v226, aBlock);
          v108 = swift_bridgeObjectRelease(v107);
          (*(void (**)(char *, uint64_t, __n128))(v53 + 8))(v97, v98, v108);
          *(_WORD *)(v103 + 12) = 2160;
          v226 = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v226, aBlock);
          *(_WORD *)(v103 + 22) = 2081;
          v109 = v225;
          swift_bridgeObjectRetain(v225);
          v226 = sub_100056DA0(v221, v109, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v226, aBlock);
          swift_bridgeObjectRelease_n(v109, 3);
          *(_WORD *)(v103 + 32) = 2082;
          v110 = sub_100008000(&qword_1005D7300, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
          swift_bridgeObjectRetain(v42);
          v112 = Set.description.getter(v111, v223, v110);
          v114 = v113;
          swift_bridgeObjectRelease(v42);
          v226 = sub_100056DA0(v112, v114, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v226, aBlock);
          swift_bridgeObjectRelease_n(v42, 2);
          swift_bridgeObjectRelease(v114);
          *(_WORD *)(v103 + 42) = 2082;
          swift_bridgeObjectRetain(v38);
          v116 = Set.description.getter(v115, v223, v110);
          v118 = v117;
          swift_bridgeObjectRelease(v38);
          v226 = sub_100056DA0(v116, v118, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v226, aBlock);
          swift_bridgeObjectRelease_n(v38, 2);
          swift_bridgeObjectRelease(v118);
          *(_WORD *)(v103 + 52) = 2082;
          v119 = v215;
          v226 = v215;
          v120 = type metadata accessor for FMIPPlaySoundDeviceAction(0);
          v121 = sub_100008000(&qword_1005D9980, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundDeviceAction, (uint64_t)&protocol conformance descriptor for FMIPDeviceAction);
          v122 = v120;
          v25 = v213;
          v123 = dispatch thunk of CustomStringConvertible.description.getter(v122, v121);
          v125 = v124;
          v226 = sub_100056DA0(v123, v124, aBlock);
          v98 = v223;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v226, aBlock);
          swift_release_n(v119, 2);
          swift_bridgeObjectRelease(v125);
          v126 = v207;
          _os_log_impl((void *)&_mh_execute_header, v207, (os_log_type_t)v210, "FMDeviceDetailContentViewController: mute %{public}s sound button pressed for %{private,mask.hash}s. onlineActiveChannels: %{public}s, offlineActiveChannels: %{public}s - Reissuing action %{public}s.", (uint8_t *)v103, 0x3Eu);
          v127 = v211;
          swift_arrayDestroy(v211, 5, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v127, -1, -1);
          swift_slowDealloc(v103, -1, -1);

        }
        else
        {
          (*(void (**)(char *, uint64_t))(v53 + 8))(v97, v98);

          swift_release_n(v215, 2);
          swift_bridgeObjectRelease_n(v38, 2);
          swift_bridgeObjectRelease_n(v42, 2);
          swift_bridgeObjectRelease_n(v225, 2);
        }
        v220 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v220 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator)
                                     + 24)
                         + 32);
        ((void (*)(_QWORD, uint64_t, uint64_t))v25)(v209, v212, v98);
        v191 = *(unsigned __int8 *)(v53 + 80);
        v192 = (v191 + 16) & ~v191;
        v193 = (v15 + v192 + 7) & 0xFFFFFFFFFFFFFFF8;
        v194 = (v193 + 23) & 0xFFFFFFFFFFFFFFF8;
        v195 = (v194 + 15) & 0xFFFFFFFFFFFFFFF8;
        v196 = (v195 + 15) & 0xFFFFFFFFFFFFFFF8;
        v197 = (v196 + 15) & 0xFFFFFFFFFFFFFFF8;
        v198 = swift_allocObject(&unk_10054C390, v197 + 16, v191 | 7);
        v199 = *(void (**)(uint64_t, _QWORD, uint64_t))(v53 + 32);
        v200 = v223;
        v199(v198 + v192, v209, v223);
        v201 = (_QWORD *)(v198 + v193);
        v202 = v225;
        *v201 = v221;
        v201[1] = v202;
        *(_QWORD *)(v198 + v194) = v42;
        *(_QWORD *)(v198 + v195) = v38;
        v203 = v215;
        *(_QWORD *)(v198 + v196) = v215;
        v204 = (id (**)())(v198 + v197);
        v60 = (_QWORD *)v217;
        *v204 = sub_1001D4FA8;
        v204[1] = (id (*)())v60;
        swift_retain(v60);
        swift_retain(v203);
        v205 = v220;
        swift_retain(v220);
        sub_1000B47BC(v203, (uint64_t)sub_1001D4F84, v198);
        swift_release(v203);
        swift_release(v214);
        swift_release(v205);
        v206 = swift_release(v198);
        (*(void (**)(char *, uint64_t, __n128))(v218 + 8))(v216, v219, v206);
        (*(void (**)(char *, uint64_t))(v222 + 8))(v224, v200);
        goto LABEL_36;
      }
      swift_bridgeObjectRelease(v91);
    }
    if (qword_1005D1CA0 != -1)
      swift_once(&qword_1005D1CA0, sub_100197BF4);
    v149 = type metadata accessor for Logger(0);
    sub_100056D88(v149, (uint64_t)qword_1005F5140);
    v150 = v223;
    ((void (*)(char *, uint64_t, uint64_t))v25)(v92, v212, v223);
    v151 = v92;
    v152 = v225;
    swift_bridgeObjectRetain(v225);
    swift_bridgeObjectRetain(v42);
    swift_bridgeObjectRetain(v38);
    v154 = Logger.logObject.getter(v153);
    v155 = static os_log_type_t.error.getter(v154);
    LODWORD(v220) = v155;
    if (os_log_type_enabled(v154, v155))
    {
      v156 = swift_slowAlloc(52, -1);
      v215 = (uint64_t)v35;
      v157 = v156;
      v214 = swift_slowAlloc(128, -1);
      aBlock[0] = v214;
      *(_DWORD *)v157 = 136447235;
      v158 = sub_100008000(&qword_1005D9978, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
      v213 = v154;
      v159 = dispatch thunk of CustomStringConvertible.description.getter(v150, v158);
      v161 = v160;
      v226 = sub_100056DA0(v159, v160, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v226, aBlock);
      v162 = swift_bridgeObjectRelease(v161);
      v222 = *(_QWORD *)(v222 + 8);
      ((void (*)(char *, uint64_t, __n128))v222)(v151, v150, v162);
      *(_WORD *)(v157 + 12) = 2160;
      v226 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v226, aBlock);
      *(_WORD *)(v157 + 22) = 2081;
      swift_bridgeObjectRetain(v152);
      v226 = sub_100056DA0(v221, v152, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v226, aBlock);
      swift_bridgeObjectRelease_n(v152, 3);
      *(_WORD *)(v157 + 32) = 2082;
      v163 = sub_100008000(&qword_1005D7300, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
      swift_bridgeObjectRetain(v42);
      v165 = Set.description.getter(v164, v150, v163);
      v167 = v166;
      swift_bridgeObjectRelease(v42);
      v168 = v165;
      v169 = (void (*)(char *, uint64_t))v222;
      v226 = sub_100056DA0(v168, v167, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v226, aBlock);
      swift_bridgeObjectRelease_n(v42, 2);
      swift_bridgeObjectRelease(v167);
      *(_WORD *)(v157 + 42) = 2082;
      swift_bridgeObjectRetain(v38);
      v170 = v163;
      v43 = (uint64_t)v224;
      v172 = Set.description.getter(v171, v150, v170);
      v174 = v173;
      swift_bridgeObjectRelease(v38);
      v226 = sub_100056DA0(v172, v174, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v226, aBlock);
      swift_bridgeObjectRelease_n(v38, 2);
      v175 = v174;
      v34 = v216;
      swift_bridgeObjectRelease(v175);
      v176 = v213;
      _os_log_impl((void *)&_mh_execute_header, v213, (os_log_type_t)v220, "FMDeviceDetailContentViewController: mute %{public}s sound button pressed for %{private,mask.hash}s. onlineActiveChannels: %{public}s, offlineActiveChannels: %{public}s - Failed to reissue action, no last action.", (uint8_t *)v157, 0x34u);
      v177 = v214;
      swift_arrayDestroy(v214, 4, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v177, -1, -1);
      v178 = v157;
      v35 = (char *)v215;
      swift_slowDealloc(v178, -1, -1);

    }
    else
    {
      v169 = *(void (**)(char *, uint64_t))(v53 + 8);
      v169(v151, v150);

      swift_bridgeObjectRelease_n(v38, 2);
      swift_bridgeObjectRelease_n(v42, 2);
      swift_bridgeObjectRelease_n(v152, 2);
    }
    v179 = v150;
    v180 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_muteLeftButton;
    v181 = *(_BYTE **)&v35[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_muteLeftButton];
    v181[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_pending] = 0;
    v182 = v181;
    sub_1000AC5DC();

    v183 = v35;
    v184 = *(_BYTE **)&v35[v180];
    v184[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_showActivityIndicator] = 0;
    v185 = (void *)objc_opt_self(UIView);
    v186 = swift_allocObject(&unk_10054C340, 24, 7);
    *(_QWORD *)(v186 + 16) = v184;
    aBlock[4] = (uint64_t)sub_10010C2B0;
    v228 = v186;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100037DF8;
    aBlock[3] = (uint64_t)&unk_10054C358;
    v187 = _Block_copy(aBlock);
    v188 = v228;
    v189 = v184;
    swift_release(v188);
    objc_msgSend(v185, "animateWithDuration:delay:options:animations:completion:", 4, v187, 0, 0.3, 0.0);
    _Block_release(v187);

    objc_msgSend(*(id *)&v183[v180], "setUserInteractionEnabled:", 1);
    (*(void (**)(char *, uint64_t))(v218 + 8))(v34, v219);
    v169((char *)v43, v179);
    v190 = (_QWORD *)v217;
    goto LABEL_37;
  }
  v45 = sub_100053F2C(&qword_1005D2AA8);
  v46 = *(unsigned __int8 *)(v222 + 80);
  v47 = (v46 + 32) & ~v46;
  v48 = swift_allocObject(v45, v47 + *(_QWORD *)(v222 + 72), v46 | 7);
  *(_OWORD *)(v48 + 16) = xmmword_100481740;
  v49 = v48 + v47;
  ((void (*)(uint64_t, uint64_t, uint64_t))v25)(v48 + v47, v43, v26);
  v50 = sub_1001CB398(v48, (uint64_t)v42);
  swift_setDeallocating(v48);
  swift_arrayDestroy(v49, *(_QWORD *)(v48 + 16), v26);
  swift_deallocClassInstance(v48, 32, 7);
  if (v38[2] <= v50[2] >> 3)
  {
    aBlock[0] = (uint64_t)v50;
    sub_1001CB134((uint64_t)v38);
    swift_bridgeObjectRelease(v38);
    v51 = (void *)aBlock[0];
  }
  else
  {
    v51 = sub_1001CB750((uint64_t)v38, (uint64_t)v50);
    swift_bridgeObjectRelease(v38);
  }
  v76 = qword_1005D1CA0;
  swift_bridgeObjectRetain(v51);
  v77 = v225;
  if (v76 != -1)
    swift_once(&qword_1005D1CA0, sub_100197BF4);
  v78 = type metadata accessor for Logger(0);
  sub_100056D88(v78, (uint64_t)qword_1005F5140);
  swift_bridgeObjectRetain_n(v51, 2);
  v79 = swift_bridgeObjectRetain_n(v77, 2);
  v80 = Logger.logObject.getter(v79);
  v81 = static os_log_type_t.default.getter(v80);
  if (os_log_type_enabled(v80, v81))
  {
    v82 = swift_slowAlloc(32, -1);
    v83 = swift_slowAlloc(64, -1);
    aBlock[0] = v83;
    *(_DWORD *)v82 = 136446723;
    v84 = sub_100008000(&qword_1005D7300, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
    swift_bridgeObjectRetain(v51);
    v86 = Set.description.getter(v85, v223, v84);
    v88 = v87;
    swift_bridgeObjectRelease(v51);
    v229 = sub_100056DA0(v86, v88, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v229, v230);
    swift_bridgeObjectRelease_n(v51, 2);
    swift_bridgeObjectRelease(v88);
    *(_WORD *)(v82 + 12) = 2160;
    v229 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v229, v230);
    *(_WORD *)(v82 + 22) = 2081;
    swift_bridgeObjectRetain(v225);
    v89 = v221;
    v229 = sub_100056DA0(v221, v225, aBlock);
    v77 = v225;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v229, v230);
    swift_bridgeObjectRelease_n(v77, 3);
    _os_log_impl((void *)&_mh_execute_header, v80, v81, "FMDeviceDetailContentViewController: mute sound selecting channels to play Classic %{public}s for %{private,mask.hash}s.", (uint8_t *)v82, 0x20u);
    swift_arrayDestroy(v83, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v83, -1, -1);
    swift_slowDealloc(v82, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v77, 2);
    swift_bridgeObjectRelease_n(v51, 2);
    v89 = v221;
  }
  v128 = v214;
  v129 = v213;
  v130 = v215;
  (*(void (**)(os_log_t, _QWORD, uint64_t))(v214 + 104))(v213, enum case for FMIPPlaySoundMethod.classic(_:), v215);
  swift_bridgeObjectRetain(v51);
  v132 = sub_1003EFA80(v131);
  swift_bridgeObjectRelease(v51);
  v133 = (_QWORD *)swift_allocObject(&unk_10054C3E0, 56, 7);
  v133[2] = v51;
  v133[3] = v89;
  v133[4] = v77;
  v133[5] = sub_1001D4FA8;
  v134 = v217;
  v133[6] = v217;
  swift_retain(v134);
  sub_1001B20A0((uint64_t)v129, 1, 0, (uint64_t)v132, (uint64_t)sub_1001D4F9C, (uint64_t)v133);
  swift_release(v132);
  v135 = swift_release(v133);
  (*(void (**)(os_log_t, uint64_t, __n128))(v128 + 8))(v129, v130, v135);
  (*(void (**)(char *, uint64_t))(v218 + 8))(v216, v219);
  (*(void (**)(char *, uint64_t))(v222 + 8))(v224, v223);
  swift_release(v134);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v51).n128_u64[0];
  return result;
}

double sub_1001D1F34(uint64_t a1, char *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  void (*v33)(char *, uint64_t, uint64_t, __n128);
  char *v34;
  char *v35;
  uint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  unint64_t v40;
  unint64_t v41;
  void *v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  void *v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  uint64_t v95;
  NSObject *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  NSObject *v101;
  os_log_type_t v102;
  int v103;
  BOOL v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  __n128 v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  os_log_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  os_log_t v129;
  char *v130;
  os_log_t v131;
  uint64_t v132;
  void (*v133)(uint64_t, uint64_t, uint64_t);
  uint64_t v134;
  _QWORD *v135;
  _QWORD *v136;
  uint64_t v137;
  __n128 v138;
  double result;
  os_log_t v140;
  uint64_t v141;
  void (*v142)(uint64_t, uint64_t, uint64_t);
  uint64_t v143;
  uint64_t v144;
  int64_t v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  __n128 v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  NSObject *v157;
  os_log_type_t v158;
  int v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  unint64_t v165;
  __n128 v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  unint64_t v172;
  uint64_t v173;
  void (*v174)(char *, uint64_t);
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  unint64_t v179;
  unint64_t v180;
  os_log_t v181;
  void (*v182)(uint64_t, uint64_t, uint64_t);
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  _BYTE *v188;
  _BYTE *v189;
  char *v190;
  _BYTE *v191;
  void *v192;
  uint64_t v193;
  void *v194;
  uint64_t v195;
  _BYTE *v196;
  _QWORD *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  unint64_t v202;
  unint64_t v203;
  unint64_t v204;
  unint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  _QWORD *v209;
  unint64_t v210;
  os_log_t v211;
  id (**v212)();
  char *v213;
  __n128 v214;
  uint64_t v215;
  os_log_t v216;
  void *v217;
  char *v218;
  __int128 v219;
  char *v220;
  char *v221;
  uint64_t v222;
  char *v223;
  os_log_t v224;
  void (*v225)(uint64_t, uint64_t, uint64_t);
  char *v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  unint64_t v235;
  uint64_t v236;
  uint64_t aBlock[5];
  uint64_t v238;
  uint64_t v239;
  _BYTE v240[16];
  char v241[8];
  char v242[8];

  v225 = (void (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FMIPPlaySoundMethod(0);
  v224 = (os_log_t)*((_QWORD *)v225 - 1);
  v6 = __chkstk_darwin(v225);
  v221 = (char *)&v215 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v223 = (char *)&v215 - v8;
  v9 = type metadata accessor for FMIPDevice(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v215 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FMIPPlaySoundChannels(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  v16 = __chkstk_darwin(v13);
  *(_QWORD *)&v219 = (char *)&v215 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v16);
  v218 = (char *)&v215 - v18;
  v19 = __chkstk_darwin(v17);
  v220 = (char *)&v215 - v20;
  __chkstk_darwin(v19);
  v22 = (char *)&v215 - v21;
  v228 = swift_allocObject(&unk_10054C188, 24, 7);
  *(_QWORD *)(v228 + 16) = a3;
  v233 = v14;
  v234 = v22;
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  v222 = a1;
  v24 = a1;
  v25 = v23;
  v26 = v13;
  v23((uint64_t)v22, v24, v13);
  v227 = a2;
  v27 = *(_QWORD *)&a2[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource];
  v28 = v27 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
  swift_beginAccess(v27 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel, v242, 0, 0);
  v29 = type metadata accessor for FMDeviceDetailViewModel(0);
  v30 = v27 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
  v31 = *(unsigned __int8 *)(v28 + *(int *)(v29 + 96));
  v32 = swift_beginAccess(v30, v241, 0, 0);
  v229 = v10;
  v33 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
  v34 = v12;
  v230 = v9;
  v33(v12, v30, v9, v32);
  v35 = a3;
  v36 = FMIPDevice.identifier.getter(v35);
  v235 = v37;
  v38 = sub_1001CD650();
  v39 = sub_1001AF4A0(v31);
  v40 = v38[2];
  v41 = v39[2];
  v231 = v36;
  if (v40 > v41 >> 3)
  {
    v42 = sub_1001CB750((uint64_t)v38, (uint64_t)v39);
  }
  else
  {
    aBlock[0] = (uint64_t)v39;
    sub_1001CB134((uint64_t)v38);
    v42 = (void *)aBlock[0];
  }
  v43 = (uint64_t)v234;
  v44 = sub_10012A830((uint64_t)v234, (uint64_t)v42);
  v226 = v34;
  v232 = v26;
  if ((v44 & 1) == 0)
  {
    v52 = sub_10012A830(v43, (uint64_t)v38);
    v53 = v233;
    if ((v52 & 1) != 0)
    {
      swift_bridgeObjectRelease(v42);
      v54 = sub_100053F2C(&qword_1005D2AA8);
      v55 = *(unsigned __int8 *)(v53 + 80);
      v56 = (v55 + 32) & ~v55;
      v57 = v56 + *(_QWORD *)(v53 + 72);
      v223 = (char *)v54;
      v222 = v57;
      v220 = (char *)(v55 | 7);
      v58 = swift_allocObject(v54, v57, v55 | 7);
      v219 = xmmword_100481740;
      *(_OWORD *)(v58 + 16) = xmmword_100481740;
      v59 = v232;
      v25(v58 + v56, v43, v232);
      v60 = sub_1001CB398(v58, (uint64_t)v38);
      swift_setDeallocating(v58);
      swift_arrayDestroy(v58 + v56, *(_QWORD *)(v58 + 16), v59);
      swift_deallocClassInstance(v58, 32, 7);
      v61 = qword_1005D1CA0;
      swift_retain(v60);
      if (v61 != -1)
        swift_once(&qword_1005D1CA0, sub_100197BF4);
      v62 = type metadata accessor for Logger(0);
      sub_100056D88(v62, (uint64_t)qword_1005F5140);
      v63 = v235;
      swift_bridgeObjectRetain_n(v235, 2);
      v64 = swift_retain_n(v60, 2);
      v65 = Logger.logObject.getter(v64);
      v66 = static os_log_type_t.default.getter(v65);
      if (os_log_type_enabled(v65, v66))
      {
        v67 = swift_slowAlloc(32, -1);
        v68 = swift_slowAlloc(64, -1);
        aBlock[0] = v68;
        *(_DWORD *)v67 = 136446723;
        v69 = sub_100008000(&qword_1005D7300, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
        v218 = (char *)v56;
        v70 = v69;
        v71 = swift_retain(v60);
        v72 = Set.description.getter(v71, v232, v70);
        v74 = v73;
        swift_release(v60);
        v239 = sub_100056DA0(v72, v74, aBlock);
        v75 = v233;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v239, v240);
        swift_release_n(v60, 2);
        swift_bridgeObjectRelease(v74);
        *(_WORD *)(v67 + 12) = 2160;
        v239 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v239, v240);
        *(_WORD *)(v67 + 22) = 2081;
        swift_bridgeObjectRetain(v235);
        v239 = sub_100056DA0(v231, v235, aBlock);
        v56 = (uint64_t)v218;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v239, v240);
        swift_bridgeObjectRelease_n(v235, 3);
        _os_log_impl((void *)&_mh_execute_header, v65, v66, "FMDeviceDetailContentViewController: mute sound selecting channels to play LE %{public}s for %{private,mask.hash}s.", (uint8_t *)v67, 0x20u);
        swift_arrayDestroy(v68, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v68, -1, -1);
        v63 = v235;
        swift_slowDealloc(v67, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v63, 2);
        swift_release_n(v60, 2);
        v75 = v53;
      }
      v140 = v224;
      v141 = (uint64_t)v221;
      v142 = v225;
      ((void (*)(char *, _QWORD, _QWORD))v224[13].isa)(v221, enum case for FMIPPlaySoundMethod.ble(_:), v225);
      v143 = swift_allocObject(v223, v222, v220);
      *(_OWORD *)(v143 + 16) = v219;
      v144 = v232;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v75 + 104))(v143 + v56, enum case for FMIPPlaySoundChannels.mute(_:), v232);
      v145 = v60[2] + 1;
      swift_retain(v60);
      aBlock[0] = sub_100070298(0, v145, 0, (unint64_t)_swiftEmptyArrayStorage);
      swift_bridgeObjectRetain(v60);
      sub_1003E5754(v146);
      sub_1003E5740(v143);
      swift_release(v60);
      v147 = aBlock[0];
      v148 = (_QWORD *)swift_allocObject(&unk_10054C228, 56, 7);
      v149 = v231;
      v148[2] = v60;
      v148[3] = v149;
      v148[4] = v63;
      v148[5] = sub_1001D4F78;
      v150 = v228;
      v148[6] = v228;
      swift_retain(v150);
      sub_1001B20A0(v141, 1, 0, v147, (uint64_t)sub_1001D4F8C, (uint64_t)v148);
      swift_bridgeObjectRelease(v147);
      v151 = swift_release(v148);
      ((void (*)(uint64_t, void (*)(uint64_t, uint64_t, uint64_t), __n128))v140[1].isa)(v141, v142, v151);
      (*(void (**)(char *, uint64_t))(v229 + 8))(v226, v230);
      (*(void (**)(char *, uint64_t))(v75 + 8))(v234, v144);
      swift_release(v150);
LABEL_36:
      v197 = v60;
LABEL_37:
      *(_QWORD *)&result = swift_release(v197).n128_u64[0];
      return result;
    }
    v90 = v227;
    v91 = &v227[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_lastPlayAction];
    swift_beginAccess(&v227[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_lastPlayAction], &v239, 0, 0);
    v92 = *(_QWORD *)v91;
    if (*(_QWORD *)(v92 + 16))
    {
      swift_bridgeObjectRetain(v92);
      v93 = sub_100171C38(v43);
      if ((v94 & 1) != 0)
      {
        v225 = v25;
        v95 = *(_QWORD *)(*(_QWORD *)(v92 + 56) + 8 * v93);
        swift_retain(v95);
        swift_bridgeObjectRelease(v92);
        v223 = (char *)v95;
        v96 = sub_1001AF938(v95, (uint64_t)v38, v43, (uint64_t)v42);
        if (qword_1005D1CA0 != -1)
          swift_once(&qword_1005D1CA0, sub_100197BF4);
        v97 = type metadata accessor for Logger(0);
        sub_100056D88(v97, (uint64_t)qword_1005F5140);
        v98 = v218;
        v99 = v232;
        v225((uint64_t)v218, v222, v232);
        swift_bridgeObjectRetain_n(v235, 2);
        swift_bridgeObjectRetain_n(v42, 2);
        swift_bridgeObjectRetain_n(v38, 2);
        v100 = swift_retain_n(v96, 2);
        v101 = Logger.logObject.getter(v100);
        v102 = static os_log_type_t.default.getter(v101);
        v103 = v102;
        v104 = os_log_type_enabled(v101, v102);
        v224 = v96;
        v217 = v42;
        if (v104)
        {
          v105 = swift_slowAlloc(62, -1);
          LODWORD(v220) = v103;
          v106 = v105;
          v221 = (char *)swift_slowAlloc(160, -1);
          aBlock[0] = (uint64_t)v221;
          *(_DWORD *)v106 = 136447491;
          v107 = sub_100008000(&qword_1005D9978, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
          v216 = v101;
          v108 = dispatch thunk of CustomStringConvertible.description.getter(v99, v107);
          v110 = v109;
          v236 = sub_100056DA0(v108, v109, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v236, aBlock);
          v111 = swift_bridgeObjectRelease(v110);
          (*(void (**)(char *, uint64_t, __n128))(v53 + 8))(v98, v232, v111);
          *(_WORD *)(v106 + 12) = 2160;
          v236 = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v236, aBlock);
          *(_WORD *)(v106 + 22) = 2081;
          v112 = v235;
          swift_bridgeObjectRetain(v235);
          v236 = sub_100056DA0(v231, v112, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v236, aBlock);
          swift_bridgeObjectRelease_n(v112, 3);
          *(_WORD *)(v106 + 32) = 2082;
          v218 = (char *)(v106 + 34);
          v113 = sub_100008000(&qword_1005D7300, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
          swift_bridgeObjectRetain(v42);
          v115 = Set.description.getter(v114, v232, v113);
          v117 = v116;
          swift_bridgeObjectRelease(v42);
          v236 = sub_100056DA0(v115, v117, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v236, aBlock);
          swift_bridgeObjectRelease_n(v42, 2);
          swift_bridgeObjectRelease(v117);
          *(_WORD *)(v106 + 42) = 2082;
          swift_bridgeObjectRetain(v38);
          v119 = Set.description.getter(v118, v232, v113);
          v121 = v120;
          swift_bridgeObjectRelease(v38);
          v236 = sub_100056DA0(v119, v121, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v236, aBlock);
          swift_bridgeObjectRelease_n(v38, 2);
          swift_bridgeObjectRelease(v121);
          *(_WORD *)(v106 + 52) = 2082;
          v122 = v224;
          v236 = (uint64_t)v224;
          v123 = type metadata accessor for FMIPPlaySoundDeviceAction(0);
          v124 = sub_100008000(&qword_1005D9980, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundDeviceAction, (uint64_t)&protocol conformance descriptor for FMIPDeviceAction);
          v125 = v123;
          v99 = v232;
          v126 = dispatch thunk of CustomStringConvertible.description.getter(v125, v124);
          v128 = v127;
          v236 = sub_100056DA0(v126, v127, aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v236, aBlock);
          swift_release_n(v122, 2);
          swift_bridgeObjectRelease(v128);
          v129 = v216;
          _os_log_impl((void *)&_mh_execute_header, v216, (os_log_type_t)v220, "FMDeviceDetailContentViewController: mute %{public}s sound button pressed for %{private,mask.hash}s. onlineActiveChannels: %{public}s, offlineActiveChannels: %{public}s - Reissuing action %{public}s.", (uint8_t *)v106, 0x3Eu);
          v130 = v221;
          swift_arrayDestroy(v221, 5, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v130, -1, -1);
          swift_slowDealloc(v106, -1, -1);

        }
        else
        {
          (*(void (**)(char *, uint64_t))(v53 + 8))(v98, v99);

          swift_release_n(v96, 2);
          swift_bridgeObjectRelease_n(v38, 2);
          swift_bridgeObjectRelease_n(v42, 2);
          swift_bridgeObjectRelease_n(v235, 2);
        }
        v227 = *(char **)(*(_QWORD *)(*(_QWORD *)&v90[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator]
                                    + 24)
                        + 32);
        v198 = v219;
        v225(v219, v222, v99);
        v199 = *(unsigned __int8 *)(v53 + 80);
        v200 = (v199 + 16) & ~v199;
        v201 = (v15 + v200 + 7) & 0xFFFFFFFFFFFFFFF8;
        v202 = (v201 + 23) & 0xFFFFFFFFFFFFFFF8;
        v203 = (v202 + 15) & 0xFFFFFFFFFFFFFFF8;
        v204 = (v203 + 15) & 0xFFFFFFFFFFFFFFF8;
        v205 = (v204 + 15) & 0xFFFFFFFFFFFFFFF8;
        v206 = swift_allocObject(&unk_10054C200, v205 + 16, v199 | 7);
        v207 = v206 + v200;
        v208 = v232;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 32))(v207, v198, v232);
        v209 = (_QWORD *)(v206 + v201);
        v210 = v235;
        *v209 = v231;
        v209[1] = v210;
        *(_QWORD *)(v206 + v202) = v217;
        *(_QWORD *)(v206 + v203) = v38;
        v211 = v224;
        *(_QWORD *)(v206 + v204) = v224;
        v212 = (id (**)())(v206 + v205);
        v60 = (_QWORD *)v228;
        *v212 = sub_1001D4F78;
        v212[1] = (id (*)())v60;
        swift_retain(v60);
        swift_retain(v211);
        v213 = v227;
        swift_retain(v227);
        sub_1000B47BC((uint64_t)v211, (uint64_t)sub_1001D4F84, v206);
        swift_release(v211);
        swift_release(v223);
        swift_release(v213);
        v214 = swift_release(v206);
        (*(void (**)(char *, uint64_t, __n128))(v229 + 8))(v226, v230, v214);
        (*(void (**)(char *, uint64_t))(v53 + 8))(v234, v208);
        goto LABEL_36;
      }
      swift_bridgeObjectRelease(v92);
    }
    if (qword_1005D1CA0 != -1)
      swift_once(&qword_1005D1CA0, sub_100197BF4);
    v152 = type metadata accessor for Logger(0);
    sub_100056D88(v152, (uint64_t)qword_1005F5140);
    v153 = v220;
    v154 = v232;
    ((void (*)(char *, uint64_t))v25)(v220, v222);
    v155 = v235;
    swift_bridgeObjectRetain(v235);
    swift_bridgeObjectRetain(v42);
    swift_bridgeObjectRetain(v38);
    v157 = Logger.logObject.getter(v156);
    v158 = static os_log_type_t.error.getter(v157);
    v159 = v158;
    if (os_log_type_enabled(v157, v158))
    {
      v160 = swift_slowAlloc(52, -1);
      v227 = v35;
      v161 = v160;
      v225 = (void (*)(uint64_t, uint64_t, uint64_t))swift_slowAlloc(128, -1);
      aBlock[0] = (uint64_t)v225;
      *(_DWORD *)v161 = 136447235;
      v224 = v157;
      v162 = sub_100008000(&qword_1005D9978, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
      LODWORD(v223) = v159;
      v163 = dispatch thunk of CustomStringConvertible.description.getter(v154, v162);
      v165 = v164;
      v236 = sub_100056DA0(v163, v164, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v236, aBlock);
      v166 = swift_bridgeObjectRelease(v165);
      v233 = *(_QWORD *)(v233 + 8);
      ((void (*)(char *, uint64_t, __n128))v233)(v153, v154, v166);
      *(_WORD *)(v161 + 12) = 2160;
      v236 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v236, aBlock);
      *(_WORD *)(v161 + 22) = 2081;
      swift_bridgeObjectRetain(v155);
      v236 = sub_100056DA0(v231, v155, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v236, aBlock);
      swift_bridgeObjectRelease_n(v155, 3);
      *(_WORD *)(v161 + 32) = 2082;
      v167 = sub_100008000(&qword_1005D7300, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
      swift_bridgeObjectRetain(v42);
      v168 = v154;
      v170 = Set.description.getter(v169, v154, v167);
      v172 = v171;
      swift_bridgeObjectRelease(v42);
      v173 = v170;
      v174 = (void (*)(char *, uint64_t))v233;
      v236 = sub_100056DA0(v173, v172, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v236, aBlock);
      swift_bridgeObjectRelease_n(v42, 2);
      swift_bridgeObjectRelease(v172);
      *(_WORD *)(v161 + 42) = 2082;
      swift_bridgeObjectRetain(v38);
      v175 = v167;
      v43 = (uint64_t)v234;
      v177 = Set.description.getter(v176, v168, v175);
      v179 = v178;
      swift_bridgeObjectRelease(v38);
      v236 = sub_100056DA0(v177, v179, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v236, aBlock);
      swift_bridgeObjectRelease_n(v38, 2);
      v180 = v179;
      v34 = v226;
      swift_bridgeObjectRelease(v180);
      v181 = v224;
      _os_log_impl((void *)&_mh_execute_header, v224, (os_log_type_t)v223, "FMDeviceDetailContentViewController: mute %{public}s sound button pressed for %{private,mask.hash}s. onlineActiveChannels: %{public}s, offlineActiveChannels: %{public}s - Failed to reissue action, no last action.", (uint8_t *)v161, 0x34u);
      v182 = v225;
      swift_arrayDestroy(v225, 4, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v182, -1, -1);
      v183 = v161;
      v35 = v227;
      swift_slowDealloc(v183, -1, -1);

      v184 = v168;
    }
    else
    {
      v185 = v154;
      v186 = v154;
      v174 = *(void (**)(char *, uint64_t))(v233 + 8);
      v174(v153, v186);

      swift_bridgeObjectRelease_n(v38, 2);
      swift_bridgeObjectRelease_n(v42, 2);
      swift_bridgeObjectRelease_n(v155, 2);
      v184 = v185;
    }
    v187 = OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_muteRightButton;
    v188 = *(_BYTE **)&v35[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_muteRightButton];
    v188[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_pending] = 0;
    v189 = v188;
    sub_1000AC5DC();

    v190 = v35;
    v191 = *(_BYTE **)&v35[v187];
    v191[OBJC_IVAR____TtC6FindMy19FMIconPlatterButton_showActivityIndicator] = 0;
    v192 = (void *)objc_opt_self(UIView);
    v193 = swift_allocObject(&unk_10054C1B0, 24, 7);
    *(_QWORD *)(v193 + 16) = v191;
    aBlock[4] = (uint64_t)sub_10010C2B0;
    v238 = v193;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100037DF8;
    aBlock[3] = (uint64_t)&unk_10054C1C8;
    v194 = _Block_copy(aBlock);
    v195 = v238;
    v196 = v191;
    swift_release(v195);
    objc_msgSend(v192, "animateWithDuration:delay:options:animations:completion:", 4, v194, 0, 0.3, 0.0);
    _Block_release(v194);

    objc_msgSend(*(id *)&v190[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_muteLeftButton], "setUserInteractionEnabled:", 1);
    (*(void (**)(char *, uint64_t))(v229 + 8))(v34, v230);
    v174((char *)v43, v184);
    v197 = (_QWORD *)v228;
    goto LABEL_37;
  }
  v45 = sub_100053F2C(&qword_1005D2AA8);
  v46 = *(unsigned __int8 *)(v233 + 80);
  v47 = (v46 + 32) & ~v46;
  v48 = swift_allocObject(v45, v47 + *(_QWORD *)(v233 + 72), v46 | 7);
  *(_OWORD *)(v48 + 16) = xmmword_100481740;
  v49 = v48 + v47;
  v25(v48 + v47, v43, v26);
  v50 = sub_1001CB398(v48, (uint64_t)v42);
  swift_setDeallocating(v48);
  swift_arrayDestroy(v49, *(_QWORD *)(v48 + 16), v26);
  swift_deallocClassInstance(v48, 32, 7);
  if (v38[2] <= v50[2] >> 3)
  {
    aBlock[0] = (uint64_t)v50;
    sub_1001CB134((uint64_t)v38);
    swift_bridgeObjectRelease(v38);
    v51 = (void *)aBlock[0];
  }
  else
  {
    v51 = sub_1001CB750((uint64_t)v38, (uint64_t)v50);
    swift_bridgeObjectRelease(v38);
  }
  v76 = qword_1005D1CA0;
  swift_bridgeObjectRetain(v51);
  v77 = v235;
  if (v76 != -1)
    swift_once(&qword_1005D1CA0, sub_100197BF4);
  v78 = type metadata accessor for Logger(0);
  sub_100056D88(v78, (uint64_t)qword_1005F5140);
  swift_bridgeObjectRetain_n(v51, 2);
  v79 = swift_bridgeObjectRetain_n(v77, 2);
  v80 = Logger.logObject.getter(v79);
  v81 = static os_log_type_t.default.getter(v80);
  if (os_log_type_enabled(v80, v81))
  {
    v82 = swift_slowAlloc(32, -1);
    v83 = swift_slowAlloc(64, -1);
    aBlock[0] = v83;
    *(_DWORD *)v82 = 136446723;
    v84 = sub_100008000(&qword_1005D7300, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
    swift_bridgeObjectRetain(v51);
    v86 = Set.description.getter(v85, v26, v84);
    v88 = v87;
    swift_bridgeObjectRelease(v51);
    v239 = sub_100056DA0(v86, v88, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v239, v240);
    swift_bridgeObjectRelease_n(v51, 2);
    swift_bridgeObjectRelease(v88);
    *(_WORD *)(v82 + 12) = 2160;
    v239 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v239, v240);
    *(_WORD *)(v82 + 22) = 2081;
    swift_bridgeObjectRetain(v235);
    v89 = v231;
    v239 = sub_100056DA0(v231, v235, aBlock);
    v77 = v235;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v239, v240);
    swift_bridgeObjectRelease_n(v77, 3);
    _os_log_impl((void *)&_mh_execute_header, v80, v81, "FMDeviceDetailContentViewController: mute sound selecting channels to play Classic %{public}s for %{private,mask.hash}s.", (uint8_t *)v82, 0x20u);
    swift_arrayDestroy(v83, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v83, -1, -1);
    swift_slowDealloc(v82, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v77, 2);
    swift_bridgeObjectRelease_n(v51, 2);
    v89 = v231;
  }
  v131 = v224;
  v132 = (uint64_t)v223;
  v133 = v225;
  ((void (*)(char *, _QWORD, _QWORD))v224[13].isa)(v223, enum case for FMIPPlaySoundMethod.classic(_:), v225);
  swift_bridgeObjectRetain(v51);
  v135 = sub_1003EFA80(v134);
  swift_bridgeObjectRelease(v51);
  v136 = (_QWORD *)swift_allocObject(&unk_10054C250, 56, 7);
  v136[2] = v51;
  v136[3] = v89;
  v136[4] = v77;
  v136[5] = sub_1001D4F78;
  v137 = v228;
  v136[6] = v228;
  swift_retain(v137);
  sub_1001B20A0(v132, 1, 0, (uint64_t)v135, (uint64_t)sub_1001D4F9C, (uint64_t)v136);
  swift_release(v135);
  v138 = swift_release(v136);
  ((void (*)(uint64_t, void (*)(uint64_t, uint64_t, uint64_t), __n128))v131[1].isa)(v132, v133, v138);
  (*(void (**)(char *, uint64_t))(v229 + 8))(v226, v230);
  (*(void (**)(char *, uint64_t))(v233 + 8))(v234, v232);
  swift_release(v137);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v51).n128_u64[0];
  return result;
}

double sub_1001D3904()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint8_t *v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  double result;
  uint64_t v29;
  uint64_t v30;
  char v31[24];

  v1 = v0;
  v2 = type metadata accessor for FMIPDeviceState(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = &v31[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v4);
  v8 = &v31[-v7 - 8];
  v9 = type metadata accessor for FMIPDevice(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v31[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v13 = type metadata accessor for Logger(0);
  v14 = sub_100056D88(v13, (uint64_t)qword_1005F5748);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(2, -1);
    v30 = v2;
    v18 = v3;
    v19 = v1;
    v20 = v17;
    *(_WORD *)v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "FMDeviceDetailContentViewController: handle itemNotificationViewSelectNWLBDetailLabel", v17, 2u);
    v21 = v20;
    v1 = v19;
    v3 = v18;
    v2 = v30;
    swift_slowDealloc(v21, -1, -1);
  }

  v22 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource)
      + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
  v23 = swift_beginAccess(v22, v31, 0, 0);
  v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v12, v22, v9, v23);
  FMIPDevice.state.getter(v24);
  v25 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  static FMIPDeviceState.separationWarningPaused.getter(v25);
  v26 = sub_100008000((unint64_t *)&qword_1005D4158, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPDeviceState, (uint64_t)&protocol conformance descriptor for FMIPDeviceState);
  LOBYTE(v22) = dispatch thunk of SetAlgebra.isSuperset(of:)(v6, v2, v26);
  v27 = *(void (**)(char *, uint64_t))(v3 + 8);
  v27(v6, v2);
  v27(v8, v2);
  if ((v22 & 1) != 0)
  {
    sub_1001BEC04();
  }
  else
  {
    v29 = swift_allocObject(&unk_10054B5D0, 24, 7);
    swift_unknownObjectWeakInit(v29 + 16);
    sub_1000A0F40((uint64_t)sub_1001D40A4, v29, 0, 0);
    *(_QWORD *)&result = swift_release(v29).n128_u64[0];
  }
  return result;
}

void sub_1001D3BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  id v16;
  NSURL *v17;
  void *v18;
  void *v19;
  void *v20;
  Class isa;
  uint64_t v22;

  v4 = sub_100053F2C((uint64_t *)&unk_1005D3470);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)(a1, a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1000051EC((uint64_t)v6, (uint64_t *)&unk_1005D3470);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v11 = type metadata accessor for Logger(0);
    v12 = sub_100056D88(v11, (uint64_t)qword_1005F5748);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.error.getter(v13);
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "FMDeviceDetailContentViewController: Error opening settings. Invalid URL", v15, 2u);
      swift_slowDealloc(v15, -1, -1);
    }

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v16 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
    if (v16)
    {
      v18 = v16;
      URL._bridgeToObjectiveC()(v17);
      v20 = v19;
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v18, "openSensitiveURL:withOptions:", v20, isa);

    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_1001D3DDC(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  int v22;
  _QWORD v23[3];
  _BYTE v24[8];
  uint64_t v25;
  uint64_t v26[3];

  v3 = v2;
  v6 = type metadata accessor for FMDeviceDetailViewModel(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v9 = type metadata accessor for Logger(0);
  sub_100056D88(v9, (uint64_t)qword_1005F5748);
  swift_errorRetain(a2);
  v10 = swift_errorRetain(a2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(18, -1);
    v14 = swift_slowAlloc(32, -1);
    v26[0] = v14;
    *(_DWORD *)v13 = 67109378;
    LODWORD(v25) = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, (char *)&v25 + 4);
    *(_WORD *)(v13 + 8) = 2080;
    v22 = a1;
    if (a2)
    {
      swift_getErrorValue(a2, v24, v23);
      v15 = Error.localizedDescription.getter(v23[1], v23[2]);
      v17 = v16;
    }
    else
    {
      v17 = 0xE300000000000000;
      v15 = 7104878;
    }
    v25 = sub_100056DA0(v15, v17, v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, v26);
    swift_bridgeObjectRelease(v17);
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "FMDeviceDetailContentViewController: isRangingServiceAvailable: %{BOOL}d, error: %s", (uint8_t *)v13, 0x12u);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    swift_slowDealloc(v13, -1, -1);

    LOBYTE(a1) = v22;
  }
  else
  {
    swift_errorRelease(a2);
    swift_errorRelease(a2);

  }
  *(_BYTE *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_isRangingAvailable) = a1 & 1;
  v18 = *(_QWORD *)(v3 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource)
      + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
  swift_beginAccess(v18, v26, 0, 0);
  v19 = *(_QWORD *)(v18 + *(int *)(v6 + 88));
  sub_10004FC74(v18, (uint64_t)v8, type metadata accessor for FMDeviceDetailViewModel);
  sub_10019FDF8((uint64_t)v8, (v19 & 0x1400) != 0);
  return sub_10004FCB8((uint64_t)v8, type metadata accessor for FMDeviceDetailViewModel);
}

uint64_t sub_1001D40A4(uint64_t a1)
{
  uint64_t v1;

  return sub_1001BE91C(a1, v1);
}

uint64_t sub_1001D40B0(uint64_t a1)
{
  return sub_1001D43A8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, uint64_t))sub_1001BDFA4);
}

uint64_t sub_1001D40BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1001BE834(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_1001D40C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1001BE4D4(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

id sub_1001D40CC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_verticalStackView), "setAlpha:", 1.0);
}

id sub_1001D40EC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_verticalStackView), "setAlpha:", 0.0);
}

uint64_t sub_1001D410C()
{
  return sub_100115B04((uint64_t (*)(_QWORD))&type metadata accessor for FMIPDevice);
}

double sub_1001D4118(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMIPDevice(0) - 8) + 80);
  return sub_1001C527C(a1, *(char **)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_1001D4158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for FMIPDevice(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v6 + 8, v5);
}

void sub_1001D41CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;

  v7 = *(_QWORD *)(type metadata accessor for FMIPDevice(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  sub_1001C53A4(a1, a2, a3, v3 + v8, *(void **)(v3 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1001D4234(uint64_t a1)
{
  uint64_t v1;

  return sub_1001C3C98(a1, *(void **)(v1 + 16), (uint64_t)&unk_10054B918, (uint64_t)sub_1001D42E4, (uint64_t)&unk_10054B930);
}

uint64_t sub_1001D4264(uint64_t a1)
{
  uint64_t v1;

  return sub_1001C3C98(a1, *(void **)(v1 + 16), (uint64_t)&unk_10054B850, (uint64_t)sub_1001D4294, (uint64_t)&unk_10054B868);
}

void sub_1001D4294()
{
  uint64_t v0;

  sub_1001C3E98(*(char **)(v0 + 16));
}

double sub_1001D429C(char a1)
{
  uint64_t v1;

  return sub_1001C40BC(a1, *(void **)(v1 + 16), (uint64_t)&unk_10054B8C8, (uint64_t)sub_1001D42CC, (uint64_t)&unk_10054B8E0);
}

uint64_t sub_1001D42CC()
{
  uint64_t v0;

  return sub_1001C4558(*(_QWORD *)(v0 + 16));
}

void sub_1001D42E4()
{
  uint64_t v0;

  sub_1001C3A28(*(char **)(v0 + 16));
}

double sub_1001D42EC(char a1)
{
  uint64_t v1;

  return sub_1001C40BC(a1, *(void **)(v1 + 16), (uint64_t)&unk_10054B990, (uint64_t)sub_1001D6608, (uint64_t)&unk_10054B9A8);
}

uint64_t sub_1001D431C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1001C30D4(a1, a2, a3, a4, *(uint64_t (**)(BOOL))(v4 + 16));
}

uint64_t sub_1001D4328()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for FMIPDevice(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 25) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1001D439C(uint64_t a1)
{
  return sub_1001D43A8(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, uint64_t))sub_1001C221C);
}

uint64_t sub_1001D43A8(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMIPDevice(0) - 8) + 80);
  return a2(a1, *(_QWORD *)(v2 + 16), *(unsigned __int8 *)(v2 + 24), v2 + ((v4 + 25) & ~v4));
}

uint64_t sub_1001D43FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1001C2320(a1, a2, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24));
}

void sub_1001D440C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001C18B0(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(uint64_t))(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1001D4418()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = type metadata accessor for FMIPDevice(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  if (*(_QWORD *)(v0 + v5))
    swift_release(*(_QWORD *)(v0 + v5 + 8));
  return swift_deallocObject(v0, v5 + 16, v3 | 7);
}

double sub_1001D44A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t *v5;

  v3 = *(_QWORD *)(type metadata accessor for FMIPDevice(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (uint64_t *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1001C0D28(a1, *(_QWORD *)(v1 + 16), v1 + v4, *v5, v5[1]);
}

uint64_t sub_1001D4500()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1001D4534(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1001C0E0C(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(_QWORD))(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1001D4540()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D4550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for FMIPDevice(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 49) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(sub_100053F2C(&qword_1005D2BC8) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v5 + v4 + v7 + 2) & ~v7;
  v9 = *(_QWORD *)(v6 + 64);
  swift_release(*(_QWORD *)(v0 + 24));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  v10 = type metadata accessor for FMFDevice(0);
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v0 + v8, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0 + v8, v10);
  return swift_deallocObject(v0, v9 + v8 + 1, v3 | v7 | 7);
}

uint64_t sub_1001D4638(char a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = *(_QWORD *)(type metadata accessor for FMIPDevice(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v4 + *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(sub_100053F2C(&qword_1005D2BC8) - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80) + 2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return sub_1001C00E8(a1, *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(unsigned __int8 *)(v1 + 33), *(unsigned __int8 *)(v1 + 34), *(unsigned __int8 *)(v1 + 35), *(unsigned __int8 *)(v1 + 36), *(void **)(v1 + 40), *(_BYTE *)(v1 + 48), v1 + v4, *(_BYTE *)(v1 + v5), *(_BYTE *)(v1 + v5 + 1), v1 + v7, *(_BYTE *)(v1 + v7 + *(_QWORD *)(v6 + 64)));
}

uint64_t sub_1001D470C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v1 = type metadata accessor for FMIPDevice(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 25) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = *(_QWORD *)(sub_100053F2C(&qword_1005D2BC8) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v5 + v4 + v7 + 4) & ~v7;
  v9 = *(_QWORD *)(v6 + 64);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  v10 = type metadata accessor for FMFDevice(0);
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v0 + v8, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0 + v8, v10);
  v12 = (v9 + v8 + 9) & 0xFFFFFFFFFFFFFFF8;
  v13 = v12 + 8;
  swift_release(*(_QWORD *)(v0 + v12));
  return swift_deallocObject(v0, v13, v3 | v7 | 7);
}

void sub_1001D4804()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(type metadata accessor for FMIPDevice(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v2 + *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(sub_100053F2C(&qword_1005D2BC8) - 8);
  v5 = (v3 + *(unsigned __int8 *)(v4 + 80) + 4) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  sub_1001C05B8(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), v0 + v2, *(unsigned __int8 *)(v0 + v3), *(unsigned __int8 *)(v0 + v3 + 1), *(unsigned __int8 *)(v0 + v3 + 2), *(unsigned __int8 *)(v0 + v3 + 3), v0 + v5, *(_BYTE *)(v0 + v5 + *(_QWORD *)(v4 + 64)), *(_BYTE *)(v0 + v5 + *(_QWORD *)(v4 + 64) + 1), *(_QWORD *)(v0 + ((v5 + *(_QWORD *)(v4 + 64) + 9) & 0xFFFFFFFFFFFFF8)));
}

double sub_1001D48C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1001BDACC(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1001D48C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1001D4928(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 80);
  sub_1001BBB10(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_1001D4974()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(sub_100053F2C(&qword_1005D6710) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 25) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);

  v5 = type metadata accessor for FMIPDevice(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  return swift_deallocObject(v0, v4 + v3 + 1, v2 | 7);
}

void sub_1001D4A18()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_100053F2C(&qword_1005D6710) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 25) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1001B801C(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), v0 + v2, *(_BYTE *)(v0 + v2 + *(_QWORD *)(v1 + 64)));
}

void sub_1001D4A60()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v0 + 16)
                       + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_soundPendingAttention)
           + OBJC_IVAR____TtC6FindMy17FMPlatterInfoView_collapsed) = 1;
  sub_1002584D0();
}

uint64_t sub_1001D4AA0@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_1001B6448(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_1001D4AB8(uint64_t a1)
{
  uint64_t v1;

  sub_1001B693C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1001D4AC0()
{
  return sub_1001B6AD4();
}

id sub_1001D4AC8(uint64_t a1)
{
  uint64_t v1;

  return sub_1001B59B4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1001D4AD0()
{
  return sub_100115B04((uint64_t (*)(_QWORD))&type metadata accessor for FMIPPlaySoundMethod);
}

uint64_t sub_1001D4ADC(uint64_t a1)
{
  return sub_1001D4B00(a1, "DeviceDetailContentViewController: User confirmed safety warning");
}

uint64_t sub_1001D4AE8()
{
  return sub_100115B04((uint64_t (*)(_QWORD))&type metadata accessor for FMIPPlaySoundMethod);
}

uint64_t sub_1001D4AF4(uint64_t a1)
{
  return sub_1001D4B00(a1, "FMDeviceDetailContentViewController: User confirmed server safety warning");
}

uint64_t sub_1001D4B00(uint64_t a1, const char *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMIPPlaySoundMethod(0) - 8) + 80);
  return sub_1001B5B48(a1, *(_QWORD *)(v2 + 16), v2 + ((v5 + 24) & ~v5), a2);
}

uint64_t sub_1001D4B54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = type metadata accessor for FMIPPlaySoundMethod(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  v7 = type metadata accessor for FMIPDevice(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v14 = *(_QWORD *)(v8 + 64);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v5));
  if (*(_QWORD *)(v0 + v6))
    swift_release(*(_QWORD *)(v0 + v6 + 8));
  v10 = v3 | v9 | 7;
  v11 = (v9 + v6 + 16) & ~v9;
  v12 = v11 + v14;
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v11, v7);
  return swift_deallocObject(v0, v12, v10);
}

uint64_t sub_1001D4C50(uint64_t a1, uint64_t a2, void (*a3)(_QWORD, _QWORD), uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v9 = *(_QWORD *)(type metadata accessor for FMIPPlaySoundMethod(0) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = (*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMIPDevice(0) - 8) + 80);
  return sub_1001B2BA4(a1, a2, a3, a4, *(void **)(v4 + 16), v4 + v10, *(NSObject **)(v4 + v11), *(_QWORD *)(v4 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v4 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), v4 + ((v12 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v12));
}

uint64_t sub_1001D4D14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;

  v1 = type metadata accessor for FMIPActionStatus(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = type metadata accessor for FMIPDevice(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  if (*(_QWORD *)(v0 + v5))
    swift_release(*(_QWORD *)(v0 + v5 + 8));
  v10 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  v11 = (v8 + v10 + 8) & ~v8;
  v12 = (v9 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v10));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v11, v6);
  swift_release(*(_QWORD *)(v0 + v12));
  swift_errorRelease(*(_QWORD *)(v0 + v13));

  return swift_deallocObject(v0, v14 + 8, v3 | v8 | 7);
}

uint64_t sub_1001D4E2C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(type metadata accessor for FMIPActionStatus(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = (v3 + 23) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(_QWORD *)(type metadata accessor for FMIPDevice(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + v4 + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1001B3358(v0 + v2, *(void (**)(_QWORD, _QWORD, _QWORD))(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + v4), v0 + v6, *(_QWORD *)(v0 + v7), *(void **)(v0 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(char **)(v0 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

void sub_1001D4ED8()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v0 + 16)
                       + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_soundPendingAttention)
           + OBJC_IVAR____TtC6FindMy17FMPlatterInfoView_collapsed) = 0;
  sub_1002584D0();
}

uint64_t sub_1001D4F14()
{
  return sub_100115B04((uint64_t (*)(_QWORD))&type metadata accessor for FMIPPlaySoundMethod);
}

uint64_t sub_1001D4F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMIPPlaySoundMethod(0) - 8) + 80);
  return sub_1001B1B44(a1, a2, a3, *(_QWORD *)(v3 + 16), v3 + ((v7 + 24) & ~v7));
}

id sub_1001D4F78()
{
  uint64_t v0;

  return sub_1001B073C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1001D4F8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001D5180(a1, a2, a3, "FMDeviceDetailContentViewController: finished mute sound selecting channels to play LE %{public}s for %{private,mask.hash}s.");
}

uint64_t sub_1001D4F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001D5180(a1, a2, a3, "FMDeviceDetailContentViewController: finished mute sound selecting channels to play classic %{public}s for %{private,mask.hash}s.");
}

id sub_1001D4FA8()
{
  uint64_t v0;

  return sub_1001B0340(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1001D4FB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v1 = type metadata accessor for FMIPPlaySoundChannels(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v7));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v8));
  swift_release(*(_QWORD *)(v0 + v9));
  swift_release(*(_QWORD *)(v0 + v10 + 8));
  return swift_deallocObject(v0, v10 + 16, v5);
}

uint64_t sub_1001D5080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v9 = *(_QWORD *)(type metadata accessor for FMIPPlaySoundChannels(0) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = (*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = (v11 + 23) & 0xFFFFFFFFFFFFFFF8;
  v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_1001AFC24(a1, a2, a3, a4, v4 + v10, *(_QWORD *)(v4 + v11), *(_QWORD *)(v4 + v11 + 8), *(_QWORD *)(v4 + v12), *(_QWORD *)(v4 + v13), *(_QWORD *)(v4 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8)), *(uint64_t (**)(uint64_t))(v4 + ((((v13 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v4 + ((((v13 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1001D514C()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[4]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1001D5180(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v4;

  return sub_1001AF690(a1, a2, a3, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(uint64_t (**)(_QWORD))(v4 + 40), *(_QWORD *)(v4 + 48), a4);
}

void sub_1001D51B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1001AF1BC(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), "FMDeviceDetailContentViewController: Sound stopped - classic for %{private,mask.hash}s.", (uint64_t)&unk_10054C548, (uint64_t)sub_10010C2B0, (uint64_t)&unk_10054C560);
}

uint64_t sub_1001D5200()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

void sub_1001D522C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1001AF1BC(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), "FMDeviceDetailContentViewController: Sound stopped - LE for %{private,mask.hash}s.", (uint64_t)&unk_10054C4F8, (uint64_t)sub_10010C2B0, (uint64_t)&unk_10054C510);
}

uint64_t sub_1001D5274()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001D52A0()
{
  uint64_t v0;

  return sub_1001AD1A4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

double sub_1001D52B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1001AD5E8(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32));
}

uint64_t sub_1001D52C0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001D52EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1001ADA38(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32));
}

uint64_t sub_1001D52F8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v1 = (int *)type metadata accessor for FMDeviceDetailViewModel(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v0 + v4;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 48));
  v7 = v0 + v4 + v1[9];
  v8 = type metadata accessor for FMIPItem(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[12]));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[14] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[16] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[17] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[18] + 8));
  v10 = v6 + v1[19];
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v13(v10, v11);
  v14 = v6 + v1[21];
  v15 = type metadata accessor for FMIPBatteryStatus(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  v16 = v6 + v1[33];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v16, 1, v11))
    v13(v16, v11);
  v17 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[38]));

  return swift_deallocObject(v0, v17 + 8, v3 | 7);
}

double sub_1001D54AC(char a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for FMDeviceDetailViewModel(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1001AC0C0(a1, v1 + v4, *(NSObject **)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1001D54FC()
{
  return sub_100115B04((uint64_t (*)(_QWORD))&type metadata accessor for FMIPPlaySoundMethod);
}

uint64_t sub_1001D5508()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMIPPlaySoundMethod(0) - 8) + 80);
  return sub_1001B08BC(v0 + ((v1 + 24) & ~v1), 0, 0);
}

uint64_t sub_1001D5550()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001D5560()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

void sub_1001D5570(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t sub_1001D557C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1001D55A0()
{
  uint64_t v0;

  return sub_1003EF1B8(*(void (**)(uint64_t *__return_ptr))(v0 + 16));
}

uint64_t PushAlert.locKey.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 24));
  return v1;
}

uint64_t sub_1001D55D4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

_BYTE **sub_1001D55E4(_BYTE **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_10007111C(a1, a2, a3, *(_BYTE *)(v3 + 16));
}

uint64_t sub_1001D55EC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

void sub_1001D55FC(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_100070EE8(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_1001D5604()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D5614()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D5624()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001D5634@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_100063D64(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1001D563C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_10007112C(a1, a2, a3, *(void (**)(uint64_t *__return_ptr))(v3 + 16));
}

uint64_t sub_1001D5644()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D5654()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1001D5664()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1001D5688()
{
  uint64_t v0;

  sub_1001A3E2C(*(char **)(v0 + 16));
}

uint64_t sub_1001D5690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(type metadata accessor for FMSelectionPendingAction(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);

  v5 = sub_100053F2C(&qword_1005D2C78);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v0 + v3, 10, v5))
  {
    v6 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  v7 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = v7 + 16;
  swift_release(*(_QWORD *)(v0 + v7 + 8));
  return swift_deallocObject(v0, v8, v2 | 7);
}

uint64_t sub_1001D5750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;

  v7 = *(_QWORD *)(type metadata accessor for FMSelectionPendingAction(0) - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (uint64_t *)(v3 + ((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1001A3F54(a1, a2, a3, *(char **)(v3 + 16), v3 + v8, *v9, v9[1]);
}

uint64_t sub_1001D57C0(uint64_t a1)
{
  uint64_t v1;

  return sub_1001A58AC(a1, *(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v1 + 16));
}

uint64_t sub_1001D57C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

uint64_t sub_1001D585C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_1001A5244(*(char **)(v0 + 16), v0 + v2, *(void (**)(uint64_t, uint64_t, void *))v3, *(_QWORD *)(v3 + 8));
}

uint64_t sub_1001D58A4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1001D58D0(uint64_t a1)
{
  uint64_t v1;

  return sub_1001A57C4(a1, *(_QWORD *)(v1 + 16), *(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v1 + 24));
}

uint64_t sub_1001D58DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;

  v1 = *(_QWORD *)(type metadata accessor for FMSelectionPendingAction(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = (*(_QWORD *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(_QWORD *)(sub_100053F2C(&qword_1005D9990) - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v4 + v6 + 8) & ~v6;
  v8 = *(_QWORD *)(v5 + 64);
  v9 = v0 + v3;
  v10 = sub_100053F2C(&qword_1005D2C78);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 10, v10))
  {
    v11 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);
  }

  v12 = type metadata accessor for FMIPAddress(0);
  v13 = *(_QWORD *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v0 + v7, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v0 + v7, v12);
  v14 = (v8 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = v14 + 16;
  swift_release(*(_QWORD *)(v0 + v14 + 8));
  return swift_deallocObject(v0, v15, v2 | v6 | 7);
}

void sub_1001D5A14()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(type metadata accessor for FMSelectionPendingAction(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = *(_QWORD *)(sub_100053F2C(&qword_1005D9990) - 8);
  v5 = (v3 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v0 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  sub_1001A4540(v0 + v2, *(_BYTE **)(v0 + v3), v0 + v5, *(void (**)(uint64_t))v6, *(_QWORD *)(v6 + 8));
}

uint64_t sub_1001D5AA0()
{
  uint64_t v0;

  return sub_1001A4FF0(*(char **)(v0 + 16));
}

double sub_1001D5AA8(uint64_t a1)
{
  uint64_t v1;

  return sub_1001A5168(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1001D5AB0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

uint64_t sub_1001D5AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMPlatterIcon(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001D5B18()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = (int *)type metadata accessor for FMDeviceDetailViewModel(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);

  v6 = v0 + v4;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 48));
  v7 = v0 + v4 + v1[9];
  v8 = type metadata accessor for FMIPItem(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[12]));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[14] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[16] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[17] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[18] + 8));
  v10 = v6 + v1[19];
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v13(v10, v11);
  v14 = v6 + v1[21];
  v15 = type metadata accessor for FMIPBatteryStatus(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  v16 = v6 + v1[33];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v16, 1, v11))
    v13(v16, v11);
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[38]));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

double sub_1001D5CC0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMDeviceDetailViewModel(0) - 8) + 80);
  return sub_1001C69B8(*(char **)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_1001D5CF0()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v1 = (int *)type metadata accessor for FMDeviceDetailViewModel(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  v6 = v0 + v4;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 48));
  v7 = v0 + v4 + v1[9];
  v8 = type metadata accessor for FMIPItem(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[12]));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[14] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[16] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[17] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[18] + 8));
  v10 = v6 + v1[19];
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v13(v10, v11);
  v14 = v6 + v1[21];
  v15 = type metadata accessor for FMIPBatteryStatus(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  v16 = v6 + v1[33];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v16, 1, v11))
    v13(v16, v11);
  v17 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[38]));

  return swift_deallocObject(v0, v17 + 8, v3 | 7);
}

uint64_t sub_1001D5EAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for FMDeviceDetailViewModel(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc(dword_1005D99BC);
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1000BBF58;
  return sub_1001C6B2C(a1, v6, v7, v8, v9);
}

uint64_t sub_1001D5F50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_connectionMaterialTask);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_connectionMaterialTask) = 0;
  return swift_release(v2);
}

uint64_t sub_1001D5F68()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1001D5F94()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(void **)(v0 + 24);
  v4 = *(id *)(v1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_btDeviceDiscoveryToken);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_btDeviceDiscoveryToken) = v2;
  v3 = v2;

}

double sub_1001D5FCC()
{
  uint64_t v0;

  return sub_10019AC14(*(_QWORD *)(v0 + 16));
}

void sub_1001D5FD4(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1001C8A14(a1, a2, v2);
}

void sub_1001D5FDC()
{
  uint64_t v0;

  sub_1001C96D0(v0);
}

uint64_t sub_1001D5FE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_release(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 8, v5);
}

void sub_1001D6070()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1001C9194(v0 + v2, *(void **)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFF8)));
}

id sub_1001D6884()
{
  uint64_t v0;
  uint64_t v1;
  id result;

  v0 = type metadata accessor for FMAccessoryPairingAccountProvider();
  v1 = swift_allocObject(v0, 32, 7);
  *(_QWORD *)(v1 + 16) = objc_msgSend((id)objc_opt_self(AKAccountManager), "sharedInstance");
  result = objc_msgSend(objc_allocWithZone((Class)ACAccountStore), "init");
  *(_QWORD *)(v1 + 24) = result;
  qword_1005F5158 = v1;
  return result;
}

uint64_t sub_1001D68F8(uint64_t a1)
{
  uint64_t v1;
  os_log_type_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  os_log_type_t v7;
  uint64_t v8;
  os_log_type_t v9;

  v2 = static os_log_type_t.default.getter(a1);
  sub_1001D6EA8(v2, 0xD00000000000001CLL, 0x80000001004B2CF0);
  v4 = sub_1001D6D80(v3);
  if (!v4)
    return 0;
  v5 = v4;
  v6 = objc_msgSend(*(id *)(v1 + 16), "securityLevelForAccount:", v4);
  if (v6 == (id)4)
  {
    v7 = static os_log_type_t.default.getter(4);
    sub_1001D6EA8(v7, 0x616E452032415348, 0xEC00000064656C62);
    v8 = 2;
  }
  else
  {
    v9 = static os_log_type_t.error.getter(v6);
    sub_1001D6EA8(v9, 0x7369442032415348, 0xED000064656C6261);
    v8 = 1;
  }

  return v8;
}

id sub_1001D69C0(uint64_t a1)
{
  uint64_t v1;
  os_log_type_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  os_log_type_t v9;

  v2 = static os_log_type_t.default.getter(a1);
  sub_1001D6EA8(v2, 0xD000000000000018, 0x80000001004B2CD0);
  v3 = *(void **)(v1 + 24);
  v4 = objc_msgSend(v3, "aa_primaryAppleAccount");
  if (!v4)
    goto LABEL_5;
  v5 = v4;
  v6 = objc_msgSend(objc_allocWithZone((Class)AAUIProfilePictureStore), "initWithAppleAccount:grandSlamAccount:accountStore:", v4, 0, v3);
  if (!v6)
  {

LABEL_5:
    v9 = static os_log_type_t.error.getter(v4);
    sub_1001D6EA8(v9, 0xD000000000000029, 0x80000001004B2CA0);
    return 0;
  }
  v7 = v6;
  v8 = objc_msgSend(v6, "profilePictureForAccountOwner");

  return v8;
}

void sub_1001D6AA4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  os_log_type_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  os_log_type_t v29;
  _QWORD v30[2];
  __int128 v31;
  __int128 v32;

  v4 = static os_log_type_t.default.getter(a1);
  sub_1001D6EA8(v4, 0xD000000000000018, 0x80000001004B2C80);
  v6 = sub_1001D6D80(v5);
  if (!v6)
  {
    v10 = 0;
    v12 = 0;
    v16 = 0;
    v17 = 0;
    v18 = -1;
    goto LABEL_18;
  }
  v7 = v6;
  v8 = objc_msgSend(v6, "aa_formattedUsername");
  if (v8)
  {
    v9 = v8;
    v10 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v12 = v11;

    v13 = *(void **)(v2 + 16);
    v14 = objc_msgSend(v13, "phoneAsAppleIDForAccount:", v7);
    if ((_DWORD)v14)
    {
      v15 = static os_log_type_t.default.getter(v14);
      sub_1001D6EA8(v15, 0x20746E756F636341, 0xEF4F4B414D207369);

      v16 = 0;
      v17 = 0;
      v18 = 1;
LABEL_18:
      *(_QWORD *)a2 = v10;
      *(_QWORD *)(a2 + 8) = v12;
      *(_QWORD *)(a2 + 16) = v16;
      *(_QWORD *)(a2 + 24) = v17;
      *(_BYTE *)(a2 + 32) = v18;
      return;
    }
    v19 = (uint64_t)objc_msgSend(v13, "additionalInfoForAccount:", v7);
    if (!v19)
      goto LABEL_17;
    v20 = (void *)v19;
    v21 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v19, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

    if (*(_QWORD *)(v21 + 16) && (v22 = sub_10004C348(0x6D754E656E6F6870, 0xEC00000073726562), (v23 & 1) != 0))
    {
      sub_100056E70(*(_QWORD *)(v21 + 56) + 32 * v22, (uint64_t)&v31);
      swift_bridgeObjectRelease(v21);
      if (*((_QWORD *)&v32 + 1))
      {
        v24 = sub_100053F2C((uint64_t *)&unk_1005D9AB0);
        v19 = swift_dynamicCast(v30, &v31, (char *)&type metadata for Any + 8, v24, 6);
        if ((v19 & 1) != 0)
        {
          v25 = v30[0];
          if (*(_QWORD *)(v30[0] + 16))
          {
            v26 = *(_QWORD *)(v30[0] + 32);
            swift_bridgeObjectRetain(v26);
            swift_bridgeObjectRelease(v25);
            if (*(_QWORD *)(v26 + 16)
              && (v27 = sub_10004C348(0x6D754E656E6F6870, 0xEB00000000726562), (v28 & 1) != 0))
            {
              sub_100056E70(*(_QWORD *)(v26 + 56) + 32 * v27, (uint64_t)&v31);
            }
            else
            {
              v31 = 0u;
              v32 = 0u;
            }
            swift_bridgeObjectRelease(v26);
            if (*((_QWORD *)&v32 + 1))
            {
              v19 = swift_dynamicCast(v30, &v31, (char *)&type metadata for Any + 8, &type metadata for String, 6);
              if ((v19 & 1) != 0)
              {

                v16 = v30[0];
                v17 = v30[1];
                v18 = 2;
                goto LABEL_18;
              }
              goto LABEL_17;
            }
          }
          else
          {
            swift_bridgeObjectRelease(v30[0]);
            v31 = 0u;
            v32 = 0u;
          }
          goto LABEL_16;
        }
LABEL_17:
        v29 = static os_log_type_t.default.getter(v19);
        sub_1001D6EA8(v29, 0xD000000000000026, 0x80000001004B2C50);

        v16 = 0;
        v17 = 0;
        v18 = 0;
        goto LABEL_18;
      }
    }
    else
    {
      v31 = 0u;
      v32 = 0u;
      swift_bridgeObjectRelease(v21);
    }
LABEL_16:
    v19 = sub_10005D03C((uint64_t)&v31);
    goto LABEL_17;
  }
  __break(1u);
}

id sub_1001D6D80(uint64_t a1)
{
  uint64_t v1;
  os_log_type_t v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  os_log_type_t v8;

  v2 = static os_log_type_t.default.getter(a1);
  sub_1001D6EA8(v2, 0xD000000000000018, 0x80000001004B2C30);
  v3 = objc_msgSend(*(id *)(v1 + 24), "aa_primaryAppleAccount");
  if (!v3)
    goto LABEL_6;
  v4 = v3;
  v5 = objc_msgSend(v3, "aa_altDSID");
  if (!v5)
  {

LABEL_6:
    v8 = static os_log_type_t.error.getter(v3);
    sub_1001D6EA8(v8, 0xD00000000000001ALL, 0x80000001004B2C10);
    return 0;
  }
  v6 = v5;
  v7 = objc_msgSend(*(id *)(v1 + 16), "authKitAccountWithAltDSID:", v5);

  if (!v7)
    goto LABEL_6;
  return v7;
}

uint64_t sub_1001D6E5C()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for FMAccessoryPairingAccountProvider()
{
  return objc_opt_self(_TtC6FindMy33FMAccessoryPairingAccountProvider);
}

void sub_1001D6EA8(os_log_type_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  NSObject *log;
  uint64_t v11;
  uint64_t v12;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100056D88(v6, (uint64_t)qword_1005F5748);
  log = Logger.logObject.getter(v7);
  if (os_log_type_enabled(log, a1))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v12 = v9;
    *(_DWORD *)v8 = 136315138;
    v11 = sub_100056DA0(a2, a3, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12);
    _os_log_impl((void *)&_mh_execute_header, log, a1, "FMAccessoryPairingAccountProvider: %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

  }
}

uint64_t destroy for FMAccessoryPairingAccountProvider.AccountIdentifier(uint64_t a1)
{
  return sub_1000F8A9C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for FMAccessoryPairingAccountProvider.AccountIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1000F8AE8(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for FMAccessoryPairingAccountProvider.AccountIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1000F8AE8(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_1000F8A9C(v8, v9, v10, v11, v12);
  return a1;
}

__n128 initializeWithTake for FMAccessoryPairingAccountProvider.AccountIdentifier(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for FMAccessoryPairingAccountProvider.AccountIdentifier(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  unsigned __int8 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_1000F8A9C(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMAccessoryPairingAccountProvider.AccountIdentifier(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FMAccessoryPairingAccountProvider.AccountIdentifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_1001D7200(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_1001D7208(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FMAccessoryPairingAccountProvider.AccountIdentifier()
{
  return &type metadata for FMAccessoryPairingAccountProvider.AccountIdentifier;
}

void sub_1001D7244()
{
  void *v0;
  id v1;
  id v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;

  v1 = objc_msgSend(v0, "selectedItem");

  if (!v1)
  {
    v2 = objc_msgSend(v0, "items");
    if (!v2)
      goto LABEL_11;
    v4 = sub_100006C5C(0, (unint64_t *)&unk_1005D9C10, UITabBarItem_ptr);
    v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v4);

    if ((unint64_t)v5 >> 62)
    {
      if (v5 < 0)
        v8 = v5;
      else
        v8 = v5 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v5);
      v2 = (id)_CocoaArrayWrapper.endIndex.getter(v8);
      swift_bridgeObjectRelease(v5);
      if (v2)
        goto LABEL_6;
    }
    else
    {
      v2 = *(id *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v2)
      {
LABEL_6:
        if ((v5 & 0xC000000000000001) != 0)
        {
          v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v5);
        }
        else
        {
          if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          v6 = *(id *)(v5 + 32);
        }
        v2 = v6;
      }
    }
    *(_QWORD *)&v3 = swift_bridgeObjectRelease(v5).n128_u64[0];
LABEL_11:
    objc_msgSend(v0, "setSelectedItem:", v2, v3);

    v7 = objc_msgSend(v0, "selectedItem");
    if (v7)
    {
      v9 = v7;
      sub_1001D819C((uint64_t)v7);

    }
  }
}

uint64_t sub_1001D73AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = sub_100053F2C((uint64_t *)&unk_1005E59F0);
  __chkstk_darwin(v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FMFPreferences(0);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  sub_100006DC4((uint64_t)v5);
  return sub_1000051EC((uint64_t)v5, (uint64_t *)&unk_1005E59F0);
}

id sub_1001D7618()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMTabBar();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1001D7700(uint64_t a1, uint64_t a2)
{
  return sub_1001D7738(a2);
}

uint64_t sub_1001D7708(uint64_t a1, uint64_t a2)
{
  return sub_10003FCB8(a2, (uint64_t)&unk_10054F518, (uint64_t)sub_1001D7A64, (uint64_t)&unk_10054F530);
}

uint64_t sub_1001D7738(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[5];
  uint64_t v31;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v29 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v27 = *(_QWORD *)(v5 - 8);
  v28 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FMFPreferences(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v13 = (void *)static OS_dispatch_queue.main.getter(v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v14 = *(unsigned __int8 *)(v9 + 80);
  v15 = (v14 + 24) & ~v14;
  v16 = swift_allocObject(&unk_10054F478, v15 + v10, v14 | 7);
  v17 = v26;
  *(_QWORD *)(v16 + 16) = v26;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v16 + v15, v11, v8);
  aBlock[4] = sub_1001D7A1C;
  v31 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_10054F490;
  v18 = _Block_copy(aBlock);
  v19 = v31;
  v20 = v17;
  swift_release(v19);
  static DispatchQoS.unspecified.getter(v21);
  aBlock[0] = _swiftEmptyArrayStorage;
  v22 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v23 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v24 = sub_1000555E4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v23, v24, v2, v22);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v4, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v7, v28);
}

uint64_t sub_1001D79A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for FMFPreferences(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1001D7A1C()
{
  return sub_10005DAF4((uint64_t (*)(_QWORD))&type metadata accessor for FMFPreferences, sub_1001D73AC);
}

uint64_t sub_1001D7A38()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1001D7A64()
{
  uint64_t v0;

  sub_10001560C(*(_QWORD *)(v0 + 24));
}

uint64_t sub_1001D7A88()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1001D7AAC()
{
  sub_1000182B4();
}

uint64_t sub_1001D7ACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v1 = type metadata accessor for FMSelectedSection(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);

  v6 = (_QWORD *)(v0 + v4);
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 0u:
      v9 = type metadata accessor for FMIPDevice(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v0 + v4, v9);
      v10 = (char *)v6 + *(int *)(sub_100053F2C(&qword_1005DE9B0) + 48);
      v11 = type metadata accessor for FMIPItem(0);
      v12 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 1u:
    case 7u:
      v7 = type metadata accessor for FMIPDevice(0);
      goto LABEL_10;
    case 2u:
      v7 = type metadata accessor for FMFFriend(0);
      goto LABEL_10;
    case 3u:
    case 4u:
      v7 = type metadata accessor for FMIPItem(0);
      goto LABEL_10;
    case 5u:
    case 6u:
      swift_bridgeObjectRelease(*v6);
      v8 = v6[2];
      if (v8 >= 4)
        swift_bridgeObjectRelease(v8);
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 8u:
      v7 = type metadata accessor for FMIPUnknownItem(0);
LABEL_10:
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v0 + v4, v7);
      break;
    default:
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

void sub_1001D7C28()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  void *v4;
  id v5;
  Swift::String v6;
  Swift::String v7;
  void *object;
  NSString v9;
  void *v10;
  id v11;
  id v12;
  NSString v13;
  id v14;
  uint64_t v15;
  id v16;
  Swift::String v17;
  Swift::String v18;
  void *v19;
  NSString v20;
  id v21;
  id v22;
  NSString v23;
  id v24;
  uint64_t v25;
  id v26;
  Swift::String v27;
  Swift::String v28;
  void *v29;
  NSString v30;
  id v31;
  id v32;
  NSString v33;
  id v34;
  uint64_t v35;
  id v36;
  Swift::String_optional v37;
  Swift::String v38;
  Swift::String v39;
  void *v40;
  NSString v41;
  id v42;
  id v43;
  NSString v44;
  id v45;
  Swift::String v46;
  Swift::String v47;
  Swift::String v48;
  Swift::String v49;

  v1 = v0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy8FMTabBar_contentDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy8FMTabBar_peopleSubscription] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy8FMTabBar_devicesSubscription] = 0;
  v2 = &v0[OBJC_IVAR____TtC6FindMy8FMTabBar_selectionSubscription];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  v3 = OBJC_IVAR____TtC6FindMy8FMTabBar_peopleTab;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v4 = (void *)objc_opt_self(NSBundle);
  v5 = objc_msgSend(v4, "mainBundle");
  v46._countAndFlagsBits = 0xD00000000000001CLL;
  v46._object = (void *)0x80000001004B2E20;
  v6._countAndFlagsBits = 0x545F454C504F4550;
  v6._object = (void *)0xEA00000000004241;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v46)._object;

  v9 = String._bridgeToObjectiveC()();
  v10 = (void *)objc_opt_self(UIImage);
  v11 = objc_msgSend(v10, "_systemImageNamed:", v9);

  v12 = objc_allocWithZone((Class)UITabBarItem);
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v14 = objc_msgSend(v12, "initWithTitle:image:selectedImage:", v13, v11, 0);

  *(_QWORD *)&v1[v3] = v14;
  v15 = OBJC_IVAR____TtC6FindMy8FMTabBar_devicesTab;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v16 = objc_msgSend(v4, "mainBundle");
  v47._countAndFlagsBits = 0xD00000000000001DLL;
  v47._object = (void *)0x80000001004B2E40;
  v17._countAndFlagsBits = 0x5F53454349564544;
  v17._object = (void *)0xEB00000000424154;
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  v19 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, (Swift::String_optional)0, (NSBundle)v16, v18, v47)._object;

  v20 = String._bridgeToObjectiveC()();
  v21 = objc_msgSend(v10, "_systemImageNamed:", v20);

  v22 = objc_allocWithZone((Class)UITabBarItem);
  v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v19);
  v24 = objc_msgSend(v22, "initWithTitle:image:selectedImage:", v23, v21, 0);

  *(_QWORD *)&v1[v15] = v24;
  v25 = OBJC_IVAR____TtC6FindMy8FMTabBar_meTab;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v26 = objc_msgSend(v4, "mainBundle");
  v48._object = (void *)0x80000001004B2E80;
  v27._countAndFlagsBits = 0x4241545F454DLL;
  v27._object = (void *)0xE600000000000000;
  v28._countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  v48._countAndFlagsBits = 0xD000000000000018;
  v29 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, (Swift::String_optional)0, (NSBundle)v26, v28, v48)._object;

  v30 = String._bridgeToObjectiveC()();
  v31 = objc_msgSend(v10, "_systemImageNamed:", v30);

  v32 = objc_allocWithZone((Class)UITabBarItem);
  v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v29);
  v34 = objc_msgSend(v32, "initWithTitle:image:selectedImage:", v33, v31, 0);

  *(_QWORD *)&v1[v25] = v34;
  v35 = OBJC_IVAR____TtC6FindMy8FMTabBar_itemsTab;
  v36 = objc_msgSend(v4, "mainBundle");
  v37.value._countAndFlagsBits = 0xD000000000000013;
  v49._object = (void *)0x80000001004A5660;
  v37.value._object = (void *)0x80000001004A5640;
  v38._countAndFlagsBits = 0x41545F534D455449;
  v38._object = (void *)0xE900000000000042;
  v39._countAndFlagsBits = 0;
  v39._object = (void *)0xE000000000000000;
  v49._countAndFlagsBits = 0xD000000000000018;
  v40 = NSLocalizedString(_:tableName:bundle:value:comment:)(v38, v37, (NSBundle)v36, v39, v49)._object;

  v41 = String._bridgeToObjectiveC()();
  v42 = objc_msgSend(v10, "_systemImageNamed:", v41);

  v43 = objc_allocWithZone((Class)UITabBarItem);
  v44 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v40);
  v45 = objc_msgSend(v43, "initWithTitle:image:selectedImage:", v44, v42, 0);

  *(_QWORD *)&v1[v35] = v45;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy8FMTabBar____lazy_storage___largeContentInteraction] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMTabBar.swift", 21, 2, 62, 0);
  __break(1u);
}

uint64_t sub_1001D819C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  char v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  id v13;
  char v14;
  id v15;
  char v16;
  id v17;
  char v18;
  uint64_t v19;

  v2 = v1;
  v4 = type metadata accessor for FMSelectedSection(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy8FMTabBar_peopleTab);
  sub_100006C5C(0, (unint64_t *)&unk_1005D9C10, UITabBarItem_ptr);
  v8 = v7;
  v9 = static NSObject.== infix(_:_:)(v8, a1);

  if ((v9 & 1) != 0)
  {
    result = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC6FindMy8FMTabBar_contentDelegate);
    if (!result)
      return result;
    v11 = result;
    v12 = 14;
    goto LABEL_13;
  }
  v13 = *(id *)(v1 + OBJC_IVAR____TtC6FindMy8FMTabBar_devicesTab);
  v14 = static NSObject.== infix(_:_:)(v13, a1);

  if ((v14 & 1) != 0)
  {
    result = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC6FindMy8FMTabBar_contentDelegate);
    if (!result)
      return result;
    v11 = result;
    v12 = 11;
    goto LABEL_13;
  }
  v15 = *(id *)(v1 + OBJC_IVAR____TtC6FindMy8FMTabBar_itemsTab);
  v16 = static NSObject.== infix(_:_:)(v15, a1);

  if ((v16 & 1) != 0)
  {
    result = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC6FindMy8FMTabBar_contentDelegate);
    if (!result)
      return result;
    v11 = result;
    v12 = 16;
    goto LABEL_13;
  }
  v17 = *(id *)(v1 + OBJC_IVAR____TtC6FindMy8FMTabBar_meTab);
  v18 = static NSObject.== infix(_:_:)(v17, a1);

  if ((v18 & 1) == 0)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000022, 0x80000001004B2F20, "FindMy/FMTabBar.swift", 21, 2, 276, 0);
    __break(1u);
    return result;
  }
  result = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC6FindMy8FMTabBar_contentDelegate);
  if (result)
  {
    v11 = result;
    v12 = 12;
LABEL_13:
    swift_storeEnumTagMultiPayload(v6, v4, v12);
    sub_1002E33A0((uint64_t)v6);
    swift_unknownObjectRelease(v11);
    return sub_100024F00((uint64_t)v6);
  }
  return result;
}

void *sub_1001D83C0()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  id v18;

  v18 = objc_msgSend(v0, "hitTest:withEvent:", 0);
  if (v18)
  {
    v1 = objc_msgSend(v0, "items");
    if (v1)
    {
      v2 = v1;
      v3 = sub_100006C5C(0, (unint64_t *)&unk_1005D9C10, UITabBarItem_ptr);
      v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v3);

      if ((unint64_t)v4 >> 62)
        goto LABEL_16;
      v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      v6 = v18;
      swift_bridgeObjectRetain(v4);
      for (; v5; v5 = _CocoaArrayWrapper.endIndex.getter(v15))
      {
        v7 = 4;
        while (1)
        {
          v8 = (v4 & 0xC000000000000001) != 0
             ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7 - 4, v4)
             : *(id *)(v4 + 8 * v7);
          v9 = v8;
          v10 = v7 - 3;
          if (__OFADD__(v7 - 4, 1))
            break;
          v11 = objc_msgSend(v8, "view");
          if (v11)
          {
            v12 = v11;
            sub_100006C5C(0, (unint64_t *)&qword_1005DB470, UIView_ptr);
            v13 = v18;
            v14 = v12;
            LOBYTE(v12) = static NSObject.== infix(_:_:)(v14, v13);

            if ((v12 & 1) != 0)
            {

              swift_bridgeObjectRelease_n(v4, 2);
              return v9;
            }
          }

          ++v7;
          if (v10 == v5)
            goto LABEL_20;
        }
        __break(1u);
LABEL_16:
        if (v4 < 0)
          v15 = v4;
        else
          v15 = v4 & 0xFFFFFFFFFFFFFF8;
        v16 = v18;
        swift_bridgeObjectRetain(v4);
      }
LABEL_20:

      swift_bridgeObjectRelease_n(v4, 2);
    }
    else
    {

    }
  }
  return 0;
}

void sub_1001D85C0()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;

  v1 = v0;
  v2 = objc_msgSend(v0, "hitTest:withEvent:", 0);
  if (v2)
  {
    v20 = v2;
    v3 = objc_msgSend(v0, "items");
    if (v3)
    {
      v4 = v3;
      v5 = sub_100006C5C(0, (unint64_t *)&unk_1005D9C10, UITabBarItem_ptr);
      v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v5);

      if ((unint64_t)v6 >> 62)
        goto LABEL_16;
      v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      v8 = v20;
      swift_bridgeObjectRetain(v6);
      for (; v7; v7 = _CocoaArrayWrapper.endIndex.getter(v18))
      {
        v9 = 4;
        while (1)
        {
          v10 = (v6 & 0xC000000000000001) != 0
              ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v9 - 4, v6)
              : *(id *)(v6 + 8 * v9);
          v11 = v10;
          v12 = v9 - 3;
          if (__OFADD__(v9 - 4, 1))
            break;
          v13 = objc_msgSend(v10, "view");
          if (v13)
          {
            v14 = v13;
            sub_100006C5C(0, (unint64_t *)&qword_1005DB470, UIView_ptr);
            v15 = v20;
            v16 = v14;
            LOBYTE(v14) = static NSObject.== infix(_:_:)(v16, v15);

            if ((v14 & 1) != 0)
            {

              swift_bridgeObjectRelease_n(v6, 2);
              objc_msgSend(v1, "setSelectedItem:", v11);
              sub_1001D819C((uint64_t)v11);
              v17 = v11;
              goto LABEL_22;
            }
          }

          ++v9;
          if (v12 == v7)
            goto LABEL_20;
        }
        __break(1u);
LABEL_16:
        if (v6 < 0)
          v18 = v6;
        else
          v18 = v6 & 0xFFFFFFFFFFFFFF8;
        v19 = v20;
        swift_bridgeObjectRetain(v6);
      }
LABEL_20:

      swift_bridgeObjectRelease_n(v6, 2);
    }
    v17 = v20;
LABEL_22:

  }
}

id sub_1001D8800(void *a1, void *a2, double a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  objc_super v21;

  v7 = OBJC_IVAR____TtC6FindMy7FMBadge_color;
  *(_QWORD *)&v3[OBJC_IVAR____TtC6FindMy7FMBadge_color] = 0;
  v8 = OBJC_IVAR____TtC6FindMy7FMBadge_strokeColor;
  *(_QWORD *)&v3[OBJC_IVAR____TtC6FindMy7FMBadge_strokeColor] = 0;
  v9 = &v3[OBJC_IVAR____TtC6FindMy7FMBadge_insets];
  *(_OWORD *)v9 = xmmword_100486DD0;
  *((_OWORD *)v9 + 1) = xmmword_100486DD0;
  v10 = *(void **)&v3[v7];
  *(_QWORD *)&v3[v7] = a1;
  v11 = v3;
  v12 = a1;

  *(double *)&v11[OBJC_IVAR____TtC6FindMy7FMBadge_lineWidth] = a3;
  v13 = *(void **)&v3[v8];
  *(_QWORD *)&v3[v8] = a2;
  v14 = a2;

  v21.receiver = v11;
  v21.super_class = (Class)type metadata accessor for FMBadge();
  v15 = objc_msgSendSuper2(&v21, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v16 = (void *)objc_opt_self(UIColor);
  v17 = v15;
  v18 = objc_msgSend(v16, "clearColor");
  objc_msgSend(v17, "setBackgroundColor:", v18);

  v19 = v17;
  objc_msgSend(v19, "setTextAlignment:", 1);

  return v19;
}

double sub_1001D8A6C()
{
  char *v0;
  double result;
  double v2;
  objc_super v4;

  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for FMBadge();
  objc_msgSendSuper2(&v4, "intrinsicContentSize");
  if ((result != 0.0 || v2 != 0.0) && result != UIViewNoIntrinsicMetric && v2 != UIViewNoIntrinsicMetric)
    return result
         + *(double *)&v0[OBJC_IVAR____TtC6FindMy7FMBadge_insets + 8]
         + *(double *)&v0[OBJC_IVAR____TtC6FindMy7FMBadge_insets + 24];
  return result;
}

id sub_1001D8B14()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMBadge();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMBadge()
{
  return objc_opt_self(_TtC6FindMy7FMBadge);
}

void sub_1001D8B9C()
{
  char *v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  id v9;
  objc_super v10;

  objc_msgSend(v0, "bounds");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:cornerRadius:", v1, v3, v5, v7, v7 * 0.5);
  objc_msgSend(v9, "setLineWidth:", *(double *)&v0[OBJC_IVAR____TtC6FindMy7FMBadge_lineWidth]);
  objc_msgSend(v9, "setLineCapStyle:", 1);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy7FMBadge_color], "set");
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy7FMBadge_strokeColor], "setStroke");
  objc_msgSend(v9, "fill");
  objc_msgSend(v9, "stroke");
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for FMBadge();
  objc_msgSendSuper2(&v10, "drawRect:", v2, v4, v6, v8);

}

void sub_1001D8D00()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  objc_class *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  double v51;
  uint64_t v52;
  void *v53;
  void *v54;
  uint64_t v55;
  char *v56;
  void *v57;
  uint64_t v58;
  id v59;
  void *v60;
  id v61;
  id v62;
  Swift::String v63;
  Swift::String_optional v64;
  Swift::String v65;
  void *object;
  NSString v67;
  void *v68;
  id v69;
  uint64_t v70;
  uint64_t inited;
  NSString *v72;
  unint64_t v73;
  id v74;
  void *v75;
  id v76;
  id v77;
  id v78;
  id v79;
  void *v80;
  id v81;
  id v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  void (*v89)(char *, uint64_t);
  void *v90;
  char *v91;
  void *v92;
  id v93;
  Swift::String v94;
  Swift::String_optional v95;
  Swift::String v96;
  void *v97;
  NSString v98;
  void *v99;
  id v100;
  id v101;
  id v102;
  id v103;
  Swift::String v104;
  Swift::String_optional v105;
  Swift::String v106;
  Swift::String v107;
  Swift::String *v108;
  uint64_t v109;
  void *v110;
  id v111;
  NSString v112;
  char *v113;
  NSString v114;
  id v115;
  id v116;
  id v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  id v122;
  Class isa;
  char *v124;
  id v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  unint64_t v133;
  void (**v134)(_QWORD, _QWORD, __n128);
  id v135;
  uint64_t v136;
  char v137[48];
  id v138;
  uint64_t v139;
  objc_super v140;
  Swift::String v141;
  Swift::String v142;
  Swift::String v143;

  v1 = v0;
  v2 = type metadata accessor for FMIPDeviceState(0);
  v129 = *(_QWORD *)(v2 - 8);
  v130 = v2;
  v3 = __chkstk_darwin(v2);
  v128 = (char *)&v124 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v127 = (char *)&v124 - v5;
  v6 = sub_100053F2C(&qword_1005D9640);
  __chkstk_darwin(v6);
  v132 = (char *)&v124 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (_QWORD *)sub_100053F2C(&qword_1005D6DB0);
  v134 = (void (**)(_QWORD, _QWORD, __n128))*(v8 - 1);
  v135 = v8;
  __chkstk_darwin(v8);
  v133 = (unint64_t)&v124 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = type metadata accessor for FMIPDevice(0);
  v10 = *(_QWORD *)(v136 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v136);
  v131 = (char *)&v124 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (objc_class *)type metadata accessor for FMContactDetailsWelcomeScreenViewController(0);
  v140.receiver = v0;
  v140.super_class = v12;
  objc_msgSendSuper2(&v140, "viewDidLoad");
  v13 = objc_msgSend(v0, "view");
  if (!v13)
  {
    __break(1u);
    goto LABEL_8;
  }
  v14 = v13;
  v15 = (void *)objc_opt_self(UIColor);
  v16 = objc_msgSend(v15, "secondarySystemBackgroundColor");
  objc_msgSend(v14, "setBackgroundColor:", v16);

  v17 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_scrollView;
  v18 = *(id *)&v1[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_scrollView];
  v19 = objc_msgSend(v15, "secondarySystemBackgroundColor");
  objc_msgSend(v18, "setBackgroundColor:", v19);

  v20 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_contentStackView;
  v21 = *(id *)&v1[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_contentStackView];
  v125 = v15;
  v22 = objc_msgSend(v15, "secondarySystemBackgroundColor");
  objc_msgSend(v21, "setBackgroundColor:", v22);

  v126 = v17;
  objc_msgSend(*(id *)&v1[v17], "setPreservesSuperviewLayoutMargins:", 1);
  objc_msgSend(*(id *)&v1[v17], "setContentInsetAdjustmentBehavior:", 3);
  objc_msgSend(*(id *)&v1[v20], "setPreservesSuperviewLayoutMargins:", 1);
  objc_msgSend(*(id *)&v1[v20], "setAxis:", 1);
  v23 = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator] + 64);
  v24 = &v1[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_device];
  v25 = swift_allocObject(&unk_10054F670, 24, 7);
  swift_weakInit(v25 + 16, v23);
  v26 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v27 = v131;
  v124 = v24;
  v28 = v24;
  v29 = v136;
  v26(v131, v28, v136);
  v30 = *(unsigned __int8 *)(v10 + 80);
  v31 = (v30 + 24) & ~v30;
  v32 = v31 + v11;
  v33 = swift_allocObject(&unk_10054F698, v31 + v11 + 1, v30 | 7);
  *(_QWORD *)(v33 + 16) = v25;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v33 + v31, v27, v29);
  *(_BYTE *)(v33 + v32) = 1;
  v34 = sub_100053F2C((uint64_t *)&unk_1005D6DD0);
  swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
  swift_retain(v23);
  v35 = Future.init(_:)(sub_10012129C, v33);
  v139 = v35;
  v36 = sub_10003F774(&qword_1005E5630, (uint64_t *)&unk_1005D6DD0, (uint64_t)&protocol conformance descriptor for Future<A, B>);
  v37 = Publisher.eraseToAnyPublisher()(v34, v36);
  swift_release(v23);
  swift_release(v35);
  v136 = v37;
  v139 = v37;
  v138 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v38 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  v39 = (uint64_t)v132;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v132, 1, 1, v38);
  v40 = sub_100053F2C(&qword_1005D6DC0);
  v41 = sub_100006C5C(0, (unint64_t *)&qword_1005E5530, NSRunLoop_ptr);
  v42 = sub_10003F774((unint64_t *)&unk_1005D7E70, &qword_1005D6DC0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v43 = sub_100121168();
  v44 = v133;
  Publisher.receive<A>(on:options:)(&v138, v39, v40, v41, v42, v43);
  sub_10018F9E8(v39);

  v45 = swift_allocObject(&unk_10054F6C0, 24, 7);
  swift_unknownObjectWeakInit(v45 + 16);
  v46 = sub_10003F774(&qword_1005D6DC8, &qword_1005D6DB0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v47 = v135;
  v48 = Publisher.sink(receiveCompletion:receiveValue:)(State.rawValue.getter, 0, sub_1001DAFCC, v45, v135, v46);
  v49 = swift_release(v45);
  ((void (**)(unint64_t, id, __n128))v134)[1](v44, v47, v49);
  v50 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_productImageCancellable];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_productImageCancellable] = v48;
  *(_QWORD *)&v51 = swift_release(v50).n128_u64[0];
  v52 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_deviceImageView;
  objc_msgSend(*(id *)&v1[v20], "addArrangedSubview:", *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_deviceImageView], v51);
  v53 = *(void **)&v1[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_deviceNameLabel];
  objc_msgSend(*(id *)&v1[v20], "addArrangedSubview:", v53);
  v54 = *(void **)&v1[v20];
  v135 = *(id *)&v1[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_phoneNumberLabel];
  objc_msgSend(v54, "addArrangedSubview:");
  v55 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_showContactDetailsSwitchSection];
  v56 = *(char **)&v1[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_showContactDetailsSwitch];
  objc_msgSend(*(id *)(v55 + OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_contentStackView), "addArrangedSubview:", v56);
  objc_msgSend(*(id *)&v1[v20], "addArrangedSubview:", v55);
  v57 = *(void **)&v1[v20];
  v58 = v126;
  v134 = *(void (***)(_QWORD, _QWORD, __n128))&v1[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_subtitleLabel];
  objc_msgSend(v57, "addArrangedSubview:");
  objc_msgSend(*(id *)&v1[v58], "addSubview:", *(_QWORD *)&v1[v20]);
  v59 = objc_msgSend(v1, "view");
  if (!v59)
  {
LABEL_8:
    __break(1u);
    return;
  }
  v60 = v59;
  objc_msgSend(v59, "addSubview:", *(_QWORD *)&v1[v58]);

  v61 = objc_msgSend(v1, "navigationItem");
  v132 = (char *)objc_opt_self(NSBundle);
  v62 = objc_msgSend(v132, "mainBundle");
  v63._countAndFlagsBits = 0xD000000000000024;
  v133 = (unint64_t)"CONTACT_DETAILS_ERROR_TITLE";
  v131 = (char *)0x80000001004B30E0;
  v141._object = (void *)0x80000001004B30E0;
  v63._object = (void *)0x80000001004B31A0;
  v64.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v64.value._object = (void *)0xEC00000031656C62;
  v65._countAndFlagsBits = 0;
  v65._object = (void *)0xE000000000000000;
  v141._countAndFlagsBits = 0xD000000000000017;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v63, v64, (NSBundle)v62, v65, v141)._object;

  v67 = String._bridgeToObjectiveC()();
  objc_msgSend(v61, "setTitle:", v67, swift_bridgeObjectRelease(object).n128_f64[0]);

  objc_msgSend(*(id *)&v1[v52], "setContentMode:", 4);
  objc_msgSend(v53, "setNumberOfLines:", 0);
  v68 = (void *)objc_opt_self(UIFont);
  v69 = objc_msgSend(v68, "preferredFontForTextStyle:", UIFontTextStyleHeadline);
  v70 = sub_100053F2C((uint64_t *)&unk_1005D7EA0);
  inited = swift_initStackObject(v70, v137);
  *(_OWORD *)(inited + 16) = xmmword_100481740;
  *(_QWORD *)(inited + 32) = UIFontWeightTrait;
  *(UIFontWeight *)(inited + 40) = UIFontWeightSemibold;
  v72 = UIFontWeightTrait;
  v73 = sub_10004907C(inited);
  v74 = sub_100049188(v73);

  swift_bridgeObjectRelease(v73);
  v75 = (void *)sub_10003CEE8(0x8000);

  objc_msgSend(v53, "setFont:", v75);
  v76 = v125;
  v77 = objc_msgSend(v125, "labelColor");
  objc_msgSend(v53, "setTextColor:", v77);

  objc_msgSend(v53, "setTextAlignment:", 1);
  v78 = v135;
  objc_msgSend(v135, "setNumberOfLines:", 0);
  v79 = objc_msgSend(v68, "preferredFontForTextStyle:", UIFontTextStyleBody);
  v80 = (void *)sub_10003CEE8(0x8000);

  objc_msgSend(v78, "setFont:", v80);
  v81 = objc_msgSend(v76, "secondaryLabelColor");
  objc_msgSend(v78, "setTextColor:", v81);

  v82 = objc_msgSend(v78, "setTextAlignment:", 1);
  v83 = v127;
  v84 = FMIPDevice.state.getter(v82);
  v85 = v128;
  static FMIPDeviceState.isDeviceWithYou.getter(v84);
  v86 = sub_100008000((unint64_t *)&qword_1005D4158, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPDeviceState, (uint64_t)&protocol conformance descriptor for FMIPDeviceState);
  v87 = v130;
  v88 = dispatch thunk of SetAlgebra.isSuperset(of:)(v85, v130, v86);
  v89 = *(void (**)(char *, uint64_t))(v129 + 8);
  v89(v85, v87);
  v89(v83, v87);
  v90 = v76;
  if ((v88 & 1) != 0)
  {
    v91 = v132;
    v92 = v90;
    v93 = objc_msgSend(v132, "mainBundle");
    v94._countAndFlagsBits = 0xD00000000000002ALL;
    v142._object = v131;
    v94._object = (void *)0x80000001004B3170;
    v95.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v95.value._object = (void *)0xEC00000031656C62;
    v96._countAndFlagsBits = 0;
    v96._object = (void *)0xE000000000000000;
    v142._countAndFlagsBits = 0xD000000000000017;
    v97 = NSLocalizedString(_:tableName:bundle:value:comment:)(v94, v95, (NSBundle)v93, v96, v142)._object;

    v90 = v92;
    v98 = String._bridgeToObjectiveC()();
  }
  else
  {
    sub_1001DE278(0xD000000000000033, (void *)0x80000001004B3130);
    v97 = v99;
    v98 = String._bridgeToObjectiveC()();
    v91 = v132;
  }
  v100 = v134;
  objc_msgSend(v134, "setText:", v98, swift_bridgeObjectRelease(v97).n128_f64[0]);

  objc_msgSend(v100, "setNumberOfLines:", 0);
  v101 = objc_msgSend(v68, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  objc_msgSend(v100, "setFont:", v101);

  v102 = objc_msgSend(v90, "secondaryLabelColor");
  objc_msgSend(v100, "setTextColor:", v102);

  objc_msgSend(v100, "setLineBreakMode:", 0);
  objc_msgSend(v100, "sizeToFit");
  sub_1001D9E94();
  v103 = objc_msgSend(v91, "mainBundle");
  v104._countAndFlagsBits = 0xD000000000000025;
  v143._object = (void *)(v133 | 0x8000000000000000);
  v104._object = (void *)0x80000001004B31D0;
  v105.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v105.value._object = (void *)0xEC00000031656C62;
  v106._countAndFlagsBits = 0;
  v106._object = (void *)0xE000000000000000;
  v143._countAndFlagsBits = 0xD000000000000017;
  v107 = NSLocalizedString(_:tableName:bundle:value:comment:)(v104, v105, (NSBundle)v103, v106, v143);

  v108 = (Swift::String *)&v56[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_title];
  v109 = *(_QWORD *)&v56[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_title + 8];
  *v108 = v107;
  swift_bridgeObjectRelease(v109);
  v110 = v108->_object;
  v111 = *(id *)&v56[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_titleLabel];
  swift_bridgeObjectRetain(v110);
  v112 = String._bridgeToObjectiveC()();
  objc_msgSend(v111, "setText:", v112, swift_bridgeObjectRelease(v110).n128_f64[0]);

  v113 = &v56[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_delegate];
  *((_QWORD *)v113 + 1) = &off_10054F620;
  swift_unknownObjectWeakAssign(v113, v1);
  v114 = String._bridgeToObjectiveC()();
  objc_msgSend(v56, "setAccessibilityIdentifier:", v114);

  v56[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_separated] = 0;
  objc_msgSend(*(id *)&v56[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_separator], "setHidden:", 1);
  v56[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_isOn] = v1[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_showContactDetailsState];
  objc_msgSend(*(id *)&v56[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_settingSwitch], "setOn:");
  v56[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_isEnabled] = v88 & 1;
  sub_100115CF4();
  v115 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 1, v1, "cancelActionWithSender:");
  v116 = objc_msgSend(v1, "navigationItem");
  objc_msgSend(v116, "setLeftBarButtonItem:", v115);

  v117 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 0, v1, "doneAction");
  v118 = objc_msgSend(v1, "navigationItem");
  v119 = sub_100053F2C(&qword_1005D2F10);
  v120 = swift_allocObject(v119, 40, 7);
  *(_OWORD *)(v120 + 16) = xmmword_100481B00;
  *(_QWORD *)(v120 + 32) = v117;
  v139 = v120;
  specialized Array._endMutation()(v120);
  v121 = v139;
  sub_100006C5C(0, &qword_1005D34A0, UIBarButtonItem_ptr);
  v122 = v117;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v118, "setRightBarButtonItems:animated:", isa, 0, swift_bridgeObjectRelease(v121).n128_f64[0]);
  swift_release(v136);

}

void sub_1001D9B84(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_deviceImageView), "setImage:", v2);

  }
}

id sub_1001D9C24(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  void *v11;
  id v12;
  Swift::String v13;
  Swift::String_optional v14;
  Swift::String v15;
  void *object;
  NSString v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  Swift::String v23;

  v3 = v2;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100056D88(v6, (uint64_t)qword_1005F5748);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "FMContactDetailsWelcomeScreenViewController : update called", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  *(_BYTE *)(v3 + OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_originalShowContactDetailsState) = a2 & 1;
  if ((a1 & 1) != 0)
  {
    v11 = *(void **)(v3 + OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_subtitleLabel);
    v12 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v13._countAndFlagsBits = 0xD00000000000002ALL;
    v23._object = (void *)0x80000001004B30E0;
    v13._object = (void *)0x80000001004B3170;
    v14.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v14.value._object = (void *)0xEC00000031656C62;
    v15._countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    v23._countAndFlagsBits = 0xD000000000000017;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, v14, (NSBundle)v12, v15, v23)._object;

    v17 = String._bridgeToObjectiveC()();
    v18 = object;
  }
  else
  {
    *(_BYTE *)(v3 + OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_showContactDetailsState) = a2 & 1;
    v19 = *(_QWORD *)(v3 + OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_showContactDetailsSwitch);
    *(_BYTE *)(v19 + OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_isOn) = a2 & 1;
    objc_msgSend(*(id *)(v19 + OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_settingSwitch), "setOn:");
    v11 = *(void **)(v3 + OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_subtitleLabel);
    sub_1001DE278(0xD000000000000033, (void *)0x80000001004B3130);
    v21 = v20;
    v17 = String._bridgeToObjectiveC()();
    v18 = v21;
  }
  objc_msgSend(v11, "setText:", v17, swift_bridgeObjectRelease(v18).n128_f64[0]);

  *(_BYTE *)(*(_QWORD *)(v3
                       + OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_showContactDetailsSwitch)
           + OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_isEnabled) = a1 & 1;
  return sub_100115CF4();
}

void sub_1001D9E94()
{
  char *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  Class isa;
  uint64_t v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;
  id v58;
  char *v59;
  Class v60;

  v1 = v0;
  v2 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_scrollView;
  v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_scrollView];
  v59 = (char *)OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_contentStackView;
  v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_contentStackView];
  v5 = *(void **)((char *)v1 + OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_deviceImageView);
  v6 = *(void **)((char *)v1 + OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_deviceNameLabel);
  v7 = *(void **)((char *)v1 + OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_phoneNumberLabel);
  v8 = *(void **)((char *)v1
                + OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_showContactDetailsSwitchSection);
  v9 = *(void **)((char *)v1 + OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_subtitleLabel);
  v10 = v3;
  v11 = v4;
  v12 = v5;
  v13 = v6;
  v14 = v7;
  v15 = v8;
  v16 = v9;
  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v16, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v17 = sub_100053F2C(&qword_1005D2F10);
  v18 = swift_allocObject(v17, 64, 7);
  *(_OWORD *)(v18 + 16) = xmmword_100481720;
  v19 = objc_msgSend(*(id *)((char *)v1 + v2), "topAnchor");
  v20 = objc_msgSend(v1, "view");
  if (!v20)
  {
    __break(1u);
    goto LABEL_7;
  }
  v21 = v20;
  v22 = objc_msgSend(v20, "safeAreaLayoutGuide");

  v23 = objc_msgSend(v22, "topAnchor");
  v24 = objc_msgSend(v19, "constraintEqualToAnchor:", v23);

  *(_QWORD *)(v18 + 32) = v24;
  v25 = objc_msgSend(*(id *)((char *)v1 + v2), "bottomAnchor");
  v26 = objc_msgSend(v1, "view");
  if (!v26)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v27 = v26;
  v28 = objc_msgSend(v26, "bottomAnchor");

  v29 = objc_msgSend(v25, "constraintEqualToAnchor:", v28);
  *(_QWORD *)(v18 + 40) = v29;
  v30 = objc_msgSend(*(id *)((char *)v1 + v2), "leadingAnchor");
  v31 = objc_msgSend(v1, "view");
  if (!v31)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v32 = v31;
  v33 = objc_msgSend(v31, "leadingAnchor");

  v34 = objc_msgSend(v30, "constraintEqualToAnchor:", v33);
  *(_QWORD *)(v18 + 48) = v34;
  v35 = objc_msgSend(*(id *)((char *)v1 + v2), "trailingAnchor");
  v36 = objc_msgSend(v1, "view");
  if (v36)
  {
    v37 = v36;
    v58 = (id)objc_opt_self(NSLayoutConstraint);
    v38 = objc_msgSend(v37, "trailingAnchor");

    v39 = objc_msgSend(v35, "constraintEqualToAnchor:", v38);
    *(_QWORD *)(v18 + 56) = v39;
    specialized Array._endMutation()(v40);
    sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v58, "activateConstraints:", isa, swift_bridgeObjectRelease(v18).n128_f64[0]);

    v42 = swift_allocObject(v17, 64, 7);
    *(_OWORD *)(v42 + 16) = xmmword_100481720;
    v43 = objc_msgSend(*(id *)&v59[(_QWORD)v1], "topAnchor");
    v44 = objc_msgSend(*(id *)((char *)v1 + v2), "topAnchor");
    v45 = objc_msgSend(v43, "constraintEqualToAnchor:", v44);

    *(_QWORD *)(v42 + 32) = v45;
    v46 = objc_msgSend(*(id *)&v59[(_QWORD)v1], "bottomAnchor");
    v47 = objc_msgSend(*(id *)((char *)v1 + v2), "bottomAnchor");
    v48 = objc_msgSend(v46, "constraintEqualToAnchor:", v47);

    *(_QWORD *)(v42 + 40) = v48;
    v49 = objc_msgSend(*(id *)&v59[(_QWORD)v1], "leadingAnchor");
    v50 = objc_msgSend(*(id *)((char *)v1 + v2), "layoutMarginsGuide");
    v51 = objc_msgSend(v50, "leadingAnchor");

    v52 = objc_msgSend(v49, "constraintEqualToAnchor:", v51);
    *(_QWORD *)(v42 + 48) = v52;
    v53 = objc_msgSend(*(id *)&v59[(_QWORD)v1], "trailingAnchor");
    v54 = objc_msgSend(*(id *)((char *)v1 + v2), "layoutMarginsGuide");
    v55 = objc_msgSend(v54, "trailingAnchor");

    v56 = objc_msgSend(v53, "constraintEqualToAnchor:", v55);
    *(_QWORD *)(v42 + 56) = v56;
    specialized Array._endMutation()(v57);
    v60 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v58, "activateConstraints:", v60, swift_bridgeObjectRelease(v42).n128_f64[0]);

    return;
  }
LABEL_9:
  __break(1u);
}

id sub_1001DA4BC(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  id result;
  id v4;
  int v5;
  uint64_t v6;
  unsigned __int8 *v7;

  v2 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_showContactDetailsState;
  if (v1[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_showContactDetailsState] == v1[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_originalShowContactDetailsState])
    return objc_msgSend(v1, "dismissViewControllerAnimated:completion:", 1, 0);
  sub_100389D70(a1);
  result = (id)swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_delegate]);
  if (result)
  {
    v4 = result;
    v5 = v1[v2];
    v6 = swift_allocObject(&unk_10054F648, 24, 7);
    *(_QWORD *)(v6 + 16) = v1;
    v7 = v1;
    sub_1001C1478(v5, (uint64_t)sub_1001DAF04, v6);
    swift_release(v6);
    return (id)swift_unknownObjectRelease(v4);
  }
  return result;
}

void sub_1001DA594(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, _QWORD, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  void *v19;
  id v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  void *object;
  id v25;
  Swift::String v26;
  Swift::String v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  Swift::String v32;
  Swift::String_optional v33;
  Swift::String v34;
  id v35;
  Swift::String v36;
  Swift::String_optional v37;
  Swift::String v38;
  NSString v39;
  NSString v40;
  id v41;
  id v42;
  Swift::String v43;
  Swift::String v44;
  void *v45;
  NSString v46;
  id v47;
  _QWORD v48[2];
  void (*v49)(char *, _QWORD, uint64_t);
  uint64_t v50;
  id v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  Swift::String v55;
  Swift::String v56;
  Swift::String v57;
  Swift::String v58;
  Swift::String v59;

  v4 = type metadata accessor for FMIPActionStatus(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10034AB98(v6);
  v9 = *(void (**)(char *, _QWORD, uint64_t))(v5 + 104);
  v9(v8, enum case for FMIPActionStatus.success(_:), v4);
  v10 = sub_100008000(&qword_1005D9928, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPActionStatus, (uint64_t)&protocol conformance descriptor for FMIPActionStatus);
  dispatch thunk of RawRepresentable.rawValue.getter(&v52, v4, v10);
  dispatch thunk of RawRepresentable.rawValue.getter(&v54, v4, v10);
  v11 = v52;
  v12 = v54;
  v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v8, v4);
  if (v11 == v12)
  {
    objc_msgSend(a2, "dismissViewControllerAnimated:completion:", 1, 0);
  }
  else
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v49 = v9;
    v50 = a1;
    v51 = a2;
    v14 = type metadata accessor for Logger(0);
    v15 = sub_100056D88(v14, (uint64_t)qword_1005F5748);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.default.getter(v16);
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "FMContactDetailsWelcomeScreenViewController: Error occurred", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }

    v52 = 0;
    v53 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v53);
    v19 = (void *)objc_opt_self(NSBundle);
    v20 = objc_msgSend(v19, "mainBundle");
    v21._countAndFlagsBits = 0xD000000000000019;
    v55._countAndFlagsBits = 0xD00000000000002BLL;
    v55._object = (void *)0x80000001004ABA30;
    v21._object = (void *)0x80000001004ABA10;
    v22._countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    v48[0] = 0xD00000000000002BLL;
    v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)v20, v22, v55);
    v48[1] = v23._countAndFlagsBits;
    object = v23._object;

    v52 = 0;
    v53 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    v25 = objc_msgSend(v19, "mainBundle", swift_bridgeObjectRelease(v53).n128_f64[0]);
    v26._countAndFlagsBits = 0xD000000000000018;
    v56._countAndFlagsBits = 0xD00000000000002ALL;
    v56._object = (void *)0x80000001004ABA80;
    v26._object = (void *)0x80000001004ABA60;
    v27._countAndFlagsBits = 0;
    v27._object = (void *)0xE000000000000000;
    v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, (Swift::String_optional)0, (NSBundle)v25, v27, v56)._object;

    v49(v8, enum case for FMIPActionStatus.error(_:), v4);
    dispatch thunk of RawRepresentable.rawValue.getter(&v52, v4, v10);
    dispatch thunk of RawRepresentable.rawValue.getter(&v54, v4, v10);
    v29 = v52;
    v30 = v54;
    v13(v8, v4);
    if (v29 == v30)
    {
      swift_bridgeObjectRelease(v23._object);
      v31 = objc_msgSend(v19, "mainBundle", swift_bridgeObjectRelease(v28).n128_f64[0]);
      v57._object = (void *)0x80000001004B30E0;
      v32._object = (void *)0x80000001004B30B0;
      v32._countAndFlagsBits = v48[0];
      v33.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v33.value._object = (void *)0xEC00000031656C62;
      v34._countAndFlagsBits = 0;
      v34._object = (void *)0xE000000000000000;
      v57._countAndFlagsBits = 0xD000000000000017;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v32, v33, (NSBundle)v31, v34, v57)._object;

      v35 = objc_msgSend(v19, "mainBundle");
      v36._countAndFlagsBits = 0xD00000000000002DLL;
      v58._object = (void *)0x80000001004B30E0;
      v36._object = (void *)0x80000001004B3100;
      v37.value._countAndFlagsBits = 0x617A696C61636F4CLL;
      v37.value._object = (void *)0xEC00000031656C62;
      v38._countAndFlagsBits = 0;
      v38._object = (void *)0xE000000000000000;
      v58._countAndFlagsBits = 0xD000000000000017;
      v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(v36, v37, (NSBundle)v35, v38, v58)._object;

    }
    v39 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v40 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v28);
    v41 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v39, v40, 1);

    v52 = 0;
    v53 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    v42 = objc_msgSend(v19, "mainBundle", swift_bridgeObjectRelease(v53).n128_f64[0]);
    v59._countAndFlagsBits = 0xD000000000000021;
    v59._object = (void *)0x80000001004A5EE0;
    v43._countAndFlagsBits = 0x4F545455425F4B4FLL;
    v43._object = (void *)0xEF454C5449545F4ELL;
    v44._countAndFlagsBits = 0;
    v44._object = (void *)0xE000000000000000;
    v45 = NSLocalizedString(_:tableName:bundle:value:comment:)(v43, (Swift::String_optional)0, (NSBundle)v42, v44, v59)._object;

    v46 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v45);
    v47 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v46, 1, 0);

    objc_msgSend(v41, "addAction:", v47);
    objc_msgSend(v51, "presentViewController:animated:completion:", v41, 1, 0);

  }
}

uint64_t sub_1001DABF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_10005E190(v0 + OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_delegate);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_showContactDetailsSwitchSection));

  swift_release(*(_QWORD *)(v0
                          + OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_productImageCancellable));
  v1 = v0 + OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_device;
  v2 = type metadata accessor for FMIPDevice(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

id sub_1001DACD0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMContactDetailsWelcomeScreenViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1001DADE4()
{
  return type metadata accessor for FMContactDetailsWelcomeScreenViewController(0);
}

uint64_t type metadata accessor for FMContactDetailsWelcomeScreenViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D9D28;
  if (!qword_1005D9D28)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMContactDetailsWelcomeScreenViewController);
  return result;
}

uint64_t sub_1001DAE28(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[13];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[2] = &unk_100486E60;
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[9] = &unk_100486E78;
  v4[10] = &unk_100486E78;
  v4[11] = &unk_100486E90;
  result = type metadata accessor for FMIPDevice(319);
  if (v3 <= 0x3F)
  {
    v4[12] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 13, v4, a1 + 96);
    if (!result)
      return 0;
  }
  return result;
}

void sub_1001DAED0(uint64_t a1, char a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_showContactDetailsState) = a2;
}

uint64_t sub_1001DAEE0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1001DAF04(uint64_t a1)
{
  uint64_t v1;

  sub_1001DA594(a1, *(void **)(v1 + 16));
}

uint64_t sub_1001DAF0C()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001DAF30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for FMIPDevice(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = *(_QWORD *)(v2 + 64) + v4 + 1;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1001DAFA8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1001DAFCC(uint64_t *a1)
{
  uint64_t v1;

  sub_1001D9B84(a1, v1);
}

char *sub_1001DAFD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  objc_class *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  NSString v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  NSString v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  objc_super v47;

  v45 = a3;
  v46 = a4;
  v44 = a2;
  v6 = type metadata accessor for FMIPDeviceState(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v43 - v11;
  v13 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_scrollView;
  v14 = objc_allocWithZone((Class)UIScrollView);
  v15 = v4;
  *(_QWORD *)&v4[v13] = objc_msgSend(v14, "init");
  v16 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_contentStackView;
  *(_QWORD *)&v15[v16] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v17 = &v15[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_delegate];
  *((_QWORD *)v17 + 1) = 0;
  swift_unknownObjectWeakInit(v17);
  v18 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_deviceImageView;
  *(_QWORD *)&v15[v18] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v19 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_deviceNameLabel;
  *(_QWORD *)&v15[v19] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v20 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_phoneNumberLabel;
  *(_QWORD *)&v15[v20] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v21 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_subtitleLabel;
  *(_QWORD *)&v15[v21] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v22 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_showContactDetailsSwitchSection;
  *(_QWORD *)&v15[v22] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMSectionPlatterGroupView()), "init");
  v23 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_showContactDetailsSwitch;
  *(_QWORD *)&v15[v23] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMSettingSwitchView()), "init");
  *(_QWORD *)&v15[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_productImageCancellable] = 0;
  v24 = &v15[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_device];
  v25 = type metadata accessor for FMIPDevice(0);
  v43 = *(_QWORD *)(v25 - 8);
  v26 = v44;
  v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 16))(v24, v44, v25);
  v28 = FMIPDevice.state.getter(v27);
  static FMIPDeviceState.isShowContactDetailsEnabled.getter(v28);
  v29 = sub_100008000((unint64_t *)&qword_1005D4158, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPDeviceState, (uint64_t)&protocol conformance descriptor for FMIPDeviceState);
  LOBYTE(v24) = dispatch thunk of SetAlgebra.isSuperset(of:)(v10, v6, v29);
  v30 = *(void (**)(char *, uint64_t))(v7 + 8);
  v30(v10, v6);
  v30(v12, v6);
  v15[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_originalShowContactDetailsState] = v24 & 1;
  v15[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_showContactDetailsState] = v24 & 1;

  *(_QWORD *)&v15[OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator] = a1;
  v31 = (objc_class *)type metadata accessor for FMMediatedViewController();
  v47.receiver = v15;
  v47.super_class = v31;
  swift_retain(a1);
  v32 = (char *)objc_msgSendSuper2(&v47, "initWithNibName:bundle:", 0, 0);
  FMIPDevice.name.getter(v32);
  v34 = v33;
  v35 = *(void **)&v32[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_deviceNameLabel];
  v36 = String._bridgeToObjectiveC()();
  objc_msgSend(v35, "setText:", v36, swift_bridgeObjectRelease(v34).n128_f64[0]);

  v37 = v46;
  sub_1000F2BA4(v45, v46);
  v39 = v38;
  swift_bridgeObjectRelease(v37);
  v40 = *(void **)&v32[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_phoneNumberLabel];
  v41 = String._bridgeToObjectiveC()();
  objc_msgSend(v40, "setText:", v41, swift_bridgeObjectRelease(v39).n128_f64[0]);

  sub_1001D9E94();
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v26, v25);
  return v32;
}

void sub_1001DB360()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_scrollView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "init");
  v2 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_contentStackView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v3 = &v0[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_delegate];
  *((_QWORD *)v3 + 1) = 0;
  swift_unknownObjectWeakInit(v3);
  v4 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_deviceImageView;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v5 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_deviceNameLabel;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v6 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_phoneNumberLabel;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v7 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_subtitleLabel;
  *(_QWORD *)&v0[v7] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v8 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_showContactDetailsSwitchSection;
  *(_QWORD *)&v0[v8] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMSectionPlatterGroupView()), "init");
  v9 = OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_showContactDetailsSwitch;
  *(_QWORD *)&v0[v9] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMSettingSwitchView()), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy43FMContactDetailsWelcomeScreenViewController_productImageCancellable] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMContactDetailsWelcomeScreenViewController.swift", 56, 2, 98, 0);
  __break(1u);
}

void sub_1001DB4E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  uint64_t (*v10)(char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  long double v16;
  uint64_t v19;

  v0 = type metadata accessor for Date(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v2);
  v7 = (char *)&v19 - v6;
  v8 = Date.init()(v5);
  v9 = Date.timeIntervalSince1970.getter(v8);
  v10 = *(uint64_t (**)(char *, uint64_t))(v1 + 8);
  v11 = v10(v7, v0);
  v12 = static Date.distantPast.getter(v11);
  v13 = Date.timeIntervalSince1970.getter(v12);
  v10(v4, v0);
  v14 = v9 - v13;
  if (v9 - v13 < 0.0 || v14 > 30.0)
  {
    v16 = 60.0;
    if (v14 < 30.0 || v14 > 60.0)
    {
      v16 = 3600.0;
      if (v14 >= 60.0 && v14 <= 3600.0)
        v16 = 60.0;
    }
    fmod(v14, v16);
  }
}

void sub_1001DB610()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  double v8;
  long double v10;
  uint64_t v13;

  v0 = type metadata accessor for Date(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = Date.init()(v2);
  v6 = Date.timeIntervalSince1970.getter(v5);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  v7 = type metadata accessor for FMItemCellViewModel(0);
  v8 = v6 - Date.timeIntervalSince1970.getter(v7);
  if (v8 < 0.0 || v8 > 30.0)
  {
    v10 = 60.0;
    if (v8 < 30.0 || v8 > 60.0)
    {
      v10 = 3600.0;
      if (v8 >= 60.0 && v8 <= 3600.0)
        v10 = 60.0;
    }
    fmod(v8, v10);
  }
}

void sub_1001DB718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  double v8;
  long double v10;
  uint64_t v13;

  v0 = type metadata accessor for Date(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = Date.init()(v2);
  v6 = Date.timeIntervalSince1970.getter(v5);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  v7 = type metadata accessor for FMDeviceCellViewModel(0);
  v8 = v6 - Date.timeIntervalSince1970.getter(v7);
  if (v8 < 0.0 || v8 > 30.0)
  {
    v10 = 60.0;
    if (v8 < 30.0 || v8 > 60.0)
    {
      v10 = 3600.0;
      if (v8 >= 60.0 && v8 <= 3600.0)
        v10 = 60.0;
    }
    fmod(v8, v10);
  }
}

void sub_1001DB820()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  double v8;
  long double v10;
  uint64_t v13;

  v0 = type metadata accessor for Date(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = Date.init()(v2);
  v6 = Date.timeIntervalSince1970.getter(v5);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  v7 = type metadata accessor for FMItemDetailViewModel(0);
  v8 = v6 - Date.timeIntervalSince1970.getter(v7);
  if (v8 < 0.0 || v8 > 30.0)
  {
    v10 = 60.0;
    if (v8 < 30.0 || v8 > 60.0)
    {
      v10 = 3600.0;
      if (v8 >= 60.0 && v8 <= 3600.0)
        v10 = 60.0;
    }
    fmod(v8, v10);
  }
}

void sub_1001DB928()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  double v8;
  long double v10;
  uint64_t v13;

  v0 = type metadata accessor for Date(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = Date.init()(v2);
  v6 = Date.timeIntervalSince1970.getter(v5);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  v7 = type metadata accessor for FMDeviceDetailViewModel(0);
  v8 = v6 - Date.timeIntervalSince1970.getter(v7);
  if (v8 < 0.0 || v8 > 30.0)
  {
    v10 = 60.0;
    if (v8 < 30.0 || v8 > 60.0)
    {
      v10 = 3600.0;
      if (v8 >= 60.0 && v8 <= 3600.0)
        v10 = 60.0;
    }
    fmod(v8, v10);
  }
}

void sub_1001DBA30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  double v8;
  long double v10;
  uint64_t v13;

  v0 = type metadata accessor for Date(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = Date.init()(v2);
  v6 = Date.timeIntervalSince1970.getter(v5);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  v7 = type metadata accessor for FMUnknownItemCellViewModel(0);
  v8 = v6 - Date.timeIntervalSince1970.getter(v7);
  if (v8 < 0.0 || v8 > 30.0)
  {
    v10 = 60.0;
    if (v8 < 30.0 || v8 > 60.0)
    {
      v10 = 3600.0;
      if (v8 >= 60.0 && v8 <= 3600.0)
        v10 = 60.0;
    }
    fmod(v8, v10);
  }
}

void sub_1001DBB38(uint64_t (*a1)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  double v10;
  long double v12;
  uint64_t v15;

  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = Date.init()(v4);
  v8 = Date.timeIntervalSince1970.getter(v7);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  v9 = a1(0);
  v10 = v8 - Date.timeIntervalSince1970.getter(v9);
  if (v10 < 0.0 || v10 > 30.0)
  {
    v12 = 60.0;
    if (v10 < 30.0 || v10 > 60.0)
    {
      v12 = 3600.0;
      if (v10 >= 60.0 && v10 <= 3600.0)
        v12 = 60.0;
    }
    fmod(v10, v12);
  }
}

void sub_1001DBC4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  double v16;
  double v17;
  long double v19;
  uint64_t v22;

  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v22 - v10;
  v12 = Date.init()(v9);
  v13 = Date.timeIntervalSince1970.getter(v12);
  v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v11, v4);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  v16 = Date.timeIntervalSince1970.getter(v15);
  v14(v8, v4);
  v17 = v13 - v16;
  if (v13 - v16 < 0.0 || v17 > 30.0)
  {
    v19 = 60.0;
    if (v17 < 30.0 || v17 > 60.0)
    {
      v19 = 3600.0;
      if (v17 >= 60.0 && v17 <= 3600.0)
        v19 = 60.0;
    }
    fmod(v17, v19);
  }
}

double sub_1001DBDB0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  NSObject **v13;
  NSObject *v14;
  uint64_t v15;
  NSObject **v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  double result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  _BYTE v31[24];

  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v31, 0, 0);
  Strong = swift_weakLoadStrong(v5);
  if (Strong)
  {
    v7 = Strong;
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v8 = type metadata accessor for Logger(0);
    sub_100056D88(v8, (uint64_t)qword_1005F5748);
    v9 = a1;
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter(v10);
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(12, -1);
      v29 = a3;
      v30 = v9;
      v13 = (NSObject **)swift_slowAlloc(8, -1);
      *(_DWORD *)v12 = 138412290;
      v14 = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, v31);
      *v13 = v9;

      _os_log_impl((void *)&_mh_execute_header, v10, v11, "FMItemAger: refresh timer fired %@", v12, 0xCu);
      v15 = sub_100053F2C((uint64_t *)&unk_1005D9680);
      swift_arrayDestroy(v13, 1, v15);
      v16 = v13;
      a3 = v29;
      swift_slowDealloc(v16, -1, -1);
      swift_slowDealloc(v12, -1, -1);
    }
    else
    {

      v10 = v9;
    }

    v23 = swift_unknownObjectWeakLoadStrong(v7 + 16);
    if (v23)
    {
      v24 = v23;
      v25 = *(_QWORD *)(v7 + 24);
      ObjectType = swift_getObjectType(v23);
      v27 = sub_100053F2C(&qword_1005D55E8);
      v28 = swift_allocObject(v27, 72, 7);
      *(_OWORD *)(v28 + 16) = xmmword_100481740;
      sub_100056284(a3, v28 + 32);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8))(v7, v28, ObjectType, v25);
      swift_bridgeObjectRelease(v28);
      swift_release(v7);
      swift_unknownObjectRelease(v24);
    }
    else
    {
      *(_QWORD *)&result = swift_release(v7).n128_u64[0];
    }
  }
  else
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v17 = type metadata accessor for Logger(0);
    v18 = sub_100056D88(v17, (uint64_t)qword_1005F5748);
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.default.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "FMItemAger: refresh timer cannot be fired because self has been deallocated", v21, 2u);
      swift_slowDealloc(v21, -1, -1);
    }

  }
  return result;
}

void sub_1001DC0B0()
{
  sub_1001DBB38(type metadata accessor for FMPersonDetailViewModel);
}

void sub_1001DC0D8()
{
  sub_100055494(type metadata accessor for FMUTDetailViewModel);
}

void sub_1001DC0F4()
{
  sub_1001DBB38(type metadata accessor for FMAllowLocationAlertCellViewModel);
}

uint64_t sub_1001DC110(char *a1, char *a2, unint64_t a3, char *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  uint64_t v26;
  _OWORD *v27;
  unint64_t v28;
  __int128 v29;
  __int128 v30;
  char *v31;
  __int128 v32;
  __int128 v33;
  char *v34;
  unint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  char *v46;
  __int128 v47;
  __int128 v48;
  char *v49;
  unint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t result;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[3];
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[3];
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;

  v8 = type metadata accessor for Date(0);
  v60 = *(_QWORD *)(v8 - 8);
  v61 = v8;
  v9 = __chkstk_darwin(v8);
  v59 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (char *)&v56 - v11;
  v13 = a2 - a1;
  v14 = (a2 - a1) / 40;
  v15 = a3 - (_QWORD)a2;
  v16 = (uint64_t)(a3 - (_QWORD)a2) / 40;
  v70 = a1;
  v69 = a4;
  if (v14 >= v16)
  {
    if (v15 < -39)
      goto LABEL_45;
    if (a4 != a2 || &a2[40 * v16] <= a4)
      memmove(a4, a2, 40 * v16);
    v34 = &a4[40 * v16];
    v68 = v34;
    v70 = a2;
    if (v15 < 40 || a1 >= a2)
      goto LABEL_44;
    v35 = a3 - 40;
    v57 = a4;
    v58 = a1;
    while (1)
    {
      v36 = (char *)(v35 + 40);
      sub_100056284((uint64_t)(v34 - 40), (uint64_t)v65);
      v37 = a2 - 40;
      sub_100056284((uint64_t)(a2 - 40), (uint64_t)v62);
      v38 = v66;
      v39 = v67;
      sub_100029550(v65, v66);
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v39);
      v40 = v63;
      v41 = v64;
      sub_100029550(v62, v63);
      v42 = v12;
      v43 = v59;
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v41);
      LOBYTE(v40) = static Date.< infix(_:_:)(v42, v43);
      v44 = v61;
      v45 = *(void (**)(char *, uint64_t))(v60 + 8);
      v46 = v43;
      v12 = v42;
      v45(v46, v61);
      v45(v42, v44);
      sub_100029574(v62);
      sub_100029574(v65);
      if ((v40 & 1) != 0)
      {
        if (v36 != a2 || v35 >= (unint64_t)a2)
        {
          v47 = *(_OWORD *)v37;
          v48 = *(_OWORD *)(a2 - 24);
          *(_QWORD *)(v35 + 32) = *((_QWORD *)a2 - 1);
          *(_OWORD *)v35 = v47;
          *(_OWORD *)(v35 + 16) = v48;
        }
        v70 -= 40;
        v34 = v68;
      }
      else
      {
        v49 = v68;
        v34 = v68 - 40;
        v68 -= 40;
        if (v36 >= v49 && v35 < (unint64_t)v49)
        {
          v50 = (unint64_t)v58;
          if (v36 != v49)
          {
            v51 = *(_OWORD *)v34;
            v52 = *(_OWORD *)(v49 - 24);
            *(_QWORD *)(v35 + 32) = *((_QWORD *)v49 - 1);
            *(_OWORD *)v35 = v51;
            *(_OWORD *)(v35 + 16) = v52;
          }
          v37 = a2;
          goto LABEL_40;
        }
        v53 = *(_OWORD *)v34;
        v54 = *(_OWORD *)(v49 - 24);
        *(_QWORD *)(v35 + 32) = *((_QWORD *)v49 - 1);
        *(_OWORD *)v35 = v53;
        *(_OWORD *)(v35 + 16) = v54;
        v37 = a2;
      }
      v50 = (unint64_t)v58;
LABEL_40:
      if (v34 > v57)
      {
        v35 -= 40;
        a2 = v37;
        if ((unint64_t)v37 > v50)
          continue;
      }
      goto LABEL_44;
    }
  }
  if (v13 >= -39)
  {
    if (a4 != a1 || &a1[40 * v14] <= a4)
      memmove(a4, a1, 40 * v14);
    v17 = (unint64_t)&a4[40 * v14];
    v68 = (char *)v17;
    if (v13 >= 40 && (unint64_t)a2 < a3)
    {
      do
      {
        sub_100056284((uint64_t)a2, (uint64_t)v65);
        sub_100056284((uint64_t)a4, (uint64_t)v62);
        v18 = v66;
        v19 = v67;
        sub_100029550(v65, v66);
        (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v19);
        v20 = v63;
        v21 = v64;
        sub_100029550(v62, v63);
        v22 = v59;
        (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21);
        v23 = static Date.< infix(_:_:)(v12, v22);
        v24 = *(void (**)(char *, uint64_t))(v60 + 8);
        v25 = v22;
        v26 = v61;
        v24(v25, v61);
        v24(v12, v26);
        sub_100029574(v62);
        sub_100029574(v65);
        v27 = v70;
        if ((v23 & 1) != 0)
        {
          v28 = (unint64_t)(a2 + 40);
          if (v70 >= a2 && (unint64_t)v70 < v28 && v70 == a2)
          {
            v27 = a2;
          }
          else
          {
            v29 = *(_OWORD *)a2;
            v30 = *((_OWORD *)a2 + 1);
            *((_QWORD *)v70 + 4) = *((_QWORD *)a2 + 4);
            *v27 = v29;
            v27[1] = v30;
          }
        }
        else
        {
          v31 = v69 + 40;
          if (v70 != v69 || v70 >= v31)
          {
            v32 = *(_OWORD *)v69;
            v33 = *((_OWORD *)v69 + 1);
            *((_QWORD *)v70 + 4) = *((_QWORD *)v69 + 4);
            *v27 = v32;
            v27[1] = v33;
          }
          v69 = v31;
          v28 = (unint64_t)a2;
        }
        v70 = (char *)v27 + 40;
        a4 = v69;
        if ((unint64_t)v69 >= v17)
          break;
        a2 = (char *)v28;
      }
      while (v28 < a3);
    }
LABEL_44:
    sub_10020C9E8((void **)&v70, (const void **)&v69, &v68);
    return 1;
  }
LABEL_45:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void sub_1001DC5C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  double v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  double v12;
  double v13;
  long double v15;
  uint64_t v18;

  v0 = type metadata accessor for Date(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v2);
  v7 = (char *)&v18 - v6;
  v8 = Date.init()(v5);
  v9 = Date.timeIntervalSince1970.getter(v8);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v7, v0);
  v11 = Date.init(timeIntervalSinceNow:)(-1.0);
  v12 = Date.timeIntervalSince1970.getter(v11);
  v10(v4, v0);
  v13 = v9 - v12;
  if (v9 - v12 < 0.0 || v13 > 30.0)
  {
    v15 = 60.0;
    if (v13 < 30.0 || v13 > 60.0)
    {
      v15 = 3600.0;
      if (v13 >= 60.0 && v13 <= 3600.0)
        v15 = 60.0;
    }
    fmod(v13, v15);
  }
}

uint64_t sub_1001DC6F0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100053F2C(&qword_1005D9E18);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001DC730()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001DC754()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  sub_100029574((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 64, 7);
}

double sub_1001DC780(void *a1)
{
  uint64_t v1;

  return sub_1001DBDB0(a1, *(_QWORD *)(v1 + 16), v1 + 24);
}

uint64_t sub_1001DC78C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t FMB389VideoAsset.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1001DC80C
                                                                     + 4 * asc_100486F20[a1]))(0xD000000000000015, 0x80000001004A46F0);
}

uint64_t sub_1001DC80C()
{
  uint64_t v0;

  return v0 + 7;
}

uint64_t sub_1001DC8DC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = FMB389VideoAsset.rawValue.getter(*a1);
  v5 = v4;
  v6 = FMB389VideoAsset.rawValue.getter(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

Swift::Int sub_1001DC964()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  v1 = *v0;
  Hasher.init(_seed:)(v6, 0);
  v2 = FMB389VideoAsset.rawValue.getter(v1);
  v4 = v3;
  String.hash(into:)(v6, v2, v3);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

double sub_1001DC9C4(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double result;

  v3 = FMB389VideoAsset.rawValue.getter(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  return result;
}

Swift::Int sub_1001DCA04(uint64_t a1)
{
  unsigned __int8 *v1;
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[9];

  v2 = *v1;
  Hasher.init(_seed:)(v7, a1);
  v3 = FMB389VideoAsset.rawValue.getter(v2);
  v5 = v4;
  String.hash(into:)(v7, v3, v4);
  swift_bridgeObjectRelease(v5);
  return Hasher._finalize()();
}

unint64_t sub_1001DCA60@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = _s6FindMy16FMB389VideoAssetO8rawValueACSgSS_tcfC_0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1001DCA8C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = FMB389VideoAsset.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t _s6FindMy16FMB389VideoAssetO8rawValueACSgSS_tcfC_0(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10053FAB8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 0xB)
    return 11;
  else
    return v3;
}

unint64_t sub_1001DCB00()
{
  unint64_t result;

  result = qword_1005D9E20;
  if (!qword_1005D9E20)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FMB389VideoAsset, &type metadata for FMB389VideoAsset);
    atomic_store(result, (unint64_t *)&qword_1005D9E20);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMSoundPlatterViewLayout(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
    goto LABEL_17;
  if (a2 + 10 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 10) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 10;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 10;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 10;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v8 = v6 - 11;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FMB389VideoAsset(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1001DCC20 + 4 * byte_100486F30[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1001DCC54 + 4 * byte_100486F2B[v4]))();
}

uint64_t sub_1001DCC54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001DCC5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001DCC64);
  return result;
}

uint64_t sub_1001DCC70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001DCC78);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1001DCC7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001DCC84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMB389VideoAsset()
{
  return &type metadata for FMB389VideoAsset;
}

double sub_1001DCCA0()
{
  double result;

  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  __asm { FMOV            V1.2D, #12.0 }
  xmmword_1005F5160 = _Q1;
  *(double *)&qword_1005F5170 = *(double *)&qword_1005F5978 + 8.0;
  result = 28.0;
  *(_OWORD *)algn_1005F5178 = xmmword_100487010;
  *((_QWORD *)&xmmword_1005F5180 + 1) = 0x3FE4CCCCCCCCCCCDLL;
  return result;
}

char *sub_1001DCD18(uint64_t a1, uint64_t a2, __int128 *a3)
{
  char *v3;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  char *v10;
  __int128 v11;
  __int128 v12;
  char *v13;
  void *v14;
  char *v15;
  id v16;
  NSString v17;
  objc_super v19;

  v6 = OBJC_IVAR____TtC6FindMy11FMAddButton_titleLabel;
  v7 = objc_allocWithZone((Class)UILabel);
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, "init");
  v9 = OBJC_IVAR____TtC6FindMy11FMAddButton_iconView;
  *(_QWORD *)&v8[v9] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  *(_QWORD *)&v8[OBJC_IVAR____TtC6FindMy11FMAddButton_titleLeadingConstraint] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC6FindMy11FMAddButton_iconViewLeadingConstraint] = 0;
  v8[OBJC_IVAR____TtC6FindMy11FMAddButton_isEnabled] = 1;
  v10 = &v8[OBJC_IVAR____TtC6FindMy11FMAddButton_style];
  v11 = a3[2];
  v12 = *a3;
  *((_OWORD *)v10 + 1) = a3[1];
  *((_OWORD *)v10 + 2) = v11;
  *(_OWORD *)v10 = v12;

  v19.receiver = v8;
  v19.super_class = (Class)type metadata accessor for FMAddButton();
  v13 = (char *)objc_msgSendSuper2(&v19, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v14 = *(void **)&v13[OBJC_IVAR____TtC6FindMy11FMAddButton_titleLabel];
  v15 = v13;
  v16 = v14;
  v17 = String._bridgeToObjectiveC()();
  objc_msgSend(v16, "setText:", v17, swift_bridgeObjectRelease(a2).n128_f64[0]);

  sub_1001DCF60();
  sub_1001DD04C();
  sub_1001DD4DC();

  return v15;
}

id sub_1001DCF60()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy11FMAddButton_titleLabel];
  v3 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  v4 = (void *)sub_10003CEE8(2);

  v5 = (void *)sub_10003CEE8(0x8000);
  objc_msgSend(v2, "setFont:", v5);

  objc_msgSend(v2, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v2, "setNumberOfLines:", 0);
  objc_msgSend(v1, "addSubview:", v2);
  return objc_msgSend(v1, "addSubview:", *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy11FMAddButton_iconView]);
}

void sub_1001DD04C()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  double *v11;
  double v12;
  id v13;
  uint64_t v14;
  Class isa;
  id v16;
  id v17;
  id v18;
  double v19;
  id v20;
  id v21;
  id v22;
  double v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  Class v35;
  void *v36;
  id v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy11FMAddButton_iconView];
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy11FMAddButton_titleLabel];
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = objc_msgSend(v2, "leadingAnchor");
  v5 = objc_msgSend(v1, "layoutMarginsGuide");
  v6 = objc_msgSend(v5, "leadingAnchor");

  v7 = objc_msgSend(v4, "constraintEqualToAnchor:constant:", v6, 0.0);
  v39 = (id)objc_opt_self(NSLayoutConstraint);
  v38 = sub_100053F2C(&qword_1005D2F10);
  v8 = swift_allocObject(v38, 48, 7);
  *(_OWORD *)(v8 + 16) = xmmword_1004820B0;
  v9 = objc_msgSend(v2, "topAnchor");
  v10 = objc_msgSend(v1, "topAnchor");
  v11 = (double *)&v1[OBJC_IVAR____TtC6FindMy11FMAddButton_style];
  v12 = *(double *)&v1[OBJC_IVAR____TtC6FindMy11FMAddButton_style];
  v13 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v10, v12);

  *(_QWORD *)(v8 + 32) = v13;
  *(_QWORD *)(v8 + 40) = v7;
  specialized Array._endMutation()(v14);
  sub_100048C64();
  v41 = v7;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v39, "activateConstraints:", isa, swift_bridgeObjectRelease(v8).n128_f64[0]);

  v16 = objc_msgSend(v3, "trailingAnchor");
  v17 = objc_msgSend(v1, "trailingAnchor");
  v18 = objc_msgSend(v16, "constraintLessThanOrEqualToAnchor:constant:", v17, -v11[1]);

  LODWORD(v19) = 1144750080;
  objc_msgSend(v18, "setPriority:", v19);
  v20 = objc_msgSend(v3, "bottomAnchor");
  v21 = objc_msgSend(v1, "bottomAnchor");
  v22 = objc_msgSend(v20, "constraintLessThanOrEqualToAnchor:constant:", v21, -2.0 - v12);

  LODWORD(v23) = 1144750080;
  objc_msgSend(v22, "setPriority:", v23);
  v24 = objc_msgSend(v3, "leadingAnchor");
  v25 = objc_msgSend(v2, "trailingAnchor");
  v26 = objc_msgSend(v24, "constraintEqualToAnchor:constant:", v25, v11[3]);

  v27 = swift_allocObject(v38, 64, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100481720;
  v28 = objc_msgSend(v3, "centerYAnchor");
  v29 = objc_msgSend(v1, "centerYAnchor");
  v30 = objc_msgSend(v28, "constraintEqualToAnchor:", v29);

  *(_QWORD *)(v27 + 32) = v30;
  *(_QWORD *)(v27 + 40) = v26;
  *(_QWORD *)(v27 + 48) = v22;
  *(_QWORD *)(v27 + 56) = v18;
  specialized Array._endMutation()(v31);
  v32 = v26;
  v33 = v22;
  v34 = v18;
  v35 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v39, "activateConstraints:", v35, swift_bridgeObjectRelease(v27).n128_f64[0]);

  v36 = *(void **)&v1[OBJC_IVAR____TtC6FindMy11FMAddButton_titleLeadingConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy11FMAddButton_titleLeadingConstraint] = v32;
  v37 = v32;

  v40 = *(id *)&v1[OBJC_IVAR____TtC6FindMy11FMAddButton_iconViewLeadingConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy11FMAddButton_iconViewLeadingConstraint] = v41;

}

void sub_1001DD4DC()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  NSString v9;
  id v10;

  v1 = (void *)objc_opt_self(UIColor);
  v2 = objc_msgSend(v1, "clearColor");
  objc_msgSend(v0, "setBackgroundColor:", v2);

  v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy11FMAddButton_titleLabel];
  if (v0[OBJC_IVAR____TtC6FindMy11FMAddButton_isEnabled] == 1)
  {
    v4 = objc_msgSend(v1, "systemBlueColor");
    objc_msgSend(v3, "setTextColor:", v4);

    v5 = *(void **)&v0[OBJC_IVAR____TtC6FindMy11FMAddButton_iconView];
    objc_msgSend(v5, "setAlpha:", 1.0);
  }
  else
  {
    v6 = objc_msgSend(v1, "secondaryLabelColor");
    objc_msgSend(v3, "setTextColor:", v6);

    v5 = *(void **)&v0[OBJC_IVAR____TtC6FindMy11FMAddButton_iconView];
    objc_msgSend(v5, "setAlpha:", 0.5);
  }
  v7 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleTitle2);
  v8 = objc_msgSend((id)objc_opt_self(_UIImageSymbolConfiguration), "configurationWithFont:scale:", v7, 2);
  v9 = String._bridgeToObjectiveC()();
  v10 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v9, v8);

  objc_msgSend(v5, "setImage:", v10);
}

void sub_1001DD728()
{
  char *v0;
  void *v1;
  double *v2;
  double v3;
  id v4;
  id v5;
  uint64_t v6;
  double v7;
  double v8;
  uint64_t v9;
  double v10;
  double v11;
  void *v12;
  void *v13;
  double v14;
  id v15;
  double v16;
  double v17;
  objc_super v18;

  v18.receiver = v0;
  v18.super_class = (Class)type metadata accessor for FMAddButton();
  objc_msgSendSuper2(&v18, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy11FMAddButton_titleLabel];
  objc_msgSend(v0, "frame");
  v2 = (double *)&v0[OBJC_IVAR____TtC6FindMy11FMAddButton_style];
  objc_msgSend(v1, "setPreferredMaxLayoutWidth:", v3 * *(double *)&v0[OBJC_IVAR____TtC6FindMy11FMAddButton_style + 40]);
  v4 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v5 = objc_msgSend(v4, "preferredContentSizeCategory");

  if (!_UIContentSizeCategoryCompareToContentSizeCategory(v5, UIContentSizeCategoryExtraSmall))
  {
    v8 = v2[4];
LABEL_18:
    v7 = 1.0;
    goto LABEL_19;
  }
  if (!_UIContentSizeCategoryCompareToContentSizeCategory(v5, UIContentSizeCategorySmall))
  {
    v10 = v2[4];
    v11 = -0.05;
    goto LABEL_17;
  }
  if (!_UIContentSizeCategoryCompareToContentSizeCategory(v5, UIContentSizeCategoryMedium)
    || !_UIContentSizeCategoryCompareToContentSizeCategory(v5, UIContentSizeCategoryLarge))
  {
    v10 = v2[4];
    v11 = -0.1;
LABEL_17:
    v8 = v10 + v11;
    goto LABEL_18;
  }
  if (!_UIContentSizeCategoryCompareToContentSizeCategory(v5, UIContentSizeCategoryExtraLarge))
  {
    v10 = v2[4];
    v11 = -0.15;
    goto LABEL_17;
  }
  if (!_UIContentSizeCategoryCompareToContentSizeCategory(v5, UIContentSizeCategoryExtraExtraLarge))
  {
    v16 = v2[4];
    v17 = -0.2;
LABEL_27:
    v8 = v16 + v17;
    v9 = 0x3FEE666666666666;
    goto LABEL_28;
  }
  if (!_UIContentSizeCategoryCompareToContentSizeCategory(v5, UIContentSizeCategoryExtraExtraExtraLarge))
  {
    v16 = v2[4];
    v17 = -0.25;
    goto LABEL_27;
  }
  if (_UIContentSizeCategoryCompareToContentSizeCategory(v5, UIContentSizeCategoryAccessibilityMedium))
  {
    if (_UIContentSizeCategoryCompareToContentSizeCategory(v5, UIContentSizeCategoryAccessibilityLarge))
    {
      if (_UIContentSizeCategoryCompareToContentSizeCategory(v5, UIContentSizeCategoryAccessibilityExtraLarge))
      {
        if (!_UIContentSizeCategoryCompareToContentSizeCategory(v5, UIContentSizeCategoryAccessibilityExtraExtraLarge)
          || (v6 = _UIContentSizeCategoryCompareToContentSizeCategory(v5, UIContentSizeCategoryAccessibilityExtraExtraExtraLarge), v7 = 1.0, v8 = 1.0, !v6))
        {
          v8 = v2[4] + -0.8;
          v9 = 0x3FD6666666666666;
LABEL_28:
          v7 = *(double *)&v9;
        }
      }
      else
      {
        v8 = v2[4] + -0.6;
        v7 = 0.5;
      }
    }
    else
    {
      v8 = v2[4] + -0.45;
      v7 = 0.55;
    }
  }
  else
  {
    v8 = v2[4] + -0.35;
    v7 = 0.75;
  }
LABEL_19:
  v12 = *(void **)&v0[OBJC_IVAR____TtC6FindMy11FMAddButton_titleLeadingConstraint];
  if (v12)
    objc_msgSend(v12, "setConstant:", v7 * v2[3]);
  v13 = *(void **)&v0[OBJC_IVAR____TtC6FindMy11FMAddButton_iconViewLeadingConstraint];
  if (v13)
  {
    v14 = v8 * v2[2];
    v15 = v13;
    objc_msgSend(v15, "setConstant:", v14);

  }
}

id sub_1001DDAAC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMAddButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMAddButton()
{
  return objc_opt_self(_TtC6FindMy11FMAddButton);
}

uint64_t getEnumTagSinglePayload for FMAddButtonStyle(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FMAddButtonStyle(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FMAddButtonStyle()
{
  return &type metadata for FMAddButtonStyle;
}

void sub_1001DDBBC()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OBJC_IVAR____TtC6FindMy11FMAddButton_titleLabel;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v2 = OBJC_IVAR____TtC6FindMy11FMAddButton_iconView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy11FMAddButton_titleLeadingConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy11FMAddButton_iconViewLeadingConstraint] = 0;
  v0[OBJC_IVAR____TtC6FindMy11FMAddButton_isEnabled] = 1;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMAddButton.swift", 24, 2, 55, 0);
  __break(1u);
}

uint64_t sub_1001DDC8C(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, void *a6)
{
  Swift::String v11;
  void *v12;
  id v13;
  Swift::String v14;
  Swift::String_optional v15;
  Swift::String v16;
  Swift::String v17;
  BOOL v18;
  Swift::String v19;
  id v20;
  Swift::String v21;
  Swift::String_optional v22;
  Swift::String v23;
  uint64_t countAndFlagsBits;
  Swift::String v27;
  Swift::String v28;

  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v11._countAndFlagsBits = a1;
  v11._object = a2;
  String.append(_:)(v11);
  v12 = (void *)objc_opt_self(NSBundle);
  v13 = objc_msgSend(v12, "mainBundle");
  v27._object = (void *)0x80000001004A5CD0;
  v14._countAndFlagsBits = a1;
  v14._object = a2;
  v15.value._countAndFlagsBits = a5;
  v15.value._object = a6;
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  v27._countAndFlagsBits = 0xD000000000000012;
  v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, v15, (NSBundle)v13, v16, v27);
  swift_bridgeObjectRelease(0x80000001004A5CD0);

  v18 = v17._countAndFlagsBits == a1 && v17._object == a2;
  if (!v18 && (_stringCompareWithSmolCheck(_:_:expecting:)(v17._countAndFlagsBits, v17._object, a1, a2, 0) & 1) == 0
    || !a4)
  {
    return v17._countAndFlagsBits;
  }
  swift_bridgeObjectRelease(v17._object);
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v19._countAndFlagsBits = a3;
  v19._object = a4;
  String.append(_:)(v19);
  v20 = objc_msgSend(v12, "mainBundle");
  v28._object = (void *)0x80000001004A5CD0;
  v21._countAndFlagsBits = a3;
  v21._object = a4;
  v22.value._countAndFlagsBits = a5;
  v22.value._object = a6;
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  v28._countAndFlagsBits = 0xD000000000000012;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, v22, (NSBundle)v20, v23, v28)._countAndFlagsBits;
  swift_bridgeObjectRelease(0x80000001004A5CD0);

  return countAndFlagsBits;
}

uint64_t sub_1001DDE78(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1001DDEC0(a1, a2, a3, (uint64_t *)&unk_1005D2A50, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPUnknownItem, (uint64_t (*)(void))&FMIPUnknownItem.isAppleAudioAccessory.getter, (void (*)(void))&FMIPUnknownItem.productType.getter);
}

uint64_t sub_1001DDE9C(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1001DDEC0(a1, a2, a3, (uint64_t *)&unk_1005D3AA0, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPItem, (uint64_t (*)(void))&FMIPItem.isAppleAudioAccessory.getter, (void (*)(void))&FMIPItem.productType.getter);
}

uint64_t sub_1001DDEC0(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(void), void (*a7)(void))
{
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(uint64_t *, uint64_t, uint64_t);
  uint64_t *v23;
  uint64_t *v24;
  char v25;
  void (*v26)(uint64_t *, uint64_t);
  uint64_t v27;
  Swift::String v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  Swift::String v39;
  void *v40;
  Swift::String v41;
  uint64_t v42;
  Swift::String v43;
  Swift::String v44;
  Swift::String v45;
  Swift::String v46;
  void *object;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  void (*v51)(void);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;

  v51 = a7;
  v53 = a1;
  v52 = type metadata accessor for FMIPProductType(0);
  v50 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100053F2C(a4);
  v15 = __chkstk_darwin(v14);
  v17 = (uint64_t *)((char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  v19 = (uint64_t *)((char *)&v50 - v18);
  sub_100007464(a3, (uint64_t)&v50 - v18, a4);
  v20 = a5(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v21 + 48);
  if (v22(v19, 1, v20) == 1)
  {
    v23 = v19;
  }
  else
  {
    v25 = a6();
    v26 = *(void (**)(uint64_t *, uint64_t))(v21 + 8);
    v26(v19, v20);
    if ((v25 & 1) == 0)
      goto LABEL_8;
    sub_100007464(a3, (uint64_t)v17, a4);
    if (v22(v17, 1, v20) != 1)
    {
      v51();
      v34 = ((uint64_t (*)(uint64_t *, uint64_t))v26)(v17, v20);
      FMIPProductType.productInformation.getter(&v55, v34);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v13, v52);
      v35 = v57;
      if (v57)
      {
        v36 = v58;
        sub_100029550(&v55, v57);
        v37 = dispatch thunk of FMIPAnyProductInformation.productIdentifier.getter(v35, v36);
        sub_100029574(&v55);
        v38 = v53;
        v55 = v53;
        v56 = a2;
        swift_bridgeObjectRetain(a2);
        v39._countAndFlagsBits = 24415;
        v39._object = (void *)0xE200000000000000;
        String.append(_:)(v39);
        v40 = v56;
        swift_bridgeObjectRetain(v56);
        v41._countAndFlagsBits = 0x53444F50524941;
        v41._object = (void *)0xE700000000000000;
        String.append(_:)(v41);
        swift_bridgeObjectRelease(v40);
        v42 = v55;
        v32 = v56;
        v55 = v38;
        v56 = a2;
        swift_bridgeObjectRetain(a2);
        v43._countAndFlagsBits = 24415;
        v43._object = (void *)0xE200000000000000;
        String.append(_:)(v43);
        v44._countAndFlagsBits = 0x53444F50524941;
        v44._object = (void *)0xE700000000000000;
        String.append(_:)(v44);
        v45._countAndFlagsBits = 95;
        v45._object = (void *)0xE100000000000000;
        String.append(_:)(v45);
        v54 = v37;
        v46._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
        object = v46._object;
        String.append(_:)(v46);
        swift_bridgeObjectRelease(object);
        v48 = v55;
        v49 = v56;
        swift_bridgeObjectRetain(a2);
        v31 = sub_1001DF760(v48, v49, v42, v32, v38, a2);
        swift_bridgeObjectRelease(v49);
        goto LABEL_9;
      }
      v24 = (uint64_t *)&unk_1005E3AC0;
      v23 = &v55;
      goto LABEL_4;
    }
    v23 = v17;
  }
  v24 = a4;
LABEL_4:
  sub_1000051EC((uint64_t)v23, v24);
LABEL_8:
  v27 = v53;
  v55 = v53;
  v56 = a2;
  swift_bridgeObjectRetain(a2);
  v28._countAndFlagsBits = 0x4C55414645445F5FLL;
  v28._object = (void *)0xE900000000000054;
  String.append(_:)(v28);
  v29 = v55;
  v30 = v56;
  swift_bridgeObjectRetain(a2);
  v31 = sub_1001DF760(v27, a2, v29, v30, v27, a2);
  v32 = a2;
  a2 = v30;
LABEL_9:
  swift_bridgeObjectRelease(v32);
  swift_bridgeObjectRelease(a2);
  return v31;
}

uint64_t sub_1001DE23C(uint64_t a1, void *a2)
{
  return sub_1001DE2B0(a1, a2, 0xD000000000000010, (void *)0x80000001004ADC00, 0xD000000000000015, (void *)0x80000001004ADC20);
}

uint64_t sub_1001DE278(uint64_t a1, void *a2)
{
  return sub_1001DE2B0(a1, a2, 0x617A696C61636F4CLL, (void *)0xEC00000031656C62, 0xD000000000000017, (void *)0x80000001004B30E0);
}

uint64_t sub_1001DE2B0(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, void *a6)
{
  void *v12;
  NSString v13;
  id v14;
  void *v15;
  id v16;
  Swift::String v17;
  Swift::String_optional v18;
  Swift::String v19;
  uint64_t countAndFlagsBits;
  Swift::String v22;

  v12 = (void *)objc_opt_self(UIDevice);
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v12, "modelSpecificLocalizedStringKeyForKey:", v13);

  if (v14)
  {
    a1 = static String._unconditionallyBridgeFromObjectiveC(_:)(v14);
    a2 = v15;

  }
  else
  {
    swift_bridgeObjectRetain(a2);
  }
  v16 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v22._object = a6;
  v17._countAndFlagsBits = a1;
  v17._object = a2;
  v18.value._countAndFlagsBits = a3;
  v18.value._object = a4;
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  v22._countAndFlagsBits = a5;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v22)._countAndFlagsBits;
  swift_bridgeObjectRelease(a2);

  return countAndFlagsBits;
}

void sub_1001DE3D0()
{
  NSString v0;
  char v1;

  v0 = String._bridgeToObjectiveC()();
  v1 = MGGetBoolAnswer();

  byte_1005D9E80 = v1;
}

uint64_t type metadata accessor for FMLocalizer()
{
  return objc_opt_self(_TtC6FindMy11FMLocalizer);
}

uint64_t sub_1001DE434(uint64_t a1, void *a2)
{
  uint64_t v4;
  Swift::String v5;
  Swift::String v6;
  void *v7;
  uint64_t v8;
  Swift::String v9;
  id v10;
  Swift::String v11;
  Swift::String v12;
  uint64_t countAndFlagsBits;
  Swift::String v15;

  if (qword_1005D1CB8 != -1)
    swift_once(&qword_1005D1CB8, sub_1001DE3D0);
  if (byte_1005D9E80)
    v4 = 1312902231;
  else
    v4 = 1229343063;
  swift_bridgeObjectRetain(a2);
  v5._countAndFlagsBits = 95;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  swift_bridgeObjectRetain(a2);
  v6._countAndFlagsBits = v4;
  v6._object = (void *)0xE400000000000000;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(a2);
  swift_bridgeObjectRelease(0xE400000000000000);
  v8 = a1;
  v7 = a2;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease(0xE000000000000000);
  v9._countAndFlagsBits = a1;
  v9._object = a2;
  String.append(_:)(v9);
  v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v15._object = (void *)0x80000001004B3440;
  v11._countAndFlagsBits = v8;
  v11._object = a2;
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  v15._countAndFlagsBits = 0xD000000000000016;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v15)._countAndFlagsBits;
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(0x80000001004B3440);

  return countAndFlagsBits;
}

uint64_t sub_1001DE5C0(uint64_t a1, void *a2)
{
  void *v4;
  NSString v5;
  id v6;
  void *v7;
  Swift::String v8;
  id v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t countAndFlagsBits;
  Swift::String v14;

  v4 = (void *)objc_opt_self(UIDevice);
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v4, "modelSpecificLocalizedStringKeyForKey:", v5);

  if (v6)
  {
    a1 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
    a2 = v7;

  }
  else
  {
    swift_bridgeObjectRetain(a2);
  }
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v8._countAndFlagsBits = a1;
  v8._object = a2;
  String.append(_:)(v8);
  v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v14._object = (void *)0x80000001004A5CD0;
  v10._countAndFlagsBits = a1;
  v10._object = a2;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v14._countAndFlagsBits = 0xD000000000000012;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v14)._countAndFlagsBits;
  swift_bridgeObjectRelease(a2);
  swift_bridgeObjectRelease(0x80000001004A5CD0);

  return countAndFlagsBits;
}

uint64_t sub_1001DE71C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  Swift::String v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v6 = type metadata accessor for FMIPDevice(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007464(a3, (uint64_t)v12, &qword_1005D6710);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
    v13 = 0xE900000000000054;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    sub_1001DE94C();
    v13 = v14;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  v15 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
  v16 = swift_allocObject(v15, 112, 7);
  *(_OWORD *)(v16 + 16) = xmmword_100481730;
  *(_QWORD *)(v16 + 56) = &type metadata for String;
  v17 = sub_100071E88();
  *(_QWORD *)(v16 + 64) = v17;
  *(_QWORD *)(v16 + 32) = a1;
  *(_QWORD *)(v16 + 40) = a2;
  v18 = String.uppercased()();
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRelease(v13);
  *(_QWORD *)(v16 + 96) = &type metadata for String;
  *(_QWORD *)(v16 + 104) = v17;
  *(Swift::String *)(v16 + 72) = v18;
  v19 = String.init(format:_:)(0x40255F5F4025, 0xE600000000000000, v16);
  v20 = swift_allocObject(v15, 72, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100481740;
  *(_QWORD *)(v20 + 56) = &type metadata for String;
  *(_QWORD *)(v20 + 64) = v17;
  *(_QWORD *)(v20 + 32) = a1;
  *(_QWORD *)(v20 + 40) = a2;
  swift_bridgeObjectRetain(a2);
  String.init(format:_:)(0x414645445F5F4025, 0xEB00000000544C55, v20);
  return v19;
}

uint64_t sub_1001DE94C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Swift::String v26;
  __n128 v27;
  uint64_t v29;
  unint64_t v30;
  Swift::String v31;

  v0 = type metadata accessor for FMIPDeviceState(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v2);
  v7 = (char *)&v29 - v6;
  v8 = FMIPDevice.state.getter(v5);
  static FMIPDeviceState.isMacOS.getter(v8);
  v9 = sub_1001DFB00();
  v10 = dispatch thunk of SetAlgebra.isSuperset(of:)(v4, v0, v9);
  v11 = *(void (**)(char *, uint64_t))(v1 + 8);
  v11(v4, v0);
  v12 = ((uint64_t (*)(char *, uint64_t))v11)(v7, v0);
  if ((v10 & 1) != 0)
    return 4407629;
  v13 = 0x4843544157;
  v14 = FMIPDevice.category.getter(v12);
  v16 = v15;
  if (v14 == 0x6863746157 && v15 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease(0xE500000000000000);
  }
  else
  {
    v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, 0x6863746157, 0xE500000000000000, 0);
    swift_bridgeObjectRelease(v16);
    if ((v17 & 1) == 0)
    {
      v13 = 0x53444F50524941;
      FMIPDevice.rawModel.getter(v18);
      v20 = v19;
      v21 = String.uppercased()();
      swift_bridgeObjectRelease(v20);
      v31 = v21;
      v29 = 0x53444F50524941;
      v30 = 0xE700000000000000;
      v22 = sub_1000517B8();
      LOBYTE(v20) = StringProtocol.contains<A>(_:)(&v29, &type metadata for String, &type metadata for String, v22, v22);
      swift_bridgeObjectRelease(v21._object);
      if ((v20 & 1) == 0)
      {
        v13 = 0x54454C4C4157;
        FMIPDevice.rawModel.getter(v23);
        v25 = v24;
        v26 = String.uppercased()();
        swift_bridgeObjectRelease(v25);
        v31 = v26;
        v29 = 0x54454C4C4157;
        v30 = 0xE600000000000000;
        LOBYTE(v25) = StringProtocol.contains<A>(_:)(&v29, &type metadata for String, &type metadata for String, v22, v22);
        v27 = swift_bridgeObjectRelease(v26._object);
        if ((v25 & 1) == 0)
        {
          if ((FMIPDevice.isLocalFindable.getter(v27) & 1) != 0)
            return 0x4C49434E4550;
          else
            return FMIPDevice.modelDisplayName.getter();
        }
      }
    }
  }
  return v13;
}

uint64_t type metadata accessor for FMLocalizerB389()
{
  return objc_opt_self(_TtC6FindMy15FMLocalizerB389);
}

uint64_t sub_1001DEBDC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001DEE80(a1, a2, a3, a4, 0xD000000000000010, (void *)0x80000001004ADC00, 0xD000000000000015, (void *)0x80000001004ADC20);
}

uint64_t type metadata accessor for FMLocalizerHawkeye()
{
  return objc_opt_self(_TtC6FindMy18FMLocalizerHawkeye);
}

uint64_t sub_1001DEC38(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001DEE80(a1, a2, a3, a4, 0xD000000000000013, (void *)0x80000001004A5640, 0xD000000000000018, (void *)0x80000001004A5660);
}

uint64_t sub_1001DEC70(uint64_t a1, void *a2)
{
  uint64_t v4;
  Swift::String v5;
  Swift::String v6;
  id v7;
  Swift::String_optional v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t countAndFlagsBits;
  void *v13;
  Swift::String v14;

  if (qword_1005D1CB8 != -1)
    swift_once(&qword_1005D1CB8, sub_1001DE3D0);
  if (byte_1005D9E80)
    v4 = 1312902231;
  else
    v4 = 1229343063;
  v13 = a2;
  swift_bridgeObjectRetain(a2);
  v5._countAndFlagsBits = 95;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  swift_bridgeObjectRetain(a2);
  v6._countAndFlagsBits = v4;
  v6._object = (void *)0xE400000000000000;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(a2);
  swift_bridgeObjectRelease(0xE400000000000000);
  v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v14._countAndFlagsBits = 0xD000000000000017;
  v14._object = (void *)0x80000001004AB7C0;
  v8.value._object = (void *)0x80000001004AB7A0;
  v9._countAndFlagsBits = a1;
  v9._object = a2;
  v8.value._countAndFlagsBits = 0xD000000000000012;
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v8, (NSBundle)v7, v10, v14)._countAndFlagsBits;
  swift_bridgeObjectRelease(v13);

  return countAndFlagsBits;
}

uint64_t type metadata accessor for FMLocalizerLocalFindable()
{
  return objc_opt_self(_TtC6FindMy24FMLocalizerLocalFindable);
}

uint64_t sub_1001DEDEC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001DEE80(a1, a2, a3, a4, 0xD000000000000010, (void *)0x80000001004B3400, 0xD000000000000015, (void *)0x80000001004B3420);
}

uint64_t type metadata accessor for FMLocalizerRedStripe()
{
  return objc_opt_self(_TtC6FindMy20FMLocalizerRedStripe);
}

uint64_t sub_1001DEE48(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_1001DEE80(a1, a2, a3, a4, 0xD000000000000019, (void *)0x80000001004ABB60, 0xD00000000000001ALL, (void *)0x80000001004ABB80);
}

uint64_t sub_1001DEE80(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, void *a8)
{
  id v14;
  Swift::String v15;
  Swift::String_optional v16;
  Swift::String v17;
  uint64_t countAndFlagsBits;
  Swift::String v20;

  v14 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v20._object = a8;
  v15._countAndFlagsBits = a1;
  v15._object = a2;
  v16.value._countAndFlagsBits = a5;
  v16.value._object = a6;
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v20._countAndFlagsBits = a7;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, (NSBundle)v14, v17, v20)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_1001DEF30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  Swift::String v14;
  unint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  __n128 v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  Swift::String v26;

  v2 = type metadata accessor for FMIPDevice(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FMLostModeTrackable(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E5A64(a1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
  {
    v9 = 0x54454C4C4157;
    v10 = (uint64_t)&v8[*(int *)(sub_100053F2C(&qword_1005D2F90) + 48)];
    v11 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    FMIPDevice.rawModel.getter(v11);
    v13 = v12;
    v14 = String.uppercased()();
    swift_bridgeObjectRelease(v13);
    v26 = v14;
    v24 = 0x54454C4C4157;
    v25 = 0xE600000000000000;
    v15 = sub_1000517B8();
    LOBYTE(v13) = StringProtocol.contains<A>(_:)(&v24, &type metadata for String, &type metadata for String, v15, v15);
    v17 = swift_bridgeObjectRelease(v14._object);
    if ((v13 & 1) != 0)
      goto LABEL_3;
    v9 = 0x53444F50524941;
    FMIPDevice.rawModel.getter(v16);
    v20 = v19;
    v21 = String.uppercased()();
    swift_bridgeObjectRelease(v20);
    v26 = v21;
    v24 = 0x53444F50524941;
    v25 = 0xE700000000000000;
    LOBYTE(v20) = StringProtocol.contains<A>(_:)(&v24, &type metadata for String, &type metadata for String, v15, v15);
    v17 = swift_bridgeObjectRelease(v21._object);
    if ((v20 & 1) != 0)
    {
LABEL_3:
      (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v17);
      sub_1000051EC(v10, (uint64_t *)&unk_1005D3AA0);
    }
    else if ((FMIPDevice.isConsideredAccessory.getter(v17) & 1) != 0)
    {
      v23 = FMIPDevice.isLocalFindable.getter(v22);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      sub_1000051EC(v10, (uint64_t *)&unk_1005D3AA0);
      if ((v23 & 1) != 0)
        return 0x4C49434E4550;
      else
        return 1296389193;
    }
    else
    {
      v9 = sub_1001DE94C();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      sub_1000051EC(v10, (uint64_t *)&unk_1005D3AA0);
    }
  }
  else
  {
    v9 = 1296389193;
    sub_1000E5AA8((uint64_t)v8);
  }
  return v9;
}

uint64_t sub_1001DF20C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t v8;
  void *v9;
  void *object;
  id v11;
  Swift::String_optional v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  Swift::String_optional v22;
  Swift::String v23;
  Swift::String v24;
  uint64_t countAndFlagsBits;
  id v27;
  Swift::String v28;
  Swift::String v29;

  v4 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
  v5 = swift_allocObject(v4, 112, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100481730;
  *(_QWORD *)(v5 + 56) = &type metadata for String;
  v6 = sub_100071E88();
  *(_QWORD *)(v5 + 64) = v6;
  *(_QWORD *)(v5 + 32) = a1;
  *(_QWORD *)(v5 + 40) = a2;
  v7 = String.uppercased()();
  *(_QWORD *)(v5 + 96) = &type metadata for String;
  *(_QWORD *)(v5 + 104) = v6;
  *(Swift::String *)(v5 + 72) = v7;
  swift_bridgeObjectRetain(a2);
  v8 = String.init(format:_:)(0x40255F5F4025, 0xE600000000000000, v5);
  object = v9;
  v27 = (id)objc_opt_self(NSBundle);
  v11 = objc_msgSend(v27, "mainBundle");
  v28._countAndFlagsBits = 0xD000000000000018;
  v28._object = (void *)0x80000001004A5660;
  v12.value._object = (void *)0x80000001004A5640;
  v13._countAndFlagsBits = v8;
  v13._object = object;
  v12.value._countAndFlagsBits = 0xD000000000000013;
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, v12, (NSBundle)v11, v14, v28);

  if (v15._countAndFlagsBits == v8 && v15._object == object)
  {
    swift_bridgeObjectRelease(object);
LABEL_5:
    swift_bridgeObjectRelease(object);
    v17 = swift_allocObject(v4, 72, 7);
    *(_OWORD *)(v17 + 16) = xmmword_100481740;
    *(_QWORD *)(v17 + 56) = &type metadata for String;
    *(_QWORD *)(v17 + 64) = v6;
    *(_QWORD *)(v17 + 32) = a1;
    *(_QWORD *)(v17 + 40) = a2;
    swift_bridgeObjectRetain(a2);
    v18 = String.init(format:_:)(0x414645445F5F4025, 0xEB00000000544C55, v17);
    v20 = v19;
    v21 = objc_msgSend(v27, "mainBundle");
    v29._countAndFlagsBits = 0xD000000000000018;
    v29._object = (void *)0x80000001004A5660;
    v22.value._object = (void *)0x80000001004A5640;
    v23._countAndFlagsBits = v18;
    v23._object = v20;
    v22.value._countAndFlagsBits = 0xD000000000000013;
    v24._countAndFlagsBits = 0;
    v24._object = (void *)0xE000000000000000;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v23, v22, (NSBundle)v21, v24, v29)._countAndFlagsBits;
    swift_bridgeObjectRelease(v20);

    return countAndFlagsBits;
  }
  v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v15._countAndFlagsBits, v15._object, v8, object, 0);
  swift_bridgeObjectRelease(object);
  object = v15._object;
  if ((v16 & 1) != 0)
    goto LABEL_5;
  return v15._countAndFlagsBits;
}

void sub_1001DF49C(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::String v18;
  unint64_t v19;
  __n128 v20;
  Swift::String v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Swift::String v26;
  uint64_t countAndFlagsBits;
  void *object;
  Swift::String v29;
  uint64_t v30;
  void *v31;
  Swift::String v32;
  Swift::String v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[2];
  Swift::String v37;

  v8 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FMIPDevice(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007464(a3, (uint64_t)v10, &qword_1005D6710);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1000051EC((uint64_t)v10, &qword_1005D6710);
LABEL_6:
    v37._countAndFlagsBits = a1;
    v37._object = a2;
    swift_bridgeObjectRetain(a2);
    v32._countAndFlagsBits = 0x4C55414645445F5FLL;
    v32._object = (void *)0xE900000000000054;
    String.append(_:)(v32);
    countAndFlagsBits = v37._countAndFlagsBits;
    object = v37._object;
    v37._countAndFlagsBits = a1;
    v37._object = a2;
    swift_bridgeObjectRetain(a2);
    v33._countAndFlagsBits = 0x4C55414645445F5FLL;
    v33._object = (void *)0xE900000000000054;
    String.append(_:)(v33);
    v30 = v37._countAndFlagsBits;
    v31 = v37._object;
    goto LABEL_7;
  }
  v15 = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  FMIPDevice.rawModel.getter(v15);
  v17 = v16;
  v18 = String.uppercased()();
  swift_bridgeObjectRelease(v17);
  v37 = v18;
  v36[0] = 0x53444F50524941;
  v36[1] = 0xE700000000000000;
  v19 = sub_1000517B8();
  LOBYTE(v17) = StringProtocol.contains<A>(_:)(v36, &type metadata for String, &type metadata for String, v19, v19);
  v20 = swift_bridgeObjectRelease(v18._object);
  if ((v17 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v14, v11, v20);
    goto LABEL_6;
  }
  v37._countAndFlagsBits = a1;
  v37._object = a2;
  swift_bridgeObjectRetain(a2);
  v21._countAndFlagsBits = 24415;
  v21._object = (void *)0xE200000000000000;
  String.append(_:)(v21);
  v22 = v37._object;
  v35 = v37._countAndFlagsBits;
  FMIPDevice.rawModel.getter(v23);
  v25 = v24;
  v26 = String.uppercased()();
  swift_bridgeObjectRelease(v25);
  v37._countAndFlagsBits = v35;
  v37._object = v22;
  swift_bridgeObjectRetain(v22);
  String.append(_:)(v26);
  swift_bridgeObjectRelease(v22);
  swift_bridgeObjectRelease(v26._object);
  countAndFlagsBits = v37._countAndFlagsBits;
  object = v37._object;
  v37._countAndFlagsBits = a1;
  v37._object = a2;
  swift_bridgeObjectRetain(a2);
  v29._object = (void *)0xE900000000000053;
  v29._countAndFlagsBits = 0x444F505249415F5FLL;
  String.append(_:)(v29);
  v30 = v37._countAndFlagsBits;
  v31 = v37._object;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
LABEL_7:
  swift_bridgeObjectRetain(a2);
  *a4 = countAndFlagsBits;
  a4[1] = (uint64_t)object;
  a4[2] = v30;
  a4[3] = (uint64_t)v31;
  a4[4] = a1;
  a4[5] = (uint64_t)a2;
}

uint64_t sub_1001DF760(uint64_t a1, void *object, uint64_t a3, void *a4, uint64_t a5, void *a6)
{
  Swift::String v10;
  void *v11;
  id v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  uint64_t countAndFlagsBits;
  char v18;
  Swift::String v19;
  id v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  char v24;
  id v25;
  Swift::String v26;
  uint64_t v27;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;
  Swift::String v32;

  v29._countAndFlagsBits = a5;
  v29._object = a6;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v10._countAndFlagsBits = a1;
  v10._object = object;
  String.append(_:)(v10);
  v11 = (void *)objc_opt_self(NSBundle);
  v12 = objc_msgSend(v11, "mainBundle");
  v30._object = (void *)0x80000001004A5CD0;
  v13._countAndFlagsBits = a1;
  v13._object = object;
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v30._countAndFlagsBits = 0xD000000000000012;
  v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v30);
  countAndFlagsBits = v15._countAndFlagsBits;
  swift_bridgeObjectRelease(0x80000001004A5CD0);

  if (v15._countAndFlagsBits != a1 || v15._object != object)
  {
    v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v15._countAndFlagsBits, v15._object, a1, object, 0);
    object = v15._object;
    if ((v18 & 1) == 0)
      return countAndFlagsBits;
  }
  swift_bridgeObjectRelease(object);
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v19._countAndFlagsBits = a3;
  v19._object = a4;
  String.append(_:)(v19);
  v20 = objc_msgSend(v11, "mainBundle");
  v31._object = (void *)0x80000001004A5CD0;
  v21._countAndFlagsBits = a3;
  v21._object = a4;
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  v31._countAndFlagsBits = 0xD000000000000012;
  v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)v20, v22, v31);
  countAndFlagsBits = v23._countAndFlagsBits;
  swift_bridgeObjectRelease(0x80000001004A5CD0);

  if (v23._countAndFlagsBits != a3 || v23._object != a4)
  {
    v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v23._countAndFlagsBits, v23._object, a3, a4, 0);
    a4 = v23._object;
    if ((v24 & 1) == 0)
      return countAndFlagsBits;
  }
  swift_bridgeObjectRelease(a4);
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  String.append(_:)(v29);
  v25 = objc_msgSend(v11, "mainBundle");
  v32._object = (void *)0x80000001004A5CD0;
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  v32._countAndFlagsBits = 0xD000000000000012;
  v27 = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, (Swift::String_optional)0, (NSBundle)v25, v26, v32)._countAndFlagsBits;
  swift_bridgeObjectRelease(0x80000001004A5CD0);

  return v27;
}

uint64_t sub_1001DFA14(uint64_t a1, void *a2)
{
  Swift::String v4;
  id v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t countAndFlagsBits;
  Swift::String v10;

  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v4._countAndFlagsBits = a1;
  v4._object = a2;
  String.append(_:)(v4);
  v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v10._object = (void *)0x80000001004A5CD0;
  v6._countAndFlagsBits = a1;
  v6._object = a2;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v10._countAndFlagsBits = 0xD000000000000012;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v10)._countAndFlagsBits;
  swift_bridgeObjectRelease(0x80000001004A5CD0);

  return countAndFlagsBits;
}

unint64_t sub_1001DFB00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D4158;
  if (!qword_1005D4158)
  {
    v1 = type metadata accessor for FMIPDeviceState(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for FMIPDeviceState, v1);
    atomic_store(result, (unint64_t *)&qword_1005D4158);
  }
  return result;
}

ValueMetadata *type metadata accessor for FMMapMode.Mode()
{
  return &type metadata for FMMapMode.Mode;
}

uint64_t initializeBufferWithCopyOfBuffer for FMMapMode(uint64_t result, __int16 *a2)
{
  __int16 v2;

  v2 = *a2;
  *(_BYTE *)(result + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for FMMapMode(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  unsigned int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      v2 = *((unsigned __int8 *)a1 + 3);
      if (*((_BYTE *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
    }
    else
    {
      v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3))
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
    }
  }
  v4 = *(unsigned __int8 *)a1;
  v5 = v4 >= 2;
  v6 = v4 - 2;
  if (!v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for FMMapMode(uint64_t result, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;

  if ((a3 + 33554177) >> 24)
    v3 = 1;
  else
    v3 = 2;
  if (a3 <= 0xFE)
    v3 = 0;
  if (a2 > 0xFE)
  {
    *(_WORD *)result = a2 - 255;
    *(_BYTE *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2)
        *(_WORD *)(result + 3) = v4;
      else
        *(_BYTE *)(result + 3) = v4;
    }
  }
  else
  {
    if (!v3)
      goto LABEL_10;
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2)
        return result;
LABEL_16:
      *(_BYTE *)result = a2 + 1;
      return result;
    }
    *(_BYTE *)(result + 3) = 0;
    if (a2)
      goto LABEL_16;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMMapMode()
{
  return &type metadata for FMMapMode;
}

uint64_t sub_1001DFC84(char a1)
{
  id v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  Swift::String v5;
  uint64_t countAndFlagsBits;
  unint64_t v8;

  if ((a1 & 1) != 0)
  {
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(0xE000000000000000);
    v1 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v4 = 0xD00000000000001ALL;
    v2 = 0xD00000000000002CLL;
    v8 = 0x80000001004AA9A0;
    v3 = 0x80000001004AA980;
  }
  else
  {
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(0xE000000000000000);
    v1 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v2 = 0xD00000000000002ALL;
    v8 = 0x80000001004B3540;
    v3 = 0x80000001004B3520;
    v4 = 0xD000000000000018;
  }
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v4, (Swift::String_optional)0, (NSBundle)v1, v5, *(Swift::String *)&v2)._countAndFlagsBits;

  return countAndFlagsBits;
}

void sub_1001DFDC0()
{
  id v0;
  Swift::String v1;
  Swift::String v2;
  Swift::String v3;
  Swift::String v4;

  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v4._countAndFlagsBits = 0xD00000000000002FLL;
  v4._object = (void *)0x80000001004B34A0;
  v1._object = (void *)0x80000001004B3480;
  v1._countAndFlagsBits = 0xD00000000000001DLL;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_1005F5190 = (__int128)v3;
}

void sub_1001DFE90()
{
  id v0;
  Swift::String v1;
  Swift::String v2;
  Swift::String v3;
  Swift::String v4;

  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v4._countAndFlagsBits = 0xD00000000000002ELL;
  v4._object = (void *)0x80000001004B34F0;
  v1._object = (void *)0x80000001004B34D0;
  v1._countAndFlagsBits = 0xD00000000000001CLL;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v3 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v4);

  xmmword_1005F51A0 = (__int128)v3;
}

uint64_t sub_1001DFF60(_QWORD *a1, unsigned int a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  char v18;

  v5 = sub_100053F2C(&qword_1005DA1E0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_100029550(a1, v9);
  v11 = sub_1001E16B0();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for FMMapMode.CodingKeys, &type metadata for FMMapMode.CodingKeys, v11, v9, v10);
  v18 = a2 & 1;
  v17 = 0;
  v12 = sub_1001E0E8C();
  KeyedEncodingContainer.encode<A>(_:forKey:)(&v18, &v17, v5, &type metadata for FMMapMode.Mode, v12);
  if (!v2)
  {
    v16 = 1;
    KeyedEncodingContainer.encode(_:forKey:)((a2 >> 8) & 1, &v16, v5);
    v15 = 2;
    KeyedEncodingContainer.encode(_:forKey:)(HIWORD(a2) & 1, &v15, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1001E00B4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x61725473776F6873;
  if (*v0 != 1)
    v1 = 0x62614C73776F6873;
  if (*v0)
    return v1;
  else
    return 1701080941;
}

uint64_t sub_1001E0118@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001E1398(a1, a2);
  *a3 = result;
  return result;
}

void sub_1001E013C(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1001E0148(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001E16B0();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E0170(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001E16B0();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001E0198@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1001E150C(a1);
  if (!v2)
  {
    *a2 = result & 1;
    a2[1] = BYTE1(result) & 1;
    a2[2] = BYTE2(result) & 1;
  }
  return result;
}

uint64_t sub_1001E01D4(_QWORD *a1)
{
  unsigned __int8 *v1;
  int v2;
  int v3;

  if (v1[2])
    v2 = 0x10000;
  else
    v2 = 0;
  if (v1[1])
    v3 = 256;
  else
    v3 = 0;
  return sub_1001DFF60(a1, v3 | *v1 | v2);
}

uint64_t sub_1001E0214(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;

  if (a1[2])
    v2 = 0x10000;
  else
    v2 = 0;
  if (a1[1])
    v3 = 256;
  else
    v3 = 0;
  v4 = v3 | *a1 | v2;
  if (a2[2])
    v5 = 0x10000;
  else
    v5 = 0;
  if (a2[1])
    v6 = 256;
  else
    v6 = 0;
  return sub_1001E0F14(v4, v6 | *a2 | v5);
}

uint64_t sub_1001E0268()
{
  uint64_t result;

  result = _stringCompareWithSmolCheck(_:_:expecting:)(0x74696C6C65746173, 0xE900000000000065, 0x65726F6C707865, 0xE700000000000000, 0);
  word_1005F51B0 = 1;
  byte_1005F51B2 = result & 1;
  return result;
}

uint64_t sub_1001E02C4(char *a1, char *a2)
{
  return sub_1001965C8(*a1, *a2);
}

Swift::Int sub_1001E02D0()
{
  unsigned __int8 *v0;
  int v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  if (v1)
    v2 = 0x74696C6C65746173;
  else
    v2 = 0x65726F6C707865;
  if (v1)
    v3 = 0xE900000000000065;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1001E0354(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0x74696C6C65746173;
  else
    v2 = 0x65726F6C707865;
  if (*v1)
    v3 = 0xE900000000000065;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_1001E03B4(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2)
    v3 = 0x74696C6C65746173;
  else
    v3 = 0x65726F6C707865;
  if (v2)
    v4 = 0xE900000000000065;
  else
    v4 = 0xE700000000000000;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_1001E0434@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10053FBE0, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_1001E0490(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x65726F6C707865;
  if (*v1)
    v2 = 0x74696C6C65746173;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xE900000000000065;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1001E04D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1001E1344();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t sub_1001E0530(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1001E1344();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

unint64_t sub_1001E0580()
{
  unint64_t result;

  result = qword_1005DA1A0;
  if (!qword_1005DA1A0)
  {
    result = swift_getWitnessTable(&unk_1004872EC, &type metadata for FMMapMode.Mode);
    atomic_store(result, (unint64_t *)&qword_1005DA1A0);
  }
  return result;
}

uint64_t sub_1001E05C4(int a1)
{
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  Swift::String v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _BYTE v12[9];
  unint64_t v13;

  v12[8] = 0;
  v13 = 0xE000000000000000;
  _StringGuts.grow(_:)(31);
  v2._countAndFlagsBits = 0x203A65646F4DLL;
  v2._object = (void *)0xE600000000000000;
  String.append(_:)(v2);
  *(_QWORD *)v12 = a1 & 1;
  _print_unlocked<A, B>(_:_:)(v12, &v12[1], &type metadata for FMMapMode.Mode, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v3._countAndFlagsBits = 0x6369666661725420;
  v3._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v3);
  if ((a1 & 0x100) != 0)
    v4 = 1702195828;
  else
    v4 = 0x65736C6166;
  if ((a1 & 0x100) != 0)
    v5 = 0xE400000000000000;
  else
    v5 = 0xE500000000000000;
  v6 = v5;
  String.append(_:)(*(Swift::String *)&v4);
  swift_bridgeObjectRelease(v5);
  v7._countAndFlagsBits = 0x3A736C6562614C20;
  v7._object = (void *)0xE900000000000020;
  String.append(_:)(v7);
  if ((a1 & 0x10000) != 0)
    v8 = 1702195828;
  else
    v8 = 0x65736C6166;
  if ((a1 & 0x10000) != 0)
    v9 = 0xE400000000000000;
  else
    v9 = 0xE500000000000000;
  v10 = v9;
  String.append(_:)(*(Swift::String *)&v8);
  swift_bridgeObjectRelease(v9);
  return *(_QWORD *)&v12[1];
}

uint64_t sub_1001E0700()
{
  unsigned __int8 *v0;
  int v1;
  int v2;

  if (v0[2])
    v1 = 0x10000;
  else
    v1 = 0;
  if (v0[1])
    v2 = 256;
  else
    v2 = 0;
  return sub_1001E05C4(v2 | *v0 | v1);
}

uint64_t sub_1001E0730(_QWORD *a1, unsigned __int16 a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  char v15;
  char v16;

  v5 = a2 & 1;
  v6 = sub_100053F2C(&qword_1005DA200);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v11 = a1[4];
  sub_100029550(a1, v10);
  v12 = sub_1001E1A58();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for FMMapMode.Options.CodingKeys, &type metadata for FMMapMode.Options.CodingKeys, v12, v10, v11);
  v16 = 0;
  KeyedEncodingContainer.encode(_:forKey:)(v5, &v16, v6);
  if (!v2)
  {
    v15 = 1;
    KeyedEncodingContainer.encode(_:forKey:)(HIBYTE(a2) & 1, &v15, v6);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1001E0850()
{
  _BYTE *v0;

  if (*v0)
    return 0x62614C73776F6873;
  else
    return 0x61725473776F6873;
}

uint64_t sub_1001E089C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1001E1A9C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1001E08C0(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1001E08CC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001E1A58();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001E08F4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1001E1A58();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001E091C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1001E1BBC(a1);
  if (!v2)
  {
    *a2 = result & 1;
    a2[1] = BYTE1(result) & 1;
  }
  return result;
}

uint64_t sub_1001E0950(_QWORD *a1)
{
  unsigned __int8 *v1;
  __int16 v2;

  if (v1[1])
    v2 = 256;
  else
    v2 = 0;
  return sub_1001E0730(a1, v2 | *v1);
}

double sub_1001E097C(void *a1, char a2, int a3)
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  Class v18;
  NSString v19;
  double result;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  Class isa;
  NSString v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  Class v35;
  NSString v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100056D88(v6, (uint64_t)qword_1005F5748);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v38 = v11;
    *(_DWORD *)v10 = 136446210;
    v12 = sub_1001E05C4(a3 & 0x10101);
    v14 = v13;
    v37 = sub_100056DA0(v12, v13, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
    swift_bridgeObjectRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "FMMapMode: Save to UserDefaults (%{public}s)", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }

  if ((a2 & 1) != 0)
  {
    LOBYTE(v38) = a3 & 1;
    v15 = type metadata accessor for JSONEncoder(0);
    swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
    v16 = JSONEncoder.init()();
    v17 = sub_1001E0E8C();
    v21 = dispatch thunk of JSONEncoder.encode<A>(_:)(&v38, &type metadata for FMMapMode.Mode, v17);
    v23 = v22;
    swift_release(v16);
    isa = Data._bridgeToObjectiveC()().super.isa;
    v25 = String._bridgeToObjectiveC()();
    objc_msgSend(a1, "setValue:forKey:", isa, v25);

    sub_100027BDC(v21, v23);
    v38 = 0;
    v39 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v39);
    v38 = 0xD000000000000012;
    v39 = 0x80000001004B3460;
    if ((a3 & 1) != 0)
      v26 = 0x74696C6C65746173;
    else
      v26 = 0x65726F6C707865;
    if ((a3 & 1) != 0)
      v27 = 0xE900000000000065;
    else
      v27 = 0xE700000000000000;
    v28 = v27;
    String.append(_:)(*(Swift::String *)&v26);
    swift_bridgeObjectRelease(v27);
    v29 = v39;
    LOBYTE(v38) = BYTE1(a3) & 1;
    BYTE1(v38) = BYTE2(a3) & 1;
    swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
    v30 = JSONEncoder.init()();
    v31 = sub_1001E0ED0();
    v32 = dispatch thunk of JSONEncoder.encode<A>(_:)(&v38, &type metadata for FMMapMode.Options, v31);
    v34 = v33;
    swift_release(v30);
    v35 = Data._bridgeToObjectiveC()().super.isa;
    v36 = String._bridgeToObjectiveC()();
    objc_msgSend(a1, "setValue:forKey:", v35, v36);

    sub_100027BDC(v32, v34);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v29).n128_u64[0];
  }
  else
  {
    v18 = UInt._bridgeToObjectiveC()().super.super.isa;
    v19 = String._bridgeToObjectiveC()();
    objc_msgSend(a1, "setObject:forKey:", v18, v19);

  }
  return result;
}

void sub_1001E0D90()
{
  void *v0;
  NSString v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "dataForKey:", v1);

  if (v2)
  {
    v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v5 = v4;

    v6 = type metadata accessor for JSONDecoder(0);
    swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
    v7 = JSONDecoder.init()();
    v8 = sub_1001E1300();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)(&v9, &type metadata for FMMapMode.Options, v3, v5, &type metadata for FMMapMode.Options, v8);
    sub_100027BDC(v3, v5);
    swift_release(v7);
  }
}

unint64_t sub_1001E0E8C()
{
  unint64_t result;

  result = qword_1005DA1A8;
  if (!qword_1005DA1A8)
  {
    result = swift_getWitnessTable(&unk_100487224, &type metadata for FMMapMode.Mode);
    atomic_store(result, (unint64_t *)&qword_1005DA1A8);
  }
  return result;
}

unint64_t sub_1001E0ED0()
{
  unint64_t result;

  result = qword_1005DA1B0;
  if (!qword_1005DA1B0)
  {
    result = swift_getWitnessTable(&unk_100487480, &type metadata for FMMapMode.Options);
    atomic_store(result, (unint64_t *)&qword_1005DA1B0);
  }
  return result;
}

uint64_t sub_1001E0F14(int a1, int a2)
{
  BOOL v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  char v10;

  v4 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v5 = 0x74696C6C65746173;
  else
    v5 = 0x65726F6C707865;
  if (v4)
    v6 = 0xE700000000000000;
  else
    v6 = 0xE900000000000065;
  if ((a2 & 1) != 0)
    v7 = 0x74696C6C65746173;
  else
    v7 = 0x65726F6C707865;
  if ((a2 & 1) != 0)
    v8 = 0xE900000000000065;
  else
    v8 = 0xE700000000000000;
  if (v5 == v7 && v6 == v8)
  {
    swift_bridgeObjectRelease_n(v6, 2);
    if (((a1 ^ a2) & 0x100) != 0)
      return 0;
    return ((a1 & 0x10000) == 0) ^ ((a2 & 0x10000u) >> 16);
  }
  v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, v7, v8, 0);
  swift_bridgeObjectRelease(v6);
  swift_bridgeObjectRelease(v8);
  result = 0;
  if (((a1 ^ a2) & 0x100) == 0 && (v10 & 1) != 0)
    return ((a1 & 0x10000) == 0) ^ ((a2 & 0x10000u) >> 16);
  return result;
}

uint64_t sub_1001E0FF8(char a1)
{
  int v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  Swift::String v11;
  unint64_t v12;
  __int16 v13;
  __int16 v14;
  int v15;
  int v16;
  int v17;
  char v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v2 = a1 & 1;
  v3 = (void *)0xE900000000000065;
  v4 = 0x74696C6C65746173;
  v5 = type metadata accessor for Logger(0);
  v6 = sub_100056D88(v5, (uint64_t)qword_1005F5748);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    *(_DWORD *)v9 = 136446210;
    v23 = v10;
    if (v2)
    {
      v3 = (void *)0xE900000000000065;
    }
    else
    {
      v4 = 0x65726F6C707865;
      v3 = (void *)0xE700000000000000;
    }
    v21 = sub_100056DA0(v4, (unint64_t)v3, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22);
    swift_bridgeObjectRelease(v3);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "FMMapMode: Load with Mode (%{public}s) from UserDefaults", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

  }
  else
  {

    if (!v2)
    {
      v4 = 0x65726F6C707865;
      v3 = (void *)0xE700000000000000;
    }
  }
  v23 = 0;
  v24 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v24);
  v23 = 0xD000000000000012;
  v24 = 0x80000001004B3460;
  v11._countAndFlagsBits = v4;
  v11._object = v3;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(v3);
  v12 = v24;
  sub_1001E0D90();
  v14 = v13;
  swift_bridgeObjectRelease(v12);
  if (v14 == 2)
  {
    v15 = 0;
LABEL_16:
    v17 = 0x10000;
    return v15 | v17 | v2;
  }
  v16 = v14 & 1;
  if ((v14 & 0x100) != 0)
  {
LABEL_15:
    v15 = v16 << 8;
    goto LABEL_16;
  }
  if (!v2)
  {
    swift_bridgeObjectRelease(0xE700000000000000);
    goto LABEL_15;
  }
  v19 = _stringCompareWithSmolCheck(_:_:expecting:)(0x74696C6C65746173, 0xE900000000000065, 0x65726F6C707865, 0xE700000000000000, 0);
  swift_bridgeObjectRelease(0xE900000000000065);
  v15 = 0;
  v17 = 0;
  if ((v19 & 1 & (v16 != 0)) != 0)
    v20 = 256;
  else
    v20 = 0;
  if ((v19 & 1) != 0)
  {
    v15 = v20;
    goto LABEL_16;
  }
  return v15 | v17 | v2;
}

unint64_t sub_1001E1300()
{
  unint64_t result;

  result = qword_1005DA1B8;
  if (!qword_1005DA1B8)
  {
    result = swift_getWitnessTable(&unk_100487458, &type metadata for FMMapMode.Options);
    atomic_store(result, (unint64_t *)&qword_1005DA1B8);
  }
  return result;
}

unint64_t sub_1001E1344()
{
  unint64_t result;

  result = qword_1005DA1C0;
  if (!qword_1005DA1C0)
  {
    result = swift_getWitnessTable(&unk_100487274, &type metadata for FMMapMode.Mode);
    atomic_store(result, (unint64_t *)&qword_1005DA1C0);
  }
  return result;
}

uint64_t sub_1001E1398(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  char v8;

  if (a1 == 1701080941 && a2 == 0xE400000000000000)
  {
    v5 = 0xE400000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1701080941, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x61725473776F6873 && a2 == 0xEC00000063696666)
  {
    v7 = 0xEC00000063696666;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x61725473776F6873, 0xEC00000063696666, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x62614C73776F6873 && a2 == 0xEB00000000736C65)
  {
    swift_bridgeObjectRelease(0xEB00000000736C65);
    return 2;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x62614C73776F6873, 0xEB00000000736C65, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v8 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1001E150C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int v11;
  __n128 v12;
  char v14;
  __n128 v15;
  char v16;
  int v17;
  int v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  uint64_t v23;

  v3 = sub_100053F2C(&qword_1005DA1C8);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  sub_100029550(a1, v7);
  v9 = sub_1001E16B0();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for FMMapMode.CodingKeys, &type metadata for FMMapMode.CodingKeys, v9, v7, v8);
  if (v1)
    return sub_100029574(a1);
  v22 = 0;
  v10 = sub_1001E16F4();
  KeyedDecodingContainer.decode<A>(_:forKey:)(&v23, &type metadata for FMMapMode.Mode, &v22, v3, &type metadata for FMMapMode.Mode, v10);
  v11 = v23;
  v21 = 1;
  v14 = KeyedDecodingContainer.decode(_:forKey:)(&v21, v3, v12);
  v20 = 2;
  v16 = KeyedDecodingContainer.decode(_:forKey:)(&v20, v3, v15);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_100029574(a1);
  if ((v16 & 1) != 0)
    v17 = 0x10000;
  else
    v17 = 0;
  if ((v14 & 1) != 0)
    v18 = 256;
  else
    v18 = 0;
  return v18 | v11 | v17;
}

unint64_t sub_1001E16B0()
{
  unint64_t result;

  result = qword_1005DA1D0;
  if (!qword_1005DA1D0)
  {
    result = swift_getWitnessTable(&unk_100487408, &type metadata for FMMapMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005DA1D0);
  }
  return result;
}

unint64_t sub_1001E16F4()
{
  unint64_t result;

  result = qword_1005DA1D8;
  if (!qword_1005DA1D8)
  {
    result = swift_getWitnessTable(&unk_10048724C, &type metadata for FMMapMode.Mode);
    atomic_store(result, (unint64_t *)&qword_1005DA1D8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FMMapMode.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1001E1784 + 4 * byte_10048717D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1001E17B8 + 4 * byte_100487178[v4]))();
}

uint64_t sub_1001E17B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001E17C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001E17C8);
  return result;
}

uint64_t sub_1001E17D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001E17DCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1001E17E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001E17E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMMapMode.CodingKeys()
{
  return &type metadata for FMMapMode.CodingKeys;
}

_WORD *initializeBufferWithCopyOfBuffer for FMMapMode.Options(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for FMMapMode.Options(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FMMapMode.Options(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1001E1900 + 4 * byte_100487187[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1001E1934 + 4 * byte_100487182[v4]))();
}

uint64_t sub_1001E1934(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1001E193C(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1001E1944);
  return result;
}

uint64_t sub_1001E1950(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1001E1958);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1001E195C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1001E1964(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMMapMode.Options()
{
  return &type metadata for FMMapMode.Options;
}

unint64_t sub_1001E1984()
{
  unint64_t result;

  result = qword_1005DA1E8;
  if (!qword_1005DA1E8)
  {
    result = swift_getWitnessTable(&unk_1004873E0, &type metadata for FMMapMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005DA1E8);
  }
  return result;
}

unint64_t sub_1001E19CC()
{
  unint64_t result;

  result = qword_1005DA1F0;
  if (!qword_1005DA1F0)
  {
    result = swift_getWitnessTable(&unk_100487350, &type metadata for FMMapMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005DA1F0);
  }
  return result;
}

unint64_t sub_1001E1A14()
{
  unint64_t result;

  result = qword_1005DA1F8;
  if (!qword_1005DA1F8)
  {
    result = swift_getWitnessTable(&unk_100487378, &type metadata for FMMapMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005DA1F8);
  }
  return result;
}

unint64_t sub_1001E1A58()
{
  unint64_t result;

  result = qword_1005DA208;
  if (!qword_1005DA208)
  {
    result = swift_getWitnessTable(&unk_100487560, &type metadata for FMMapMode.Options.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005DA208);
  }
  return result;
}

uint64_t sub_1001E1A9C(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  char v7;

  if (a1 == 0x61725473776F6873 && a2 == 0xEC00000063696666)
  {
    v5 = 0xEC00000063696666;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x61725473776F6873, 0xEC00000063696666, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 0x62614C73776F6873 && a2 == 0xEB00000000736C65)
  {
    swift_bridgeObjectRelease(0xEB00000000736C65);
    return 1;
  }
  else
  {
    v7 = _stringCompareWithSmolCheck(_:_:expecting:)(0x62614C73776F6873, 0xEB00000000736C65, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1001E1BBC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __n128 v10;
  char v11;
  __n128 v12;
  char v13;
  int v15;
  uint64_t v16;
  char v17;
  char v18;

  v3 = sub_100053F2C(&qword_1005DA210);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  sub_100029550(a1, v7);
  v9 = sub_1001E1A58();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for FMMapMode.Options.CodingKeys, &type metadata for FMMapMode.Options.CodingKeys, v9, v7, v8);
  if (v1)
    return sub_100029574(a1);
  v18 = 0;
  v11 = KeyedDecodingContainer.decode(_:forKey:)(&v18, v3, v10);
  v17 = 1;
  v13 = KeyedDecodingContainer.decode(_:forKey:)(&v17, v3, v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_100029574(a1);
  if ((v13 & 1) != 0)
    v15 = 256;
  else
    v15 = 0;
  return v15 & 0xFFFFFFFE | v11 & 1;
}

uint64_t _s6FindMy9FMMapModeV4ModeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1001E1D60 + 4 * byte_100487191[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1001E1D94 + 4 * byte_10048718C[v4]))();
}

uint64_t sub_1001E1D94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001E1D9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001E1DA4);
  return result;
}

uint64_t sub_1001E1DB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001E1DB8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1001E1DBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001E1DC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMMapMode.Options.CodingKeys()
{
  return &type metadata for FMMapMode.Options.CodingKeys;
}

unint64_t sub_1001E1DE4()
{
  unint64_t result;

  result = qword_1005DA218;
  if (!qword_1005DA218)
  {
    result = swift_getWitnessTable(&unk_100487538, &type metadata for FMMapMode.Options.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005DA218);
  }
  return result;
}

unint64_t sub_1001E1E2C()
{
  unint64_t result;

  result = qword_1005DA220;
  if (!qword_1005DA220)
  {
    result = swift_getWitnessTable(&unk_1004874A8, &type metadata for FMMapMode.Options.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005DA220);
  }
  return result;
}

unint64_t sub_1001E1E74()
{
  unint64_t result;

  result = qword_1005DA228;
  if (!qword_1005DA228)
  {
    result = swift_getWitnessTable(&unk_1004874D0, &type metadata for FMMapMode.Options.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005DA228);
  }
  return result;
}

uint64_t sub_1001E1EC0(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1001E1EFC + 4 * byte_100487600[a1]))(0xD000000000000016, 0x80000001004B37B0);
}

uint64_t sub_1001E1EFC()
{
  uint64_t v0;

  return v0 + 8;
}

uint64_t sub_1001E1F50()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_1005DA290);
}

uint64_t sub_1001E1F60()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_1005DA298);
}

id sub_1001E1F70(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + qword_1005DA298) = a1;
  objc_msgSend(*(id *)(v1 + qword_1005DA280), "setHidden:", *(unsigned __int8 *)(v1 + qword_1005DA298));
  return sub_10004E9E8();
}

uint64_t sub_1001E1FAC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_1005DA2A0);
}

id sub_1001E1FBC(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + qword_1005DA2A0) = a1;
  return sub_10004E9E8();
}

uint64_t sub_1001E1FCC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_1005DA2A8);
}

id sub_1001E1FDC(char a1)
{
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  char v5;

  *(_BYTE *)(v1 + qword_1005DA2A8) = a1;
  v2 = *(_BYTE *)(v1 + qword_1005DA2A8);
  v3 = *(_BYTE *)(v1 + qword_1005DA298);
  v4 = v2 & v3;
  v5 = v3 & ~v2;
  if (!*(_BYTE *)(v1 + qword_1005DA290))
    v5 = v4;
  return objc_msgSend(*(id *)(v1 + qword_1005DA280), "setHidden:", v5 & 1);
}

void sub_1001E203C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_1001E2304();
}

id sub_1001E2060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  char v6;
  char v7;
  char v8;
  char v9;
  objc_super v11;

  v5 = (objc_class *)type metadata accessor for FMListTableViewCell(0, *(_QWORD *)((swift_isaMask & *v4) + 0x50), *(_QWORD *)((swift_isaMask & *v4) + 0x58), a4);
  v11.receiver = v4;
  v11.super_class = v5;
  objc_msgSendSuper2(&v11, "prepareForReuse");
  *((_BYTE *)v4 + qword_1005DA298) = 0;
  objc_msgSend(*(id *)((char *)v4 + qword_1005DA280), "setHidden:", *((unsigned __int8 *)v4 + qword_1005DA298));
  sub_10004E9E8();
  *((_BYTE *)v4 + qword_1005DA2A8) = 0;
  v6 = *((_BYTE *)v4 + qword_1005DA2A8);
  v7 = *((_BYTE *)v4 + qword_1005DA298);
  v8 = v6 & v7;
  v9 = v7 & ~v6;
  if (!*((_BYTE *)v4 + qword_1005DA290))
    v9 = v8;
  objc_msgSend(*(id *)((char *)v4 + qword_1005DA280), "setHidden:", v9 & 1);
  return objc_msgSend(*(id *)((char *)v4 + qword_1005DA280), "setAlpha:", 1.0);
}

void sub_1001E2158(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v4 = a1;
  sub_1001E2060((uint64_t)v4, v1, v2, v3);

}

id sub_1001E218C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v6;
  void *v7;
  id v8;
  id v9;
  objc_super v11;

  v6 = (objc_class *)type metadata accessor for FMListTableViewCell(0, *(_QWORD *)((swift_isaMask & *v4) + 0x50), *(_QWORD *)((swift_isaMask & *v4) + 0x58), a4);
  v11.receiver = v4;
  v11.super_class = v6;
  objc_msgSendSuper2(&v11, "traitCollectionDidChange:", a1);
  v7 = *(void **)((char *)v4 + qword_1005DA268);
  v8 = objc_msgSend(v4, "traitCollection");
  v9 = objc_msgSend(v8, "preferredContentSizeCategory");

  LOBYTE(v8) = UIContentSizeCategory.isAccessibilityCategory.getter(v9);
  objc_msgSend(v7, "setTextAlignment:", (v8 & 1) == 0);
  return sub_10004E9E8();
}

void sub_1001E2260(void *a1, uint64_t a2, void *a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v5 = a3;
  v8 = a1;
  sub_1001E218C((uint64_t)a3, (uint64_t)v8, v6, v7);

}

id sub_1001E22B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for FMListTableViewCell(0, *(_QWORD *)((swift_isaMask & *v4) + 0x50), *(_QWORD *)((swift_isaMask & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, "dealloc");
}

void sub_1001E2304()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSString v14;
  id v15;
  id v16;

  v1 = qword_1005DA230;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)NUIContainerStackView), "init");
  v2 = qword_1005DA238;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMTableViewCellImageContainer()), "init");
  v3 = qword_1005DA240;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)NUIContainerStackView), "init");
  v4 = qword_1005DA248;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)NUIContainerStackView), "init");
  v5 = qword_1005DA250;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)NUIContainerStackView), "init");
  v6 = qword_1005DA258;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v7 = qword_1005DA260;
  v8 = type metadata accessor for FMSubtitleLabel();
  *(_QWORD *)&v0[v7] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8)), "init");
  v9 = qword_1005DA268;
  *(_QWORD *)&v0[v9] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v10 = qword_1005DA270;
  *(_QWORD *)&v0[v10] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMBatteryView()), "init");
  v11 = qword_1005DA278;
  *(_QWORD *)&v0[v11] = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 100);
  v12 = qword_1005DA280;
  *(_QWORD *)&v0[v12] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v13 = qword_1005DA288;
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v14);

  v16 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v15);
  *(_QWORD *)&v0[v13] = v16;
  v0[qword_1005DA290] = 0;
  v0[qword_1005DA298] = 0;
  v0[qword_1005DA2A0] = 0;
  v0[qword_1005DA2A8] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMListTableViewCell.swift", 32, 2, 183, 0);
  __break(1u);
}

void sub_1001E257C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  _QWORD v17[5];
  uint64_t v18;
  _OWORD v19[2];

  v5 = v4;
  memset(v19, 0, sizeof(v19));
  v10 = *(NSObject **)(v4 + 24);
  v11 = (_QWORD *)swift_allocObject(&unk_10054FEF8, 64, 7);
  v11[2] = a1;
  v11[3] = a2;
  v11[4] = a3;
  v11[5] = a4;
  v11[6] = v5;
  v11[7] = v19;
  v12 = swift_allocObject(&unk_10054FF20, 32, 7);
  *(_QWORD *)(v12 + 16) = sub_1001E44F0;
  *(_QWORD *)(v12 + 24) = v11;
  v17[4] = sub_100021E78;
  v18 = v12;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_100021E38;
  v17[3] = &unk_10054FF38;
  v13 = _Block_copy(v17);
  v14 = v18;
  v15 = a1;
  v16 = a2;
  swift_bridgeObjectRetain(a4);
  swift_retain(v5);
  swift_retain(v12);
  swift_release(v14);
  dispatch_sync(v10, v13);
  _Block_release(v13);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation(v12, "", 96, 51, 27, 1);
  swift_release(v12);
  if ((v10 & 1) != 0)
    __break(1u);
  else
    swift_release(v11);
}

void sub_1001E2700(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  double v12;
  id v13;
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  __n128 v19;
  Swift::String v20;
  __n128 v21;
  uint64_t v22;
  unint64_t v23;
  double v24;
  double v25;
  double v26;
  double v27;
  __n128 v28;
  Swift::String v29;
  __n128 v30;
  uint64_t v31;
  void *v32;
  Swift::String v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  os_log_type_t v47;
  uint8_t *v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  __n128 v54;
  Swift::String v55;
  __n128 v56;
  uint64_t v57;
  unint64_t v58;
  double v59;
  double v60;
  double v61;
  double v62;
  __n128 v63;
  Swift::String v64;
  __n128 v65;
  uint64_t v66;
  void *v67;
  Swift::String v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  NSObject *oslog;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;

  objc_msgSend(a1, "distanceFromLocation:", a2);
  if (v12 >= 1000000.0)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v45 = type metadata accessor for Logger(0);
    v46 = sub_100056D88(v45, (uint64_t)qword_1005F5748);
    oslog = Logger.logObject.getter(v46);
    v47 = static os_log_type_t.default.getter(oslog);
    if (os_log_type_enabled(oslog, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v48 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v47, "FMETACache: cannot calculate ETA for distances over 1000KM", v48, 2u);
      swift_slowDealloc(v48, -1, -1);
    }

  }
  else
  {
    v79 = a3;
    v80 = a4;
    swift_bridgeObjectRetain(a4);
    v13 = a1;
    v14 = a2;
    objc_msgSend(v13, "coordinate");
    v16 = round(v15 * 10000.0) / 10000.0;
    objc_msgSend(v13, "coordinate");
    v18 = round(v17 * 10000.0) / 10000.0;
    v84 = 0;
    v85 = 0xE000000000000000;
    v19.n128_f64[0] = v16;
    Double.write<A>(to:)(&v84, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v19);
    v20._countAndFlagsBits = 45;
    v20._object = (void *)0xE100000000000000;
    String.append(_:)(v20);
    v21.n128_f64[0] = v18;
    Double.write<A>(to:)(&v84, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v21);
    v22 = v84;
    v23 = v85;
    objc_msgSend(v14, "coordinate");
    v25 = round(v24 * 10000.0) / 10000.0;
    objc_msgSend(v14, "coordinate");
    v27 = round(v26 * 10000.0) / 10000.0;
    v84 = 0;
    v85 = 0xE000000000000000;
    v28.n128_f64[0] = v25;
    Double.write<A>(to:)(&v84, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v28);
    v29._countAndFlagsBits = 45;
    v29._object = (void *)0xE100000000000000;
    String.append(_:)(v29);
    v30.n128_f64[0] = v27;
    Double.write<A>(to:)(&v84, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v30);
    v31 = v84;
    v32 = (void *)v85;
    v84 = v22;
    v85 = v23;
    swift_bridgeObjectRetain(v23);
    v33._countAndFlagsBits = v31;
    v33._object = v32;
    String.append(_:)(v33);
    swift_bridgeObjectRelease(v23);
    swift_bridgeObjectRelease(v32);
    v35 = v84;
    v34 = v85;
    swift_beginAccess(a5 + 40, &v84, 0, 0);
    v36 = *(_QWORD *)(a5 + 40);
    if (*(_QWORD *)(v36 + 16))
    {
      swift_bridgeObjectRetain(*(_QWORD *)(a5 + 40));
      v37 = sub_10004C348(v35, v34);
      if ((v38 & 1) != 0)
      {
        v39 = (uint64_t *)(*(_QWORD *)(v36 + 56) + 32 * v37);
        v40 = *v39;
        v41 = v39[1];
        v42 = v39[2];
        v43 = v39[3];
        swift_bridgeObjectRetain(v41);
        swift_bridgeObjectRelease(v34);
        swift_bridgeObjectRelease(v36);
        v44 = a6[1];
        *a6 = v40;
        a6[1] = v41;
        a6[2] = v42;
        a6[3] = v43;
      }
      else
      {
        swift_bridgeObjectRelease(v34);
        v44 = v36;
      }
    }
    else
    {
      v44 = v34;
    }
    *(_QWORD *)&v49 = swift_bridgeObjectRelease(v44).n128_u64[0];
    if (a6[1])
      goto LABEL_14;
    objc_msgSend(v13, "coordinate", v49);
    v51 = round(v50 * 10000.0) / 10000.0;
    objc_msgSend(v13, "coordinate");
    v53 = round(v52 * 10000.0) / 10000.0;
    v82 = 0;
    v83 = 0xE000000000000000;
    v54.n128_f64[0] = v51;
    Double.write<A>(to:)(&v82, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v54);
    v55._countAndFlagsBits = 45;
    v55._object = (void *)0xE100000000000000;
    String.append(_:)(v55);
    v56.n128_f64[0] = v53;
    Double.write<A>(to:)(&v82, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v56);
    v57 = v82;
    v58 = v83;
    objc_msgSend(v14, "coordinate");
    v60 = round(v59 * 10000.0) / 10000.0;
    objc_msgSend(v14, "coordinate");
    v62 = round(v61 * 10000.0) / 10000.0;
    v82 = 0;
    v83 = 0xE000000000000000;
    v63.n128_f64[0] = v60;
    Double.write<A>(to:)(&v82, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v63);
    v64._countAndFlagsBits = 45;
    v64._object = (void *)0xE100000000000000;
    String.append(_:)(v64);
    v65.n128_f64[0] = v62;
    Double.write<A>(to:)(&v82, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v65);
    v66 = v82;
    v67 = (void *)v83;
    v82 = v57;
    v83 = v58;
    swift_bridgeObjectRetain(v58);
    v68._countAndFlagsBits = v66;
    v68._object = v67;
    String.append(_:)(v68);
    swift_bridgeObjectRelease(v58);
    swift_bridgeObjectRelease(v67);
    v69 = v82;
    v70 = v83;
    swift_beginAccess(a5 + 32, &v82, 0, 0);
    v71 = *(_QWORD *)(a5 + 32);
    swift_bridgeObjectRetain(v71);
    v72 = sub_1003D756C(v69, v70, v71);
    v74 = v73;
    v76 = v75;
    v78 = v77;
    swift_bridgeObjectRelease(v70);
    swift_bridgeObjectRelease(v71);
    sub_1001E4394(v72, v74, v76, v78);
    if (v74)
    {
LABEL_14:

      swift_bridgeObjectRelease(v80);
    }
    else
    {
      sub_1001E2C24(v79, v80, v13, v14);

      swift_bridgeObjectRelease(v80);
    }
  }
}

double sub_1001E2C24(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD aBlock[5];
  _QWORD *v27;

  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v24 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for DispatchQoS(0);
  v12 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_QWORD *)(v4 + 24);
  v15 = (_QWORD *)swift_allocObject(&unk_10054FEA8, 56, 7);
  v15[2] = v4;
  v15[3] = a1;
  v15[4] = a2;
  v15[5] = a3;
  v15[6] = a4;
  aBlock[4] = sub_1001E4488;
  v27 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_10054FEC0;
  v16 = _Block_copy(aBlock);
  swift_retain(v4);
  swift_bridgeObjectRetain(a2);
  v17 = a3;
  static DispatchQoS.unspecified.getter(a4);
  v25 = _swiftEmptyArrayStorage;
  v18 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v19 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v20 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v25, v19, v20, v9, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v11, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v23);
  *(_QWORD *)&result = swift_release(v27).n128_u64[0];
  return result;
}

void sub_1001E2E38(uint64_t a1, void *a2, id a3, void *a4)
{
  uint64_t v4;
  uint64_t v5;
  double v8;
  double v9;
  double v10;
  double v11;
  __n128 v12;
  Swift::String v13;
  __n128 v14;
  unint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  double v20;
  __n128 v21;
  Swift::String v22;
  __n128 v23;
  uint64_t v24;
  void *v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  id v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  double v49;
  double v50;
  double v51;
  double v52;
  __n128 v53;
  Swift::String v54;
  __n128 v55;
  uint64_t v56;
  unint64_t v57;
  double v58;
  double v59;
  double v60;
  double v61;
  __n128 v62;
  Swift::String v63;
  __n128 v64;
  uint64_t v65;
  void *v66;
  Swift::String v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  double (*v74)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  objc_class *v75;
  _BYTE *v76;
  uint64_t *v77;
  double (**v78)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  id v79;
  id v80;
  id v81;
  id v82;
  double v83;
  double v84;
  double v85;
  double v86;
  __n128 v87;
  Swift::String v88;
  __n128 v89;
  unint64_t v90;
  uint64_t v91;
  double v92;
  double v93;
  double v94;
  double v95;
  __n128 v96;
  Swift::String v97;
  __n128 v98;
  uint64_t v99;
  void *v100;
  Swift::String v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  id v105;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v107;
  id v108;
  uint64_t v111;
  unint64_t v112;
  objc_super v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;

  v5 = v4;
  objc_msgSend(a3, "coordinate");
  v9 = round(v8 * 10000.0) / 10000.0;
  objc_msgSend(a3, "coordinate");
  v11 = round(v10 * 10000.0) / 10000.0;
  v117 = 0;
  v118 = 0xE000000000000000;
  v12.n128_f64[0] = v9;
  Double.write<A>(to:)(&v117, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v12);
  v13._countAndFlagsBits = 45;
  v13._object = (void *)0xE100000000000000;
  String.append(_:)(v13);
  v14.n128_f64[0] = v11;
  Double.write<A>(to:)(&v117, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v14);
  v16 = v117;
  v15 = v118;
  objc_msgSend(a4, "coordinate");
  v18 = round(v17 * 10000.0) / 10000.0;
  objc_msgSend(a4, "coordinate");
  v20 = round(v19 * 10000.0) / 10000.0;
  v117 = 0;
  v118 = 0xE000000000000000;
  v21.n128_f64[0] = v18;
  Double.write<A>(to:)(&v117, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v21);
  v22._countAndFlagsBits = 45;
  v22._object = (void *)0xE100000000000000;
  String.append(_:)(v22);
  v23.n128_f64[0] = v20;
  Double.write<A>(to:)(&v117, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v23);
  v24 = v117;
  v25 = (void *)v118;
  v117 = v16;
  v118 = v15;
  swift_bridgeObjectRetain(v15);
  v26._countAndFlagsBits = v24;
  v26._object = v25;
  String.append(_:)(v26);
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v25);
  v27 = v117;
  v28 = v118;
  swift_beginAccess(v5 + 32, &v117, 0, 0);
  v29 = *(_QWORD *)(v5 + 32);
  swift_bridgeObjectRetain(v29);
  v30 = sub_1003D756C(v27, v28, v29);
  v32 = v31;
  v34 = v33;
  v36 = v35;
  swift_bridgeObjectRelease(v28);
  swift_bridgeObjectRelease(v29);
  sub_1001E4394(v30, v32, v34, v36);
  if (v32)
    goto LABEL_2;
  objc_msgSend(a3, "coordinate");
  v50 = round(v49 * 10000.0) / 10000.0;
  objc_msgSend(a3, "coordinate");
  v52 = round(v51 * 10000.0) / 10000.0;
  v114 = 0;
  v115 = 0xE000000000000000;
  v53.n128_f64[0] = v50;
  Double.write<A>(to:)(&v114, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v53);
  v54._countAndFlagsBits = 45;
  v54._object = (void *)0xE100000000000000;
  String.append(_:)(v54);
  v55.n128_f64[0] = v52;
  Double.write<A>(to:)(&v114, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v55);
  v56 = v114;
  v57 = v115;
  objc_msgSend(a4, "coordinate");
  v59 = round(v58 * 10000.0) / 10000.0;
  objc_msgSend(a4, "coordinate");
  v61 = round(v60 * 10000.0) / 10000.0;
  v114 = 0;
  v115 = 0xE000000000000000;
  v62.n128_f64[0] = v59;
  Double.write<A>(to:)(&v114, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v62);
  v63._countAndFlagsBits = 45;
  v63._object = (void *)0xE100000000000000;
  String.append(_:)(v63);
  v64.n128_f64[0] = v61;
  Double.write<A>(to:)(&v114, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v64);
  v65 = v114;
  v66 = (void *)v115;
  v114 = v56;
  v115 = v57;
  swift_bridgeObjectRetain(v57);
  v67._countAndFlagsBits = v65;
  v67._object = v66;
  String.append(_:)(v67);
  swift_bridgeObjectRelease(v57);
  swift_bridgeObjectRelease(v66);
  v68 = v114;
  v69 = v115;
  swift_beginAccess(v5 + 40, &v114, 0, 0);
  v70 = v5;
  v71 = *(_QWORD *)(v5 + 40);
  if (!*(_QWORD *)(v71 + 16))
  {
    swift_bridgeObjectRelease(v69);
LABEL_11:
    v74 = (double (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))swift_allocObject(&unk_10054FE30, 56, 7);
    *((_QWORD *)v74 + 2) = v5;
    *((_QWORD *)v74 + 3) = a1;
    *((_QWORD *)v74 + 4) = a2;
    *((_QWORD *)v74 + 5) = a3;
    *((_QWORD *)v74 + 6) = a4;
    v75 = (objc_class *)type metadata accessor for FMETAOperation();
    v76 = objc_allocWithZone(v75);
    v76[OBJC_IVAR____TtC6FindMy14FMETAOperation__isFinished] = 0;
    v77 = (uint64_t *)&v76[OBJC_IVAR____TtC6FindMy14FMETAOperation_request];
    *v77 = a1;
    v77[1] = (uint64_t)a2;
    v77[2] = (uint64_t)a3;
    v77[3] = (uint64_t)a4;
    v78 = (double (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))&v76[OBJC_IVAR____TtC6FindMy14FMETAOperation_completion];
    *v78 = sub_1001E43D8;
    v78[1] = v74;
    v113.receiver = v76;
    v113.super_class = v75;
    swift_bridgeObjectRetain_n(a2, 2);
    v79 = a3;
    v80 = a4;
    v81 = v79;
    v82 = v80;
    swift_retain(v5);
    v108 = objc_msgSendSuper2(&v113, "init");
    objc_msgSend(*(id *)(v5 + 48), "addOperation:", v108);
    objc_msgSend(v81, "coordinate");
    v84 = round(v83 * 10000.0) / 10000.0;
    objc_msgSend(v81, "coordinate");
    v86 = round(v85 * 10000.0) / 10000.0;
    v111 = 0;
    v112 = 0xE000000000000000;
    v87.n128_f64[0] = v84;
    Double.write<A>(to:)(&v111, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v87);
    v88._countAndFlagsBits = 45;
    v88._object = (void *)0xE100000000000000;
    String.append(_:)(v88);
    v89.n128_f64[0] = v86;
    Double.write<A>(to:)(&v111, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v89);
    v91 = v111;
    v90 = v112;
    objc_msgSend(v82, "coordinate");
    v93 = round(v92 * 10000.0) / 10000.0;
    objc_msgSend(v82, "coordinate");
    v95 = round(v94 * 10000.0) / 10000.0;
    v111 = 0;
    v112 = 0xE000000000000000;
    v96.n128_f64[0] = v93;
    Double.write<A>(to:)(&v111, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v96);
    v97._countAndFlagsBits = 45;
    v97._object = (void *)0xE100000000000000;
    String.append(_:)(v97);
    v98.n128_f64[0] = v95;
    Double.write<A>(to:)(&v111, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v98);
    v99 = v111;
    v100 = (void *)v112;
    v111 = v91;
    v112 = v90;
    swift_bridgeObjectRetain(v90);
    v101._countAndFlagsBits = v99;
    v101._object = v100;
    String.append(_:)(v101);
    swift_bridgeObjectRelease(v90);
    swift_bridgeObjectRelease(v100);
    v102 = v111;
    v103 = v112;
    swift_beginAccess(v5 + 32, &v111, 33, 0);
    swift_bridgeObjectRetain(a2);
    v104 = v81;
    v105 = v82;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(v5 + 32));
    v116 = *(_QWORD *)(v5 + 32);
    *(_QWORD *)(v5 + 32) = 0x8000000000000000;
    sub_100179FB0(a1, (uint64_t)a2, (uint64_t)v104, (uint64_t)v105, v102, v103, isUniquelyReferenced_nonNull_native);
    v107 = *(_QWORD *)(v5 + 32);
    *(_QWORD *)(v70 + 32) = v116;
    swift_bridgeObjectRelease(v103);
    swift_bridgeObjectRelease(v107);
    swift_endAccess(&v111);

    return;
  }
  swift_bridgeObjectRetain(*(_QWORD *)(v5 + 40));
  sub_10004C348(v68, v69);
  v73 = v72;
  swift_bridgeObjectRelease(v69);
  swift_bridgeObjectRelease(v71);
  if ((v73 & 1) == 0)
    goto LABEL_11;
LABEL_2:
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v37 = type metadata accessor for Logger(0);
  sub_100056D88(v37, (uint64_t)qword_1005F5748);
  v38 = a3;
  v39 = a4;
  swift_bridgeObjectRetain_n(a2, 2);
  v40 = v38;
  v41 = v39;
  v42 = Logger.logObject.getter(v41);
  v43 = static os_log_type_t.default.getter(v42);
  if (os_log_type_enabled(v42, v43))
  {
    v44 = (uint8_t *)swift_slowAlloc(12, -1);
    v45 = swift_slowAlloc(32, -1);
    v111 = v45;
    *(_DWORD *)v44 = 136315138;
    v46 = sub_1001675A0(a1, a2, v40, v41);
    v48 = v47;
    v116 = sub_100056DA0(v46, v47, &v111);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, &v117);

    swift_bridgeObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease(v48);
    _os_log_impl((void *)&_mh_execute_header, v42, v43, "FMETACache: Loading declined, we are already processing similar eta: %s", v44, 0xCu);
    swift_arrayDestroy(v45, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v45, -1, -1);
    swift_slowDealloc(v44, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
}

double sub_1001E3624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD aBlock[5];
  _QWORD *v41;

  v32 = a7;
  v33 = a3;
  v34 = a4;
  v15 = type metadata accessor for DispatchWorkItemFlags(0);
  v38 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DispatchQoS(0);
  v36 = *(_QWORD *)(v18 - 8);
  v37 = v18;
  __chkstk_darwin(v18);
  v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = *(_QWORD *)(a6 + 24);
  v21 = (_QWORD *)swift_allocObject(&unk_10054FE58, 96, 7);
  v22 = v32;
  v21[2] = a5;
  v21[3] = v22;
  v21[4] = a8;
  v21[5] = a9;
  v21[6] = a10;
  v21[7] = a6;
  v21[8] = a1;
  v21[9] = a2;
  v23 = v34;
  v21[10] = v33;
  v21[11] = v23;
  aBlock[4] = sub_1001E4450;
  v41 = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_10054FE70;
  v24 = _Block_copy(aBlock);
  swift_errorRetain(a5);
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a8);
  v25 = a9;
  v26 = a10;
  v27 = swift_retain(a6);
  static DispatchQoS.unspecified.getter(v27);
  v39 = _swiftEmptyArrayStorage;
  v28 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v29 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v30 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v39, v29, v30, v15, v28);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v20, v17, v24);
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v17, v15);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v20, v37);
  *(_QWORD *)&result = swift_release(v41).n128_u64[0];
  return result;
}

void sub_1001E3864(uint64_t a1, uint64_t a2, void *a3, id a4, void *a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  double v31;
  double v32;
  double v33;
  double v34;
  __n128 v35;
  Swift::String v36;
  __n128 v37;
  unint64_t v38;
  uint64_t v39;
  double v40;
  double v41;
  double v42;
  double v43;
  __n128 v44;
  Swift::String v45;
  __n128 v46;
  uint64_t v47;
  void *v48;
  Swift::String v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  Swift::String v65;
  Swift::String v66;
  Swift::String v67;
  Swift::String v68;
  Swift::String v69;
  __n128 v70;
  Swift::String v71;
  unint64_t v72;
  double v73;
  double v74;
  double v75;
  double v76;
  __n128 v77;
  Swift::String v78;
  __n128 v79;
  unint64_t v80;
  uint64_t v81;
  double v82;
  double v83;
  double v84;
  double v85;
  __n128 v86;
  Swift::String v87;
  __n128 v88;
  uint64_t v89;
  void *v90;
  Swift::String v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  void *v98;
  void *v99;
  void *v100;
  double v101;
  double v102;
  double v103;
  double v104;
  __n128 v105;
  Swift::String v106;
  __n128 v107;
  unint64_t v108;
  uint64_t v109;
  double v110;
  double v111;
  double v112;
  double v113;
  __n128 v114;
  Swift::String v115;
  __n128 v116;
  uint64_t v117;
  void *v118;
  Swift::String v119;
  uint64_t v120;
  uint64_t v121;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t i;
  uint64_t v127;
  uint64_t v128;
  uint64_t Strong;
  uint64_t v130;
  uint64_t v131;
  uint64_t ObjectType;
  uint64_t v133;
  id v135;
  uint64_t v136;
  _QWORD v140[3];
  _BYTE v141[8];
  uint64_t v142;
  uint64_t v143;
  void *v144;

  if (!a1)
  {
    objc_msgSend(a4, "coordinate");
    v32 = round(v31 * 10000.0) / 10000.0;
    objc_msgSend(a4, "coordinate");
    v34 = round(v33 * 10000.0) / 10000.0;
    v143 = 0;
    v144 = (void *)0xE000000000000000;
    v35.n128_f64[0] = v32;
    Double.write<A>(to:)(&v143, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v35);
    v36._countAndFlagsBits = 45;
    v36._object = (void *)0xE100000000000000;
    String.append(_:)(v36);
    v37.n128_f64[0] = v34;
    Double.write<A>(to:)(&v143, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v37);
    v39 = v143;
    v38 = (unint64_t)v144;
    objc_msgSend(a5, "coordinate");
    v41 = round(v40 * 10000.0) / 10000.0;
    v135 = a5;
    objc_msgSend(a5, "coordinate");
    v43 = round(v42 * 10000.0) / 10000.0;
    v143 = 0;
    v144 = (void *)0xE000000000000000;
    v44.n128_f64[0] = v41;
    Double.write<A>(to:)(&v143, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v44);
    v45._countAndFlagsBits = 45;
    v45._object = (void *)0xE100000000000000;
    String.append(_:)(v45);
    v46.n128_f64[0] = v43;
    Double.write<A>(to:)(&v143, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v46);
    v47 = v143;
    v48 = v144;
    v143 = v39;
    v144 = (void *)v38;
    swift_bridgeObjectRetain(v38);
    v49._countAndFlagsBits = v47;
    v49._object = v48;
    String.append(_:)(v49);
    swift_bridgeObjectRelease(v38);
    swift_bridgeObjectRelease(v48);
    v50 = v143;
    v51 = (uint64_t)v144;
    swift_beginAccess(a6 + 32, &v143, 33, 0);
    v52 = sub_100172C2C(v50, v51);
    v54 = v53;
    v56 = v55;
    v58 = v57;
    swift_endAccess(&v143);
    swift_bridgeObjectRelease(v51);
    sub_1001E4394(v52, v54, v56, v58);
    if (!a8)
      return;
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v59 = type metadata accessor for Logger(0);
    sub_100056D88(v59, (uint64_t)qword_1005F5748);
    v60 = swift_bridgeObjectRetain_n(a8, 2);
    v61 = Logger.logObject.getter(v60);
    v62 = static os_log_type_t.default.getter(v61);
    if (os_log_type_enabled(v61, v62))
    {
      v63 = (uint8_t *)swift_slowAlloc(12, -1);
      v64 = swift_slowAlloc(32, -1);
      *(_DWORD *)v63 = 136315138;
      v142 = v64;
      v143 = 0;
      v144 = (void *)0xE000000000000000;
      _StringGuts.grow(_:)(28);
      v65._countAndFlagsBits = 60;
      v65._object = (void *)0xE100000000000000;
      String.append(_:)(v65);
      v66._countAndFlagsBits = 0x4154454D46;
      v66._object = (void *)0xE500000000000000;
      String.append(_:)(v66);
      v67._countAndFlagsBits = 0x69746E656469203ALL;
      v67._object = (void *)0xEE00203A72656966;
      String.append(_:)(v67);
      swift_bridgeObjectRetain(a8);
      v68._countAndFlagsBits = a7;
      v68._object = a8;
      String.append(_:)(v68);
      swift_bridgeObjectRelease(a8);
      v69._countAndFlagsBits = 0x203A61746520;
      v69._object = (void *)0xE600000000000000;
      String.append(_:)(v69);
      v70.n128_u64[0] = a9;
      Double.write<A>(to:)(&v143, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v70);
      v71._countAndFlagsBits = 62;
      v71._object = (void *)0xE100000000000000;
      String.append(_:)(v71);
      v72 = (unint64_t)v144;
      v143 = sub_100056DA0(v143, (unint64_t)v144, &v142);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v143, &v144);
      swift_bridgeObjectRelease_n(a8, 2);
      swift_bridgeObjectRelease(v72);
      _os_log_impl((void *)&_mh_execute_header, v61, v62, "FMETACache: ETA calculation received: %s", v63, 0xCu);
      swift_arrayDestroy(v64, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v64, -1, -1);
      swift_slowDealloc(v63, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a8, 2);
    }
    objc_msgSend(a4, "coordinate");
    v102 = round(v101 * 10000.0) / 10000.0;
    objc_msgSend(a4, "coordinate");
    v104 = round(v103 * 10000.0) / 10000.0;
    v143 = 0;
    v144 = (void *)0xE000000000000000;
    v105.n128_f64[0] = v102;
    Double.write<A>(to:)(&v143, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v105);
    v106._countAndFlagsBits = 45;
    v106._object = (void *)0xE100000000000000;
    String.append(_:)(v106);
    v107.n128_f64[0] = v104;
    Double.write<A>(to:)(&v143, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v107);
    v109 = v143;
    v108 = (unint64_t)v144;
    objc_msgSend(v135, "coordinate");
    v111 = round(v110 * 10000.0) / 10000.0;
    objc_msgSend(v135, "coordinate");
    v113 = round(v112 * 10000.0) / 10000.0;
    v143 = 0;
    v144 = (void *)0xE000000000000000;
    v114.n128_f64[0] = v111;
    Double.write<A>(to:)(&v143, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v114);
    v115._countAndFlagsBits = 45;
    v115._object = (void *)0xE100000000000000;
    String.append(_:)(v115);
    v116.n128_f64[0] = v113;
    Double.write<A>(to:)(&v143, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v116);
    v117 = v143;
    v118 = v144;
    v143 = v109;
    v144 = (void *)v108;
    swift_bridgeObjectRetain(v108);
    v119._countAndFlagsBits = v117;
    v119._object = v118;
    String.append(_:)(v119);
    swift_bridgeObjectRelease(v108);
    swift_bridgeObjectRelease(v118);
    v120 = v143;
    v121 = (uint64_t)v144;
    swift_beginAccess(a6 + 40, &v143, 33, 0);
    swift_bridgeObjectRetain(a8);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)(a6 + 40));
    v142 = *(_QWORD *)(a6 + 40);
    *(_QWORD *)(a6 + 40) = 0x8000000000000000;
    sub_10017A154(a7, (uint64_t)a8, v120, v121, isUniquelyReferenced_nonNull_native, *(double *)&a9, *(double *)&a10);
    v123 = *(_QWORD *)(a6 + 40);
    *(_QWORD *)(a6 + 40) = v142;
    swift_bridgeObjectRelease(v121);
    swift_bridgeObjectRelease(v123);
    swift_endAccess(&v143);
    swift_beginAccess(a6 + 16, &v143, 0, 0);
    v124 = *(_QWORD *)(a6 + 16);
    if ((unint64_t)v124 >> 62)
    {
      if (v124 < 0)
        v133 = *(_QWORD *)(a6 + 16);
      else
        v133 = v124 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(a6 + 16));
      v125 = _CocoaArrayWrapper.endIndex.getter(v133);
      if (v125)
        goto LABEL_16;
    }
    else
    {
      v125 = *(_QWORD *)((v124 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(*(_QWORD *)(a6 + 16));
      if (v125)
      {
LABEL_16:
        if (v125 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v125; ++i)
        {
          if ((v124 & 0xC000000000000001) != 0)
          {
            v127 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v124);
          }
          else
          {
            v127 = *(_QWORD *)(v124 + 8 * i + 32);
            swift_retain(v127);
          }
          v128 = v127 + OBJC_IVAR____TtC6FindMy17FMETASubscription_subscriber;
          Strong = swift_unknownObjectWeakLoadStrong(v127 + OBJC_IVAR____TtC6FindMy17FMETASubscription_subscriber);
          if (Strong)
          {
            v130 = Strong;
            v131 = *(_QWORD *)(v128 + 8);
            ObjectType = swift_getObjectType(Strong);
            (*(void (**)(uint64_t, uint64_t, void *, uint64_t, void *, uint64_t, uint64_t, double, double))(v131 + 8))(a6, a7, a8, a2, a3, ObjectType, v131, *(double *)&a9, *(double *)&a10);
            swift_release(v127);
            swift_unknownObjectRelease(v130);
          }
          else
          {
            swift_release(v127);
          }
        }
      }
    }
    swift_bridgeObjectRelease(v124);
    return;
  }
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v14 = type metadata accessor for Logger(0);
  sub_100056D88(v14, (uint64_t)qword_1005F5748);
  swift_bridgeObjectRetain(a3);
  v15 = a4;
  v16 = a5;
  swift_errorRetain(a1);
  swift_bridgeObjectRetain(a3);
  v17 = v15;
  v18 = v16;
  v19 = swift_errorRetain(a1);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.default.getter(v20);
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc(22, -1);
    v136 = swift_slowAlloc(64, -1);
    v143 = v136;
    *(_DWORD *)v22 = 136315394;
    v23 = sub_1001675A0(a2, a3, v17, v18);
    v24 = a3;
    v26 = v25;
    v142 = sub_100056DA0(v23, v25, &v143);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v142, &v143);

    swift_bridgeObjectRelease_n(v24, 2);
    swift_bridgeObjectRelease(v26);
    *(_WORD *)(v22 + 12) = 2080;
    swift_getErrorValue(a1, v141, v140);
    v27 = Error.localizedDescription.getter(v140[1], v140[2]);
    v29 = v28;
    v142 = sub_100056DA0(v27, v28, &v143);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v142, &v143);
    swift_bridgeObjectRelease(v29);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "FMETACache: ETA calculation error: %s for request: %s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy(v136, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v136, -1, -1);
    swift_slowDealloc(v22, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n(a3, 2);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }

  objc_msgSend(v17, "coordinate");
  v74 = round(v73 * 10000.0) / 10000.0;
  objc_msgSend(v17, "coordinate");
  v76 = round(v75 * 10000.0) / 10000.0;
  v143 = 0;
  v144 = (void *)0xE000000000000000;
  v77.n128_f64[0] = v74;
  Double.write<A>(to:)(&v143, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v77);
  v78._countAndFlagsBits = 45;
  v78._object = (void *)0xE100000000000000;
  String.append(_:)(v78);
  v79.n128_f64[0] = v76;
  Double.write<A>(to:)(&v143, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v79);
  v81 = v143;
  v80 = (unint64_t)v144;
  objc_msgSend(v18, "coordinate");
  v83 = round(v82 * 10000.0) / 10000.0;
  objc_msgSend(v18, "coordinate");
  v85 = round(v84 * 10000.0) / 10000.0;
  v143 = 0;
  v144 = (void *)0xE000000000000000;
  v86.n128_f64[0] = v83;
  Double.write<A>(to:)(&v143, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v86);
  v87._countAndFlagsBits = 45;
  v87._object = (void *)0xE100000000000000;
  String.append(_:)(v87);
  v88.n128_f64[0] = v85;
  Double.write<A>(to:)(&v143, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v88);
  v89 = v143;
  v90 = v144;
  v143 = v81;
  v144 = (void *)v80;
  swift_bridgeObjectRetain(v80);
  v91._countAndFlagsBits = v89;
  v91._object = v90;
  String.append(_:)(v91);
  swift_bridgeObjectRelease(v80);
  swift_bridgeObjectRelease(v90);
  v92 = v143;
  v93 = (uint64_t)v144;
  swift_beginAccess(a6 + 32, &v143, 33, 0);
  v94 = sub_100172C2C(v92, v93);
  v96 = v95;
  v98 = v97;
  v100 = v99;
  swift_endAccess(&v143);
  swift_bridgeObjectRelease(v93);
  sub_1001E4394(v94, v96, v98, v100);
}

uint64_t sub_1001E4350()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));

  return swift_deallocClassInstance(v0, 56, 7);
}

void sub_1001E4394(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  if (a2)
  {
    swift_bridgeObjectRelease(a2);

  }
}

double sub_1001E43D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return sub_1001E3624(a1, a2, a3, a4, a5, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), *(_QWORD *)(v5 + 32), *(void **)(v5 + 40), *(void **)(v5 + 48));
}

uint64_t sub_1001E4404()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));

  swift_release(*(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  return swift_deallocObject(v0, 96, 7);
}

void sub_1001E4450()
{
  uint64_t v0;

  sub_1001E3864(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(id *)(v0 + 40), *(void **)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(void **)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
}

void sub_1001E4488()
{
  uint64_t v0;

  sub_1001E2E38(*(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(id *)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_1001E44B4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 64, 7);
}

void sub_1001E44F0()
{
  uint64_t v0;

  sub_1001E2700(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD **)(v0 + 56));
}

uint64_t sub_1001E4500()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

_QWORD *sub_1001E4520(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v16 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    v15 = v1;
    v17 = _swiftEmptyArrayStorage;
    sub_100112050(0, v6, 0);
    v7 = v17;
    v8 = type metadata accessor for FMIPUnknownItem(0);
    v9 = *(_QWORD *)(v8 - 8);
    v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    do
    {
      FMIPUnknownItem.identifier.getter(v8);
      v17 = v7;
      v13 = v7[2];
      v12 = v7[3];
      if (v13 >= v12 >> 1)
      {
        sub_100112050(v12 > 1, v13 + 1, 1);
        v7 = v17;
      }
      v7[2] = v13 + 1;
      v8 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))((unint64_t)v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v13, v5, v16);
      v10 += v11;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_1001E4678(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v6 = sub_100053F2C(&qword_1005DA768);
  __chkstk_darwin(v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FMUnknownItemCellViewModel(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_1000051EC(a1, &qword_1005DA768);
    sub_100172D28(a2, (uint64_t)v8);
    v13 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);
    return sub_1000051EC((uint64_t)v8, &qword_1005DA768);
  }
  else
  {
    sub_100051774(a1, (uint64_t)v11, type metadata accessor for FMUnknownItemCellViewModel);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v19 = *v3;
    *v3 = 0x8000000000000000;
    sub_10017A43C((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    v16 = *v3;
    *v3 = v19;
    swift_bridgeObjectRelease(v16);
    v17 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a2, v17);
  }
}

uint64_t sub_1001E47F8(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint8_t *v23;
  Class isa;
  objc_class *v25;
  uint64_t v26;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  objc_super v32;

  v3 = v2;
  v5 = type metadata accessor for UICellConfigurationState(0, a2);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D2070 != -1)
    swift_once(&qword_1005D2070, sub_1003CB89C);
  v9 = type metadata accessor for Logger(0);
  sub_100056D88(v9, (uint64_t)qword_1005F6010);
  v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(12, -1);
    v29 = v2;
    v14 = (uint8_t *)v13;
    v15 = swift_slowAlloc(32, -1);
    v28 = a1;
    v16 = v15;
    v31 = v15;
    *(_DWORD *)v14 = 136315138;
    v17 = sub_100008000((unint64_t *)&unk_1005DA810, (uint64_t (*)(uint64_t))&type metadata accessor for UICellConfigurationState, (uint64_t)&protocol conformance descriptor for UICellConfigurationState);
    v18 = dispatch thunk of CustomStringConvertible.description.getter(v5, v17);
    v20 = v19;
    v30 = sub_100056DA0(v18, v19, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, &v31);
    v21 = swift_bridgeObjectRelease(v20);
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v21);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "FMUnknownItemListCellView: updateConfiguration(using: %s)", v14, 0xCu);
    swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
    v22 = v16;
    a1 = v28;
    swift_slowDealloc(v22, -1, -1);
    v23 = v14;
    v3 = v29;
    swift_slowDealloc(v23, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }

  isa = UICellConfigurationState._bridgeToObjectiveC()().super.super.isa;
  v25 = (objc_class *)type metadata accessor for FMUnknownItemListCellView();
  v32.receiver = v3;
  v32.super_class = v25;
  objc_msgSendSuper2(&v32, "_bridgedUpdateConfigurationUsingState:", isa);

  sub_1001E4AF0();
  return sub_1001E50FC(a1, v26);
}

void sub_1001E4AF0()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  int v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t i;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  char *v38;
  uint64_t v39;
  double v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  id v43;
  id v44;
  char *v45;
  uint64_t v46;
  double v47;
  double v48;
  double v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  Class isa;
  double v54;
  uint64_t v55;
  id v56;
  id v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  char *v63;
  uint64_t v64;
  id v65;
  _QWORD v66[5];

  v1 = v0;
  v2 = type metadata accessor for UIListContentConfiguration.ImageProperties(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100053F2C(&qword_1005DA7F8);
  __chkstk_darwin(v6);
  v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for UIListContentConfiguration(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = OBJC_IVAR____TtC6FindMy25FMUnknownItemListCellView_setupCompleted;
  if ((v1[OBJC_IVAR____TtC6FindMy25FMUnknownItemListCellView_setupCompleted] & 1) != 0)
    return;
  v65 = objc_msgSend(v1, "contentView");
  v14 = objc_opt_self(UIListContentView);
  v15 = swift_dynamicCastObjCClass(v65, v14);
  if (!v15)
  {

    return;
  }
  v16 = (void *)v15;
  v64 = v3;
  UITableViewCell.contentConfiguration.getter(v66);
  if (!v66[3])
  {
    sub_1000051EC((uint64_t)v66, &qword_1005DA800);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    goto LABEL_17;
  }
  v17 = sub_100053F2C(&qword_1005DA808);
  v18 = swift_dynamicCast(v8, v66, v17, v9, 6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, v18 ^ 1u, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
LABEL_17:

    sub_1000051EC((uint64_t)v8, &qword_1005DA7F8);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  v19 = objc_msgSend(v16, "imageLayoutGuide");
  if (v19)
  {
    v62 = v19;
    v60 = v2;
    v20 = *(void **)&v1[OBJC_IVAR____TtC6FindMy25FMUnknownItemListCellView_imageContainer];
    objc_msgSend(v16, "addSubview:", v20);
    v21 = objc_msgSend(v20, "constraints");
    v58 = sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
    v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v21, v58);

    if ((unint64_t)v22 >> 62)
    {
      if (v22 < 0)
        v55 = v22;
      else
        v55 = v22 & 0xFFFFFFFFFFFFFF8;
      v56 = v20;
      swift_bridgeObjectRetain(v22);
      v23 = _CocoaArrayWrapper.endIndex.getter(v55);
    }
    else
    {
      v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
      v24 = v20;
      swift_bridgeObjectRetain(v22);
    }
    v59 = v5;
    v61 = v13;
    v63 = v12;
    if (!v23)
      goto LABEL_18;
    if (v23 >= 1)
    {
      for (i = 0; i != v23; ++i)
      {
        if ((v22 & 0xC000000000000001) != 0)
          v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v22);
        else
          v26 = *(id *)(v22 + 8 * i + 32);
        v27 = v26;
        objc_msgSend(v20, "removeConstraint:", v26);

      }
LABEL_18:

      swift_bridgeObjectRelease_n(v22, 2);
      objc_msgSend(v20, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v57 = (id)objc_opt_self(NSLayoutConstraint);
      v28 = sub_100053F2C(&qword_1005D2F10);
      v29 = swift_allocObject(v28, 64, 7);
      *(_OWORD *)(v29 + 16) = xmmword_100481720;
      v30 = objc_msgSend(v20, "centerXAnchor");
      v31 = v62;
      v32 = objc_msgSend(v62, "centerXAnchor");
      v33 = objc_msgSend(v30, "constraintEqualToAnchor:", v32);

      *(_QWORD *)(v29 + 32) = v33;
      v34 = objc_msgSend(v20, "centerYAnchor");
      v35 = objc_msgSend(v31, "centerYAnchor");
      v36 = objc_msgSend(v34, "constraintEqualToAnchor:", v35);

      *(_QWORD *)(v29 + 40) = v36;
      v37 = objc_msgSend(v20, "widthAnchor");
      v38 = v59;
      v39 = UIListContentConfiguration.imageProperties.getter();
      v40 = UIListContentConfiguration.ImageProperties.reservedLayoutSize.getter(v39);
      v41 = *(void (**)(char *, uint64_t))(v64 + 8);
      v42 = v60;
      v41(v38, v60);
      v43 = objc_msgSend(v37, "constraintEqualToConstant:", v40);

      *(_QWORD *)(v29 + 48) = v43;
      v44 = objc_msgSend(v20, "heightAnchor");
      v45 = v63;
      v46 = UIListContentConfiguration.imageProperties.getter();
      v47 = UIListContentConfiguration.ImageProperties.reservedLayoutSize.getter(v46);
      v49 = v48;
      ((void (*)(char *, uint64_t, double))v41)(v38, v42, v47);
      v50 = objc_msgSend(v44, "constraintEqualToConstant:", v49);

      *(_QWORD *)(v29 + 56) = v50;
      v66[0] = v29;
      specialized Array._endMutation()(v51);
      v52 = v66[0];
      isa = Array._bridgeToObjectiveC()().super.isa;
      *(_QWORD *)&v54 = swift_bridgeObjectRelease(v52).n128_u64[0];
      objc_msgSend(v57, "activateConstraints:", isa, v54);

      (*(void (**)(char *, uint64_t))(v10 + 8))(v45, v9);
      v1[v61] = 1;
      return;
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);

  }
}

uint64_t sub_1001E50FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  void (*v32)(char *, char *, uint64_t);
  uint64_t (*v33)(char *, uint64_t);
  char *v34;
  uint64_t v35;
  char v36;
  char *v37;
  uint64_t v38;
  char **v39;
  char v40;
  char *v41;
  void (*v42)(char *, char *, uint64_t);
  id v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(char *, uint64_t, uint64_t);
  _QWORD v55[5];

  v52 = a1;
  v51 = type metadata accessor for UICellConfigurationState(0, a2);
  v53 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100053F2C(&qword_1005DA760);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v44 - v10;
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v44 - v13;
  __chkstk_darwin(v12);
  v16 = (char *)&v44 - v15;
  v17 = type metadata accessor for UIBackgroundConfiguration(0);
  v18 = *(_QWORD **)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v19);
  v24 = (char *)&v44 - v23;
  UITableViewCell.backgroundConfiguration.getter(v22);
  v54 = (unsigned int (*)(char *, uint64_t, uint64_t))v18[6];
  if (v54(v11, 1, v17))
  {
    sub_1000051EC((uint64_t)v11, &qword_1005DA760);
    v25 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v18[7];
    v25(v14, 1, 1, v17);
LABEL_4:
    sub_1000051EC((uint64_t)v14, &qword_1005DA760);
    v25(v16, 1, 1, v17);
    return sub_1000051EC((uint64_t)v16, &qword_1005DA760);
  }
  v48 = v24;
  v49 = v4;
  v46 = v8;
  v47 = v2;
  v45 = (void (*)(char *, char *, uint64_t))v18[2];
  v45(v21, v11, v17);
  sub_1000051EC((uint64_t)v11, &qword_1005DA760);
  v26 = v51;
  v55[3] = v51;
  v55[4] = &protocol witness table for UICellConfigurationState;
  v27 = (char *)sub_10003D370(v55);
  v28 = v52;
  v50 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v53 + 16);
  v50(v27, v52, v26);
  UIBackgroundConfiguration.updated(for:)(v55);
  v29 = (void (*)(char *, uint64_t))v18[1];
  v29(v21, v17);
  sub_100029574(v55);
  v25 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v18[7];
  v25(v14, 0, 1, v17);
  if (v54(v14, 1, v17) == 1)
    goto LABEL_4;
  v31 = v50;
  v32 = (void (*)(char *, char *, uint64_t))v18[4];
  v32(v16, v14, v17);
  v25(v16, 0, 1, v17);
  if (v54(v16, 1, v17) == 1)
    return sub_1000051EC((uint64_t)v16, &qword_1005DA760);
  v33 = (uint64_t (*)(char *, uint64_t))v29;
  v34 = v48;
  v35 = ((uint64_t (*)(char *, char *, uint64_t))v32)(v48, v16, v17);
  v36 = UICellConfigurationState.isHighlighted.getter(v35);
  v37 = v49;
  v38 = v31(v49, v28, v26);
  if ((v36 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v53 + 8))(v37, v26);
    v39 = &selRef_separatorColor;
  }
  else
  {
    v40 = UICellConfigurationState.isSelected.getter(v38);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v37, v26);
    if ((v40 & 1) != 0)
      v39 = &selRef_separatorColor;
    else
      v39 = &selRef_clearColor;
  }
  v41 = v46;
  v42 = v45;
  v43 = objc_msgSend((id)objc_opt_self(UIColor), *v39);
  UIBackgroundConfiguration.backgroundColor.setter(v43);
  v42(v41, v34, v17);
  v25(v41, 0, 1, v17);
  UITableViewCell.backgroundConfiguration.setter(v41);
  return v33(v34, v17);
}

double sub_1001E54E0(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  double result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32[2];

  v29 = a1;
  v3 = type metadata accessor for FMUnknownItemCellViewModel(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = sub_100053F2C(&qword_1005D7E50);
  __chkstk_darwin(v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100053F2C(&qword_1005DA7D0);
  v30 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32[1] = a2;
  v12 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v32[0] = (id)static OS_dispatch_queue.main.getter(v12);
  v13 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 1, 1, v13);
  v14 = sub_100053F2C(&qword_1005DA7D8);
  v15 = sub_10003F774((unint64_t *)&unk_1005DA7E0, &qword_1005DA7D8, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v16 = sub_10015069C();
  Publisher.receive<A>(on:options:)(v32, v8, v14, v12, v15, v16);
  sub_1000051EC((uint64_t)v8, &qword_1005D7E50);

  sub_10004FC74(v29, (uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for FMUnknownItemCellViewModel);
  v17 = *(unsigned __int8 *)(v4 + 80);
  v18 = (v17 + 16) & ~v17;
  v19 = (v5 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = swift_allocObject(&unk_1005502D0, v19 + 8, v17 | 7);
  sub_100051774((uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v20 + v18, type metadata accessor for FMUnknownItemCellViewModel);
  v21 = v31;
  *(_QWORD *)(v20 + v19) = v31;
  v22 = sub_10003F774(&qword_1005DA7F0, &qword_1005DA7D0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v23 = v21;
  v24 = Publisher<>.sink(receiveValue:)(sub_1001EDE84, v20, v9, v22);
  v25 = swift_release(v20);
  (*(void (**)(char *, uint64_t, __n128))(v30 + 8))(v11, v9, v25);
  v26 = *(_QWORD *)&v23[OBJC_IVAR____TtC6FindMy25FMUnknownItemListCellView_imageCancellable];
  *(_QWORD *)&v23[OBJC_IVAR____TtC6FindMy25FMUnknownItemListCellView_imageCancellable] = v24;
  *(_QWORD *)&result = swift_release(v26).n128_u64[0];
  return result;
}

uint64_t sub_1001E5770(void **a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void **v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v11;

  v4 = type metadata accessor for FMUnknownItemCellViewModel(0);
  __chkstk_darwin(v4);
  v6 = (void **)((char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *a1;
  sub_10004FC74(a2, (uint64_t)v6, type metadata accessor for FMUnknownItemCellViewModel);
  v8 = *v6;
  v9 = v7;

  *v6 = v7;
  sub_10046363C((uint64_t)v6);
  return sub_10004FCB8((uint64_t)v6, type metadata accessor for FMUnknownItemCellViewModel);
}

id sub_1001E5828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v6;
  id v7;
  char *v8;
  NSString v9;
  id v10;
  objc_super v12;

  *(_QWORD *)&v3[OBJC_IVAR____TtC6FindMy25FMUnknownItemListCellView_imageCancellable] = 0;
  v6 = OBJC_IVAR____TtC6FindMy25FMUnknownItemListCellView_imageContainer;
  v7 = objc_allocWithZone((Class)type metadata accessor for FMTableViewCellImageContainer());
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, "init");
  v8[OBJC_IVAR____TtC6FindMy25FMUnknownItemListCellView_setupCompleted] = 0;

  if (a3)
  {
    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v9 = 0;
  }
  v12.receiver = v8;
  v12.super_class = (Class)type metadata accessor for FMUnknownItemListCellView();
  v10 = objc_msgSendSuper2(&v12, "initWithStyle:reuseIdentifier:", a1, v9);

  return v10;
}

id sub_1001E5954(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  id v6;
  objc_super v8;

  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy25FMUnknownItemListCellView_imageCancellable] = 0;
  v3 = OBJC_IVAR____TtC6FindMy25FMUnknownItemListCellView_imageContainer;
  v4 = objc_allocWithZone((Class)type metadata accessor for FMTableViewCellImageContainer());
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  v5[OBJC_IVAR____TtC6FindMy25FMUnknownItemListCellView_setupCompleted] = 0;

  v8.receiver = v5;
  v8.super_class = (Class)type metadata accessor for FMUnknownItemListCellView();
  v6 = objc_msgSendSuper2(&v8, "initWithCoder:", a1);

  return v6;
}

id sub_1001E5A24()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMUnknownItemListCellView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMUnknownItemListCellView()
{
  return objc_opt_self(_TtC6FindMy25FMUnknownItemListCellView);
}

uint64_t type metadata accessor for FMUnknownItemsListDataSource(uint64_t a1)
{
  return sub_10001DC04(a1, (uint64_t *)&unk_1005DA548, (uint64_t)&nominal type descriptor for FMUnknownItemsListDataSource);
}

uint64_t sub_1001E5AC0(uint64_t a1)
{
  _QWORD v2[11];

  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[4] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[5] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[6] = &unk_100487730;
  v2[7] = &unk_100487748;
  v2[8] = &unk_100487730;
  v2[9] = &unk_100487730;
  v2[10] = &unk_100487760;
  return swift_initClassMetadata2(a1, 0, 11, v2, a1 + qword_1005F5240);
}

uint64_t sub_1001E5B50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  char v47;
  int64_t v48;
  uint64_t v49;
  int64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  int64_t v55;
  _BOOL4 v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v4 = type metadata accessor for FMUnknownItemCellViewModel(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v53 = (uint64_t)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v9 = (char *)&v48 - v8;
  v10 = type metadata accessor for UUID(0);
  v58 = *(_QWORD *)(v10 - 8);
  v59 = v10;
  __chkstk_darwin(v10);
  v54 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100053F2C(&qword_1005DA740);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v13);
  v18 = (char *)&v48 - v17;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v55 = 0;
  v51 = a1;
  v21 = *(_QWORD *)(a1 + 64);
  v20 = a1 + 64;
  v19 = v21;
  v22 = 1 << *(_BYTE *)(v20 - 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v19;
  v49 = v20;
  v50 = (unint64_t)(v22 + 63) >> 6;
  v48 = v50 - 1;
  v52 = v15;
  while (1)
  {
    if (v24)
    {
      v25 = __clz(__rbit64(v24));
      v26 = (v24 - 1) & v24;
      v27 = v25 | (v55 << 6);
LABEL_8:
      v28 = v51;
      (*(void (**)(char *, unint64_t, uint64_t))(v58 + 16))(v15, *(_QWORD *)(v51 + 48) + *(_QWORD *)(v58 + 72) * v27, v59);
      v29 = *(_QWORD *)(v28 + 56) + *(_QWORD *)(v5 + 72) * v27;
      v30 = sub_100053F2C(&qword_1005DA748);
      sub_10004FC74(v29, (uint64_t)&v15[*(int *)(v30 + 48)], type metadata accessor for FMUnknownItemCellViewModel);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v15, 0, 1, v30);
      goto LABEL_30;
    }
    v31 = v55 + 1;
    if (__OFADD__(v55, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v31 < v50)
    {
      v32 = *(_QWORD *)(v49 + 8 * v31);
      if (v32)
        goto LABEL_12;
      v33 = v55 + 2;
      ++v55;
      if (v31 + 1 < v50)
      {
        v32 = *(_QWORD *)(v49 + 8 * v33);
        if (v32)
          goto LABEL_15;
        v55 = v31 + 1;
        if (v31 + 2 < v50)
        {
          v32 = *(_QWORD *)(v49 + 8 * (v31 + 2));
          if (v32)
          {
            v31 += 2;
            goto LABEL_12;
          }
          v55 = v31 + 2;
          if (v31 + 3 < v50)
          {
            v32 = *(_QWORD *)(v49 + 8 * (v31 + 3));
            if (v32)
            {
              v31 += 3;
              goto LABEL_12;
            }
            v33 = v31 + 4;
            v55 = v31 + 3;
            if (v31 + 4 < v50)
              break;
          }
        }
      }
    }
LABEL_29:
    v34 = sub_100053F2C(&qword_1005DA748);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v15, 1, 1, v34);
    v26 = 0;
LABEL_30:
    sub_1001ED4FC((uint64_t)v15, (uint64_t)v18);
    v35 = sub_100053F2C(&qword_1005DA748);
    v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v18, 1, v35);
    v56 = v36 == 1;
    if (v36 == 1)
      return v56;
    v57 = v26;
    v37 = (uint64_t)&v18[*(int *)(v35 + 48)];
    v39 = v58;
    v38 = v59;
    v40 = (uint64_t)v54;
    v41 = v18;
    (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v54, v18, v59);
    sub_100051774(v37, (uint64_t)v9, type metadata accessor for FMUnknownItemCellViewModel);
    v42 = sub_100171818(v40);
    v43 = (uint64_t)v9;
    v45 = v44;
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v40, v38);
    if ((v45 & 1) == 0)
    {
      sub_10004FCB8(v43, type metadata accessor for FMUnknownItemCellViewModel);
      return 0;
    }
    v46 = v53;
    sub_10004FC74(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v5 + 72) * v42, v53, type metadata accessor for FMUnknownItemCellViewModel);
    v47 = sub_1000E2024(v46, v43);
    sub_10004FCB8(v46, type metadata accessor for FMUnknownItemCellViewModel);
    result = sub_10004FCB8(v43, type metadata accessor for FMUnknownItemCellViewModel);
    v9 = (char *)v43;
    v15 = v52;
    v18 = v41;
    v24 = v57;
    if ((v47 & 1) == 0)
      return v56;
  }
  v32 = *(_QWORD *)(v49 + 8 * v33);
  if (v32)
  {
LABEL_15:
    v31 = v33;
LABEL_12:
    v26 = (v32 - 1) & v32;
    v27 = __clz(__rbit64(v32)) + (v31 << 6);
    v55 = v31;
    goto LABEL_8;
  }
  while (1)
  {
    v31 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v31 >= v50)
    {
      v55 = v48;
      goto LABEL_29;
    }
    v32 = *(_QWORD *)(v49 + 8 * v31);
    ++v33;
    if (v32)
      goto LABEL_12;
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_1001E5FD4(uint64_t a1, uint64_t a2)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v4 = 0;
  v5 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v9)
      return;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
        {
          v4 = v12 + 3;
          if (v12 + 3 >= v9)
            return;
          v13 = *(_QWORD *)(v5 + 8 * v4);
          if (!v13)
            break;
        }
      }
    }
LABEL_23:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v11);
    v16 = sub_1001717C0(*(_BYTE *)(*(_QWORD *)(a1 + 48) + v11));
    if ((v17 & 1) != 0)
    {
      v18 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v16);
      swift_bridgeObjectRetain(v15);
      swift_bridgeObjectRetain(v18);
      v20 = sub_1001F42E8(v19, v15);
      swift_bridgeObjectRelease(v15);
      swift_bridgeObjectRelease(v18);
      if ((v20 & 1) != 0)
        continue;
    }
    return;
  }
  v14 = v12 + 4;
  if (v14 >= v9)
    return;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_23;
  }
LABEL_29:
  __break(1u);
}

void *sub_1001E6180(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess(v1 + 24, a1, 33, 0);
  return &j__swift_endAccess;
}

uint64_t sub_1001E61BC(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  _BYTE v11[24];
  _BYTE v12[24];
  _BYTE v13[24];
  _BYTE v14[24];
  _BYTE v15[24];

  swift_beginAccess(a1 + 3, v15, 0, 0);
  v3 = a1[3];
  swift_beginAccess(v1 + 3, v14, 1, 0);
  v4 = v1[3];
  v1[3] = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  swift_beginAccess(a1 + 2, v13, 0, 0);
  v5 = a1[2];
  swift_beginAccess(v1 + 2, v12, 1, 0);
  v6 = v1[2];
  v1[2] = v5;
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRelease(v6);
  swift_beginAccess(a1 + 4, v11, 0, 0);
  v7 = a1[4];
  swift_beginAccess(v1 + 4, &v10, 1, 0);
  v8 = v1[4];
  v1[4] = v7;
  swift_bridgeObjectRetain(v7);
  return swift_bridgeObjectRelease(v8);
}

uint64_t sub_1001E62B4()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t sub_1001E62E8(uint64_t *a1, uint64_t *a2)
{
  return sub_1001ED068(*a1, *a2);
}

uint64_t sub_1001E62F4(char a1)
{
  id v1;
  unint64_t v2;
  unint64_t v3;
  const char *v4;
  unint64_t v5;
  Swift::String_optional v6;
  Swift::String v7;
  uint64_t countAndFlagsBits;
  unint64_t v10;

  if (a1)
  {
    if (a1 != 1)
      return 0;
    v1 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v2 = 0xD000000000000018;
    v3 = 0xD000000000000032;
    v10 = 0x80000001004A5660;
    v4 = "UNKNOWN_ITEMS_LIST_SECTION_TITLE_DETECTED_NEAR_YOU";
  }
  else
  {
    v1 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v2 = 0xD000000000000018;
    v3 = 0xD000000000000038;
    v10 = 0x80000001004A5660;
    v4 = "UNKNOWN_ITEMS_LIST_SECTION_TITLE_PREVIOUSLY_NOTIFIED_YOU";
  }
  v5 = (unint64_t)(v4 - 32) | 0x8000000000000000;
  v6.value._object = (void *)0x80000001004A5640;
  v6.value._countAndFlagsBits = 0xD000000000000013;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, v6, (NSBundle)v1, v7, *(Swift::String *)&v2)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t *sub_1001E6420@<X0>(uint64_t *result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  v2 = *result;
  if ((unint64_t)*result >= 3)
    LOBYTE(v2) = 3;
  *a2 = v2;
  return result;
}

void sub_1001E6438(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

void sub_1001E6444(_QWORD *a1@<X8>)
{
  *a1 = &off_10053FC30;
}

Swift::Int sub_1001E6454()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int v10;
  Swift::UInt v11;
  uint64_t v12;
  _QWORD v15[9];

  v1 = v0;
  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v15[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FMUnknownItemsListDataSource.Entry(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v15[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)(v15, 0);
  sub_10004FC74(v1, (uint64_t)v8, type metadata accessor for FMUnknownItemsListDataSource.Entry);
  v9 = sub_100053F2C((uint64_t *)&unk_1005DEE00);
  v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 2, v9);
  if (v10)
  {
    if (v10 == 1)
      v11 = 1;
    else
      v11 = 2;
    Hasher._combine(_:)(v11);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    Hasher._combine(_:)(0);
    v12 = sub_100008000((unint64_t *)&unk_1005E4270, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    dispatch thunk of Hashable.hash(into:)(v15, v2, v12);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return Hasher._finalize()();
}

void sub_1001E65D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int v12;
  Swift::UInt v13;
  uint64_t v14;
  uint64_t v15;

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004FC74(v2, (uint64_t)v10, type metadata accessor for FMUnknownItemsListDataSource.Entry);
  v11 = sub_100053F2C((uint64_t *)&unk_1005DEE00);
  v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 2, v11);
  if (v12)
  {
    if (v12 == 1)
      v13 = 1;
    else
      v13 = 2;
    Hasher._combine(_:)(v13);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v10, v4);
    Hasher._combine(_:)(0);
    v14 = sub_100008000((unint64_t *)&unk_1005E4270, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    dispatch thunk of Hashable.hash(into:)(a1, v4, v14);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
}

Swift::Int sub_1001E6720(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int v12;
  Swift::UInt v13;
  uint64_t v14;
  _QWORD v17[9];

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v17[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v17[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)(v17, a1);
  sub_10004FC74(v2, (uint64_t)v10, type metadata accessor for FMUnknownItemsListDataSource.Entry);
  v11 = sub_100053F2C((uint64_t *)&unk_1005DEE00);
  v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 2, v11);
  if (v12)
  {
    if (v12 == 1)
      v13 = 1;
    else
      v13 = 2;
    Hasher._combine(_:)(v13);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v10, v4);
    Hasher._combine(_:)(0);
    v14 = sub_100008000((unint64_t *)&unk_1005E4270, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    dispatch thunk of Hashable.hash(into:)(v17, v4, v14);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return Hasher._finalize()();
}

void sub_1001E6898()
{
  void *v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;

  if (qword_1005D2070 != -1)
    swift_once(&qword_1005D2070, sub_1003CB89C);
  v1 = type metadata accessor for Logger(0);
  sub_100056D88(v1, (uint64_t)qword_1005F6010);
  v9 = v0;
  v2 = Logger.logObject.getter(v9);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(12, -1);
    v5 = swift_slowAlloc(32, -1);
    *(_DWORD *)v4 = 136315138;
    v6 = v9[qword_1005DA538];
    v11 = v5;
    if (v6)
      v7 = 1702195828;
    else
      v7 = 0x65736C6166;
    if (v6)
      v8 = 0xE400000000000000;
    else
      v8 = 0xE500000000000000;
    v10 = sub_100056DA0(v7, v8, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v10, &v11);

    swift_bridgeObjectRelease(v8);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "FMUnknownItemsListDataSource: isUpdating: %s", v4, 0xCu);
    swift_arrayDestroy(v5, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v5, -1, -1);
    swift_slowDealloc(v4, -1, -1);

  }
  else
  {

  }
}

id sub_1001E6A80(uint64_t a1, void *a2, char a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  id v39;
  _QWORD *v40;

  v38 = a1;
  v39 = a2;
  v37 = a3 & 1;
  v4 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = qword_1005DA500;
  v14 = type metadata accessor for FMIPUnknownAccessoryDiscoveryController(0);
  swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  v15 = v3;
  *(_QWORD *)&v3[v13] = FMIPUnknownAccessoryDiscoveryController.init()();
  v16 = qword_1005DA508;
  v17 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  static DispatchQoS.unspecified.getter(v17);
  v40 = _swiftEmptyArrayStorage;
  v18 = sub_100008000((unint64_t *)&unk_1005D3970, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v19 = sub_100053F2C((uint64_t *)&unk_1005D20F0);
  v20 = sub_10003F774((unint64_t *)&unk_1005D3980, (uint64_t *)&unk_1005D20F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v40, v19, v20, v7, v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v36);
  *(_QWORD *)&v15[v16] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000029, 0x80000001004B3AC0, v12, v9, v6, 0);
  *(_QWORD *)&v15[qword_1005DA528] = 0;
  v15[qword_1005DA530] = 0;
  v15[qword_1005DA538] = 0;
  v21 = &v15[qword_1005DA540];
  v22 = type metadata accessor for FMUnknownItemsListDataSource.ViewModel();
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v23 = (_QWORD *)swift_allocObject(v22, 40, 7);
  v23[2] = sub_10011DA98((uint64_t)_swiftEmptyArrayStorage);
  v23[3] = sub_10011E3B8((uint64_t)_swiftEmptyArrayStorage);
  v23[4] = sub_10011DC50((uint64_t)_swiftEmptyArrayStorage);
  v15[qword_1005DA520] = v37;
  v24 = v38;
  *(_QWORD *)&v15[qword_1005DA4F0] = v38;
  *(_QWORD *)&v15[qword_1005DA510] = v23;
  v25 = *(_QWORD *)(v24 + 64);
  *(_QWORD *)&v15[qword_1005DA4F8] = v25;
  swift_retain(v24);
  swift_retain(v23);
  v26 = swift_retain(v25);
  v27 = FMIPManager.unknownItems.getter(v26);
  v28 = sub_1001E4520(v27);
  swift_bridgeObjectRelease(v27);
  *(_QWORD *)&v15[qword_1005DA518] = v28;

  swift_retain(v23);
  v29 = v39;
  v30 = (id)UITableViewDiffableDataSource.init(tableView:cellProvider:)();
  sub_1001E83F8();
  sub_1001E819C(v29);
  v31 = (void *)objc_opt_self(NSNotificationCenter);
  v32 = objc_msgSend(v31, "defaultCenter");
  objc_msgSend(v32, "addObserver:selector:name:object:", v30, "applicationDidEnterBackground", UIApplicationDidEnterBackgroundNotification, 0);

  v33 = objc_msgSend(v31, "defaultCenter");
  objc_msgSend(v33, "addObserver:selector:name:object:", v30, "applicationWillEnterForeground", UIApplicationWillEnterForegroundNotification, 0);
  swift_release(v23);

  swift_release(v24);
  return v30;
}

uint64_t sub_1001E6E88()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + qword_1005DA4F0));
  swift_release(*(_QWORD *)(v0 + qword_1005DA4F8));
  swift_release(*(_QWORD *)(v0 + qword_1005DA500));

  swift_release(*(_QWORD *)(v0 + qword_1005DA510));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_1005DA518));
  swift_release(*(_QWORD *)(v0 + qword_1005DA528));
  return sub_1000327F0(*(_QWORD *)(v0 + qword_1005DA540), *(_QWORD *)(v0 + qword_1005DA540 + 8));
}

id sub_1001E6F18()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  objc_class *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  objc_super v26;
  _QWORD aBlock[5];
  uint64_t v28;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v25 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v23 = *(_QWORD *)(v5 - 8);
  v24 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (void *)objc_opt_self(NSNotificationCenter);
  v9 = objc_msgSend(v8, "defaultCenter");
  objc_msgSend(v9, "removeObserver:name:object:", v1, UIApplicationDidEnterBackgroundNotification, 0);

  v10 = objc_msgSend(v8, "defaultCenter");
  objc_msgSend(v10, "removeObserver:name:object:", v1, UIApplicationWillEnterForegroundNotification, 0);

  v11 = *(_QWORD *)&v1[qword_1005DA4F0];
  sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v12 = swift_retain(v11);
  v13 = (void *)static OS_dispatch_queue.main.getter(v12);
  aBlock[4] = sub_1001EDB84;
  v28 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_1005500B8;
  v14 = _Block_copy(aBlock);
  v15 = v28;
  swift_retain(v11);
  swift_release(v15);
  static DispatchQoS.unspecified.getter(v16);
  aBlock[0] = _swiftEmptyArrayStorage;
  v17 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v18 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v19 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v18, v19, v2, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v4, v14);
  _Block_release(v14);
  swift_release(v11);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v24);
  v20 = (objc_class *)type metadata accessor for FMUnknownItemsListDataSource(0);
  v26.receiver = v1;
  v26.super_class = v20;
  return objc_msgSendSuper2(&v26, "dealloc");
}

void sub_1001E71D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  uint64_t v16;
  uint64_t v17;
  uint64_t Strong;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24[3];

  v1 = *(_QWORD *)(a1 + 24);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100056D88(v2, (uint64_t)qword_1005F5748);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v24[0] = v7;
    *(_DWORD *)v6 = 136315138;
    v8 = type metadata accessor for FMIPUnknownItem(0);
    v9 = Array.description.getter(_swiftEmptyArrayStorage, v8);
    v11 = v10;
    v23 = sub_100056DA0(v9, v10, v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, v24);
    swift_bridgeObjectRelease(v11);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMDevicesProvider: update detectedUnknownItems %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }

  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy17FMDevicesProvider_unknownItemsDetectedNearYou);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy17FMDevicesProvider_unknownItemsDetectedNearYou) = _swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v12);
  swift_beginAccess(v1 + 16, v24, 0, 0);
  v13 = *(_QWORD *)(v1 + 16);
  if (!((unint64_t)v13 >> 62))
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(v1 + 16));
    if (v14)
      goto LABEL_7;
LABEL_20:
    swift_bridgeObjectRelease(v13);
    return;
  }
  if (v13 < 0)
    v22 = *(_QWORD *)(v1 + 16);
  else
    v22 = v13 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(v1 + 16));
  v14 = _CocoaArrayWrapper.endIndex.getter(v22);
  if (!v14)
    goto LABEL_20;
LABEL_7:
  if (v14 >= 1)
  {
    for (i = 0; i != v14; ++i)
    {
      if ((v13 & 0xC000000000000001) != 0)
      {
        v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v13);
      }
      else
      {
        v16 = *(_QWORD *)(v13 + 8 * i + 32);
        swift_retain(v16);
      }
      v17 = v16 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
      Strong = swift_unknownObjectWeakLoadStrong(v16 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber);
      if (Strong)
      {
        v19 = Strong;
        v20 = *(_QWORD *)(v17 + 8);
        ObjectType = swift_getObjectType(Strong);
        (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v20 + 96))(v1, _swiftEmptyArrayStorage, ObjectType, v20);
        swift_release(v16);
        swift_unknownObjectRelease(v19);
      }
      else
      {
        swift_release(v16);
      }
    }
    goto LABEL_20;
  }
  __break(1u);
}

id sub_1001E748C(void *a1)
{
  id v1;

  v1 = a1;
  return sub_1001E6F18();
}

uint64_t sub_1001E74B0(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + qword_1005DA4F0));
  swift_release(*(_QWORD *)(a1 + qword_1005DA4F8));
  swift_release(*(_QWORD *)(a1 + qword_1005DA500));

  swift_release(*(_QWORD *)(a1 + qword_1005DA510));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_1005DA518));
  swift_release(*(_QWORD *)(a1 + qword_1005DA528));
  return sub_1000327F0(*(_QWORD *)(a1 + qword_1005DA540), *(_QWORD *)(a1 + qword_1005DA540 + 8));
}

void sub_1001E754C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  id v7;

  v1 = qword_1005D2070;
  v7 = a1;
  if (v1 != -1)
    swift_once(&qword_1005D2070, sub_1003CB89C);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100056D88(v2, (uint64_t)qword_1005F6010);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMUnknownItemsListDataSource: applicationDidEnterBackground", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  sub_1001E7C78();
}

void sub_1001E7634(void *a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  NSObject *oslog;

  v1 = qword_1005D2070;
  v2 = a1;
  if (v1 != -1)
    swift_once(&qword_1005D2070, sub_1003CB89C);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_100056D88(v3, (uint64_t)qword_1005F6010);
  oslog = Logger.logObject.getter(v4);
  v5 = static os_log_type_t.default.getter(oslog);
  if (os_log_type_enabled(oslog, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v5, "FMUnknownItemsListDataSource: applicationWillEnterForeground", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

}

void sub_1001E7714()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t aBlock[5];
  uint64_t v48;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v44 = *(_QWORD *)(v2 - 8);
  v45 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v42 = *(_QWORD *)(v5 - 8);
  v43 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D2070 != -1)
    swift_once(&qword_1005D2070, sub_1003CB89C);
  v8 = type metadata accessor for Logger(0);
  v9 = sub_100056D88(v8, (uint64_t)qword_1005F6010);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    aBlock[0] = v13;
    *(_DWORD *)v12 = 136315138;
    v46 = sub_100056DA0(0x6470557472617473, 0xEF2928676E697461, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, aBlock);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "FMUnknownItemsListDataSource: %s", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }

  if ((v1[qword_1005DA538] & 1) == 0)
  {
    v14 = *(_QWORD *)(*(_QWORD *)&v1[qword_1005DA4F0] + 24);
    v15 = type metadata accessor for FMDevicesSubscription(0);
    v16 = swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
    v17 = v16 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
    *(_QWORD *)(v17 + 8) = 0;
    swift_unknownObjectWeakInit(v17);
    swift_retain(v14);
    v18 = v1;
    UUID.init()(v18);
    v19 = v16 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
    *(_QWORD *)(v19 + 8) = &off_100550018;
    swift_unknownObjectWeakAssign(v19, v18);

    swift_beginAccess(v14 + 16, aBlock, 33, 0);
    v20 = swift_retain(v16);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
    v22 = *(_QWORD *)((*(_QWORD *)(v14 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
    v21 = *(_QWORD *)((*(_QWORD *)(v14 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v22 >= v21 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
    v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v16);
    specialized Array._endMutation()(v23);
    swift_endAccess(aBlock);
    swift_release(v14);
    v24 = *(_QWORD *)&v18[qword_1005DA528];
    *(_QWORD *)&v18[qword_1005DA528] = v16;
    swift_release(v24);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.default.getter(v26);
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "FMUnknownItemsListDataSource: Scanning disabled, no session running.", v28, 2u);
      swift_slowDealloc(v28, -1, -1);
    }

    v29 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
    v30 = (void *)static OS_dispatch_queue.main.getter(v29);
    v31 = swift_allocObject(&unk_100550280, 24, 7);
    *(_QWORD *)(v31 + 16) = v18;
    aBlock[4] = (uint64_t)sub_1001EDD90;
    v48 = v31;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100037DF8;
    aBlock[3] = (uint64_t)&unk_100550298;
    v32 = _Block_copy(aBlock);
    v33 = v48;
    v34 = v18;
    swift_release(v33);
    static DispatchQoS.unspecified.getter(v35);
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    v36 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v37 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
    v38 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
    v39 = v37;
    v40 = v45;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v39, v38, v45, v36);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v4, v32);
    _Block_release(v32);

    (*(void (**)(char *, uint64_t))(v44 + 8))(v4, v40);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v7, v43);
  }
}

double sub_1001E7BF8(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double result;

  v1 = *(unsigned __int8 *)(a1 + qword_1005DA530);
  *(_BYTE *)(a1 + qword_1005DA530) = 1;
  v2 = *(_QWORD *)(*(_QWORD *)(a1 + qword_1005DA4F0) + 24);
  v3 = swift_retain(v2);
  v4 = FMIPManager.unknownItems.getter(v3);
  swift_release(v2);
  sub_1001E8840(v4, v1);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

void sub_1001E7C78()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t aBlock[5];
  uint64_t v50;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v43 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D2070 != -1)
    swift_once(&qword_1005D2070, sub_1003CB89C);
  v9 = type metadata accessor for Logger(0);
  v10 = sub_100056D88(v9, (uint64_t)qword_1005F6010);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  v13 = os_log_type_enabled(v11, v12);
  v45 = v3;
  v46 = v2;
  v44 = v6;
  if (v13)
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    aBlock[0] = v15;
    *(_DWORD *)v14 = 136315138;
    v47 = sub_100056DA0(0x61647055706F7473, 0xEE002928676E6974, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "FMUnknownItemsListDataSource: %s", v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }

  if (v1[qword_1005DA538] == 1)
  {
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.default.getter(v17);
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "FMUnknownItemsListDataSource: Stopping discovery", v19, 2u);
      swift_slowDealloc(v19, -1, -1);
    }

    v21 = *(_QWORD *)&v1[qword_1005DA528];
    if (!v21)
      goto LABEL_12;
    v22 = *(_QWORD *)(*(_QWORD *)&v1[qword_1005DA4F0] + 24);
    swift_beginAccess(v22 + 16, aBlock, 33, 0);
    swift_retain(v21);
    swift_retain(v22);
    v23 = sub_1001138E0((uint64_t *)(v22 + 16), v21);
    v24 = v23;
    v25 = *(_QWORD *)(v22 + 16);
    if ((unint64_t)v25 >> 62)
    {
      if (v25 < 0)
        v42 = *(_QWORD *)(v22 + 16);
      else
        v42 = v25 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(v22 + 16));
      v26 = _CocoaArrayWrapper.endIndex.getter(v42);
      swift_bridgeObjectRelease(v25);
      if (v26 >= v24)
        goto LABEL_11;
    }
    else
    {
      v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v26 >= v23)
      {
LABEL_11:
        sub_1002006EC(v24, v26);
        swift_endAccess(aBlock);
        swift_release(v22);
        swift_release(v21);
LABEL_12:
        v27 = Logger.logObject.getter(v20);
        v28 = static os_log_type_t.default.getter(v27);
        if (os_log_type_enabled(v27, v28))
        {
          v29 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v29 = 0;
          _os_log_impl((void *)&_mh_execute_header, v27, v28, "FMUnknownItemsListDataSource: Scanning disabled, no session running.", v29, 2u);
          swift_slowDealloc(v29, -1, -1);
        }

        v30 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
        v31 = (void *)static OS_dispatch_queue.main.getter(v30);
        v32 = swift_allocObject(&unk_100550230, 24, 7);
        *(_QWORD *)(v32 + 16) = v1;
        aBlock[4] = (uint64_t)sub_1001EDD64;
        v50 = v32;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_100037DF8;
        aBlock[3] = (uint64_t)&unk_100550248;
        v33 = _Block_copy(aBlock);
        v34 = v50;
        v35 = v1;
        swift_release(v34);
        static DispatchQoS.unspecified.getter(v36);
        aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
        v37 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v38 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
        v39 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
        v40 = v38;
        v41 = v46;
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v40, v39, v46, v37);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v5, v33);
        _Block_release(v33);

        (*(void (**)(char *, uint64_t))(v45 + 8))(v5, v41);
        (*(void (**)(char *, uint64_t))(v43 + 8))(v8, v44);
        return;
      }
    }
    __break(1u);
  }
}

void sub_1001E819C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;
  NSString v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  NSString v9;
  uint64_t v10;
  uint64_t v11;
  NSString v12;
  uint64_t v13;
  uint64_t v14;
  NSString v15;

  dispatch thunk of UITableViewDiffableDataSource.defaultRowAnimation.setter(0);
  objc_msgSend(a1, "setDelegate:", v1);
  v3 = type metadata accessor for FMTableViewSectionHeaderView();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v3);
  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "registerClass:forHeaderFooterViewReuseIdentifier:", ObjCClassFromMetadata, v5);

  objc_msgSend(a1, "setSectionHeaderTopPadding:", 0.0);
  v6 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(a1, "setBackgroundColor:", v6);

  v7 = type metadata accessor for FMUnknownItemListCellView();
  v8 = swift_getObjCClassFromMetadata(v7);
  v9 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "registerClass:forCellReuseIdentifier:", v8, v9, swift_bridgeObjectRelease(0x80000001004876D0).n128_f64[0]);

  v10 = type metadata accessor for FMUnknownItemListCellView();
  v11 = swift_getObjCClassFromMetadata(v10);
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "registerClass:forCellReuseIdentifier:", v11, v12, swift_bridgeObjectRelease(0x80000001004876D0).n128_f64[0]);

  v13 = type metadata accessor for FMAccessoryDiscoverySearchingCell();
  v14 = swift_getObjCClassFromMetadata(v13);
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "registerClass:forCellReuseIdentifier:", v14, v15, swift_bridgeObjectRelease(0x80000001004B3AF0).n128_f64[0]);

}

double sub_1001E83F8()
{
  uint64_t v0;
  void (*v1)(_BYTE *, _QWORD);
  uint64_t v2;
  void (*v3)(_BYTE *, _QWORD);
  uint64_t v4;
  void (*v5)(_BYTE *, _QWORD);
  double result;
  _BYTE v7[32];

  v0 = swift_allocObject(&unk_100550190, 24, 7);
  swift_unknownObjectWeakInit(v0 + 16);
  swift_retain(v0);
  v1 = (void (*)(_BYTE *, _QWORD))dispatch thunk of FMIPUnknownAccessoryDiscoveryController.callbacks.modify(v7);
  FMIPUnknownAccessoryDiscoveryController.Callbacks.discoveredAccessoriesCallback.setter(sub_1001EDCA8, v0);
  v1(v7, 0);
  swift_release(v0);
  v2 = swift_allocObject(&unk_100550190, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16);
  swift_retain(v2);
  v3 = (void (*)(_BYTE *, _QWORD))dispatch thunk of FMIPUnknownAccessoryDiscoveryController.callbacks.modify(v7);
  FMIPUnknownAccessoryDiscoveryController.Callbacks.lostAccessoriesCallback.setter(sub_1001EDCD0, v2);
  v3(v7, 0);
  swift_release(v2);
  v4 = swift_allocObject(&unk_100550190, 24, 7);
  swift_unknownObjectWeakInit(v4 + 16);
  swift_retain(v4);
  v5 = (void (*)(_BYTE *, _QWORD))dispatch thunk of FMIPUnknownAccessoryDiscoveryController.callbacks.modify(v7);
  FMIPUnknownAccessoryDiscoveryController.Callbacks.accessoryDiscoveryFinished.setter(sub_1001EDCF8, v4);
  v5(v7, 0);
  *(_QWORD *)&result = swift_release(v4).n128_u64[0];
  return result;
}

double sub_1001E8560(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  double result;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = *(_QWORD *)(*(_QWORD *)(Strong + qword_1005DA4F0) + 24);
    v6 = swift_retain(v5);
    v7 = FMIPManager.unknownItems.getter(v6);
    swift_release(v5);
    sub_1001E8840(v7, 1);

    *(_QWORD *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
  }
  return result;
}

uint64_t sub_1001E85F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[5];
  uint64_t v25;

  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v14 = (void *)static OS_dispatch_queue.main.getter(v13);
  aBlock[4] = a3;
  v25 = a2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = a4;
  v15 = _Block_copy(aBlock);
  v16 = v25;
  swift_retain(a2);
  swift_release(v16);
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = _swiftEmptyArrayStorage;
  v18 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v19 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v20 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v7, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v9, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v22);
}

void sub_1001E87F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_1001EB5D4();

  }
}

double sub_1001E8840(uint64_t a1, int a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double result;
  _BYTE v28[4];
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t aBlock[5];
  uint64_t v36;

  v3 = v2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v33 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = &v28[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for DispatchQoS(0);
  v31 = *(_QWORD *)(v9 - 8);
  v32 = v9;
  __chkstk_darwin(v9);
  v11 = &v28[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1005D2070 != -1)
    swift_once(&qword_1005D2070, sub_1003CB89C);
  v12 = type metadata accessor for Logger(0);
  v13 = sub_100056D88(v12, (uint64_t)qword_1005F6010);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v29 = a2;
    v16 = swift_slowAlloc(12, -1);
    v30 = a1;
    v17 = (uint8_t *)v16;
    v18 = swift_slowAlloc(32, -1);
    aBlock[0] = v18;
    *(_DWORD *)v17 = 136315138;
    v34 = (_QWORD *)sub_100056DA0(0xD000000000000022, 0x80000001004B3C80, aBlock);
    LOBYTE(a2) = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, aBlock);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "%s", v17, 0xCu);
    swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    v19 = v17;
    a1 = v30;
    swift_slowDealloc(v19, -1, -1);
  }

  v20 = swift_allocObject(&unk_1005500F0, 33, 7);
  *(_QWORD *)(v20 + 16) = v3;
  *(_QWORD *)(v20 + 24) = a1;
  *(_BYTE *)(v20 + 32) = a2 & 1;
  aBlock[4] = (uint64_t)sub_1001EDBF0;
  v36 = v20;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100037DF8;
  aBlock[3] = (uint64_t)&unk_100550108;
  v21 = _Block_copy(aBlock);
  v22 = v3;
  swift_bridgeObjectRetain(a1);
  static DispatchQoS.unspecified.getter(v23);
  v34 = _swiftEmptyArrayStorage;
  v24 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v25 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v26 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v34, v25, v26, v6, v24);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v21);
  _Block_release(v21);
  (*(void (**)(_BYTE *, uint64_t))(v33 + 8))(v8, v6);
  (*(void (**)(_BYTE *, uint64_t))(v31 + 8))(v11, v32);
  *(_QWORD *)&result = swift_release(v36).n128_u64[0];
  return result;
}

double sub_1001E8B90(char *a1, uint64_t (*a2)(_QWORD), int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  double result;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  char v61[24];
  char v62[24];
  _QWORD aBlock[5];
  uint64_t v64;
  char v65[24];
  char v66[24];
  char v67[32];

  v58 = a3;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for DispatchQoS(0);
  v59 = *(_QWORD *)(v60 - 8);
  __chkstk_darwin(v60);
  v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)&a1[qword_1005DA510];
  v12 = sub_1001E9B38(a2);
  swift_beginAccess(v12 + 2, v67, 0, 0);
  v13 = v12[2];
  swift_beginAccess(v11 + 16, v66, 0, 0);
  v14 = *(_QWORD *)(v11 + 16);
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v14);
  v15 = sub_1001E5B50(v13, v14);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v14);
  if ((v15 & 1) == 0)
    goto LABEL_4;
  swift_beginAccess(v12 + 3, v62, 0, 0);
  v16 = v12[3];
  swift_beginAccess(v11 + 24, v61, 0, 0);
  v17 = *(_QWORD *)(v11 + 24);
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRetain(v17);
  sub_1001E5FD4(v16, v17);
  v19 = v18;
  swift_bridgeObjectRelease(v16);
  swift_bridgeObjectRelease(v17);
  if ((v19 & 1) != 0)
  {
    v20 = v12;
  }
  else
  {
LABEL_4:
    v56 = v6;
    v57 = v5;
    v21 = sub_100053F2C(&qword_1005DA7A0);
    v55 = swift_allocBox(v21);
    v23 = v22;
    v24 = type metadata accessor for FMUnknownItemsListDataSource.Entry(0);
    v25 = sub_1001EDBFC();
    v26 = sub_100008000((unint64_t *)&unk_1005DA7B0, type metadata accessor for FMUnknownItemsListDataSource.Entry, (uint64_t)&unk_100487898);
    NSDiffableDataSourceSnapshot.init()(&type metadata for FMUnknownItemsListDataSource.Section, v24, v25, v26);
    v27 = v12 + 3;
    swift_beginAccess(v12 + 3, v65, 0, 0);
    v29 = v12[3];
    if (*(_QWORD *)(v29 + 16))
    {
      v28 = sub_1001717C0(0);
      if ((v30 & 1) != 0)
      {
        v31 = *(_QWORD *)(*(_QWORD *)(v29 + 56) + 8 * v28);
        swift_bridgeObjectRetain(v31);
        NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_10053FCD0);
        LOBYTE(aBlock[0]) = 0;
        NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v31, aBlock, v21);
        swift_bridgeObjectRelease(v31);
      }
    }
    v32 = *v27;
    if (*(_QWORD *)(*v27 + 16))
    {
      v28 = sub_1001717C0(1u);
      if ((v33 & 1) != 0)
      {
        v34 = *(_QWORD *)(*(_QWORD *)(v32 + 56) + 8 * v28);
        swift_bridgeObjectRetain(v34);
        NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_10053FCA8);
        LOBYTE(aBlock[0]) = 1;
        NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v34, aBlock, v21);
        swift_bridgeObjectRelease(v34);
      }
    }
    v35 = *v27;
    if (*(_QWORD *)(*v27 + 16))
    {
      v28 = sub_1001717C0(2u);
      if ((v36 & 1) != 0)
      {
        v37 = *(_QWORD *)(*(_QWORD *)(v35 + 56) + 8 * v28);
        swift_bridgeObjectRetain(v37);
        NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_10053FC80);
        LOBYTE(aBlock[0]) = 2;
        NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v37, aBlock, v21);
        swift_bridgeObjectRelease(v37);
      }
    }
    v38 = v12[2];
    __chkstk_darwin(v28);
    *(&v54 - 4) = v11;
    *(&v54 - 3) = (uint64_t)v12;
    *(&v54 - 2) = v23;
    swift_bridgeObjectRetain(v38);
    sub_1001ED170(v39, (void (*)(char *, uint64_t))sub_1001EDC40);
    swift_bridgeObjectRelease(v38);
    sub_1001E61BC(v12);
    v40 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
    v41 = (void *)static OS_dispatch_queue.main.getter(v40);
    v42 = swift_allocObject(&unk_100550140, 40, 7);
    *(_BYTE *)(v42 + 16) = v58 & 1;
    v43 = v55;
    *(_QWORD *)(v42 + 24) = a1;
    *(_QWORD *)(v42 + 32) = v43;
    aBlock[4] = sub_1001EDC78;
    v64 = v42;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100037DF8;
    aBlock[3] = &unk_100550158;
    v44 = _Block_copy(aBlock);
    v45 = v64;
    v46 = a1;
    swift_retain(v43);
    swift_release(v45);
    static DispatchQoS.unspecified.getter(v47);
    aBlock[0] = _swiftEmptyArrayStorage;
    v48 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v49 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
    v50 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
    v51 = v49;
    v52 = v57;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v51, v50, v57, v48);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v8, v44);
    _Block_release(v44);
    swift_release(v12);

    (*(void (**)(char *, uint64_t))(v56 + 8))(v8, v52);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v10, v60);
    v20 = (_QWORD *)v43;
  }
  *(_QWORD *)&result = swift_release(v20).n128_u64[0];
  return result;
}

uint64_t sub_1001E90F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  __n128 v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  __n128 v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t, __n128);
  __n128 v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  Swift::OpaquePointer v58;
  char *v59;
  uint64_t v60;
  _QWORD v61[2];
  uint64_t (*v62)(char *, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70[24];
  char v71[24];

  v65 = type metadata accessor for UUID(0);
  v67 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v10 = (char *)v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100053F2C(&qword_1005DA768);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)v61 - v15;
  v17 = type metadata accessor for FMUnknownItemCellViewModel(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v66 = (uint64_t)v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v22 = (char *)v61 - v21;
  v23 = swift_beginAccess(a3 + 16, v71, 0, 0);
  v24 = *(_QWORD *)(a3 + 16);
  if (!*(_QWORD *)(v24 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v18 + 56))(v16, 1, 1, v17, v23);
    return sub_1000051EC((uint64_t)v16, &qword_1005DA768);
  }
  swift_bridgeObjectRetain(v24);
  v64 = a1;
  v25 = sub_100171818(a1);
  v63 = a5;
  if ((v26 & 1) != 0)
  {
    sub_10004FC74(*(_QWORD *)(v24 + 56) + *(_QWORD *)(v18 + 72) * v25, (uint64_t)v16, type metadata accessor for FMUnknownItemCellViewModel);
    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v27(v16, 0, 1, v17);
  }
  else
  {
    v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v27(v16, 1, 1, v17);
  }
  v28 = swift_bridgeObjectRelease(v24);
  v29 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v18 + 48);
  if (v29(v16, 1, v17, v28) == 1)
    return sub_1000051EC((uint64_t)v16, &qword_1005DA768);
  sub_100051774((uint64_t)v16, (uint64_t)v22, type metadata accessor for FMUnknownItemCellViewModel);
  v31 = swift_beginAccess(a4 + 16, v70, 0, 0);
  v32 = *(_QWORD *)(a4 + 16);
  if (!*(_QWORD *)(v32 + 16))
  {
    ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v27)(v14, 1, 1, v17, v31);
LABEL_14:
    sub_10004FCB8((uint64_t)v22, type metadata accessor for FMUnknownItemCellViewModel);
    return sub_1000051EC((uint64_t)v14, &qword_1005DA768);
  }
  swift_bridgeObjectRetain(*(_QWORD *)(a4 + 16));
  v33 = sub_100171818(v64);
  if ((v34 & 1) != 0)
  {
    sub_10004FC74(*(_QWORD *)(v32 + 56) + *(_QWORD *)(v18 + 72) * v33, (uint64_t)v14, type metadata accessor for FMUnknownItemCellViewModel);
    v35 = 0;
  }
  else
  {
    v35 = 1;
  }
  v36 = v67;
  v27(v14, v35, 1, v17);
  v37 = swift_bridgeObjectRelease(v32);
  if (v29(v14, 1, v17, v37) == 1)
    goto LABEL_14;
  v38 = (uint64_t)v14;
  v39 = v66;
  sub_100051774(v38, v66, type metadata accessor for FMUnknownItemCellViewModel);
  if ((sub_1000E2024((uint64_t)v22, v39) & 1) == 0)
  {
    if (qword_1005D2070 != -1)
      swift_once(&qword_1005D2070, sub_1003CB89C);
    v40 = type metadata accessor for Logger(0);
    sub_100056D88(v40, (uint64_t)qword_1005F6010);
    v41 = v64;
    v42 = v65;
    v62 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 16);
    v43 = v62(v10, v64, v65);
    v44 = Logger.logObject.getter(v43);
    v45 = static os_log_type_t.default.getter(v44);
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc(12, -1);
      v47 = swift_slowAlloc(32, -1);
      v69 = v47;
      *(_DWORD *)v46 = 136315138;
      v61[1] = v46 + 4;
      v48 = sub_100008000((unint64_t *)&qword_1005DA7C0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v49 = dispatch thunk of CustomStringConvertible.description.getter(v42, v48);
      v51 = v50;
      v68 = sub_100056DA0(v49, v50, &v69);
      v39 = v66;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v68, &v69);
      v52 = swift_bridgeObjectRelease(v51);
      (*(void (**)(char *, uint64_t, __n128))(v67 + 8))(v10, v42, v52);
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "FMUnknownItemsListDataSource: Reconfiguring item: %s)", v46, 0xCu);
      swift_arrayDestroy(v47, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v47, -1, -1);
      swift_slowDealloc(v46, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v42);
    }

    v53 = sub_100053F2C(&qword_1005D2C08);
    v54 = *(_QWORD *)(type metadata accessor for FMUnknownItemsListDataSource.Entry(0) - 8);
    v55 = *(_QWORD *)(v54 + 72);
    v56 = *(unsigned __int8 *)(v54 + 80);
    v57 = (v56 + 32) & ~v56;
    v58._rawValue = (void *)swift_allocObject(v53, v57 + v55, v56 | 7);
    *((_OWORD *)v58._rawValue + 1) = xmmword_100481740;
    v59 = (char *)v58._rawValue + v57;
    v62(v59, v41, v42);
    v60 = sub_100053F2C((uint64_t *)&unk_1005DEE00);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v59, 0, 2, v60);
    sub_100053F2C(&qword_1005DA7A0);
    NSDiffableDataSourceSnapshot.reconfigureItems(_:)(v58);
    swift_bridgeObjectRelease(v58._rawValue);
  }
  sub_10004FCB8(v39, type metadata accessor for FMUnknownItemCellViewModel);
  return sub_10004FCB8((uint64_t)v22, type metadata accessor for FMUnknownItemCellViewModel);
}

void sub_1001E967C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  __n128 v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t i;
  uint64_t v36;
  uint64_t v37;
  uint64_t Strong;
  uint64_t v39;
  uint64_t v40;
  uint64_t ObjectType;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45[3];
  int v46;
  int v47;

  v6 = sub_100053F2C(&qword_1005DA7A0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_projectBox(a3);
  if (qword_1005D2070 != -1)
    swift_once(&qword_1005D2070, sub_1003CB89C);
  v11 = type metadata accessor for Logger(0);
  v12 = sub_100056D88(v11, (uint64_t)qword_1005F6010);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v15 = 67109120;
    v46 = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "FMUnknownItemsListDataSource: Reloading data (animated: %{BOOL}d)", v15, 8u);
    swift_slowDealloc(v15, -1, -1);
  }

  v16 = swift_beginAccess(v10, &v46, 0, 0);
  v17.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v9, v10, v6, v16);
  dispatch thunk of UITableViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v9, a1 & 1, 0, 0, v17);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v18 = *(_QWORD *)(*(_QWORD *)(a2 + qword_1005DA4F0) + 24);
  v19 = swift_retain(v18);
  v20 = dispatch thunk of FMIPUnknownAccessoryDiscoveryController.discoveredAccessories.getter(v19);
  v21 = sub_1003EFAB8(v20);
  swift_bridgeObjectRelease(v20);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  sub_100056D88(v11, (uint64_t)qword_1005F5748);
  v22 = swift_bridgeObjectRetain_n(v21, 2);
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.default.getter(v23);
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc(12, -1);
    v26 = swift_slowAlloc(32, -1);
    v45[0] = v26;
    *(_DWORD *)v25 = 136315138;
    v27 = type metadata accessor for FMIPUnknownItem(0);
    swift_bridgeObjectRetain(v21);
    v29 = Array.description.getter(v28, v27);
    v31 = v30;
    swift_release(v21);
    v44 = sub_100056DA0(v29, v31, v45);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, v45);
    swift_release_n(v21, 2);
    swift_bridgeObjectRelease(v31);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "FMDevicesProvider: update detectedUnknownItems %s", v25, 0xCu);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v25, -1, -1);

  }
  else
  {

    swift_release_n(v21, 2);
  }
  v32 = *(_QWORD *)(v18 + OBJC_IVAR____TtC6FindMy17FMDevicesProvider_unknownItemsDetectedNearYou);
  *(_QWORD *)(v18 + OBJC_IVAR____TtC6FindMy17FMDevicesProvider_unknownItemsDetectedNearYou) = v21;
  swift_bridgeObjectRetain(v21);
  swift_bridgeObjectRelease(v32);
  swift_beginAccess(v18 + 16, v45, 0, 0);
  v33 = *(_QWORD *)(v18 + 16);
  if (!((unint64_t)v33 >> 62))
  {
    v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(v18 + 16));
    if (v34)
      goto LABEL_12;
LABEL_25:
    swift_release(v21);
    swift_bridgeObjectRelease(v33);
    swift_release(v18);
    return;
  }
  if (v33 < 0)
    v42 = *(_QWORD *)(v18 + 16);
  else
    v42 = v33 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(v18 + 16));
  v34 = _CocoaArrayWrapper.endIndex.getter(v42);
  if (!v34)
    goto LABEL_25;
LABEL_12:
  if (v34 >= 1)
  {
    for (i = 0; i != v34; ++i)
    {
      if ((v33 & 0xC000000000000001) != 0)
      {
        v36 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v33);
      }
      else
      {
        v36 = *(_QWORD *)(v33 + 8 * i + 32);
        swift_retain(v36);
      }
      v37 = v36 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
      Strong = swift_unknownObjectWeakLoadStrong(v36 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber);
      if (Strong)
      {
        v39 = Strong;
        v40 = *(_QWORD *)(v37 + 8);
        ObjectType = swift_getObjectType(Strong);
        (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v40 + 96))(v18, v21, ObjectType, v40);
        swift_release(v36);
        swift_unknownObjectRelease(v39);
      }
      else
      {
        swift_release(v36);
      }
    }
    goto LABEL_25;
  }
  __break(1u);
}

_QWORD *sub_1001E9B38(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t inited;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(_QWORD);
  uint64_t (*v52)(_QWORD);
  void (*v53)(char *, uint64_t);
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  void (*v58)(char *, uint64_t);
  _BOOL4 v59;
  char *v60;
  void (*v61)(char *, _QWORD, uint64_t);
  uint64_t v62;
  uint64_t (*v63)(_QWORD);
  uint64_t (*v64)(_QWORD);
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  int v69;
  unsigned __int8 v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  int v74;
  id v75;
  uint64_t v76;
  id v77;
  NSString v78;
  id v79;
  void *v80;
  void (*v81)(_QWORD *);
  unint64_t *v82;
  void (*v83)(uint64_t (**)(_QWORD), _QWORD);
  unint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t (*v98)(_QWORD);
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  char v106;
  uint64_t v107;
  __n128 v108;
  uint64_t v109;
  __n128 v110;
  uint64_t v112;
  uint64_t (*v113)(_QWORD);
  uint64_t v114;
  int v115;
  int v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  unsigned int v121;
  uint64_t v122;
  _QWORD *v123;
  _QWORD *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  _QWORD *v138;
  uint64_t v139;
  unsigned int v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  unsigned int v146;
  uint64_t v147;
  uint64_t v148;
  void (*v149)(char *, _QWORD, uint64_t);
  int v150;
  uint64_t v151;
  char *v152;
  int v153;
  void (*v154)(char *, uint64_t);
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t (*v160)(_QWORD);
  char v161[8];
  char *v162;
  uint64_t (*v163)(_QWORD);
  uint64_t (*v164)(_QWORD);
  char v165[8];
  char v166[8];

  v160 = a1;
  v134 = sub_100053F2C(&qword_1005DA778);
  v133 = *(_QWORD *)(v134 - 8);
  __chkstk_darwin(v134);
  v132 = (char *)&v112 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_100053F2C(&qword_1005DA768);
  __chkstk_darwin(v2);
  v131 = (uint64_t)&v112 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = type metadata accessor for UUID(0);
  v129 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  v128 = (char *)&v112 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FMUnknownItemsListDataSource.Entry(0);
  v120 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v139 = (uint64_t)&v112 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = type metadata accessor for FMUnknownItemCellViewModel(0);
  v126 = *(_QWORD *)(v127 - 8);
  __chkstk_darwin(v127);
  v145 = (uint64_t)&v112 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = type metadata accessor for FMIPUnknownItemAlertState(0);
  v147 = *(_QWORD *)(v148 - 8);
  v8 = __chkstk_darwin(v148);
  v119 = (char *)&v112 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v136 = (char *)&v112 - v11;
  __chkstk_darwin(v10);
  v13 = (char *)&v112 - v12;
  v14 = type metadata accessor for FMIPUnknownItem(0);
  v144 = *(_QWORD *)(v14 - 8);
  v15 = __chkstk_darwin(v14);
  v125 = (char *)&v112 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v15);
  v159 = (char *)&v112 - v18;
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v112 - v20;
  __chkstk_darwin(v19);
  v135 = (char *)&v112 - v22;
  v23 = type metadata accessor for Date(0);
  v118 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v25 = (char *)&v112 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for FMUnknownItemsListDataSource.ViewModel();
  v27 = (_QWORD *)swift_allocObject(v26, 40, 7);
  v27[2] = sub_10011DA98((uint64_t)_swiftEmptyArrayStorage);
  v124 = v27 + 2;
  v27[3] = sub_10011E3B8((uint64_t)_swiftEmptyArrayStorage);
  v28 = v27 + 3;
  v29 = sub_10011DC50((uint64_t)_swiftEmptyArrayStorage);
  v138 = v27;
  v27[4] = v29;
  v123 = v27 + 4;
  v30 = sub_100053F2C(&qword_1005DA780);
  inited = swift_initStackObject(v30, v166);
  *(_OWORD *)(inited + 16) = xmmword_100481B10;
  *(_BYTE *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = _swiftEmptyArrayStorage;
  *(_BYTE *)(inited + 48) = 1;
  *(_QWORD *)(inited + 56) = _swiftEmptyArrayStorage;
  *(_BYTE *)(inited + 64) = 2;
  *(_QWORD *)(inited + 72) = _swiftEmptyArrayStorage;
  v32 = sub_10011E3B8(inited);
  swift_setDeallocating(inited);
  v33 = sub_100053F2C(&qword_1005DA788);
  swift_arrayDestroy(inited + 32, 3, v33);
  swift_beginAccess(v28, v165, 1, 0);
  v34 = *v28;
  *v28 = v32;
  swift_bridgeObjectRelease(v34);
  Date.init()(v35);
  v117 = v25;
  v162 = v25;
  v164 = v160;
  swift_bridgeObjectRetain(v160);
  sub_10040FBE8((uint64_t (*)(char *, char *))sub_1001EDB8C, (uint64_t)v161);
  v36 = *((_QWORD *)v164 + 2);
  if (!v36)
  {
    v110 = swift_release(v164);
    goto LABEL_33;
  }
  v157 = 0;
  v143 = v21;
  v114 = v23;
  v142 = *(_QWORD *)(v137 + qword_1005DA500);
  v150 = *(unsigned __int8 *)(v137 + qword_1005DA520);
  v37 = *(unsigned __int8 *)(v144 + 80);
  v122 = qword_1005DA4F8;
  v113 = v164;
  v38 = (char *)v164 + ((v37 + 32) & ~v37);
  v141 = *(_QWORD *)(v144 + 72);
  v160 = *(uint64_t (**)(_QWORD))(v144 + 16);
  v146 = enum case for FMIPUnknownItemAlertState.triggered(_:);
  v140 = enum case for FMIPUnknownItemAlertState.cleared(_:);
  v121 = enum case for FMIPUnknownItemAlertState.ignored(_:);
  v116 = enum case for FMIPUnknownItemAlertState.discovered(_:);
  v115 = enum case for FMIPUnknownItemAlertState.unknown(_:);
  v39 = v136;
  v152 = v13;
  v158 = v14;
  v40 = v135;
  do
  {
    v156 = v36;
    v155 = v38;
    v41 = (uint64_t (*)(char *, char *, uint64_t))v160;
    v42 = v160(v40);
    v43 = dispatch thunk of FMIPUnknownAccessoryDiscoveryController.discoveredAccessories.getter(v42);
    __chkstk_darwin(v43);
    *(&v112 - 2) = (uint64_t)v40;
    v44 = v157;
    v153 = sub_1003DC0E0((uint64_t (*)(char *))sub_1001EDBA8, (char)(&v112 - 4), v43);
    v157 = v44;
    swift_bridgeObjectRelease(v43);
    FMIPUnknownItem.alertState.getter(v45);
    v46 = v147;
    v47 = v39;
    v48 = v39;
    v49 = v148;
    v149 = *(void (**)(char *, _QWORD, uint64_t))(v147 + 104);
    v149(v47, v146, v148);
    v50 = sub_100008000(&qword_1005DA790, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPUnknownItemAlertState, (uint64_t)&protocol conformance descriptor for FMIPUnknownItemAlertState);
    dispatch thunk of RawRepresentable.rawValue.getter(&v164, v49, v50);
    v151 = v50;
    dispatch thunk of RawRepresentable.rawValue.getter(&v163, v49, v50);
    v51 = v164;
    v52 = v163;
    v53 = *(void (**)(char *, uint64_t))(v46 + 8);
    v53(v48, v49);
    v53(v13, v49);
    v54 = v40;
    v55 = v143;
    v56 = v41(v143, v54, v14);
    if (v51 == v52)
    {
      v57 = v48;
      v58 = *(void (**)(char *, uint64_t))(v144 + 8);
      v14 = v158;
      v58(v55, v158);
      ((void (*)(char *, char *, uint64_t))v160)(v159, v54, v14);
      v59 = 1;
    }
    else
    {
      v60 = v152;
      FMIPUnknownItem.alertState.getter(v56);
      v61 = v149;
      v149(v48, v140, v49);
      v62 = v151;
      dispatch thunk of RawRepresentable.rawValue.getter(&v164, v49, v151);
      dispatch thunk of RawRepresentable.rawValue.getter(&v163, v49, v62);
      v63 = v164;
      v64 = v163;
      v53(v48, v49);
      v53(v60, v49);
      v65 = v158;
      v154 = *(void (**)(char *, uint64_t))(v144 + 8);
      v154(v55, v158);
      v66 = ((uint64_t (*)(char *, char *, uint64_t))v160)(v159, v54, v65);
      if (v63 == v64)
      {
        v57 = v48;
        v59 = 1;
      }
      else
      {
        v67 = v152;
        FMIPUnknownItem.alertState.getter(v66);
        v61(v48, v121, v49);
        v68 = v151;
        dispatch thunk of RawRepresentable.rawValue.getter(&v164, v49, v151);
        dispatch thunk of RawRepresentable.rawValue.getter(&v163, v49, v68);
        v59 = v164 == v163;
        v57 = v48;
        v53(v48, v49);
        v53(v67, v49);
      }
      v14 = v158;
      v58 = v154;
    }
    v40 = v54;
    v69 = v153;
    v58(v159, v14);
    if ((v150 & 1) != 0)
    {
      if ((v69 & 1) == 0)
        goto LABEL_3;
      v154 = v58;
      v70 = 1;
    }
    else
    {
      if (((v69 | v59) & 1) == 0)
      {
LABEL_3:
        v58(v54, v14);
        v39 = v57;
        goto LABEL_4;
      }
      v154 = v58;
      v70 = v69 & 1;
    }
    v71 = (uint64_t)v125;
    ((void (*)(char *, char *, uint64_t))v160)(v125, v40, v14);
    v72 = sub_1000E1654(v71, v145);
    if ((v150 & 1) == 0)
    {
      v73 = v119;
      FMIPUnknownItem.alertState.getter(v72);
      v74 = (*(uint64_t (**)(char *, uint64_t))(v147 + 88))(v73, v148);
      if (v74 == v146 || v74 == v140 || v74 == v121)
      {
        v75 = objc_msgSend((id)objc_opt_self(UIColor), "systemRedColor");
        v76 = v145;

        *(_QWORD *)(v76 + 16) = v75;
        v77 = objc_msgSend((id)objc_opt_self(_UIImageSymbolConfiguration), "configurationWithPointSize:", 9.0);
        v78 = String._bridgeToObjectiveC()();
        v79 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v78, v77);

        *(_QWORD *)(v76 + 8) = v79;
      }
      else if (v74 != v116 && v74 != v115)
      {
        v53(v119, v148);
      }
    }
    v80 = sub_1001E6180((uint64_t)&v164);
    v81 = sub_1003FED10(&v163, v70);
    v83 = (void (*)(uint64_t (**)(_QWORD), _QWORD))v81;
    if (*v82)
    {
      v84 = v82;
      v85 = v139;
      FMIPUnknownItem.identifier.getter(v81);
      v86 = sub_100053F2C((uint64_t *)&unk_1005DEE00);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v85, 0, 2, v86);
      v87 = *v84;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v84);
      *v84 = v87;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v87 = sub_10007059C(0, *(_QWORD *)(v87 + 16) + 1, 1, v87);
        *v84 = v87;
      }
      v90 = *(_QWORD *)(v87 + 16);
      v89 = *(_QWORD *)(v87 + 24);
      if (v90 >= v89 >> 1)
      {
        v87 = sub_10007059C(v89 > 1, v90 + 1, 1, v87);
        *v84 = v87;
      }
      *(_QWORD *)(v87 + 16) = v90 + 1;
      sub_100051774(v139, v87+ ((*(unsigned __int8 *)(v120 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v120 + 80))+ *(_QWORD *)(v120 + 72) * v90, type metadata accessor for FMUnknownItemsListDataSource.Entry);
    }
    v83(&v163, 0);
    v91 = ((uint64_t (*)(uint64_t (**)(_QWORD), _QWORD))v80)(&v164, 0);
    v92 = (uint64_t)v128;
    v93 = (uint64_t)v135;
    FMIPUnknownItem.identifier.getter(v91);
    v94 = v145;
    v95 = v131;
    sub_10004FC74(v145, v131, type metadata accessor for FMUnknownItemCellViewModel);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v126 + 56))(v95, 0, 1, v127);
    swift_beginAccess(v124, &v164, 33, 0);
    sub_1001E4678(v95, v92);
    v96 = swift_endAccess(&v164);
    FMIPUnknownItem.identifier.getter(v96);
    v97 = sub_10016E4C8(v93, 0);
    v164 = (uint64_t (*)(_QWORD))v97;
    v98 = (uint64_t (*)(_QWORD))objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
    v163 = v98;
    v99 = sub_100053F2C(&qword_1005D6DC0);
    v100 = sub_10003F774((unint64_t *)&unk_1005D7E70, &qword_1005D6DC0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v101 = v132;
    Publisher.replaceError(with:)(&v163, v99, v100);
    swift_release(v97);

    v102 = sub_10003F774(&qword_1005DA798, &qword_1005DA778, (uint64_t)&protocol conformance descriptor for Publishers.ReplaceError<A>);
    v103 = v134;
    v104 = Publisher.eraseToAnyPublisher()(v134, v102);
    (*(void (**)(char *, uint64_t))(v133 + 8))(v101, v103);
    v105 = v123;
    swift_beginAccess(v123, &v164, 33, 0);
    v106 = swift_isUniquelyReferenced_nonNull_native(*v105);
    v163 = (uint64_t (*)(_QWORD))*v105;
    *v105 = 0x8000000000000000;
    sub_10017A2E0(v104, v92, v106);
    v107 = *v105;
    *v105 = v163;
    v108 = swift_bridgeObjectRelease(v107);
    v109 = v92;
    v40 = (char *)v93;
    (*(void (**)(uint64_t, uint64_t, __n128))(v129 + 8))(v109, v130, v108);
    swift_endAccess(&v164);
    v14 = v158;
    v154((char *)v93, v158);
    sub_10004FCB8(v94, type metadata accessor for FMUnknownItemCellViewModel);
    v39 = v136;
LABEL_4:
    v38 = &v155[v141];
    v36 = v156 - 1;
    v13 = v152;
  }
  while (v156 != 1);
  v110 = swift_release(v113);
  v23 = v114;
LABEL_33:
  (*(void (**)(char *, uint64_t, __n128))(v118 + 8))(v117, v23, v110);
  return v138;
}

uint64_t sub_1001EAA8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v38;
  uint64_t v39;
  void *v40;
  id v41;
  char *v42;
  void (*v43)(char *, uint64_t, uint64_t);
  unsigned int (*v44)(char *, uint64_t, uint64_t);
  unsigned int v45;
  double (*v46)(uint64_t, char *, uint64_t);
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  id v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  void (*v70)(uint64_t, uint64_t);
  void (*v71)(uint64_t, uint64_t);
  void (*v73)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  unsigned int (*v82)(uint64_t, uint64_t, uint64_t);
  void (*v83)(char *, uint64_t, uint64_t);
  uint64_t (*v84)(char *, uint64_t, uint64_t);
  void (*v85)(char *, uint64_t, uint64_t, uint64_t);
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  v90 = a3;
  v89 = a2;
  v81 = type metadata accessor for UUID(0);
  v87 = *(_QWORD *)(v81 - 8);
  v4 = __chkstk_darwin(v81);
  v80 = (char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v86 = (char *)&v73 - v6;
  v7 = sub_100053F2C((uint64_t *)&unk_1005D6700);
  v8 = __chkstk_darwin(v7);
  v75 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)&v73 - v10;
  v12 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  v13 = __chkstk_darwin(v12);
  v77 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v16 = (char *)&v73 - v15;
  v17 = type metadata accessor for Date(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v76 = (char *)&v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v19);
  v78 = (char *)&v73 - v22;
  v23 = __chkstk_darwin(v21);
  v25 = (char *)&v73 - v24;
  v26 = __chkstk_darwin(v23);
  v74 = (char *)&v73 - v27;
  __chkstk_darwin(v26);
  v88 = (uint64_t)&v73 - v28;
  v79 = a1;
  v30 = FMIPUnknownItem.locations.getter(v29);
  v31 = *(_QWORD *)(v30 + 16);
  v32 = type metadata accessor for FMIPLocation(0);
  v33 = *(_QWORD *)(v32 - 8);
  if (v31)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v33 + 16))(v11, v30 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80)), v32);
    v34 = 0;
  }
  else
  {
    v34 = 1;
  }
  v85 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56);
  v85(v11, v34, 1, v32);
  swift_bridgeObjectRelease(v30);
  type metadata accessor for FMIPLocation(0);
  v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
  v36 = v35(v11, 1, v32);
  v84 = v35;
  if ((_DWORD)v36 == 1)
  {
    sub_1000051EC((uint64_t)v11, (uint64_t *)&unk_1005D6700);
    v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v38 = v16;
    v39 = 1;
  }
  else
  {
    v40 = (void *)FMIPLocation.location.getter(v36);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v32);
    v41 = objc_msgSend(v40, "timestamp");

    v42 = v74;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v41);

    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v16, v42, v17);
    v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v38 = v16;
    v39 = 0;
  }
  v73 = v37;
  v37((uint64_t)v38, v39, 1, v17);
  v43 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v43(v25, v90, v17);
  v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  v45 = v44(v16, 1, v17);
  v82 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v44;
  v83 = v43;
  if (v45 == 1)
  {
    v46 = *(double (**)(uint64_t, char *, uint64_t))(v18 + 32);
    v46(v88, v25, v17);
    sub_1000051EC((uint64_t)v16, (uint64_t *)&unk_1005D3320);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v25, v17);
    v46 = *(double (**)(uint64_t, char *, uint64_t))(v18 + 32);
    v47.n128_f64[0] = v46(v88, v16, v17);
  }
  v48 = (uint64_t)v77;
  v49 = (uint64_t)v75;
  v50 = FMIPUnknownItem.locations.getter(v47);
  v51 = v50;
  if (*(_QWORD *)(v50 + 16))
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v33 + 16))(v49, v50 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80)), v32);
    v52 = 0;
  }
  else
  {
    v52 = 1;
  }
  v53 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))v84;
  v85((char *)v49, v52, 1, v32);
  v54 = swift_bridgeObjectRelease(v51);
  v55 = v53(v49, 1, v32, v54);
  if ((_DWORD)v55 == 1)
  {
    sub_1000051EC(v49, (uint64_t *)&unk_1005D6700);
    v56 = 1;
  }
  else
  {
    v57 = (void *)FMIPLocation.location.getter(v55);
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v49, v32);
    v58 = objc_msgSend(v57, "timestamp");

    v59 = v74;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v58);

    v46(v48, v59, v17);
    v56 = 0;
  }
  v60 = v81;
  v61 = (uint64_t)v78;
  v62 = v76;
  v73(v48, v56, 1, v17);
  v83(v62, v90, v17);
  if (v82(v48, 1, v17) == 1)
  {
    v46(v61, v62, v17);
    v63 = sub_1000051EC(v48, (uint64_t *)&unk_1005D3320);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v62, v17);
    v63 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v46)(v61, v48, v17);
  }
  v64 = (uint64_t)v80;
  v65 = v18;
  v66 = (uint64_t)v86;
  v67 = FMIPUnknownItem.identifier.getter(v63);
  FMIPUnknownItem.identifier.getter(v67);
  v68 = v88;
  v69 = sub_1003FEE44(v88, v66, v61, v64);
  v70 = *(void (**)(uint64_t, uint64_t))(v87 + 8);
  v70(v64, v60);
  v70(v66, v60);
  v71 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
  v71(v61, v17);
  v71(v68, v17);
  return v69 & 1;
}

uint64_t sub_1001EB068()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  void (*v10)(char *, uint64_t);
  _QWORD v12[2];

  v0 = type metadata accessor for UUID(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v2);
  v7 = (char *)v12 - v6;
  v8 = FMIPUnknownItem.identifier.getter(v5);
  FMIPUnknownItem.identifier.getter(v8);
  v9 = static UUID.== infix(_:_:)(v7, v4);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v4, v0);
  v10(v7, v0);
  return v9 & 1;
}

uint64_t sub_1001EB144(uint64_t a1, uint64_t a2)
{
  return sub_1001ED54C(a2);
}

id sub_1001EB14C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  NSString v6;

  sub_1001ED54C(a4);
  if (v4)
  {
    v5 = v4;
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  return v6;
}

id sub_1001EB190()
{
  return 0;
}

double sub_1001EB198()
{
  double result;

  *(_QWORD *)&result = 1;
  return result;
}

uint64_t sub_1001EB1A4(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  uint64_t v14;

  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v11 = a3;
  v12 = a1;
  sub_1001ED638((uint64_t)v10);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1001EB250@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _BYTE v14[24];

  v4 = IndexPath.section.getter(a1);
  if (v4 >= 3)
    goto LABEL_11;
  v5 = v4;
  v6 = *(_QWORD *)(v2 + qword_1005DA510);
  v7 = IndexPath.item.getter(v4);
  swift_beginAccess(v6 + 24, v14, 0, 0);
  v8 = *(_QWORD *)(v6 + 24);
  if (!*(_QWORD *)(v8 + 16))
  {
    __break(1u);
    goto LABEL_8;
  }
  v9 = sub_1001717C0(v5);
  if ((v10 & 1) == 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if ((v7 & 0x8000000000000000) == 0)
  {
    v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
    if (v7 < *(_QWORD *)(v11 + 16))
    {
      v12 = type metadata accessor for FMUnknownItemsListDataSource.Entry(0);
      return sub_10004FC74(v11+ ((*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * v7, a2, type metadata accessor for FMUnknownItemsListDataSource.Entry);
    }
    goto LABEL_10;
  }
LABEL_9:
  __break(1u);
LABEL_10:
  __break(1u);
LABEL_11:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000010, 0x80000001004B3BB0, "FindMy/FMUnknownItemsListDataSource.swift", 41, 2, 624, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001EB384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  _BYTE v28[16];

  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v28[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for FMUnknownItemsListDataSource.Entry(0);
  v10 = __chkstk_darwin(v9);
  v12 = &v28[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  v14 = &v28[-v13];
  sub_1001EB250(a1, (uint64_t)&v28[-v13]);
  sub_10004FC74((uint64_t)v14, (uint64_t)v12, type metadata accessor for FMUnknownItemsListDataSource.Entry);
  v15 = sub_100053F2C((uint64_t *)&unk_1005DEE00);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v12, 2, v15))
  {
    sub_10004FCB8((uint64_t)v14, type metadata accessor for FMUnknownItemsListDataSource.Entry);
    v16 = type metadata accessor for FMIPUnknownItem(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 1, 1, v16);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(v8, v12, v5);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + qword_1005DA4F0) + 24);
    v19 = swift_retain(v18);
    v20 = FMIPManager.unknownItems.getter(v19);
    __chkstk_darwin(v20);
    *(_QWORD *)&v28[-16] = v8;
    v22 = sub_1003DBD90(sub_1001381B0, (uint64_t)&v28[-32], v21);
    v23 = *(_QWORD *)(v22 + 16);
    v24 = type metadata accessor for FMIPUnknownItem(0);
    v25 = *(_QWORD *)(v24 - 8);
    if (v23)
    {
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v25 + 16))(a2, v22 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80)), v24);
      v26 = 0;
    }
    else
    {
      v26 = 1;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(a2, v26, 1, v24);
    swift_release(v18);
    v27 = swift_bridgeObjectRelease(v22);
    (*(void (**)(_BYTE *, uint64_t, __n128))(v6 + 8))(v8, v5, v27);
    return sub_10004FCB8((uint64_t)v14, type metadata accessor for FMUnknownItemsListDataSource.Entry);
  }
}

void sub_1001EB5D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[24];

  v1 = v0;
  if (qword_1005D2070 != -1)
LABEL_38:
    swift_once(&qword_1005D2070, sub_1003CB89C);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100056D88(v2, (uint64_t)qword_1005F6010);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMUnknownItemsListDataSource: handleScanningFinished", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  *(_BYTE *)(v1 + qword_1005DA538) = 0;
  sub_1001E6898();
  v7 = *(_QWORD *)(v1 + qword_1005DA510);
  swift_beginAccess(v7 + 24, v30, 0, 0);
  v8 = 0;
  v9 = 0;
  v10 = *(_QWORD *)(v7 + 24);
  v11 = 1 << *(_BYTE *)(v10 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v10 + 64;
  v14 = v12 & *(_QWORD *)(v10 + 64);
  v15 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v8 << 6);
      goto LABEL_8;
    }
    v18 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    if (v18 >= v15)
      goto LABEL_31;
    v19 = *(_QWORD *)(v13 + 8 * v18);
    ++v8;
    if (!v19)
    {
      v8 = v18 + 1;
      if (v18 + 1 >= v15)
        goto LABEL_31;
      v19 = *(_QWORD *)(v13 + 8 * v8);
      if (!v19)
      {
        v8 = v18 + 2;
        if (v18 + 2 >= v15)
          goto LABEL_31;
        v19 = *(_QWORD *)(v13 + 8 * v8);
        if (!v19)
        {
          v8 = v18 + 3;
          if (v18 + 3 >= v15)
            goto LABEL_31;
          v19 = *(_QWORD *)(v13 + 8 * v8);
          if (!v19)
          {
            v8 = v18 + 4;
            if (v18 + 4 >= v15)
              goto LABEL_31;
            v19 = *(_QWORD *)(v13 + 8 * v8);
            if (!v19)
              break;
          }
        }
      }
    }
LABEL_30:
    v14 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v8 << 6);
LABEL_8:
    if (*(_BYTE *)(*(_QWORD *)(v10 + 48) + v17) != 2)
    {
      v21 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v17) + 16);
      v22 = __OFADD__(v9, v21);
      v9 += v21;
      if (v22)
        goto LABEL_37;
    }
  }
  v20 = v18 + 5;
  if (v20 >= v15)
  {
LABEL_31:
    if (v9)
    {
      v23 = *(_QWORD *)(*(_QWORD *)(v1 + qword_1005DA4F0) + 24);
      v24 = swift_retain(v23);
      v25 = FMIPManager.unknownItems.getter(v24);
      swift_release(v23);
      sub_1001E8840(v25, 1);
      swift_bridgeObjectRelease(v25);
    }
    else
    {
      v26 = v1 + qword_1005DA540;
      v27 = *(void (**)(uint64_t))(v1 + qword_1005DA540);
      if (v27)
      {
        v28 = *(_QWORD *)(v26 + 8);
        v29 = swift_retain(v28);
        v27(v29);
        sub_1000327F0((uint64_t)v27, v28);
      }
    }
    return;
  }
  v19 = *(_QWORD *)(v13 + 8 * v20);
  if (v19)
  {
    v8 = v20;
    goto LABEL_30;
  }
  while (1)
  {
    v8 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v8 >= v15)
      goto LABEL_31;
    v19 = *(_QWORD *)(v13 + 8 * v8);
    ++v20;
    if (v19)
      goto LABEL_30;
  }
  __break(1u);
}

id sub_1001EB8A4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  _BOOL4 v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(uint64_t, uint64_t, uint64_t);
  const char *v42;
  unint64_t v43;
  NSString v44;
  Class isa;
  id v46;
  void (*v47)(uint64_t *, _QWORD);
  void (*v48)(uint64_t *, _QWORD);
  uint64_t v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  void *v57;
  id v58;
  id v59;
  Swift::String v60;
  Swift::String_optional v61;
  Swift::String v62;
  Swift::String v63;
  id v64;
  void (*v65)(uint64_t *, _QWORD);
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  id v79;
  void (*v80)(uint64_t *, _QWORD);
  id v81;
  Swift::String v82;
  Swift::String_optional v83;
  Swift::String v84;
  Swift::String v85;
  uint64_t v86;
  __n128 v87;
  uint64_t v88;
  char *v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  __n128 v104;
  id v105;
  id v106;
  id v107;
  void *v108;
  id v109;
  uint64_t v110;
  void (*v111)(uint64_t *, _QWORD);
  id v112;
  void (*v113)(uint64_t *, _QWORD);
  id v114;
  void (*v115)(uint64_t *, _QWORD);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  char v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  id v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char v144[24];
  uint64_t v145;
  uint64_t v146;
  uint64_t v147[6];
  Swift::String v148;
  Swift::String v149;

  v130 = a4;
  v142 = a3;
  v138 = a1;
  v5 = sub_100053F2C(&qword_1005DA760);
  __chkstk_darwin(v5);
  v7 = (char *)&v124 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = type metadata accessor for UIBackgroundConfiguration(0);
  v132 = *(_QWORD *)(v133 - 8);
  __chkstk_darwin(v133);
  v131 = (char *)&v124 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100053F2C(&qword_1005DA768);
  __chkstk_darwin(v9);
  v11 = (char *)&v124 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = type metadata accessor for FMUnknownItemCellViewModel(0);
  v12 = *(_QWORD *)(v127 - 8);
  __chkstk_darwin(v127);
  v125 = (uint64_t)&v124 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for UUID(0);
  v140 = *(_QWORD *)(v14 - 8);
  v141 = v14;
  __chkstk_darwin(v14);
  v16 = (char *)&v124 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = type metadata accessor for UIListContentConfiguration(0);
  v134 = *(_QWORD *)(v135 - 8);
  __chkstk_darwin(v135);
  v143 = (char *)&v124 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for FMUnknownItemsListDataSource.Entry(0);
  v19 = __chkstk_darwin(v18);
  v139 = (uint64_t)&v124 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v136 = (uint64_t)&v124 - v21;
  v22 = type metadata accessor for IndexPath(0);
  v23 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v25 = (char *)&v124 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D2070 != -1)
    swift_once(&qword_1005D2070, sub_1003CB89C);
  v26 = type metadata accessor for Logger(0);
  sub_100056D88(v26, (uint64_t)qword_1005F6010);
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 16);
  v137 = a2;
  v28 = v27(v25, a2, v22);
  v29 = Logger.logObject.getter(v28);
  v30 = static os_log_type_t.default.getter(v29);
  v31 = os_log_type_enabled(v29, v30);
  v129 = v16;
  v128 = v11;
  v126 = v12;
  if (v31)
  {
    v32 = (uint8_t *)swift_slowAlloc(12, -1);
    v33 = swift_slowAlloc(32, -1);
    v147[0] = v33;
    v124 = v7;
    *(_DWORD *)v32 = 136315138;
    v34 = sub_100008000(&qword_1005DA770, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    v35 = dispatch thunk of CustomStringConvertible.description.getter(v22, v34);
    v37 = v36;
    v145 = sub_100056DA0(v35, v36, v147);
    v7 = v124;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v145, &v146);
    v38 = swift_bridgeObjectRelease(v37);
    (*(void (**)(char *, uint64_t, __n128))(v23 + 8))(v25, v22, v38);
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "FMUnknownItemsListDataSource: dequeueConfiguredReusableCell(for: %s)", v32, 0xCu);
    swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1, -1);
    swift_slowDealloc(v32, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  }

  v39 = v136;
  sub_10004FC74(v142, v136, type metadata accessor for FMUnknownItemsListDataSource.Entry);
  v40 = sub_100053F2C((uint64_t *)&unk_1005DEE00);
  v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 48);
  if (v41(v39, 2, v40))
  {
    v42 = "FMAccessoryDiscoveryDataSourceSearchingCell";
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v39, v141);
    v42 = "FMUnknownItemListCellView";
  }
  v43 = (unint64_t)(v42 - 32) | 0x8000000000000000;
  v44 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v43);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v46 = objc_msgSend(v138, "dequeueReusableCellWithIdentifier:forIndexPath:", v44, isa);

  static UIListContentConfiguration.cell()();
  UIListContentConfiguration.image.setter(objc_msgSend(objc_allocWithZone((Class)UIImage), "init"));
  v47 = (void (*)(uint64_t *, _QWORD))UIListContentConfiguration.imageProperties.modify(v147);
  UIListContentConfiguration.ImageProperties.maximumSize.setter(40.0, 40.0);
  v47(v147, 0);
  v48 = (void (*)(uint64_t *, _QWORD))UIListContentConfiguration.imageProperties.modify(v147);
  UIListContentConfiguration.ImageProperties.reservedLayoutSize.setter(40.0, 40.0);
  v48(v147, 0);
  UIListContentConfiguration.axesPreservingSuperviewLayoutMargins.setter(1);
  v49 = v139;
  sub_10004FC74(v142, v139, type metadata accessor for FMUnknownItemsListDataSource.Entry);
  v50 = v41(v49, 2, v40);
  if (!v50)
  {
    v66 = (uint64_t)v129;
    (*(void (**)(char *, uint64_t, uint64_t))(v140 + 32))(v129, v49, v141);
    v67 = v130;
    v68 = swift_beginAccess(v130 + 16, &v145, 0, 0);
    v69 = *(_QWORD *)(v67 + 16);
    if (!*(_QWORD *)(v69 + 16))
    {
      v71 = (uint64_t)v128;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v126 + 56))(v128, 1, 1, v127, v68);
      v55 = v143;
LABEL_22:
      (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v66, v141);
      sub_1000051EC(v71, &qword_1005DA768);
LABEL_23:
      v53 = v135;
      v54 = v134;
      goto LABEL_24;
    }
    swift_bridgeObjectRetain(v69);
    v70 = sub_100171818(v66);
    v71 = (uint64_t)v128;
    v72 = v126;
    if ((v73 & 1) != 0)
    {
      sub_10004FC74(*(_QWORD *)(v69 + 56) + *(_QWORD *)(v126 + 72) * v70, (uint64_t)v128, type metadata accessor for FMUnknownItemCellViewModel);
      v74 = 0;
    }
    else
    {
      v74 = 1;
    }
    v55 = v143;
    v86 = v127;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 56))(v71, v74, 1, v127);
    v87 = swift_bridgeObjectRelease(v69);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v72 + 48))(v71, 1, v86, v87) == 1)
      goto LABEL_22;
    v94 = v125;
    sub_100051774(v71, v125, type metadata accessor for FMUnknownItemCellViewModel);
    v95 = type metadata accessor for FMUnknownItemListCellView();
    v96 = swift_dynamicCastClass(v46, v95);
    if (!v96)
    {
      sub_10004FCB8(v94, type metadata accessor for FMUnknownItemCellViewModel);
      (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v66, v141);
      goto LABEL_23;
    }
    v97 = (void *)v96;
    v98 = v94;
    v99 = *(_QWORD *)(v94 + 24);
    v100 = *(_QWORD *)(v98 + 32);
    v101 = v46;
    swift_bridgeObjectRetain(v100);
    UIListContentConfiguration.text.setter(v99, v100);
    v102 = *(_QWORD *)(v98 + 40);
    v103 = *(_QWORD *)(v98 + 48);
    v104 = swift_bridgeObjectRetain(v103);
    UIListContentConfiguration.secondaryText.setter(v102, v103, v104);
    v105 = *(id *)v98;
    v106 = *(id *)v98;
    if (!*(_QWORD *)v98)
      v106 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
    v107 = v105;
    UIListContentConfiguration.image.setter(v106);
    v108 = (void *)objc_opt_self(UIFont);
    v109 = objc_msgSend(v108, "preferredFontForTextStyle:", UIFontTextStyleHeadline);
    v110 = sub_10003CEE8(2);

    v111 = (void (*)(uint64_t *, _QWORD))UIListContentConfiguration.textProperties.modify(v147);
    UIListContentConfiguration.TextProperties.font.setter(v110);
    v111(v147, 0);
    v112 = objc_msgSend(v108, "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
    v113 = (void (*)(uint64_t *, _QWORD))UIListContentConfiguration.secondaryTextProperties.modify(v147);
    UIListContentConfiguration.TextProperties.font.setter(v112);
    v113(v147, 0);
    v114 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
    v115 = (void (*)(uint64_t *, _QWORD))UIListContentConfiguration.secondaryTextProperties.modify(v147);
    UIListContentConfiguration.TextProperties.color.setter(v114);
    v115(v147, 0);
    objc_msgSend(v97, "setAccessoryType:", 1);
    objc_msgSend(v97, "setSelectionStyle:", 2);
    v116 = v130;
    swift_beginAccess(v130 + 32, v144, 0, 0);
    v117 = *(_QWORD *)(v116 + 32);
    if (*(_QWORD *)(v117 + 16))
    {
      swift_bridgeObjectRetain(v117);
      v118 = (uint64_t)v129;
      v119 = sub_100171818((uint64_t)v129);
      v53 = v135;
      v54 = v134;
      if ((v120 & 1) != 0)
      {
        v121 = *(void **)(*(_QWORD *)(v117 + 56) + 8 * v119);
        swift_retain(v121);
        swift_bridgeObjectRelease(v117);
        v122 = v125;
        sub_1001E54E0(v125, v121);
        v123 = v122;

        swift_release(v121);
        v55 = v143;
LABEL_36:
        sub_10004FCB8(v123, type metadata accessor for FMUnknownItemCellViewModel);
        (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v118, v141);
        goto LABEL_24;
      }

      swift_bridgeObjectRelease(v117);
      v55 = v143;
    }
    else
    {

      v53 = v135;
      v54 = v134;
      v55 = v143;
      v118 = (uint64_t)v129;
    }
    v123 = v125;
    goto LABEL_36;
  }
  if (v50 != 1)
  {
    v75 = type metadata accessor for FMAccessoryDiscoverySearchingCell();
    v76 = swift_dynamicCastClass(v46, v75);
    v53 = v135;
    v54 = v134;
    v55 = v143;
    if (!v76)
    {
LABEL_24:
      v88 = UIListContentConfiguration.axesPreservingSuperviewLayoutMargins.setter(0);
      v89 = v131;
      static UIBackgroundConfiguration.clear()(v88);
      v147[3] = v53;
      v147[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
      v90 = sub_10003D370(v147);
      (*(void (**)(_QWORD *, char *, uint64_t))(v54 + 16))(v90, v55, v53);
      UITableViewCell.contentConfiguration.setter(v147);
      v91 = v132;
      v92 = v133;
      (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v7, v89, v133);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v7, 0, 1, v92);
      UITableViewCell.backgroundConfiguration.setter(v7);
      (*(void (**)(char *, uint64_t))(v91 + 8))(v89, v92);
      goto LABEL_25;
    }
    v77 = v76;
    v78 = (void *)objc_opt_self(UIColor);
    v58 = v46;
    v79 = objc_msgSend(v78, "linkColor");
    v80 = (void (*)(uint64_t *, _QWORD))UIListContentConfiguration.textProperties.modify(v147);
    UIListContentConfiguration.TextProperties.color.setter(v79);
    v80(v147, 0);
    v81 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v149._countAndFlagsBits = 0xD000000000000018;
    v82._countAndFlagsBits = 0xD00000000000002ALL;
    v149._object = (void *)0x80000001004A5660;
    v82._object = (void *)0x80000001004B3B20;
    v83.value._object = (void *)0x80000001004A5640;
    v83.value._countAndFlagsBits = 0xD000000000000013;
    v84._countAndFlagsBits = 0;
    v84._object = (void *)0xE000000000000000;
    v85 = NSLocalizedString(_:tableName:bundle:value:comment:)(v82, v83, (NSBundle)v81, v84, v149);

    v55 = v143;
    UIListContentConfiguration.text.setter(v85._countAndFlagsBits, v85._object);
    objc_msgSend(*(id *)(v77 + OBJC_IVAR____TtC6FindMy33FMAccessoryDiscoverySearchingCell_activityIndicator), "setHidden:", 1);
LABEL_18:

    goto LABEL_24;
  }
  v51 = type metadata accessor for FMAccessoryDiscoverySearchingCell();
  v52 = swift_dynamicCastClass(v46, v51);
  v53 = v135;
  v54 = v134;
  v55 = v143;
  if (v52)
  {
    v56 = (char *)v52;
    v57 = (void *)objc_opt_self(NSBundle);
    v58 = v46;
    v59 = objc_msgSend(v57, "mainBundle");
    v148._countAndFlagsBits = 0xD000000000000018;
    v60._countAndFlagsBits = 0xD000000000000027;
    v148._object = (void *)0x80000001004A5660;
    v60._object = (void *)0x80000001004B3B50;
    v61.value._object = (void *)0x80000001004A5640;
    v61.value._countAndFlagsBits = 0xD000000000000013;
    v62._countAndFlagsBits = 0;
    v62._object = (void *)0xE000000000000000;
    v63 = NSLocalizedString(_:tableName:bundle:value:comment:)(v60, v61, (NSBundle)v59, v62, v148);

    UIListContentConfiguration.text.setter(v63._countAndFlagsBits, v63._object);
    v64 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
    v65 = (void (*)(uint64_t *, _QWORD))UIListContentConfiguration.textProperties.modify(v147);
    UIListContentConfiguration.TextProperties.color.setter(v64);
    v65(v147, 0);
    v55 = v143;
    objc_msgSend(*(id *)&v56[OBJC_IVAR____TtC6FindMy33FMAccessoryDiscoverySearchingCell_activityIndicator], "setHidden:", 0);
    objc_msgSend(v56, "setSelectionStyle:", 0);
    goto LABEL_18;
  }
LABEL_25:
  (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v53);
  return v46;
}

void sub_1001EC5F8()
{
  _swift_stdlib_reportUnimplementedInitializer("FindMy.FMUnknownItemsListDataSource", 35, "init(tableView:cellProvider:)", 29, 0);
  __break(1u);
}

uint64_t sub_1001EC624()
{
  return type metadata accessor for FMUnknownItemsListDataSource(0);
}

uint64_t type metadata accessor for FMUnknownItemsListDataSource.ViewModel()
{
  return objc_opt_self(_TtCC6FindMy28FMUnknownItemsListDataSource9ViewModel);
}

uint64_t *sub_1001EC64C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v9);
  }
  else
  {
    v7 = sub_100053F2C((uint64_t *)&unk_1005DEE00);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t sub_1001EC724(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = sub_100053F2C((uint64_t *)&unk_1005DEE00);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
  if (!(_DWORD)result)
  {
    v4 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

void *sub_1001EC78C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_100053F2C((uint64_t *)&unk_1005DEE00);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for UUID(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_1001EC840(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = sub_100053F2C((uint64_t *)&unk_1005DEE00);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = type metadata accessor for UUID(0);
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(a1, a2, v13);
      return a1;
    }
    sub_1000051EC((uint64_t)a1, (uint64_t *)&unk_1005DEE00);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

void *sub_1001EC94C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_100053F2C((uint64_t *)&unk_1005DEE00);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for UUID(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *sub_1001ECA00(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = sub_100053F2C((uint64_t *)&unk_1005DEE00);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = type metadata accessor for UUID(0);
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(a1, a2, v13);
      return a1;
    }
    sub_1000051EC((uint64_t)a1, (uint64_t *)&unk_1005DEE00);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t sub_1001ECB0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001ECB18);
}

uint64_t sub_1001ECB18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_100053F2C((uint64_t *)&unk_1005DEE00);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t sub_1001ECB68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001ECB74);
}

uint64_t sub_1001ECB74(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = sub_100053F2C((uint64_t *)&unk_1005DEE00);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1001ECBCC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100053F2C((uint64_t *)&unk_1005DEE00);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
}

uint64_t sub_1001ECC08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C((uint64_t *)&unk_1005DEE00);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 2, v4);
}

uint64_t type metadata accessor for FMUnknownItemsListDataSource.Entry(uint64_t a1)
{
  return sub_10001DC04(a1, (uint64_t *)&unk_1005DA710, (uint64_t)&nominal type descriptor for FMUnknownItemsListDataSource.Entry);
}

uint64_t sub_1001ECC60(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(result - 8) + 64, 2);
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FMUnknownItemsListDataSource.Section(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1001ECD00 + 4 * byte_1004876D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1001ECD34 + 4 * byte_1004876D0[v4]))();
}

uint64_t sub_1001ECD34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001ECD3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001ECD44);
  return result;
}

uint64_t sub_1001ECD50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001ECD58);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1001ECD5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001ECD64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMUnknownItemsListDataSource.Section()
{
  return &type metadata for FMUnknownItemsListDataSource.Section;
}

uint64_t sub_1001ECD80()
{
  return sub_10003F774(&qword_1005DA720, &qword_1005DA728, (uint64_t)&protocol conformance descriptor for [A]);
}

unint64_t sub_1001ECDB0()
{
  unint64_t result;

  result = qword_1005DA730;
  if (!qword_1005DA730)
  {
    result = swift_getWitnessTable(&unk_1004877C0, &type metadata for FMUnknownItemsListDataSource.Section);
    atomic_store(result, (unint64_t *)&qword_1005DA730);
  }
  return result;
}

uint64_t sub_1001ECDF4()
{
  return sub_100008000(&qword_1005DA738, type metadata accessor for FMUnknownItemsListDataSource.Entry, (uint64_t)&unk_1004878D8);
}

double sub_1001ECE20(uint64_t a1, uint64_t a2)
{
  return sub_1001ED3BC(a2);
}

uint64_t sub_1001ECE28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FMUnknownItemsListDataSource.Entry(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100053F2C((uint64_t *)&unk_1005DA750);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_10004FC74(a1, (uint64_t)v14, type metadata accessor for FMUnknownItemsListDataSource.Entry);
  sub_10004FC74(a2, v15, type metadata accessor for FMUnknownItemsListDataSource.Entry);
  v16 = sub_100053F2C((uint64_t *)&unk_1005DEE00);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48);
  v18 = v17(v14, 2, v16);
  if (!v18)
  {
    sub_10004FC74((uint64_t)v14, (uint64_t)v10, type metadata accessor for FMUnknownItemsListDataSource.Entry);
    if (!v17((char *)v15, 2, v16))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      v19 = static UUID.== infix(_:_:)(v10, v7);
      v20 = *(void (**)(char *, uint64_t))(v5 + 8);
      v20(v7, v4);
      v20(v10, v4);
      sub_10004FCB8((uint64_t)v14, type metadata accessor for FMUnknownItemsListDataSource.Entry);
      return v19 & 1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    goto LABEL_9;
  }
  if (v18 == 1)
  {
    if (v17((char *)v15, 2, v16) != 1)
      goto LABEL_9;
  }
  else if (v17((char *)v15, 2, v16) != 2)
  {
LABEL_9:
    sub_1000051EC((uint64_t)v14, (uint64_t *)&unk_1005DA750);
    v19 = 0;
    return v19 & 1;
  }
  sub_10004FCB8((uint64_t)v14, type metadata accessor for FMUnknownItemsListDataSource.Entry);
  v19 = 1;
  return v19 & 1;
}

uint64_t sub_1001ED068(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v12;
  _BYTE v13[24];
  _BYTE v14[24];
  _BYTE v15[24];

  swift_beginAccess(a1 + 16, v15, 0, 0);
  v4 = *(_QWORD *)(a1 + 16);
  swift_beginAccess(a2 + 16, v14, 0, 0);
  v5 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  v6 = sub_1001E5B50(v4, v5);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v5);
  if ((v6 & 1) != 0)
  {
    swift_beginAccess(a1 + 24, v13, 0, 0);
    v7 = *(_QWORD *)(a1 + 24);
    swift_beginAccess(a2 + 24, &v12, 0, 0);
    v8 = *(_QWORD *)(a2 + 24);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    sub_1001E5FD4(v7, v8);
    v10 = v9;
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    v10 = 0;
  }
  return v10 & 1;
}

void sub_1001ED170(uint64_t a1, void (*a2)(char *, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;

  v4 = sub_100053F2C(&qword_1005DA748);
  __chkstk_darwin(v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 64);
  v23 = a1 + 64;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v7;
  v24 = (unint64_t)(v8 + 63) >> 6;
  swift_bridgeObjectRetain(a1);
  v11 = 0;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v11 << 6);
      goto LABEL_5;
    }
    v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v24)
      goto LABEL_23;
    v20 = *(_QWORD *)(v23 + 8 * v19);
    ++v11;
    if (!v20)
    {
      v11 = v19 + 1;
      if (v19 + 1 >= v24)
        goto LABEL_23;
      v20 = *(_QWORD *)(v23 + 8 * v11);
      if (!v20)
      {
        v11 = v19 + 2;
        if (v19 + 2 >= v24)
          goto LABEL_23;
        v20 = *(_QWORD *)(v23 + 8 * v11);
        if (!v20)
        {
          v11 = v19 + 3;
          if (v19 + 3 >= v24)
            goto LABEL_23;
          v20 = *(_QWORD *)(v23 + 8 * v11);
          if (!v20)
            break;
        }
      }
    }
LABEL_22:
    v10 = (v20 - 1) & v20;
    v13 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_5:
    v14 = *(_QWORD *)(a1 + 48);
    v15 = type metadata accessor for UUID(0);
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v6, v14 + *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72) * v13, v15);
    v16 = *(_QWORD *)(a1 + 56);
    v17 = v16 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for FMUnknownItemCellViewModel(0) - 8) + 72) * v13;
    v18 = (uint64_t)&v6[*(int *)(v4 + 48)];
    sub_10004FC74(v17, v18, type metadata accessor for FMUnknownItemCellViewModel);
    a2(v6, v18);
    sub_1000051EC((uint64_t)v6, &qword_1005DA748);
  }
  v21 = v19 + 4;
  if (v21 >= v24)
  {
LABEL_23:
    swift_release(a1);
    return;
  }
  v20 = *(_QWORD *)(v23 + 8 * v21);
  if (v20)
  {
    v11 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v11 >= v24)
      goto LABEL_23;
    v20 = *(_QWORD *)(v23 + 8 * v11);
    ++v21;
    if (v20)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

double sub_1001ED3BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v8;
  uint64_t v9;

  if (qword_1005D2070 != -1)
    swift_once(&qword_1005D2070, sub_1003CB89C);
  v2 = type metadata accessor for Logger(0);
  sub_100056D88(v2, (uint64_t)qword_1005F6010);
  swift_bridgeObjectRetain(a1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v6 = 134217984;
    v8 = *(_QWORD *)(a1 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v8, &v9);
    swift_bridgeObjectRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMUnknownItemsListDataSource: didUpdate %ld items", v6, 0xCu);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease(a1);
  }
  return sub_1001E8840(a1, 1);
}

uint64_t sub_1001ED4FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C(&qword_1005DA740);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1001ED544(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1001EB8A4(a1, a2, a3, v3);
}

uint64_t sub_1001ED54C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t result;
  uint64_t v10;

  v2 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = IndexPath.init(row:section:)(0, a1);
  v7 = IndexPath.section.getter(v6);
  if (v7 > 2)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000010, 0x80000001004B3BB0, "FindMy/FMUnknownItemsListDataSource.swift", 41, 2, 624, 0);
    __break(1u);
  }
  else
  {
    v8 = v7;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return sub_1001E62F4(v8);
  }
  return result;
}

uint64_t sub_1001ED638(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62[3];

  v53 = type metadata accessor for IndexPath(0);
  v56 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v55 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for FMSelectedSection(0);
  v4 = __chkstk_darwin(v54);
  v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v50 - v7;
  v9 = sub_100053F2C((uint64_t *)&unk_1005D2A50);
  __chkstk_darwin(v9);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FMIPUnknownItem(0);
  v57 = *(_QWORD *)(v12 - 8);
  v58 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FMUnknownItemsListDataSource.Entry(0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v20 = (char *)&v50 - v19;
  v21 = a1;
  sub_1001EB250(a1, (uint64_t)&v50 - v19);
  v59 = v20;
  sub_10004FC74((uint64_t)v20, (uint64_t)v18, type metadata accessor for FMUnknownItemsListDataSource.Entry);
  v22 = sub_100053F2C((uint64_t *)&unk_1005DEE00);
  v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v18, 2, v22);
  if (v23)
  {
    if (v23 != 1)
      sub_1001E7714();
    return sub_10004FCB8((uint64_t)v59, type metadata accessor for FMUnknownItemsListDataSource.Entry);
  }
  else
  {
    v25 = (uint64_t)v8;
    v51 = v6;
    v52 = v18;
    v26 = v54;
    v27 = v55;
    v28 = v56;
    sub_1001EB384(v21, (uint64_t)v11);
    v30 = v57;
    v29 = v58;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v11, 1, v58) == 1)
    {
      sub_1000051EC((uint64_t)v11, (uint64_t *)&unk_1005D2A50);
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v31 = type metadata accessor for Logger(0);
      sub_100056D88(v31, (uint64_t)qword_1005F5748);
      v32 = v53;
      v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 16))(v27, v21, v53);
      v34 = Logger.logObject.getter(v33);
      v35 = static os_log_type_t.error.getter(v34);
      if (os_log_type_enabled(v34, v35))
      {
        v36 = (uint8_t *)swift_slowAlloc(12, -1);
        v37 = swift_slowAlloc(32, -1);
        v62[0] = v37;
        *(_DWORD *)v36 = 136315138;
        v38 = sub_100008000(&qword_1005DA770, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
        v39 = dispatch thunk of CustomStringConvertible.description.getter(v32, v38);
        v41 = v40;
        v60 = sub_100056DA0(v39, v40, v62);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v60, &v61);
        v42 = swift_bridgeObjectRelease(v41);
        (*(void (**)(char *, uint64_t, __n128))(v28 + 8))(v27, v32, v42);
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "FMItemsListDataSource: cannnot select device at indexPath: %s", v36, 0xCu);
        swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v37, -1, -1);
        swift_slowDealloc(v36, -1, -1);

      }
      else
      {

        (*(void (**)(char *, uint64_t))(v28 + 8))(v27, v32);
      }
      sub_10004FCB8((uint64_t)v59, type metadata accessor for FMUnknownItemsListDataSource.Entry);
      v48 = v52;
      v49 = type metadata accessor for UUID(0);
      return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v48, v49);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v14, v11, v29);
      v43 = *(_QWORD *)(*(_QWORD *)(v1 + qword_1005DA4F0) + 56);
      (*(void (**)(uint64_t, char *, uint64_t))(v30 + 16))(v25, v14, v29);
      swift_storeEnumTagMultiPayload(v25, v26, 8);
      v44 = v43 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
      swift_beginAccess(v43 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, v62, 0, 0);
      v45 = (uint64_t)v51;
      sub_10004FC74(v44, (uint64_t)v51, type metadata accessor for FMSelectedSection);
      swift_beginAccess(v44, &v60, 33, 0);
      swift_retain(v43);
      sub_100009DF8(v25, v44);
      swift_endAccess(&v60);
      sub_10004C8A4(v45);
      sub_10004FCB8(v25, type metadata accessor for FMSelectedSection);
      sub_10004FCB8(v45, type metadata accessor for FMSelectedSection);
      v46 = swift_release(v43);
      (*(void (**)(char *, uint64_t, __n128))(v30 + 8))(v14, v29, v46);
      sub_10004FCB8((uint64_t)v59, type metadata accessor for FMUnknownItemsListDataSource.Entry);
      v47 = type metadata accessor for UUID(0);
      return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v47 - 8) + 8))(v52, v47);
    }
  }
}

void sub_1001EDB84()
{
  uint64_t v0;

  sub_1001E71D4(v0);
}

uint64_t sub_1001EDB8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1001EAA8C(a1, a2, *(_QWORD *)(v2 + 16)) & 1;
}

uint64_t sub_1001EDBA8()
{
  return sub_1001EB068() & 1;
}

uint64_t sub_1001EDBC4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 33, 7);
}

double sub_1001EDBF0()
{
  uint64_t v0;

  return sub_1001E8B90(*(char **)(v0 + 16), *(uint64_t (**)(_QWORD))(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

unint64_t sub_1001EDBFC()
{
  unint64_t result;

  result = qword_1005DA7A8;
  if (!qword_1005DA7A8)
  {
    result = swift_getWitnessTable(&unk_100487858, &type metadata for FMUnknownItemsListDataSource.Section);
    atomic_store(result, (unint64_t *)&qword_1005DA7A8);
  }
  return result;
}

uint64_t sub_1001EDC40(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1001E90F0(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1001EDC4C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1001EDC78()
{
  uint64_t v0;

  sub_1001E967C(*(_BYTE *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1001EDC84()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001EDCA8(uint64_t a1)
{
  uint64_t v1;

  return sub_1001E85F8(a1, v1, (uint64_t)sub_1001EDD28, (uint64_t)&unk_1005501F8);
}

uint64_t sub_1001EDCD0(uint64_t a1)
{
  uint64_t v1;

  return sub_1001E85F8(a1, v1, (uint64_t)sub_1001EDD28, (uint64_t)&unk_1005501D0);
}

uint64_t sub_1001EDCF8(uint64_t a1)
{
  uint64_t v1;

  return sub_1001E85F8(a1, v1, (uint64_t)sub_1001EDD20, (uint64_t)&unk_1005501A8);
}

void sub_1001EDD20()
{
  uint64_t v0;

  sub_1001E87F0(v0);
}

double sub_1001EDD28()
{
  uint64_t v0;

  return sub_1001E8560(v0);
}

uint64_t sub_1001EDD40()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1001EDD64()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + qword_1005DA538) = 0;
  sub_1001E6898();
}

double sub_1001EDD90()
{
  uint64_t v0;

  return sub_1001E7BF8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1001EDD98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for FMUnknownItemCellViewModel(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v0 + v4;

  swift_bridgeObjectRelease(*(_QWORD *)(v7 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + 48));
  v8 = v7 + *(int *)(v1 + 44);
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = v7 + *(int *)(v1 + 48);
  v11 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);

  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_1001EDE84(void **a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMUnknownItemCellViewModel(0) - 8) + 80);
  return sub_1001E5770(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t destroy for FMUTWelcomeView(_QWORD *a1)
{
  uint64_t result;

  result = swift_release(*a1);
  if (a1[1])
    result = swift_release(a1[2]);
  if (a1[3])
    result = swift_release(a1[4]);
  if (a1[5])
    return swift_release(a1[6]);
  return result;
}

uint64_t initializeWithCopy for FMUTWelcomeView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  v6 = a2 + 1;
  v5 = a2[1];
  swift_retain(v4);
  if (v5)
  {
    v7 = a2[2];
    *(_QWORD *)(a1 + 8) = v5;
    *(_QWORD *)(a1 + 16) = v7;
    swift_retain(v7);
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *v6;
  }
  v8 = a2[3];
  if (v8)
  {
    v9 = a2[4];
    *(_QWORD *)(a1 + 24) = v8;
    *(_QWORD *)(a1 + 32) = v9;
    swift_retain(v9);
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
  }
  v10 = a2[5];
  if (v10)
  {
    v11 = a2[6];
    *(_QWORD *)(a1 + 40) = v10;
    *(_QWORD *)(a1 + 48) = v11;
    swift_retain(v11);
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
  *(_QWORD *)(a1 + 104) = a2[13];
  return a1;
}

_QWORD *assignWithCopy for FMUTWelcomeView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_retain(v4);
  swift_release(v5);
  v6 = a2[1];
  if (a1[1])
  {
    if (v6)
    {
      v7 = a2[2];
      v8 = a1[2];
      a1[1] = v6;
      a1[2] = v7;
      swift_retain(v7);
      swift_release(v8);
      goto LABEL_8;
    }
    swift_release(a1[2]);
  }
  else if (v6)
  {
    v9 = a2[2];
    a1[1] = v6;
    a1[2] = v9;
    swift_retain(v9);
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
LABEL_8:
  v10 = a2[3];
  if (a1[3])
  {
    if (v10)
    {
      v11 = a2[4];
      v12 = a1[4];
      a1[3] = v10;
      a1[4] = v11;
      swift_retain(v11);
      swift_release(v12);
      goto LABEL_15;
    }
    swift_release(a1[4]);
  }
  else if (v10)
  {
    v13 = a2[4];
    a1[3] = v10;
    a1[4] = v13;
    swift_retain(v13);
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
LABEL_15:
  v14 = a2[5];
  if (!a1[5])
  {
    if (v14)
    {
      v17 = a2[6];
      a1[5] = v14;
      a1[6] = v17;
      swift_retain(v17);
      goto LABEL_22;
    }
LABEL_21:
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
    goto LABEL_22;
  }
  if (!v14)
  {
    swift_release(a1[6]);
    goto LABEL_21;
  }
  v15 = a2[6];
  v16 = a1[6];
  a1[5] = v14;
  a1[6] = v15;
  swift_retain(v15);
  swift_release(v16);
LABEL_22:
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  a1[13] = a2[13];
  return a1;
}

__n128 initializeWithTake for FMUTWelcomeView(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t *assignWithTake for FMUTWelcomeView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *a1;
  *a1 = *a2;
  swift_release(v4);
  v5 = a2[1];
  if (a1[1])
  {
    if (v5)
    {
      v6 = a2[2];
      v7 = a1[2];
      a1[1] = v5;
      a1[2] = v6;
      swift_release(v7);
      goto LABEL_8;
    }
    swift_release(a1[2]);
  }
  else if (v5)
  {
    v8 = a2[2];
    a1[1] = v5;
    a1[2] = v8;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
LABEL_8:
  v9 = a2[3];
  if (a1[3])
  {
    if (v9)
    {
      v10 = a2[4];
      v11 = a1[4];
      a1[3] = v9;
      a1[4] = v10;
      swift_release(v11);
      goto LABEL_15;
    }
    swift_release(a1[4]);
  }
  else if (v9)
  {
    v12 = a2[4];
    a1[3] = v9;
    a1[4] = v12;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
LABEL_15:
  v13 = a2[5];
  if (!a1[5])
  {
    if (v13)
    {
      v16 = a2[6];
      a1[5] = v13;
      a1[6] = v16;
      goto LABEL_22;
    }
LABEL_21:
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
    goto LABEL_22;
  }
  if (!v13)
  {
    swift_release(a1[6]);
    goto LABEL_21;
  }
  v14 = a2[6];
  v15 = a1[6];
  a1[5] = v13;
  a1[6] = v14;
  swift_release(v15);
LABEL_22:
  *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 7);
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
  a1[13] = a2[13];
  return a1;
}

uint64_t getEnumTagSinglePayload for FMUTWelcomeView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMUTWelcomeView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMUTWelcomeView()
{
  return &type metadata for FMUTWelcomeView;
}

uint64_t sub_1001EE3D8(uint64_t a1)
{
  return swift_getOpaqueTypeConformance2(a1, &unk_1004DB8B8, 1);
}

uint64_t sub_1001EE3E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE v44[16];
  uint64_t v45;
  _OWORD v46[3];
  _OWORD v47[3];

  v43 = a1;
  v2 = sub_100053F2C(&qword_1005DA820);
  __chkstk_darwin(v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_100053F2C(&qword_1005DA828);
  v5 = __chkstk_darwin(v42);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v41 = (uint64_t)&v38 - v8;
  v9 = sub_100053F2C(&qword_1005DA830);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_100053F2C(&qword_1005DA838);
  v13 = __chkstk_darwin(v40);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v13);
  v39 = (uint64_t)&v38 - v17;
  v18 = static Axis.Set.vertical.getter(v16);
  v45 = v1;
  v19 = sub_100053F2C(&qword_1005DA840);
  v20 = sub_10003F774(&qword_1005DA848, &qword_1005DA840, (uint64_t)&protocol conformance descriptor for TupleView<A>);
  v21 = ScrollView.init(_:showsIndicators:content:)(v18, 1, sub_1001F0324, v44, v19, v20);
  v22 = static Alignment.center.getter(v21);
  _FrameLayout.init(width:height:alignment:)(v46, 0, 1, 0, 1, v22, v23);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v15, v12, v9);
  v24 = &v15[*(int *)(v40 + 36)];
  v25 = v46[1];
  *(_OWORD *)v24 = v46[0];
  *((_OWORD *)v24 + 1) = v25;
  *((_OWORD *)v24 + 2) = v46[2];
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v26 = v39;
  v27 = sub_10005DAA0((uint64_t)v15, v39, &qword_1005DA838);
  *(_QWORD *)v4 = static HorizontalAlignment.center.getter(v27);
  *((_QWORD *)v4 + 1) = 0;
  v4[16] = 1;
  v28 = sub_100053F2C(&qword_1005DA850);
  v29 = sub_1001EFDA0(v1, (uint64_t)&v4[*(int *)(v28 + 44)]);
  v30 = static Alignment.bottom.getter(v29);
  _FrameLayout.init(width:height:alignment:)(v47, 0, 1, 0, 1, v30, v31);
  sub_100007464((uint64_t)v4, (uint64_t)v7, &qword_1005DA820);
  v32 = &v7[*(int *)(v42 + 36)];
  v33 = v47[1];
  *(_OWORD *)v32 = v47[0];
  *((_OWORD *)v32 + 1) = v33;
  *((_OWORD *)v32 + 2) = v47[2];
  sub_1000051EC((uint64_t)v4, &qword_1005DA820);
  v34 = v41;
  sub_10005DAA0((uint64_t)v7, v41, &qword_1005DA828);
  sub_100007464(v26, (uint64_t)v15, &qword_1005DA838);
  sub_100007464(v34, (uint64_t)v7, &qword_1005DA828);
  v35 = v43;
  sub_100007464((uint64_t)v15, v43, &qword_1005DA838);
  v36 = sub_100053F2C(&qword_1005DA858);
  sub_100007464((uint64_t)v7, v35 + *(int *)(v36 + 48), &qword_1005DA828);
  sub_1000051EC(v34, &qword_1005DA828);
  sub_1000051EC(v26, &qword_1005DA838);
  sub_1000051EC((uint64_t)v7, &qword_1005DA828);
  return sub_1000051EC((uint64_t)v15, &qword_1005DA838);
}

uint64_t sub_1001EE778@<X0>(double *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t KeyPath;
  char *v26;
  uint64_t v27;
  double v28;
  double v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  double v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;

  v72 = a2;
  v3 = sub_100053F2C(&qword_1005DA8B0);
  __chkstk_darwin(v3);
  v67 = (uint64_t)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_100053F2C(&qword_1005DA8B8);
  __chkstk_darwin(v68);
  v66 = (uint64_t)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_100053F2C(&qword_1005DA8C0);
  __chkstk_darwin(v70);
  v7 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_100053F2C(&qword_1005DA8C8);
  v8 = __chkstk_darwin(v71);
  v10 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v69 = (uint64_t)&v65 - v11;
  v12 = sub_100053F2C(&qword_1005DA8D0);
  __chkstk_darwin(v12);
  v14 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100053F2C(&qword_1005DA8D8);
  __chkstk_darwin(v15);
  v17 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100053F2C(&qword_1005DA8E0);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v19);
  v65 = (uint64_t)&v65 - v23;
  *(_QWORD *)v14 = static HorizontalAlignment.center.getter(v22);
  *((_QWORD *)v14 + 1) = 0;
  v14[16] = 1;
  v24 = sub_100053F2C(&qword_1005DA8E8);
  sub_1001EEC74(a1, (uint64_t)&v14[*(int *)(v24 + 44)]);
  KeyPath = swift_getKeyPath(&unk_1004879D8);
  sub_100007464((uint64_t)v14, (uint64_t)v17, &qword_1005DA8D0);
  v26 = &v17[*(int *)(v15 + 36)];
  *(_QWORD *)v26 = KeyPath;
  v26[8] = 1;
  v27 = sub_1000051EC((uint64_t)v14, &qword_1005DA8D0);
  LOBYTE(v15) = static Edge.Set.horizontal.getter(v27);
  v28 = a1[8];
  v29 = a1[10];
  v30 = (uint64_t)a1;
  v31 = EdgeInsets.init(_all:)(v28);
  v33 = v32;
  v35 = v34;
  v37 = v36;
  sub_100007464((uint64_t)v17, (uint64_t)v21, &qword_1005DA8D8);
  v38 = &v21[*(int *)(v18 + 36)];
  *v38 = v15;
  *((double *)v38 + 1) = v31;
  *((_QWORD *)v38 + 2) = v33;
  *((_QWORD *)v38 + 3) = v35;
  *((_QWORD *)v38 + 4) = v37;
  v38[40] = 0;
  sub_1000051EC((uint64_t)v17, &qword_1005DA8D8);
  v39 = v65;
  sub_10005DAA0((uint64_t)v21, v65, &qword_1005DA8E0);
  v40 = v67;
  v41 = sub_1001EF3E0(v30, v67);
  LOBYTE(v17) = static Edge.Set.horizontal.getter(v41);
  v42 = EdgeInsets.init(_all:)(v28);
  v44 = v43;
  v46 = v45;
  v48 = v47;
  v49 = v66;
  sub_100007464(v40, v66, &qword_1005DA8B0);
  v50 = v49 + *(int *)(v68 + 36);
  *(_BYTE *)v50 = (_BYTE)v17;
  *(double *)(v50 + 8) = v42;
  *(_QWORD *)(v50 + 16) = v44;
  *(_QWORD *)(v50 + 24) = v46;
  *(_QWORD *)(v50 + 32) = v48;
  *(_BYTE *)(v50 + 40) = 0;
  sub_1000051EC(v40, &qword_1005DA8B0);
  LOBYTE(v17) = static Edge.Set.vertical.getter(v51);
  v52 = EdgeInsets.init(_all:)(v29);
  v54 = v53;
  v56 = v55;
  v58 = v57;
  sub_100007464(v49, (uint64_t)v7, &qword_1005DA8B8);
  v59 = &v7[*(int *)(v70 + 36)];
  *v59 = (char)v17;
  *((double *)v59 + 1) = v52;
  *((_QWORD *)v59 + 2) = v54;
  *((_QWORD *)v59 + 3) = v56;
  *((_QWORD *)v59 + 4) = v58;
  v59[40] = 0;
  sub_1000051EC(v49, &qword_1005DA8B8);
  sub_100007464((uint64_t)v7, (uint64_t)v10, &qword_1005DA8C0);
  *(_WORD *)&v10[*(int *)(v71 + 36)] = 256;
  sub_1000051EC((uint64_t)v7, &qword_1005DA8C0);
  v60 = v69;
  sub_10005DAA0((uint64_t)v10, v69, &qword_1005DA8C8);
  sub_100007464(v39, (uint64_t)v21, &qword_1005DA8E0);
  sub_100007464(v60, (uint64_t)v10, &qword_1005DA8C8);
  v61 = v72;
  *v72 = 0;
  *((_BYTE *)v61 + 8) = 1;
  v62 = v61;
  v63 = sub_100053F2C(&qword_1005DA8F0);
  sub_100007464((uint64_t)v21, (uint64_t)v62 + *(int *)(v63 + 48), &qword_1005DA8E0);
  sub_100007464((uint64_t)v10, (uint64_t)v62 + *(int *)(v63 + 64), &qword_1005DA8C8);
  sub_1000051EC(v60, &qword_1005DA8C8);
  sub_1000051EC(v39, &qword_1005DA8E0);
  sub_1000051EC((uint64_t)v10, &qword_1005DA8C8);
  return sub_1000051EC((uint64_t)v21, &qword_1005DA8E0);
}

uint64_t sub_1001EEC74@<X0>(double *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v55 = a2;
  v3 = sub_100053F2C(&qword_1005DA920);
  v4 = __chkstk_darwin(v3);
  v56 = (uint64_t)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v8 = (uint64_t *)((char *)&v51 - v7);
  *v8 = static Alignment.center.getter(v6);
  v8[1] = v9;
  v54 = v8;
  v10 = sub_100053F2C(&qword_1005DA928);
  sub_1001EEF18(a1, (uint64_t)v8 + *(int *)(v10 + 44));
  v57 = sub_100151A3C();
  v58 = v11;
  v53 = sub_1000517B8();
  v12 = Text.init<A>(_:)(&v57, &type metadata for String, v53);
  v14 = v13;
  v16 = v15;
  v18 = v17 & 1;
  v19 = static Font.title.getter();
  v20 = Text.font(_:)(v19, v12, v14, v18, v16);
  v22 = v21;
  v24 = v23;
  v26 = v25;
  swift_release(v19);
  v27 = v24 & 1;
  sub_10016151C(v12, v14, v18);
  v28 = swift_bridgeObjectRelease(v16);
  v29 = Text.bold()(v20, v22, v27, v26, v28);
  v31 = v30;
  v52 = v32;
  LOBYTE(v12) = v33 & 1;
  sub_10016151C(v20, v22, v27);
  swift_bridgeObjectRelease(v26);
  v57 = sub_100151BE0();
  v58 = v34;
  v35 = Text.init<A>(_:)(&v57, &type metadata for String, v53);
  v37 = v36;
  v39 = v38;
  LOBYTE(v14) = v40 & 1;
  v41 = (uint64_t)v54;
  v42 = v56;
  sub_100007464((uint64_t)v54, v56, &qword_1005DA920);
  LOBYTE(v57) = v12;
  v43 = v42;
  v44 = v55;
  sub_100007464(v43, v55, &qword_1005DA920);
  v45 = sub_100053F2C(&qword_1005DA930);
  v46 = v44;
  v47 = v44 + *(int *)(v45 + 48);
  *(_QWORD *)v47 = v29;
  *(_QWORD *)(v47 + 8) = v31;
  *(_BYTE *)(v47 + 16) = v12;
  v48 = v52;
  *(_QWORD *)(v47 + 24) = v52;
  v49 = v46 + *(int *)(v45 + 64);
  *(_QWORD *)v49 = v35;
  *(_QWORD *)(v49 + 8) = v37;
  *(_BYTE *)(v49 + 16) = v14;
  *(_QWORD *)(v49 + 24) = v39;
  sub_1001615D4(v29, v31, v12);
  swift_bridgeObjectRetain(v48);
  sub_1001615D4(v35, v37, v14);
  swift_bridgeObjectRetain(v39);
  sub_1000051EC(v41, &qword_1005DA920);
  sub_10016151C(v35, v37, v14);
  swift_bridgeObjectRelease(v39);
  sub_10016151C(v29, v31, v57);
  swift_bridgeObjectRelease(v48);
  return sub_1000051EC(v56, &qword_1005DA920);
}

uint64_t sub_1001EEF18@<X0>(double *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  double v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;

  v61 = a2;
  v3 = type metadata accessor for Image.ResizingMode(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_100053F2C(&qword_1005D8490);
  __chkstk_darwin(v58);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v57 = sub_100053F2C(&qword_1005DA910);
  __chkstk_darwin(v57);
  v13 = (uint64_t *)((char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v62 = sub_100053F2C(&qword_1005DA938);
  v59 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100053F2C(&qword_1005DA940);
  v17 = __chkstk_darwin(v16);
  v60 = (uint64_t)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v63 = (uint64_t)&v55 - v19;
  v20 = *a1;
  v21 = 1;
  if ((*(_BYTE *)(*(_QWORD *)a1 + 25) & 1) == 0)
  {
    v22 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
    v23 = Color.init(uiColor:)(v22);
    v56 = v4;
    v24 = v23;
    v25 = a1[7];
    v26 = a1[8];
    v27 = a1[9];
    v28 = *((_QWORD *)a1 + 12);
    v29 = (char *)v11 + *(int *)(v9 + 20);
    v55 = v3;
    v30 = v6;
    v31 = enum case for RoundedCornerStyle.continuous(_:);
    v32 = type metadata accessor for RoundedCornerStyle(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v29, v31, v32);
    *v11 = v28;
    v11[1] = v28;
    sub_1001F05B0((uint64_t)v11, (uint64_t)v8);
    *(_WORD *)&v8[*(int *)(v58 + 36)] = 256;
    sub_100007464((uint64_t)v8, (uint64_t)v13 + *(int *)(v57 + 36), &qword_1005D8490);
    *v13 = v24;
    swift_retain(v24);
    v6 = v30;
    v3 = v55;
    sub_1000051EC((uint64_t)v8, &qword_1005D8490);
    sub_1001F05F4((uint64_t)v11);
    swift_release(v24);
    v33 = v26 * 0.5;
    v35 = static Edge.Set.all.getter(v34);
    sub_100007464((uint64_t)v13, (uint64_t)v15, &qword_1005DA910);
    v36 = &v15[*(int *)(v62 + 36)];
    *v36 = v35;
    *((double *)v36 + 1) = v25 - v27;
    *((double *)v36 + 2) = v33;
    *((_QWORD *)v36 + 3) = 0;
    *((double *)v36 + 4) = v33;
    v36[40] = 0;
    v4 = v56;
    sub_1000051EC((uint64_t)v13, &qword_1005DA910);
    sub_10005DAA0((uint64_t)v15, v63, &qword_1005DA938);
    v21 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 56))(v63, v21, 1, v62);
  v37 = Image.init(uiImage:)(*(id *)(*(_QWORD *)&v20 + 16));
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for Image.ResizingMode.stretch(_:), v3);
  v38 = Image.resizable(capInsets:resizingMode:)(v6, v37, 0.0, 0.0, 0.0, 0.0);
  v39 = swift_release(v37);
  v40 = (*(uint64_t (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v39);
  v59 = *((_QWORD *)a1 + 7);
  v62 = *((_QWORD *)a1 + 9);
  v41 = *((_QWORD *)a1 + 13);
  v42 = static Alignment.center.getter(v40);
  v44 = _FrameLayout.init(width:height:alignment:)(&v64, v41, 0, 0, 1, v42, v43);
  v45 = v64;
  v46 = v65;
  v47 = v66;
  v48 = v67;
  v57 = v69;
  v58 = v68;
  LOBYTE(v41) = static Edge.Set.all.getter(v44);
  v49 = v63;
  v50 = v60;
  sub_100007464(v63, v60, &qword_1005DA940);
  v51 = v61;
  sub_100007464(v50, v61, &qword_1005DA940);
  v52 = v51 + *(int *)(sub_100053F2C(&qword_1005DA948) + 48);
  *(_QWORD *)v52 = v38;
  *(_QWORD *)(v52 + 8) = 0;
  *(_WORD *)(v52 + 16) = 1;
  *(_QWORD *)(v52 + 24) = v45;
  *(_BYTE *)(v52 + 32) = v46;
  *(_QWORD *)(v52 + 40) = v47;
  *(_BYTE *)(v52 + 48) = v48;
  v53 = v57;
  *(_QWORD *)(v52 + 56) = v58;
  *(_QWORD *)(v52 + 64) = v53;
  *(_BYTE *)(v52 + 72) = v41;
  *(_QWORD *)(v52 + 80) = v59;
  *(_QWORD *)(v52 + 88) = 0;
  *(_QWORD *)(v52 + 96) = v62;
  *(_QWORD *)(v52 + 104) = 0;
  *(_BYTE *)(v52 + 112) = 0;
  swift_retain(v38);
  sub_1000051EC(v49, &qword_1005DA940);
  swift_release(v38);
  return sub_1000051EC(v50, &qword_1005DA940);
}

uint64_t sub_1001EF3E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v4 = sub_100053F2C(&qword_1005DA8F8);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v23 - v9;
  v11 = __chkstk_darwin(v8);
  v13 = (uint64_t *)((char *)&v23 - v12);
  v14 = __chkstk_darwin(v11);
  v16 = (uint64_t *)((char *)&v23 - v15);
  *v16 = static Alignment.center.getter(v14);
  v16[1] = v17;
  v18 = sub_100053F2C(&qword_1005DA900);
  v19 = sub_1001EF5C8(a1, 0xD000000000000010, 0x80000001004B3CF0, (uint64_t (*)(void))&static Color.green.getter, sub_100151CEC, (uint64_t)v16 + *(int *)(v18 + 44));
  *v13 = static Alignment.center.getter(v19);
  v13[1] = v20;
  sub_1001EF5C8(a1, 0xD000000000000013, 0x80000001004B3CD0, (uint64_t (*)(void))&static Color.orange.getter, sub_100151EA8, (uint64_t)v13 + *(int *)(v18 + 44));
  sub_100007464((uint64_t)v16, (uint64_t)v10, &qword_1005DA8F8);
  sub_100007464((uint64_t)v13, (uint64_t)v7, &qword_1005DA8F8);
  sub_100007464((uint64_t)v10, a2, &qword_1005DA8F8);
  v21 = sub_100053F2C(&qword_1005DA908);
  sub_100007464((uint64_t)v7, a2 + *(int *)(v21 + 48), &qword_1005DA8F8);
  sub_1000051EC((uint64_t)v13, &qword_1005DA8F8);
  sub_1000051EC((uint64_t)v16, &qword_1005DA8F8);
  sub_1000051EC((uint64_t)v7, &qword_1005DA8F8);
  return sub_1000051EC((uint64_t)v10, &qword_1005DA8F8);
}

uint64_t sub_1001EF5C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t (*a5)(void)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(void);
  uint64_t (*v35)(void);
  uint64_t v36;
  _OWORD v37[13];
  _OWORD v38[2];
  _OWORD v39[15];
  char v40;
  _QWORD v41[33];
  _QWORD v42[2];
  char v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;

  v34 = a4;
  v35 = a5;
  v32 = a2;
  v33 = a3;
  v29 = a1;
  v36 = a6;
  v31 = sub_100053F2C(&qword_1005D8490);
  __chkstk_darwin(v31);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for RoundedRectangle(0);
  __chkstk_darwin(v9);
  v11 = (uint64_t *)((char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_100053F2C(&qword_1005DA910);
  v13 = __chkstk_darwin(v12);
  v15 = (uint64_t *)((char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  v30 = (uint64_t)&v29 - v16;
  v17 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemFillColor");
  v18 = Color.init(uiColor:)(v17);
  v19 = *(_QWORD *)(a1 + 96);
  v20 = (char *)v11 + *(int *)(v9 + 20);
  v21 = enum case for RoundedCornerStyle.continuous(_:);
  v22 = type metadata accessor for RoundedCornerStyle(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v20, v21, v22);
  *v11 = v19;
  v11[1] = v19;
  sub_1001F05B0((uint64_t)v11, (uint64_t)v8);
  *(_WORD *)&v8[*(int *)(v31 + 36)] = 256;
  sub_100007464((uint64_t)v8, (uint64_t)v15 + *(int *)(v12 + 36), &qword_1005D8490);
  *v15 = v18;
  swift_retain(v18);
  sub_1000051EC((uint64_t)v8, &qword_1005D8490);
  sub_1001F05F4((uint64_t)v11);
  swift_release(v18);
  v23 = v30;
  v24 = sub_10005DAA0((uint64_t)v15, v30, &qword_1005DA910);
  v25 = static VerticalAlignment.center.getter(v24);
  sub_1001EF9AC(v29, v32, v33, v34, v35, (uint64_t)v37);
  *(_OWORD *)((char *)&v39[11] + 7) = v37[11];
  *(_OWORD *)((char *)&v39[12] + 7) = v37[12];
  *(_OWORD *)((char *)&v39[13] + 7) = v38[0];
  v39[14] = *(_OWORD *)((char *)v38 + 9);
  *(_OWORD *)((char *)&v39[7] + 7) = v37[7];
  *(_OWORD *)((char *)&v39[8] + 7) = v37[8];
  *(_OWORD *)((char *)&v39[9] + 7) = v37[9];
  *(_OWORD *)((char *)&v39[10] + 7) = v37[10];
  *(_OWORD *)((char *)&v39[3] + 7) = v37[3];
  *(_OWORD *)((char *)&v39[4] + 7) = v37[4];
  *(_OWORD *)((char *)&v39[5] + 7) = v37[5];
  *(_OWORD *)((char *)&v39[6] + 7) = v37[6];
  *(_OWORD *)((char *)v39 + 7) = v37[0];
  *(_OWORD *)((char *)&v39[1] + 7) = v37[1];
  v40 = 1;
  *(_OWORD *)((char *)&v39[2] + 7) = v37[2];
  sub_100007464(v23, (uint64_t)v15, &qword_1005DA910);
  v26 = v36;
  sub_100007464((uint64_t)v15, v36, &qword_1005DA910);
  v27 = *(int *)(sub_100053F2C(&qword_1005DA918) + 48);
  *(_OWORD *)((char *)&v41[24] + 1) = v39[11];
  *(_OWORD *)((char *)&v41[26] + 1) = v39[12];
  *(_OWORD *)((char *)&v41[28] + 1) = v39[13];
  *(_OWORD *)((char *)&v41[30] + 1) = v39[14];
  *(_OWORD *)((char *)&v41[16] + 1) = v39[7];
  *(_OWORD *)((char *)&v41[18] + 1) = v39[8];
  *(_OWORD *)((char *)&v41[20] + 1) = v39[9];
  *(_OWORD *)((char *)&v41[22] + 1) = v39[10];
  *(_OWORD *)((char *)&v41[8] + 1) = v39[3];
  *(_OWORD *)((char *)&v41[10] + 1) = v39[4];
  *(_OWORD *)((char *)&v41[12] + 1) = v39[5];
  *(_OWORD *)((char *)&v41[14] + 1) = v39[6];
  *(_OWORD *)((char *)&v41[4] + 1) = v39[1];
  *(_OWORD *)((char *)&v41[6] + 1) = v39[2];
  v41[0] = v25;
  v41[1] = 0;
  LOBYTE(v41[2]) = 1;
  *(_OWORD *)((char *)&v41[2] + 1) = v39[0];
  memcpy((void *)(v26 + v27), v41, 0x101uLL);
  sub_1001F0630((uint64_t)v41);
  sub_1000051EC(v23, &qword_1005DA910);
  v55 = v39[11];
  v56 = v39[12];
  v57 = v39[13];
  v58 = v39[14];
  v51 = v39[7];
  v52 = v39[8];
  v53 = v39[9];
  v54 = v39[10];
  v47 = v39[3];
  v48 = v39[4];
  v49 = v39[5];
  v50 = v39[6];
  v44 = v39[0];
  v45 = v39[1];
  v42[0] = v25;
  v42[1] = 0;
  v43 = 1;
  v46 = v39[2];
  sub_1001F06F8((uint64_t)v42);
  return sub_1000051EC((uint64_t)v15, &qword_1005DA910);
}

double sub_1001EF9AC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t (*a5)(void)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  __int128 v16;
  char v17;
  char v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  double result;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t KeyPath;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _BYTE v39[32];
  __int128 v40;
  __int128 v41;
  __int128 v42;
  char v43;
  char v44;
  _BYTE v45[136];
  char v46;
  _QWORD v47[2];
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  __int128 v53;
  char v54;
  uint64_t v55;
  char v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;

  v34 = Image.init(systemName:)(a2, a3);
  v33 = static Font.largeTitle.getter();
  KeyPath = swift_getKeyPath(&unk_100487A08);
  v31 = a4();
  v35 = swift_getKeyPath(&unk_100487A38);
  v10 = static Edge.Set.all.getter(v35);
  v30 = v10;
  v11 = static HorizontalAlignment.leading.getter(v10);
  v12 = sub_1001EFC20(a5, (uint64_t)v45);
  v13 = *(_QWORD *)v45;
  v14 = v45[16];
  v15 = *(_QWORD *)&v45[24];
  v16 = *(_OWORD *)&v45[32];
  v17 = v45[48];
  v28 = *(_QWORD *)&v45[56];
  v29 = *(_QWORD *)&v45[8];
  v18 = static Edge.Set.vertical.getter(v12);
  v19 = EdgeInsets.init(_all:)(*(double *)(a1 + 88));
  v36 = (unint64_t)v11;
  LOBYTE(v37) = 1;
  *((_QWORD *)&v37 + 1) = v13;
  *(_QWORD *)&v38 = v29;
  BYTE8(v38) = v14;
  *(_QWORD *)v39 = v15;
  *(_OWORD *)&v39[8] = v16;
  v39[24] = v17;
  *(_QWORD *)&v40 = v28;
  BYTE8(v40) = v18;
  *(double *)&v41 = v19;
  *((_QWORD *)&v41 + 1) = v20;
  *(_QWORD *)&v42 = v21;
  *((_QWORD *)&v42 + 1) = v22;
  v43 = 0;
  v46 = 1;
  *(_OWORD *)&v45[7] = (unint64_t)v11;
  *(_OWORD *)&v45[71] = *(_OWORD *)&v39[16];
  *(_OWORD *)&v45[55] = *(_OWORD *)v39;
  *(_OWORD *)&v45[39] = v38;
  *(_OWORD *)&v45[23] = v37;
  v45[135] = 0;
  *(_OWORD *)&v45[119] = v42;
  *(_OWORD *)&v45[103] = v41;
  *(_OWORD *)&v45[87] = v40;
  v44 = 1;
  *(_QWORD *)a6 = v34;
  *(_QWORD *)(a6 + 8) = KeyPath;
  *(_QWORD *)(a6 + 16) = v33;
  *(_QWORD *)(a6 + 24) = v35;
  *(_QWORD *)(a6 + 32) = v31;
  *(_BYTE *)(a6 + 40) = v30;
  *(_OWORD *)(a6 + 48) = 0u;
  *(_OWORD *)(a6 + 64) = 0u;
  *(_BYTE *)(a6 + 80) = 1;
  v23 = *(_OWORD *)&v45[64];
  *(_OWORD *)(a6 + 161) = *(_OWORD *)&v45[80];
  v24 = *(_OWORD *)&v45[112];
  *(_OWORD *)(a6 + 177) = *(_OWORD *)&v45[96];
  *(_OWORD *)(a6 + 193) = v24;
  *(_QWORD *)(a6 + 209) = *(_QWORD *)&v45[128];
  v25 = *(_OWORD *)v45;
  *(_OWORD *)(a6 + 97) = *(_OWORD *)&v45[16];
  v26 = *(_OWORD *)&v45[48];
  *(_OWORD *)(a6 + 113) = *(_OWORD *)&v45[32];
  *(_OWORD *)(a6 + 129) = v26;
  *(_OWORD *)(a6 + 145) = v23;
  *(_OWORD *)(a6 + 81) = v25;
  *(_QWORD *)(a6 + 224) = 0;
  *(_BYTE *)(a6 + 232) = 1;
  v47[0] = v11;
  v47[1] = 0;
  v48 = 1;
  v49 = v13;
  v50 = v29;
  v51 = v14;
  v52 = v15;
  v53 = v16;
  v54 = v17;
  v55 = v28;
  v56 = v18;
  v57 = v19;
  v58 = v20;
  v59 = v21;
  v60 = v22;
  v61 = 0;
  swift_retain(v34);
  swift_retain(KeyPath);
  swift_retain(v33);
  swift_retain(v35);
  swift_retain(v31);
  sub_1001F0860((uint64_t)&v36);
  sub_1001F08D0((uint64_t)v47);
  swift_release(v31);
  swift_release(v35);
  swift_release(v33);
  swift_release(KeyPath);
  *(_QWORD *)&result = swift_release(v34).n128_u64[0];
  return result;
}

double sub_1001EFC20@<D0>(uint64_t (*a1)(void)@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  double result;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;

  v3 = a1();
  v5 = v4;
  swift_bridgeObjectRelease(v6);
  v36 = v3;
  v37 = v5;
  v7 = sub_1000517B8();
  v8 = Text.init<A>(_:)(&v36, &type metadata for String, v7);
  v10 = v9;
  v12 = v11;
  v14 = v13 & 1;
  v16 = Text.bold()(v8, v9, v13 & 1, v11, v15);
  v18 = v17;
  v34 = v19;
  LOBYTE(v3) = v20 & 1;
  sub_10016151C(v8, v10, v14);
  v21 = swift_bridgeObjectRelease(v12);
  ((void (*)(__n128))a1)(v21);
  v23 = v22;
  v25 = v24;
  swift_bridgeObjectRelease(v26);
  v36 = v23;
  v37 = v25;
  v27 = Text.init<A>(_:)(&v36, &type metadata for String, v7);
  v29 = v28;
  v31 = v30;
  LOBYTE(v36) = v3;
  LOBYTE(v12) = v32 & 1;
  *(_QWORD *)a2 = v16;
  *(_QWORD *)(a2 + 8) = v18;
  *(_BYTE *)(a2 + 16) = v3;
  *(_QWORD *)(a2 + 24) = v34;
  *(_QWORD *)(a2 + 32) = v27;
  *(_QWORD *)(a2 + 40) = v28;
  *(_BYTE *)(a2 + 48) = v32 & 1;
  *(_QWORD *)(a2 + 56) = v30;
  sub_1001615D4(v16, v18, v3);
  swift_bridgeObjectRetain(v34);
  sub_1001615D4(v27, v29, v12);
  swift_bridgeObjectRetain(v31);
  sub_10016151C(v27, v29, v12);
  swift_bridgeObjectRelease(v31);
  sub_10016151C(v16, v18, v36);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v34).n128_u64[0];
  return result;
}

uint64_t sub_1001EFDA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  _OWORD *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  double v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v65 = a2;
  v3 = type metadata accessor for ControlSize(0);
  v63 = *(_QWORD *)(v3 - 8);
  v64 = v3;
  __chkstk_darwin(v3);
  v62 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for BorderedProminentButtonStyle(0);
  v58 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100053F2C(&qword_1005DA860);
  v57 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100053F2C(&qword_1005DA868);
  v59 = *(_QWORD *)(v11 - 8);
  v60 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_100053F2C(&qword_1005DA870);
  __chkstk_darwin(v56);
  v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_100053F2C(&qword_1005DA878);
  __chkstk_darwin(v61);
  v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (_OWORD *)swift_allocObject(&unk_100550420, 128, 7);
  v19 = *(_OWORD *)(a1 + 80);
  v18[5] = *(_OWORD *)(a1 + 64);
  v18[6] = v19;
  v18[7] = *(_OWORD *)(a1 + 96);
  v20 = *(_OWORD *)(a1 + 16);
  v18[1] = *(_OWORD *)a1;
  v18[2] = v20;
  v21 = *(_OWORD *)(a1 + 48);
  v18[3] = *(_OWORD *)(a1 + 32);
  v18[4] = v21;
  sub_1001F03A8((_QWORD *)a1);
  v22 = sub_100053F2C(&qword_1005DA880);
  v23 = sub_1001F0418();
  v24 = Button.init(action:label:)(sub_1001F0380, v18, sub_1001F01C8, 0, v22, v23);
  BorderedProminentButtonStyle.init()(v24);
  v25 = sub_10003F774(&qword_1005DA890, &qword_1005DA860, (uint64_t)&protocol conformance descriptor for Button<A>);
  v26 = sub_1001F047C();
  View.buttonStyle<A>(_:)(v7, v8, v5, v25, v26);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v10, v8);
  v28 = v62;
  v27 = v63;
  v29 = v64;
  (*(void (**)(char *, _QWORD, uint64_t))(v63 + 104))(v62, enum case for ControlSize.large(_:), v64);
  KeyPath = swift_getKeyPath(&unk_1004879A8);
  v31 = (uint64_t *)&v15[*(int *)(v56 + 36)];
  v32 = sub_100053F2C(&qword_1005DA8A0);
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))((char *)v31 + *(int *)(v32 + 28), v28, v29);
  *v31 = KeyPath;
  v34 = v59;
  v33 = v60;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v15, v13, v60);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v29);
  v35 = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v13, v33);
  LOBYTE(v33) = static Edge.Set.horizontal.getter(v35);
  v36 = *(double *)(a1 + 64);
  v37 = EdgeInsets.init(_all:)(v36);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  sub_100007464((uint64_t)v15, (uint64_t)v17, &qword_1005DA870);
  v44 = &v17[*(int *)(v61 + 36)];
  *v44 = v33;
  *((double *)v44 + 1) = v37;
  *((_QWORD *)v44 + 2) = v39;
  *((_QWORD *)v44 + 3) = v41;
  *((_QWORD *)v44 + 4) = v43;
  v44[40] = 0;
  sub_1000051EC((uint64_t)v15, &qword_1005DA870);
  LOBYTE(v33) = static Edge.Set.vertical.getter(v45);
  v46 = EdgeInsets.init(_all:)(v36);
  v48 = v47;
  v50 = v49;
  v52 = v51;
  v53 = v65;
  sub_100007464((uint64_t)v17, v65, &qword_1005DA878);
  v54 = v53 + *(int *)(sub_100053F2C(&qword_1005DA8A8) + 36);
  *(_BYTE *)v54 = v33;
  *(double *)(v54 + 8) = v46;
  *(_QWORD *)(v54 + 16) = v48;
  *(_QWORD *)(v54 + 24) = v50;
  *(_QWORD *)(v54 + 32) = v52;
  *(_BYTE *)(v54 + 40) = 0;
  return sub_1000051EC((uint64_t)v17, &qword_1005DA878);
}

__n128 sub_1001F01C8@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __n128 result;
  _OWORD v16[9];

  v2 = LocalizedStringKey.init(stringLiteral:)(0xD000000000000015, 0x80000001004A7350);
  v3 = Text.init(_:tableName:bundle:comment:)(v2);
  v5 = v4;
  v7 = v6;
  v9 = v8 & 1;
  v10 = static Alignment.center.getter(v3);
  sub_10015D8B0(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v16, 0.0, 1, 0.0, 1, v10, v11, v3, v5, v9, v7);
  sub_10016151C(v3, v5, v9);
  swift_bridgeObjectRelease(v7);
  v12 = v16[7];
  *(_OWORD *)(a1 + 96) = v16[6];
  *(_OWORD *)(a1 + 112) = v12;
  *(_OWORD *)(a1 + 128) = v16[8];
  v13 = v16[3];
  *(_OWORD *)(a1 + 32) = v16[2];
  *(_OWORD *)(a1 + 48) = v13;
  v14 = v16[5];
  *(_OWORD *)(a1 + 64) = v16[4];
  *(_OWORD *)(a1 + 80) = v14;
  result = (__n128)v16[1];
  *(_OWORD *)a1 = v16[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1001F02DC@<X0>(uint64_t a1@<X8>)
{
  return sub_1001EE3E8(a1);
}

uint64_t sub_1001F0324@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1001EE778(*(double **)(v1 + 16), a1);
}

uint64_t sub_1001F032C()
{
  _QWORD *v0;

  swift_release(v0[2]);
  if (v0[3])
    swift_release(v0[4]);
  if (v0[5])
    swift_release(v0[6]);
  if (v0[7])
    swift_release(v0[8]);
  return swift_deallocObject(v0, 128, 7);
}

uint64_t sub_1001F0380()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  uint64_t result;

  v1 = *(uint64_t (**)(void))(v0 + 56);
  if (v1)
    return v1();
  return result;
}

_QWORD *sub_1001F03A8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v5 = a1[4];
  v6 = a1[5];
  v7 = a1[6];
  swift_retain(*a1);
  sub_1000A190C(v2, v3);
  sub_1000A190C(v4, v5);
  sub_1000A190C(v6, v7);
  return a1;
}

unint64_t sub_1001F0418()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005DA888;
  if (!qword_1005DA888)
  {
    v1 = sub_10004058C(&qword_1005DA880);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1005DA888);
  }
  return result;
}

unint64_t sub_1001F047C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005DA898;
  if (!qword_1005DA898)
  {
    v1 = type metadata accessor for BorderedProminentButtonStyle(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for BorderedProminentButtonStyle, v1);
    atomic_store(result, (unint64_t *)&qword_1005DA898);
  }
  return result;
}

uint64_t sub_1001F04C4()
{
  return EnvironmentValues.controlSize.getter();
}

uint64_t sub_1001F04E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for ControlSize(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.controlSize.setter(v4);
}

uint64_t sub_1001F0564@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001F058C(unsigned __int8 *a1)
{
  return EnvironmentValues.multilineTextAlignment.setter(*a1);
}

uint64_t sub_1001F05B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RoundedRectangle(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001F05F4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RoundedRectangle(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001F0630(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 136);
  v7 = *(_QWORD *)(a1 + 144);
  v8 = *(_BYTE *)(a1 + 152);
  v9 = *(_QWORD *)(a1 + 160);
  v10 = *(_QWORD *)(a1 + 168);
  v12 = *(_BYTE *)(a1 + 184);
  v13 = *(_QWORD *)(a1 + 176);
  v14 = *(_QWORD *)(a1 + 192);
  swift_retain(*(_QWORD *)(a1 + 56));
  swift_retain(v2);
  swift_retain(v3);
  swift_retain(v4);
  swift_retain(v5);
  sub_1001615D4(v6, v7, v8);
  swift_bridgeObjectRetain(v9);
  sub_1001615D4(v10, v13, v12);
  swift_bridgeObjectRetain(v14);
  return a1;
}

uint64_t sub_1001F06F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 136);
  v7 = *(_QWORD *)(a1 + 144);
  v8 = *(_BYTE *)(a1 + 152);
  v9 = *(_QWORD *)(a1 + 160);
  v10 = *(_QWORD *)(a1 + 168);
  v12 = *(_BYTE *)(a1 + 184);
  v13 = *(_QWORD *)(a1 + 176);
  v14 = *(_QWORD *)(a1 + 192);
  swift_release(*(_QWORD *)(a1 + 48));
  swift_release(v3);
  swift_release(v2);
  swift_release(v4);
  swift_release(v5);
  sub_10016151C(v6, v7, v8);
  swift_bridgeObjectRelease(v9);
  sub_10016151C(v10, v13, v12);
  swift_bridgeObjectRelease(v14);
  return a1;
}

uint64_t sub_1001F07C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001F07E8(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.font.setter(v1);
}

uint64_t sub_1001F0810@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001F0838(_QWORD *a1)
{
  uint64_t v1;

  v1 = swift_retain(*a1);
  return EnvironmentValues.foregroundColor.setter(v1);
}

uint64_t sub_1001F0860(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_BYTE *)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 80);
  sub_1001615D4(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRetain(v2);
  sub_1001615D4(v3, v4, v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

uint64_t sub_1001F08D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_BYTE *)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 80);
  sub_10016151C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  swift_bridgeObjectRelease(v2);
  sub_10016151C(v3, v4, v5);
  swift_bridgeObjectRelease(v6);
  return a1;
}

ValueMetadata *type metadata accessor for FMUTWelcomeViewStyle()
{
  return &type metadata for FMUTWelcomeViewStyle;
}

uint64_t sub_1001F0950()
{
  return sub_10003F774(&qword_1005DA950, &qword_1005DA958, (uint64_t)&protocol conformance descriptor for TupleView<A>);
}

double sub_1001F097C()
{
  double result;

  if (qword_1005D20B8 != -1)
    swift_once(&qword_1005D20B8, sub_10005E610);
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  result = *(double *)&qword_1005F5978;
  __asm { FMOV            V1.2D, #10.0 }
  xmmword_1005F5250 = _Q1;
  unk_1005F5260 = _Q1;
  *(_QWORD *)&xmmword_1005F5270 = 0x4028000000000000;
  *((_QWORD *)&xmmword_1005F5270 + 1) = qword_1005F5978;
  return result;
}

void sub_1001F0A24(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  void *v5;
  void *v6;
  NSString *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  double v13;
  double v14;
  uint64_t v15;
  double v16;
  double v17;
  double v18;
  objc_super v19;

  v2 = v1;
  v19.receiver = v2;
  v19.super_class = (Class)type metadata accessor for FMSectionPlatterMessageTextView();
  objc_msgSendSuper2(&v19, "traitCollectionDidChange:", a1);
  v4 = *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy31FMSectionPlatterMessageTextView_messageTextView];
  v5 = sub_10011FB78();
  v6 = v5;
  if (v5)
    v7 = (NSString *)v5;
  else
    v7 = UIFontTextStyleBody;
  v8 = (void *)objc_opt_self(UIFont);
  v9 = v6;
  v10 = objc_msgSend(v8, "preferredFontForTextStyle:", v7);

  v11 = *(void **)&v2[OBJC_IVAR____TtC6FindMy31FMSectionPlatterMessageTextView_messageTextViewHeightConstraint];
  if (v11)
  {
    v12 = v11;
    objc_msgSend(v10, "lineHeight");
    v14 = v13 * 3.25;
    v15 = OBJC_IVAR____TtC6FindMy17FMMessageTextView_textView;
    objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC6FindMy17FMMessageTextView_textView), "textContainerInset");
    v17 = v14 + v16;
    objc_msgSend(*(id *)(v4 + v15), "textContainerInset");
    objc_msgSend(v12, "setConstant:", v17 + v18);

  }
  else
  {
    __break(1u);
  }
}

id sub_1001F0D54()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMSectionPlatterMessageTextView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMSectionPlatterMessageTextView()
{
  return objc_opt_self(_TtC6FindMy31FMSectionPlatterMessageTextView);
}

ValueMetadata *type metadata accessor for FMSectionPlatterMessageTextViewStyle()
{
  return &type metadata for FMSectionPlatterMessageTextViewStyle;
}

void sub_1001F0E44()
{
  _BYTE *v0;
  uint64_t v1;
  _OWORD *v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  _QWORD *v10;

  v1 = OBJC_IVAR____TtC6FindMy31FMSectionPlatterMessageTextView_style;
  if (qword_1005D1CE8 != -1)
    swift_once(&qword_1005D1CE8, sub_1001F097C);
  v2 = &v0[v1];
  v3 = unk_1005F5260;
  v4 = xmmword_1005F5270;
  *v2 = xmmword_1005F5250;
  v2[1] = v3;
  v2[2] = v4;
  v5 = OBJC_IVAR____TtC6FindMy31FMSectionPlatterMessageTextView_sectionLabel;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v6 = OBJC_IVAR____TtC6FindMy31FMSectionPlatterMessageTextView_contentView;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v7 = OBJC_IVAR____TtC6FindMy31FMSectionPlatterMessageTextView_messageTextView;
  *(_QWORD *)&v0[v7] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMMessageTextView()), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy31FMSectionPlatterMessageTextView_messageTextViewHeightConstraint] = 0;
  v8 = &v0[OBJC_IVAR____TtC6FindMy31FMSectionPlatterMessageTextView_delegate];
  *((_QWORD *)v8 + 1) = 0;
  swift_unknownObjectWeakInit(v8);
  v0[OBJC_IVAR____TtC6FindMy31FMSectionPlatterMessageTextView_isEditing] = 0;
  v9 = &v0[OBJC_IVAR____TtC6FindMy31FMSectionPlatterMessageTextView_initialMessageText];
  *v9 = 0;
  v9[1] = 0;
  v10 = &v0[OBJC_IVAR____TtC6FindMy31FMSectionPlatterMessageTextView_placeHolderText];
  *v10 = 0;
  v10[1] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMSectionPlatterMessageTextView.swift", 44, 2, 62, 0);
  __break(1u);
}

char *sub_1001F0FA4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  double v8;
  objc_class *v9;
  id v10;
  uint64_t v11;
  double v12;
  id v13;
  char *v14;
  id v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  uint64_t v19;
  char *v20;
  NSString v21;
  id v22;
  NSString v23;
  uint64_t v25;
  unint64_t v26;
  Swift::String v27;

  v1 = sub_100053F2C((uint64_t *)&unk_1005E4430);
  __chkstk_darwin(v1);
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenFoundSwitch;
  v5 = objc_allocWithZone((Class)type metadata accessor for FMSettingSwitchView());
  v6 = v0;
  *(_QWORD *)&v0[v4] = objc_msgSend(v5, "init");
  v7 = OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenDetachedSwitch;
  if (qword_1005D20B8 != -1)
    swift_once(&qword_1005D20B8, sub_10005E610);
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v8 = *(double *)&qword_1005F5978;
  v9 = (objc_class *)type metadata accessor for FMSettingRowView();
  v10 = objc_allocWithZone(v9);
  *(_QWORD *)&v6[v7] = sub_10044402C(1, v8);
  v11 = OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenLeftBehindSwitch;
  v12 = *(double *)&qword_1005F5978;
  v13 = objc_allocWithZone(v9);
  *(_QWORD *)&v6[v11] = sub_10044402C(1, v12);
  v14 = &v6[OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_delegate];
  *((_QWORD *)v14 + 1) = 0;
  swift_unknownObjectWeakInit(v14);
  v6[OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_disabled] = 0;

  v25 = 0;
  v26 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v26);
  v15 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v16._countAndFlagsBits = 0xD000000000000022;
  v27._countAndFlagsBits = 0xD000000000000034;
  v27._object = (void *)0x80000001004B3ED0;
  v16._object = (void *)0x80000001004B3EA0;
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v27);

  v19 = type metadata accessor for FMPlatterIcon(0);
  swift_storeEnumTagMultiPayload(v3, v19, 13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v3, 0, 1, v19);
  v20 = sub_1003A4038(v18._countAndFlagsBits, (uint64_t)v18._object, 0, 0, (uint64_t)v3, 0, 0, 0, 0, 0, 0);
  v21 = String._bridgeToObjectiveC()();
  objc_msgSend(v20, "setAccessibilityIdentifier:", v21);

  v22 = *(id *)&v20[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_titleLabel];
  v23 = String._bridgeToObjectiveC()();
  objc_msgSend(v22, "setAccessibilityIdentifier:", v23);

  return v20;
}

id sub_1001F12E4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  void *v3;
  id v4;
  Swift::String_optional v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String *v9;
  uint64_t v10;
  void *v11;
  void *object;
  id v13;
  double v14;
  NSString v15;
  NSString v16;
  _BYTE *v17;
  id v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String *v22;
  uint64_t v23;
  void *v24;
  id v25;
  NSString v26;
  char *v27;
  NSString v28;
  char *v29;
  id v30;
  Swift::String v31;
  Swift::String_optional v32;
  Swift::String v33;
  Swift::String v34;
  Swift::String *v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  double v40;
  NSString v41;
  NSString v42;
  void *v43;
  Swift::String v45;
  Swift::String v46;
  Swift::String v47;

  v1 = v0;
  sub_1003A46A4();
  v2 = *(char **)(v0 + OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenLeftBehindSwitch);
  v3 = (void *)objc_opt_self(NSBundle);
  v4 = objc_msgSend(v3, "mainBundle");
  v5.value._countAndFlagsBits = 0xD000000000000016;
  v45._countAndFlagsBits = 0xD00000000000001BLL;
  v6._countAndFlagsBits = 0xD000000000000023;
  v45._object = (void *)0x80000001004A91F0;
  v6._object = (void *)0x80000001004B3F30;
  v5.value._object = (void *)0x80000001004A91D0;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v5, (NSBundle)v4, v7, v45);

  v9 = (Swift::String *)&v2[OBJC_IVAR____TtC6FindMy16FMSettingRowView_title];
  v10 = *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy16FMSettingRowView_title + 8];
  *v9 = v8;
  swift_bridgeObjectRelease(v10);
  v11 = *(void **)&v2[OBJC_IVAR____TtC6FindMy16FMSettingRowView_titleLabel];
  object = v9->_object;
  v13 = v11;
  if (object)
  {
    swift_bridgeObjectRetain(object);
    v15 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v14 = swift_bridgeObjectRelease(object).n128_u64[0];
  }
  else
  {
    v15 = 0;
  }
  objc_msgSend(v11, "setText:", v15, v14);

  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setAccessibilityIdentifier:", v16);

  v17 = *(_BYTE **)(v1 + OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenFoundSwitch);
  _StringGuts.grow(_:)(20);
  v18 = objc_msgSend(v3, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
  v19._countAndFlagsBits = 0xD00000000000001FLL;
  v46._countAndFlagsBits = 0xD000000000000031;
  v46._object = (void *)0x80000001004B3FA0;
  v19._object = (void *)0x80000001004B3F80;
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  v21 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, (Swift::String_optional)0, (NSBundle)v18, v20, v46);

  v22 = (Swift::String *)&v17[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_title];
  v23 = *(_QWORD *)&v17[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_title + 8];
  *v22 = v21;
  swift_bridgeObjectRelease(v23);
  v24 = v22->_object;
  v25 = *(id *)&v17[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_titleLabel];
  swift_bridgeObjectRetain(v24);
  v26 = String._bridgeToObjectiveC()();
  objc_msgSend(v25, "setText:", v26, swift_bridgeObjectRelease(v24).n128_f64[0]);

  v17[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_isOn] = 0;
  objc_msgSend(*(id *)&v17[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_settingSwitch], "setOn:", 0);
  v27 = &v17[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_delegate];
  *((_QWORD *)v27 + 1) = &off_1005505B8;
  swift_unknownObjectWeakAssign(v27, v1);
  v28 = String._bridgeToObjectiveC()();
  objc_msgSend(v17, "setAccessibilityIdentifier:", v28);

  v29 = *(char **)(v1 + OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenDetachedSwitch);
  _StringGuts.grow(_:)(20);
  v30 = objc_msgSend(v3, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
  v31._countAndFlagsBits = 0xD000000000000022;
  v47._countAndFlagsBits = 0xD000000000000034;
  v47._object = (void *)0x80000001004B4030;
  v31._object = (void *)0x80000001004B4000;
  v32.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v32.value._object = (void *)0xEC00000031656C62;
  v33._countAndFlagsBits = 0;
  v33._object = (void *)0xE000000000000000;
  v34 = NSLocalizedString(_:tableName:bundle:value:comment:)(v31, v32, (NSBundle)v30, v33, v47);

  v35 = (Swift::String *)&v29[OBJC_IVAR____TtC6FindMy16FMSettingRowView_title];
  v36 = *(_QWORD *)&v29[OBJC_IVAR____TtC6FindMy16FMSettingRowView_title + 8];
  *v35 = v34;
  swift_bridgeObjectRelease(v36);
  v37 = *(void **)&v29[OBJC_IVAR____TtC6FindMy16FMSettingRowView_titleLabel];
  v38 = v35->_object;
  v39 = v37;
  if (v38)
  {
    swift_bridgeObjectRetain(v38);
    v41 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v40 = swift_bridgeObjectRelease(v38).n128_u64[0];
  }
  else
  {
    v41 = 0;
  }
  objc_msgSend(v37, "setText:", v41, v40);

  v42 = String._bridgeToObjectiveC()();
  objc_msgSend(v29, "setAccessibilityIdentifier:", v42);

  v43 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_contentStackView);
  objc_msgSend(v43, "addArrangedSubview:", v17);
  objc_msgSend(v43, "addArrangedSubview:", v2);
  return objc_msgSend(v43, "addArrangedSubview:", v29);
}

void sub_1001F17D8()
{
  uint64_t v0;
  id v1;
  id v2;

  v1 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "notifyWhenLeftBehindRowTap");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenLeftBehindSwitch), "addGestureRecognizer:", v1);
  v2 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "notifyWhenDetachedRowTap");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenDetachedSwitch), "addGestureRecognizer:", v2);

}

id sub_1001F1894(char a1, uint64_t a2, char a3, char a4, char a5, char a6, uint64_t a7, unint64_t a8, char a9, char a10, char a11, char a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t countAndFlagsBits;
  void *object;
  id v28;
  unint64_t v29;
  unint64_t v30;
  const char *v31;
  unint64_t v32;
  Swift::String v33;
  Swift::String v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  id v40;
  double v41;
  NSString v42;
  void *v43;
  id v44;
  Swift::String v45;
  Swift::String_optional v46;
  void *v47;
  Swift::String v48;
  Swift::String v49;
  id v50;
  Swift::String v51;
  Swift::String_optional v52;
  Swift::String v53;
  Swift::String v54;
  char v55;
  char v56;
  char v57;
  char v58;
  id v59;
  Swift::String v60;
  Swift::String_optional v61;
  Swift::String v62;
  Swift::String v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  Swift::String v67;
  uint64_t v68;
  void *v69;
  id v70;
  Swift::String v71;
  Swift::String v72;
  Swift::String v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  Swift::String v80;
  Swift::String v81;
  Swift::String v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  id v86;
  double v87;
  NSString v88;
  uint64_t v89;
  id v91;
  unint64_t v92;
  unint64_t v93;
  const char *v94;
  id v95;
  Swift::String v96;
  Swift::String v97;
  Swift::String v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  Swift::String_optional v107;
  Swift::String v108;
  Swift::String v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v117;
  char v118;
  char v119;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  Swift::String v125;
  Swift::String v126;
  Swift::String v127;
  Swift::String v128;
  Swift::String v129;
  Swift::String v130;

  v13 = v12;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v18 = type metadata accessor for Logger(0);
  sub_100056D88(v18, (uint64_t)qword_1005F5748);
  v19 = swift_bridgeObjectRetain_n(a8, 2);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.default.getter(v20);
  v118 = a5;
  v119 = a4;
  v113 = a2;
  v114 = a8;
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc(70, -1);
    v112 = swift_slowAlloc(32, -1);
    v123 = v112;
    *(_DWORD *)v22 = 67111426;
    LODWORD(v122) = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v122, (char *)&v122 + 4);
    *(_WORD *)(v22 + 8) = 2048;
    v122 = a2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v122, &v123);
    *(_WORD *)(v22 + 18) = 1024;
    LODWORD(v122) = a3 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v122, (char *)&v122 + 4);
    *(_WORD *)(v22 + 24) = 1024;
    LODWORD(v122) = a4 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v122, (char *)&v122 + 4);
    *(_WORD *)(v22 + 30) = 1024;
    LODWORD(v122) = a5 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v122, (char *)&v122 + 4);
    *(_WORD *)(v22 + 36) = 1024;
    LODWORD(v122) = a6 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v122, (char *)&v122 + 4);
    *(_WORD *)(v22 + 42) = 2080;
    if (a8)
      v23 = a7;
    else
      v23 = 0x216C696E21;
    if (a8)
      v24 = a8;
    else
      v24 = 0xE500000000000000;
    swift_bridgeObjectRetain(a8);
    v122 = sub_100056DA0(v23, v24, &v123);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v122, &v123);
    swift_bridgeObjectRelease_n(a8, 2);
    swift_bridgeObjectRelease(v24);
    *(_WORD *)(v22 + 52) = 1024;
    LODWORD(v122) = a9 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v122, (char *)&v122 + 4);
    *(_WORD *)(v22 + 58) = 1024;
    LODWORD(v122) = (a10 & 1) == 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v122, (char *)&v122 + 4);
    *(_WORD *)(v22 + 64) = 1024;
    LODWORD(v122) = (a11 & 1) == 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v122, (char *)&v122 + 4);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "FMDeviceNotificationsView.update:\n  status: %{BOOL}d,\n  safeLocationCount: %ld,\n  supportsSeparation: %{BOOL}d,\n  enabled: %{BOOL}d,\n  notifyWhenFoundEnabled: %{BOOL}d,\n  isMeDevice: %{BOOL}d,\n  meDeviceName: %s,\n  isThisDevice: %{BOOL}d,\n  temporarilyUnavailable: %{BOOL}d\n  paused: %{BOOL}d", (uint8_t *)v22, 0x46u);
    swift_arrayDestroy(v112, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v112, -1, -1);
    swift_slowDealloc(v22, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a8, 2);
  }
  v25 = *(_QWORD *)(v13 + OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenLeftBehindSwitch);
  if ((a12 & 1) != 0)
  {
    countAndFlagsBits = 0;
    object = (void *)0xE000000000000000;
  }
  else
  {
    v123 = 0;
    v124 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v124);
    v28 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    if ((a1 & 1) != 0)
    {
      v29 = 0xD00000000000001DLL;
      v30 = 0xD00000000000002FLL;
      v110 = 0x80000001004B4110;
      v31 = "DEVICE_DETAIL_NOTIFICATION_ON";
    }
    else
    {
      v29 = 0xD00000000000001ELL;
      v30 = 0xD000000000000030;
      v110 = 0x80000001004B40B0;
      v31 = "DEVICE_DETAIL_NOTIFICATION_OFF";
    }
    v32 = (unint64_t)(v31 - 32) | 0x8000000000000000;
    v33._countAndFlagsBits = 0;
    v33._object = (void *)0xE000000000000000;
    v34 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v29, (Swift::String_optional)0, (NSBundle)v28, v33, *(Swift::String *)&v30);
    countAndFlagsBits = v34._countAndFlagsBits;
    object = v34._object;

  }
  v35 = (uint64_t *)(v25 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_subtitle);
  v36 = *(_QWORD *)(v25 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_subtitle + 8);
  *v35 = countAndFlagsBits;
  v35[1] = (uint64_t)object;
  swift_bridgeObjectRelease(v36);
  v37 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_secondaryLabel;
  v38 = *(void **)(v25 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_secondaryLabel);
  v39 = v35[1];
  v40 = v38;
  if (v39)
  {
    swift_bridgeObjectRetain(v39);
    v42 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v41 = swift_bridgeObjectRelease(v39).n128_u64[0];
  }
  else
  {
    v42 = 0;
  }
  objc_msgSend(v38, "setText:", v42, v41);

  if ((a3 & 1) != 0)
  {
    if ((a11 & 1) != 0)
    {
      v117 = v13;
      v43 = (void *)objc_opt_self(NSBundle);
      v44 = objc_msgSend(v43, "mainBundle");
      v125._countAndFlagsBits = 0xD00000000000001BLL;
      v45._countAndFlagsBits = 0xD00000000000002ALL;
      v125._object = (void *)0x80000001004A91F0;
      v45._object = (void *)0x80000001004B4310;
      v46.value._object = (void *)0x80000001004A91D0;
      v47 = (void *)0xE000000000000000;
      v46.value._countAndFlagsBits = 0xD000000000000016;
      v48._countAndFlagsBits = 0;
      v48._object = (void *)0xE000000000000000;
      v49 = NSLocalizedString(_:tableName:bundle:value:comment:)(v45, v46, (NSBundle)v44, v48, v125);

      sub_100443E38(v49._countAndFlagsBits, (uint64_t)v49._object);
      if ((a12 & 1) == 0)
      {
LABEL_38:
        v123 = 0;
        v124 = 0xE000000000000000;
        _StringGuts.grow(_:)(20);
        v79 = objc_msgSend(v43, "mainBundle", swift_bridgeObjectRelease(v124).n128_f64[0]);
        v80._countAndFlagsBits = 0xD00000000000001ELL;
        v129._countAndFlagsBits = 0xD000000000000030;
        v129._object = (void *)0x80000001004B40B0;
        v80._object = (void *)0x80000001004B4090;
        v81._countAndFlagsBits = 0;
        v81._object = (void *)0xE000000000000000;
        v82 = NSLocalizedString(_:tableName:bundle:value:comment:)(v80, (Swift::String_optional)0, (NSBundle)v79, v81, v129);
        v64 = v82._countAndFlagsBits;
        v47 = v82._object;

        goto LABEL_39;
      }
    }
    else
    {
      v58 = a10;
      if ((a10 & 1) == 0)
      {
        if ((a6 & 1) != 0 || !v114)
        {
          v57 = v119;
          if ((a9 & 1) != 0)
          {
            v91 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
            v92 = 0xD00000000000001BLL;
            if ((a1 & 1) != 0)
            {
              v93 = 0xD000000000000034;
              v111 = 0x80000001004A91F0;
              v94 = "DEVICE_OR_ITEM_NOTIFICATIONS_ENABLED_FOR_APPLE_WATCH";
            }
            else
            {
              v93 = 0xD000000000000035;
              v111 = 0x80000001004A91F0;
              v94 = "DEVICE_OR_ITEM_NOTIFICATIONS_DISABLED_FOR_APPLE_WATCH";
            }
            v106 = (unint64_t)(v94 - 32) | 0x8000000000000000;
            v107.value._object = (void *)0x80000001004A91D0;
            v107.value._countAndFlagsBits = 0xD000000000000016;
            v108._countAndFlagsBits = 0;
            v108._object = (void *)0xE000000000000000;
            v109 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v93, v107, (NSBundle)v91, v108, *(Swift::String *)&v92);
            v56 = v118;

            sub_100443E38(v109._countAndFlagsBits, (uint64_t)v109._object);
            v58 = a10;
          }
          else
          {
            if (v113)
            {
              v123 = 0;
              v124 = 0xE000000000000000;
              _StringGuts.grow(_:)(20);
              swift_bridgeObjectRelease(v124);
              v95 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
              v96._countAndFlagsBits = 0xD000000000000037;
              v130._countAndFlagsBits = 0xD000000000000049;
              v130._object = (void *)0x80000001004B41B0;
              v96._object = (void *)0x80000001004B4170;
              v97._countAndFlagsBits = 0;
              v97._object = (void *)0xE000000000000000;
              v98 = NSLocalizedString(_:tableName:bundle:value:comment:)(v96, (Swift::String_optional)0, (NSBundle)v95, v97, v130);

              v99 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
              v100 = swift_allocObject(v99, 72, 7);
              *(_OWORD *)(v100 + 16) = xmmword_100481740;
              *(_QWORD *)(v100 + 56) = &type metadata for Int;
              *(_QWORD *)(v100 + 64) = &protocol witness table for Int;
              *(_QWORD *)(v100 + 32) = v113;
              v101 = static String.localizedStringWithFormat(_:_:)(v98._countAndFlagsBits, v98._object, v100);
              v103 = v102;
              v58 = a10;
              swift_bridgeObjectRelease(v98._object);
              swift_bridgeObjectRelease(v100);
              v104 = v101;
              v105 = v103;
            }
            else
            {
              v104 = 0;
              v105 = 0xE000000000000000;
            }
            sub_100443E38(v104, v105);
            v56 = v118;
          }
        }
        else
        {
          if ((a1 & 1) != 0)
            v65 = 0xD000000000000028;
          else
            v65 = 0xD000000000000029;
          if ((a1 & 1) != 0)
            v66 = (void *)0x80000001004B42B0;
          else
            v66 = (void *)0x80000001004B4280;
          v123 = 0;
          v124 = 0xE000000000000000;
          _StringGuts.grow(_:)(20);
          swift_bridgeObjectRelease(v124);
          v123 = 0xD000000000000012;
          v124 = 0x80000001004A5CD0;
          v67._countAndFlagsBits = v65;
          v67._object = v66;
          String.append(_:)(v67);
          v68 = v123;
          v69 = (void *)v124;
          v70 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
          v128._object = v69;
          v71._countAndFlagsBits = v65;
          v71._object = v66;
          v72._countAndFlagsBits = 0;
          v72._object = (void *)0xE000000000000000;
          v128._countAndFlagsBits = v68;
          v73 = NSLocalizedString(_:tableName:bundle:value:comment:)(v71, (Swift::String_optional)0, (NSBundle)v70, v72, v128);
          swift_bridgeObjectRelease(v66);
          swift_bridgeObjectRelease(v69);

          v74 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
          v75 = swift_allocObject(v74, 72, 7);
          *(_OWORD *)(v75 + 16) = xmmword_100481740;
          *(_QWORD *)(v75 + 56) = &type metadata for String;
          *(_QWORD *)(v75 + 64) = sub_100071E88();
          *(_QWORD *)(v75 + 32) = a7;
          *(_QWORD *)(v75 + 40) = v114;
          swift_bridgeObjectRetain(v114);
          v76 = String.init(format:_:)(v73._countAndFlagsBits, v73._object, v75);
          v78 = v77;
          v58 = a10;
          swift_bridgeObjectRelease(v73._object);
          sub_100443E38(v76, v78);
          v56 = v118;
          v57 = v119;
        }
        goto LABEL_43;
      }
      v117 = v13;
      v43 = (void *)objc_opt_self(NSBundle);
      v59 = objc_msgSend(v43, "mainBundle");
      v127._countAndFlagsBits = 0xD00000000000001BLL;
      v60._countAndFlagsBits = 0xD00000000000002FLL;
      v127._object = (void *)0x80000001004A91F0;
      v60._object = (void *)0x80000001004B42E0;
      v61.value._object = (void *)0x80000001004A91D0;
      v47 = (void *)0xE000000000000000;
      v61.value._countAndFlagsBits = 0xD000000000000016;
      v62._countAndFlagsBits = 0;
      v62._object = (void *)0xE000000000000000;
      v63 = NSLocalizedString(_:tableName:bundle:value:comment:)(v60, v61, (NSBundle)v59, v62, v127);

      sub_100443E38(v63._countAndFlagsBits, (uint64_t)v63._object);
      if ((a12 & 1) == 0)
        goto LABEL_38;
    }
    v64 = 0;
LABEL_39:
    v56 = v118;
    v83 = v35[1];
    *v35 = v64;
    v35[1] = (uint64_t)v47;
    swift_bridgeObjectRelease(v83);
    v84 = *(void **)(v25 + v37);
    v85 = v35[1];
    v13 = v117;
    v86 = v84;
    if (v85)
    {
      swift_bridgeObjectRetain(v85);
      v88 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v87 = swift_bridgeObjectRelease(v85).n128_u64[0];
    }
    else
    {
      v88 = 0;
    }
    v57 = v119;
    v58 = a10;
    objc_msgSend(v84, "setText:", v88, v87);

LABEL_43:
    v55 = v58 ^ 1;
    goto LABEL_44;
  }
  v50 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v126._countAndFlagsBits = 0xD00000000000001BLL;
  v51._countAndFlagsBits = 0xD00000000000002FLL;
  v126._object = (void *)0x80000001004A91F0;
  v51._object = (void *)0x80000001004B4140;
  v52.value._object = (void *)0x80000001004A91D0;
  v52.value._countAndFlagsBits = 0xD000000000000016;
  v53._countAndFlagsBits = 0;
  v53._object = (void *)0xE000000000000000;
  v54 = NSLocalizedString(_:tableName:bundle:value:comment:)(v51, v52, (NSBundle)v50, v53, v126);

  sub_100443E38(v54._countAndFlagsBits, (uint64_t)v54._object);
  v55 = 0;
  v56 = v118;
  v57 = v119;
LABEL_44:
  *(_BYTE *)(v25 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_enabled) = v55 & 1;
  sub_100443F14();
  v89 = *(_QWORD *)(v13 + OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenFoundSwitch);
  *(_BYTE *)(v89 + OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_isEnabled) = v57 & 1;
  sub_100115CF4();
  *(_BYTE *)(v89 + OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_isOn) = v56 & 1;
  return objc_msgSend(*(id *)(v89 + OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_settingSwitch), "setOn:");
}

void sub_1001F24EC(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t countAndFlagsBits;
  void *object;
  id v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  double v17;
  NSString v18;
  unint64_t v19;

  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenDetachedSwitch);
  if ((a2 & 1) != 0)
  {
    countAndFlagsBits = 0;
    object = (void *)0xE000000000000000;
  }
  else
  {
    if ((a1 & 1) != 0)
    {
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(0xE000000000000000);
      v6 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v7 = 0xD00000000000002FLL;
      v19 = 0x80000001004B4110;
      v8 = 0x80000001004B40F0;
      v9 = 0xD00000000000001DLL;
    }
    else
    {
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(0xE000000000000000);
      v6 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v9 = 0xD00000000000001ELL;
      v7 = 0xD000000000000030;
      v19 = 0x80000001004B40B0;
      v8 = 0x80000001004B4090;
    }
    v10._countAndFlagsBits = 0;
    v10._object = (void *)0xE000000000000000;
    v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v9, (Swift::String_optional)0, (NSBundle)v6, v10, *(Swift::String *)&v7);
    countAndFlagsBits = v11._countAndFlagsBits;
    object = v11._object;

  }
  v12 = (uint64_t *)(v3 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_subtitle);
  v13 = *(_QWORD *)(v3 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_subtitle + 8);
  *v12 = countAndFlagsBits;
  v12[1] = (uint64_t)object;
  swift_bridgeObjectRelease(v13);
  v14 = *(void **)(v3 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_secondaryLabel);
  v15 = v12[1];
  v16 = v14;
  if (v15)
  {
    swift_bridgeObjectRetain(v15);
    v18 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v17 = swift_bridgeObjectRelease(v15).n128_u64[0];
  }
  else
  {
    v18 = 0;
  }
  objc_msgSend(v14, "setText:", v18, v17);

  *(_BYTE *)(v3 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_enabled) = 1;
  sub_100443F14();
}

id sub_1001F26E4(char a1, char a2)
{
  char *v2;
  char *v3;
  char *v6;
  char *v7;
  char *v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  id v15;
  int v17;
  int v18;
  uint64_t v19;

  v3 = v2;
  v6 = *(char **)&v2[OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenFoundSwitch];
  objc_msgSend(v6, "setHidden:", a1 & 1);
  v7 = *(char **)&v3[OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenDetachedSwitch];
  objc_msgSend(v7, "setHidden:", a2 & 1);
  v8 = *(char **)&v3[OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenLeftBehindSwitch];
  v9 = objc_msgSend(v8, "isHidden");
  v6[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_separated] = v9 & a2 ^ 1;
  objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_separator], "setHidden:");
  v8[OBJC_IVAR____TtC6FindMy16FMSettingRowView_separated] = a2 ^ 1;
  objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC6FindMy16FMSettingRowView_separator], "setHidden:", a2 & 1);
  v7[OBJC_IVAR____TtC6FindMy16FMSettingRowView_separated] = 0;
  objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC6FindMy16FMSettingRowView_separator], "setHidden:", 1);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v10 = type metadata accessor for Logger(0);
  v11 = sub_100056D88(v10, (uint64_t)qword_1005F5748);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc(14, -1);
    *(_DWORD *)v14 = 67109376;
    v18 = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19);
    *(_WORD *)(v14 + 8) = 1024;
    v17 = a2 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "FMDeviceNotificationsView: Visibility state: hideNotifyWhenFound: %{BOOL}d hideNotifyWhenDetached: %{BOOL}d", (uint8_t *)v14, 0xEu);
    swift_slowDealloc(v14, -1, -1);
  }

  v15 = 0;
  if ((a1 & 1) != 0 && (a2 & 1) != 0)
    v15 = objc_msgSend(v8, "isHidden", 0);
  return objc_msgSend(v3, "setHidden:", v15);
}

id sub_1001F292C(char a1)
{
  char *v1;
  char *v2;
  char v3;
  char *v4;
  _BYTE *v5;
  unsigned int v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  int v15;
  uint64_t v16;

  v2 = v1;
  v3 = a1;
  v4 = *(char **)&v1[OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenLeftBehindSwitch];
  objc_msgSend(v4, "setHidden:", a1 & 1);
  v5 = *(_BYTE **)&v2[OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenFoundSwitch];
  if ((v3 & 1) != 0)
    v6 = objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenDetachedSwitch], "isHidden") ^ 1;
  else
    v6 = 1;
  v5[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_separated] = v6;
  objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_separator], "setHidden:", v6 ^ 1);
  v7 = *(void **)&v2[OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenDetachedSwitch];
  v8 = objc_msgSend(v7, "isHidden");
  v4[OBJC_IVAR____TtC6FindMy16FMSettingRowView_separated] = v8 ^ 1;
  objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC6FindMy16FMSettingRowView_separator], "setHidden:", v8);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v9 = type metadata accessor for Logger(0);
  v10 = sub_100056D88(v9, (uint64_t)qword_1005F5748);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v13 = 67109120;
    v15 = v3 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "FMDeviceNotificationsView: Visibility state: hideNotifyWhenLeftBehind: %{BOOL}d", v13, 8u);
    swift_slowDealloc(v13, -1, -1);
  }

  if (!objc_msgSend(v5, "isHidden") || (objc_msgSend(v7, "isHidden") & 1) == 0)
    v3 = 0;
  return objc_msgSend(v2, "setHidden:", v3 & 1);
}

uint64_t sub_1001F2B44(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  NSString v24;
  unsigned int v25;

  v3 = v2;
  sub_1001F317C();
  if ((static NSObject.== infix(_:_:)(a1, *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenFoundSwitch)) & 1) != 0)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_100056D88(v6, (uint64_t)qword_1005F5748);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "FMDeviceNotificationsView:  User toggled notify when found switch", v10, 2u);
      swift_slowDealloc(v10, -1, -1);
    }

    Strong = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_delegate);
    if (Strong)
    {
      v12 = Strong;
      sub_1001CD22C(a2 & 1);
      swift_unknownObjectRelease(v12);
    }
  }
  result = static NSObject.== infix(_:_:)(a1, *(_QWORD *)(v3 + OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenLeftBehindSwitch));
  if ((result & 1) != 0)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v14 = type metadata accessor for Logger(0);
    v15 = sub_100056D88(v14, (uint64_t)qword_1005F5748);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.default.getter(v16);
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "FMDeviceNotificationsView:  User toggled notify if left behind switch", v18, 2u);
      swift_slowDealloc(v18, -1, -1);
    }

    result = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_delegate);
    if (result)
    {
      v19 = result;
      v20 = *(void **)(*(_QWORD *)(result + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator) + 16);
      v21 = (void *)objc_opt_self(NSUserDefaults);
      v22 = v20;
      v23 = objc_msgSend(v21, "standardUserDefaults");
      v24 = String._bridgeToObjectiveC()();
      v25 = objc_msgSend(v23, "BOOLForKey:", v24);

      if (v25)
        sub_1001C1DF8(a2 & 1);
      else
        sub_1001C24E8();
      return swift_unknownObjectRelease(v19);
    }
  }
  return result;
}

uint64_t sub_1001F2E1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t result;
  uint64_t v8;

  v1 = v0;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100056D88(v2, (uint64_t)qword_1005F5748);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMDeviceNotificationsView: User selected notifyWhenDetached detail label.", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  result = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_delegate);
  if (result)
  {
    v8 = result;
    sub_1001C10E4();
    return swift_unknownObjectRelease(v8);
  }
  return result;
}

uint64_t sub_1001F2F50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t result;
  uint64_t v8;

  v1 = v0;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100056D88(v2, (uint64_t)qword_1005F5748);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMDeviceNotificationsView: User selected detail label.", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  result = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_delegate);
  if (result)
  {
    v8 = result;
    sub_1001D3904();
    return swift_unknownObjectRelease(v8);
  }
  return result;
}

uint64_t sub_1001F3084()
{
  uint64_t v0;

  return sub_10005E190(v0 + OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_delegate);
}

id sub_1001F30D0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMDeviceNotificationsView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMDeviceNotificationsView()
{
  return objc_opt_self(_TtC6FindMy25FMDeviceNotificationsView);
}

unint64_t sub_1001F317C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D7A60;
  if (!qword_1005D7A60)
  {
    v1 = objc_opt_self(NSObject);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1005D7A60);
  }
  return result;
}

void sub_1001F31B8()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  objc_class *v5;
  id v6;
  uint64_t v7;
  double v8;
  id v9;
  char *v10;

  v1 = v0;
  v2 = OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenFoundSwitch;
  *(_QWORD *)&v1[v2] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMSettingSwitchView()), "init");
  v3 = OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenDetachedSwitch;
  if (qword_1005D20B8 != -1)
    swift_once(&qword_1005D20B8, sub_10005E610);
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v4 = *(double *)&qword_1005F5978;
  v5 = (objc_class *)type metadata accessor for FMSettingRowView();
  v6 = objc_allocWithZone(v5);
  *(_QWORD *)&v1[v3] = sub_10044402C(1, v4);
  v7 = OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_notifyWhenLeftBehindSwitch;
  v8 = *(double *)&qword_1005F5978;
  v9 = objc_allocWithZone(v5);
  *(_QWORD *)&v1[v7] = sub_10044402C(1, v8);
  v10 = &v1[OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_delegate];
  *((_QWORD *)v10 + 1) = 0;
  swift_unknownObjectWeakInit(v10);
  v1[OBJC_IVAR____TtC6FindMy25FMDeviceNotificationsView_disabled] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMDeviceNotificationsView.swift", 38, 2, 52, 0);
  __break(1u);
}

id sub_1001F340C()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  double v7;
  double v8;
  int v10;
  int v11;
  uint64_t v12;

  v1 = v0;
  v2 = objc_msgSend(v0, "titleLabel");
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v2, "setNumberOfLines:", 0);

  }
  type metadata accessor for UILayoutPriority(0);
  v5 = v4;
  v10 = 1065353216;
  v11 = 1132068864;
  v6 = sub_10004E0AC();
  static _UIKitNumericRawRepresentable.+ infix(_:_:)(&v12, &v11, &v10, v5, v6);
  LODWORD(v7) = v12;
  objc_msgSend(v1, "setContentHuggingPriority:forAxis:", 1, v7);
  v10 = 1065353216;
  v11 = 1132068864;
  static _UIKitNumericRawRepresentable.+ infix(_:_:)(&v12, &v11, &v10, v5, v6);
  LODWORD(v8) = v12;
  return objc_msgSend(v1, "setContentHuggingPriority:forAxis:", 0, v8);
}

id sub_1001F3534()
{
  void *v0;
  id result;
  void *v2;

  result = objc_msgSend(v0, "titleLabel");
  if (result)
  {
    v2 = result;
    objc_msgSend(result, "intrinsicContentSize");

    objc_msgSend(v0, "contentEdgeInsets");
    objc_msgSend(v0, "contentEdgeInsets");
    objc_msgSend(v0, "contentEdgeInsets");
    return objc_msgSend(v0, "contentEdgeInsets");
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1001F36AC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMMultilineButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMMultilineButton()
{
  return objc_opt_self(_TtC6FindMy17FMMultilineButton);
}

uint64_t storeEnumTagSinglePayload for FMSelectedSection.FMUnknownItemsMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1001F3748 + 4 * byte_100487C15[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1001F377C + 4 * asc_100487C10[v4]))();
}

uint64_t sub_1001F377C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001F3784(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001F378CLL);
  return result;
}

uint64_t sub_1001F3798(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001F37A0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1001F37A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001F37AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMSelectedSection.FMUnknownItemsMode()
{
  return &type metadata for FMSelectedSection.FMUnknownItemsMode;
}

char *sub_1001F37C8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  switch(swift_getEnumCaseMultiPayload(a2, a3))
  {
    case 0u:
      v6 = type metadata accessor for FMIPDevice(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = *(int *)(sub_100053F2C(&qword_1005DE9B0) + 48);
      v8 = &a1[v7];
      v9 = &a2[v7];
      v10 = type metadata accessor for FMIPItem(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        v12 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      v14 = a1;
      v15 = a3;
      v16 = 0;
      goto LABEL_13;
    case 1u:
      v13 = type metadata accessor for FMIPDevice(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
      v14 = a1;
      v15 = a3;
      v16 = 1;
      goto LABEL_13;
    case 2u:
      v17 = type metadata accessor for FMFFriend(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a1, a2, v17);
      v14 = a1;
      v15 = a3;
      v16 = 2;
      goto LABEL_13;
    case 3u:
      v18 = type metadata accessor for FMIPItem(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a1, a2, v18);
      v14 = a1;
      v15 = a3;
      v16 = 3;
      goto LABEL_13;
    case 4u:
      v19 = type metadata accessor for FMIPItem(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
      v14 = a1;
      v15 = a3;
      v16 = 4;
      goto LABEL_13;
    case 7u:
      v20 = type metadata accessor for FMIPDevice(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a1, a2, v20);
      v14 = a1;
      v15 = a3;
      v16 = 7;
      goto LABEL_13;
    case 8u:
      v21 = type metadata accessor for FMIPUnknownItem(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a1, a2, v21);
      v14 = a1;
      v15 = a3;
      v16 = 8;
LABEL_13:
      swift_storeEnumTagMultiPayload(v14, v15, v16);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_1001F3A28(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a1 != a2)
  {
    sub_10004FCB8((uint64_t)a1, type metadata accessor for FMSelectedSection);
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        v6 = type metadata accessor for FMIPDevice(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        v7 = *(int *)(sub_100053F2C(&qword_1005DE9B0) + 48);
        v8 = &a1[v7];
        v9 = &a2[v7];
        v10 = type metadata accessor for FMIPItem(0);
        v11 = *(_QWORD *)(v10 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
        {
          v12 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
        }
        v14 = a1;
        v15 = a3;
        v16 = 0;
        goto LABEL_14;
      case 1u:
        v13 = type metadata accessor for FMIPDevice(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
        v14 = a1;
        v15 = a3;
        v16 = 1;
        goto LABEL_14;
      case 2u:
        v17 = type metadata accessor for FMFFriend(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a1, a2, v17);
        v14 = a1;
        v15 = a3;
        v16 = 2;
        goto LABEL_14;
      case 3u:
        v18 = type metadata accessor for FMIPItem(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a1, a2, v18);
        v14 = a1;
        v15 = a3;
        v16 = 3;
        goto LABEL_14;
      case 4u:
        v19 = type metadata accessor for FMIPItem(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a1, a2, v19);
        v14 = a1;
        v15 = a3;
        v16 = 4;
        goto LABEL_14;
      case 7u:
        v20 = type metadata accessor for FMIPDevice(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(a1, a2, v20);
        v14 = a1;
        v15 = a3;
        v16 = 7;
        goto LABEL_14;
      case 8u:
        v21 = type metadata accessor for FMIPUnknownItem(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a1, a2, v21);
        v14 = a1;
        v15 = a3;
        v16 = 8;
LABEL_14:
        swift_storeEnumTagMultiPayload(v14, v15, v16);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void sub_1001F3CA0(char *a1)
{
  sub_10019752C(*a1);
}

void sub_1001F3CAC()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X9 }
}

Swift::Int sub_1001F3CF8()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x656C706F6570, 0xE600000000000000);
  swift_bridgeObjectRelease(0xE600000000000000);
  return Hasher._finalize()();
}

void sub_1001F3D70()
{
  __asm { BR              X10 }
}

uint64_t sub_1001F3DAC(uint64_t a1)
{
  String.hash(into:)(a1, 0x656C706F6570, 0xE600000000000000);
  return swift_bridgeObjectRelease(0xE600000000000000);
}

void sub_1001F3E10(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  _QWORD v3[9];

  v2 = *v1;
  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X9 }
}

Swift::Int sub_1001F3E58()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x656C706F6570, 0xE600000000000000);
  swift_bridgeObjectRelease(0xE600000000000000);
  return Hasher._finalize()();
}

unint64_t sub_1001F3ED0@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_100006C94(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1001F3EFC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1001F3F2C + 4 * byte_100487C5F[*v0]))();
}

void sub_1001F3F2C(_QWORD *a1@<X8>)
{
  *a1 = 0x656C706F6570;
  a1[1] = 0xE600000000000000;
}

void sub_1001F3F44(_QWORD *a1@<X8>)
{
  *a1 = 25965;
  a1[1] = 0xE200000000000000;
}

void sub_1001F3F54(_QWORD *a1@<X8>)
{
  *a1 = 0x646E61707845656DLL;
  a1[1] = 0xEA00000000006465;
}

void sub_1001F3F74(_QWORD *a1@<X8>)
{
  *a1 = 0x736D657469;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_1001F3F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, uint64_t);
  int v29;
  uint64_t *v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v40 = a3;
  v41 = a4;
  v6 = type metadata accessor for FMIPItem(0);
  v38 = *(_QWORD *)(v6 - 8);
  v39 = v6;
  __chkstk_darwin(v6);
  v37 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  __chkstk_darwin(v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100053F2C(&qword_1005DAB00);
  __chkstk_darwin(v11);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100053F2C(&qword_1005DAB08);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v36 - v18;
  v20 = type metadata accessor for FMIPDevice(0);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  v21(v19, a1, v20);
  v22 = (uint64_t)&v19[*(int *)(v14 + 48)];
  sub_1000E5B2C(a2, v22);
  v21(v17, v40, v20);
  v23 = (uint64_t)&v17[*(int *)(v14 + 48)];
  sub_1000E5B2C(v41, v23);
  v24 = sub_100008000(&qword_1005DAB10, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPDevice, (uint64_t)&protocol conformance descriptor for FMIPDevice);
  if ((dispatch thunk of static Equatable.== infix(_:_:)(v19, v17, v20, v24) & 1) != 0)
  {
    v25 = (uint64_t)&v13[*(int *)(v11 + 48)];
    sub_1000E5B2C(v22, (uint64_t)v13);
    sub_1000E5B2C(v23, v25);
    v27 = v38;
    v26 = v39;
    v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
    if (v28((uint64_t)v13, 1, v39) == 1)
    {
      v29 = v28(v25, 1, v26);
      if (v29 == 1)
        v30 = (uint64_t *)&unk_1005D3AA0;
      else
        v30 = &qword_1005DAB00;
      if (v29 == 1)
        v31 = -1;
      else
        v31 = 0;
    }
    else
    {
      sub_1000E5B2C((uint64_t)v13, (uint64_t)v10);
      if (v28(v25, 1, v26) == 1)
      {
        v31 = 0;
        v32 = *(void (**)(char *, uint64_t))(v27 + 8);
        v30 = &qword_1005DAB00;
      }
      else
      {
        v33 = v37;
        (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v37, v25, v26);
        v34 = sub_100008000(&qword_1005E3B80, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItem, (uint64_t)&protocol conformance descriptor for FMIPItem);
        v31 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v33, v26, v34);
        v32 = *(void (**)(char *, uint64_t))(v27 + 8);
        v32(v33, v26);
        v30 = (uint64_t *)&unk_1005D3AA0;
      }
      v32(v10, v26);
    }
    sub_1000051EC((uint64_t)v13, v30);
  }
  else
  {
    v31 = 0;
  }
  sub_1000051EC((uint64_t)v17, &qword_1005DAB08);
  sub_1000051EC((uint64_t)v19, &qword_1005DAB08);
  return v31 & 1;
}

uint64_t sub_1001F42D4(uint64_t a1, uint64_t a2)
{
  return sub_10004FB38(a1, a2, type metadata accessor for FMBeaconSharingModuleEntry, (uint64_t (*)(char *, char *))sub_1002514B8);
}

uint64_t sub_1001F42E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  int v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char v32;
  void (*v33)(char *, uint64_t);
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = type metadata accessor for UUID(0);
  v40 = *(_QWORD *)(v4 - 8);
  v41 = v4;
  __chkstk_darwin(v4);
  v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_100053F2C((uint64_t *)&unk_1005DA750);
  __chkstk_darwin(v42);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FMUnknownItemsListDataSource.Entry(0);
  v9 = __chkstk_darwin(v8);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v35 - v11;
  __chkstk_darwin(v10);
  v16 = (char *)&v35 - v14;
  v43 = a1;
  v44 = a2;
  v17 = *(_QWORD *)(a1 + 16);
  if (v17 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v17 || v43 == v44)
    return 1;
  v38 = v15;
  v18 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v19 = *(_QWORD *)(v13 + 72);
  v20 = type metadata accessor for FMUnknownItemsListDataSource.Entry;
  v36 = v19;
  v37 = (char *)&v35 - v14;
  v35 = v7;
  while (1)
  {
    sub_10004FC74(v43 + v18, (uint64_t)v16, v20);
    sub_10004FC74(v44 + v18, (uint64_t)v12, v20);
    v21 = (uint64_t)&v7[*(int *)(v42 + 48)];
    sub_10004FC74((uint64_t)v16, (uint64_t)v7, v20);
    v22 = v20;
    sub_10004FC74((uint64_t)v12, v21, v20);
    v23 = sub_100053F2C((uint64_t *)&unk_1005DEE00);
    v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48);
    v25 = v24(v7, 2, v23);
    if (!v25)
      break;
    if (v25 == 1)
    {
      if (v24((char *)v21, 2, v23) != 1)
        goto LABEL_17;
    }
    else if (v24((char *)v21, 2, v23) != 2)
    {
      goto LABEL_17;
    }
    v20 = v22;
    sub_10004FCB8((uint64_t)v7, v22);
LABEL_7:
    sub_10004FCB8((uint64_t)v12, v20);
    sub_10004FCB8((uint64_t)v16, v20);
    v18 += v19;
    if (!--v17)
      return 1;
  }
  v26 = (uint64_t)v7;
  v27 = v7;
  v28 = v38;
  sub_10004FC74(v26, v38, v22);
  if (!v24((char *)v21, 2, v23))
  {
    v30 = v39;
    v29 = v40;
    v31 = v41;
    (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v39, v21, v41);
    v32 = static UUID.== infix(_:_:)(v28, v30);
    v33 = *(void (**)(char *, uint64_t))(v29 + 8);
    v16 = v37;
    v33(v30, v31);
    v33((char *)v28, v31);
    v7 = v35;
    sub_10004FCB8((uint64_t)v35, v22);
    v19 = v36;
    v20 = v22;
    if ((v32 & 1) == 0)
      goto LABEL_18;
    goto LABEL_7;
  }
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v28, v41);
  v7 = v27;
LABEL_17:
  sub_1000051EC((uint64_t)v7, (uint64_t *)&unk_1005DA750);
LABEL_18:
  sub_10004FCB8((uint64_t)v12, type metadata accessor for FMUnknownItemsListDataSource.Entry);
  sub_10004FCB8((uint64_t)v16, type metadata accessor for FMUnknownItemsListDataSource.Entry);
  return 0;
}

uint64_t sub_1001F463C(uint64_t a1, uint64_t a2)
{
  return sub_10004FB38(a1, a2, type metadata accessor for FMItemCellViewModel, (uint64_t (*)(char *, char *))sub_1002DA3F0);
}

uint64_t sub_1001F4650(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v50 = type metadata accessor for FMLocationAlertRowViewModel(0);
  v4 = __chkstk_darwin(v50);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&v45 - v8;
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v45 - v11;
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v45 - v14;
  v16 = __chkstk_darwin(v13);
  v18 = (uint64_t *)((char *)&v45 - v17);
  __chkstk_darwin(v16);
  v21 = (uint64_t *)((char *)&v45 - v20);
  v51 = a1;
  v52 = a2;
  v22 = *(_QWORD *)(a1 + 16);
  if (v22 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v22 || v51 == v52)
    return 1;
  v23 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v46 = *(_QWORD *)(v19 + 72);
  v48 = v12;
  v49 = (uint64_t *)((char *)&v45 - v20);
  v47 = v15;
  while (1)
  {
    sub_10004FC74(v51 + v23, (uint64_t)v21, type metadata accessor for FMLocationAlertRowViewModel);
    sub_10004FC74(v52 + v23, (uint64_t)v18, type metadata accessor for FMLocationAlertRowViewModel);
    v25 = v21[1];
    v26 = v18[1];
    if (!v25)
      break;
    if (!v26)
      goto LABEL_25;
    if (*v21 == *v18 && v25 == v26)
      goto LABEL_16;
    v28 = _stringCompareWithSmolCheck(_:_:expecting:)(*v21, v25, *v18, v26, 0);
    sub_10004FC74((uint64_t)v21, (uint64_t)v15, type metadata accessor for FMLocationAlertRowViewModel);
    sub_10004FC74((uint64_t)v18, (uint64_t)v12, type metadata accessor for FMLocationAlertRowViewModel);
    if ((v28 & 1) == 0)
      goto LABEL_26;
LABEL_17:
    v29 = *((_QWORD *)v15 + 2);
    v30 = *((_QWORD *)v15 + 3);
    v31 = *((_QWORD *)v12 + 2);
    v32 = *((_QWORD *)v12 + 3);
    if (v29 == v31 && v30 == v32)
    {
      sub_10004FCB8((uint64_t)v15, type metadata accessor for FMLocationAlertRowViewModel);
      sub_10004FCB8((uint64_t)v12, type metadata accessor for FMLocationAlertRowViewModel);
      sub_10004FC74((uint64_t)v21, (uint64_t)v9, type metadata accessor for FMLocationAlertRowViewModel);
      v33 = sub_10004FC74((uint64_t)v18, (uint64_t)v6, type metadata accessor for FMLocationAlertRowViewModel);
    }
    else
    {
      v34 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v30, v31, v32, 0);
      sub_10004FCB8((uint64_t)v15, type metadata accessor for FMLocationAlertRowViewModel);
      sub_10004FCB8((uint64_t)v12, type metadata accessor for FMLocationAlertRowViewModel);
      sub_10004FC74((uint64_t)v21, (uint64_t)v9, type metadata accessor for FMLocationAlertRowViewModel);
      v33 = sub_10004FC74((uint64_t)v18, (uint64_t)v6, type metadata accessor for FMLocationAlertRowViewModel);
      if ((v34 & 1) == 0)
        goto LABEL_27;
    }
    v35 = (uint64_t)v9;
    v36 = FMFLocationAlertTriggerType.rawValue.getter(v33);
    v37 = v6;
    v39 = v38;
    v40 = (uint64_t)v37;
    v42 = FMFLocationAlertTriggerType.rawValue.getter(v36);
    v43 = v41;
    if (v36 == v42 && v39 == v41)
    {
      swift_bridgeObjectRelease_n(v39, 2);
      v6 = (char *)v40;
      sub_10004FCB8(v40, type metadata accessor for FMLocationAlertRowViewModel);
      v9 = (char *)v35;
      sub_10004FCB8(v35, type metadata accessor for FMLocationAlertRowViewModel);
      sub_10004FCB8((uint64_t)v18, type metadata accessor for FMLocationAlertRowViewModel);
      v21 = v49;
      sub_10004FCB8((uint64_t)v49, type metadata accessor for FMLocationAlertRowViewModel);
    }
    else
    {
      v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v36, v39, v42, v41, 0);
      swift_bridgeObjectRelease(v39);
      swift_bridgeObjectRelease(v43);
      v6 = (char *)v40;
      sub_10004FCB8(v40, type metadata accessor for FMLocationAlertRowViewModel);
      v9 = (char *)v35;
      sub_10004FCB8(v35, type metadata accessor for FMLocationAlertRowViewModel);
      sub_10004FCB8((uint64_t)v18, type metadata accessor for FMLocationAlertRowViewModel);
      v21 = v49;
      sub_10004FCB8((uint64_t)v49, type metadata accessor for FMLocationAlertRowViewModel);
      if ((v24 & 1) == 0)
        return 0;
    }
    v15 = v47;
    v23 += v46;
    --v22;
    v12 = v48;
    if (!v22)
      return 1;
  }
  if (!v26)
  {
LABEL_16:
    sub_10004FC74((uint64_t)v21, (uint64_t)v15, type metadata accessor for FMLocationAlertRowViewModel);
    sub_10004FC74((uint64_t)v18, (uint64_t)v12, type metadata accessor for FMLocationAlertRowViewModel);
    goto LABEL_17;
  }
LABEL_25:
  sub_10004FC74((uint64_t)v21, (uint64_t)v15, type metadata accessor for FMLocationAlertRowViewModel);
  sub_10004FC74((uint64_t)v18, (uint64_t)v12, type metadata accessor for FMLocationAlertRowViewModel);
LABEL_26:
  sub_10004FCB8((uint64_t)v15, type metadata accessor for FMLocationAlertRowViewModel);
  sub_10004FCB8((uint64_t)v12, type metadata accessor for FMLocationAlertRowViewModel);
  sub_10004FC74((uint64_t)v21, (uint64_t)v9, type metadata accessor for FMLocationAlertRowViewModel);
  sub_10004FC74((uint64_t)v18, (uint64_t)v6, type metadata accessor for FMLocationAlertRowViewModel);
LABEL_27:
  sub_10004FCB8((uint64_t)v6, type metadata accessor for FMLocationAlertRowViewModel);
  sub_10004FCB8((uint64_t)v9, type metadata accessor for FMLocationAlertRowViewModel);
  sub_10004FCB8((uint64_t)v18, type metadata accessor for FMLocationAlertRowViewModel);
  sub_10004FCB8((uint64_t)v21, type metadata accessor for FMLocationAlertRowViewModel);
  return 0;
}

uint64_t sub_1001F4AB0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char v10;
  uint64_t result;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *i;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4];
  v6 = a1[5];
  v7 = a2[4];
  v8 = a2[5];
  v9 = v5 == v7 && v6 == v8;
  if (v9 || (v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, v7, v8, 0), result = 0, (v10 & 1) != 0))
  {
    v12 = v2 - 1;
    if (!v12)
      return 1;
    v13 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      v15 = *(i - 1);
      v16 = *i;
      v17 = *(v13 - 1);
      v18 = *v13;
      v19 = v15 == v17 && v16 == v18;
      if (!v19 && (_stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, v17, v18, 0) & 1) == 0)
        break;
      v13 += 2;
      if (!--v12)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1001F4B74(uint64_t a1, uint64_t a2)
{
  return sub_1001F4BAC(a1, a2, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItem, &qword_1005E3B80, (uint64_t)&protocol conformance descriptor for FMIPItem);
}

uint64_t sub_1001F4B90(uint64_t a1, uint64_t a2)
{
  return sub_1001F4BAC(a1, a2, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, &qword_1005D7308, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
}

uint64_t sub_1001F4BAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, unint64_t, uint64_t);
  uint64_t v21;
  unint64_t *v22;
  unint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void (*v27)(uint64_t, uint64_t);
  BOOL v29;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, unint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);

  v10 = a3(0);
  v11 = __chkstk_darwin(v10);
  __chkstk_darwin(v11);
  v15 = (char *)&v31 - v14;
  v16 = *(_QWORD *)(a1 + 16);
  if (v16 == *(_QWORD *)(a2 + 16))
  {
    if (!v16 || a1 == a2)
    {
      v26 = 1;
    }
    else
    {
      v34 = v13;
      v35 = v12;
      v36 = a3;
      v17 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      v31 = *(_QWORD *)(v12 + 72);
      v32 = a1;
      v33 = *(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 16);
      v18 = v16 - 1;
      v19 = v13;
      do
      {
        v20 = v33;
        v33((uint64_t)v15, a1 + v17, v10);
        v21 = a2;
        v20(v19, a2 + v17, v10);
        v22 = a4;
        v23 = a4;
        v24 = a5;
        v25 = sub_100008000(v23, v36, a5);
        v26 = dispatch thunk of static Equatable.== infix(_:_:)(v15, v19, v10, v25);
        v27 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
        v27(v19, v10);
        v27((uint64_t)v15, v10);
        v29 = v18-- != 0;
        if ((v26 & 1) == 0)
          break;
        v17 += v31;
        a5 = v24;
        a4 = v22;
        a2 = v21;
        a1 = v32;
      }
      while (v29);
    }
  }
  else
  {
    v26 = 0;
  }
  return v26 & 1;
}

uint64_t sub_1001F4D50(uint64_t a1, uint64_t a2)
{
  return sub_1001F4BAC(a1, a2, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPSafeLocation, &qword_1005DAB18, (uint64_t)&protocol conformance descriptor for FMIPSafeLocation);
}

uint64_t sub_1001F4D6C(uint64_t a1, uint64_t a2)
{
  return sub_10004FB38(a1, a2, type metadata accessor for FMAnnotationIdentifier, (uint64_t (*)(char *, char *))sub_100143E50);
}

uint64_t sub_1001F4D80(uint64_t a1, uint64_t a2)
{
  return sub_1001F4BAC(a1, a2, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPBeaconShare, &qword_1005DAB20, (uint64_t)&protocol conformance descriptor for FMIPBeaconShare);
}

uint64_t sub_1001F4D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t result;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v4 = type metadata accessor for FMItemCellViewModel(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v24 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v11 || a1 == a2)
    return 1;
  v12 = a2 + 32;
  if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32))
    return 0;
  v13 = *(_QWORD *)(a1 + 40);
  v14 = *(_QWORD *)(a2 + 40);
  v15 = *(_QWORD *)(v13 + 16);
  if (v15 != *(_QWORD *)(v14 + 16))
    return 0;
  v16 = a1 + 32;
  v17 = 1;
  v27 = *(_QWORD *)(a1 + 16);
  v28 = v5;
  v25 = a1 + 32;
  v26 = v12;
  while (!v15 || v13 == v14)
  {
LABEL_14:
    result = v17 == v11;
    if (v17 != v11)
    {
      v23 = 16 * v17;
      if (*(unsigned __int8 *)(v16 + 16 * v17) == *(unsigned __int8 *)(v12 + 16 * v17))
      {
        v13 = *(_QWORD *)(v16 + v23 + 8);
        ++v17;
        v14 = *(_QWORD *)(v12 + v23 + 8);
        v15 = *(_QWORD *)(v13 + 16);
        if (v15 == *(_QWORD *)(v14 + 16))
          continue;
      }
    }
    return result;
  }
  v29 = v17;
  v18 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v14);
  v19 = 0;
  v20 = *(_QWORD *)(v5 + 72);
  while (1)
  {
    result = sub_10004FC74(v13 + v18, (uint64_t)v10, type metadata accessor for FMItemCellViewModel);
    if (v19 >= *(_QWORD *)(v14 + 16))
      break;
    sub_10004FC74(v14 + v18, (uint64_t)v8, type metadata accessor for FMItemCellViewModel);
    v22 = sub_1002DCED0((uint64_t)v10, (uint64_t)v8);
    sub_10004FCB8((uint64_t)v8, type metadata accessor for FMItemCellViewModel);
    sub_10004FCB8((uint64_t)v10, type metadata accessor for FMItemCellViewModel);
    if ((v22 & 1) == 0)
    {
      swift_bridgeObjectRelease(v13);
      swift_bridgeObjectRelease(v14);
      return 0;
    }
    ++v19;
    v18 += v20;
    if (v15 == v19)
    {
      swift_bridgeObjectRelease(v13);
      swift_bridgeObjectRelease(v14);
      v11 = v27;
      v5 = v28;
      v16 = v25;
      v12 = v26;
      v17 = v29;
      goto LABEL_14;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1001F4FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t result;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v4 = type metadata accessor for FMDeviceCellViewModel(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v24 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v11 || a1 == a2)
    return 1;
  v12 = a1 + 32;
  v13 = a2 + 32;
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a2 + 32);
  v16 = *(_QWORD *)(v14 + 16);
  if (v16 != *(_QWORD *)(v15 + 16))
    return 0;
  v17 = 1;
  v27 = v11;
  v28 = v5;
  v25 = v13;
  v26 = v12;
  while (!v16 || v14 == v15)
  {
LABEL_13:
    result = v17 == v11;
    if (v17 != v11)
    {
      v23 = 8 * v17++;
      v14 = *(_QWORD *)(v12 + v23);
      v15 = *(_QWORD *)(v13 + v23);
      v16 = *(_QWORD *)(v14 + 16);
      if (v16 == *(_QWORD *)(v15 + 16))
        continue;
    }
    return result;
  }
  v29 = v17;
  v18 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(v15);
  v19 = 0;
  v20 = *(_QWORD *)(v5 + 72);
  while (1)
  {
    result = sub_10004FC74(v14 + v18, (uint64_t)v10, type metadata accessor for FMDeviceCellViewModel);
    if (v19 >= *(_QWORD *)(v15 + 16))
      break;
    sub_10004FC74(v15 + v18, (uint64_t)v8, type metadata accessor for FMDeviceCellViewModel);
    v22 = sub_1002AD130((uint64_t)v10, (uint64_t)v8);
    sub_10004FCB8((uint64_t)v8, type metadata accessor for FMDeviceCellViewModel);
    sub_10004FCB8((uint64_t)v10, type metadata accessor for FMDeviceCellViewModel);
    if ((v22 & 1) == 0)
    {
      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease(v15);
      return 0;
    }
    ++v19;
    v18 += v20;
    if (v16 == v19)
    {
      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease(v15);
      v11 = v27;
      v5 = v28;
      v13 = v25;
      v12 = v26;
      v17 = v29;
      goto LABEL_13;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1001F51A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    if (a1 != a2)
      __asm { BR              X10 }
  }
  return 1;
}

unint64_t sub_1001F5368()
{
  unint64_t result;

  result = qword_1005DAAF0;
  if (!qword_1005DAAF0)
  {
    result = swift_getWitnessTable(&unk_100487DA0, &type metadata for FMSelectedSection.FMUnknownItemsMode);
    atomic_store(result, (unint64_t *)&qword_1005DAAF0);
  }
  return result;
}

void sub_1001F53AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  v4 = type metadata accessor for FMSelectedSection(0);
  __chkstk_darwin(v4);
  v5 = sub_100053F2C(&qword_1005DAAF8);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_10004FC74(a1, (uint64_t)v8, type metadata accessor for FMSelectedSection);
  sub_10004FC74(a2, v9, type metadata accessor for FMSelectedSection);
  v10 = (char *)sub_1001F5494 + 4 * byte_100487CA5[swift_getEnumCaseMultiPayload(v8, v4)];
  __asm { BR              X10 }
}

uint64_t sub_1001F5494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  sub_10004FC74(v0, v3, type metadata accessor for FMSelectedSection);
  v4 = *(int *)(sub_100053F2C(&qword_1005DE9B0) + 48);
  v5 = v3 + v4;
  if (swift_getEnumCaseMultiPayload(v1, v2))
  {
    sub_1000051EC(v3 + v4, (uint64_t *)&unk_1005D3AA0);
    v6 = type metadata accessor for FMIPDevice(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v3, v6);
    sub_1000051EC(v0, &qword_1005DAAF8);
    return 0;
  }
  else
  {
    sub_1000051EC(v1 + v4, (uint64_t *)&unk_1005D3AA0);
    v8 = type metadata accessor for FMIPDevice(0);
    v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
    v9(v1, v8);
    sub_1000051EC(v5, (uint64_t *)&unk_1005D3AA0);
    v9(v3, v8);
    sub_10004FCB8(v0, type metadata accessor for FMSelectedSection);
    return 1;
  }
}

uint64_t storeEnumTagSinglePayload for FMRestoreState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1001F57A4 + 4 * byte_100487CBD[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1001F57D8 + 4 * byte_100487CB8[v4]))();
}

uint64_t sub_1001F57D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001F57E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001F57E8);
  return result;
}

uint64_t sub_1001F57F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001F57FCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1001F5800(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001F5808(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMRestoreState()
{
  return &type metadata for FMRestoreState;
}

unint64_t sub_1001F5828()
{
  unint64_t result;

  result = qword_1005DAB28;
  if (!qword_1005DAB28)
  {
    result = swift_getWitnessTable(&unk_100487E50, &type metadata for FMRestoreState);
    atomic_store(result, (unint64_t *)&qword_1005DAB28);
  }
  return result;
}

void sub_1001F5870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[24];
  uint64_t v18;

  v1 = v0;
  v2 = type metadata accessor for FMSelectedSection(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v5 = type metadata accessor for Logger(0);
  sub_100056D88(v5, (uint64_t)qword_1005F5748);
  v6 = swift_retain_n(v0, 2);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    *(_DWORD *)v9 = 136315138;
    v18 = v10;
    v11 = v1 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection;
    swift_beginAccess(v1 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection, v17, 0, 0);
    sub_10004FC74(v11, (uint64_t)v4, type metadata accessor for FMSelectedSection);
    v12 = String.init<A>(describing:)(v4, v2);
    v14 = v13;
    v16 = sub_100056DA0(v12, v13, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, v17);
    swift_release_n(v1, 2);
    swift_bridgeObjectRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "FMSelectionController: previousSelectedSection update - %s", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

  }
  else
  {

    swift_release_n(v1, 2);
  }
}

void sub_1001F5BB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned __int8 *v13;
  int v14;
  int v15;
  int v16;
  id v17;
  uint64_t My;
  _QWORD *v19;
  char v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t i;
  uint64_t v26;
  uint64_t v27;
  uint64_t ObjectType;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t Strong;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[5];

  v1 = v0;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v2 = type metadata accessor for Logger(0);
  sub_100056D88(v2, (uint64_t)qword_1005F5748);
  v3 = swift_retain_n(v0, 2);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v36[0] = v7;
    *(_DWORD *)v6 = 136315138;
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy21FMSelectionController_selectedMapMode + 2))
      v8 = 0x10000;
    else
      v8 = 0;
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy21FMSelectionController_selectedMapMode + 1))
      v9 = 256;
    else
      v9 = 0;
    v10 = sub_1001E05C4(v9 | *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC6FindMy21FMSelectionController_selectedMapMode) | v8);
    v12 = v11;
    v35 = sub_100056DA0(v10, v11, v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, v36);
    swift_release_n(v1, 2);
    swift_bridgeObjectRelease(v12);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMSelectionController: map configuration updated %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {

    swift_release_n(v1, 2);
  }
  v13 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC6FindMy21FMSelectionController_selectedMapMode);
  v14 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC6FindMy21FMSelectionController_selectedMapMode);
  v15 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC6FindMy21FMSelectionController_selectedMapMode + 1);
  v16 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC6FindMy21FMSelectionController_selectedMapMode + 2);
  v17 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  My = type metadata accessor for Feature.FindMy(0);
  v36[3] = My;
  v36[4] = sub_100006590();
  v19 = sub_10003D370(v36);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(My - 8) + 104))(v19, enum case for Feature.FindMy.springfieldIntegration(_:), My);
  v20 = isFeatureEnabled(_:)(v36);
  sub_100029574(v36);
  if (v16)
    v21 = 0x10000;
  else
    v21 = 0;
  if (v15)
    v22 = 256;
  else
    v22 = 0;
  sub_1001E097C(v17, v20 & 1, v22 | v14 | v21);

  swift_beginAccess(v1 + 16, v36, 0, 0);
  v23 = *(_QWORD *)(v1 + 16);
  if (!((unint64_t)v23 >> 62))
  {
    v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(v1 + 16));
    if (v24)
      goto LABEL_20;
LABEL_39:
    swift_bridgeObjectRelease(v23);
    return;
  }
  if (v23 < 0)
    v34 = *(_QWORD *)(v1 + 16);
  else
    v34 = v23 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(v1 + 16));
  v24 = _CocoaArrayWrapper.endIndex.getter(v34);
  if (!v24)
    goto LABEL_39;
LABEL_20:
  if (v24 >= 1)
  {
    for (i = 0; i != v24; ++i)
    {
      if ((v23 & 0xC000000000000001) != 0)
      {
        v31 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v23);
      }
      else
      {
        v31 = *(_QWORD *)(v23 + 8 * i + 32);
        swift_retain(v31);
      }
      v32 = v31 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
      Strong = swift_unknownObjectWeakLoadStrong(v31 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber);
      if (Strong)
      {
        v26 = Strong;
        v27 = *(_QWORD *)(v32 + 8);
        ObjectType = swift_getObjectType(Strong);
        if (v13[2])
          v29 = 0x10000;
        else
          v29 = 0;
        if (v13[1])
          v30 = 256;
        else
          v30 = 0;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v27 + 16))(v1, v30 | *v13 | v29, ObjectType, v27);
        swift_release(v31);
        swift_unknownObjectRelease(v26);
      }
      else
      {
        swift_release(v31);
      }
    }
    goto LABEL_39;
  }
  __break(1u);
}

void sub_1001F5F74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t My;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26[4];

  v1 = v0;
  My = type metadata accessor for Feature.FindMy(0);
  v26[2] = My;
  v26[3] = sub_100006590();
  v3 = sub_10003D370(&v25);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(My - 8) + 104))(v3, enum case for Feature.FindMy.springfieldIntegration(_:), My);
  LOBYTE(My) = isFeatureEnabled(_:)(&v25);
  sub_100029574(&v25);
  if ((My & 1) == 0)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v4 = type metadata accessor for Logger(0);
    sub_100056D88(v4, (uint64_t)qword_1005F5748);
    v5 = swift_retain_n(v1, 2);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.default.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(12, -1);
      v9 = swift_slowAlloc(32, -1);
      v24 = v9;
      v25 = 0;
      *(_DWORD *)v8 = 136315138;
      v26[0] = 0xE000000000000000;
      v23 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy21FMSelectionController_selectedUnit);
      type metadata accessor for FMDistanceCalculatorMeasurementSystem(0);
      _print_unlocked<A, B>(_:_:)(&v23, &v25, v10, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v11 = v26[0];
      v25 = sub_100056DA0(v25, v26[0], &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, v26);
      swift_release_n(v1, 2);
      swift_bridgeObjectRelease(v11);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMSelectionController: selected distance %s", v8, 0xCu);
      swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v9, -1, -1);
      swift_slowDealloc(v8, -1, -1);

    }
    else
    {

      swift_release_n(v1, 2);
    }
    if (qword_1005D1ED0 != -1)
      swift_once(&qword_1005D1ED0, sub_10032D1AC);
    v12 = OBJC_IVAR____TtC6FindMy21FMSelectionController_selectedUnit;
    objc_msgSend((id)qword_1005F5AB8, "setMeasurementSystem:", *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy21FMSelectionController_selectedUnit));
    swift_beginAccess(v1 + 16, &v25, 0, 0);
    v13 = *(_QWORD *)(v1 + 16);
    if ((unint64_t)v13 >> 62)
    {
      if (v13 < 0)
        v22 = *(_QWORD *)(v1 + 16);
      else
        v22 = v13 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(v1 + 16));
      v14 = _CocoaArrayWrapper.endIndex.getter(v22);
      if (v14)
        goto LABEL_11;
    }
    else
    {
      v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(*(_QWORD *)(v1 + 16));
      if (v14)
      {
LABEL_11:
        if (v14 < 1)
        {
          __break(1u);
          return;
        }
        for (i = 0; i != v14; ++i)
        {
          if ((v13 & 0xC000000000000001) != 0)
          {
            v19 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v13);
          }
          else
          {
            v19 = *(_QWORD *)(v13 + 8 * i + 32);
            swift_retain(v19);
          }
          v20 = v19 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
          Strong = swift_unknownObjectWeakLoadStrong(v19 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber);
          if (Strong)
          {
            v16 = Strong;
            v17 = *(_QWORD *)(v20 + 8);
            ObjectType = swift_getObjectType(Strong);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 24))(v1, *(_QWORD *)(v1 + v12), ObjectType, v17);
            swift_release(v19);
            swift_unknownObjectRelease(v16);
          }
          else
          {
            swift_release(v19);
          }
        }
      }
    }
    swift_bridgeObjectRelease(v13);
  }
}

uint64_t sub_1001F62F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  _BYTE v18[24];

  v1 = v0;
  v2 = sub_100053F2C(&qword_1005D5D08);
  v3 = __chkstk_darwin(v2);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v3);
  v7 = &v18[-v6 - 8];
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v8 = type metadata accessor for Logger(0);
  v9 = sub_100056D88(v8, (uint64_t)qword_1005F5748);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "FMSelectionController: entering background", v12, 2u);
    swift_slowDealloc(v12, -1, -1);
  }

  v13 = type metadata accessor for FMSelectedSection(0);
  v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v14(v7, 1, 1, v13);
  v15 = v1 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v1 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, v18, 0, 0);
  sub_10004FC74(v15, (uint64_t)v5, type metadata accessor for FMSelectedSection);
  v14(v5, 0, 1, v13);
  sub_10004AAB0((uint64_t)v7, v5);
  sub_1000051EC((uint64_t)v5, &qword_1005D5D08);
  return sub_1000051EC((uint64_t)v7, &qword_1005D5D08);
}

uint64_t sub_1001F64E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  _BYTE v18[24];

  v1 = v0;
  v2 = sub_100053F2C(&qword_1005D5D08);
  v3 = __chkstk_darwin(v2);
  v5 = &v18[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v3);
  v7 = &v18[-v6 - 8];
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v8 = type metadata accessor for Logger(0);
  v9 = sub_100056D88(v8, (uint64_t)qword_1005F5748);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "FMSelectionController: entering foreground", v12, 2u);
    swift_slowDealloc(v12, -1, -1);
  }

  v13 = v1 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v1 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, v18, 0, 0);
  sub_10004FC74(v13, (uint64_t)v7, type metadata accessor for FMSelectedSection);
  v14 = type metadata accessor for FMSelectedSection(0);
  v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v15(v7, 0, 1, v14);
  v15(v5, 1, 1, v14);
  sub_10004AAB0((uint64_t)v7, v5);
  sub_1000051EC((uint64_t)v5, &qword_1005D5D08);
  return sub_1000051EC((uint64_t)v7, &qword_1005D5D08);
}

uint64_t sub_1001F66C0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5;

  v5 = swift_retain(a1);
  a3(v5);
  return swift_release(a1);
}

_QWORD *sub_1001F66EC()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[6]);
  sub_10004FCB8((uint64_t)v0 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection, type metadata accessor for FMSelectedSection);
  sub_10004FCB8((uint64_t)v0 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, type metadata accessor for FMSelectedSection);
  sub_1000051EC((uint64_t)v0 + OBJC_IVAR____TtC6FindMy21FMSelectionController_pendingAction, &qword_1005D2C70);
  sub_10004FCB8((uint64_t)v0 + OBJC_IVAR____TtC6FindMy21FMSelectionController_pendingActionInfo, type metadata accessor for FMPendingActionInfo);
  return v0;
}

uint64_t sub_1001F6790()
{
  uint64_t v0;

  sub_1001F66EC();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1001F67B4()
{
  return type metadata accessor for FMSelectionController(0);
}

uint64_t *sub_1001F67BC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t, __n128);
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  id v39;
  uint64_t v40;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for FMIPSeparationLocation(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v12 + 48);
    v14 = swift_bridgeObjectRetain(v7);
    if (v13(v10, 1, v11, v14))
    {
      v15 = sub_100053F2C(&qword_1005DDFA0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v17 = a3[6];
    v18 = (char *)v4 + v17;
    v19 = (char *)a2 + v17;
    v20 = type metadata accessor for UUID(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = sub_100053F2C((uint64_t *)&unk_1005D53A0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    v23 = a3[7];
    v24 = (char *)v4 + v23;
    v25 = (char *)a2 + v23;
    v26 = type metadata accessor for Date(0);
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      v28 = sub_100053F2C((uint64_t *)&unk_1005D3320);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    v29 = a3[8];
    v30 = a3[9];
    v31 = *(uint64_t *)((char *)a2 + v29);
    *(uint64_t *)((char *)v4 + v29) = v31;
    v32 = *(void **)((char *)a2 + v30);
    *(uint64_t *)((char *)v4 + v30) = (uint64_t)v32;
    v33 = a3[10];
    v34 = (char *)v4 + v33;
    v35 = (char *)a2 + v33;
    v36 = type metadata accessor for FMIPUTAlertEvent(0);
    v37 = *(_QWORD *)(v36 - 8);
    v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
    swift_bridgeObjectRetain(v31);
    v39 = v32;
    if (v38(v35, 1, v36))
    {
      v40 = sub_100053F2C(&qword_1005DAD88);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
    }
  }
  return v4;
}

uint64_t sub_1001F6A70(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + a2[5];
  v5 = type metadata accessor for FMIPSeparationLocation(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = a1 + a2[6];
  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  v10 = a1 + a2[7];
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[8]));

  v13 = a1 + a2[10];
  v14 = type metadata accessor for FMIPUTAlertEvent(0);
  v15 = *(_QWORD *)(v14 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  return result;
}

_QWORD *sub_1001F6BD0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t, __n128);
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(char *, uint64_t, uint64_t);
  id v37;
  uint64_t v38;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for FMIPSeparationLocation(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v11 + 48);
  v13 = swift_bridgeObjectRetain(v6);
  if (v12(v9, 1, v10, v13))
  {
    v14 = sub_100053F2C(&qword_1005DDFA0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v15 = a3[6];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = type metadata accessor for UUID(0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = sub_100053F2C((uint64_t *)&unk_1005D53A0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  v21 = a3[7];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = type metadata accessor for Date(0);
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    v26 = sub_100053F2C((uint64_t *)&unk_1005D3320);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  v27 = a3[8];
  v28 = a3[9];
  v29 = *(_QWORD *)((char *)a2 + v27);
  *(_QWORD *)((char *)a1 + v27) = v29;
  v30 = *(void **)((char *)a2 + v28);
  *(_QWORD *)((char *)a1 + v28) = v30;
  v31 = a3[10];
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  v34 = type metadata accessor for FMIPUTAlertEvent(0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
  swift_bridgeObjectRetain(v29);
  v37 = v30;
  if (v36(v33, 1, v34))
  {
    v38 = sub_100053F2C(&qword_1005DAD88);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  }
  return a1;
}

_QWORD *sub_1001F6E58(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(char *, uint64_t, uint64_t);
  int v48;
  int v49;
  uint64_t v50;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for FMIPSeparationLocation(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    v16 = sub_100053F2C(&qword_1005DDFA0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v9, v10, v11);
LABEL_7:
  v17 = a3[6];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = type metadata accessor for UUID(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
LABEL_12:
    v25 = sub_100053F2C((uint64_t *)&unk_1005D53A0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 24))(v18, v19, v20);
LABEL_13:
  v26 = a3[7];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = type metadata accessor for Date(0);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
  v32 = v31(v27, 1, v29);
  v33 = v31(v28, 1, v29);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v29);
LABEL_18:
    v34 = sub_100053F2C((uint64_t *)&unk_1005D3320);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v30 + 24))(v27, v28, v29);
LABEL_19:
  v35 = a3[8];
  v36 = *(_QWORD *)((char *)a1 + v35);
  v37 = *(_QWORD *)((char *)a2 + v35);
  *(_QWORD *)((char *)a1 + v35) = v37;
  swift_bridgeObjectRetain(v37);
  swift_bridgeObjectRelease(v36);
  v38 = a3[9];
  v39 = *(void **)((char *)a1 + v38);
  v40 = *(void **)((char *)a2 + v38);
  *(_QWORD *)((char *)a1 + v38) = v40;
  v41 = v40;

  v42 = a3[10];
  v43 = (char *)a1 + v42;
  v44 = (char *)a2 + v42;
  v45 = type metadata accessor for FMIPUTAlertEvent(0);
  v46 = *(_QWORD *)(v45 - 8);
  v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48);
  v48 = v47(v43, 1, v45);
  v49 = v47(v44, 1, v45);
  if (!v48)
  {
    if (!v49)
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 24))(v43, v44, v45);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v46 + 8))(v43, v45);
    goto LABEL_24;
  }
  if (v49)
  {
LABEL_24:
    v50 = sub_100053F2C(&qword_1005DAD88);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v43, v44, v45);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
  return a1;
}

_OWORD *sub_1001F7214(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for FMIPSeparationLocation(0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = sub_100053F2C(&qword_1005DDFA0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for UUID(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = sub_100053F2C((uint64_t *)&unk_1005D53A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v18 = a3[7];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = type metadata accessor for Date(0);
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    v23 = sub_100053F2C((uint64_t *)&unk_1005D3320);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  v24 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v24) = *(_QWORD *)((char *)a2 + v24);
  v25 = a3[10];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = type metadata accessor for FMIPUTAlertEvent(0);
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    v30 = sub_100053F2C(&qword_1005DAD88);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  return a1;
}

_QWORD *sub_1001F7480(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(char *, uint64_t, uint64_t);
  int v45;
  int v46;
  uint64_t v47;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for FMIPSeparationLocation(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    v16 = sub_100053F2C(&qword_1005DDFA0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  v17 = a3[6];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = type metadata accessor for UUID(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v20);
LABEL_12:
    v25 = sub_100053F2C((uint64_t *)&unk_1005D53A0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v21 + 40))(v18, v19, v20);
LABEL_13:
  v26 = a3[7];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = type metadata accessor for Date(0);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
  v32 = v31(v27, 1, v29);
  v33 = v31(v28, 1, v29);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v29);
LABEL_18:
    v34 = sub_100053F2C((uint64_t *)&unk_1005D3320);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v30 + 40))(v27, v28, v29);
LABEL_19:
  v35 = a3[8];
  v36 = *(_QWORD *)((char *)a1 + v35);
  *(_QWORD *)((char *)a1 + v35) = *(_QWORD *)((char *)a2 + v35);
  swift_bridgeObjectRelease(v36);
  v37 = a3[9];
  v38 = *(void **)((char *)a1 + v37);
  *(_QWORD *)((char *)a1 + v37) = *(_QWORD *)((char *)a2 + v37);

  v39 = a3[10];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  v42 = type metadata accessor for FMIPUTAlertEvent(0);
  v43 = *(_QWORD *)(v42 - 8);
  v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 48);
  v45 = v44(v40, 1, v42);
  v46 = v44(v41, 1, v42);
  if (!v45)
  {
    if (!v46)
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 40))(v40, v41, v42);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v43 + 8))(v40, v42);
    goto LABEL_24;
  }
  if (v46)
  {
LABEL_24:
    v47 = sub_100053F2C(&qword_1005DAD88);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v40, v41, v42);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  return a1;
}

uint64_t sub_1001F7820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001F782C);
}

uint64_t sub_1001F782C(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_100053F2C(&qword_1005DDFA0);
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = a3[5];
    }
    else
    {
      v13 = sub_100053F2C((uint64_t *)&unk_1005D53A0);
      v10 = *(_QWORD *)(v13 - 8);
      if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
      {
        v11 = v13;
        v12 = a3[6];
      }
      else
      {
        v14 = sub_100053F2C((uint64_t *)&unk_1005D3320);
        v10 = *(_QWORD *)(v14 - 8);
        if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
        {
          v11 = v14;
          v12 = a3[7];
        }
        else
        {
          v11 = sub_100053F2C(&qword_1005DAD88);
          v10 = *(_QWORD *)(v11 - 8);
          v12 = a3[10];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
}

uint64_t sub_1001F7930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001F793C);
}

uint64_t sub_1001F793C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v8 = sub_100053F2C(&qword_1005DDFA0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = sub_100053F2C((uint64_t *)&unk_1005D53A0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[6];
      }
      else
      {
        v13 = sub_100053F2C((uint64_t *)&unk_1005D3320);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[7];
        }
        else
        {
          v10 = sub_100053F2C(&qword_1005DAD88);
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a4[10];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t *sub_1001F7A30(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v9);
  }
  else
  {
    v7 = sub_100053F2C(&qword_1005D2C78);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 10, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 10, v7);
    }
  }
  return a1;
}

uint64_t sub_1001F7B08(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = sub_100053F2C(&qword_1005D2C78);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 10, v2);
  if (!(_DWORD)result)
  {
    v4 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

void *sub_1001F7B70(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_100053F2C(&qword_1005D2C78);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 10, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for UUID(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 10, v6);
  }
  return a1;
}

void *sub_1001F7C24(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = sub_100053F2C(&qword_1005D2C78);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 10, v6);
  v10 = v8(a2, 10, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = type metadata accessor for UUID(0);
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(a1, a2, v13);
      return a1;
    }
    sub_1000051EC((uint64_t)a1, &qword_1005D2C78);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 10, v6);
  return a1;
}

void *sub_1001F7D30(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_100053F2C(&qword_1005D2C78);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 10, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for UUID(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 10, v6);
  }
  return a1;
}

void *sub_1001F7DE4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = sub_100053F2C(&qword_1005D2C78);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 10, v6);
  v10 = v8(a2, 10, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = type metadata accessor for UUID(0);
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(a1, a2, v13);
      return a1;
    }
    sub_1000051EC((uint64_t)a1, &qword_1005D2C78);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = type metadata accessor for UUID(0);
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 10, v6);
  return a1;
}

uint64_t sub_1001F7EF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001F7EFC);
}

uint64_t sub_1001F7EFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_100053F2C(&qword_1005D2C78);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 0xB)
    return v5 - 10;
  else
    return 0;
}

uint64_t sub_1001F7F4C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 10);
  else
    v5 = 0;
  v6 = sub_100053F2C(&qword_1005D2C78);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1001F7FA4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100053F2C(&qword_1005D2C78);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 10, v2);
}

uint64_t sub_1001F7FE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C(&qword_1005D2C78);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 10, v4);
}

uint64_t sub_1001F8024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _BYTE v18[24];

  v7 = type metadata accessor for FMSelectionSubscription(0);
  v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  v9 = v8 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
  *(_QWORD *)(v9 + 8) = 0;
  swift_unknownObjectWeakInit(v9);
  v10 = swift_unknownObjectRetain(a1);
  UUID.init()(v10);
  v11 = v8 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
  *(_QWORD *)(v11 + 8) = a4;
  swift_unknownObjectWeakAssign(v11, a1);
  swift_unknownObjectRelease(a1);
  swift_beginAccess(a2 + 16, v18, 33, 0);
  v12 = swift_retain(v8);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
  v13 = *(_QWORD *)(a2 + 16) & 0xFFFFFFFFFFFFFF8;
  v15 = *(_QWORD *)(v13 + 0x10);
  v14 = *(_QWORD *)(v13 + 24);
  if (v15 >= v14 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
  v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v8);
  specialized Array._endMutation()(v16);
  swift_endAccess(v18);
  return v8;
}

void sub_1001F813C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v4 = type metadata accessor for UUID(0);
  __chkstk_darwin(v4);
  v5 = type metadata accessor for FMSelectionPendingAction(0);
  __chkstk_darwin(v5);
  v6 = sub_100053F2C(&qword_1005DAF08);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_10004FC74(a1, (uint64_t)v9, type metadata accessor for FMSelectionPendingAction);
  sub_10004FC74(a2, v10, type metadata accessor for FMSelectionPendingAction);
  v11 = sub_100053F2C(&qword_1005D2C78);
  v12 = (char *)sub_1001F8278
      + 4
      * byte_100487E90[(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v9, 10, v11)];
  __asm { BR              X10 }
}

uint64_t sub_1001F8278()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  char v8;
  void (*v10)(uint64_t, uint64_t);

  sub_10004FC74(v0, v3, type metadata accessor for FMSelectionPendingAction);
  if (v6(v4, 10, v5))
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3, v1);
    sub_1000051EC(v0, &qword_1005DAF08);
    v8 = 0;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v2, v4, v1);
    v8 = static UUID.== infix(_:_:)(v3, v2);
    v10 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v10(v2, v1);
    v10(v3, v1);
    sub_10004FCB8(v0, type metadata accessor for FMSelectionPendingAction);
  }
  return v8 & 1;
}

double sub_1001F8468()
{
  void *v0;
  id v1;
  id v2;
  double result;

  v0 = (void *)objc_opt_self(UIColor);
  v1 = objc_msgSend(v0, "labelColor");
  v2 = objc_msgSend(v0, "tertiaryLabelColor");
  qword_1005F52B8 = (uint64_t)v1;
  qword_1005F52C0 = (uint64_t)v2;
  result = -6.0;
  xmmword_1005F52C8 = xmmword_100487FD0;
  return result;
}

id sub_1001F84D8()
{
  unsigned __int8 *v0;
  int v1;
  void *v2;
  void *v3;
  uint64_t v4;
  Class isa;
  uint64_t v6;
  NSArray v7;
  char **v8;
  void *v9;
  uint64_t v10;
  Class v11;
  uint64_t v12;

  v1 = v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_showActivityIndicator];
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_activityIndicator];
  if (v1 == 1)
  {
    objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_activityIndicator]);
    v3 = (void *)objc_opt_self(NSLayoutConstraint);
    v4 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_activityIndicatorShowingContraints];
    sub_100048C64();
    swift_bridgeObjectRetain(v4);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v3, "activateConstraints:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

    v6 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_activityIndicatorHiddenConstraints];
    swift_bridgeObjectRetain(v6);
    v7.super.isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v3, "deactivateConstraints:", v7.super.isa, swift_bridgeObjectRelease(v6).n128_f64[0]);
    v8 = &selRef_startAnimating;
  }
  else
  {
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_activityIndicator], "removeFromSuperview");
    v9 = (void *)objc_opt_self(NSLayoutConstraint);
    v10 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_activityIndicatorHiddenConstraints];
    sub_100048C64();
    swift_bridgeObjectRetain(v10);
    v11 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v9, "activateConstraints:", v11, swift_bridgeObjectRelease(v10).n128_f64[0]);

    v12 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_activityIndicatorShowingContraints];
    swift_bridgeObjectRetain(v12);
    v7.super.isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v9, "deactivateConstraints:", v7.super.isa, swift_bridgeObjectRelease(v12).n128_f64[0]);
    v8 = &selRef_stopAnimating;
  }

  objc_msgSend(v2, "setHidden:", v1 ^ 1u);
  return objc_msgSend(v2, *v8);
}

id sub_1001F86D8()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  NSString v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  NSString v18;
  void *v19;
  uint64_t v20;
  uint64_t v22;

  v22 = OBJC_IVAR____TtC6FindMy15FMDetailRowView_separator;
  v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_separator];
  v2 = (void *)objc_opt_self(UIColor);
  v3 = v1;
  v4 = objc_msgSend(v2, "tertiaryLabelColor");
  objc_msgSend(v3, "setBackgroundColor:", v4);

  v5 = OBJC_IVAR____TtC6FindMy15FMDetailRowView_titleLabel;
  v6 = *(void **)&v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_titleLabel];
  v7 = (void *)objc_opt_self(UIFont);
  v8 = v6;
  v9 = objc_msgSend(v7, "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v8, "setFont:", v9);

  objc_msgSend(*(id *)&v0[v5], "setNumberOfLines:", 0);
  v10 = qword_1005D1CF0;
  v11 = *(id *)&v0[v5];
  if (v10 != -1)
    swift_once(&qword_1005D1CF0, sub_1001F8468);
  objc_msgSend(v11, "setTextColor:", qword_1005F52B8);

  objc_msgSend(*(id *)&v0[v5], "setAdjustsFontForContentSizeCategory:", 1);
  v12 = *(id *)&v0[v5];
  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v12, "setAccessibilityIdentifier:", v13);

  v14 = OBJC_IVAR____TtC6FindMy15FMDetailRowView_detailLabel;
  v15 = *(id *)&v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_detailLabel];
  v16 = objc_msgSend(v7, "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v15, "setFont:", v16);

  objc_msgSend(*(id *)&v0[v14], "setTextAlignment:", 2);
  objc_msgSend(*(id *)&v0[v14], "setNumberOfLines:", 0);
  objc_msgSend(*(id *)&v0[v14], "setTextColor:", qword_1005F52C0);
  objc_msgSend(*(id *)&v0[v14], "setAdjustsFontForContentSizeCategory:", 1);
  v17 = *(id *)&v0[v14];
  v18 = String._bridgeToObjectiveC()();
  objc_msgSend(v17, "setAccessibilityIdentifier:", v18);

  v19 = *(void **)&v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_activityIndicator];
  objc_msgSend(v19, "setHidden:", 1);
  v20 = OBJC_IVAR____TtC6FindMy15FMDetailRowView_horizontalStackView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_horizontalStackView], "setAxis:", 0);
  objc_msgSend(*(id *)&v0[v20], "setDistribution:", 2);
  objc_msgSend(*(id *)&v0[v20], "setAlignment:", 4);
  objc_msgSend(*(id *)&v0[v20], "addArrangedSubview:", *(_QWORD *)&v0[v5]);
  objc_msgSend(*(id *)&v0[v20], "addArrangedSubview:", *(_QWORD *)&v0[v14]);
  objc_msgSend(*(id *)&v0[v20], "addArrangedSubview:", v19);
  objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[v20]);
  objc_msgSend(v0, "addSubview:", v19);
  return objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[v22]);
}

id sub_1001F8A54()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  double v55;
  double v56;
  id v57;
  uint64_t v58;
  Class isa;
  uint64_t v61;
  uint64_t v62;

  v1 = v0;
  v2 = OBJC_IVAR____TtC6FindMy15FMDetailRowView_horizontalStackView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_horizontalStackView], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v62 = OBJC_IVAR____TtC6FindMy15FMDetailRowView_separator;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_separator], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_activityIndicator];
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v61 = sub_100053F2C(&qword_1005D2F10);
  v4 = swift_allocObject(v61, 88, 7);
  *(_OWORD *)(v4 + 16) = xmmword_1004850C0;
  v5 = objc_msgSend(v3, "trailingAnchor");
  v6 = objc_msgSend(v1, "trailingAnchor");
  v7 = objc_msgSend(v5, "constraintEqualToAnchor:", v6);

  *(_QWORD *)(v4 + 32) = v7;
  v8 = objc_msgSend(v3, "widthAnchor");
  if (qword_1005D1CF0 != -1)
    swift_once(&qword_1005D1CF0, sub_1001F8468);
  v9 = objc_retainAutoreleasedReturnValue(objc_msgSend(v8, "constraintEqualToConstant:", *((double *)&xmmword_1005F52C8
                                                                                         + 1)));

  *(_QWORD *)(v4 + 40) = v9;
  v10 = objc_msgSend(v3, "centerYAnchor");
  v11 = objc_msgSend(v1, "centerYAnchor");
  v12 = objc_msgSend(v10, "constraintEqualToAnchor:", v11);

  *(_QWORD *)(v4 + 48) = v12;
  v13 = objc_msgSend(*(id *)&v1[v2], "topAnchor");
  v14 = objc_msgSend(v1, "topAnchor");
  if (qword_1005D20B8 != -1)
    swift_once(&qword_1005D20B8, sub_10005E610);
  v15 = objc_msgSend(v13, "constraintEqualToAnchor:constant:", v14, *(double *)&xmmword_1005F6180);

  *(_QWORD *)(v4 + 56) = v15;
  v16 = objc_msgSend(*(id *)&v1[v2], "bottomAnchor");
  v17 = objc_msgSend(v1, "bottomAnchor");
  v18 = objc_msgSend(v16, "constraintEqualToAnchor:constant:", v17, -*(double *)&xmmword_1005F6180);

  *(_QWORD *)(v4 + 64) = v18;
  v19 = objc_msgSend(*(id *)&v1[v2], "leadingAnchor");
  v20 = objc_msgSend(v1, "leadingAnchor");
  v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

  *(_QWORD *)(v4 + 72) = v21;
  v22 = objc_msgSend(*(id *)&v1[v2], "trailingAnchor");
  v23 = objc_msgSend(v3, "leadingAnchor");
  v24 = objc_msgSend(v22, "constraintEqualToAnchor:constant:", v23, *(double *)&xmmword_1005F52C8);

  *(_QWORD *)(v4 + 80) = v24;
  specialized Array._endMutation()(v25);
  v26 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy15FMDetailRowView_activityIndicatorShowingContraints];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy15FMDetailRowView_activityIndicatorShowingContraints] = v4;
  swift_bridgeObjectRelease(v26);
  v27 = swift_allocObject(v61, 64, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100481720;
  v28 = objc_msgSend(*(id *)&v1[v2], "topAnchor");
  v29 = objc_msgSend(v1, "topAnchor");
  v30 = objc_msgSend(v28, "constraintEqualToAnchor:constant:", v29, *(double *)&xmmword_1005F6180);

  *(_QWORD *)(v27 + 32) = v30;
  v31 = objc_msgSend(*(id *)&v1[v2], "bottomAnchor");
  v32 = objc_msgSend(v1, "bottomAnchor");
  v33 = objc_msgSend(v31, "constraintEqualToAnchor:constant:", v32, -*(double *)&xmmword_1005F6180);

  *(_QWORD *)(v27 + 40) = v33;
  v34 = objc_msgSend(*(id *)&v1[v2], "leadingAnchor");
  v35 = objc_msgSend(v1, "leadingAnchor");
  v36 = objc_msgSend(v34, "constraintEqualToAnchor:", v35);

  *(_QWORD *)(v27 + 48) = v36;
  v37 = objc_msgSend(*(id *)&v1[v2], "trailingAnchor");
  v38 = objc_msgSend(v1, "trailingAnchor");
  v39 = objc_msgSend(v37, "constraintEqualToAnchor:", v38);

  *(_QWORD *)(v27 + 56) = v39;
  specialized Array._endMutation()(v40);
  v41 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy15FMDetailRowView_activityIndicatorHiddenConstraints];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy15FMDetailRowView_activityIndicatorHiddenConstraints] = v27;
  swift_bridgeObjectRelease(v41);
  v42 = (void *)objc_opt_self(NSLayoutConstraint);
  v43 = swift_allocObject(v61, 64, 7);
  *(_OWORD *)(v43 + 16) = xmmword_100481720;
  v44 = objc_msgSend(*(id *)&v1[v62], "leadingAnchor");
  v45 = objc_msgSend(v1, "leadingAnchor");
  v46 = objc_msgSend(v44, "constraintEqualToAnchor:", v45);

  *(_QWORD *)(v43 + 32) = v46;
  v47 = objc_msgSend(*(id *)&v1[v62], "trailingAnchor");
  v48 = objc_msgSend(v1, "trailingAnchor");
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v49 = objc_msgSend(v47, "constraintEqualToAnchor:constant:", v48, *(double *)&qword_1005F5978);

  *(_QWORD *)(v43 + 40) = v49;
  v50 = objc_msgSend(*(id *)&v1[v62], "bottomAnchor");
  v51 = objc_msgSend(v1, "bottomAnchor");
  v52 = objc_msgSend(v50, "constraintEqualToAnchor:", v51);

  *(_QWORD *)(v43 + 48) = v52;
  v53 = objc_msgSend(*(id *)&v1[v62], "heightAnchor");
  v54 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v54, "scale");
  v56 = v55;

  v57 = objc_msgSend(v53, "constraintEqualToConstant:", 1.0 / v56);
  *(_QWORD *)(v43 + 56) = v57;
  specialized Array._endMutation()(v58);
  sub_100048C64();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v42, "activateConstraints:", isa, swift_bridgeObjectRelease(v43).n128_f64[0]);

  v1[OBJC_IVAR____TtC6FindMy15FMDetailRowView_showActivityIndicator] = 0;
  return sub_1001F84D8();
}

id sub_1001F9270()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMDetailRowView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMDetailRowView()
{
  return objc_opt_self(_TtC6FindMy15FMDetailRowView);
}

id sub_1001F9384()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  id v11;
  objc_super v13;

  v1 = &v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_identifier];
  *(_QWORD *)v1 = 0;
  *((_QWORD *)v1 + 1) = 0;
  v2 = OBJC_IVAR____TtC6FindMy15FMDetailRowView_horizontalStackView;
  v3 = objc_allocWithZone((Class)UIStackView);
  v4 = v0;
  *(_QWORD *)&v0[v2] = objc_msgSend(v3, "init");
  v5 = OBJC_IVAR____TtC6FindMy15FMDetailRowView_separator;
  *(_QWORD *)&v4[v5] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v6 = OBJC_IVAR____TtC6FindMy15FMDetailRowView_titleLabel;
  *(_QWORD *)&v4[v6] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v7 = OBJC_IVAR____TtC6FindMy15FMDetailRowView_detailLabel;
  *(_QWORD *)&v4[v7] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v8 = OBJC_IVAR____TtC6FindMy15FMDetailRowView_activityIndicator;
  *(_QWORD *)&v4[v8] = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 100);
  *(_QWORD *)&v4[OBJC_IVAR____TtC6FindMy15FMDetailRowView_activityIndicatorShowingContraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v4[OBJC_IVAR____TtC6FindMy15FMDetailRowView_activityIndicatorHiddenConstraints] = _swiftEmptyArrayStorage;
  v9 = &v4[OBJC_IVAR____TtC6FindMy15FMDetailRowView_title];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v10 = &v4[OBJC_IVAR____TtC6FindMy15FMDetailRowView_detailText];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v4[OBJC_IVAR____TtC6FindMy15FMDetailRowView_isEnabled] = 1;
  v4[OBJC_IVAR____TtC6FindMy15FMDetailRowView_separated] = 1;
  v4[OBJC_IVAR____TtC6FindMy15FMDetailRowView_showActivityIndicator] = 0;

  v13.receiver = v4;
  v13.super_class = (Class)type metadata accessor for FMDetailRowView();
  v11 = objc_msgSendSuper2(&v13, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_1001F86D8();
  sub_1001F8A54();

  return v11;
}

void sub_1001F9528()
{
  _BYTE *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v1 = &v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_identifier];
  *v1 = 0;
  v1[1] = 0;
  v2 = OBJC_IVAR____TtC6FindMy15FMDetailRowView_horizontalStackView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v3 = OBJC_IVAR____TtC6FindMy15FMDetailRowView_separator;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v4 = OBJC_IVAR____TtC6FindMy15FMDetailRowView_titleLabel;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v5 = OBJC_IVAR____TtC6FindMy15FMDetailRowView_detailLabel;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v6 = OBJC_IVAR____TtC6FindMy15FMDetailRowView_activityIndicator;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 100);
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_activityIndicatorShowingContraints] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_activityIndicatorHiddenConstraints] = &_swiftEmptyArrayStorage;
  v7 = &v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_title];
  *v7 = 0;
  v7[1] = 0;
  v8 = &v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_detailText];
  *v8 = 0;
  v8[1] = 0;
  v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_isEnabled] = 1;
  v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_separated] = 1;
  v0[OBJC_IVAR____TtC6FindMy15FMDetailRowView_showActivityIndicator] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMDetailRowView.swift", 28, 2, 104, 0);
  __break(1u);
}

id sub_1001F97C0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMR1Transition();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMR1Transition()
{
  return objc_opt_self(_TtC6FindMy14FMR1Transition);
}

void sub_1001F9810(void *a1)
{
  id v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;

  v1 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextFromViewControllerKey);
  if (v1)
  {
    v2 = v1;
    while (1)
    {
      v3 = objc_msgSend(v2, "view");
      if (!v3)
        break;
      v4 = v3;
      v5 = type metadata accessor for FMPassthroughView();
      v15 = v4;
      v6 = v15;
      while (!swift_dynamicCastClass(v6, v5))
      {
        v7 = objc_msgSend(v15, "superview");

        v6 = v7;
        if (!v7)
        {

          return;
        }
      }

      v8 = objc_msgSend(v2, "view");
      if (!v8)
        goto LABEL_17;
      v9 = v8;
      v10 = v9;
      while (1)
      {
        v11 = swift_dynamicCastClass(v10, v5);
        if (v11)
          break;
        v12 = objc_msgSend(v9, "superview");

        v10 = v12;
        if (!v12)
        {
          v10 = v9;
          goto LABEL_14;
        }
      }
      v13 = v11;

      *(_BYTE *)(v13 + OBJC_IVAR____TtC6FindMy17FMPassthroughView_enabled) = 0;
LABEL_14:

      v14 = objc_msgSend(v2, "presentingViewController");
      v2 = v14;
      if (!v14)
        return;
    }
    __break(1u);
LABEL_17:
    __break(1u);
  }
}

void sub_1001F99CC(void *a1)
{
  id v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;

  v1 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextToViewControllerKey);
  if (v1)
  {
    v2 = v1;
    while (1)
    {
      v3 = objc_msgSend(v2, "view");
      if (!v3)
        break;
      v4 = v3;
      v5 = type metadata accessor for FMPassthroughView();
      v15 = v4;
      v6 = v15;
      while (!swift_dynamicCastClass(v6, v5))
      {
        v7 = objc_msgSend(v15, "superview");

        v6 = v7;
        if (!v7)
        {

          return;
        }
      }

      v8 = objc_msgSend(v2, "view");
      if (!v8)
        goto LABEL_17;
      v9 = v8;
      v10 = v9;
      while (1)
      {
        v11 = swift_dynamicCastClass(v10, v5);
        if (v11)
          break;
        v12 = objc_msgSend(v9, "superview");

        v10 = v12;
        if (!v12)
        {
          v10 = v9;
          goto LABEL_14;
        }
      }
      v13 = v11;

      *(_BYTE *)(v13 + OBJC_IVAR____TtC6FindMy17FMPassthroughView_enabled) = 1;
LABEL_14:

      v14 = objc_msgSend(v2, "presentingViewController");
      v2 = v14;
      if (!v14)
        return;
    }
    __break(1u);
LABEL_17:
    __break(1u);
  }
}

uint64_t sub_1001F9BE4()
{
  uint64_t v0;

  return swift_unknownObjectWeakDestroy(v0 + OBJC_IVAR____TtC6FindMy28FMAccessoryPairingFailedCard_coordinator);
}

id sub_1001F9BF4()
{
  return sub_1000E0A1C(type metadata accessor for FMAccessoryPairingFailedCard);
}

uint64_t type metadata accessor for FMAccessoryPairingFailedCard()
{
  return objc_opt_self(_TtC6FindMy28FMAccessoryPairingFailedCard);
}

void sub_1001F9C30(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  NSURL *v12;
  void *v13;
  void *v14;
  void *v15;
  unint64_t v16;
  Class isa;
  uint64_t v18;
  void *v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v2 = v1;
  v4 = sub_100053F2C((uint64_t *)&unk_1005D3470);
  __chkstk_darwin(v4);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000A1940(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10009ADFC((uint64_t)v6);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v11 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
    if (v11)
    {
      v13 = v11;
      URL._bridgeToObjectiveC()(v12);
      v15 = v14;
      v16 = sub_10004C214((uint64_t)_swiftEmptyArrayStorage);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v13, "openSensitiveURL:withOptions:", v15, isa, swift_bridgeObjectRelease(v16).n128_f64[0]);

    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  v18 = swift_allocObject(&unk_1005508A8, 32, 7);
  *(_QWORD *)(v18 + 16) = 0;
  *(_QWORD *)(v18 + 24) = 0;
  aBlock[4] = sub_1001FB6BC;
  v21 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_1005508C0;
  v19 = _Block_copy(aBlock);
  objc_msgSend(v2, "dismissViewControllerAnimated:completion:", 1, v19, swift_release(v21).n128_f64[0]);
  _Block_release(v19);
}

void sub_1001F9E4C(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  void *object;
  NSString v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  Swift::String v18;
  Swift::String_optional v19;
  Swift::String v20;
  void *v21;
  NSString v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  Class isa;
  uint64_t v29;
  Swift::String v30;
  Swift::String v31;

  v2 = v1;
  v4 = FMIPAccessoryError.localizedAlertTitle.getter();
  v6 = v5;
  v7 = (void *)objc_opt_self(NSBundle);
  v8 = objc_msgSend(v7, "mainBundle");
  v30._object = (void *)0x80000001004A5660;
  v9._countAndFlagsBits = v4;
  v9._object = v6;
  v10.value._countAndFlagsBits = 0xD000000000000013;
  v10.value._object = (void *)0x80000001004A5640;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v30._countAndFlagsBits = 0xD000000000000018;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v30)._object;
  swift_bridgeObjectRelease(v6);

  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setTitle:", v13, swift_bridgeObjectRelease(object).n128_f64[0]);

  v14 = FMIPAccessoryError.localizedDescription.getter();
  v16 = v15;
  v17 = objc_msgSend(v7, "mainBundle");
  v31._object = (void *)0x80000001004A5660;
  v18._countAndFlagsBits = v14;
  v18._object = v16;
  v19.value._countAndFlagsBits = 0xD000000000000013;
  v19.value._object = (void *)0x80000001004A5640;
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  v31._countAndFlagsBits = 0xD000000000000018;
  v21 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, v19, (NSBundle)v17, v20, v31)._object;
  swift_bridgeObjectRelease(v16);

  v22 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setSubtitle:", v22, swift_bridgeObjectRelease(v21).n128_f64[0]);

  v23 = sub_1001FADE4(a1);
  if (v23)
  {
    v24 = v23;
    v25 = sub_100053F2C(&qword_1005D2F10);
    v26 = swift_allocObject(v25, 40, 7);
    *(_OWORD *)(v26 + 16) = xmmword_100481B00;
    *(_QWORD *)(v26 + 32) = v24;
    v29 = v26;
    specialized Array._endMutation()(v26);
    sub_10011D1D8();
    v27 = v24;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v2, "setImages:", isa, swift_bridgeObjectRelease(v29).n128_f64[0]);

  }
}

void sub_1001FA0AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  int v23;
  uint64_t v24;
  void *v25;
  SEL *v26;
  SEL *v27;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  uint64_t v30;
  void (**v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSString v36;
  void *v37;
  const void *v38;
  id v39;
  id v40;
  id v41;
  Swift::String_optional v42;
  Swift::String v43;
  Swift::String v44;
  void *object;
  uint64_t v46;
  NSString v47;
  void *v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (**v54)(char *, uint64_t);
  char *v55;
  void *v56;
  void **aBlock;
  uint64_t v58;
  void (*v59)(uint64_t, void *);
  void *v60;
  void *v61;
  uint64_t v62;
  Swift::String v63;

  v53 = type metadata accessor for FMIPAccessoryError(0);
  v2 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v4 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FMAccessoryDiscoveryAndPairingFailedCard.ViewModel(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100053F2C((uint64_t *)&unk_1005D3470);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v51 - v12;
  v14 = type metadata accessor for URL(0);
  v15 = *(char **)(v14 - 8);
  v16 = *((_QWORD *)v15 + 8);
  v17 = __chkstk_darwin(v14);
  v54 = (void (**)(char *, uint64_t))((char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  v55 = (char *)&v51 - v18;
  v19 = sub_1001FA7E4();
  if (v20)
  {
    v51 = v19;
    v52 = v20;
    sub_1000A1940(a1 + *(int *)(v5 + 20), (uint64_t)v11);
    sub_1001FACAC(a1, (uint64_t)v7);
    v21 = (unsigned int (*)(char *, uint64_t, uint64_t))*((_QWORD *)v15 + 6);
    if (v21(v11, 1, v14) == 1)
    {
      v22 = v53;
      (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v53);
      v23 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v4, v22);
      if (v23 == enum case for FMIPAccessoryError.bluetoothDisabled(_:))
      {
        URL.init(string:)(0xD000000000000014, 0x80000001004B4790);
      }
      else if (v23 == enum case for FMIPAccessoryError.invalidAccountState(_:))
      {
        URL.init(string:)(0xD000000000000018, 0x80000001004B4770);
      }
      else
      {
        (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v15 + 7))(v13, 1, 1, v14);
        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v22);
      }
      sub_1001FACF0((uint64_t)v7);
      sub_10009ADFC((uint64_t)v11);
      if (v21(v13, 1, v14) == 1)
        goto LABEL_12;
      v28 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v15 + 4);
    }
    else
    {
      sub_1001FACF0((uint64_t)v7);
      v28 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v15 + 4);
      v28(v13, v11, v14);
      (*((void (**)(char *, _QWORD, uint64_t, uint64_t))v15 + 7))(v13, 0, 1, v14);
      if (v21(v13, 1, v14) == 1)
      {
LABEL_12:
        swift_bridgeObjectRelease(v52);
        sub_10009ADFC((uint64_t)v13);
        v24 = 0;
        v25 = v56;
        v26 = (SEL *)&unk_1005AA000;
        v27 = (SEL *)&unk_1005AA000;
        goto LABEL_15;
      }
    }
    v29 = v55;
    v28(v55, v13, v14);
    v30 = swift_allocObject(&unk_1005507B8, 24, 7);
    v25 = v56;
    swift_unknownObjectWeakInit(v30 + 16);
    v31 = v54;
    (*((void (**)(void (**)(char *, uint64_t), char *, uint64_t))v15 + 2))(v54, v29, v14);
    v32 = v15[80];
    v33 = (v32 + 24) & ~v32;
    v34 = swift_allocObject(&unk_100550808, v33 + v16, v32 | 7);
    *(_QWORD *)(v34 + 16) = v30;
    v28((char *)(v34 + v33), (char *)v31, v14);
    swift_retain(v30);
    v35 = v52;
    swift_bridgeObjectRetain(v52);
    swift_retain(v34);
    v36 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v35);
    v61 = sub_1001FADA0;
    v62 = v34;
    aBlock = _NSConcreteStackBlock;
    v58 = 1107296256;
    v59 = sub_100008B40;
    v60 = &unk_100550820;
    v37 = _Block_copy(&aBlock);
    v54 = (void (**)(char *, uint64_t))v15;
    v38 = v37;
    v27 = (SEL *)&unk_1005AA000;
    v39 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v36, 0, v37);

    _Block_release(v38);
    v26 = (SEL *)&unk_1005AA000;
    v40 = objc_msgSend(v25, "addAction:", v39, swift_release(v62).n128_f64[0]);

    swift_release(v34);
    swift_bridgeObjectRelease(v35);

    v54[1](v55, v14);
    swift_release(v30);
    v24 = 1;
    goto LABEL_15;
  }
  v24 = 0;
  v25 = v56;
  v26 = (SEL *)&unk_1005AA000;
  v27 = (SEL *)&unk_1005AA000;
LABEL_15:
  v41 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v42.value._countAndFlagsBits = 0xD000000000000013;
  v43._countAndFlagsBits = 0xD00000000000002ALL;
  v63._object = (void *)0x80000001004A5660;
  v43._object = (void *)0x80000001004B4740;
  v42.value._object = (void *)0x80000001004A5640;
  v44._countAndFlagsBits = 0;
  v44._object = (void *)0xE000000000000000;
  v63._countAndFlagsBits = 0xD000000000000018;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v43, v42, (NSBundle)v41, v44, v63)._object;

  v46 = swift_allocObject(&unk_1005507B8, 24, 7);
  swift_unknownObjectWeakInit(v46 + 16);
  swift_retain_n(v46, 2);
  swift_bridgeObjectRetain(object);
  v47 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v61 = sub_1001FACA4;
  v62 = v46;
  aBlock = _NSConcreteStackBlock;
  v58 = 1107296256;
  v59 = sub_100008B40;
  v60 = &unk_1005507D0;
  v48 = _Block_copy(&aBlock);
  v49 = objc_msgSend((id)objc_opt_self(PRXAction), v27[138], v47, v24, v48);

  _Block_release(v48);
  v50 = objc_msgSend(v25, v26[139], v49, swift_release(v62).n128_f64[0]);

  swift_bridgeObjectRelease(object);
  swift_release_n(v46, 2);

}

uint64_t sub_1001FA74C()
{
  uint64_t v0;

  return swift_unknownObjectWeakDestroy(v0 + OBJC_IVAR____TtC6FindMy30FMAccessoryDiscoveryFailedCard_coordinator);
}

id sub_1001FA75C()
{
  return sub_1000E0A1C(type metadata accessor for FMAccessoryDiscoveryFailedCard);
}

uint64_t type metadata accessor for FMAccessoryDiscoveryFailedCard()
{
  return objc_opt_self(_TtC6FindMy30FMAccessoryDiscoveryFailedCard);
}

void sub_1001FA798()
{
  qword_1005F52D8 = 0x4049000000000000;
}

uint64_t sub_1001FA7E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  id v7;
  unint64_t v8;
  unint64_t v9;
  const char *v10;
  unint64_t v11;
  Swift::String_optional v12;
  Swift::String v13;
  uint64_t countAndFlagsBits;
  unint64_t v16;
  uint64_t v17;

  v1 = v0;
  v2 = type metadata accessor for FMIPAccessoryError(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for FMIPAccessoryError.bluetoothDisabled(_:))
  {
    v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v8 = 0xD000000000000018;
    v9 = 0xD000000000000036;
    v16 = 0x80000001004A5660;
    v10 = "ADD_ACCESSORY_PAIRING_BLUETOOTH_DISABLED_ACTION_BUTTON";
  }
  else if (v6 == enum case for FMIPAccessoryError.invalidAccountState(_:))
  {
    v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v8 = 0xD000000000000018;
    v9 = 0xD00000000000002CLL;
    v16 = 0x80000001004A5660;
    v10 = "ADD_ACCESSORY_PAIRING_ACCOUNT_UPGRADE_BUTTON";
  }
  else
  {
    if (v6 != enum case for FMIPAccessoryError.accessoryBatteryTooLow(_:))
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return 0;
    }
    v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v8 = 0xD000000000000018;
    v9 = 0xD000000000000033;
    v16 = 0x80000001004A5660;
    v10 = "ADD_ACCESSORY_PAIRING_LOW_BATTERY_LEARN_MORE_BUTTON";
  }
  v11 = (unint64_t)(v10 - 32) | 0x8000000000000000;
  v12.value._object = (void *)0x80000001004A5640;
  v12.value._countAndFlagsBits = 0xD000000000000013;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v9, v12, (NSBundle)v7, v13, *(Swift::String *)&v8)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_1001FAA00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[24];

  v5 = sub_100053F2C((uint64_t *)&unk_1005D3470);
  __chkstk_darwin(v5);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v13, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a2);
  if (result)
  {
    v9 = (_QWORD *)result;
    v10 = type metadata accessor for URL(0);
    v11 = *(_QWORD *)(v10 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v7, a3, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    (*(void (**)(char *))((swift_isaMask & *v9) + 0x50))(v7);

    return sub_10009ADFC((uint64_t)v7);
  }
  return result;
}

void sub_1001FAB04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  void *v6;
  _QWORD aBlock[5];
  uint64_t v8;
  _BYTE v9[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = swift_allocObject(&unk_100550858, 32, 7);
    *(_QWORD *)(v5 + 16) = 0;
    *(_QWORD *)(v5 + 24) = 0;
    aBlock[4] = sub_100066830;
    v8 = v5;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100037DF8;
    aBlock[3] = &unk_100550870;
    v6 = _Block_copy(aBlock);
    objc_msgSend(v4, "dismissViewControllerAnimated:completion:", 1, v6, swift_release(v8).n128_f64[0]);
    _Block_release(v6);

  }
}

id sub_1001FAC18()
{
  return sub_1000E0A1C(type metadata accessor for FMAccessoryDiscoveryAndPairingFailedCard);
}

uint64_t type metadata accessor for FMAccessoryDiscoveryAndPairingFailedCard()
{
  return objc_opt_self(_TtC6FindMy40FMAccessoryDiscoveryAndPairingFailedCard);
}

uint64_t type metadata accessor for FMAccessoryDiscoveryAndPairingFailedCard.ViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_1005DB1B8;
  if (!qword_1005DB1B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMAccessoryDiscoveryAndPairingFailedCard.ViewModel);
  return result;
}

uint64_t sub_1001FAC80()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1001FACA4(uint64_t a1)
{
  uint64_t v1;

  sub_1001FAB04(a1, v1);
}

uint64_t sub_1001FACAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMAccessoryDiscoveryAndPairingFailedCard.ViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001FACF0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FMAccessoryDiscoveryAndPairingFailedCard.ViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001FAD2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1001FADA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for URL(0) - 8) + 80);
  return sub_1001FAA00(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

id sub_1001FADE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  const char *v8;
  unint64_t v9;
  id v10;
  id v11;
  uint64_t v13;

  v2 = 0xD00000000000001BLL;
  v3 = type metadata accessor for FMIPAccessoryError(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (v7 == enum case for FMIPAccessoryError.bluetoothDisabled(_:))
  {
    v8 = "bluetooth.slash.circle.fill";
  }
  else if (v7 == enum case for FMIPAccessoryError.invalidAccountState(_:))
  {
    v2 = 0xD000000000000010;
    v8 = "lock.shield.fill";
  }
  else
  {
    if (v7 == enum case for FMIPAccessoryError.accessoryBatteryTooLow(_:))
    {
      v9 = 0xEA00000000003532;
      v2 = 0x2E79726574746162;
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v8 = "exclamationmark.circle.fill";
  }
  v9 = (unint64_t)(v8 - 32) | 0x8000000000000000;
LABEL_9:
  v10 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
  if (qword_1005D1CF8 != -1)
    swift_once(&qword_1005D1CF8, sub_1001FA798);
  v11 = sub_10039C5E4(*(double *)&qword_1005F52D8, v2, v9, (uint64_t)v10);
  swift_bridgeObjectRelease(v9);

  return v11;
}

uint64_t *sub_1001FAF88(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v14);
  }
  else
  {
    v7 = type metadata accessor for FMIPAccessoryError(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for URL(0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = sub_100053F2C((uint64_t *)&unk_1005D3470);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t sub_1001FB090(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v4 = type metadata accessor for FMIPAccessoryError(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  return result;
}

uint64_t sub_1001FB120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for FMIPAccessoryError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100053F2C((uint64_t *)&unk_1005D3470);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_1001FB1FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = type metadata accessor for FMIPAccessoryError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = sub_100053F2C((uint64_t *)&unk_1005D3470);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1001FB324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for FMIPAccessoryError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100053F2C((uint64_t *)&unk_1005D3470);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_1001FB400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = type metadata accessor for FMIPAccessoryError(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = type metadata accessor for URL(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = sub_100053F2C((uint64_t *)&unk_1005D3470);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1001FB528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001FB534);
}

uint64_t sub_1001FB534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for FMIPAccessoryError(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_100053F2C((uint64_t *)&unk_1005D3470);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1001FB5AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001FB5B8);
}

uint64_t sub_1001FB5B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for FMIPAccessoryError(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_100053F2C((uint64_t *)&unk_1005D3470);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1001FB638(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  v2 = type metadata accessor for FMIPAccessoryError(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_10014EF1C(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v6, a1 + 16);
    }
  }
}

id sub_1001FB6D0()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  objc_super v9;

  v1 = OBJC_IVAR____TtC6FindMy34FMAccessoryPairingWithYouIndicator_foregroundLayer;
  v2 = objc_allocWithZone((Class)CALayer);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, "init");
  v4 = OBJC_IVAR____TtC6FindMy34FMAccessoryPairingWithYouIndicator_borderLayer;
  *(_QWORD *)&v3[v4] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  v5 = OBJC_IVAR____TtC6FindMy34FMAccessoryPairingWithYouIndicator_backgroundLayer;
  *(_QWORD *)&v3[v5] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  v6 = OBJC_IVAR____TtC6FindMy34FMAccessoryPairingWithYouIndicator_animationGroup;
  *(_QWORD *)&v3[v6] = objc_msgSend(objc_allocWithZone((Class)CAAnimationGroup), "init");

  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for FMAccessoryPairingWithYouIndicator();
  v7 = objc_msgSendSuper2(&v9, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_1001FB8D4();
  sub_1001FBB44();

  return v7;
}

void sub_1001FB8D4()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;

  v1 = objc_msgSend(v0, "layer");
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy34FMAccessoryPairingWithYouIndicator_backgroundLayer];
  objc_msgSend(v1, "addSublayer:", v2);

  v3 = objc_msgSend(v0, "layer");
  v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMy34FMAccessoryPairingWithYouIndicator_foregroundLayer];
  objc_msgSend(v3, "addSublayer:", v4);

  v5 = objc_msgSend(v0, "layer");
  v6 = *(void **)&v0[OBJC_IVAR____TtC6FindMy34FMAccessoryPairingWithYouIndicator_borderLayer];
  objc_msgSend(v5, "addSublayer:", v6);

  objc_msgSend(v4, "setCornerCurve:", kCACornerCurveCircular);
  v7 = (void *)objc_opt_self(UIColor);
  v8 = objc_msgSend(v7, "systemBlueColor");
  v9 = objc_msgSend(v8, "CGColor");

  objc_msgSend(v4, "setBackgroundColor:", v9);
  objc_msgSend(v6, "setBorderWidth:", 1.0);
  v10 = objc_msgSend(v7, "whiteColor");
  v11 = objc_msgSend(v10, "CGColor");

  objc_msgSend(v6, "setBorderColor:", v11);
  objc_msgSend(v2, "setCornerCurve:", kCACornerCurveCircular);
  v12 = objc_msgSend(v7, "systemBlueColor");
  v13 = objc_msgSend(v12, "CGColor");

  objc_msgSend(v2, "setBackgroundColor:", v13);
  objc_msgSend(v2, "setBorderWidth:", 1.0);
  v14 = objc_msgSend(v7, "clearColor");
  v15 = objc_msgSend(v14, "CGColor");

  objc_msgSend(v2, "setBorderColor:", v15);
}

void sub_1001FBB44()
{
  uint64_t v0;
  uint64_t v1;
  NSString v2;
  id v3;
  Class isa;
  Class v5;
  id v6;
  NSString v7;
  void *v8;
  id v9;
  id v10;
  Class v11;
  uint64_t v12;
  uint64_t v13;
  Class v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  Class v25;
  double v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  NSString v31;
  uint64_t v32;

  v1 = v0;
  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend((id)objc_opt_self(CABasicAnimation), "animationWithKeyPath:", v2);

  isa = Double._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v3, "setFromValue:", isa);

  v5 = Int._bridgeToObjectiveC()().super.super.isa;
  objc_msgSend(v3, "setToValue:", v5);

  v6 = objc_msgSend(objc_allocWithZone((Class)CABasicAnimation), "init");
  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v6, "setKeyPath:", v7);

  v8 = (void *)objc_opt_self(CAValueFunction);
  v9 = v6;
  v10 = objc_msgSend(v8, "functionWithName:", kCAValueFunctionScale);
  objc_msgSend(v9, "setValueFunction:", v10);

  v11 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v9, "setFromValue:", v11);

  v12 = sub_100053F2C(&qword_1005DB238);
  v13 = swift_allocObject(v12, 56, 7);
  __asm { FMOV            V1.2D, #2.5 }
  *(_OWORD *)(v13 + 16) = xmmword_100481B10;
  *(_OWORD *)(v13 + 32) = _Q1;
  *(_QWORD *)(v13 + 48) = 0x4004000000000000;
  v19 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v9, "setToValue:", v19, swift_bridgeObjectRelease(v13).n128_f64[0]);

  v20 = objc_msgSend(objc_allocWithZone((Class)CAAnimationGroup), "init");
  v21 = sub_100053F2C(&qword_1005D2F10);
  v22 = swift_allocObject(v21, 48, 7);
  *(_OWORD *)(v22 + 16) = xmmword_1004820B0;
  *(_QWORD *)(v22 + 32) = v3;
  *(_QWORD *)(v22 + 40) = v9;
  v32 = v22;
  specialized Array._endMutation()(v22);
  sub_100006C5C(0, (unint64_t *)&qword_1005DB240, CAAnimation_ptr);
  v23 = v9;
  v24 = v3;
  v25 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v20, "setAnimations:", v25, swift_bridgeObjectRelease(v32).n128_f64[0]);

  objc_msgSend(v20, "setDuration:", 2.0);
  objc_msgSend(v20, "setRemovedOnCompletion:", 0);
  LODWORD(v26) = 2139095039;
  objc_msgSend(v20, "setRepeatCount:", v26);
  v27 = (void *)objc_opt_self(CAMediaTimingFunction);
  v28 = v20;
  v29 = objc_msgSend(v27, "functionWithName:", kCAMediaTimingFunctionEaseOut);
  objc_msgSend(v28, "setTimingFunction:", v29);

  v30 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy34FMAccessoryPairingWithYouIndicator_backgroundLayer);
  v31 = String._bridgeToObjectiveC()();
  objc_msgSend(v30, "addAnimation:forKey:", v28, v31);

}

id sub_1001FBF00()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  double v5;
  double v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  id v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  CGFloat v20;
  id v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  CGFloat v30;
  id v31;
  id v32;
  double v33;
  double v34;
  double v35;
  CGFloat v36;
  double v37;
  CGFloat v38;
  id v39;
  double v40;
  CGFloat v41;
  double v42;
  CGFloat v43;
  double v44;
  CGFloat v45;
  double v46;
  CGFloat v47;
  CGFloat v48;
  id v49;
  double v50;
  CGFloat v51;
  double v52;
  CGFloat v53;
  double v54;
  CGFloat v55;
  double v56;
  CGFloat v57;
  CGFloat v58;
  void *v59;
  CGFloat v61;
  CGFloat v62;
  CGFloat v63;
  CGFloat v64;
  CGRect v65;
  CGRect v66;
  CGRect v67;
  CGRect v68;
  CGRect v69;
  CGRect v70;
  CGRect v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;
  CGRect v75;
  CGRect v76;
  CGRect v77;

  v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy34FMAccessoryPairingWithYouIndicator_backgroundLayer];
  v2 = *(id *)&v0[OBJC_IVAR____TtC6FindMy34FMAccessoryPairingWithYouIndicator_foregroundLayer];
  v3 = v1;
  v4 = objc_msgSend(v0, "layer");
  objc_msgSend(v4, "bounds");
  v61 = v6;
  v63 = v5;
  v8 = v7;
  v10 = v9;

  v11 = objc_msgSend(v0, "layer");
  objc_msgSend(v11, "bounds");
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v19 = v18;

  v65.origin.x = v13;
  v65.origin.y = v15;
  v65.size.width = v17;
  v65.size.height = v19;
  v20 = CGRectGetWidth(v65) * 0.3;
  v21 = objc_msgSend(v0, "layer");
  objc_msgSend(v21, "bounds");
  v23 = v22;
  v25 = v24;
  v27 = v26;
  v29 = v28;

  v66.origin.x = v23;
  v66.origin.y = v25;
  v66.size.width = v27;
  v66.size.height = v29;
  v30 = CGRectGetHeight(v66) * 0.3;
  v67.origin.y = v61;
  v67.origin.x = v63;
  v67.size.width = v8;
  v67.size.height = v10;
  v68 = CGRectInset(v67, v20, v30);
  objc_msgSend(v2, "setFrame:", v68.origin.x, v68.origin.y, v68.size.width, v68.size.height);
  objc_msgSend(v2, "bounds");
  objc_msgSend(v2, "setCornerRadius:", CGRectGetWidth(v69) * 0.5);

  v31 = v3;
  v32 = objc_msgSend(v0, "layer");
  objc_msgSend(v32, "bounds");
  v62 = v34;
  v64 = v33;
  v36 = v35;
  v38 = v37;

  v39 = objc_msgSend(v0, "layer");
  objc_msgSend(v39, "bounds");
  v41 = v40;
  v43 = v42;
  v45 = v44;
  v47 = v46;

  v70.origin.x = v41;
  v70.origin.y = v43;
  v70.size.width = v45;
  v70.size.height = v47;
  v48 = CGRectGetWidth(v70) * 0.3;
  v49 = objc_msgSend(v0, "layer");
  objc_msgSend(v49, "bounds");
  v51 = v50;
  v53 = v52;
  v55 = v54;
  v57 = v56;

  v71.origin.x = v51;
  v71.origin.y = v53;
  v71.size.width = v55;
  v71.size.height = v57;
  v58 = CGRectGetHeight(v71) * 0.3;
  v72.origin.y = v62;
  v72.origin.x = v64;
  v72.size.width = v36;
  v72.size.height = v38;
  v73 = CGRectInset(v72, v48, v58);
  objc_msgSend(v31, "setFrame:", v73.origin.x, v73.origin.y, v73.size.width, v73.size.height);
  objc_msgSend(v31, "bounds");
  objc_msgSend(v31, "setCornerRadius:", CGRectGetWidth(v74) * 0.5);

  v59 = *(void **)&v0[OBJC_IVAR____TtC6FindMy34FMAccessoryPairingWithYouIndicator_borderLayer];
  objc_msgSend(v2, "frame");
  v76 = CGRectInset(v75, -1.0, -1.0);
  objc_msgSend(v59, "setFrame:", v76.origin.x, v76.origin.y, v76.size.width, v76.size.height);
  objc_msgSend(v59, "bounds");
  return objc_msgSend(v59, "setCornerRadius:", CGRectGetWidth(v77) * 0.5);
}

id sub_1001FC24C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMAccessoryPairingWithYouIndicator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMAccessoryPairingWithYouIndicator()
{
  return objc_opt_self(_TtC6FindMy34FMAccessoryPairingWithYouIndicator);
}

void sub_1001FC2F4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC6FindMy34FMAccessoryPairingWithYouIndicator_foregroundLayer;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  v2 = OBJC_IVAR____TtC6FindMy34FMAccessoryPairingWithYouIndicator_borderLayer;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  v3 = OBJC_IVAR____TtC6FindMy34FMAccessoryPairingWithYouIndicator_backgroundLayer;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  v4 = OBJC_IVAR____TtC6FindMy34FMAccessoryPairingWithYouIndicator_animationGroup;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)CAAnimationGroup), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMAccessoryPairingWithYouIndicator.swift", 47, 2, 33, 0);
  __break(1u);
}

void sub_1001FC3D4(char a1)
{
  uint64_t v1;
  uint64_t KeyPath;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  unint64_t v9;
  char v11;
  uint64_t v12;
  void *v13;
  id v14;
  int v15;
  _BYTE *v16;
  uint64_t v17;

  KeyPath = swift_getKeyPath(&unk_100488198);
  v4 = swift_getKeyPath(&unk_1004881C0);
  static Published.subscript.getter(&v17, v1, KeyPath, v4);
  swift_release(KeyPath);
  swift_release(v4);
  if ((_BYTE)v17)
    v5 = 0x74696C6C65746173;
  else
    v5 = 0x65726F6C707865;
  if ((_BYTE)v17)
    v6 = 0xE900000000000065;
  else
    v6 = 0xE700000000000000;
  v7 = a1 & 1;
  if (v7)
    v8 = 0x74696C6C65746173;
  else
    v8 = 0x65726F6C707865;
  if (v7)
    v9 = 0xE900000000000065;
  else
    v9 = 0xE700000000000000;
  if (v5 == v8 && v6 == v9)
  {
    swift_bridgeObjectRelease_n(v6, 2);
  }
  else
  {
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, v8, v9, 0);
    swift_bridgeObjectRelease(v6);
    swift_bridgeObjectRelease(v9);
    if ((v11 & 1) == 0)
    {
      v12 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 56);
      v13 = (void *)objc_opt_self(NSUserDefaults);
      swift_retain(v12);
      v14 = objc_msgSend(v13, "standardUserDefaults");
      v15 = sub_1001E0FF8(v7);

      v16 = (_BYTE *)(v12 + OBJC_IVAR____TtC6FindMy21FMSelectionController_selectedMapMode);
      *v16 = v15 & 1;
      v16[1] = BYTE1(v15) & 1;
      v16[2] = BYTE2(v15) & 1;
      sub_1001F5BB0();
      swift_release(v12);
    }
  }
}

uint64_t sub_1001FC55C()
{
  uint64_t v0;
  uint64_t KeyPath;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v6;

  KeyPath = swift_getKeyPath(&unk_100488198);
  v2 = swift_getKeyPath(&unk_1004881C0);
  static Published.subscript.getter(&v6, v0, KeyPath, v2);
  swift_release(KeyPath);
  swift_release(v2);
  if (BYTE2(v6))
    v3 = 0x10000;
  else
    v3 = 0;
  if (BYTE1(v6))
    v4 = 256;
  else
    v4 = 0;
  return v4 | v6 | v3;
}

void sub_1001FC5F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  id v22;
  NSURL *v23;
  void *v24;
  void *v25;
  unint64_t v26;
  Class isa;
  uint64_t v28;

  v1 = sub_100053F2C(&qword_1005D8308);
  __chkstk_darwin(v1);
  v3 = (id *)((char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_100053F2C((uint64_t *)&unk_1005D3470);
  __chkstk_darwin(v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001FD844(v0 + OBJC_IVAR____TtC6FindMy20FMChooseMapViewModel_mapAttribution, (uint64_t)v3);
  v11 = sub_100053F2C(&qword_1005D8330);
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v3, 1, v11) == 1)
  {
    sub_1000051EC((uint64_t)v3, &qword_1005D8308);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
LABEL_4:
    sub_1000051EC((uint64_t)v6, (uint64_t *)&unk_1005D3470);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v12 = type metadata accessor for Logger(0);
    v13 = sub_100056D88(v12, (uint64_t)qword_1005F5748);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.error.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "FMChooseMapViewModel: No URL found", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }

    return;
  }

  sub_10005DAA0((uint64_t)v3 + *(int *)(v11 + 48), (uint64_t)v6, (uint64_t *)&unk_1005D3470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    goto LABEL_4;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v17 = type metadata accessor for Logger(0);
  v18 = sub_100056D88(v17, (uint64_t)qword_1005F5748);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "FMChooseMapViewModel: Open attribution URL", v21, 2u);
    swift_slowDealloc(v21, -1, -1);
  }

  v22 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  URL._bridgeToObjectiveC()(v23);
  v25 = v24;
  v26 = sub_10011D84C((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_100008000((unint64_t *)&qword_1005D2610, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_1004814BC);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v22, "openURL:options:completionHandler:", v25, isa, 0, swift_bridgeObjectRelease(v26).n128_f64[0]);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1001FC9C4@<X0>(_QWORD *a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  v4 = sub_100053F2C((uint64_t *)&unk_1005D3470);
  __chkstk_darwin(v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(v2, "string");
  if (v7)
  {
    *a1 = v7;
    v8 = v7;
    v9 = objc_msgSend(v2, "url");
    if (v9)
    {
      v10 = v9;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      v11 = type metadata accessor for URL(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v6, 0, 1, v11);
    }
    else
    {

      v14 = type metadata accessor for URL(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 1, 1, v14);
    }
    v15 = sub_100053F2C(&qword_1005D8330);
    sub_10005DAA0((uint64_t)v6, (uint64_t)a1 + *(int *)(v15 + 48), (uint64_t *)&unk_1005D3470);
    return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a1, 0, 1, v15);
  }
  else
  {
    v12 = sub_100053F2C(&qword_1005D8330);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a1, 1, 1, v12);
  }
}

uint64_t sub_1001FCB44@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  char v7;
  char v8;
  uint64_t v9;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100488198);
  v5 = swift_getKeyPath(&unk_1004881C0);
  static Published.subscript.getter(&v9, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  v7 = BYTE1(v9);
  v8 = BYTE2(v9);
  *a2 = v9;
  a2[1] = v7;
  a2[2] = v8;
  return result;
}

uint64_t sub_1001FCBD0(char *a1, uint64_t *a2)
{
  char v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t KeyPath;
  uint64_t v7;
  _BYTE v9[3];

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = *a2;
  KeyPath = swift_getKeyPath(&unk_100488198);
  v7 = swift_getKeyPath(&unk_1004881C0);
  v9[0] = v2;
  v9[1] = v3;
  v9[2] = v4;
  swift_retain(v5);
  return static Published.subscript.setter(v9, v5, KeyPath, v7);
}

uint64_t sub_1001FCC58(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  char *v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v38[5];
  _BYTE v39[3];
  _QWORD v40[3];

  v3 = v2;
  v6 = sub_100053F2C(&qword_1005D8308);
  __chkstk_darwin(v6);
  v8 = &v38[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_100053F2C(&qword_1005DB358);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = &v38[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = v3 + OBJC_IVAR____TtC6FindMy20FMChooseMapViewModel__availableModes;
  v40[0] = &off_10053F298;
  v14 = sub_100053F2C(&qword_1005DB2A8);
  Published.init(initialValue:)(v40, v14);
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v10 + 32))(v13, v12, v9);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC6FindMy20FMChooseMapViewModel_selectionSubscription) = 0;
  *(_QWORD *)(v3 + 16) = a1;
  if (a2)
  {
    swift_retain(a1);
    v15 = a2;
    sub_1001FC9C4(v8);

  }
  else
  {
    v16 = sub_100053F2C(&qword_1005D8330);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 1, 1, v16);
    swift_retain(a1);
  }
  sub_10005DAA0((uint64_t)v8, v3 + OBJC_IVAR____TtC6FindMy20FMChooseMapViewModel_mapAttribution, &qword_1005D8308);
  v17 = (char *)(*(_QWORD *)(a1 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_selectedMapMode);
  v18 = *v17;
  v19 = v17[1];
  v20 = v17[2];
  swift_beginAccess(v3 + OBJC_IVAR____TtC6FindMy20FMChooseMapViewModel__selection, v40, 33, 0);
  v39[0] = v18;
  v39[1] = v19;
  v39[2] = v20;
  Published.init(initialValue:)(v39, &type metadata for FMMapMode);
  swift_endAccess(v40);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v21 = type metadata accessor for Logger(0);
  v22 = sub_100056D88(v21, (uint64_t)qword_1005F5748);
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.default.getter(v23);
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v25 = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "FMChooseMapViewModel: Subscribe to selection controller", v25, 2u);
    swift_slowDealloc(v25, -1, -1);
  }

  v26 = *(_QWORD *)(a1 + 56);
  v27 = type metadata accessor for FMSelectionSubscription(0);
  v28 = swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
  v29 = v28 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
  *(_QWORD *)(v29 + 8) = 0;
  swift_unknownObjectWeakInit(v29);
  swift_retain(v26);
  v30 = swift_retain(v3);
  UUID.init()(v30);
  v31 = v28 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
  *(_QWORD *)(v31 + 8) = &off_1005508F8;
  swift_unknownObjectWeakAssign(v31, v3);
  swift_beginAccess(v26 + 16, v40, 33, 0);
  v32 = swift_retain(v28);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v32);
  v34 = *(_QWORD *)((*(_QWORD *)(v26 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v33 = *(_QWORD *)((*(_QWORD *)(v26 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v34 >= v33 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v33 > 1, v34 + 1, 1);
  v35 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v34, v28);
  specialized Array._endMutation()(v35);
  swift_endAccess(v40);
  swift_release(v26);
  swift_release(v3);
  swift_release(a1);

  v36 = *(_QWORD *)(v3 + OBJC_IVAR____TtC6FindMy20FMChooseMapViewModel_selectionSubscription);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC6FindMy20FMChooseMapViewModel_selectionSubscription) = v28;
  swift_release(v36);
  return v3;
}

void sub_1001FD000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[24];

  v1 = v0;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100056D88(v2, (uint64_t)qword_1005F5748);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMChooseMapViewModel: Unsubscribe to selection controller", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = OBJC_IVAR____TtC6FindMy20FMChooseMapViewModel_selectionSubscription;
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy20FMChooseMapViewModel_selectionSubscription);
  v9 = *(_QWORD *)(v1 + 16);
  if (!v8)
    goto LABEL_9;
  v10 = *(_QWORD *)(v9 + 56);
  swift_beginAccess(v10 + 16, v20, 33, 0);
  swift_retain(v8);
  swift_retain(v10);
  v11 = sub_100334CE8((uint64_t *)(v10 + 16), v8);
  v12 = v11;
  v13 = *(_QWORD *)(v10 + 16);
  if ((unint64_t)v13 >> 62)
  {
    if (v13 < 0)
      v19 = *(_QWORD *)(v10 + 16);
    else
      v19 = v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v10 + 16));
    v14 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(v13);
    if (v14 >= v12)
      goto LABEL_8;
  }
  else
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v14 >= v11)
    {
LABEL_8:
      sub_100200704(v12, v14);
      swift_endAccess(v20);
      swift_release(v10);
      swift_release(v8);
      v9 = *(_QWORD *)(v1 + 16);
LABEL_9:
      swift_release(v9);
      sub_1000051EC(v1 + OBJC_IVAR____TtC6FindMy20FMChooseMapViewModel_mapAttribution, &qword_1005D8308);
      v15 = v1 + OBJC_IVAR____TtC6FindMy20FMChooseMapViewModel__availableModes;
      v16 = sub_100053F2C(&qword_1005DB358);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      v17 = v1 + OBJC_IVAR____TtC6FindMy20FMChooseMapViewModel__selection;
      v18 = sub_100053F2C(&qword_1005DB360);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
      swift_release(*(_QWORD *)(v1 + v7));
      return;
    }
  }
  __break(1u);
}

uint64_t sub_1001FD234()
{
  uint64_t v0;

  sub_1001FD000();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1001FD258()
{
  return type metadata accessor for FMChooseMapViewModel(0);
}

uint64_t type metadata accessor for FMChooseMapViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_1005DB288;
  if (!qword_1005DB288)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMChooseMapViewModel);
  return result;
}

void sub_1001FD29C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[5];

  v8[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_1001FD384(319, &qword_1005DB298, &qword_1005D8330, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v3 <= 0x3F)
  {
    v8[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_1001FD384(319, &qword_1005DB2A0, &qword_1005DB2A8, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Published);
    if (v5 <= 0x3F)
    {
      v8[2] = *(_QWORD *)(v4 - 8) + 64;
      sub_1001FD3DC();
      if (v7 <= 0x3F)
      {
        v8[3] = *(_QWORD *)(v6 - 8) + 64;
        v8[4] = "\b";
        swift_updateClassMetadata2(a1, 256, 5, v8, a1 + 80);
      }
    }
  }
}

void sub_1001FD384(uint64_t a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = sub_10004058C(a3);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_1001FD3DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1005DB2B0)
  {
    v0 = type metadata accessor for Published(0, &type metadata for FMMapMode);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1005DB2B0);
  }
}

uint64_t sub_1001FD430(uint64_t a1, int a2)
{
  uint64_t KeyPath;
  uint64_t v5;
  __int16 v7;
  char v8;

  KeyPath = swift_getKeyPath(&unk_100488198);
  v5 = swift_getKeyPath(&unk_1004881C0);
  v7 = a2 & 0x101;
  v8 = BYTE2(a2) & 1;
  swift_retain(a1);
  return static Published.subscript.setter(&v7, a1, KeyPath, v5);
}

uint64_t sub_1001FD4B4@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;

  result = ObservableObject<>.objectWillChange.getter(*v1);
  *a1 = result;
  return result;
}

uint64_t sub_1001FD4DC(uint64_t a1, int a2)
{
  return sub_1001FD4F8(a2 & 0x10101);
}

void *sub_1001FD4EC()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_1001FD4F8(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint8_t *v25;
  unint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  _BYTE v36[12];
  int v37;
  _QWORD aBlock[5];
  uint64_t v39;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v36[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = &v36[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v12 = type metadata accessor for Logger(0);
  v13 = sub_100056D88(v12, (uint64_t)qword_1005F5748);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    v37 = a1;
    v17 = v11;
    v18 = v7;
    v19 = v4;
    v20 = v2;
    v21 = v9;
    v22 = v8;
    v23 = v5;
    v24 = v16;
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "FMChooseMapViewModel: <FMSelectionSubscriber> selectedMapMode update", v16, 2u);
    v25 = v24;
    v5 = v23;
    v8 = v22;
    v9 = v21;
    v2 = v20;
    v4 = v19;
    v7 = v18;
    v11 = v17;
    a1 = v37;
    swift_slowDealloc(v25, -1, -1);
  }

  v26 = sub_1000555A8();
  v27 = (void *)static OS_dispatch_queue.main.getter(v26);
  v28 = swift_allocObject(&unk_100550948, 27, 7);
  *(_QWORD *)(v28 + 16) = v2;
  *(_BYTE *)(v28 + 24) = a1 & 1;
  *(_BYTE *)(v28 + 25) = BYTE1(a1) & 1;
  *(_BYTE *)(v28 + 26) = BYTE2(a1) & 1;
  aBlock[4] = sub_1001FD808;
  v39 = v28;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_100550960;
  v29 = _Block_copy(aBlock);
  v30 = v39;
  swift_retain(v2);
  swift_release(v30);
  static DispatchQoS.unspecified.getter(v31);
  aBlock[0] = _swiftEmptyArrayStorage;
  v32 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v33 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v34 = sub_1000555E4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v33, v34, v4, v32);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v29);
  _Block_release(v29);

  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1001FD7E4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 27, 7);
}

uint64_t sub_1001FD808()
{
  uint64_t v0;
  int v1;
  int v2;

  if (*(_BYTE *)(v0 + 26))
    v1 = 0x10000;
  else
    v1 = 0;
  if (*(_BYTE *)(v0 + 25))
    v2 = 256;
  else
    v2 = 0;
  return sub_1001FD430(*(_QWORD *)(v0 + 16), v2 | *(unsigned __int8 *)(v0 + 24) | v1);
}

uint64_t sub_1001FD844(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C(&qword_1005D8308);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL MKCircle.isEqual(_:)(uint64_t a1)
{
  void *v1;
  unint64_t v2;
  id v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  _BOOL4 v25;
  _BOOL8 v26;
  id v28;
  _BYTE v29[24];
  uint64_t v30;

  sub_10014581C(a1, (uint64_t)v29);
  if (!v30)
  {
    sub_10005D03C((uint64_t)v29);
    return 0;
  }
  v2 = sub_1001FD9F0();
  if ((swift_dynamicCast(&v28, v29, (char *)&type metadata for Any + 8, v2, 6) & 1) == 0)
    return 0;
  v3 = v28;
  objc_msgSend(v28, "coordinate");
  v5 = v4;
  objc_msgSend(v1, "coordinate");
  if (v5 != v6
    || (objc_msgSend(v3, "coordinate"), v8 = v7, objc_msgSend(v1, "coordinate"), v8 != v9)
    || (objc_msgSend(v3, "radius"), v11 = v10, objc_msgSend(v1, "radius"), v11 != v12))
  {

    return 0;
  }
  objc_msgSend(v3, "boundingMapRect");
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v20 = v19;
  objc_msgSend(v1, "boundingMapRect");
  if (v14 == v24)
  {
    v25 = v18 == v22;
    if (v20 != v23)
      v25 = 0;
    v26 = v16 == v21 && v25;

  }
  else
  {
    v26 = 0;

  }
  return v26;
}

unint64_t sub_1001FD9F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005DB368;
  if (!qword_1005DB368)
  {
    v1 = objc_opt_self(MKCircle);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1005DB368);
  }
  return result;
}

uint64_t MKCircle.hash.getter()
{
  void *v0;
  double v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  double v13;

  objc_msgSend(v0, "coordinate");
  v2 = Double.hashValue.getter(v1);
  objc_msgSend(v0, "coordinate");
  v4 = Double.hashValue.getter(v3) ^ v2;
  objc_msgSend(v0, "radius");
  v6 = Double.hashValue.getter(v5);
  objc_msgSend(v0, "boundingMapRect");
  v8 = v4 ^ v6 ^ Double.hashValue.getter(v7);
  objc_msgSend(v0, "boundingMapRect");
  v10 = Double.hashValue.getter(v9);
  objc_msgSend(v0, "boundingMapRect");
  v12 = v10 ^ Double.hashValue.getter(v11);
  objc_msgSend(v0, "boundingMapRect");
  return v8 ^ v12 ^ Double.hashValue.getter(v13);
}

_QWORD *sub_1001FDBA0(uint64_t a1)
{
  objc_class *v1;
  id v3;
  _QWORD *result;

  v3 = objc_allocWithZone(v1);
  result = sub_100366F70(a1);
  *((_BYTE *)result + OBJC_IVAR____TtC6FindMy14FMTerminalView_isPeopleTab) = 1;
  return result;
}

id sub_1001FDC58()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPersonTerminalView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_1001FDC88(char a1, double a2)
{
  void *v2;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  void **v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  void *v17;
  void *v18;
  uint64_t v19;

  v5 = (void *)objc_opt_self(UIView);
  v6 = swift_allocObject(&unk_100550E30, 25, 7);
  *(_QWORD *)(v6 + 16) = v2;
  *(_BYTE *)(v6 + 24) = a1;
  v18 = sub_100202400;
  v19 = v6;
  v14 = _NSConcreteStackBlock;
  v15 = 1107296256;
  v16 = sub_100037DF8;
  v17 = &unk_100550E48;
  v7 = _Block_copy(&v14);
  v8 = v19;
  v9 = v2;
  swift_release(v8);
  objc_msgSend(v5, "animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:", 0x20000, v7, 0, 0.4, 0.0, 0.8, a2);
  _Block_release(v7);
  v10 = swift_allocObject(&unk_100550E80, 25, 7);
  *(_QWORD *)(v10 + 16) = v9;
  *(_BYTE *)(v10 + 24) = a1;
  v18 = sub_10020240C;
  v19 = v10;
  v14 = _NSConcreteStackBlock;
  v15 = 1107296256;
  v16 = sub_100037DF8;
  v17 = &unk_100550E98;
  v11 = _Block_copy(&v14);
  v12 = v19;
  v13 = v9;
  swift_release(v12);
  objc_msgSend(v5, "animateWithDuration:delay:options:animations:completion:", 0x20000, v11, 0, 0.4, 0.0);
  _Block_release(v11);
}

void sub_1001FDE20()
{
  void *v0;
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  void **v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;

  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "setUserInteractionEnabled:", 0);

    v3 = (void *)objc_opt_self(UIView);
    v4 = swift_allocObject(&unk_100550D40, 24, 7);
    *(_QWORD *)(v4 + 16) = v0;
    v16 = sub_10020234C;
    v17 = v4;
    v12 = _NSConcreteStackBlock;
    v13 = 1107296256;
    v14 = sub_100037DF8;
    v15 = &unk_100550D58;
    v5 = _Block_copy(&v12);
    v6 = v17;
    v7 = v0;
    swift_release(v6);
    v8 = swift_allocObject(&unk_100550D90, 24, 7);
    *(_QWORD *)(v8 + 16) = v7;
    v16 = sub_1002023A8;
    v17 = v8;
    v12 = _NSConcreteStackBlock;
    v13 = 1107296256;
    v14 = sub_10005D218;
    v15 = &unk_100550DA8;
    v9 = _Block_copy(&v12);
    v10 = v17;
    v11 = v7;
    swift_release(v10);
    objc_msgSend(v3, "animateWithDuration:animations:completion:", v5, v9, 0.1);
    _Block_release(v9);
    _Block_release(v5);
  }
  else
  {
    __break(1u);
  }
}

void sub_1001FDF9C()
{
  void *v0;
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  void **v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;

  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    objc_msgSend(v1, "setUserInteractionEnabled:", 0);

    v3 = (void *)objc_opt_self(UIView);
    v4 = swift_allocObject(&unk_100550C50, 24, 7);
    *(_QWORD *)(v4 + 16) = v0;
    v16 = sub_10020234C;
    v17 = v4;
    v12 = _NSConcreteStackBlock;
    v13 = 1107296256;
    v14 = sub_100037DF8;
    v15 = &unk_100550C68;
    v5 = _Block_copy(&v12);
    v6 = v17;
    v7 = v0;
    swift_release(v6);
    v8 = swift_allocObject(&unk_100550CA0, 24, 7);
    *(_QWORD *)(v8 + 16) = v7;
    v16 = sub_100202350;
    v17 = v8;
    v12 = _NSConcreteStackBlock;
    v13 = 1107296256;
    v14 = sub_10005D218;
    v15 = &unk_100550CB8;
    v9 = _Block_copy(&v12);
    v10 = v17;
    v11 = v7;
    swift_release(v10);
    objc_msgSend(v3, "animateWithDuration:animations:completion:", v5, v9, 0.1);
    _Block_release(v9);
    _Block_release(v5);
  }
  else
  {
    __break(1u);
  }
}

id sub_1001FE118(double a1, double a2)
{
  char *v2;
  uint64_t v5;
  id v6;
  id v7;
  id result;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  double v14;
  double v15;
  id v16;
  id v17;
  id v18;
  id v19;
  double v20;
  double top;
  double v22;
  double left;
  double v24;
  double bottom;
  double v26;
  double right;
  double v28;
  void *v29;
  double v30;
  double v31;
  double v32;

  v5 = v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent];
  v6 = objc_msgSend(v2, "traitCollection");
  v7 = objc_msgSend(v6, "horizontalSizeClass");

  if (v7 != (id)1)
  {
    if (qword_1005D1E80 != -1)
      swift_once(&qword_1005D1E80, sub_100008974);
    v11 = qword_1005F5980;
    result = objc_msgSend(v2, "view");
    if (result)
    {
      v12 = result;
      v13 = objc_msgSend(result, "window");

      if (v13)
      {
        objc_msgSend(v13, "bounds");
        v15 = v14;

      }
      else
      {
        v15 = 0.0;
      }
      v16 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
      v17 = objc_msgSend(v16, "keyWindow");

      if (v17
        && (v18 = objc_msgSend(v17, "rootViewController"), v17, v18)
        && (v19 = objc_msgSend(v18, "view"), v18, v19))
      {
        objc_msgSend(v19, "layoutMargins");
        top = v20;
        left = v22;
        bottom = v24;
        right = v26;

      }
      else
      {
        top = UIEdgeInsetsZero.top;
        left = UIEdgeInsetsZero.left;
        bottom = UIEdgeInsetsZero.bottom;
        right = UIEdgeInsetsZero.right;
      }
      v28 = *(double *)&xmmword_1005F5960;
      result = objc_msgSend(v2, "view");
      if (result)
      {
        v29 = result;
        v30 = v15 - right - *(double *)&qword_1005F5958;
        if (v11 != 1)
          v30 = left;
        objc_msgSend(result, "setFrame:", v30, top + *((double *)&xmmword_1005F5960 + 1), *(double *)&qword_1005F5958, a2 - v28 - top - bottom);

        v10 = *(void **)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_darkenerBackground];
        objc_msgSend(v10, "setHidden:", 1);
        goto LABEL_19;
      }
LABEL_24:
      __break(1u);
      return result;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  result = objc_msgSend(v2, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_23;
  }
  v9 = result;
  objc_msgSend(result, "setFrame:", 0.0, 0.0, a1, a2);

  v10 = *(void **)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_darkenerBackground];
  objc_msgSend(v10, "setHidden:", 0);
LABEL_19:
  v31 = dbl_1004883B0[v5];
  sub_100041F18(0, v31);
  v32 = 0.64 - v31;
  if (0.64 - v31 <= 0.0)
    v32 = 0.0;
  return objc_msgSend(v10, "setAlpha:", *(double *)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration] * v32);
}

void sub_1001FE438(char a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  id v8;
  id v9;
  Swift::String v10;
  void *object;
  NSString v12;
  unint64_t v13;
  id v14;

  v2 = *(void **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardContainer)
                + OBJC_IVAR____TtC6FindMy19FMCardContainerView_grabber);
  v14 = v2;
  if (a1)
  {
    if (a1 == 1)
    {
      v3 = v2;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(0xE000000000000000);
      v4 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v5 = 0xD000000000000022;
      v13 = 0x80000001004B4DB0;
      v6 = 0x80000001004B4D90;
      v7 = 0xD000000000000010;
    }
    else
    {
      v9 = v2;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(0xE000000000000000);
      v4 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v5 = 0xD000000000000021;
      v13 = 0x80000001004B4DE0;
      v7 = 0x5A49535F44524143;
      v6 = 0xEF4C4C414D535F45;
    }
  }
  else
  {
    v8 = v2;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(0xE000000000000000);
    v4 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v5 = 0xD000000000000020;
    v13 = 0x80000001004B4E10;
    v7 = 0x5A49535F44524143;
    v6 = 0xEE004C4C55465F45;
  }
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v7, (Swift::String_optional)0, (NSBundle)v4, v10, *(Swift::String *)&v5)._object;

  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v14, "setAccessibilityValue:", v12);

}

uint64_t sub_1001FE688()
{
  double v0;
  BOOL v1;
  BOOL v2;
  char v3;

  sub_1000421B0();
  v1 = v0 < -1.0;
  if (v0 > 0.3)
    v1 = 1;
  v2 = v0 < 0.3;
  if (v0 > 0.85)
    v2 = 1;
  v3 = v1 && v2;
  sub_1001FDC88(v1 && v2, 0.4);
  sub_1001FE438(v3);
  return 1;
}

uint64_t sub_1001FE6FC()
{
  double v0;
  char v2;

  sub_1000421B0();
  if (v0 > 0.3 || v0 < -1.0)
    v2 = 2;
  else
    v2 = 1;
  sub_1001FDC88(v2, 0.4);
  sub_1001FE438(v2);
  return 1;
}

void sub_1001FE754(char a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X10 }
}

Swift::Int sub_1001FE7A8()
{
  uint64_t v0;
  uint64_t v2;

  String.hash(into:)(&v2, 0x744965766F6D6572, v0);
  swift_bridgeObjectRelease(v0);
  return Hasher._finalize()();
}

Swift::Int sub_1001FE824(char a1)
{
  Swift::UInt64 v2;
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, 0);
  if ((a1 & 1) != 0)
    v2 = 0x4050800000000000;
  else
    v2 = 0x4043000000000000;
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

Swift::Int sub_1001FE878(char a1)
{
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(qword_100488398[a1]);
  return Hasher._finalize()();
}

Swift::Int sub_1001FE8C8(char a1)
{
  Swift::UInt64 v2;
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, 0);
  if ((a1 & 1) != 0)
    v2 = 0x4050800000000000;
  else
    v2 = 0x403E000000000000;
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

Swift::Int sub_1001FE91C(char a1)
{
  unint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, 0);
  if ((a1 & 1) != 0)
    v2 = 0xD000000000000013;
  else
    v2 = 0xD000000000000010;
  if ((a1 & 1) != 0)
    v3 = 0x80000001004A4AF0;
  else
    v3 = 0x80000001004A4AD0;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

void sub_1001FE9A0(char a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X10 }
}

Swift::Int sub_1001FE9E8()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x79656B2D636F6CLL, 0xE700000000000000);
  swift_bridgeObjectRelease(0xE700000000000000);
  return Hasher._finalize()();
}

BOOL sub_1001FEA7C(char *a1, char *a2)
{
  return dbl_1004883B0[*a1] == dbl_1004883B0[*a2];
}

Swift::Int sub_1001FEAA0()
{
  char *v0;

  return sub_1001FE878(*v0);
}

void sub_1001FEAA8()
{
  char *v0;

  Hasher._combine(_:)(qword_100488398[*v0]);
}

Swift::Int sub_1001FEADC(uint64_t a1)
{
  char *v1;

  return sub_100366E4C(a1, *v1);
}

double *sub_1001FEAE4@<X0>(double *result@<X0>, char *a2@<X8>)
{
  double v2;
  char v3;

  v2 = *result;
  if (*result == 0.0)
  {
    *a2 = 0;
  }
  else if (v2 == 0.64)
  {
    *a2 = 1;
  }
  else
  {
    if (v2 == 1.0)
      v3 = 2;
    else
      v3 = 3;
    *a2 = v3;
  }
  return result;
}

double sub_1001FEB30@<D0>(double *a1@<X8>)
{
  char *v1;
  double result;

  result = dbl_1004883B0[*v1];
  *a1 = result;
  return result;
}

id sub_1001FEB48(uint64_t a1, uint64_t a2)
{
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char *v9;
  id v10;
  double v11;
  double v12;
  double v13;
  double v14;
  void *v15;
  id v16;
  double v17;
  id result;
  void *v19;
  double v20;
  double v21;
  void *v22;
  double v23;
  double v24;
  void *v25;
  double v26;
  double v27;
  CGFloat v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  double v35;
  id v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  os_log_type_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  CGRect v54;

  v4 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v5 = objc_msgSend(v4, "delegate");

  if (!v5)
    goto LABEL_9;
  v6 = type metadata accessor for FMAppDelegate();
  v7 = swift_dynamicCastClass(v5, v6);
  if (!v7)
  {
    swift_unknownObjectRelease(v5);
    goto LABEL_9;
  }
  v8 = *(void **)(v7 + OBJC_IVAR____TtC6FindMy13FMAppDelegate_mainViewController);
  v9 = v8;
  swift_unknownObjectRelease(v5);
  if (!v8)
  {
LABEL_9:
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v39 = type metadata accessor for Logger(0);
    v40 = sub_100056D88(v39, (uint64_t)qword_1005F5748);
    v41 = static os_log_type_t.error.getter(v40);
    v42 = v41;
    v43 = Logger.logObject.getter(v41);
    v44 = v42;
    if (os_log_type_enabled(v43, v42))
    {
      v45 = (uint8_t *)swift_slowAlloc(12, -1);
      v46 = swift_slowAlloc(32, -1);
      v53 = v46;
      *(_DWORD *)v45 = 136315138;
      v52 = sub_100056DA0(0xD000000000000026, 0x80000001004B4D20, &v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53);
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "%s", v45, 0xCu);
      swift_arrayDestroy(v46, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v46, -1, -1);
      swift_slowDealloc(v45, -1, -1);
    }

    v48 = Logger.logObject.getter(v47);
    v49 = static os_log_type_t.error.getter(v48);
    if (os_log_type_enabled(v48, v49))
    {
      v50 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v50 = 0;
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "FMCardContainerConfiguration: Couldn't find MainViewController's view", v50, 2u);
      swift_slowDealloc(v50, -1, -1);
    }

    v51 = objc_msgSend((id)objc_opt_self(UISheetPresentationControllerDetent), "mediumDetent");
    v38 = UISheetPresentationControllerDetent.resolvedValue(in:)(a1);

    return (id)v38;
  }
  v10 = *(id *)&v9[OBJC_IVAR____TtC6FindMy20FMMainViewController_initialCardContainer];

  sub_1000422D0();
  v12 = v11;
  sub_10004260C();
  v14 = *(double *)(a2 + 32) + (v12 - v13) * 0.64;
  v15 = (void *)objc_opt_self(UIScreen);
  v16 = objc_msgSend(v15, "mainScreen");
  v17 = UIRoundToScreenScale(v14);

  result = objc_msgSend(v10, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_18;
  }
  v19 = result;
  objc_msgSend(result, "safeAreaInsets");
  v21 = v20;

  result = objc_msgSend(v10, "view");
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v22 = result;
  objc_msgSend(result, "safeAreaInsets");
  v24 = v23;

  result = objc_msgSend(v10, "view");
  if (result)
  {
    v25 = result;
    v26 = v21 + v24;
    objc_msgSend(result, "bounds");
    v28 = v27;
    v30 = v29;
    v32 = v31;
    v34 = v33;

    v54.origin.x = v28;
    v54.origin.y = v30;
    v54.size.width = v32;
    v54.size.height = v34;
    v35 = CGRectGetHeight(v54) - v26 - v17;
    v36 = objc_msgSend(v15, "mainScreen");
    v37 = UIRoundToScreenScale(v35);

    return *(id *)&v37;
  }
LABEL_19:
  __break(1u);
  return result;
}

void sub_1001FEF84(char a1)
{
  sub_100009A44(a1, (SEL *)&selRef_viewWillAppear_);
}

void sub_1001FEF90(char a1)
{
  sub_100009A44(a1, (SEL *)&selRef_viewWillDisappear_);
}

void sub_1001FEFE4(_BYTE *a1, char a2)
{
  id v4;
  id v5;

  sub_100041F18(0, dbl_1004883B0[a2]);
  a1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent] = a2;
  sub_10000EF20();
  v4 = objc_msgSend(a1, "view");
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, "layoutIfNeeded");

  }
  else
  {
    __break(1u);
  }
}

id sub_1001FF068(uint64_t a1, char a2)
{
  double v2;

  v2 = 0.64 - dbl_1004883B0[a2];
  if (v2 <= 0.0)
    v2 = 0.0;
  return objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_darkenerBackground), "setAlpha:", v2 * *(double *)(a1 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration));
}

void sub_1001FF21C(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t (*v4)(uint64_t, uint64_t);
  id v5;
  id v6;

  v1 = *(void **)(a1 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController);
  if (v1)
  {
    v2 = *(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)(a1
                                               + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController));
    v4 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
    v5 = v1;
    v6 = (id)v4(ObjectType, v2);

    if (v6)
    {
      objc_msgSend(v6, "setContentOffset:animated:", 0, 0.0, 0.0);

    }
  }
}

void sub_1001FF2D0(uint64_t a1, _QWORD *a2)
{
  void *v3;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(uint64_t, uint64_t);
  id v7;
  uint64_t v8;
  void *v9;
  _QWORD v10[5];
  uint64_t v11;

  (*(void (**)(void))((swift_isaMask & *a2) + 0x2F0))();
  v3 = *(void **)((char *)a2 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController);
  if (v3)
  {
    v4 = *(_QWORD *)((char *)a2 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)((char *)a2
                                               + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController));
    v6 = *(void (**)(uint64_t, uint64_t))(v4 + 56);
    v7 = v3;
    v6(ObjectType, v4);

  }
  v8 = swift_allocObject(&unk_100550DE0, 32, 7);
  *(_QWORD *)(v8 + 16) = 0;
  *(_QWORD *)(v8 + 24) = 0;
  v10[4] = sub_100066830;
  v11 = v8;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_100037DF8;
  v10[3] = &unk_100550DF8;
  v9 = _Block_copy(v10);
  objc_msgSend(a2, "dismissViewControllerAnimated:completion:", 1, v9, swift_release(v11).n128_f64[0]);
  _Block_release(v9);
}

void sub_1001FF41C(uint64_t a1, _QWORD *a2)
{
  void *v3;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(uint64_t, uint64_t);
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  _QWORD v13[5];
  uint64_t v14;

  (*(void (**)(void))((swift_isaMask & *a2) + 0x2F0))();
  v3 = *(void **)((char *)a2 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController);
  if (v3)
  {
    v4 = *(_QWORD *)((char *)a2 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController + 8);
    ObjectType = swift_getObjectType(*(_QWORD *)((char *)a2
                                               + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController));
    v6 = *(void (**)(uint64_t, uint64_t))(v4 + 56);
    v7 = v3;
    v6(ObjectType, v4);

  }
  v8 = objc_msgSend(a2, "presentingViewController");
  v9 = swift_allocObject(&unk_100550CF0, 24, 7);
  *(_QWORD *)(v9 + 16) = v8;
  v13[4] = sub_100202358;
  v14 = v9;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_100037DF8;
  v13[3] = &unk_100550D08;
  v10 = _Block_copy(v13);
  v11 = v14;
  v12 = v8;
  objc_msgSend(a2, "dismissViewControllerAnimated:completion:", 1, v10, swift_release(v11).n128_f64[0]);
  _Block_release(v10);

}

void sub_1001FF594(void *a1, double a2, double a3)
{
  void *v3;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  void **v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  void *v18;
  uint64_t (*v19)();
  uint64_t v20;
  objc_super v21;

  v21.receiver = v3;
  v21.super_class = (Class)type metadata accessor for FMCardContainerViewController();
  objc_msgSendSuper2(&v21, "viewWillTransitionToSize:withTransitionCoordinator:", a1, a2, a3);
  v7 = swift_allocObject(&unk_100550BB0, 40, 7);
  *(_QWORD *)(v7 + 16) = v3;
  *(double *)(v7 + 24) = a2;
  *(double *)(v7 + 32) = a3;
  v19 = sub_100202320;
  v20 = v7;
  v15 = _NSConcreteStackBlock;
  v16 = 1107296256;
  v17 = sub_1003AA008;
  v18 = &unk_100550BC8;
  v8 = _Block_copy(&v15);
  v9 = v20;
  v10 = v3;
  swift_release(v9);
  v11 = swift_allocObject(&unk_100550C00, 40, 7);
  *(_QWORD *)(v11 + 16) = v10;
  *(double *)(v11 + 24) = a2;
  *(double *)(v11 + 32) = a3;
  v19 = sub_100202320;
  v20 = v11;
  v15 = _NSConcreteStackBlock;
  v16 = 1107296256;
  v17 = sub_1003AA008;
  v18 = &unk_100550C18;
  v12 = _Block_copy(&v15);
  v13 = v20;
  v14 = v10;
  objc_msgSend(a1, "animateAlongsideTransition:completion:", v8, v12, swift_release(v13).n128_f64[0]);
  _Block_release(v12);
  _Block_release(v8);
}

id sub_1001FF7BC(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  objc_class *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  id v17;
  objc_super v19;
  objc_super v20;

  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_tabBar] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_tabBarTopConstraint] = 0;
  v3 = OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration;
  v4 = qword_1005D1D00;
  v5 = v1;
  if (v4 != -1)
    swift_once(&qword_1005D1D00, sub_10005DE04);
  v6 = &v5[v3];
  v7 = qword_1005F5310;
  v8 = unk_1005F5300;
  *(_OWORD *)v6 = xmmword_1005F52F0;
  *((_OWORD *)v6 + 1) = v8;
  *((_QWORD *)v6 + 4) = v7;
  v5[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent] = 1;
  v5[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_dismissable] = 1;
  v9 = OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_darkenerBackground;
  v10 = (objc_class *)type metadata accessor for FMPassthroughView();
  v11 = objc_allocWithZone(v10);
  v11[OBJC_IVAR____TtC6FindMy17FMPassthroughView_enabled] = 1;
  *(_QWORD *)&v11[OBJC_IVAR____TtC6FindMy17FMPassthroughView_exemptViews] = _swiftEmptyArrayStorage;
  v20.receiver = v11;
  v20.super_class = v10;
  *(_QWORD *)&v5[v9] = objc_msgSendSuper2(&v20, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v12 = OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardShadow;
  *(_QWORD *)&v5[v12] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v13 = OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_closeButton;
  *(_QWORD *)&v5[v13] = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 7);
  v14 = OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardContainer;
  *(_QWORD *)&v5[v14] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMCardContainerView()), "init");
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_passthroughView] = 0;
  v5[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_isFirstLayoutCompleted] = 0;
  v5[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_isPanFromScrollView] = 0;
  v5[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_isPanningCard] = 0;
  v15 = &v5[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_startPosition];
  *(_QWORD *)v15 = 0;
  v15[8] = 1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_otherGesture] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_compactConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_regularConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_compactCardTopConstraint] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_regularCardTopConstraint] = 0;
  v16 = &v5[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;

  v19.receiver = v5;
  v19.super_class = (Class)type metadata accessor for FMCardContainerViewController();
  v17 = objc_msgSendSuper2(&v19, "initWithCoder:", a1);

  return v17;
}

id sub_1001FFA34()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMCardContainerViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t storeEnumTagSinglePayload for FMCardContainerLockingPercent(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1001FFB98 + 4 * byte_10048823E[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1001FFBCC + 4 * byte_100488239[v4]))();
}

uint64_t sub_1001FFBCC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001FFBD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1001FFBDCLL);
  return result;
}

uint64_t sub_1001FFBE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1001FFBF0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1001FFBF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1001FFBFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMCardContainerLockingPercent()
{
  return &type metadata for FMCardContainerLockingPercent;
}

ValueMetadata *type metadata accessor for FMCardContainerConfiguration()
{
  return &type metadata for FMCardContainerConfiguration;
}

unint64_t sub_1001FFC2C()
{
  unint64_t result;

  result = qword_1005DB468;
  if (!qword_1005DB468)
  {
    result = swift_getWitnessTable(&unk_100488348, &type metadata for FMCardContainerLockingPercent);
    atomic_store(result, (unint64_t *)&qword_1005DB468);
  }
  return result;
}

void sub_1001FFC70(uint64_t a1, uint64_t a2, void *a3)
{
  sub_100200B8C(a3);
}

void sub_1001FFC78(uint64_t a1, uint64_t a2, void *a3)
{
  sub_100201294(a3);
}

uint64_t sub_1001FFC80(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t result;
  char v13;

  v3 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v3 < 0 || (v3 & 0x4000000000000000) != 0)
  {
    v3 = sub_10020012C(v3);
    *v1 = v3;
  }
  v5 = v3 & 0xFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      v9 = v5 + 8 * a1;
      v10 = *(_QWORD *)(v9 + 32);
      v11 = memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x10) = v7;
      specialized Array._endMutation()(v11);
      return v10;
    }
  }
  v13 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v13, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001FFD68(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t result;
  char v13;

  v3 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v3 < 0 || (v3 & 0x4000000000000000) != 0)
  {
    v3 = sub_10020012C(v3);
    *v1 = v3;
  }
  v5 = v3 & 0xFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      v9 = v5 + 8 * a1;
      v10 = *(_QWORD *)(v9 + 32);
      v11 = memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(_QWORD *)(v5 + 16) = v7;
      specialized Array._endMutation()(v11);
      return v10;
    }
  }
  v13 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v13, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1001FFE48@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t *v2;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  unint64_t v12;

  v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native(*v2) & 1) == 0)
    v5 = sub_100200194(v5);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  v7 = v6 - 1;
  v8 = *(_QWORD *)(type metadata accessor for FMPeopleCellViewModel(0) - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = v5 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)) + v9 * a1;
  result = sub_100201B28(v10, a2);
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
    __break(1u);
    return result;
  }
  v12 = v10 + v9;
  if (v9 > 0 || v10 >= v10 + v9 + v9 * (v7 - a1))
  {
    result = swift_arrayInitWithTakeFrontToBack(v10, v12);
  }
  else if (v9)
  {
    result = swift_arrayInitWithTakeBackToFront(v10, v12);
  }
  *(_QWORD *)(v5 + 16) = v7;
  *v2 = v5;
  return result;
}

char *sub_1001FFF7C(uint64_t a1, int64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v5;
  int64_t v6;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char *result;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v5 = (_QWORD *)*v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v3);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v10 > v5[3] >> 1)
  {
    if (v6 <= v10)
      v13 = v6 + v9;
    else
      v13 = v6;
    v5 = sub_1000702E8(isUniquelyReferenced_nonNull_native, v13, 1, v5);
  }
  v14 = &v5[a1 + 4];
  v15 = sub_100053F2C(&qword_1005D2B80);
  result = (char *)swift_arrayDestroy(v14, v8, v15);
  if (!v9)
    goto LABEL_20;
  v17 = v5[2];
  v18 = __OFSUB__(v17, a2);
  v19 = v17 - a2;
  if (v18)
    goto LABEL_26;
  if ((v19 & 0x8000000000000000) == 0)
  {
    result = (char *)(v14 + 1);
    v20 = &v5[a2 + 4];
    if (v14 + 1 != v20 || result >= (char *)&v20[v19])
      result = (char *)memmove(result, v20, 8 * v19);
    v21 = v5[2];
    v18 = __OFADD__(v21, v9);
    v22 = v21 + v9;
    if (!v18)
    {
      v5[2] = v22;
LABEL_20:
      *v14 = a3;
      *v3 = v5;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  v23 = 2;
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v23, 1046, 0);
  __break(1u);
  return result;
}

_QWORD *sub_100200104(_QWORD *a1)
{
  return sub_10007057C(0, a1[2], 0, a1);
}

uint64_t sub_100200118(unint64_t a1)
{
  return sub_100070284(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_10020012C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v4 = a1;
    else
      v4 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v4);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, v2, 0, a1);
}

uint64_t sub_100200194(unint64_t a1)
{
  return sub_10005951C(0, *(_QWORD *)(a1 + 16), 0, a1);
}

void (*sub_1002001A8(void (**a1)(id *), unint64_t a2, uint64_t a3))(_QWORD *)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1002002D4(v6, a2, a3);
  return sub_1002001FC;
}

void (*sub_100200200(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(_QWORD *)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_100200340(v6, a2, a3);
  return sub_1002001FC;
}

void (*sub_100200254(uint64_t **a1, unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t *v6;

  v6 = (uint64_t *)malloc(0x28uLL);
  *a1 = v6;
  v6[4] = (uint64_t)sub_1002003AC(v6, a2, a3);
  return sub_1002001FC;
}

void sub_1002002A8(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_1002002D4(void (*result)(id *), unint64_t a2, uint64_t a3))(id *)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return j__s6FindMy26FMEditableMessageViewStyleVwxx;
  }
  __break(1u);
  return result;
}

void (*sub_100200340(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return destroy for FMEditableMessageViewStyle;
  }
  __break(1u);
  return result;
}

uint64_t *sub_1002003AC(uint64_t *result, unint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_unknownObjectRetain(*(_QWORD *)(a3 + 8 * a2 + 32));
LABEL_5:
    *v3 = v4;
    return (uint64_t *)sub_100200418;
  }
  __break(1u);
  return result;
}

uint64_t sub_100200418(_QWORD *a1)
{
  return swift_unknownObjectRelease(*a1);
}

uint64_t sub_100200420()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *v0;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject(*v0);
  *v0 = v1;
  if (!(_DWORD)result || v1 < 0 || (v1 & 0x4000000000000000) != 0)
  {
    result = sub_10020012C(v1);
    v1 = result;
    *v0 = result;
  }
  v3 = v1 & 0xFFFFFFFFFFFFFF8;
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    v5 = v4 - 1;
    v6 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 8 * v5 + 0x20);
    *(_QWORD *)(v3 + 16) = v5;
    specialized Array._endMutation()(result);
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10020048C(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  id v19;
  char *v20;
  void *v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t ObjectType;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  id v28;
  double v29;
  double v30;
  double v31;
  id v32;

  v7 = objc_msgSend(a1, "view");
  if (v7)
  {
    v32 = v7;
    sub_1000428F0();
    objc_msgSend(a2, "addChildViewController:", a1);
    v8 = *(_QWORD *)&a2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardContainer];
    v9 = OBJC_IVAR____TtC6FindMy19FMCardContainerView_bluredBackground;
    v10 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v8
                                                                + OBJC_IVAR____TtC6FindMy19FMCardContainerView_bluredBackground), "contentView"));
    objc_msgSend(v10, "bounds");
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v18 = v17;

    objc_msgSend(v32, "setFrame:", v12, v14, v16, v18);
    objc_msgSend(v32, "setAutoresizingMask:", 18);
    objc_msgSend(v32, "setPreservesSuperviewLayoutMargins:", 1);
    v19 = objc_msgSend(*(id *)(v8 + v9), "contentView");
    objc_msgSend(v19, "addSubview:", v32);

    objc_msgSend(a1, "didMoveToParentViewController:", a2);
    v20 = &a2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController];
    v21 = *(void **)&a2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController];
    *(_QWORD *)v20 = a1;
    *((_QWORD *)v20 + 1) = a4;
    v22 = a1;

    v23 = *(void **)v20;
    if (*(_QWORD *)v20)
    {
      v24 = *((_QWORD *)v20 + 1);
      ObjectType = swift_getObjectType(*(_QWORD *)v20);
      v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32);
      v27 = a2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent];
      v28 = v23;
      v26(v27, ObjectType, v24);

      v22 = v28;
    }

    objc_msgSend(v32, "layoutIfNeeded");
    sub_1000421B0();
    sub_100041F18(0, v29);
    sub_1000421B0();
    v31 = 0.64 - v30;
    if (v31 <= 0.0)
      v31 = 0.0;
    objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_darkenerBackground], "setAlpha:", v31 * *(double *)&a2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration]);

  }
}

uint64_t sub_1002006EC(uint64_t a1, uint64_t a2)
{
  return sub_10000826C(a1, a2, type metadata accessor for FMDevicesSubscription);
}

uint64_t sub_1002006F8(uint64_t a1, uint64_t a2)
{
  return sub_10000826C(a1, a2, type metadata accessor for FMLocationSubscription);
}

uint64_t sub_100200704(uint64_t a1, uint64_t a2)
{
  return sub_10000826C(a1, a2, type metadata accessor for FMSelectionSubscription);
}

uint64_t sub_100200710(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  if (!((unint64_t)a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
    return 0;
  }
LABEL_13:
  if (a1 < 0)
    v10 = a1;
  else
    v10 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v4 = _CocoaArrayWrapper.endIndex.getter(v10);
  swift_bridgeObjectRelease(a1);
  if (!v4)
    return 0;
LABEL_3:
  sub_100006C5C(0, (unint64_t *)&qword_1005D7A60, NSObject_ptr);
  v5 = 0;
  a2 = *(_QWORD *)(a2 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardContainer);
  while (1)
  {
    v6 = (a1 & 0xC000000000000001) != 0
       ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, a1)
       : *(id *)(a1 + 8 * v5 + 32);
    v7 = v6;
    v8 = static NSObject.== infix(_:_:)(v6, a2);

    if ((v8 & 1) != 0)
      return v5;
    v9 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    ++v5;
    if (v9 == v4)
      return 0;
  }
}

uint64_t sub_100200834(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v5 = *a1;
  swift_bridgeObjectRetain(*a1);
  v7 = sub_100200710(v6, a2);
  v9 = v8;
  v10 = v2;
  swift_bridgeObjectRelease(v5);
  if (v2)
    return v7;
  if ((v9 & 1) == 0)
  {
    v11 = v7 + 1;
    if (__OFADD__(v7, 1))
      goto LABEL_57;
    v9 = *a1;
    if ((unint64_t)*a1 >> 62)
    {
LABEL_58:
      if (v9 < 0)
        v32 = v9;
      else
        v32 = v9 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v9);
      v33 = _CocoaArrayWrapper.endIndex.getter(v32);
      swift_bridgeObjectRelease(v9);
      if (v11 != v33)
        goto LABEL_6;
    }
    else if (v11 != *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      v9 = sub_100006C5C(0, (unint64_t *)&qword_1005D7A60, NSObject_ptr);
      v12 = *(_QWORD *)(a2 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardContainer);
      v11 = v7 + 5;
      v36 = v10;
      while (1)
      {
        v13 = v11 - 4;
        v14 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11 - 4, v14);
        }
        else
        {
          if ((v13 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
            goto LABEL_58;
          }
          if (v13 >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_48;
          v15 = *(id *)(v14 + 8 * v11);
        }
        v16 = v15;
        a2 = static NSObject.== infix(_:_:)(v15, v12);

        if ((a2 & 1) == 0)
          break;
LABEL_32:
        v27 = v11 - 3;
        if (__OFADD__(v13, 1))
          goto LABEL_49;
        a2 = *a1;
        if ((unint64_t)*a1 >> 62)
        {
          if (a2 < 0)
            v29 = *a1;
          else
            v29 = a2 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(*a1);
          v28 = _CocoaArrayWrapper.endIndex.getter(v29);
          swift_bridgeObjectRelease(a2);
        }
        else
        {
          v28 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        ++v11;
        if (v27 == v28)
          return v7;
      }
      if (v13 == v7)
      {
LABEL_31:
        if (__OFADD__(v7++, 1))
          goto LABEL_50;
        goto LABEL_32;
      }
      a2 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v7, *a1);
        a2 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_17:
          if ((v13 & 0x8000000000000000) != 0)
            goto LABEL_53;
          if (v13 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_54;
          v18 = *(id *)(a2 + 8 * v11);
          goto LABEL_20;
        }
      }
      else
      {
        if ((v7 & 0x8000000000000000) != 0)
          goto LABEL_51;
        if (v7 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_52;
        v17 = *(id *)(a2 + 8 * v7 + 32);
        if ((a2 & 0xC000000000000001) == 0)
          goto LABEL_17;
      }
      v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v11 - 4, a2);
      a2 = *a1;
LABEL_20:
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(a2);
      *a1 = a2;
      if (!isUniquelyReferenced_nonNull_bridgeObject || a2 < 0 || (a2 & 0x4000000000000000) != 0)
      {
        a2 = sub_10020012C(a2);
        *a1 = a2;
      }
      v20 = *(void **)((a2 & 0xFFFFFFFFFFFFFF8) + 8 * v7 + 0x20);
      *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 8 * v7 + 0x20) = v18;

      specialized Array._endMutation()(v21);
      a2 = *a1;
      v22 = swift_isUniquelyReferenced_nonNull_bridgeObject(*a1);
      *a1 = a2;
      if (!v22 || a2 < 0 || (a2 & 0x4000000000000000) != 0)
      {
        a2 = sub_10020012C(a2);
        *a1 = a2;
      }
      v10 = v36;
      if ((v13 & 0x8000000000000000) != 0)
        goto LABEL_55;
      v23 = a2 & 0xFFFFFFFFFFFFFF8;
      if (v13 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_56;
      v24 = *(void **)(v23 + 8 * v11);
      *(_QWORD *)(v23 + 8 * v11) = v17;

      a2 = (uint64_t)a1;
      specialized Array._endMutation()(v25);
      goto LABEL_31;
    }
    return v7;
  }
  v30 = *a1;
  if (!((unint64_t)*a1 >> 62))
    return *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v30 < 0)
    v34 = *a1;
  else
    v34 = v30 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*a1);
  v35 = _CocoaArrayWrapper.endIndex.getter(v34);
  swift_bridgeObjectRelease(v30);
  return v35;
}

void sub_100200B8C(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  id v25;
  double v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  char *v56;
  void (*v57)(char *, uint64_t);
  char *v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  id v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD aBlock[5];
  uint64_t v82;

  v2 = v1;
  v73 = type metadata accessor for DispatchWorkItemFlags(0);
  v75 = *(_QWORD *)(v73 - 8);
  __chkstk_darwin(v73);
  v5 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v78 = *(_QWORD *)(v6 - 8);
  v79 = v6;
  __chkstk_darwin(v6);
  v77 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = type metadata accessor for DispatchTime(0);
  v8 = *(_QWORD *)(v76 - 8);
  v9 = __chkstk_darwin(v76);
  v11 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v74 = (char *)&v71 - v12;
  v13 = *(void **)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_tabBar];
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v14, "setAlpha:", 0.0);
    v15 = *(void **)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_tabBarTopConstraint];
    if (v15)
    {
      v16 = v15;
      objc_msgSend(v16, "setConstant:", 300.0);

    }
  }
  v80 = v8;
  v17 = objc_msgSend(v2, "traitCollection");
  v18 = objc_msgSend(v17, "horizontalSizeClass");

  if (v18 == (id)1)
  {
    sub_1000421B0();
    if (v19 < 0.64)
    {
      sub_100041F18(0, 0.64);
      objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_darkenerBackground], "setAlpha:", *(double *)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration] * 0.0);
    }
  }
  else
  {
    v20 = type metadata accessor for FMCardContainerViewController();
    v21 = swift_dynamicCastClass(a1, v20);
    if (v21)
    {
      v22 = v21;
      v23 = OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent;
      v24 = dbl_1004883B0[v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent]];
      v25 = a1;
      sub_100041F18(0, v24);
      v26 = 0.64 - dbl_1004883B0[v2[v23]];
      if (v26 <= 0.0)
        v26 = 0.0;
      objc_msgSend(*(id *)(v22 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_darkenerBackground), "setAlpha:", v26 * *(double *)(v22 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration));
      *(_BYTE *)(v22 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent) = v2[v23];
      sub_10000EF20();

    }
  }
  v27 = objc_msgSend(v2, "view");
  if (!v27)
    goto LABEL_24;
  v28 = v27;
  v29 = type metadata accessor for FMPassthroughView();
  v30 = swift_dynamicCastClass(v28, v29);
  if (!v30)
    goto LABEL_23;
  v31 = v30;
  v32 = objc_msgSend(a1, "view");
  if (!v32)
    goto LABEL_23;
  v33 = v32;
  v34 = swift_dynamicCastClass(v32, v29);
  if (!v34)
  {

LABEL_23:
    goto LABEL_24;
  }
  v35 = v34;
  v36 = (_QWORD *)(v31 + OBJC_IVAR____TtC6FindMy17FMPassthroughView_exemptViews);
  swift_beginAccess(v36, aBlock, 33, 0);
  v72 = v33;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v72);
  v38 = *(_QWORD *)((*v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v37 = *(_QWORD *)((*v36 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v38 >= v37 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v37 > 1, v38 + 1, 1);
  v39 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v38, v35);
  specialized Array._endMutation()(v39);
  swift_endAccess(aBlock);
  v40 = *(char **)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_passthroughView];
  if (!v40)
    goto LABEL_33;
  v41 = (uint64_t *)&v40[OBJC_IVAR____TtC6FindMy17FMPassthroughView_exemptViews];
  swift_beginAccess(&v40[OBJC_IVAR____TtC6FindMy17FMPassthroughView_exemptViews], aBlock, 33, 0);
  v42 = v2;
  v71 = v40;
  v43 = sub_100200834(v41, (uint64_t)v42);

  v44 = *v41;
  if ((unint64_t)*v41 >> 62)
  {
    if (v44 < 0)
      v70 = *v41;
    else
      v70 = v44 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v41);
    v45 = _CocoaArrayWrapper.endIndex.getter(v70);
    swift_bridgeObjectRelease(v44);
    if (v45 >= v43)
      goto LABEL_21;
    goto LABEL_32;
  }
  v45 = *(_QWORD *)((v44 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v45 < v43)
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    return;
  }
LABEL_21:
  sub_100201E44(v43, v45, (unint64_t *)&qword_1005DB470, UIView_ptr);
  swift_endAccess(aBlock);

LABEL_24:
  v46 = *(_BYTE **)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardContainer];
  v46[OBJC_IVAR____TtC6FindMy19FMCardContainerView_appearance] = 1;
  v47 = *(void **)&v46[OBJC_IVAR____TtC6FindMy19FMCardContainerView_darkeningView];
  objc_msgSend(v47, "setAlpha:", 0.1);
  v48 = objc_msgSend(v46, "traitCollection");
  v49 = objc_msgSend(v48, "horizontalSizeClass");

  v50 = objc_msgSend(*(id *)&v46[OBJC_IVAR____TtC6FindMy19FMCardContainerView_bluredBackground], "layer");
  v51 = v50;
  if (v49 == (id)1)
  {
    objc_msgSend(v50, "setMaskedCorners:", 3);

    v52 = objc_msgSend(v47, "layer");
    objc_msgSend(v52, "setMaskedCorners:", 3);
  }
  else
  {
    objc_msgSend(v50, "setMaskedCorners:", 15);

    v52 = objc_msgSend(v47, "layer");
    objc_msgSend(v52, "setMaskedCorners:", 15);
  }
  v53 = v80;

  v54 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v55 = (void *)static OS_dispatch_queue.main.getter(v54);
  static DispatchTime.now()(v55);
  v56 = v74;
  + infix(_:_:)(v11, 0.4);
  v57 = *(void (**)(char *, uint64_t))(v53 + 8);
  v58 = v11;
  v59 = v76;
  v57(v58, v76);
  v60 = swift_allocObject(&unk_100550B60, 24, 7);
  *(_QWORD *)(v60 + 16) = v2;
  aBlock[4] = sub_100201854;
  v82 = v60;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_100550B78;
  v61 = _Block_copy(aBlock);
  v62 = v82;
  v63 = v2;
  swift_release(v62);
  v64 = v77;
  static DispatchQoS.unspecified.getter(v65);
  aBlock[0] = _swiftEmptyArrayStorage;
  v66 = sub_100056580();
  v67 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v68 = sub_1000555E4();
  v69 = v73;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v67, v68, v73, v66);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v56, v64, v5, v61);
  _Block_release(v61);

  (*(void (**)(char *, uint64_t))(v75 + 8))(v5, v69);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v64, v79);
  v57(v56, v59);
}

void sub_100201294(void *a1)
{
  char *v1;
  char *v2;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t *v20;
  void *v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t (*v24)(uint64_t, uint64_t);
  id v25;
  void *v26;
  _BYTE *v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  id v41;
  double v42;
  id v43;
  void *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE v55[24];

  v2 = v1;
  v4 = *(void **)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_tabBar];
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v5, "setAlpha:", 1.0);
    v6 = *(void **)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_tabBarTopConstraint];
    if (v6)
      objc_msgSend(v6, "setConstant:", -48.0);
    v7 = objc_msgSend(v5, "superview");
    objc_msgSend(v7, "layoutIfNeeded");

  }
  v8 = objc_msgSend(v2, "view");
  if (v8)
  {
    v9 = v8;
    v10 = type metadata accessor for FMPassthroughView();
    v11 = swift_dynamicCastClass(v9, v10);
    if (v11)
    {
      v12 = (uint64_t)&OBJC_IVAR____TtC6FindMy17FMPassthroughView_exemptViews;
      v13 = (uint64_t *)(v11 + OBJC_IVAR____TtC6FindMy17FMPassthroughView_exemptViews);
      swift_beginAccess(v11 + OBJC_IVAR____TtC6FindMy17FMPassthroughView_exemptViews, v55, 33, 0);
      v14 = *v13;
      if ((unint64_t)*v13 >> 62)
      {
        if (v14 < 0)
          v48 = *v13;
        else
          v48 = v14 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(*v13);
        v15 = (char *)_CocoaArrayWrapper.endIndex.getter(v48);
        swift_bridgeObjectRelease(v14);
        if (v15)
          goto LABEL_9;
      }
      else
      {
        v15 = *(char **)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v15)
        {
LABEL_9:
          v16 = (void *)sub_100200420();
          if (v16)
            goto LABEL_13;
          v14 = *v13;
          if ((unint64_t)*v13 >> 62)
            goto LABEL_46;
          v17 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
          v18 = v17 - 1;
          if (!__OFSUB__(v17, 1))
          {
            do
            {
              v16 = (void *)sub_1001FFC80(v18);
LABEL_13:

              swift_endAccess(v55);
              v15 = *(char **)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_passthroughView];
              if (!v15)
                goto LABEL_53;
              v13 = *(uint64_t **)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardContainer];
              v14 = (uint64_t)&v15[*(_QWORD *)v12];
              swift_beginAccess(v14, v55, 33, 0);
              v12 = *(_QWORD *)v14;
              if (!(*(_QWORD *)v14 >> 62))
              {
                v19 = v15;
                v20 = v13;
LABEL_16:
                sub_100018544(0, 0, (uint64_t)v13, (unint64_t *)&qword_1005DB470, UIView_ptr);
                swift_endAccess(v55);

                goto LABEL_17;
              }
LABEL_41:
              if (v12 < 0)
                v49 = v12;
              else
                v49 = v12 & 0xFFFFFFFFFFFFFF8;
              v50 = v15;
              v51 = v13;
              swift_bridgeObjectRetain(v12);
              v52 = _CocoaArrayWrapper.endIndex.getter(v49);
              swift_bridgeObjectRelease(v12);
              if ((v52 & 0x8000000000000000) == 0)
                goto LABEL_16;
              __break(1u);
LABEL_46:
              if (v14 < 0)
                v53 = v14;
              else
                v53 = v14 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(v14);
              v54 = _CocoaArrayWrapper.endIndex.getter(v53);
              swift_bridgeObjectRelease(v14);
              v18 = v54 - 1;
            }
            while (!__OFSUB__(v54, 1));
          }
          __break(1u);
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
          return;
        }
      }
      __break(1u);
      goto LABEL_41;
    }
LABEL_17:

  }
  v21 = *(void **)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController];
  if (v21)
  {
    v22 = *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController + 8];
    ObjectType = swift_getObjectType(*(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController]);
    v24 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8);
    v25 = v21;
    v26 = (void *)v24(ObjectType, v22);

    if (v26)
    {
      objc_msgSend(v26, "setContentOffset:animated:", 0, 0.0, 0.0);

    }
  }
  v27 = *(_BYTE **)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardContainer];
  v27[OBJC_IVAR____TtC6FindMy19FMCardContainerView_appearance] = 0;
  v28 = *(void **)&v27[OBJC_IVAR____TtC6FindMy19FMCardContainerView_darkeningView];
  objc_msgSend(v28, "setAlpha:", 0.0);
  v29 = objc_msgSend(v27, "traitCollection");
  v30 = objc_msgSend(v29, "horizontalSizeClass");

  v31 = objc_msgSend(*(id *)&v27[OBJC_IVAR____TtC6FindMy19FMCardContainerView_bluredBackground], "layer");
  v32 = v31;
  if (v30 == (id)1)
  {
    objc_msgSend(v31, "setMaskedCorners:", 3);

    v33 = objc_msgSend(v28, "layer");
    objc_msgSend(v33, "setMaskedCorners:", 3);
  }
  else
  {
    objc_msgSend(v31, "setMaskedCorners:", 15);

    v33 = objc_msgSend(v28, "layer");
    objc_msgSend(v33, "setMaskedCorners:", 15);
  }

  v34 = objc_msgSend(v2, "traitCollection");
  v35 = objc_msgSend(v34, "horizontalSizeClass");

  if (v35 == (id)1)
  {
    sub_100041F18(0, 0.64);
    objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_darkenerBackground], "setAlpha:", *(double *)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration] * 0.0);
    v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent] = 1;
    sub_10000EF20();
  }
  else
  {
    v36 = type metadata accessor for FMCardContainerViewController();
    v37 = swift_dynamicCastClass(a1, v36);
    if (v37)
    {
      v38 = v37;
      v39 = OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent;
      v40 = dbl_1004883B0[v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent]];
      v41 = a1;
      sub_100041F18(0, v40);
      v42 = 0.64 - dbl_1004883B0[v2[v39]];
      if (v42 <= 0.0)
        v42 = 0.0;
      objc_msgSend(*(id *)(v38 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_darkenerBackground), "setAlpha:", v42 * *(double *)(v38 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration));
      *(_BYTE *)(v38 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent) = v2[v39];
      sub_10000EF20();

    }
  }
  v43 = objc_msgSend(v2, "view");
  if (!v43)
    goto LABEL_52;
  v44 = v43;
  v45 = objc_msgSend(v43, "superview");

  if (v45)
  {
    v46 = type metadata accessor for FMPassthroughView();
    v47 = swift_dynamicCastClass(v45, v46);
    if (v47)
      *(_BYTE *)(v47 + OBJC_IVAR____TtC6FindMy17FMPassthroughView_enabled) = 1;

  }
}

uint64_t sub_100201830()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100201854()
{
  uint64_t v0;

  sub_1001FF21C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10020185C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    v5 = *v3;
    if (!((unint64_t)*v3 >> 62))
    {
      v7 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v7 >= a2)
        goto LABEL_4;
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
  }
  if (v5 < 0)
    v21 = v5;
  else
    v21 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v7 = _CocoaArrayWrapper.endIndex.getter(v21);
  swift_bridgeObjectRelease(v5);
  if (v7 < v2)
    goto LABEL_34;
LABEL_4:
  v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v5 = *v3;
  if (!((unint64_t)*v3 >> 62))
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    v9 = v8 - v7;
    if (!__OFADD__(v8, v6))
      goto LABEL_8;
LABEL_42:
    __break(1u);
LABEL_43:
    if (v5 < 0)
      v23 = v5;
    else
      v23 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v12 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(v5);
    goto LABEL_15;
  }
LABEL_37:
  if (v5 < 0)
    v22 = v5;
  else
    v22 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v5);
  v8 = _CocoaArrayWrapper.endIndex.getter(v22);
  swift_bridgeObjectRelease(v5);
  v9 = v8 + v6;
  if (__OFADD__(v8, v6))
    goto LABEL_42;
LABEL_8:
  v5 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v3);
  *v3 = v5;
  v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v8 = 1;
  }
  if ((unint64_t)v5 >> 62)
    goto LABEL_43;
  v12 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9)
    v12 = v9;
  swift_bridgeObjectRetain(v5);
  v5 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v8, v12, 1, v5);
  swift_bridgeObjectRelease(*v3);
  *v3 = v5;
  v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v13 = type metadata accessor for FMETASubscription(0);
  v14 = (void *)swift_arrayDestroy(v11 + 32 + 8 * v4, v7, v13);
  if (!v6)
    return specialized Array._endMutation()(v14);
  if (!((unint64_t)v5 >> 62))
  {
    v15 = *(_QWORD *)(v11 + 16);
    v16 = v15 - v2;
    if (!__OFSUB__(v15, v2))
      goto LABEL_21;
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v5 < 0)
    v24 = v5;
  else
    v24 = v11;
  swift_bridgeObjectRetain(v5);
  v25 = _CocoaArrayWrapper.endIndex.getter(v24);
  swift_bridgeObjectRelease(v5);
  v16 = v25 - v2;
  if (__OFSUB__(v25, v2))
    goto LABEL_52;
LABEL_21:
  if ((v16 & 0x8000000000000000) == 0)
  {
    v17 = (const void *)(v11 + 32 + 8 * v2);
    if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v17 + 8 * v16)
      v14 = memmove((void *)(v11 + 32 + 8 * v4), v17, 8 * v16);
    if (!((unint64_t)v5 >> 62))
    {
      v18 = *(_QWORD *)(v11 + 16);
      v19 = v18 + v6;
      if (!__OFADD__(v18, v6))
      {
LABEL_27:
        *(_QWORD *)(v11 + 16) = v19;
        return specialized Array._endMutation()(v14);
      }
      goto LABEL_58;
    }
LABEL_53:
    if (v5 < 0)
      v26 = v5;
    else
      v26 = v11;
    swift_bridgeObjectRetain(v5);
    v27 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v5);
    v19 = v27 + v6;
    if (!__OFADD__(v27, v6))
      goto LABEL_27;
LABEL_58:
    __break(1u);
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100201B28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMPeopleCellViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

char *sub_100201B6C(uint64_t a1, int64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  char *result;
  int64_t v11;
  uint64_t v12;
  size_t v13;
  char *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  v4 = (_QWORD *)*v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  result = (char *)swift_isUniquelyReferenced_nonNull_native(*v2);
  if ((_DWORD)result && v9 <= v4[3] >> 1)
  {
    if (!v8)
      goto LABEL_21;
  }
  else
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    result = (char *)sub_10007057C(result, v11, 1, v4);
    v4 = result;
    if (!v8)
      goto LABEL_21;
  }
  v12 = v4[2];
  v13 = v12 - a2;
  if (__OFSUB__(v12, a2))
    goto LABEL_27;
  if ((v13 & 0x8000000000000000) == 0)
  {
    result = (char *)v4 + a1 + 32;
    v14 = (char *)v4 + a2 + 32;
    if (a1 != a2 || result >= &v14[v13])
      result = (char *)memmove(result, v14, v13);
    v15 = v4[2];
    v16 = __OFADD__(v15, v8);
    v17 = v15 + v8;
    if (!v16)
    {
      v4[2] = v17;
LABEL_21:
      *v2 = v4;
      return result;
    }
    goto LABEL_28;
  }
LABEL_29:
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void *sub_100201CC0(uint64_t a1, int64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  void *result;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = (_QWORD *)*v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v2);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_100070914(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  v12 = sub_100053F2C(&qword_1005DB480);
  result = (void *)swift_arrayDestroy(&v4[2 * a1 + 4], v7, v12);
  if (!v7)
    goto LABEL_20;
  v14 = v4[2];
  v15 = __OFSUB__(v14, a2);
  v16 = v14 - a2;
  if (v15)
    goto LABEL_26;
  if ((v16 & 0x8000000000000000) == 0)
  {
    v17 = (char *)&v4[2 * a2 + 4];
    if (a1 != a2 || &v4[2 * a1 + 4] >= (_QWORD *)&v17[16 * v16])
      result = memmove(&v4[2 * a1 + 4], v17, 16 * v16);
    v18 = v4[2];
    v15 = __OFADD__(v18, v8);
    v19 = v18 - v7;
    if (!v15)
    {
      v4[2] = v19;
LABEL_20:
      *v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  v20 = 2;
  result = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v20, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100201E30(uint64_t a1, uint64_t a2)
{
  return sub_100201E44(a1, a2, &qword_1005DB478, UIAlertController_ptr);
}

uint64_t sub_100201E44(uint64_t a1, uint64_t a2, unint64_t *a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v15;
  uint64_t v16;
  unint64_t *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v10 = a4;
    v8 = a3;
    v4 = a2;
    v7 = a1;
    v9 = *v5;
    if (!((unint64_t)*v5 >> 62))
    {
      if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
  }
  if (v9 < 0)
    v19 = v9;
  else
    v19 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v9);
  v20 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease(v9);
  if (v20 < v4)
    goto LABEL_18;
LABEL_4:
  v6 = v4 - v7;
  if (__OFSUB__(v4, v7))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v11 = v7 - v4;
  if (__OFSUB__(0, v6))
  {
LABEL_20:
    __break(1u);
LABEL_21:
    if (v9 < 0)
      v21 = v9;
    else
      v21 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v22 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(v9);
    v13 = v22 + v39;
    if (!__OFADD__(v22, v39))
      goto LABEL_8;
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v9 = *v5;
  v39 = v7 - v4;
  v40 = v7;
  if ((unint64_t)*v5 >> 62)
    goto LABEL_21;
  v12 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  v13 = v12 - v6;
  if (__OFADD__(v12, v11))
    goto LABEL_26;
LABEL_8:
  v9 = *v5;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v5);
  *v5 = v9;
  v15 = 0;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v9 < 0 || (v9 & 0x4000000000000000) != 0)
    goto LABEL_28;
  v16 = v9 & 0xFFFFFFFFFFFFFF8;
  if (v13 <= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
  {
    v17 = v8;
    v18 = v10;
    goto LABEL_33;
  }
LABEL_27:
  v15 = 1;
LABEL_28:
  v17 = v8;
  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v34 = v9;
    else
      v34 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v23 = _CocoaArrayWrapper.endIndex.getter(v34);
    swift_bridgeObjectRelease(v9);
  }
  else
  {
    v23 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v18 = v10;
  if (v23 <= v13)
    v23 = v13;
  swift_bridgeObjectRetain(v9);
  v9 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v15, v23, 1, v9);
  swift_bridgeObjectRelease(*v5);
  *v5 = v9;
  v16 = v9 & 0xFFFFFFFFFFFFFF8;
LABEL_33:
  v24 = (char *)(v16 + 32 + 8 * v40);
  v25 = sub_100006C5C(0, v17, v18);
  v26 = (void *)swift_arrayDestroy(v24, v6, v25);
  v27 = v39;
  if (!v39)
    return specialized Array._endMutation()(v26);
  if (!((unint64_t)v9 >> 62))
  {
    v28 = *(_QWORD *)(v16 + 16);
    v29 = v28 - v4;
    if (!__OFSUB__(v28, v4))
      goto LABEL_36;
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  if (v9 < 0)
    v35 = v9;
  else
    v35 = v16;
  swift_bridgeObjectRetain(v9);
  v36 = _CocoaArrayWrapper.endIndex.getter(v35);
  swift_bridgeObjectRelease(v9);
  v27 = v39;
  v29 = v36 - v4;
  if (__OFSUB__(v36, v4))
    goto LABEL_53;
LABEL_36:
  if ((v29 & 0x8000000000000000) == 0)
  {
    v30 = (char *)(v16 + 32 + 8 * v4);
    if (v40 != v4 || v24 >= &v30[8 * v29])
    {
      v26 = memmove(v24, v30, 8 * v29);
      v27 = v39;
    }
    if (!((unint64_t)v9 >> 62))
    {
      v31 = *(_QWORD *)(v16 + 16);
      v32 = v31 + v27;
      if (!__OFADD__(v31, v27))
      {
LABEL_42:
        *(_QWORD *)(v16 + 16) = v32;
        return specialized Array._endMutation()(v26);
      }
      goto LABEL_59;
    }
LABEL_54:
    if (v9 < 0)
      v37 = v9;
    else
      v37 = v16;
    swift_bridgeObjectRetain(v9);
    v38 = _CocoaArrayWrapper.endIndex.getter(v37);
    swift_bridgeObjectRelease(v9);
    v32 = v38 + v39;
    if (!__OFADD__(v38, v39))
      goto LABEL_42;
LABEL_59:
    __break(1u);
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100202154(uint64_t a1, int64_t a2)
{
  unint64_t *v2;
  unint64_t v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  char v26;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  if (!isUniquelyReferenced_nonNull_native || v9 > *(_QWORD *)(v4 + 24) >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_100070284(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  v12 = type metadata accessor for FMIPSafeLocation(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = v4 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  v15 = *(_QWORD *)(v13 + 72);
  v16 = v15 * a1;
  v17 = v14 + v15 * a1;
  result = swift_arrayDestroy(v17, v7, v12);
  if (!v7)
    goto LABEL_25;
  v19 = *(_QWORD *)(v4 + 16);
  v20 = v19 - a2;
  if (__OFSUB__(v19, a2))
    goto LABEL_31;
  if ((v20 & 0x8000000000000000) == 0)
  {
    v21 = v14 + v15 * a2;
    if (v16 < v15 * a2 || v17 >= v21 + v20 * v15)
    {
      result = swift_arrayInitWithTakeFrontToBack(v17, v21);
    }
    else if (v16 != v15 * a2)
    {
      result = swift_arrayInitWithTakeBackToFront(v17, v21);
    }
    v23 = *(_QWORD *)(v4 + 16);
    v24 = __OFADD__(v23, v8);
    v25 = v23 - v7;
    if (!v24)
    {
      *(_QWORD *)(v4 + 16) = v25;
LABEL_25:
      *v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  v26 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v26, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1002022FC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 40, 7);
}

id sub_100202324()
{
  uint64_t v0;

  return sub_1001FE118(*(double *)(v0 + 24), *(double *)(v0 + 32));
}

void sub_100202350(uint64_t a1)
{
  uint64_t v1;

  sub_1001FF41C(a1, *(_QWORD **)(v1 + 16));
}

id sub_100202358()
{
  uint64_t v0;
  id result;

  result = *(id *)(v0 + 16);
  if (result)
    return objc_msgSend(result, "dismissViewControllerAnimated:completion:", 1, 0);
  return result;
}

id sub_100202378()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_darkenerBackground), "setAlpha:", *(double *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration)* 0.0);
}

void sub_1002023A8(uint64_t a1)
{
  uint64_t v1;

  sub_1001FF2D0(a1, *(_QWORD **)(v1 + 16));
}

uint64_t sub_1002023B0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002023DC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

void sub_100202400()
{
  uint64_t v0;

  sub_1001FEFE4(*(_BYTE **)(v0 + 16), *(_BYTE *)(v0 + 24));
}

id sub_10020240C()
{
  uint64_t v0;

  return sub_1001FF068(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

void sub_10020251C()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  Swift::String v4;
  Swift::String_optional v5;
  Swift::String v6;
  void *object;
  NSString v8;
  void *v9;
  id v10;
  id v11;
  Swift::String_optional v12;
  Swift::String v13;
  Swift::String v14;
  void *v15;
  uint64_t v16;
  NSString v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  Swift::String v23;
  Swift::String_optional v24;
  Swift::String v25;
  void *v26;
  uint64_t v27;
  NSString v28;
  void *v29;
  id v30;
  id v31;
  void **aBlock;
  uint64_t v33;
  void (*v34)(uint64_t, void *);
  void *v35;
  void (*v36)(uint64_t);
  uint64_t v37;
  Swift::String v38;
  Swift::String v39;
  Swift::String v40;

  v1 = v0;
  objc_msgSend(v0, "setDismissalType:", 3);
  v2 = (void *)objc_opt_self(NSBundle);
  v3 = objc_msgSend(v2, "mainBundle");
  v38._countAndFlagsBits = 0xD000000000000018;
  v4._countAndFlagsBits = 0xD00000000000001DLL;
  v38._object = (void *)0x80000001004A5660;
  v4._object = (void *)0x80000001004B4FA0;
  v5.value._countAndFlagsBits = 0xD000000000000013;
  v5.value._object = (void *)0x80000001004A5640;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v3, v6, v38)._object;

  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setTitle:", v8, swift_bridgeObjectRelease(object).n128_f64[0]);

  v9 = *(void **)&v1[OBJC_IVAR____TtC6FindMy37FMAccessoryDiscoveryFlowSelectionCard_imageView];
  sub_100006C5C(0, (unint64_t *)&qword_1005DDF90, UIImage_ptr);
  v10 = sub_100342F84(0x63496D6574496F4ELL, 0xEA00000000006E6FLL, 6778480, 0xE300000000000000);
  objc_msgSend(v9, "setImage:", v10);

  objc_msgSend(v9, "setContentMode:", 4);
  v11 = objc_msgSend(v2, "mainBundle");
  v12.value._countAndFlagsBits = 0xD000000000000010;
  v39._countAndFlagsBits = 0xD000000000000015;
  v13._countAndFlagsBits = 0xD00000000000001ELL;
  v39._object = (void *)0x80000001004ADC20;
  v13._object = (void *)0x80000001004B4FC0;
  v12.value._object = (void *)0x80000001004ADC00;
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, v12, (NSBundle)v11, v14, v39)._object;

  v16 = swift_allocObject(&unk_100550F38, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16);
  swift_retain_n(v16, 2);
  swift_bridgeObjectRetain(v15);
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  v36 = sub_100202EB4;
  v37 = v16;
  aBlock = _NSConcreteStackBlock;
  v33 = 1107296256;
  v34 = sub_100008B40;
  v35 = &unk_100550F50;
  v18 = _Block_copy(&aBlock);
  v19 = (void *)objc_opt_self(PRXAction);
  v20 = objc_msgSend(v19, "actionWithTitle:style:handler:", v17, 0, v18);

  _Block_release(v18);
  v21 = objc_msgSend(v1, "addAction:", v20, swift_release(v37).n128_f64[0]);

  swift_bridgeObjectRelease(v15);
  swift_release_n(v16, 2);

  v22 = objc_msgSend(v2, "mainBundle");
  v23._countAndFlagsBits = 0xD00000000000001CLL;
  v40._countAndFlagsBits = 0xD000000000000018;
  v40._object = (void *)0x80000001004A5660;
  v23._object = (void *)0x80000001004B4FE0;
  v24.value._countAndFlagsBits = 0xD000000000000013;
  v24.value._object = (void *)0x80000001004A5640;
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  v26 = NSLocalizedString(_:tableName:bundle:value:comment:)(v23, v24, (NSBundle)v22, v25, v40)._object;

  v27 = swift_allocObject(&unk_100550F38, 24, 7);
  swift_unknownObjectWeakInit(v27 + 16);
  swift_retain_n(v27, 2);
  swift_bridgeObjectRetain(v26);
  v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v26);
  v36 = sub_100202ED0;
  v37 = v27;
  aBlock = _NSConcreteStackBlock;
  v33 = 1107296256;
  v34 = sub_100008B40;
  v35 = &unk_100550F78;
  v29 = _Block_copy(&aBlock);
  v30 = objc_msgSend(v19, "actionWithTitle:style:handler:", v28, 1, v29);

  _Block_release(v29);
  v31 = objc_msgSend(v1, "addAction:", v30, swift_release(v37).n128_f64[0]);

  swift_bridgeObjectRelease(v26);
  swift_release_n(v27, 2);

}

void sub_1002029B4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t Strong;
  void *v9;
  void *v10;
  _BYTE v12[24];

  v5 = type metadata accessor for FMAccessoryDiscoveryCoordinator.Event(0);
  __chkstk_darwin(v5);
  v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = (void *)swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC6FindMy37FMAccessoryDiscoveryFlowSelectionCard_coordinator);

    if (v10)
    {
      *v7 = a3;
      swift_storeEnumTagMultiPayload(v7, v5, 0);
      sub_10021ABAC((uint64_t)v7);

      sub_100202EEC((uint64_t)v7);
    }
  }
}

void sub_100202A94()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  Class isa;

  v1 = v0;
  v26 = (void *)objc_opt_self(NSLayoutConstraint);
  v2 = sub_100053F2C(&qword_1005D2F10);
  v3 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100481720;
  v4 = *(void **)&v1[OBJC_IVAR____TtC6FindMy37FMAccessoryDiscoveryFlowSelectionCard_imageView];
  v5 = objc_msgSend(v4, "centerXAnchor");
  v6 = objc_msgSend(v1, "contentView");
  v7 = objc_msgSend(v6, "mainContentGuide");

  v8 = objc_msgSend(v7, "centerXAnchor");
  v9 = objc_msgSend(v5, "constraintEqualToAnchor:", v8);

  *(_QWORD *)(v3 + 32) = v9;
  v10 = objc_msgSend(v4, "topAnchor");
  v11 = objc_msgSend(v1, "contentView");
  v12 = objc_msgSend(v11, "mainContentGuide");

  v13 = objc_msgSend(v12, "topAnchor");
  v14 = objc_msgSend(v10, "constraintGreaterThanOrEqualToAnchor:", v13);

  *(_QWORD *)(v3 + 40) = v14;
  v15 = objc_msgSend(v4, "bottomAnchor");
  v16 = objc_msgSend(v1, "contentView");
  v17 = objc_msgSend(v16, "mainContentGuide");

  v18 = objc_msgSend(v17, "bottomAnchor");
  v19 = objc_msgSend(v15, "constraintLessThanOrEqualToAnchor:", v18);

  *(_QWORD *)(v3 + 48) = v19;
  v20 = objc_msgSend(v4, "centerYAnchor");
  v21 = objc_msgSend(v1, "contentView");
  v22 = objc_msgSend(v21, "mainContentGuide");

  v23 = objc_msgSend(v22, "centerYAnchor");
  v24 = objc_msgSend(v20, "constraintEqualToAnchor:", v23);

  *(_QWORD *)(v3 + 56) = v24;
  specialized Array._endMutation()(v25);
  sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v26, "activateConstraints:", isa, swift_bridgeObjectRelease(v3).n128_f64[0]);

}

id sub_100202DF8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMAccessoryDiscoveryFlowSelectionCard();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMAccessoryDiscoveryFlowSelectionCard()
{
  return objc_opt_self(_TtC6FindMy37FMAccessoryDiscoveryFlowSelectionCard);
}

uint64_t sub_100202E90()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100202EB4(uint64_t a1)
{
  uint64_t v1;

  sub_1002029B4(a1, v1, 1);
}

void sub_100202ED0(uint64_t a1)
{
  uint64_t v1;

  sub_1002029B4(a1, v1, 0);
}

uint64_t sub_100202EEC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FMAccessoryDiscoveryCoordinator.Event(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t FMIPUnknownItem.findingProductUUID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1002031E8((uint64_t (*)(_QWORD))&type metadata accessor for UUID, a1);
}

uint64_t FMIPUnknownItem.findingProductType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unsigned int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v2 = type metadata accessor for FMIPProductType(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  FMIPUnknownItem.productType.getter(v4);
  v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == enum case for FMIPProductType.b389(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 96))(v6, v2);
    sub_1000051EC((uint64_t)v6, &qword_1005D8EA8);
LABEL_5:
    v10 = enum case for FMFindingProductType.item(_:);
    v11 = type metadata accessor for FMFindingProductType(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(a1, v10, v11);
  }
  if (v7 == enum case for FMIPProductType.zeus(_:))
  {
    v8.n128_f64[0] = (*(double (**)(char *, uint64_t))(v3 + 96))(v6, v2);
    v9 = type metadata accessor for FMIPZeusProductInformation(0, v8);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v6, v9);
    goto LABEL_5;
  }
  if (v7 == enum case for FMIPProductType.hawkeye(_:))
  {
    v13 = (*(uint64_t (**)(char *, uint64_t))(v3 + 96))(v6, v2);
    v14 = FMIPUnknownItem.isAppleAudioAccessory.getter(v13);
    if ((v14 & 1) != 0 && (v15 = FMIPUnknownItem.unknownBeacon.getter(v14)) != 0)
    {
      v16 = (void *)v15;
      v17 = SPUnknownBeacon.productId.getter(v15);
      v18 = objc_msgSend(v16, "type");
      v19 = SPBeaconTypeHele;
      v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
      v22 = v21;
      v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
      v25 = v23;
      if (v20 == v24 && v22 == v23)
        v26 = 1;
      else
        v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v22, v24, v23, 0);

      swift_bridgeObjectRelease(v22);
      swift_bridgeObjectRelease(v25);
      *(_QWORD *)a1 = v17;
      *(_BYTE *)(a1 + 8) = v26 & 1;
      v27 = (unsigned int *)&enum case for FMFindingProductType.airpods(_:);
    }
    else
    {
      v27 = (unsigned int *)&enum case for FMFindingProductType.item(_:);
    }
    v28 = *v27;
    v29 = type metadata accessor for FMFindingProductType(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(a1, v28, v29);
    return sub_1000051EC((uint64_t)v6, &qword_1005D7320);
  }
  else
  {
    result = _diagnoseUnexpectedEnumCase<A>(type:)(v2, v2);
    __break(1u);
  }
  return result;
}

uint64_t FMIPUnknownItem.findingPartType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = enum case for FMFindingPartType.standalone(_:);
  v3 = type metadata accessor for FMFindingPartType(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t FMIPUnknownItem.findingPartInfo.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1002031E8((uint64_t (*)(_QWORD))&type metadata accessor for FMFindingPartInfo, a1);
}

uint64_t sub_1002031E8@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = a1(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 1, 1, v3);
}

void *FMIPUnknownItem.supportedFindingTechnologies.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  void *v36;

  v1 = type metadata accessor for FMFindingTechnology(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v33 - v6;
  v8 = type metadata accessor for FMItemCapabilities(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v33 - v14;
  v35 = v0;
  v36 = &_swiftEmptySetSingleton;
  v16 = FMIPUnknownItem.capabilities.getter(v13);
  static FMItemCapabilities.canR1.getter(v16);
  v17 = sub_100008000((unint64_t *)&qword_1005E3B40, (uint64_t (*)(uint64_t))&type metadata accessor for FMItemCapabilities, (uint64_t)&protocol conformance descriptor for FMItemCapabilities);
  v18 = dispatch thunk of SetAlgebra.isSuperset(of:)(v12, v8, v17);
  v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v12, v8);
  v20 = ((uint64_t (*)(char *, uint64_t))v19)(v15, v8);
  if ((v18 & 1) != 0)
  {
    v34 = &v5[*(int *)(sub_100053F2C(&qword_1005D63E8) + 48)];
    *v5 = 1;
    v21 = (uint64_t)v7;
    v22 = v2;
    v23 = v1;
    v24 = enum case for FMFindingType.ut(_:);
    v25 = type metadata accessor for FMFindingType(0);
    v26 = v24;
    v1 = v23;
    v2 = v22;
    v7 = (char *)v21;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v34, v26, v25);
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v2 + 104))(v5, enum case for FMFindingTechnology.precision(_:), v1);
    sub_100204040(v21, (uint64_t)v5);
    v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v21, v1);
  }
  v27 = FMIPUnknownItem.capabilities.getter(v20);
  static FMItemCapabilities.canBTFinding.getter(v27);
  v28 = dispatch thunk of SetAlgebra.isSuperset(of:)(v12, v8, v17);
  v19(v12, v8);
  v19(v15, v8);
  if ((v28 & 1) != 0)
  {
    v29 = *(int *)(sub_100053F2C(&qword_1005D9938) + 48);
    v30 = enum case for FMFindingType.ut(_:);
    v31 = type metadata accessor for FMFindingType(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v5, v30, v31);
    v5[v29] = 0;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v2 + 104))(v5, enum case for FMFindingTechnology.proximity(_:), v1);
    sub_100204040((uint64_t)v7, (uint64_t)v5);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  }
  return v36;
}

uint64_t FMIPUnknownItem.videoInfo.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v8;

  v0 = type metadata accessor for FMFindingProductType(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = FMIPUnknownItem.findingProductType.getter((uint64_t)v3);
  v5 = FMFindingProductType.isAirPods.getter(v4);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if ((v5 & 1) != 0)
    return FMR1AirPodsVideoInfo.getter(v6);
  else
    return FMR1AirTagDefaultVideoInfo.getter(v6);
}

uint64_t sub_100203590@<X0>(uint64_t a1@<X8>)
{
  return sub_1002035A8((uint64_t (*)(_QWORD))&type metadata accessor for UUID, a1);
}

uint64_t sub_10020359C@<X0>(uint64_t a1@<X8>)
{
  return sub_1002035A8((uint64_t (*)(_QWORD))&type metadata accessor for FMFindingPartInfo, a1);
}

uint64_t sub_1002035A8@<X0>(uint64_t (*a1)(_QWORD)@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = a1(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(a2, 1, 1, v3);
}

uint64_t sub_1002035F0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  uint64_t v21;
  void (*v22)(_QWORD, _QWORD, _QWORD);
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  __n128 v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v3 = v2;
  v6 = type metadata accessor for FMFFriend(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v13 = sub_100008000(&qword_1005D4DB8, v12, (uint64_t)&protocol conformance descriptor for FMFFriend);
  swift_bridgeObjectRetain(v10);
  v37 = a2;
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  v16 = v14 & ~v15;
  v17 = v10;
  v18 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v33 = v3;
    v34 = a1;
    v35 = ~v15;
    v36 = v7;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v21 = v17;
      v22 = v20;
      v20(v9, *(_QWORD *)(v17 + 48) + v19 * v16, v6);
      v23 = sub_100008000(&qword_1005DB500, (uint64_t (*)(uint64_t))&type metadata accessor for FMFFriend, (uint64_t)&protocol conformance descriptor for FMFFriend);
      v24 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v37, v6, v23);
      v25 = *(void (**)(char *, uint64_t))(v36 + 8);
      v25(v9, v6);
      if ((v24 & 1) != 0)
        break;
      v16 = (v16 + 1) & v35;
      v17 = v21;
      v20 = v22;
      if (((*(_QWORD *)(v18 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        swift_bridgeObjectRelease(v21);
        v3 = v33;
        a1 = v34;
        v26 = v36;
        goto LABEL_7;
      }
    }
    v32 = swift_bridgeObjectRelease(v21);
    ((void (*)(uint64_t, uint64_t, __n128))v25)(v37, v6, v32);
    v22(v34, *(_QWORD *)(*v33 + 48) + v19 * v16, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease(v10);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v26 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v28 = v37;
    v20(v9, v37, v6);
    v38 = *v3;
    *v3 = 0x8000000000000000;
    sub_1002057C0((uint64_t)v9, v16, isUniquelyReferenced_nonNull_native);
    v29 = *v3;
    *v3 = v38;
    v30 = swift_bridgeObjectRelease(v29);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v26 + 32))(a1, v28, v6, v30);
    return 1;
  }
}

uint64_t sub_10020384C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  uint64_t v21;
  void (*v22)(_QWORD, _QWORD, _QWORD);
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  __n128 v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v3 = v2;
  v6 = type metadata accessor for FMIPItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v13 = sub_100008000(&qword_1005D4DD0, v12, (uint64_t)&protocol conformance descriptor for FMIPItem);
  swift_bridgeObjectRetain(v10);
  v37 = a2;
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  v16 = v14 & ~v15;
  v17 = v10;
  v18 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v33 = v3;
    v34 = a1;
    v35 = ~v15;
    v36 = v7;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v21 = v17;
      v22 = v20;
      v20(v9, *(_QWORD *)(v17 + 48) + v19 * v16, v6);
      v23 = sub_100008000(&qword_1005E3B80, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItem, (uint64_t)&protocol conformance descriptor for FMIPItem);
      v24 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v37, v6, v23);
      v25 = *(void (**)(char *, uint64_t))(v36 + 8);
      v25(v9, v6);
      if ((v24 & 1) != 0)
        break;
      v16 = (v16 + 1) & v35;
      v17 = v21;
      v20 = v22;
      if (((*(_QWORD *)(v18 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        swift_bridgeObjectRelease(v21);
        v3 = v33;
        a1 = v34;
        v26 = v36;
        goto LABEL_7;
      }
    }
    v32 = swift_bridgeObjectRelease(v21);
    ((void (*)(uint64_t, uint64_t, __n128))v25)(v37, v6, v32);
    v22(v34, *(_QWORD *)(*v33 + 48) + v19 * v16, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease(v10);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v26 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v28 = v37;
    v20(v9, v37, v6);
    v38 = *v3;
    *v3 = 0x8000000000000000;
    sub_100205A14((uint64_t)v9, v16, isUniquelyReferenced_nonNull_native);
    v29 = *v3;
    *v3 = v38;
    v30 = swift_bridgeObjectRelease(v29);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v26 + 32))(a1, v28, v6, v30);
    return 1;
  }
}

uint64_t sub_100203AA8(uint64_t *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  Swift::Int v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v21;
  __int128 v22[4];

  v3 = v2;
  v6 = *v2;
  Hasher.init(_seed:)(v22, *(_QWORD *)(*v2 + 40));
  swift_bridgeObjectRetain(v6);
  sub_1003230AC(v22, a2);
  v7 = Hasher._finalize()();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0)
  {
    v10 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v9);
    v11 = swift_bridgeObjectRetain(v10);
    v12 = sub_1003229B4(v11, a2);
    swift_bridgeObjectRelease(v10);
    if ((v12 & 1) != 0)
    {
LABEL_6:
      swift_bridgeObjectRelease(a2);
      swift_bridgeObjectRelease(v6);
      v17 = *(_QWORD *)(*(_QWORD *)(*v3 + 48) + 8 * v9);
      *a1 = v17;
      swift_bridgeObjectRetain(v17);
      return 0;
    }
    v13 = ~v8;
    while (1)
    {
      v9 = (v9 + 1) & v13;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        break;
      v14 = *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v9);
      v15 = swift_bridgeObjectRetain(v14);
      v16 = sub_1003229B4(v15, a2);
      swift_bridgeObjectRelease(v14);
      if ((v16 & 1) != 0)
        goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease(v6);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  *(_QWORD *)&v22[0] = *v3;
  *v3 = 0x8000000000000000;
  v20 = swift_bridgeObjectRetain(a2);
  sub_100205C68(v20, v9, isUniquelyReferenced_nonNull_native);
  v21 = *v3;
  *v3 = *(_QWORD *)&v22[0];
  swift_bridgeObjectRelease(v21);
  *a1 = a2;
  return 1;
}

uint64_t sub_100203C38(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  _QWORD v24[9];

  v7 = *v3;
  Hasher.init(_seed:)(v24, *(_QWORD *)(*v3 + 40));
  swift_bridgeObjectRetain(v7);
  String.hash(into:)(v24, a2, a3);
  v8 = Hasher._finalize()();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = v12[1];
    v14 = *v12 == a2 && v13 == a3;
    if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v12, v13, a2, a3, 0) & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease(a3);
      swift_bridgeObjectRelease(v7);
      v15 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v16 = v15[1];
      *a1 = *v15;
      a1[1] = v16;
      swift_bridgeObjectRetain(v16);
      return 0;
    }
    v18 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v18;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v19 = (_QWORD *)(v11 + 16 * v10);
      v20 = v19[1];
      v21 = *v19 == a2 && v20 == a3;
      if (v21 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v19, v20, a2, a3, 0) & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease(v7);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  v24[0] = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain(a3);
  sub_100205DF4(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  v23 = *v3;
  *v3 = v24[0];
  swift_bridgeObjectRelease(v23);
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_100203DE4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  uint64_t v21;
  void (*v22)(_QWORD, _QWORD, _QWORD);
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  __n128 v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v3 = v2;
  v6 = type metadata accessor for FMIPPlaySoundChannels(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v13 = sub_100008000(&qword_1005D7300, v12, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
  swift_bridgeObjectRetain(v10);
  v37 = a2;
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  v16 = v14 & ~v15;
  v17 = v10;
  v18 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v33 = v3;
    v34 = a1;
    v35 = ~v15;
    v36 = v7;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v21 = v17;
      v22 = v20;
      v20(v9, *(_QWORD *)(v17 + 48) + v19 * v16, v6);
      v23 = sub_100008000(&qword_1005D7308, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
      v24 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v37, v6, v23);
      v25 = *(void (**)(char *, uint64_t))(v36 + 8);
      v25(v9, v6);
      if ((v24 & 1) != 0)
        break;
      v16 = (v16 + 1) & v35;
      v17 = v21;
      v20 = v22;
      if (((*(_QWORD *)(v18 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        swift_bridgeObjectRelease(v21);
        v3 = v33;
        a1 = v34;
        v26 = v36;
        goto LABEL_7;
      }
    }
    v32 = swift_bridgeObjectRelease(v21);
    ((void (*)(uint64_t, uint64_t, __n128))v25)(v37, v6, v32);
    v22(v34, *(_QWORD *)(*v33 + 48) + v19 * v16, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease(v10);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v26 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v28 = v37;
    v20(v9, v37, v6);
    v38 = *v3;
    *v3 = 0x8000000000000000;
    sub_100205F8C((uint64_t)v9, v16, isUniquelyReferenced_nonNull_native);
    v29 = *v3;
    *v3 = v38;
    v30 = swift_bridgeObjectRelease(v29);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v26 + 32))(a1, v28, v6, v30);
    return 1;
  }
}

uint64_t sub_100204040(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  uint64_t v21;
  void (*v22)(_QWORD, _QWORD, _QWORD);
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  __n128 v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v3 = v2;
  v6 = type metadata accessor for FMFindingTechnology(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v13 = sub_100008000(&qword_1005DB530, v12, (uint64_t)&protocol conformance descriptor for FMFindingTechnology);
  swift_bridgeObjectRetain(v10);
  v37 = a2;
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  v16 = v14 & ~v15;
  v17 = v10;
  v18 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v33 = v3;
    v34 = a1;
    v35 = ~v15;
    v36 = v7;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v21 = v17;
      v22 = v20;
      v20(v9, *(_QWORD *)(v17 + 48) + v19 * v16, v6);
      v23 = sub_100008000(&qword_1005DB538, (uint64_t (*)(uint64_t))&type metadata accessor for FMFindingTechnology, (uint64_t)&protocol conformance descriptor for FMFindingTechnology);
      v24 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v37, v6, v23);
      v25 = *(void (**)(char *, uint64_t))(v36 + 8);
      v25(v9, v6);
      if ((v24 & 1) != 0)
        break;
      v16 = (v16 + 1) & v35;
      v17 = v21;
      v20 = v22;
      if (((*(_QWORD *)(v18 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        swift_bridgeObjectRelease(v21);
        v3 = v33;
        a1 = v34;
        v26 = v36;
        goto LABEL_7;
      }
    }
    v32 = swift_bridgeObjectRelease(v21);
    ((void (*)(uint64_t, uint64_t, __n128))v25)(v37, v6, v32);
    v22(v34, *(_QWORD *)(*v33 + 48) + v19 * v16, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease(v10);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v26 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v28 = v37;
    v20(v9, v37, v6);
    v38 = *v3;
    *v3 = 0x8000000000000000;
    sub_1002061E0((uint64_t)v9, v16, isUniquelyReferenced_nonNull_native);
    v29 = *v3;
    *v3 = v38;
    v30 = swift_bridgeObjectRelease(v29);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v26 + 32))(a1, v28, v6, v30);
    return 1;
  }
}

uint64_t sub_10020429C()
{
  return sub_100008000(&qword_1005DB4F8, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPUnknownItem, (uint64_t)&protocol conformance descriptor for FMIPUnknownItem);
}

uint64_t sub_1002042C8(_BYTE *a1, int a2)
{
  _QWORD *v2;
  uint64_t v5;
  Swift::UInt v6;
  Swift::Int v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  _QWORD v14[9];

  v5 = *v2;
  Hasher.init(_seed:)(v14, *(_QWORD *)(*v2 + 40));
  switch((char)a2)
  {
    case 2:
      v6 = 0;
      goto LABEL_9;
    case 3:
      v6 = 1;
      goto LABEL_9;
    case 4:
      v6 = 2;
      goto LABEL_9;
    case 5:
      v6 = 4;
      goto LABEL_9;
    case 6:
      v6 = 5;
      goto LABEL_9;
    case 7:
      v6 = 6;
LABEL_9:
      Hasher._combine(_:)(v6);
      break;
    default:
      Hasher._combine(_:)(3uLL);
      Hasher._combine(_:)(a2 & 1);
      break;
  }
  v7 = Hasher._finalize()();
  v8 = -1 << *(_BYTE *)(v5 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_28:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
    v14[0] = *v2;
    *v2 = 0x8000000000000000;
    sub_100206434(a2, v9, isUniquelyReferenced_nonNull_native);
    v13 = *v2;
    *v2 = v14[0];
    swift_bridgeObjectRelease(v13);
    result = 1;
    goto LABEL_29;
  }
  v10 = ~v8;
  while (2)
  {
    switch(*(_BYTE *)(*(_QWORD *)(v5 + 48) + v9))
    {
      case 2:
        if (a2 != 2)
          goto LABEL_13;
        goto LABEL_27;
      case 3:
        if (a2 == 3)
          goto LABEL_27;
        goto LABEL_13;
      case 4:
        if (a2 == 4)
          goto LABEL_27;
        goto LABEL_13;
      case 5:
        if (a2 == 5)
          goto LABEL_27;
        goto LABEL_13;
      case 6:
        if (a2 == 6)
          goto LABEL_27;
        goto LABEL_13;
      case 7:
        if (a2 != 7)
          goto LABEL_13;
        goto LABEL_27;
      default:
        if ((a2 - 2) < 6u || ((a2 ^ ((*(_BYTE *)(*(_QWORD *)(v5 + 48) + v9) & 1) == 0)) & 1) == 0)
        {
LABEL_13:
          v9 = (v9 + 1) & v10;
          if (((*(_QWORD *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
            goto LABEL_28;
          continue;
        }
LABEL_27:
        result = 0;
        LOBYTE(a2) = *(_BYTE *)(*(_QWORD *)(*v2 + 48) + v9);
LABEL_29:
        *a1 = a2;
        return result;
    }
  }
}

uint64_t sub_1002044F8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  uint64_t v21;
  void (*v22)(_QWORD, _QWORD, _QWORD);
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  __n128 v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v3 = v2;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  v11 = *(_QWORD *)(*v3 + 40);
  v13 = sub_100008000((unint64_t *)&unk_1005E4270, v12, (uint64_t)&protocol conformance descriptor for UUID);
  swift_bridgeObjectRetain(v10);
  v37 = a2;
  v14 = dispatch thunk of Hashable._rawHashValue(seed:)(v11, v6, v13);
  v15 = -1 << *(_BYTE *)(v10 + 32);
  v16 = v14 & ~v15;
  v17 = v10;
  v18 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v33 = v3;
    v34 = a1;
    v35 = ~v15;
    v36 = v7;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v21 = v17;
      v22 = v20;
      v20(v9, *(_QWORD *)(v17 + 48) + v19 * v16, v6);
      v23 = sub_100008000((unint64_t *)&unk_1005E2220, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v24 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v37, v6, v23);
      v25 = *(void (**)(char *, uint64_t))(v36 + 8);
      v25(v9, v6);
      if ((v24 & 1) != 0)
        break;
      v16 = (v16 + 1) & v35;
      v17 = v21;
      v20 = v22;
      if (((*(_QWORD *)(v18 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
      {
        swift_bridgeObjectRelease(v21);
        v3 = v33;
        a1 = v34;
        v26 = v36;
        goto LABEL_7;
      }
    }
    v32 = swift_bridgeObjectRelease(v21);
    ((void (*)(uint64_t, uint64_t, __n128))v25)(v37, v6, v32);
    v22(v34, *(_QWORD *)(*v33 + 48) + v19 * v16, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease(v10);
    v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v26 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v28 = v37;
    v20(v9, v37, v6);
    v38 = *v3;
    *v3 = 0x8000000000000000;
    sub_1002066C4((uint64_t)v9, v16, isUniquelyReferenced_nonNull_native);
    v29 = *v3;
    *v3 = v38;
    v30 = swift_bridgeObjectRelease(v29);
    (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v26 + 32))(a1, v28, v6, v30);
    return 1;
  }
}

Swift::Int sub_100204754(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  Swift::Int result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a2)
  {
    sub_100053F2C(&qword_1005DB518);
    v4 = static _SetStorage.convert(_:capacity:)(a1, a2);
    v23 = v4;
    v5 = __CocoaSet.makeIterator()(a1);
    v6 = __CocoaSet.Iterator.next()();
    if (v6)
    {
      v7 = v6;
      v8 = sub_100028868();
      do
      {
        v21 = v7;
        swift_dynamicCast(&v22, &v21, (char *)&type metadata for Swift.AnyObject + 8, v8, 7);
        v4 = v23;
        v16 = *(_QWORD *)(v23 + 16);
        if (*(_QWORD *)(v23 + 24) <= v16)
        {
          sub_100204C98(v16 + 1);
          v4 = v23;
        }
        v9 = v22;
        result = NSObject._rawHashValue(seed:)(*(_QWORD *)(v4 + 40));
        v11 = v4 + 56;
        v12 = -1 << *(_BYTE *)(v4 + 32);
        v13 = result & ~v12;
        v14 = v13 >> 6;
        if (((-1 << v13) & ~*(_QWORD *)(v4 + 56 + 8 * (v13 >> 6))) != 0)
        {
          v15 = __clz(__rbit64((-1 << v13) & ~*(_QWORD *)(v4 + 56 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v17 = 0;
          v18 = (unint64_t)(63 - v12) >> 6;
          do
          {
            if (++v14 == v18 && (v17 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v19 = v14 == v18;
            if (v14 == v18)
              v14 = 0;
            v17 |= v19;
            v20 = *(_QWORD *)(v11 + 8 * v14);
          }
          while (v20 == -1);
          v15 = __clz(__rbit64(~v20)) + (v14 << 6);
        }
        *(_QWORD *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
        *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = v9;
        ++*(_QWORD *)(v4 + 16);
        v7 = __CocoaSet.Iterator.next()();
      }
      while (v7);
    }
    swift_release(v5);
  }
  else
  {
    swift_unknownObjectRelease(a1);
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v4;
}

void sub_100204938(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t);
  unint64_t *v48;
  uint64_t v49;

  v48 = a4;
  v49 = a5;
  v7 = v5;
  v47 = a2;
  v9 = a2(0);
  v46 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v42 - v10;
  v12 = *v7;
  if (*(_QWORD *)(*v7 + 24) > a1)
    a1 = *(_QWORD *)(*v7 + 24);
  sub_100053F2C(a3);
  v13 = static _SetStorage.resize(original:capacity:move:)(v12, a1, 1);
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
    goto LABEL_39;
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 56);
  v45 = (_QWORD *)(v12 + 56);
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v43 = v7;
  v44 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 56;
  swift_retain(v12);
  v20 = 0;
  while (1)
  {
    if (v18)
    {
      v22 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v23 = v22 | (v20 << 6);
      goto LABEL_26;
    }
    v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      return;
    }
    if (v24 >= v44)
      goto LABEL_35;
    v25 = v45[v24];
    ++v20;
    if (!v25)
    {
      v20 = v24 + 1;
      if (v24 + 1 >= v44)
        goto LABEL_35;
      v25 = v45[v20];
      if (!v25)
      {
        v20 = v24 + 2;
        if (v24 + 2 >= v44)
          goto LABEL_35;
        v25 = v45[v20];
        if (!v25)
          break;
      }
    }
LABEL_25:
    v18 = (v25 - 1) & v25;
    v23 = __clz(__rbit64(v25)) + (v20 << 6);
LABEL_26:
    v27 = v12;
    v28 = *(_QWORD *)(v12 + 48);
    v29 = *(_QWORD *)(v46 + 72);
    v30 = *(void (**)(char *, unint64_t, uint64_t))(v46 + 32);
    v30(v11, v28 + v29 * v23, v9);
    v31 = *(_QWORD *)(v14 + 40);
    v32 = sub_100008000(v48, v47, v49);
    v33 = dispatch thunk of Hashable._rawHashValue(seed:)(v31, v9, v32);
    v34 = -1 << *(_BYTE *)(v14 + 32);
    v35 = v33 & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v19 + 8 * (v35 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v19 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v19 + 8 * v36);
      }
      while (v40 == -1);
      v21 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v19 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    v30((char *)(*(_QWORD *)(v14 + 48) + v21 * v29), (unint64_t)v11, v9);
    ++*(_QWORD *)(v14 + 16);
    v12 = v27;
  }
  v26 = v24 + 3;
  if (v26 < v44)
  {
    v25 = v45[v26];
    if (!v25)
    {
      while (1)
      {
        v20 = v26 + 1;
        if (__OFADD__(v26, 1))
          goto LABEL_41;
        if (v20 >= v44)
          goto LABEL_35;
        v25 = v45[v20];
        ++v26;
        if (v25)
          goto LABEL_25;
      }
    }
    v20 = v26;
    goto LABEL_25;
  }
LABEL_35:
  swift_release(v12);
  v7 = v43;
  v41 = 1 << *(_BYTE *)(v12 + 32);
  if (v41 > 63)
    bzero(v45, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v45 = -1 << v41;
  *(_QWORD *)(v12 + 16) = 0;
LABEL_39:
  swift_release(v12);
  *v7 = v14;
}

void sub_100204C98(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  Swift::Int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100053F2C(&qword_1005DB518);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v30 = v2;
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v8 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v3 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    swift_retain(v3);
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v15 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v16 = v15 | (v13 << 6);
      }
      else
      {
        v17 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v11)
          goto LABEL_36;
        v18 = v8[v17];
        ++v13;
        if (!v18)
        {
          v13 = v17 + 1;
          if (v17 + 1 >= v11)
            goto LABEL_36;
          v18 = v8[v13];
          if (!v18)
          {
            v13 = v17 + 2;
            if (v17 + 2 >= v11)
              goto LABEL_36;
            v18 = v8[v13];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v11)
              {
LABEL_36:
                swift_release(v3);
                v2 = v30;
                v29 = 1 << *(_BYTE *)(v3 + 32);
                if (v29 > 63)
                  bzero((void *)(v3 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  v13 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v13 >= v11)
                    goto LABEL_36;
                  v18 = v8[v13];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v13 = v19;
            }
          }
        }
LABEL_26:
        v10 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v13 << 6);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v16);
      v21 = NSObject._rawHashValue(seed:)(*(_QWORD *)(v6 + 40));
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = v21 & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v20;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_100204F34(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  Swift::Int v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  __int128 v24[4];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100053F2C(&qword_1005DB528);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v23 = v2;
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v8 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v3 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    swift_retain(v3);
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v15 = v14 | (v13 << 6);
      }
      else
      {
        v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return;
        }
        if (v19 >= v11)
          goto LABEL_26;
        v20 = v8[v19];
        ++v13;
        if (!v20)
        {
          v13 = v19 + 1;
          if (v19 + 1 >= v11)
            goto LABEL_26;
          v20 = v8[v13];
          if (!v20)
          {
            v13 = v19 + 2;
            if (v19 + 2 >= v11)
              goto LABEL_26;
            v20 = v8[v13];
            if (!v20)
            {
              v21 = v19 + 3;
              if (v21 >= v11)
              {
LABEL_26:
                swift_release(v3);
                v22 = 1 << *(_BYTE *)(v3 + 32);
                if (v22 > 63)
                  bzero((void *)(v3 + 56), ((unint64_t)(v22 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v22;
                v2 = v23;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v20 = v8[v21];
              if (!v20)
              {
                while (1)
                {
                  v13 = v21 + 1;
                  if (__OFADD__(v21, 1))
                    goto LABEL_32;
                  if (v13 >= v11)
                    goto LABEL_26;
                  v20 = v8[v13];
                  ++v21;
                  if (v20)
                    goto LABEL_25;
                }
              }
              v13 = v21;
            }
          }
        }
LABEL_25:
        v10 = (v20 - 1) & v20;
        v15 = __clz(__rbit64(v20)) + (v13 << 6);
      }
      v16 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v15);
      Hasher.init(_seed:)(v24, *(_QWORD *)(v6 + 40));
      sub_1003230AC(v24, v16);
      v17 = Hasher._finalize()();
      v18 = _HashTable.nextHole(atOrAfter:)(v17 & ~(-1 << *(_BYTE *)(v6 + 32)), v6 + 56, ~(-1 << *(_BYTE *)(v6 + 32)));
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v18) = v16;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_100205178(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD *v33;
  _QWORD v34[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100053F2C(&qword_1005D7538);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  v6 = v5;
  if (*(_QWORD *)(v3 + 16))
  {
    v7 = 1 << *(_BYTE *)(v3 + 32);
    v32 = v2;
    v33 = (_QWORD *)(v3 + 56);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = v5 + 56;
    swift_retain(v3);
    v12 = 0;
    while (1)
    {
      if (v9)
      {
        v15 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v16 = v15 | (v12 << 6);
      }
      else
      {
        v17 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return;
        }
        if (v17 >= v10)
          goto LABEL_36;
        v18 = v33[v17];
        ++v12;
        if (!v18)
        {
          v12 = v17 + 1;
          if (v17 + 1 >= v10)
            goto LABEL_36;
          v18 = v33[v12];
          if (!v18)
          {
            v12 = v17 + 2;
            if (v17 + 2 >= v10)
              goto LABEL_36;
            v18 = v33[v12];
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v10)
              {
LABEL_36:
                swift_release(v3);
                v2 = v32;
                v31 = 1 << *(_BYTE *)(v3 + 32);
                if (v31 > 63)
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v31;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v18 = v33[v19];
              if (!v18)
              {
                while (1)
                {
                  v12 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_42;
                  if (v12 >= v10)
                    goto LABEL_36;
                  v18 = v33[v12];
                  ++v19;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v12 = v19;
            }
          }
        }
LABEL_26:
        v9 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v12 << 6);
      }
      v20 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
      v21 = *v20;
      v22 = v20[1];
      Hasher.init(_seed:)(v34, *(_QWORD *)(v6 + 40));
      String.hash(into:)(v34, v21, v22);
      v23 = Hasher._finalize()();
      v24 = -1 << *(_BYTE *)(v6 + 32);
      v25 = v23 & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v11 + 8 * v26);
        }
        while (v30 == -1);
        v13 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v13);
      *v14 = v21;
      v14[1] = v22;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  swift_release(v3);
  *v2 = v6;
}

void sub_100205454(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100053F2C(&qword_1005DB520);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 1);
  if (*(_QWORD *)(v3 + 16))
  {
    v6 = 1 << *(_BYTE *)(v3 + 32);
    v7 = (_QWORD *)(v3 + 56);
    v8 = -1;
    if (v6 < 64)
      v8 = ~(-1 << v6);
    v9 = v8 & *(_QWORD *)(v3 + 56);
    v10 = (unint64_t)(v6 + 63) >> 6;
    swift_retain(v3);
    v11 = 0;
    while (1)
    {
      if (v9)
      {
        v12 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v13 = v12 | (v11 << 6);
      }
      else
      {
        v14 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
          __break(1u);
LABEL_31:
          __break(1u);
          return;
        }
        if (v14 >= v10)
          goto LABEL_25;
        v15 = v7[v14];
        ++v11;
        if (!v15)
        {
          v11 = v14 + 1;
          if (v14 + 1 >= v10)
            goto LABEL_25;
          v15 = v7[v11];
          if (!v15)
          {
            v11 = v14 + 2;
            if (v14 + 2 >= v10)
              goto LABEL_25;
            v15 = v7[v11];
            if (!v15)
            {
              v16 = v14 + 3;
              if (v16 >= v10)
              {
LABEL_25:
                swift_release(v3);
                v17 = 1 << *(_BYTE *)(v3 + 32);
                if (v17 > 63)
                  bzero((void *)(v3 + 56), ((unint64_t)(v17 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v7 = -1 << v17;
                *(_QWORD *)(v3 + 16) = 0;
                break;
              }
              v15 = v7[v16];
              if (!v15)
              {
                while (1)
                {
                  v11 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    goto LABEL_31;
                  if (v11 >= v10)
                    goto LABEL_25;
                  v15 = v7[v11];
                  ++v16;
                  if (v15)
                    goto LABEL_24;
                }
              }
              v11 = v16;
            }
          }
        }
LABEL_24:
        v9 = (v15 - 1) & v15;
        v13 = __clz(__rbit64(v15)) + (v11 << 6);
      }
      sub_10020569C(*(_BYTE *)(*(_QWORD *)(v3 + 48) + v13), v5);
    }
  }
  swift_release(v3);
  *v2 = v5;
}

unint64_t sub_10020561C(uint64_t a1, uint64_t a2)
{
  Swift::Int v4;
  unint64_t result;

  v4 = NSObject._rawHashValue(seed:)(*(_QWORD *)(a2 + 40));
  result = _HashTable.nextHole(atOrAfter:)(v4 & ~(-1 << *(_BYTE *)(a2 + 32)), a2 + 56, ~(-1 << *(_BYTE *)(a2 + 32)));
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

unint64_t sub_10020569C(char a1, uint64_t a2)
{
  Swift::UInt v4;
  Swift::Int v5;
  unint64_t result;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(a2 + 40));
  switch(a1)
  {
    case 2:
      v4 = 0;
      goto LABEL_9;
    case 3:
      v4 = 1;
      goto LABEL_9;
    case 4:
      v4 = 2;
      goto LABEL_9;
    case 5:
      v4 = 4;
      goto LABEL_9;
    case 6:
      v4 = 5;
      goto LABEL_9;
    case 7:
      v4 = 6;
LABEL_9:
      Hasher._combine(_:)(v4);
      break;
    default:
      Hasher._combine(_:)(3uLL);
      Hasher._combine(_:)(a1 & 1);
      break;
  }
  v5 = Hasher._finalize()();
  result = _HashTable.nextHole(atOrAfter:)(v5 & ~(-1 << *(_BYTE *)(a2 + 32)), a2 + 56, ~(-1 << *(_BYTE *)(a2 + 32)));
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_BYTE *)(*(_QWORD *)(a2 + 48) + result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_1002057C0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, unint64_t, uint64_t);
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;

  v30 = a1;
  v6 = type metadata accessor for FMFFriend(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v29 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_100204938(v12, (uint64_t (*)(uint64_t))&type metadata accessor for FMFFriend, &qword_1005DB508, &qword_1005D4DB8, (uint64_t)&protocol conformance descriptor for FMFFriend);
  }
  else
  {
    if (v11 > v10)
    {
      sub_100206FBC((uint64_t (*)(_QWORD))&type metadata accessor for FMFFriend, &qword_1005DB508);
      goto LABEL_12;
    }
    sub_1002071E0(v12, (uint64_t (*)(uint64_t))&type metadata accessor for FMFFriend, &qword_1005DB508, &qword_1005D4DB8, (uint64_t)&protocol conformance descriptor for FMFFriend);
  }
  v13 = *v3;
  v14 = *(_QWORD *)(*v3 + 40);
  v15 = sub_100008000(&qword_1005D4DB8, (uint64_t (*)(uint64_t))&type metadata accessor for FMFFriend, (uint64_t)&protocol conformance descriptor for FMFFriend);
  v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v6, v15);
  v17 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v16 & ~v17;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v18 = ~v17;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v20(v9, *(_QWORD *)(v13 + 48) + v19 * a2, v6);
      v21 = sub_100008000(&qword_1005DB500, (uint64_t (*)(uint64_t))&type metadata accessor for FMFFriend, (uint64_t)&protocol conformance descriptor for FMFFriend);
      v22 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v30, v6, v21);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v22 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v18;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v23 = v30;
  v24 = *v29;
  *(_QWORD *)(*v29 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v24 + 48) + *(_QWORD *)(v7 + 72) * a2, v23, v6);
  v26 = *(_QWORD *)(v24 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (!v27)
  {
    *(_QWORD *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v6);
  __break(1u);
  return result;
}

uint64_t sub_100205A14(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, unint64_t, uint64_t);
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;

  v30 = a1;
  v6 = type metadata accessor for FMIPItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v29 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_100204938(v12, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItem, &qword_1005D9950, &qword_1005D4DD0, (uint64_t)&protocol conformance descriptor for FMIPItem);
  }
  else
  {
    if (v11 > v10)
    {
      sub_100206FBC((uint64_t (*)(_QWORD))&type metadata accessor for FMIPItem, &qword_1005D9950);
      goto LABEL_12;
    }
    sub_1002071E0(v12, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItem, &qword_1005D9950, &qword_1005D4DD0, (uint64_t)&protocol conformance descriptor for FMIPItem);
  }
  v13 = *v3;
  v14 = *(_QWORD *)(*v3 + 40);
  v15 = sub_100008000(&qword_1005D4DD0, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItem, (uint64_t)&protocol conformance descriptor for FMIPItem);
  v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v6, v15);
  v17 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v16 & ~v17;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v18 = ~v17;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v20(v9, *(_QWORD *)(v13 + 48) + v19 * a2, v6);
      v21 = sub_100008000(&qword_1005E3B80, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItem, (uint64_t)&protocol conformance descriptor for FMIPItem);
      v22 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v30, v6, v21);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v22 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v18;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v23 = v30;
  v24 = *v29;
  *(_QWORD *)(*v29 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v24 + 48) + *(_QWORD *)(v7 + 72) * a2, v23, v6);
  v26 = *(_QWORD *)(v24 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (!v27)
  {
    *(_QWORD *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v6);
  __break(1u);
  return result;
}

void sub_100205C68(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  __int128 v25[4];

  v4 = v3;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_14;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_100204F34(v9);
  }
  else
  {
    if (v8 > v7)
    {
      sub_100206AC0();
      goto LABEL_14;
    }
    sub_100207774(v9);
  }
  v10 = *v3;
  Hasher.init(_seed:)(v25, *(_QWORD *)(*v3 + 40));
  sub_1003230AC(v25, a1);
  v11 = Hasher._finalize()();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  a2 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v13 = *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * a2);
    v14 = swift_bridgeObjectRetain(v13);
    v15 = sub_1003229B4(v14, a1);
    swift_bridgeObjectRelease(v13);
    if ((v15 & 1) != 0)
    {
LABEL_13:
      v20 = sub_100053F2C((uint64_t *)&unk_1005D6850);
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v20);
      __break(1u);
    }
    else
    {
      v16 = ~v12;
      while (1)
      {
        a2 = (a2 + 1) & v16;
        if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v17 = *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * a2);
        v18 = swift_bridgeObjectRetain(v17);
        v19 = sub_1003229B4(v18, a1);
        swift_bridgeObjectRelease(v17);
        if ((v19 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v21 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v21 + 48) + 8 * a2) = a1;
  v22 = *(_QWORD *)(v21 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v21 + 16) = v24;
}

void sub_100205DF4(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v29[9];

  v5 = v4;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  v11 = v9 + 1;
  if ((a4 & 1) != 0)
  {
    sub_100205178(v11);
  }
  else
  {
    if (v10 > v9)
    {
      sub_100206C68();
      goto LABEL_22;
    }
    sub_100207984(v11);
  }
  v12 = *v4;
  Hasher.init(_seed:)(v29, *(_QWORD *)(*v4 + 40));
  String.hash(into:)(v29, a1, a2);
  v13 = Hasher._finalize()();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a3 = v13 & ~v14;
  v15 = v12 + 56;
  if (((*(_QWORD *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v16 = *(_QWORD *)(v12 + 48);
    v17 = (_QWORD *)(v16 + 16 * a3);
    v18 = v17[1];
    v19 = *v17 == a1 && v18 == a2;
    if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v17, v18, a1, a2, 0) & 1) != 0)
    {
LABEL_21:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
      __break(1u);
    }
    else
    {
      v20 = ~v14;
      while (1)
      {
        a3 = (a3 + 1) & v20;
        if (((*(_QWORD *)(v15 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v21 = (_QWORD *)(v16 + 16 * a3);
        v22 = v21[1];
        v23 = *v21 == a1 && v22 == a2;
        if (v23 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v21, v22, a1, a2, 0) & 1) != 0)
          goto LABEL_21;
      }
    }
  }
LABEL_22:
  v24 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v25 = (_QWORD *)(*(_QWORD *)(v24 + 48) + 16 * a3);
  *v25 = a1;
  v25[1] = a2;
  v26 = *(_QWORD *)(v24 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (v27)
    __break(1u);
  else
    *(_QWORD *)(v24 + 16) = v28;
}

uint64_t sub_100205F8C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, unint64_t, uint64_t);
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;

  v30 = a1;
  v6 = type metadata accessor for FMIPPlaySoundChannels(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v29 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_100204938(v12, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, &qword_1005D9988, &qword_1005D7300, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
  }
  else
  {
    if (v11 > v10)
    {
      sub_100206FBC((uint64_t (*)(_QWORD))&type metadata accessor for FMIPPlaySoundChannels, &qword_1005D9988);
      goto LABEL_12;
    }
    sub_1002071E0(v12, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, &qword_1005D9988, &qword_1005D7300, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
  }
  v13 = *v3;
  v14 = *(_QWORD *)(*v3 + 40);
  v15 = sub_100008000(&qword_1005D7300, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
  v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v6, v15);
  v17 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v16 & ~v17;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v18 = ~v17;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v20(v9, *(_QWORD *)(v13 + 48) + v19 * a2, v6);
      v21 = sub_100008000(&qword_1005D7308, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPlaySoundChannels, (uint64_t)&protocol conformance descriptor for FMIPPlaySoundChannels);
      v22 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v30, v6, v21);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v22 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v18;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v23 = v30;
  v24 = *v29;
  *(_QWORD *)(*v29 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v24 + 48) + *(_QWORD *)(v7 + 72) * a2, v23, v6);
  v26 = *(_QWORD *)(v24 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (!v27)
  {
    *(_QWORD *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v6);
  __break(1u);
  return result;
}

uint64_t sub_1002061E0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, unint64_t, uint64_t);
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;

  v30 = a1;
  v6 = type metadata accessor for FMFindingTechnology(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v29 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_100204938(v12, (uint64_t (*)(uint64_t))&type metadata accessor for FMFindingTechnology, &qword_1005DB540, &qword_1005DB530, (uint64_t)&protocol conformance descriptor for FMFindingTechnology);
  }
  else
  {
    if (v11 > v10)
    {
      sub_100206FBC((uint64_t (*)(_QWORD))&type metadata accessor for FMFindingTechnology, &qword_1005DB540);
      goto LABEL_12;
    }
    sub_1002071E0(v12, (uint64_t (*)(uint64_t))&type metadata accessor for FMFindingTechnology, &qword_1005DB540, &qword_1005DB530, (uint64_t)&protocol conformance descriptor for FMFindingTechnology);
  }
  v13 = *v3;
  v14 = *(_QWORD *)(*v3 + 40);
  v15 = sub_100008000(&qword_1005DB530, (uint64_t (*)(uint64_t))&type metadata accessor for FMFindingTechnology, (uint64_t)&protocol conformance descriptor for FMFindingTechnology);
  v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v6, v15);
  v17 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v16 & ~v17;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v18 = ~v17;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v20(v9, *(_QWORD *)(v13 + 48) + v19 * a2, v6);
      v21 = sub_100008000(&qword_1005DB538, (uint64_t (*)(uint64_t))&type metadata accessor for FMFindingTechnology, (uint64_t)&protocol conformance descriptor for FMFindingTechnology);
      v22 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v30, v6, v21);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v22 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v18;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v23 = v30;
  v24 = *v29;
  *(_QWORD *)(*v29 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v24 + 48) + *(_QWORD *)(v7 + 72) * a2, v23, v6);
  v26 = *(_QWORD *)(v24 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (!v27)
  {
    *(_QWORD *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v6);
  __break(1u);
  return result;
}

void sub_100206434(int a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  Swift::UInt v10;
  Swift::Int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  _QWORD v18[9];

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    v8 = v6 + 1;
    if ((a3 & 1) != 0)
    {
      sub_100205454(v8);
    }
    else
    {
      if (v7 > v6)
      {
        sub_100206E2C();
        goto LABEL_35;
      }
      sub_100207C30(v8);
    }
    v9 = *v3;
    Hasher.init(_seed:)(v18, *(_QWORD *)(*v3 + 40));
    switch((char)a1)
    {
      case 2:
        v10 = 0;
        goto LABEL_16;
      case 3:
        v10 = 1;
        goto LABEL_16;
      case 4:
        v10 = 2;
        goto LABEL_16;
      case 5:
        v10 = 4;
        goto LABEL_16;
      case 6:
        v10 = 5;
        goto LABEL_16;
      case 7:
        v10 = 6;
LABEL_16:
        Hasher._combine(_:)(v10);
        break;
      default:
        Hasher._combine(_:)(3uLL);
        Hasher._combine(_:)(a1 & 1);
        break;
    }
    v11 = Hasher._finalize()();
    v12 = -1 << *(_BYTE *)(v9 + 32);
    a2 = v11 & ~v12;
    if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      v13 = ~v12;
      while (1)
      {
        switch(*(_BYTE *)(*(_QWORD *)(v9 + 48) + a2))
        {
          case 2:
            if (a1 != 2)
              goto LABEL_20;
            goto LABEL_34;
          case 3:
            if (a1 == 3)
              goto LABEL_34;
            goto LABEL_20;
          case 4:
            if (a1 == 4)
              goto LABEL_34;
            goto LABEL_20;
          case 5:
            if (a1 == 5)
              goto LABEL_34;
            goto LABEL_20;
          case 6:
            if (a1 != 6)
              goto LABEL_20;
            goto LABEL_34;
          case 7:
            if (a1 == 7)
              goto LABEL_34;
            goto LABEL_20;
          default:
            if ((a1 - 2) >= 6u && ((a1 ^ ((*(_BYTE *)(*(_QWORD *)(v9 + 48) + a2) & 1) == 0)) & 1) != 0)
            {
LABEL_34:
              ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for FMUTDetailAction);
              __break(1u);
              goto LABEL_35;
            }
LABEL_20:
            a2 = (a2 + 1) & v13;
            if (((*(_QWORD *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
              goto LABEL_35;
            break;
        }
      }
    }
  }
LABEL_35:
  v14 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_BYTE *)(*(_QWORD *)(v14 + 48) + a2) = a1;
  v15 = *(_QWORD *)(v14 + 16);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
  {
    __break(1u);
    JUMPOUT(0x100206694);
  }
  *(_QWORD *)(v14 + 16) = v17;
}

uint64_t sub_1002066C4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, unint64_t, uint64_t);
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;

  v30 = a1;
  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v29 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_100204938(v12, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, &qword_1005DB510, (unint64_t *)&unk_1005E4270, (uint64_t)&protocol conformance descriptor for UUID);
  }
  else
  {
    if (v11 > v10)
    {
      sub_100206FBC((uint64_t (*)(_QWORD))&type metadata accessor for UUID, &qword_1005DB510);
      goto LABEL_12;
    }
    sub_1002071E0(v12, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, &qword_1005DB510, (unint64_t *)&unk_1005E4270, (uint64_t)&protocol conformance descriptor for UUID);
  }
  v13 = *v3;
  v14 = *(_QWORD *)(*v3 + 40);
  v15 = sub_100008000((unint64_t *)&unk_1005E4270, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v16 = dispatch thunk of Hashable._rawHashValue(seed:)(v14, v6, v15);
  v17 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v16 & ~v17;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v18 = ~v17;
    v19 = *(_QWORD *)(v7 + 72);
    v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v20(v9, *(_QWORD *)(v13 + 48) + v19 * a2, v6);
      v21 = sub_100008000((unint64_t *)&unk_1005E2220, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v22 = dispatch thunk of static Equatable.== infix(_:_:)(v9, v30, v6, v21);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v22 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v18;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v23 = v30;
  v24 = *v29;
  *(_QWORD *)(*v29 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v24 + 48) + *(_QWORD *)(v7 + 72) * a2, v23, v6);
  v26 = *(_QWORD *)(v24 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (!v27)
  {
    *(_QWORD *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v6);
  __break(1u);
  return result;
}

void sub_100206918()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v1 = v0;
  sub_100053F2C(&qword_1005DB518);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v13)
      goto LABEL_28;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_28;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
      {
        v9 = v19 + 2;
        if (v19 + 2 >= v13)
          goto LABEL_28;
        v20 = *(_QWORD *)(v6 + 8 * v9);
        if (!v20)
          break;
      }
    }
LABEL_27:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v18 = v17;
  }
  v21 = v19 + 3;
  if (v21 >= v13)
    goto LABEL_28;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_100206AC0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_100053F2C(&qword_1005DB528);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    swift_bridgeObjectRetain(v17);
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_100206C68()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_100053F2C(&qword_1005D7538);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    swift_bridgeObjectRetain(v18);
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_100206E18()
{
  sub_100206FBC((uint64_t (*)(_QWORD))&type metadata accessor for FMIPPlaySoundChannels, &qword_1005D9988);
}

void sub_100206E2C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_100053F2C(&qword_1005DB520);
  v2 = *v0;
  v3 = static _SetStorage.copy(original:)(*v0);
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    swift_release(v2);
    *v1 = v4;
    return;
  }
  v5 = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)v5 >= v2 + 56 + 8 * v7)
    memmove(v5, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
}

void sub_100206FBC(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v4 = v2;
  v5 = a1(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v27 - v7;
  sub_100053F2C(a2);
  v9 = *v2;
  v10 = static _SetStorage.copy(original:)(*v2);
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    swift_release(v9);
LABEL_30:
    *v4 = v11;
    return;
  }
  v28 = v4;
  v12 = (void *)(v10 + 56);
  v13 = v9 + 56;
  v14 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)v12 >= v9 + 56 + 8 * v14)
    memmove(v12, (const void *)(v9 + 56), 8 * v14);
  v16 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v17 = 1 << *(_BYTE *)(v9 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(v9 + 56);
  v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v22 = v21 | (v16 << 6);
      goto LABEL_12;
    }
    v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v24 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v24);
    ++v16;
    if (!v25)
    {
      v16 = v24 + 1;
      if (v24 + 1 >= v20)
        goto LABEL_28;
      v25 = *(_QWORD *)(v13 + 8 * v16);
      if (!v25)
      {
        v16 = v24 + 2;
        if (v24 + 2 >= v20)
          goto LABEL_28;
        v25 = *(_QWORD *)(v13 + 8 * v16);
        if (!v25)
          break;
      }
    }
LABEL_27:
    v19 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v16 << 6);
LABEL_12:
    v23 = *(_QWORD *)(v6 + 72) * v22;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(_QWORD *)(v9 + 48) + v23, v5);
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v23, v8, v5);
  }
  v26 = v24 + 3;
  if (v26 >= v20)
  {
LABEL_28:
    swift_release(v9);
    v4 = v28;
    goto LABEL_30;
  }
  v25 = *(_QWORD *)(v13 + 8 * v26);
  if (v25)
  {
    v16 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v16 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v16);
    ++v26;
    if (v25)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
}

void sub_1002071E0(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  int64_t v41;
  uint64_t (*v42)(uint64_t);
  unint64_t *v43;
  uint64_t v44;

  v43 = a4;
  v44 = a5;
  v7 = v5;
  v42 = a2;
  v9 = a2(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v39 - v11;
  v13 = *v7;
  if (*(_QWORD *)(*v7 + 24) > a1)
    a1 = *(_QWORD *)(*v7 + 24);
  sub_100053F2C(a3);
  v14 = static _SetStorage.resize(original:capacity:move:)(v13, a1, 0);
  v15 = v14;
  if (!*(_QWORD *)(v13 + 16))
  {
    swift_release(v13);
LABEL_37:
    *v7 = v15;
    return;
  }
  v16 = 1 << *(_BYTE *)(v13 + 32);
  v17 = *(_QWORD *)(v13 + 56);
  v39 = v7;
  v40 = v13 + 56;
  if (v16 < 64)
    v18 = ~(-1 << v16);
  else
    v18 = -1;
  v19 = v18 & v17;
  v41 = (unint64_t)(v16 + 63) >> 6;
  v20 = v14 + 56;
  swift_retain(v13);
  v21 = 0;
  while (1)
  {
    if (v19)
    {
      v23 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v24 = v23 | (v21 << 6);
      goto LABEL_26;
    }
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v25 >= v41)
      goto LABEL_35;
    v26 = *(_QWORD *)(v40 + 8 * v25);
    ++v21;
    if (!v26)
    {
      v21 = v25 + 1;
      if (v25 + 1 >= v41)
        goto LABEL_35;
      v26 = *(_QWORD *)(v40 + 8 * v21);
      if (!v26)
      {
        v21 = v25 + 2;
        if (v25 + 2 >= v41)
          goto LABEL_35;
        v26 = *(_QWORD *)(v40 + 8 * v21);
        if (!v26)
          break;
      }
    }
LABEL_25:
    v19 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v21 << 6);
LABEL_26:
    v28 = *(_QWORD *)(v10 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v12, *(_QWORD *)(v13 + 48) + v28 * v24, v9);
    v29 = *(_QWORD *)(v15 + 40);
    v30 = sub_100008000(v43, v42, v44);
    v31 = dispatch thunk of Hashable._rawHashValue(seed:)(v29, v9, v30);
    v32 = -1 << *(_BYTE *)(v15 + 32);
    v33 = v31 & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v20 + 8 * (v33 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v20 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v20 + 8 * v34);
      }
      while (v38 == -1);
      v22 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v20 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(*(_QWORD *)(v15 + 48) + v22 * v28, v12, v9);
    ++*(_QWORD *)(v15 + 16);
  }
  v27 = v25 + 3;
  if (v27 >= v41)
  {
LABEL_35:
    swift_release_n(v13, 2);
    v7 = v39;
    goto LABEL_37;
  }
  v26 = *(_QWORD *)(v40 + 8 * v27);
  if (v26)
  {
    v21 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v21 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v21 >= v41)
      goto LABEL_35;
    v26 = *(_QWORD *)(v40 + 8 * v21);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_39:
  __break(1u);
}

void sub_1002074FC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  Swift::Int v20;
  id v21;
  Swift::Int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100053F2C(&qword_1005DB518);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v30 = v2;
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v11 = (unint64_t)(v7 + 63) >> 6;
  v12 = v5 + 56;
  swift_retain(v3);
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_27;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v11)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v13;
    if (!v18)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v11)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v13);
      if (!v18)
      {
        v13 = v17 + 2;
        if (v17 + 2 >= v11)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v13);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v10 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v13 << 6);
LABEL_27:
    v20 = *(_QWORD *)(v6 + 40);
    v21 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v16);
    v22 = NSObject._rawHashValue(seed:)(v20);
    v23 = -1 << *(_BYTE *)(v6 + 32);
    v24 = v22 & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v25);
      }
      while (v29 == -1);
      v14 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v14) = v21;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v11)
  {
LABEL_36:
    swift_release_n(v3, 2);
    v2 = v30;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v13 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v13 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v13 >= v11)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v13);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_100207774(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  Swift::Int v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  __int128 v23[4];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100053F2C(&qword_1005DB528);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_27:
    swift_release(v3);
    *v2 = v6;
    return;
  }
  v22 = v2;
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v11 = (unint64_t)(v7 + 63) >> 6;
  v12 = v5 + 56;
  swift_retain(v3);
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v15 = v14 | (v13 << 6);
      goto LABEL_10;
    }
    v19 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v19 >= v11)
      goto LABEL_26;
    v20 = *(_QWORD *)(v8 + 8 * v19);
    ++v13;
    if (!v20)
    {
      v13 = v19 + 1;
      if (v19 + 1 >= v11)
        goto LABEL_26;
      v20 = *(_QWORD *)(v8 + 8 * v13);
      if (!v20)
      {
        v13 = v19 + 2;
        if (v19 + 2 >= v11)
          goto LABEL_26;
        v20 = *(_QWORD *)(v8 + 8 * v13);
        if (!v20)
          break;
      }
    }
LABEL_25:
    v10 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_10:
    v16 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v15);
    Hasher.init(_seed:)(v23, *(_QWORD *)(v6 + 40));
    swift_bridgeObjectRetain(v16);
    sub_1003230AC(v23, v16);
    v17 = Hasher._finalize()();
    v18 = _HashTable.nextHole(atOrAfter:)(v17 & ~(-1 << *(_BYTE *)(v6 + 32)), v6 + 56, ~(-1 << *(_BYTE *)(v6 + 32)));
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v18) = v16;
    ++*(_QWORD *)(v6 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v11)
  {
LABEL_26:
    swift_release(v3);
    v2 = v22;
    goto LABEL_27;
  }
  v20 = *(_QWORD *)(v8 + 8 * v21);
  if (v20)
  {
    v13 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v13 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v13 >= v11)
      goto LABEL_26;
    v20 = *(_QWORD *)(v8 + 8 * v13);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_29:
  __break(1u);
}

void sub_100207984(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  Swift::Int v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  int64_t v32;
  _QWORD v33[9];

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100053F2C(&qword_1005D7538);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  v6 = v5;
  if (!*(_QWORD *)(v3 + 16))
  {
    swift_release(v3);
LABEL_38:
    *v2 = v6;
    return;
  }
  v7 = 1 << *(_BYTE *)(v3 + 32);
  v8 = v3 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v3 + 56);
  v31 = v2;
  v32 = (unint64_t)(v7 + 63) >> 6;
  v11 = v5 + 56;
  swift_retain(v3);
  v12 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v12 << 6);
      goto LABEL_27;
    }
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v32)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v17);
    ++v12;
    if (!v18)
    {
      v12 = v17 + 1;
      if (v17 + 1 >= v32)
        goto LABEL_36;
      v18 = *(_QWORD *)(v8 + 8 * v12);
      if (!v18)
      {
        v12 = v17 + 2;
        if (v17 + 2 >= v32)
          goto LABEL_36;
        v18 = *(_QWORD *)(v8 + 8 * v12);
        if (!v18)
          break;
      }
    }
LABEL_26:
    v10 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v12 << 6);
LABEL_27:
    v20 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v21 = *v20;
    v22 = v20[1];
    Hasher.init(_seed:)(v33, *(_QWORD *)(v6 + 40));
    swift_bridgeObjectRetain(v22);
    String.hash(into:)(v33, v21, v22);
    v23 = Hasher._finalize()();
    v24 = -1 << *(_BYTE *)(v6 + 32);
    v25 = v23 & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v26);
      }
      while (v30 == -1);
      v13 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    v14 = (_QWORD *)(*(_QWORD *)(v6 + 48) + 16 * v13);
    *v14 = v21;
    v14[1] = v22;
    ++*(_QWORD *)(v6 + 16);
  }
  v19 = v17 + 3;
  if (v19 >= v32)
  {
LABEL_36:
    swift_release_n(v3, 2);
    v2 = v31;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v8 + 8 * v19);
  if (v18)
  {
    v12 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    v12 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v12 >= v32)
      goto LABEL_36;
    v18 = *(_QWORD *)(v8 + 8 * v12);
    ++v19;
    if (v18)
      goto LABEL_26;
  }
LABEL_40:
  __break(1u);
}

void sub_100207C30(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  v2 = v1;
  v3 = *v1;
  if (*(_QWORD *)(*v1 + 24) <= a1)
    v4 = a1;
  else
    v4 = *(_QWORD *)(*v1 + 24);
  sub_100053F2C(&qword_1005DB520);
  v5 = static _SetStorage.resize(original:capacity:move:)(v3, v4, 0);
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    swift_release(v3);
    *v2 = v5;
    return;
  }
  v6 = 1 << *(_BYTE *)(v3 + 32);
  v7 = v3 + 56;
  v8 = -1;
  if (v6 < 64)
    v8 = ~(-1 << v6);
  v9 = v8 & *(_QWORD *)(v3 + 56);
  v10 = (unint64_t)(v6 + 63) >> 6;
  swift_retain(v3);
  v11 = 0;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v11 << 6);
      goto LABEL_9;
    }
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v14 >= v10)
      goto LABEL_25;
    v15 = *(_QWORD *)(v7 + 8 * v14);
    ++v11;
    if (!v15)
    {
      v11 = v14 + 1;
      if (v14 + 1 >= v10)
        goto LABEL_25;
      v15 = *(_QWORD *)(v7 + 8 * v11);
      if (!v15)
      {
        v11 = v14 + 2;
        if (v14 + 2 >= v10)
          goto LABEL_25;
        v15 = *(_QWORD *)(v7 + 8 * v11);
        if (!v15)
          break;
      }
    }
LABEL_24:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v11 << 6);
LABEL_9:
    sub_10020569C(*(_BYTE *)(*(_QWORD *)(v3 + 48) + v13), v5);
  }
  v16 = v14 + 3;
  if (v16 >= v10)
  {
LABEL_25:
    swift_release(v3);
    goto LABEL_26;
  }
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
  {
    v11 = v16;
    goto LABEL_24;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v10)
      goto LABEL_25;
    v15 = *(_QWORD *)(v7 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_24;
  }
LABEL_28:
  __break(1u);
}

char *sub_100207DBC(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t inited;
  void *v14;
  NSString *v15;
  void *v16;
  NSString *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  Class isa;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  char *v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  _BYTE v48[64];
  _OWORD v49[7];
  uint64_t v50;

  v47 = type metadata accessor for UIHostingControllerSizingOptions(0);
  v3 = *(_QWORD *)(v47 - 8);
  __chkstk_darwin(v47);
  v46 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = type metadata accessor for Font.TextStyle(0);
  v43 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FMChooseMapView(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_allocWithZone((Class)MKMapView);
  v45 = v1;
  v11 = objc_msgSend(v10, "init");
  v12 = sub_100053F2C(&qword_1005D5868);
  inited = swift_initStackObject(v12, v48);
  *(_OWORD *)(inited + 16) = xmmword_100481730;
  *(_QWORD *)(inited + 32) = NSForegroundColorAttributeName;
  v14 = (void *)objc_opt_self(UIColor);
  v15 = NSForegroundColorAttributeName;
  *(_QWORD *)(inited + 40) = objc_msgSend(v14, "labelColor");
  *(_QWORD *)(inited + 48) = NSFontAttributeName;
  v16 = (void *)objc_opt_self(UIFont);
  v17 = NSFontAttributeName;
  v18 = a1;
  *(_QWORD *)(inited + 56) = objc_msgSend(v16, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  v19 = sub_10011D69C(inited);
  v20 = sub_1000C948C(v19);
  swift_bridgeObjectRelease(v19);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v22 = objc_msgSend(v11, "mapAttributionWithStringAttributes:underlineText:", isa, 1, swift_bridgeObjectRelease(v20).n128_f64[0]);

  v23 = type metadata accessor for FMChooseMapViewModel(0);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  swift_retain(a1);
  v24 = v22;
  v25 = sub_1001FCC58(a1, v22);
  *(_OWORD *)v9 = xmmword_1004884D0;
  *((_OWORD *)v9 + 1) = xmmword_1004884E0;
  *((_QWORD *)v9 + 4) = 0x4028000000000000;
  v26 = &v9[*(int *)(v7 + 24)];
  *(_QWORD *)v26 = swift_getKeyPath(&unk_100488520);
  v27 = sub_100053F2C(&qword_1005D81F0);
  swift_storeEnumTagMultiPayload(v26, v27, 0);
  v28 = &v9[*(int *)(v7 + 28)];
  *(_QWORD *)v28 = swift_getKeyPath(&unk_100488550);
  v29 = sub_100053F2C(&qword_1005D81F8);
  swift_storeEnumTagMultiPayload(v28, v29, 0);
  *(_QWORD *)&v49[0] = 0x4020000000000000;
  (*(void (**)(char *, _QWORD, uint64_t))(v43 + 104))(v6, enum case for Font.TextStyle.footnote(_:), v44);
  v30 = sub_10015CC6C();
  ScaledMetric.init(wrappedValue:relativeTo:)(v49, v6, &type metadata for Double, v30);
  *((_QWORD *)v9 + 5) = sub_100208AE4;
  *((_QWORD *)v9 + 6) = v25;
  v9[56] = 0;
  v31 = objc_allocWithZone((Class)sub_100053F2C(&qword_1005DB578));
  v32 = UIHostingController.init(rootView:)(v9);
  v33 = v45;
  *(_QWORD *)&v45[OBJC_IVAR____TtC6FindMy25FMChooseMapViewController_hostingViewController] = v32;
  v34 = sub_100053F2C(&qword_1005DB580);
  v35 = swift_allocObject(v34, ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72), *(unsigned __int8 *)(v3 + 80) | 7);
  *(_OWORD *)(v35 + 16) = xmmword_100481740;
  static UIHostingControllerSizingOptions.intrinsicContentSize.getter();
  *(_QWORD *)&v49[0] = v35;
  v36 = sub_100208AEC();
  v37 = sub_100053F2C(&qword_1005DB590);
  v38 = sub_100208B34();
  v39 = v46;
  dispatch thunk of SetAlgebra.init<A>(_:)(v49, v37, v38, v47, v36);
  dispatch thunk of UIHostingController.sizingOptions.setter(v39);

  if (qword_1005D1D20 != -1)
    swift_once(&qword_1005D1D20, sub_100228680);
  v49[4] = xmmword_1005F5380;
  v49[5] = *(_OWORD *)&qword_1005F5390;
  v49[6] = xmmword_1005F53A0;
  v50 = qword_1005F53B0;
  v49[0] = xmmword_1005F5340;
  v49[1] = *(_OWORD *)algn_1005F5350;
  v49[2] = unk_1005F5360;
  v49[3] = unk_1005F5370;
  v40 = sub_100225878(v18, (uint64_t)v49);

  return v40;
}

id sub_1002082E0()
{
  char *v0;
  char *v1;
  char *v2;
  void *v3;
  id v4;
  Swift::String v5;
  Swift::String v6;
  void *object;
  NSString v8;
  double v9;
  void *v10;
  id result;
  void *v12;
  id v13;
  id v14;
  void *v15;
  Swift::String v16;

  v1 = v0;
  sub_100225BE4();
  v2 = *(char **)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollView];
  objc_msgSend(v2, "setContentInsetAdjustmentBehavior:", 2);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_batteryIndicatorView], "setHidden:", 1);
  v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryLabel];
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v4 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v16._countAndFlagsBits = 0xD000000000000023;
  v16._object = (void *)0x80000001004AA810;
  v5._object = (void *)0x80000001004AA7F0;
  v5._countAndFlagsBits = 0xD000000000000011;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v16)._object;

  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "setText:", v8, swift_bridgeObjectRelease(object).n128_f64[0]);

  objc_msgSend(v3, "setNumberOfLines:", 1);
  LODWORD(v9) = 1132068864;
  objc_msgSend(v3, "setContentCompressionResistancePriority:forAxis:", 0, v9);
  v10 = *(void **)&v1[OBJC_IVAR____TtC6FindMy25FMChooseMapViewController_hostingViewController];
  result = objc_msgSend(v10, "view");
  if (result)
  {
    v12 = result;
    v13 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    objc_msgSend(v12, "setBackgroundColor:", v13);

    objc_msgSend(v1, "addChildViewController:", v10);
    v14 = *(id *)&v2[OBJC_IVAR____TtC6FindMy12FMScrollView_content];
    result = objc_msgSend(v10, "view");
    if (result)
    {
      v15 = result;
      objc_msgSend(v14, "addSubview:", result);

      return objc_msgSend(v10, "didMoveToParentViewController:", v1);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_100208550()
{
  char *v0;
  id v1;
  void *v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  Class isa;

  sub_10022659C();
  v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy25FMChooseMapViewController_hostingViewController], "view");
  if (v1)
  {
    v2 = v1;
    if (qword_1005D1D20 != -1)
      swift_once(&qword_1005D1D20, sub_100228680);
    v3 = *(double *)&qword_1005F5368;
    objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v4 = sub_100053F2C(&qword_1005D2F10);
    v5 = swift_allocObject(v4, 64, 7);
    *(_OWORD *)(v5 + 16) = xmmword_100481720;
    v6 = objc_msgSend(v2, "topAnchor");
    v7 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_tertiaryLabel], "lastBaselineAnchor");
    v8 = objc_msgSend(v6, "constraintEqualToAnchor:constant:", v7, v3);

    *(_QWORD *)(v5 + 32) = v8;
    v9 = objc_msgSend(v2, "leadingAnchor");
    v10 = objc_msgSend(v0, "view");
    if (v10)
    {
      v11 = v10;
      v12 = objc_msgSend(v10, "layoutMarginsGuide");

      v13 = objc_msgSend(v12, "leadingAnchor");
      v14 = objc_msgSend(v9, "constraintEqualToAnchor:", v13);

      *(_QWORD *)(v5 + 40) = v14;
      v15 = objc_msgSend(v2, "trailingAnchor");
      v16 = objc_msgSend(v0, "view");
      if (v16)
      {
        v17 = v16;
        v18 = (void *)objc_opt_self(NSLayoutConstraint);
        v19 = objc_msgSend(v17, "layoutMarginsGuide");

        v20 = objc_msgSend(v19, "trailingAnchor");
        v21 = objc_msgSend(v15, "constraintEqualToAnchor:", v20);

        *(_QWORD *)(v5 + 48) = v21;
        v22 = objc_msgSend(v2, "bottomAnchor");
        v23 = objc_msgSend(*(id *)(*(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollView]+ OBJC_IVAR____TtC6FindMy12FMScrollView_content), "bottomAnchor");
        v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

        *(_QWORD *)(v5 + 56) = v24;
        specialized Array._endMutation()(v25);
        sub_100048C64();
        isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v18, "activateConstraints:", isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_1002089E4()
{
  uint64_t v0;

}

uint64_t type metadata accessor for FMChooseMapViewController()
{
  return objc_opt_self(_TtC6FindMy25FMChooseMapViewController);
}

uint64_t sub_100208A24()
{
  return EnvironmentValues.dynamicTypeSize.getter();
}

uint64_t sub_100208A44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = type metadata accessor for DynamicTypeSize(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return EnvironmentValues.dynamicTypeSize.setter(v4);
}

uint64_t sub_100208AC4()
{
  return EnvironmentValues.presentationMode.getter();
}

uint64_t sub_100208AE4()
{
  uint64_t v0;

  return j__swift_retain(v0);
}

unint64_t sub_100208AEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005DB588;
  if (!qword_1005DB588)
  {
    v1 = type metadata accessor for UIHostingControllerSizingOptions(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for UIHostingControllerSizingOptions, v1);
    atomic_store(result, (unint64_t *)&qword_1005DB588);
  }
  return result;
}

unint64_t sub_100208B34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005DB598;
  if (!qword_1005DB598)
  {
    v1 = sub_10004058C(&qword_1005DB590);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1005DB598);
  }
  return result;
}

uint64_t destroy for FMLostModeContext(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[5]);
  return swift_bridgeObjectRelease(a1[7]);
}

uint64_t initializeWithCopy for FMPersonLocationTrigger(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

_QWORD *assignWithCopy for FMPersonLocationTrigger(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[4] = a2[4];
  v8 = a2[5];
  v9 = a1[5];
  a1[5] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  a1[6] = a2[6];
  v10 = a2[7];
  v11 = a1[7];
  a1[7] = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  return a1;
}

uint64_t assignWithTake for FMPersonLocationTrigger(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v10;
  swift_bridgeObjectRelease(v11);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMPersonLocationTrigger(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMPersonLocationTrigger(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMPersonLocationTrigger()
{
  return &type metadata for FMPersonLocationTrigger;
}

double sub_100208E34()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double result;
  _BYTE v28[24];
  objc_super v29;

  v1 = v0;
  v29.receiver = v0;
  v29.super_class = (Class)type metadata accessor for FMSideBarViewController();
  objc_msgSendSuper2(&v29, "viewDidLoad");
  sub_1002090D8();
  sub_100209280();
  v2 = OBJC_IVAR____TtC6FindMy23FMSideBarViewController_mediator;
  v3 = *(void **)(*(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy23FMSideBarViewController_mediator] + 16);
  v4 = type metadata accessor for FMConditionSubscription(0);
  v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v6 = v5 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber;
  *(_QWORD *)(v6 + 8) = 0;
  swift_unknownObjectWeakInit(v6);
  v7 = v3;
  v8 = v0;
  UUID.init()(v8);
  v9 = v5 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber;
  *(_QWORD *)(v9 + 8) = &off_100551170;
  swift_unknownObjectWeakAssign(v9, v8);

  v10 = &v7[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions];
  swift_beginAccess(&v7[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions], v28, 33, 0);
  v11 = swift_retain(v5);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v11);
  v13 = *(_QWORD *)((*(_QWORD *)v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v12 = *(_QWORD *)((*(_QWORD *)v10 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v13 >= v12 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v12 > 1, v13 + 1, 1);
  v14 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v5);
  specialized Array._endMutation()(v14);
  swift_endAccess(v28);
  swift_release(v5);

  v15 = *(_QWORD *)(*(_QWORD *)&v1[v2] + 24);
  v16 = type metadata accessor for FMDevicesSubscription(0);
  v17 = swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  v18 = v17 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
  *(_QWORD *)(v18 + 8) = 0;
  swift_unknownObjectWeakInit(v18);
  v19 = v8;
  v20 = swift_retain(v15);
  UUID.init()(v20);
  v21 = v17 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
  *(_QWORD *)(v21 + 8) = &off_1005510D0;
  swift_unknownObjectWeakAssign(v21, v19);

  swift_beginAccess(v15 + 16, v28, 33, 0);
  v22 = swift_retain(v17);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v22);
  v24 = *(_QWORD *)((*(_QWORD *)(v15 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v23 = *(_QWORD *)((*(_QWORD *)(v15 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v24 >= v23 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v23 > 1, v24 + 1, 1);
  v25 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v17);
  specialized Array._endMutation()(v25);
  swift_endAccess(v28);
  swift_release(v15);
  v26 = *(_QWORD *)&v19[OBJC_IVAR____TtC6FindMy23FMSideBarViewController_devicesSubscription];
  *(_QWORD *)&v19[OBJC_IVAR____TtC6FindMy23FMSideBarViewController_devicesSubscription] = v17;
  *(_QWORD *)&result = swift_release(v26).n128_u64[0];
  return result;
}

void sub_1002090D8()
{
  char *v0;
  id v1;
  void *v2;
  _QWORD *v3;
  _QWORD *v4;
  id v5;
  Class isa;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  unint64_t v13;
  id v14;
  id v15;
  id v16;

  v1 = objc_msgSend(v0, "view");
  if (!v1)
  {
    __break(1u);
    goto LABEL_9;
  }
  v2 = v1;
  objc_msgSend(v1, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy23FMSideBarViewController_sideBarView]);

  v3 = sub_100209860();
  v4 = sub_1004625AC((uint64_t)v3);
  v5 = objc_allocWithZone((Class)type metadata accessor for FMSegmentedControl());
  isa = Array._bridgeToObjectiveC()().super.isa;
  v7 = objc_msgSend(v5, "initWithItems:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

  v8 = OBJC_IVAR____TtC6FindMy23FMSideBarViewController_segmentedControl;
  v9 = *(void **)&v0[OBJC_IVAR____TtC6FindMy23FMSideBarViewController_segmentedControl];
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy23FMSideBarViewController_segmentedControl] = v7;

  v10 = *(void **)&v0[v8];
  if (!v10)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  objc_msgSend(v10, "addTarget:action:forControlEvents:", v0, "indexChangedWithSender:", 4096);
  v11 = *(void **)&v0[v8];
  if (!v11)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  objc_msgSend(v11, "addTarget:action:forControlEvents:", v0, "indexNotChangedWithSender:", 64);
  v12 = *(void **)&v0[v8];
  if (!v12)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v13 = v3[2];
  v14 = v12;
  objc_msgSend(v14, "setHidden:", v13 < 2, swift_bridgeObjectRelease(v3).n128_f64[0]);

  v15 = objc_msgSend(v0, "view");
  if (!v15)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (*(_QWORD *)&v0[v8])
  {
    v16 = v15;
    objc_msgSend(v15, "addSubview:");

    return;
  }
LABEL_13:
  __break(1u);
}

void sub_100209280()
{
  char *v0;
  uint64_t v1;
  void *v2;
  char *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  Class v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  void *v54;
  id v55;
  id v56;
  uint64_t v57;
  Class isa;

  v1 = OBJC_IVAR____TtC6FindMy23FMSideBarViewController_segmentedControl;
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy23FMSideBarViewController_segmentedControl];
  if (!v2)
  {
    __break(1u);
    goto LABEL_18;
  }
  v3 = v0;
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMy23FMSideBarViewController_sideBarView];
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = *(void **)&v0[v1];
  if (!v5)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v6 = objc_msgSend(v5, "topAnchor");
  v7 = objc_msgSend(v3, "view");
  if (!v7)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v8 = v7;
  v9 = objc_msgSend(v7, "safeAreaLayoutGuide");

  v10 = objc_msgSend(v9, "topAnchor");
  if (qword_1005D1E88 != -1)
    swift_once(&qword_1005D1E88, sub_1002E30A0);
  v11 = objc_msgSend(v6, "constraintEqualToAnchor:constant:", v10, *(double *)&qword_1005F59C8);

  v12 = OBJC_IVAR____TtC6FindMy23FMSideBarViewController_topConstraint;
  v13 = *(void **)&v3[OBJC_IVAR____TtC6FindMy23FMSideBarViewController_topConstraint];
  *(_QWORD *)&v3[OBJC_IVAR____TtC6FindMy23FMSideBarViewController_topConstraint] = v11;

  v14 = *(void **)&v3[v12];
  if (!v14)
  {
LABEL_12:
    v34 = sub_100053F2C(&qword_1005D2F10);
    v35 = swift_allocObject(v34, 64, 7);
    *(_OWORD *)(v35 + 16) = xmmword_100481720;
    v36 = objc_msgSend(v4, "topAnchor");
    v37 = objc_msgSend(v3, "view");
    if (v37)
    {
      v38 = v37;
      v39 = objc_msgSend(v37, "topAnchor");

      v40 = objc_msgSend(v36, "constraintEqualToAnchor:", v39);
      *(_QWORD *)(v35 + 32) = v40;
      v41 = objc_msgSend(v4, "bottomAnchor");
      v42 = objc_msgSend(v3, "view");
      if (v42)
      {
        v43 = v42;
        v44 = objc_msgSend(v42, "bottomAnchor");

        v45 = objc_msgSend(v41, "constraintEqualToAnchor:", v44);
        *(_QWORD *)(v35 + 40) = v45;
        v46 = objc_msgSend(v4, "leadingAnchor");
        v47 = objc_msgSend(v3, "view");
        if (v47)
        {
          v48 = v47;
          v49 = objc_msgSend(v47, "leadingAnchor");

          v50 = objc_msgSend(v46, "constraintEqualToAnchor:", v49);
          *(_QWORD *)(v35 + 48) = v50;
          v51 = objc_msgSend(v4, "trailingAnchor");
          v52 = objc_msgSend(v3, "view");
          if (v52)
          {
            v53 = v52;
            v54 = (void *)objc_opt_self(NSLayoutConstraint);
            v55 = objc_msgSend(v53, "trailingAnchor");

            v56 = objc_msgSend(v51, "constraintEqualToAnchor:", v55);
            *(_QWORD *)(v35 + 56) = v56;
            specialized Array._endMutation()(v57);
            sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
            isa = Array._bridgeToObjectiveC()().super.isa;
            objc_msgSend(v54, "activateConstraints:", isa, swift_bridgeObjectRelease(v35).n128_f64[0]);

            return;
          }
          goto LABEL_23;
        }
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v15 = sub_100053F2C(&qword_1005D2F10);
  v16 = swift_allocObject(v15, 56, 7);
  *(_OWORD *)(v16 + 16) = xmmword_1004820C0;
  *(_QWORD *)(v16 + 32) = v14;
  v17 = *(void **)&v3[v1];
  if (!v17)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v18 = v16;
  v19 = v14;
  v20 = objc_msgSend(v17, "leadingAnchor");
  v21 = objc_msgSend(v3, "view");
  if (!v21)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v22 = v21;
  v23 = objc_msgSend(v21, "leadingAnchor");

  v24 = objc_msgSend(v20, "constraintEqualToAnchor:constant:", v23, 10.0);
  *(_QWORD *)(v18 + 40) = v24;
  v25 = *(void **)&v3[v1];
  if (!v25)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v26 = objc_msgSend(v25, "trailingAnchor");
  v27 = objc_msgSend(v3, "view");
  if (v27)
  {
    v28 = v27;
    v29 = (void *)objc_opt_self(NSLayoutConstraint);
    v30 = objc_msgSend(v28, "trailingAnchor");

    v31 = objc_msgSend(v26, "constraintEqualToAnchor:constant:", v30, -10.0);
    *(_QWORD *)(v18 + 48) = v31;
    specialized Array._endMutation()(v32);
    sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
    v33 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v29, "activateConstraints:", v33, swift_bridgeObjectRelease(v18).n128_f64[0]);

    goto LABEL_12;
  }
LABEL_27:
  __break(1u);
}

_QWORD *sub_100209860()
{
  uint64_t v0;
  _BYTE *v1;
  char v2;
  uint64_t v3;
  _BYTE *v4;
  char v5;
  uint64_t isUniquelyReferenced_nonNull_native;
  id v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  unint64_t v19;
  unint64_t v20;
  id v21;
  Swift::String_optional v22;
  Swift::String v23;
  Swift::String v24;
  Swift::String v25;
  unint64_t v26;
  unint64_t v27;
  char v29;
  unint64_t v30;
  unint64_t v31;
  Swift::String v32;
  Swift::String v33;
  Swift::String v34;

  v1 = *(_BYTE **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy23FMSideBarViewController_mediator) + 16);
  v2 = v1[OBJC_IVAR____TtC6FindMy19FMConditionProvider_FMIPRestricted];
  v3 = qword_1005D1F68;
  v4 = v1;
  if (v3 != -1)
    swift_once(&qword_1005D1F68, sub_100006164);
  if (byte_1005F5E31 != 1)
  {

LABEL_10:
    v11 = _swiftEmptyArrayStorage;
    if ((v2 & 1) != 0)
      goto LABEL_16;
    goto LABEL_11;
  }
  v5 = v4[OBJC_IVAR____TtC6FindMy19FMConditionProvider_FMFRestricted];

  if ((v5 & 1) != 0)
    goto LABEL_10;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v32._countAndFlagsBits = 0xD00000000000002ALL;
  v32._object = (void *)0x80000001004B51E0;
  v8._object = (void *)0x80000001004B51C0;
  v8._countAndFlagsBits = 0xD000000000000018;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v32);

  isUniquelyReferenced_nonNull_native = (uint64_t)sub_100070178(0, 1, 1, _swiftEmptyArrayStorage);
  v11 = (_QWORD *)isUniquelyReferenced_nonNull_native;
  v12 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16);
  v13 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 24);
  v14 = v12 + 1;
  if (v12 >= v13 >> 1)
  {
    v29 = v2;
    v30 = v12 + 1;
    v31 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16);
    isUniquelyReferenced_nonNull_native = (uint64_t)sub_100070178((_QWORD *)(v13 > 1), v12 + 1, 1, (_QWORD *)isUniquelyReferenced_nonNull_native);
    v12 = v31;
    v14 = v30;
    v2 = v29;
    v11 = (_QWORD *)isUniquelyReferenced_nonNull_native;
  }
  v11[2] = v14;
  *(Swift::String *)&v11[2 * v12 + 4] = v10;
  if ((v2 & 1) == 0)
  {
LABEL_11:
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(0xE000000000000000);
    v15 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v16._countAndFlagsBits = 0xD000000000000019;
    v33._countAndFlagsBits = 0xD00000000000002BLL;
    v33._object = (void *)0x80000001004B5190;
    v16._object = (void *)0x80000001004B5170;
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v33);

    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v11);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      isUniquelyReferenced_nonNull_native = (uint64_t)sub_100070178(0, v11[2] + 1, 1, v11);
      v11 = (_QWORD *)isUniquelyReferenced_nonNull_native;
    }
    v20 = v11[2];
    v19 = v11[3];
    if (v20 >= v19 >> 1)
    {
      isUniquelyReferenced_nonNull_native = (uint64_t)sub_100070178((_QWORD *)(v19 > 1), v20 + 1, 1, v11);
      v11 = (_QWORD *)isUniquelyReferenced_nonNull_native;
    }
    v11[2] = v20 + 1;
    *(Swift::String *)&v11[2 * v20 + 4] = v18;
  }
LABEL_16:
  if ((FMIPItemsTabEnabled.getter(isUniquelyReferenced_nonNull_native) & 1) != 0)
  {
    v21 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v22.value._countAndFlagsBits = 0xD000000000000013;
    v34._object = (void *)0x80000001004A5660;
    v22.value._object = (void *)0x80000001004A5640;
    v23._countAndFlagsBits = 0x41545F534D455449;
    v23._object = (void *)0xE900000000000042;
    v24._countAndFlagsBits = 0;
    v24._object = (void *)0xE000000000000000;
    v34._countAndFlagsBits = 0xD000000000000018;
    v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v23, v22, (NSBundle)v21, v24, v34);

    if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
      v11 = sub_100070178(0, v11[2] + 1, 1, v11);
    v27 = v11[2];
    v26 = v11[3];
    if (v27 >= v26 >> 1)
      v11 = sub_100070178((_QWORD *)(v26 > 1), v27 + 1, 1, v11);
    v11[2] = v27 + 1;
    *(Swift::String *)&v11[2 * v27 + 4] = v25;
  }
  return v11;
}

uint64_t sub_100209C10(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  char v10;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  int v15;
  Swift::String v16;
  void *object;
  _QWORD v18[2];
  unint64_t v19;
  unint64_t v20;

  v3 = type metadata accessor for FMSelectedSection(0);
  __chkstk_darwin(v3);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (char *)objc_msgSend(a1, "selectedSegmentIndex");
  v7 = OBJC_IVAR____TtC6FindMy23FMSideBarViewController_mediator;
  v8 = qword_1005D1F68;
  v9 = *(id *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy23FMSideBarViewController_mediator) + 16);
  if (v8 != -1)
    swift_once(&qword_1005D1F68, sub_100006164);
  if (byte_1005F5E31 == 1)
  {
    v10 = v9[OBJC_IVAR____TtC6FindMy19FMConditionProvider_FMFRestricted];

    if ((v10 & 1) == 0)
      goto LABEL_8;
  }
  else
  {

  }
  if (__OFADD__(v6++, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
LABEL_8:
  if ((unint64_t)(v6 + 1) < 2)
  {
    result = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC6FindMy23FMSideBarViewController_contentDelegate);
    if (!result)
      return result;
    v13 = result;
    v14 = 14;
    goto LABEL_20;
  }
  if (v6 != (char *)1)
  {
    if (v6 == (char *)2)
    {
      result = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC6FindMy23FMSideBarViewController_contentDelegate);
      if (!result)
        return result;
      v13 = result;
      v14 = 16;
      goto LABEL_20;
    }
LABEL_23:
    v19 = 0;
    v20 = 0xE000000000000000;
    _StringGuts.grow(_:)(48);
    swift_bridgeObjectRelease(v20);
    v19 = 0xD00000000000002ELL;
    v20 = 0x80000001004B5140;
    v18[1] = v6;
    v16._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = v16._object;
    String.append(_:)(v16);
    swift_bridgeObjectRelease(object);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v19, v20, "FindMy/FMSideBarViewController.swift", 36, 2, 187, 0);
    __break(1u);
    return result;
  }
  v15 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + v7) + 16)
                           + OBJC_IVAR____TtC6FindMy19FMConditionProvider_FMIPRestricted);
  result = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC6FindMy23FMSideBarViewController_contentDelegate);
  if (v15)
    v14 = 16;
  else
    v14 = 11;
  if (result)
  {
    v13 = result;
LABEL_20:
    swift_storeEnumTagMultiPayload(v5, v3, v14);
    sub_1002E33A0((uint64_t)v5);
    swift_unknownObjectRelease(v13);
    return sub_100024F00((uint64_t)v5);
  }
  return result;
}

void sub_100209EC8(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  Swift::String v16;
  void *object;
  _QWORD v18[3];
  unint64_t v19;
  unint64_t v20;

  v3 = type metadata accessor for FMSelectedSection(0);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)v18 - v7;
  v9 = objc_msgSend(a1, "selectedSegmentIndex");
  switch((unint64_t)v9)
  {
    case 0xFFFFFFFFFFFFFFFFLL:
      objc_msgSend(a1, "setSelectedSegmentIndex:", 0);
      goto LABEL_3;
    case 0uLL:
LABEL_3:
      v10 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy23FMSideBarViewController_mediator) + 56);
      v11 = v8;
      v12 = v3;
      v13 = 14;
      goto LABEL_6;
    case 1uLL:
      v10 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy23FMSideBarViewController_mediator) + 56);
      v11 = v8;
      v12 = v3;
      v13 = 11;
      goto LABEL_6;
    case 2uLL:
      v10 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy23FMSideBarViewController_mediator) + 56);
      v11 = v8;
      v12 = v3;
      v13 = 16;
LABEL_6:
      swift_storeEnumTagMultiPayload(v11, v12, v13);
      v14 = v10 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
      swift_beginAccess(v10 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, &v19, 0, 0);
      sub_100024F3C(v14, (uint64_t)v6);
      swift_beginAccess(v14, v18, 33, 0);
      swift_retain(v10);
      sub_100009DF8((uint64_t)v8, v14);
      swift_endAccess(v18);
      sub_10004C8A4((uint64_t)v6);
      sub_100024F00((uint64_t)v8);
      sub_100024F00((uint64_t)v6);
      swift_release(v10);
      break;
    default:
      v19 = 0;
      v20 = 0xE000000000000000;
      v15 = v9;
      _StringGuts.grow(_:)(48);
      swift_bridgeObjectRelease(v20);
      v19 = 0xD00000000000002ELL;
      v20 = 0x80000001004B5140;
      v18[0] = v15;
      v16._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
      object = v16._object;
      String.append(_:)(v16);
      swift_bridgeObjectRelease(object);
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v19, v20, "FindMy/FMSideBarViewController.swift", 36, 2, 206, 0);
      __break(1u);
      break;
  }
}

void sub_10020A178(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  void *v11;
  uint64_t v12;
  id v13;
  NSString v14;
  double v15;
  void *v16;

  v2 = OBJC_IVAR____TtC6FindMy23FMSideBarViewController_segmentedControl;
  v3 = *(void **)(a1 + OBJC_IVAR____TtC6FindMy23FMSideBarViewController_segmentedControl);
  if (!v3)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v4 = objc_msgSend(v3, "selectedSegmentIndex");
  v5 = *(void **)(a1 + v2);
  if (!v5)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  objc_msgSend(v5, "removeAllSegments");
  v6 = sub_100209860();
  v7 = v6;
  v8 = v6[2];
  if (v8)
  {
    v9 = v8 - 1;
    v10 = &v6[2 * v8 + 3];
    while (v9 < v7[2])
    {
      v11 = *(void **)(a1 + v2);
      if (!v11)
        goto LABEL_11;
      v12 = *v10;
      swift_bridgeObjectRetain(*v10);
      v13 = v11;
      v14 = String._bridgeToObjectiveC()();
      objc_msgSend(v13, "insertSegmentWithTitle:atIndex:animated:", v14, 0, 1, swift_bridgeObjectRelease(v12).n128_f64[0]);

      --v9;
      v10 -= 2;
      if (v9 == -1)
        goto LABEL_8;
    }
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
LABEL_8:
  *(_QWORD *)&v15 = swift_bridgeObjectRelease(v7).n128_u64[0];
  v16 = *(void **)(a1 + v2);
  if (v16)
  {
    objc_msgSend(v16, "setSelectedSegmentIndex:", v4, v15);
    return;
  }
LABEL_14:
  __break(1u);
}

id sub_10020A2D8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMSideBarViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMSideBarViewController()
{
  return objc_opt_self(_TtC6FindMy23FMSideBarViewController);
}

uint64_t sub_10020A3A0()
{
  return sub_10020A3F8((uint64_t)&unk_100551268, (uint64_t)sub_10020A6D4, (uint64_t)&unk_100551280);
}

uint64_t sub_10020A3CC()
{
  return sub_10020A3F8((uint64_t)&unk_100551218, (uint64_t)sub_10020A5F4, (uint64_t)&unk_100551230);
}

uint64_t sub_10020A3F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[5];
  uint64_t v28;

  v7 = v3;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v26 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v15 = (void *)static OS_dispatch_queue.main.getter(v14);
  v16 = swift_allocObject(a1, 24, 7);
  *(_QWORD *)(v16 + 16) = v3;
  aBlock[4] = a2;
  v28 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = a3;
  v17 = _Block_copy(aBlock);
  v18 = v28;
  v19 = v7;
  swift_release(v18);
  static DispatchQoS.unspecified.getter(v20);
  aBlock[0] = _swiftEmptyArrayStorage;
  v21 = sub_100056580();
  v22 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v23 = sub_1000555E4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v22, v23, v8, v21);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v10, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v25);
}

uint64_t sub_10020A5D0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10020A5F4()
{
  uint64_t v0;

  sub_10020A178(*(_QWORD *)(v0 + 16));
}

void sub_10020A60C()
{
  char *v0;
  char *v1;
  uint64_t v2;

  v1 = &v0[OBJC_IVAR____TtC6FindMy23FMSideBarViewController_contentDelegate];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1);
  v2 = OBJC_IVAR____TtC6FindMy23FMSideBarViewController_sideBarView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMSideBarView()), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy23FMSideBarViewController_segmentedControl] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy23FMSideBarViewController_topConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy23FMSideBarViewController_devicesSubscription] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMSideBarViewController.swift", 36, 2, 34, 0);
  __break(1u);
}

void sub_10020A6DC(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *(_QWORD *)(type metadata accessor for FMIPItem(0) - 8);
  v3 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v3 = (_QWORD *)sub_10020CE98(v3);
  v4 = v3[2];
  v5[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_10020A75C(v5);
  *a1 = v3;
}

void sub_10020A75C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  Swift::Int v43;
  Swift::Int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  Swift::Int v50;
  unint64_t v51;
  Swift::Int v52;
  Swift::Int v53;
  uint64_t v54;
  char *v55;
  void (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, char *, uint64_t);
  char *v65;
  uint64_t v66;
  uint64_t (*v67)(uint64_t, uint64_t);
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t);
  Swift::Int v70;
  uint64_t v71;
  Swift::Int v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  void (*v78)(char *, uint64_t);
  char *v79;
  uint64_t v80;
  uint64_t (*v81)(char *, uint64_t, uint64_t);
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  void (*v90)(uint64_t, char *, uint64_t);
  uint64_t (*v91)(uint64_t, uint64_t);
  uint64_t v92;
  int v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  Swift::Int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  Swift::Int v108;
  char *v109;
  uint64_t v110;
  Swift::Int v111;
  Swift::Int v112;
  void (*v113)(char *, uint64_t);
  uint64_t v114;
  Swift::Int v115;
  uint64_t v116;
  uint64_t (*v117)(char *, uint64_t, uint64_t);
  uint64_t v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(uint64_t, char *, uint64_t);
  char *v126;
  uint64_t v127;
  uint64_t (*v128)(uint64_t, uint64_t);
  uint64_t v129;
  void (*v130)(char *, uint64_t);
  char *v131;
  char *v132;
  uint64_t v133;
  char *v134;
  char *v135;
  char v136;
  void (*v137)(char *, uint64_t);
  void (*v138)(char *, uint64_t);
  char *v139;
  uint64_t v140;
  char *v141;
  char *v142;
  void (*v143)(char *, char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v145;
  unint64_t v146;
  char *v147;
  char *v148;
  Swift::Int v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  BOOL v161;
  unint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  BOOL v171;
  uint64_t v172;
  char v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  BOOL v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  uint64_t v197;
  unint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  unint64_t v203;
  _QWORD *v204;
  uint64_t v205;
  _QWORD *v206;
  Swift::Int v207;
  char *v208;
  char *v209;
  char *v210;
  char *v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  Swift::Int v216;
  char *v217;
  char *v218;
  char *v219;
  char *v220;
  Swift::Int v221;
  char *v222;
  uint64_t v223;
  unint64_t v224;
  uint64_t v225;
  char *v226;
  char *v227;
  uint64_t (*v228)(uint64_t, uint64_t);
  char *v229;
  char *v230;
  char *v231;
  uint64_t (*v232)(char *, uint64_t, uint64_t);
  void (*v233)(char *, uint64_t, uint64_t);
  Swift::Int v234;
  uint64_t v235;
  int v236;
  uint64_t v237;
  uint64_t v238;
  int v239;
  char *v240;
  Swift::Int v241;
  char *v242;
  char *v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t *v247;
  uint64_t v248;

  v237 = sub_100053F2C(&qword_1005DB600);
  v3 = __chkstk_darwin(v237);
  v245 = (uint64_t)&v205 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v223 = (uint64_t)&v205 - v6;
  __chkstk_darwin(v5);
  v213 = (uint64_t)&v205 - v7;
  v8 = type metadata accessor for FMIPPartType(0);
  v246 = *(_QWORD *)(v8 - 8);
  v9 = __chkstk_darwin(v8);
  v230 = (char *)&v205 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v229 = (char *)&v205 - v12;
  v13 = __chkstk_darwin(v11);
  v219 = (char *)&v205 - v14;
  v15 = __chkstk_darwin(v13);
  v218 = (char *)&v205 - v16;
  v17 = __chkstk_darwin(v15);
  v227 = (char *)&v205 - v18;
  v19 = __chkstk_darwin(v17);
  v226 = (char *)&v205 - v20;
  v21 = __chkstk_darwin(v19);
  v209 = (char *)&v205 - v22;
  __chkstk_darwin(v21);
  v208 = (char *)&v205 - v23;
  v24 = type metadata accessor for FMIPItem(0);
  v248 = *(_QWORD *)(v24 - 8);
  v25 = __chkstk_darwin(v24);
  v217 = (char *)&v205 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v25);
  v240 = (char *)&v205 - v28;
  v29 = __chkstk_darwin(v27);
  v244 = (char *)&v205 - v30;
  v31 = __chkstk_darwin(v29);
  v243 = (char *)&v205 - v32;
  v33 = __chkstk_darwin(v31);
  v220 = (char *)&v205 - v34;
  v35 = __chkstk_darwin(v33);
  v37 = (char *)&v205 - v36;
  v38 = __chkstk_darwin(v35);
  v40 = (char *)&v205 - v39;
  __chkstk_darwin(v38);
  v42 = (char *)&v205 - v41;
  v247 = a1;
  v43 = a1[1];
  v44 = _minimumMergeRunLength(_:)(v43);
  if (v44 >= v43)
  {
    if (v43 < 0)
      goto LABEL_161;
    if (v43)
      sub_10020B8FC(0, v43, 1, v247);
    return;
  }
  if (v43 >= 0)
    v45 = v43;
  else
    v45 = v43 + 1;
  if (v43 < -1)
    goto LABEL_169;
  v222 = v37;
  v211 = v40;
  v210 = v42;
  v207 = v44;
  v225 = v1;
  if (v43 < 2)
  {
    v49 = (char *)_swiftEmptyArrayStorage;
    v224 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v248 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v248 + 80));
    v206 = _swiftEmptyArrayStorage;
    if (v43 != 1)
    {
      v51 = _swiftEmptyArrayStorage[2];
LABEL_127:
      if (v51 >= 2)
      {
        v197 = *v247;
        do
        {
          v198 = v51 - 2;
          if (v51 < 2)
            goto LABEL_156;
          if (!v197)
            goto LABEL_168;
          v199 = *(_QWORD *)&v49[16 * v198 + 32];
          v200 = *(_QWORD *)&v49[16 * v51 + 24];
          v201 = v225;
          sub_10020BE00(v197 + *(_QWORD *)(v248 + 72) * v199, v197 + *(_QWORD *)(v248 + 72) * *(_QWORD *)&v49[16 * v51 + 16], v197 + *(_QWORD *)(v248 + 72) * v200, v224);
          v225 = v201;
          if (v201)
            break;
          if (v200 < v199)
            goto LABEL_157;
          if ((swift_isUniquelyReferenced_nonNull_native(v49) & 1) == 0)
            v49 = sub_10020CE70((uint64_t)v49);
          if (v198 >= *((_QWORD *)v49 + 2))
            goto LABEL_158;
          v202 = &v49[16 * v198 + 32];
          *(_QWORD *)v202 = v199;
          *((_QWORD *)v202 + 1) = v200;
          v203 = *((_QWORD *)v49 + 2);
          if (v51 > v203)
            goto LABEL_159;
          memmove(&v49[16 * v51 + 16], &v49[16 * v51 + 32], 16 * (v203 - v51));
          *((_QWORD *)v49 + 2) = v203 - 1;
          v51 = v203 - 1;
        }
        while (v203 > 2);
      }
LABEL_138:
      swift_bridgeObjectRelease(v49);
      v204 = v206;
      v206[2] = 0;
      swift_bridgeObjectRelease(v204);
      return;
    }
  }
  else
  {
    v46 = v45 >> 1;
    v47 = static Array._allocateBufferUninitialized(minimumCapacity:)(v45 >> 1, v24);
    *(_QWORD *)(v47 + 16) = v46;
    v48 = *(unsigned __int8 *)(v248 + 80);
    v206 = (_QWORD *)v47;
    v224 = v47 + ((v48 + 32) & ~v48);
  }
  v50 = 0;
  v239 = enum case for FMIPPartType.leftBud(_:);
  v236 = enum case for FMIPPartType.rightBud(_:);
  v49 = (char *)_swiftEmptyArrayStorage;
  v238 = v24;
  v235 = v8;
  while (2)
  {
    v241 = v43;
    v52 = v50;
    v53 = v50 + 1;
    v221 = v50;
    if (v50 + 1 >= v43)
    {
      v70 = v50 + 1;
      v71 = v225;
      v72 = v50;
      goto LABEL_54;
    }
    v212 = v49;
    v54 = *v247;
    v55 = *(char **)(v248 + 72);
    v56 = *(void (**)(char *, uint64_t, uint64_t))(v248 + 16);
    v56(v210, *v247 + (_QWORD)v55 * v53, v24);
    v214 = v54;
    v242 = v55;
    v232 = (uint64_t (*)(char *, uint64_t, uint64_t))v56;
    v57 = ((uint64_t (*)(char *, uint64_t, uint64_t))v56)(v211, v54 + (_QWORD)v55 * v52, v24);
    v58 = v208;
    v59 = FMIPItem.partType.getter(v57);
    v60 = v209;
    FMIPItem.partType.getter(v59);
    v61 = v213;
    v62 = v213 + *(int *)(v237 + 48);
    v63 = v246;
    v64 = *(void (**)(uint64_t, char *, uint64_t))(v246 + 32);
    v65 = v58;
    v66 = v235;
    v64(v213, v65, v235);
    v231 = (char *)v64;
    v64(v62, v60, v66);
    v67 = *(uint64_t (**)(uint64_t, uint64_t))(v63 + 88);
    v68 = v67(v61, v66);
    v228 = v67;
    if ((_DWORD)v68 != v239)
    {
      if ((_DWORD)v68 == v236)
      {
        v68 = v67(v62, v66);
        if ((_DWORD)v68 == v239)
        {
          v69 = *(void (**)(uint64_t, uint64_t))(v246 + 8);
          v69(v213, v66);
          LODWORD(v233) = 0;
          goto LABEL_23;
        }
      }
LABEL_24:
      v75 = v226;
      v74 = v210;
      v76 = FMIPItem.partType.getter(v68);
      v77 = v227;
      v73 = v211;
      FMIPItem.partType.getter(v76);
      LODWORD(v233) = static FMIPPartType.< infix(_:_:)(v75, v77);
      v69 = *(void (**)(uint64_t, uint64_t))(v246 + 8);
      v69((uint64_t)v77, v66);
      v69((uint64_t)v75, v66);
      sub_1000051EC(v213, &qword_1005DB600);
      v49 = v212;
      v71 = v225;
      goto LABEL_25;
    }
    v68 = v67(v62, v66);
    if ((_DWORD)v68 != v236)
      goto LABEL_24;
    v69 = *(void (**)(uint64_t, uint64_t))(v246 + 8);
    v69(v213, v66);
    LODWORD(v233) = 1;
LABEL_23:
    v49 = v212;
    v71 = v225;
    v73 = v211;
    v74 = v210;
LABEL_25:
    v78 = *(void (**)(char *, uint64_t))(v248 + 8);
    v78(v73, v24);
    v78(v74, v24);
    v79 = v220;
    v234 = v221 + 2;
    if (v221 + 2 >= v241)
      goto LABEL_39;
    v216 = (_QWORD)v242 * v53;
    v80 = v214;
    v215 = (_QWORD)v242 * (v221 + 2);
    do
    {
      v81 = v232;
      v232(v222, v80 + v215, v24);
      v82 = v81(v79, v80 + v216, v24);
      v83 = v218;
      v84 = FMIPItem.partType.getter(v82);
      v85 = v219;
      FMIPItem.partType.getter(v84);
      v86 = v223;
      v87 = v223 + *(int *)(v237 + 48);
      v88 = v83;
      v89 = v235;
      v90 = (void (*)(uint64_t, char *, uint64_t))v231;
      ((void (*)(uint64_t, char *, uint64_t))v231)(v223, v88, v235);
      v90(v87, v85, v89);
      v91 = v228;
      v92 = v228(v86, v89);
      if ((_DWORD)v92 == v239)
      {
        v92 = v91(v87, v89);
        if ((_DWORD)v92 == v236)
        {
          v69(v223, v89);
          v93 = 1;
LABEL_33:
          v94 = v220;
          v95 = v222;
          goto LABEL_35;
        }
      }
      else if ((_DWORD)v92 == v236)
      {
        v92 = v91(v87, v89);
        if ((_DWORD)v92 == v239)
        {
          v69(v223, v89);
          v93 = 0;
          goto LABEL_33;
        }
      }
      v96 = v226;
      v95 = v222;
      v97 = FMIPItem.partType.getter(v92);
      v98 = v227;
      v94 = v220;
      FMIPItem.partType.getter(v97);
      v93 = static FMIPPartType.< infix(_:_:)(v96, v98);
      v69((uint64_t)v98, v89);
      v69((uint64_t)v96, v89);
      sub_1000051EC(v223, &qword_1005DB600);
LABEL_35:
      v24 = v238;
      v78(v94, v238);
      v78(v95, v24);
      if (((v233 ^ v93) & 1) != 0)
        goto LABEL_38;
      v79 = v94;
      v80 += (uint64_t)v242;
      ++v234;
    }
    while (v241 != v234);
    v234 = v241;
LABEL_38:
    v49 = v212;
    v71 = v225;
LABEL_39:
    v72 = v221;
    if ((v233 & 1) != 0)
    {
      v70 = v234;
      if (v234 < v221)
        goto LABEL_162;
      if (v221 < v234)
      {
        v99 = 0;
        v100 = (_QWORD)v242 * (v234 - 1);
        v101 = v234 * (_QWORD)v242;
        v102 = v221 * (_QWORD)v242;
        do
        {
          if (v72 != v70 + v99 - 1)
          {
            v105 = v214;
            if (!v214)
              goto LABEL_167;
            v106 = v214 + v102;
            v107 = v214 + v100;
            v233 = *(void (**)(char *, uint64_t, uint64_t))(v248 + 32);
            v233(v217, v214 + v102, v238);
            if (v102 < v100 || v106 >= v105 + v101)
            {
              v103 = v105 + v102;
              v104 = v105 + v100;
              v24 = v238;
              swift_arrayInitWithTakeFrontToBack(v103, v104);
            }
            else
            {
              v24 = v238;
              if (v102 != v100)
                swift_arrayInitWithTakeBackToFront(v106, v107);
            }
            v233((char *)v107, (uint64_t)v217, v24);
          }
          ++v72;
          --v99;
          v70 = v234;
          v100 -= (uint64_t)v242;
          v101 -= (uint64_t)v242;
          v102 += (uint64_t)v242;
        }
        while (v72 < v234 + v99);
        v49 = v212;
        v72 = v221;
      }
    }
    else
    {
      v70 = v234;
    }
LABEL_54:
    v234 = v70;
    if (v70 >= v241)
      goto LABEL_78;
    if (__OFSUB__(v70, v72))
      goto LABEL_160;
    if (v70 - v72 >= v207)
      goto LABEL_78;
    if (__OFADD__(v72, v207))
      goto LABEL_163;
    if (v72 + v207 >= v241)
      v108 = v241;
    else
      v108 = v72 + v207;
    if (v108 >= v72)
    {
      if (v234 == v108)
        goto LABEL_78;
      v212 = v49;
      v225 = v71;
      v109 = *(char **)(v248 + 72);
      v228 = *(uint64_t (**)(uint64_t, uint64_t))(v248 + 16);
      v110 = (_QWORD)v109 * (v234 - 1);
      v231 = v109;
      v111 = v234 * (_QWORD)v109;
      v112 = v234;
      v216 = v108;
      while (2)
      {
        v114 = 0;
        v115 = v72;
        v233 = (void (*)(char *, uint64_t, uint64_t))v110;
        v234 = v112;
        v232 = (uint64_t (*)(char *, uint64_t, uint64_t))v111;
        while (2)
        {
          v116 = *v247;
          v242 = (char *)(v111 + v114);
          v117 = (uint64_t (*)(char *, uint64_t, uint64_t))v228;
          ((void (*)(char *, Swift::Int, uint64_t))v228)(v243, v111 + v114 + v116, v24);
          v241 = v110 + v114;
          v118 = v117(v244, v110 + v114 + v116, v24);
          v119 = v229;
          v120 = FMIPItem.partType.getter(v118);
          v121 = v230;
          FMIPItem.partType.getter(v120);
          v122 = v245;
          v123 = v246;
          v124 = v245 + *(int *)(v237 + 48);
          v125 = *(void (**)(uint64_t, char *, uint64_t))(v246 + 32);
          v126 = v119;
          v127 = v235;
          v125(v245, v126, v235);
          v125(v124, v121, v127);
          v128 = *(uint64_t (**)(uint64_t, uint64_t))(v123 + 88);
          v129 = v128(v122, v127);
          if ((_DWORD)v129 == v239)
          {
            v129 = v128(v124, v127);
            if ((_DWORD)v129 == v236)
            {
              (*(void (**)(uint64_t, uint64_t))(v246 + 8))(v245, v127);
              v130 = *(void (**)(char *, uint64_t))(v248 + 8);
              v24 = v238;
              v130(v244, v238);
              v130(v243, v24);
              goto LABEL_75;
            }
LABEL_74:
            v131 = v226;
            v132 = v243;
            v133 = FMIPItem.partType.getter(v129);
            v134 = v227;
            v135 = v244;
            FMIPItem.partType.getter(v133);
            v136 = static FMIPPartType.< infix(_:_:)(v131, v134);
            v137 = *(void (**)(char *, uint64_t))(v246 + 8);
            v137(v134, v127);
            v137(v131, v127);
            sub_1000051EC(v245, &qword_1005DB600);
            v138 = *(void (**)(char *, uint64_t))(v248 + 8);
            v24 = v238;
            v138(v135, v238);
            v139 = v132;
            v112 = v234;
            v138(v139, v24);
            if ((v136 & 1) == 0)
              goto LABEL_65;
LABEL_75:
            v140 = *v247;
            v111 = (Swift::Int)v232;
            v110 = (uint64_t)v233;
            if (!*v247)
              goto LABEL_165;
            v141 = (char *)v232 + v140 + v114;
            v142 = (char *)v233 + v140 + v114;
            v143 = *(void (**)(char *, char *, uint64_t))(v248 + 32);
            v143(v240, v141, v24);
            swift_arrayInitWithTakeFrontToBack(v141, v142);
            v143(v142, v240, v24);
            v114 -= (uint64_t)v231;
            if (v112 == ++v115)
              goto LABEL_66;
            continue;
          }
          break;
        }
        if ((_DWORD)v129 != v236)
          goto LABEL_74;
        v129 = v128(v124, v127);
        if ((_DWORD)v129 != v239)
          goto LABEL_74;
        (*(void (**)(uint64_t, uint64_t))(v246 + 8))(v245, v127);
        v113 = *(void (**)(char *, uint64_t))(v248 + 8);
        v24 = v238;
        v113(v244, v238);
        v113(v243, v24);
LABEL_65:
        v111 = (Swift::Int)v232;
        v110 = (uint64_t)v233;
LABEL_66:
        ++v112;
        v110 += (uint64_t)v231;
        v111 += (Swift::Int)v231;
        v72 = v221;
        if (v112 != v216)
          continue;
        break;
      }
      v234 = v216;
      v71 = v225;
      v49 = v212;
LABEL_78:
      if (v234 < v72)
        goto LABEL_155;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v49);
      v225 = v71;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v49 = sub_10020C830(0, *((_QWORD *)v49 + 2) + 1, 1, v49);
      v146 = *((_QWORD *)v49 + 2);
      v145 = *((_QWORD *)v49 + 3);
      v51 = v146 + 1;
      if (v146 >= v145 >> 1)
        v49 = sub_10020C830((char *)(v145 > 1), v146 + 1, 1, v49);
      *((_QWORD *)v49 + 2) = v51;
      v147 = v49 + 32;
      v148 = &v49[16 * v146 + 32];
      v149 = v234;
      *(_QWORD *)v148 = v72;
      *((_QWORD *)v148 + 1) = v149;
      if (v146)
      {
        while (2)
        {
          v150 = v51 - 1;
          if (v51 >= 4)
          {
            v155 = &v147[16 * v51];
            v156 = *((_QWORD *)v155 - 8);
            v157 = *((_QWORD *)v155 - 7);
            v161 = __OFSUB__(v157, v156);
            v158 = v157 - v156;
            if (v161)
              goto LABEL_144;
            v160 = *((_QWORD *)v155 - 6);
            v159 = *((_QWORD *)v155 - 5);
            v161 = __OFSUB__(v159, v160);
            v153 = v159 - v160;
            v154 = v161;
            if (v161)
              goto LABEL_145;
            v162 = v51 - 2;
            v163 = &v147[16 * v51 - 32];
            v165 = *(_QWORD *)v163;
            v164 = *((_QWORD *)v163 + 1);
            v161 = __OFSUB__(v164, v165);
            v166 = v164 - v165;
            if (v161)
              goto LABEL_147;
            v161 = __OFADD__(v153, v166);
            v167 = v153 + v166;
            if (v161)
              goto LABEL_150;
            if (v167 >= v158)
            {
              v185 = &v147[16 * v150];
              v187 = *(_QWORD *)v185;
              v186 = *((_QWORD *)v185 + 1);
              v161 = __OFSUB__(v186, v187);
              v188 = v186 - v187;
              if (v161)
                goto LABEL_154;
              v178 = v153 < v188;
            }
            else
            {
LABEL_97:
              if ((v154 & 1) != 0)
                goto LABEL_146;
              v162 = v51 - 2;
              v168 = &v147[16 * v51 - 32];
              v170 = *(_QWORD *)v168;
              v169 = *((_QWORD *)v168 + 1);
              v171 = __OFSUB__(v169, v170);
              v172 = v169 - v170;
              v173 = v171;
              if (v171)
                goto LABEL_149;
              v174 = &v147[16 * v150];
              v176 = *(_QWORD *)v174;
              v175 = *((_QWORD *)v174 + 1);
              v161 = __OFSUB__(v175, v176);
              v177 = v175 - v176;
              if (v161)
                goto LABEL_152;
              if (__OFADD__(v172, v177))
                goto LABEL_153;
              if (v172 + v177 < v153)
                goto LABEL_109;
              v178 = v153 < v177;
            }
            if (v178)
              v150 = v162;
          }
          else
          {
            if (v51 == 3)
            {
              v152 = *((_QWORD *)v49 + 4);
              v151 = *((_QWORD *)v49 + 5);
              v161 = __OFSUB__(v151, v152);
              v153 = v151 - v152;
              v154 = v161;
              goto LABEL_97;
            }
            v179 = *((_QWORD *)v49 + 4);
            v180 = *((_QWORD *)v49 + 5);
            v161 = __OFSUB__(v180, v179);
            v172 = v180 - v179;
            v173 = v161;
LABEL_109:
            if ((v173 & 1) != 0)
              goto LABEL_148;
            v181 = &v147[16 * v150];
            v183 = *(_QWORD *)v181;
            v182 = *((_QWORD *)v181 + 1);
            v161 = __OFSUB__(v182, v183);
            v184 = v182 - v183;
            if (v161)
              goto LABEL_151;
            if (v184 < v172)
              goto LABEL_14;
          }
          v189 = v150 - 1;
          if (v150 - 1 >= v51)
          {
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
            goto LABEL_164;
          }
          if (!*v247)
            goto LABEL_166;
          v190 = v49;
          v191 = &v147[16 * v189];
          v192 = *(_QWORD *)v191;
          v193 = &v147[16 * v150];
          v194 = *((_QWORD *)v193 + 1);
          v195 = v225;
          sub_10020BE00(*v247 + *(_QWORD *)(v248 + 72) * *(_QWORD *)v191, *v247 + *(_QWORD *)(v248 + 72) * *(_QWORD *)v193, *v247 + *(_QWORD *)(v248 + 72) * v194, v224);
          v225 = v195;
          if (v195)
          {
            v49 = v190;
            goto LABEL_138;
          }
          if (v194 < v192)
            goto LABEL_141;
          if (v150 > *((_QWORD *)v190 + 2))
            goto LABEL_142;
          *(_QWORD *)v191 = v192;
          *(_QWORD *)&v147[16 * v189 + 8] = v194;
          v196 = *((_QWORD *)v190 + 2);
          if (v150 >= v196)
            goto LABEL_143;
          v49 = v190;
          v51 = v196 - 1;
          memmove(&v147[16 * v150], v193 + 16, 16 * (v196 - 1 - v150));
          *((_QWORD *)v190 + 2) = v196 - 1;
          if (v196 <= 2)
            goto LABEL_14;
          continue;
        }
      }
      v51 = 1;
LABEL_14:
      v43 = v247[1];
      v50 = v234;
      if (v234 >= v43)
        goto LABEL_127;
      continue;
    }
    break;
  }
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
LABEL_168:
  __break(1u);
LABEL_169:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

uint64_t sub_10020B8FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(_BYTE *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(_BYTE *, uint64_t, uint64_t);
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  _BYTE *v34;
  _BYTE *v35;
  void (*v36)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v37;
  uint64_t v38;
  uint64_t (*v39)(_BYTE *, uint64_t);
  uint64_t v40;
  void (*v41)(_BYTE *, uint64_t);
  _BYTE *v42;
  _BYTE *v43;
  uint64_t v44;
  _BYTE *v45;
  _BYTE *v46;
  void (*v47)(_BYTE *, uint64_t);
  void (*v48)(_BYTE *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(_BYTE *, uint64_t, uint64_t);
  _BYTE v55[16];
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  _BYTE *v59;
  int v60;
  uint64_t (*v61)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  int v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  _QWORD *v74;
  uint64_t v75;
  _BYTE *v76;
  _BYTE *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v73 = a4;
  v57 = a1;
  v64 = sub_100053F2C(&qword_1005DB600);
  __chkstk_darwin(v64);
  v7 = &v55[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for FMIPPartType(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v59 = &v55[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __chkstk_darwin(v10);
  v58 = &v55[-v13];
  v14 = __chkstk_darwin(v12);
  v63 = &v55[-v15];
  __chkstk_darwin(v14);
  v62 = &v55[-v16];
  v17 = type metadata accessor for FMIPItem(0);
  v74 = *(_QWORD **)(v17 - 8);
  v18 = __chkstk_darwin(v17);
  v70 = &v55[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = __chkstk_darwin(v18);
  v77 = &v55[-v21];
  result = __chkstk_darwin(v20);
  v76 = &v55[-v23];
  v67 = a3;
  v56 = a2;
  if (a3 != a2)
  {
    v24 = v74[9];
    v61 = (uint64_t (*)(_BYTE *, uint64_t, uint64_t))v74[2];
    v68 = enum case for FMIPPartType.leftBud(_:);
    v60 = enum case for FMIPPartType.rightBud(_:);
    v78 = v24 * (v67 - 1);
    v79 = v17;
    v65 = v24;
    v25 = v24 * v67;
    v80 = v8;
LABEL_6:
    v27 = 0;
    v75 = v57;
    v66 = v25;
    while (1)
    {
      v28 = *v73;
      v72 = v25 + v27;
      v29 = v25 + v27 + v28;
      v30 = v61;
      v61(v76, v29, v17);
      v71 = v78 + v27;
      v31 = v30(v77, v78 + v27 + v28, v17);
      v32 = v62;
      v33 = FMIPItem.partType.getter(v31);
      v34 = v63;
      FMIPItem.partType.getter(v33);
      v35 = &v7[*(int *)(v64 + 48)];
      v36 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 32);
      v37 = v32;
      v38 = v80;
      v36(v7, v37, v80);
      v36(v35, v34, v38);
      v39 = *(uint64_t (**)(_BYTE *, uint64_t))(v9 + 88);
      v40 = v39(v7, v38);
      if ((_DWORD)v40 == v68)
      {
        v40 = v39(v35, v38);
        if ((_DWORD)v40 == v60)
        {
          (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v7, v38);
          v41 = (void (*)(_BYTE *, uint64_t))v74[1];
          v17 = v79;
          v41(v77, v79);
          result = ((uint64_t (*)(_BYTE *, uint64_t))v41)(v76, v17);
          v25 = v66;
          goto LABEL_14;
        }
      }
      else if ((_DWORD)v40 == v60)
      {
        v40 = v39(v35, v38);
        if ((_DWORD)v40 == v68)
        {
          (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v7, v38);
          v26 = (void (*)(_BYTE *, uint64_t))v74[1];
          v17 = v79;
          v26(v77, v79);
          result = ((uint64_t (*)(_BYTE *, uint64_t))v26)(v76, v17);
          v25 = v66;
LABEL_5:
          v78 += v65;
          v25 += v65;
          if (++v67 == v56)
            return result;
          goto LABEL_6;
        }
      }
      v42 = v58;
      v43 = v76;
      v44 = FMIPItem.partType.getter(v40);
      v45 = v59;
      v46 = v77;
      FMIPItem.partType.getter(v44);
      v69 = static FMIPPartType.< infix(_:_:)(v42, v45);
      v47 = *(void (**)(_BYTE *, uint64_t))(v9 + 8);
      v47(v45, v80);
      v47(v42, v80);
      sub_1000051EC((uint64_t)v7, &qword_1005DB600);
      v48 = (void (*)(_BYTE *, uint64_t))v74[1];
      v49 = v79;
      v48(v46, v79);
      result = ((uint64_t (*)(_BYTE *, uint64_t))v48)(v43, v49);
      v17 = v49;
      v25 = v66;
      if ((v69 & 1) == 0)
        goto LABEL_5;
LABEL_14:
      v50 = *v73;
      if (!*v73)
      {
        __break(1u);
        return result;
      }
      v51 = v17;
      v52 = v50 + v25 + v27;
      v53 = v50 + v78 + v27;
      v54 = (void (*)(_BYTE *, uint64_t, uint64_t))v74[4];
      v54(v70, v52, v51);
      swift_arrayInitWithTakeFrontToBack(v52, v53);
      v17 = v79;
      result = ((uint64_t (*)(uint64_t, _BYTE *, uint64_t))v54)(v53, v70, v79);
      v27 -= v65;
      if (v67 == ++v75)
        goto LABEL_5;
    }
  }
  return result;
}

uint64_t sub_10020BE00(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(char *, unint64_t, uint64_t);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, char *, uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  char *v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(char *, unint64_t, uint64_t);
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  void (*v84)(char *, char *, uint64_t);
  char *v85;
  uint64_t v86;
  uint64_t (*v87)(char *, uint64_t);
  uint64_t v88;
  uint64_t v89;
  char v90;
  char *v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  void (*v97)(char *, uint64_t);
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  void (*v102)(char *, uint64_t);
  uint64_t v103;
  unint64_t v104;
  char *v105;
  unint64_t v106;
  char *v107;
  uint64_t result;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  unint64_t v114;
  unint64_t v115;
  uint64_t (*v116)(char *, unint64_t, uint64_t);
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  unint64_t v132;
  unint64_t v133;
  unint64_t v134;

  v127 = a4;
  v131 = a2;
  v125 = sub_100053F2C(&qword_1005DB600);
  v6 = __chkstk_darwin(v125);
  v110 = (char *)&v109 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v111 = (char *)&v109 - v8;
  v9 = type metadata accessor for FMIPPartType(0);
  v128 = *(_QWORD *)(v9 - 8);
  v129 = v9;
  v10 = __chkstk_darwin(v9);
  v118 = (char *)&v109 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v117 = (char *)&v109 - v13;
  v14 = __chkstk_darwin(v12);
  v121 = (char *)&v109 - v15;
  v16 = __chkstk_darwin(v14);
  v120 = (char *)&v109 - v17;
  v18 = __chkstk_darwin(v16);
  v119 = (char *)&v109 - v19;
  __chkstk_darwin(v18);
  v116 = (uint64_t (*)(char *, unint64_t, uint64_t))((char *)&v109 - v20);
  v130 = type metadata accessor for FMIPItem(0);
  v21 = __chkstk_darwin(v130);
  v23 = (char *)&v109 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v21);
  v26 = (char *)&v109 - v25;
  v27 = __chkstk_darwin(v24);
  v124 = (char *)&v109 - v28;
  __chkstk_darwin(v27);
  v123 = (char *)&v109 - v29;
  v126 = v30;
  v31 = *(_QWORD *)(v30 + 72);
  if (!v31)
  {
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  if (v131 - a1 == 0x8000000000000000 && v31 == -1)
    goto LABEL_77;
  v32 = a3 - v131;
  if (a3 - v131 == 0x8000000000000000 && v31 == -1)
    goto LABEL_78;
  v33 = (uint64_t)(v131 - a1) / v31;
  v134 = a1;
  v133 = v127;
  v34 = v32 / v31;
  if (v33 >= v32 / v31)
  {
    if (v34 < 0)
      goto LABEL_79;
    v36 = v34 * v31;
    v37 = v110;
    if (v127 < v131 || v131 + v36 <= v127)
    {
      swift_arrayInitWithTakeFrontToBack(v127, v131);
    }
    else if (v127 != v131)
    {
      swift_arrayInitWithTakeBackToFront(v127, v131);
    }
    v72 = v127 + v36;
    v132 = v127 + v36;
    v134 = v131;
    if (v36 < 1 || a1 >= v131)
    {
LABEL_75:
      sub_10020CD64(&v134, &v133, (uint64_t *)&v132, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPItem);
      return 1;
    }
    v74 = -v31;
    v116 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v126 + 16);
    LODWORD(v119) = enum case for FMIPPartType.leftBud(_:);
    LODWORD(v112) = enum case for FMIPPartType.rightBud(_:);
    v113 = v23;
    v114 = a1;
    v122 = v26;
    v124 = (char *)v74;
    while (1)
    {
      v75 = v130;
      v76 = v116;
      v116(v26, v72 + v74, v130);
      v77 = (char *)(v131 + v74);
      v78 = v76(v23, v131 + v74, v75);
      v79 = v117;
      v80 = FMIPItem.partType.getter(v78);
      v81 = v118;
      FMIPItem.partType.getter(v80);
      v82 = &v37[*(int *)(v125 + 48)];
      v83 = v128;
      v84 = *(void (**)(char *, char *, uint64_t))(v128 + 32);
      v85 = v79;
      v86 = v129;
      v84(v37, v85, v129);
      v84(v82, v81, v86);
      v87 = *(uint64_t (**)(char *, uint64_t))(v83 + 88);
      v88 = v87(v37, v86);
      v123 = v77;
      if ((_DWORD)v88 == (_DWORD)v119)
      {
        v88 = v87(v82, v129);
        if ((_DWORD)v88 != (_DWORD)v112)
          goto LABEL_58;
        v89 = (uint64_t)v37;
        (*(void (**)(char *, uint64_t))(v128 + 8))(v37, v129);
        v90 = 1;
      }
      else
      {
        if ((_DWORD)v88 != (_DWORD)v112 || (v88 = v87(v82, v129), (_DWORD)v88 != (_DWORD)v119))
        {
LABEL_58:
          v92 = v129;
          v93 = a3;
          v94 = v120;
          v91 = v122;
          v95 = FMIPItem.partType.getter(v88);
          v96 = v121;
          v23 = v113;
          FMIPItem.partType.getter(v95);
          v90 = static FMIPPartType.< infix(_:_:)(v94, v96);
          v97 = *(void (**)(char *, uint64_t))(v128 + 8);
          v97(v96, v92);
          v98 = v94;
          a3 = v93;
          v99 = (uint64_t)v110;
          v97(v98, v92);
          v89 = v99;
          sub_1000051EC(v99, &qword_1005DB600);
          goto LABEL_59;
        }
        v89 = (uint64_t)v37;
        (*(void (**)(char *, uint64_t))(v128 + 8))(v37, v129);
        v90 = 0;
      }
      v23 = v113;
      v91 = v122;
LABEL_59:
      v100 = v124;
      v101 = &v124[a3];
      v102 = *(void (**)(char *, uint64_t))(v126 + 8);
      v103 = v130;
      v102(v23, v130);
      v102(v91, v103);
      if ((v90 & 1) != 0)
      {
        v104 = v114;
        v37 = (char *)v89;
        if (a3 < v131 || (unint64_t)v101 >= v131)
        {
          v105 = v123;
          swift_arrayInitWithTakeFrontToBack(&v100[a3], v123);
          v26 = v122;
          v74 = (uint64_t)v124;
        }
        else
        {
          v26 = v122;
          v105 = v123;
          v74 = (uint64_t)v124;
          if (a3 != v131)
            swift_arrayInitWithTakeBackToFront(&v100[a3], v123);
        }
        v134 += v74;
      }
      else
      {
        v106 = v132;
        v107 = &v100[v132];
        v132 += (unint64_t)v100;
        v104 = v114;
        v37 = (char *)v89;
        if (a3 < v106 || (unint64_t)v101 >= v106)
        {
          swift_arrayInitWithTakeFrontToBack(&v100[a3], v107);
          v105 = (char *)v131;
          v26 = v122;
        }
        else
        {
          v26 = v122;
          if (a3 != v106)
            swift_arrayInitWithTakeBackToFront(&v100[a3], v107);
          v105 = (char *)v131;
        }
        v74 = (uint64_t)v124;
      }
      v72 = v132;
      if (v132 > v127)
      {
        v131 = (unint64_t)v105;
        a3 += (unint64_t)v100;
        if ((unint64_t)v105 > v104)
          continue;
      }
      goto LABEL_75;
    }
  }
  if ((v33 & 0x8000000000000000) == 0)
  {
    v35 = v33 * v31;
    if (v127 < a1 || a1 + v35 <= v127)
    {
      swift_arrayInitWithTakeFrontToBack(v127, a1);
    }
    else if (v127 != a1)
    {
      swift_arrayInitWithTakeBackToFront(v127, a1);
    }
    v118 = (char *)(v127 + v35);
    v132 = v127 + v35;
    v38 = v35 < 1 || v131 >= a3;
    v39 = (uint64_t)v111;
    if (!v38)
    {
      v117 = *(char **)(v126 + 16);
      LODWORD(v122) = enum case for FMIPPartType.leftBud(_:);
      LODWORD(v114) = enum case for FMIPPartType.rightBud(_:);
      v115 = a3;
      v112 = v31;
      while (1)
      {
        v40 = v130;
        v41 = (uint64_t (*)(char *, unint64_t, uint64_t))v117;
        ((void (*)(char *, unint64_t, uint64_t))v117)(v123, v131, v130);
        v42 = v41(v124, v127, v40);
        v43 = (char *)v116;
        v44 = FMIPItem.partType.getter(v42);
        v45 = v119;
        FMIPItem.partType.getter(v44);
        v46 = v39 + *(int *)(v125 + 48);
        v47 = v128;
        v48 = *(void (**)(uint64_t, char *, uint64_t))(v128 + 32);
        v49 = v43;
        v50 = v129;
        v48(v39, v49, v129);
        v48(v46, v45, v50);
        v51 = *(uint64_t (**)(uint64_t, uint64_t))(v47 + 88);
        v52 = v51(v39, v50);
        if ((_DWORD)v52 == (_DWORD)v122)
        {
          v52 = v51(v46, v129);
          if ((_DWORD)v52 == (_DWORD)v114)
          {
            (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v39, v129);
            v53 = *(void (**)(char *, uint64_t))(v126 + 8);
            v54 = v130;
            v53(v124, v130);
            v53(v123, v54);
            goto LABEL_30;
          }
        }
        else if ((_DWORD)v52 == (_DWORD)v114)
        {
          v52 = v51(v46, v129);
          if ((_DWORD)v52 == (_DWORD)v122)
          {
            (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v39, v129);
            v55 = *(void (**)(char *, uint64_t))(v126 + 8);
            v56 = v130;
            v55(v124, v130);
            v55(v123, v56);
LABEL_34:
            v68 = v134;
            v69 = v112;
            v71 = v133 + v112;
            if (v134 < v133 || v134 >= v71)
            {
              swift_arrayInitWithTakeFrontToBack(v134, v133);
            }
            else if (v134 != v133)
            {
              swift_arrayInitWithTakeBackToFront(v134, v133);
            }
            v133 = v71;
            v70 = v131;
            goto LABEL_41;
          }
        }
        v57 = v120;
        v58 = v123;
        v59 = FMIPItem.partType.getter(v52);
        v60 = v121;
        v61 = v124;
        FMIPItem.partType.getter(v59);
        v62 = static FMIPPartType.< infix(_:_:)(v57, v60);
        v63 = v129;
        v64 = *(void (**)(char *, uint64_t))(v128 + 8);
        v64(v60, v129);
        v65 = v57;
        v39 = (uint64_t)v111;
        v64(v65, v63);
        sub_1000051EC(v39, &qword_1005DB600);
        v66 = *(void (**)(char *, uint64_t))(v126 + 8);
        v67 = v130;
        v66(v61, v130);
        v66(v58, v67);
        if ((v62 & 1) == 0)
          goto LABEL_34;
LABEL_30:
        v68 = v134;
        v69 = v112;
        v70 = v131 + v112;
        if (v134 < v131 || v134 >= v70)
        {
          swift_arrayInitWithTakeFrontToBack(v134, v131);
        }
        else if (v134 == v131)
        {
          v68 = v131;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront(v134, v131);
        }
LABEL_41:
        v134 = v68 + v69;
        v127 = v133;
        if (v133 < (unint64_t)v118)
        {
          v131 = v70;
          if (v70 < v115)
            continue;
        }
        goto LABEL_75;
      }
    }
    goto LABEL_75;
  }
LABEL_79:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

char *sub_10020C830(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100053F2C(&qword_1005DB608);
    v11 = (char *)swift_allocObject(v10, 16 * v9 + 32, 7);
    v12 = j__malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 17;
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[16 * v8])
      memmove(v14, v15, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 16 * v8);
  }
  swift_bridgeObjectRelease(a4);
  return v11;
}

uint64_t sub_10020C928(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_10020CD64(a1, a2, a3, type metadata accessor for FMBeaconSharingModuleEntry);
}

char *sub_10020C934(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;
  char v9;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    v9 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v9, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

uint64_t sub_10020C9DC(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_10020CD64(a1, a2, a3, type metadata accessor for FMItemCellViewModel);
}

char *sub_10020C9E8(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;
  char v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -40)
  {
    v7 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v7, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 40;
    if (result != v3 || result >= &v3[40 * v6])
      return (char *)memmove(result, v3, 40 * v6);
  }
  return result;
}

uint64_t sub_10020CAA0(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_10020CD64(a1, a2, a3, type metadata accessor for FMPeopleCellViewModel);
}

uint64_t sub_10020CAAC(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_10020CD64(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPBeaconShare);
}

char *sub_10020CAB8(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;
  char v9;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    v9 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v9, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

uint64_t sub_10020CB60(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_10020CD64(a1, a2, a3, type metadata accessor for FMDeviceCellViewModel);
}

uint64_t sub_10020CB6C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_10020CD64(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for UUID);
}

char *sub_10020CB78(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;
  char v9;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 63;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -64)
  {
    v9 = 2;
    result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v9, 1046, 0);
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 6;
    if (result != v3 || result >= &v3[64 * v7])
      return (char *)memmove(result, v3, v7 << 6);
  }
  return result;
}

uint64_t sub_10020CC24(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = *a2;
  v5 = *a3;
  result = sub_100053F2C((uint64_t *)&unk_1005D6840);
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1)
    goto LABEL_14;
  if (v8 / v7 < 0)
  {
LABEL_15:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
    return swift_arrayInitWithTakeFrontToBack(v3, v4);
  if (v3 != v4)
    return swift_arrayInitWithTakeBackToFront(v3, v4);
  return result;
}

uint64_t sub_10020CD34(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_10020CD64(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPUnknownItem);
}

uint64_t sub_10020CD40(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_10020CD64(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for FMFLabel);
}

uint64_t sub_10020CD4C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_10020CD64(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for FMFLabelledLocation);
}

uint64_t sub_10020CD58(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_10020CD64(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for FMFFriend);
}

uint64_t sub_10020CD64(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  v4 = *a1;
  v5 = *a2;
  v6 = *a3;
  result = a4(0);
  v8 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1)
    goto LABEL_14;
  if (v9 / v8 < 0)
  {
LABEL_15:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
    return swift_arrayInitWithTakeFrontToBack(v4, v5);
  if (v4 != v5)
    return swift_arrayInitWithTakeBackToFront(v4, v5);
  return result;
}

char *sub_10020CE70(uint64_t a1)
{
  return sub_10020C830(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_10020CE84(_QWORD *a1)
{
  return sub_1001121C8(0, a1[2], 0, a1);
}

uint64_t sub_10020CE98(_QWORD *a1)
{
  return sub_1001121DC(0, a1[2], 0, a1);
}

uint64_t sub_10020CEAC(_QWORD *a1)
{
  return sub_1001124FC(0, a1[2], 0, a1);
}

uint64_t sub_10020CEC0(_QWORD *a1)
{
  return sub_100112684(0, a1[2], 0, a1);
}

uint64_t sub_10020CED4(uint64_t a1)
{
  return sub_100112218(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_10020CEE8(_QWORD *a1)
{
  return sub_100112204(0, a1[2], 0, a1);
}

uint64_t sub_10020CEFC(_QWORD *a1)
{
  return sub_100112698(0, a1[2], 0, a1);
}

uint64_t sub_10020CF10(_QWORD *a1)
{
  return sub_1001126AC(0, a1[2], 0, a1);
}

uint64_t sub_10020CF24(_QWORD *a1)
{
  return sub_1001126C0(0, a1[2], 0, a1);
}

uint64_t sub_10020CF38(_QWORD *a1)
{
  return sub_1001126D4(0, a1[2], 0, a1);
}

uint64_t sub_10020CF4C(_QWORD *a1)
{
  return sub_100112B80(0, a1[2], 0, a1);
}

uint64_t sub_10020CF60(_QWORD *a1)
{
  return sub_1001121F0(0, a1[2], 0, a1);
}

uint64_t sub_10020CF74(_QWORD *a1)
{
  return sub_100112F00(0, a1[2], 0, a1);
}

uint64_t sub_10020CF88(_QWORD *a1)
{
  return sub_100113370(0, a1[2], 0, a1);
}

uint64_t sub_10020CF9C(_QWORD *a1)
{
  return sub_1001134F8(0, a1[2], 0, a1);
}

uint64_t sub_10020CFB0(_QWORD *a1)
{
  return sub_100112380(0, a1[2], 0, a1);
}

_QWORD *sub_10020CFC4(uint64_t a1, uint64_t a2, char a3, int a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  __n128 v22;
  uint64_t v23;
  void *v24;
  __n128 v25;
  uint64_t v26;
  void *v27;
  __n128 v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  unint64_t v37;
  char v38;
  __n128 v39;
  void *v40;
  char v41;
  void *v42;
  _QWORD *result;
  _QWORD *v44;
  uint64_t v45;
  double v46;
  id v47;
  Swift::String v48;
  Swift::String v49;
  Swift::String v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  void *v54;
  double v55;
  id v56;
  Swift::String v57;
  Swift::String v58;
  uint64_t v59;
  void *v60;
  id v61;
  int v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  unint64_t v66;
  Swift::String v67;
  Swift::String v68;
  Swift::String v69;

  v62 = a4;
  v6 = sub_100053F2C(&qword_1005D9990);
  __chkstk_darwin(v6);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FMIPAddress(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = 0;
  v66 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v66);
  v61 = (id)objc_opt_self(NSBundle);
  v13 = objc_msgSend(v61, "mainBundle");
  v67._object = (void *)0x80000001004A53C0;
  v14._countAndFlagsBits = 0x45524444415F4F4ELL;
  v14._object = (void *)0xEA00000000005353;
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  v67._countAndFlagsBits = 0xD00000000000001CLL;
  v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, (NSBundle)v13, v15, v67);
  countAndFlagsBits = v16._countAndFlagsBits;
  object = v16._object;

  sub_100007464(a1, (uint64_t)v8, &qword_1005D9990);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1000051EC((uint64_t)v8, &qword_1005D9990);
    if ((v62 & 1) == 0)
      return (_QWORD *)countAndFlagsBits;
    goto LABEL_22;
  }
  v19 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  v20 = FMIPAddress.displayAddress.getter(v19);
  if (!v21)
    goto LABEL_21;
  v23 = v20;
  v24 = v21;
  v25 = swift_bridgeObjectRelease(v16._object);
  v26 = FMIPAddress.label.getter(v25);
  if (!v27)
    goto LABEL_24;
  object = v27;
  if ((a3 & 1) == 0)
  {
    countAndFlagsBits = v26;
    v31 = FMIPAddress.streetAddress.getter();
    if (!v32)
      goto LABEL_14;
    v33 = v31;
    v34 = v32;
    v35 = FMIPAddress.streetName.getter();
    if (!v36)
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      swift_bridgeObjectRelease(v34);
      goto LABEL_15;
    }
    v59 = v35;
    v60 = v36;
    v65 = countAndFlagsBits;
    v66 = (unint64_t)object;
    v63 = v33;
    v64 = v34;
    v37 = sub_1000517B8();
    v38 = StringProtocol.contains<A>(_:)(&v63, &type metadata for String, &type metadata for String, v37, v37);
    v39 = swift_bridgeObjectRelease(v34);
    if ((v38 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v39);
      swift_bridgeObjectRelease(v24);
      v42 = v60;
LABEL_16:
      swift_bridgeObjectRelease(v42);
      if ((v62 & 1) == 0)
        return (_QWORD *)countAndFlagsBits;
      goto LABEL_22;
    }
    v65 = countAndFlagsBits;
    v66 = (unint64_t)object;
    v40 = v60;
    v63 = v59;
    v64 = v60;
    v41 = StringProtocol.contains<A>(_:)(&v63, &type metadata for String, &type metadata for String, v37, v37);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    swift_bridgeObjectRelease(v40);
    if ((v41 & 1) == 0)
    {
LABEL_15:
      v42 = v24;
      goto LABEL_16;
    }
    swift_bridgeObjectRelease(object);
    goto LABEL_25;
  }
  v28 = swift_bridgeObjectRelease(v27);
  v29 = FMIPAddress.mapItemFormattedAddress.getter(v28);
  if (v30)
  {
    countAndFlagsBits = v29;
    object = v30;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    goto LABEL_15;
  }
  result = (_QWORD *)FMIPAddress.formattedAddressLines.getter(v29);
  if (!result)
  {
LABEL_24:
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
LABEL_25:
    countAndFlagsBits = v23;
    object = v24;
    if ((v62 & 1) == 0)
      return (_QWORD *)countAndFlagsBits;
    goto LABEL_22;
  }
  v44 = result;
  if (result[2])
  {
    v45 = result[5];
    v60 = (void *)result[4];
    swift_bridgeObjectRetain(v45);
    swift_bridgeObjectRelease(v44);
    v65 = 0;
    v66 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    *(_QWORD *)&v46 = swift_bridgeObjectRelease(v66).n128_u64[0];
    v47 = objc_msgSend(v61, "mainBundle", v46);
    v68._countAndFlagsBits = 0xD00000000000002ELL;
    v68._object = (void *)0x80000001004B0640;
    v48._object = (void *)0x80000001004B0620;
    v48._countAndFlagsBits = 0xD00000000000001CLL;
    v49._countAndFlagsBits = 0;
    v49._object = (void *)0xE000000000000000;
    v50 = NSLocalizedString(_:tableName:bundle:value:comment:)(v48, (Swift::String_optional)0, (NSBundle)v47, v49, v68);

    v51 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
    v52 = swift_allocObject(v51, 112, 7);
    *(_OWORD *)(v52 + 16) = xmmword_100481730;
    *(_QWORD *)(v52 + 56) = &type metadata for String;
    v53 = sub_100071E88();
    *(_QWORD *)(v52 + 32) = v60;
    *(_QWORD *)(v52 + 40) = v45;
    *(_QWORD *)(v52 + 96) = &type metadata for String;
    *(_QWORD *)(v52 + 104) = v53;
    *(_QWORD *)(v52 + 64) = v53;
    *(_QWORD *)(v52 + 72) = v23;
    *(_QWORD *)(v52 + 80) = v24;
    countAndFlagsBits = String.init(format:_:)(v50._countAndFlagsBits, v50._object, v52);
    object = v54;
    v22 = swift_bridgeObjectRelease(v50._object);
LABEL_21:
    (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v22);
    if ((v62 & 1) == 0)
      return (_QWORD *)countAndFlagsBits;
LABEL_22:
    swift_bridgeObjectRelease(object);
    v65 = 0;
    v66 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    *(_QWORD *)&v55 = swift_bridgeObjectRelease(v66).n128_u64[0];
    v56 = objc_msgSend(v61, "mainBundle", v55);
    v57._countAndFlagsBits = 0xD000000000000019;
    v69._countAndFlagsBits = 0xD00000000000002BLL;
    v69._object = (void *)0x80000001004B5250;
    v57._object = (void *)0x80000001004B5230;
    v58._countAndFlagsBits = 0;
    v58._object = (void *)0xE000000000000000;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v57, (Swift::String_optional)0, (NSBundle)v56, v58, v69)._countAndFlagsBits;

    return (_QWORD *)countAndFlagsBits;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10020D508(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *object;
  uint64_t v41;
  id v42;
  Swift::String v43;
  Swift::String v44;
  Swift::String v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(_BYTE *, uint64_t, uint64_t);
  int v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE *v88;
  void *v89;
  char v90;
  uint64_t v91;
  _QWORD *v92;
  __n128 v93;
  uint64_t v94;
  _BYTE *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  Swift::String v104;
  Swift::String v105;
  Swift::String v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  __n128 v110;
  uint64_t v111;
  uint64_t v112;
  _BYTE *v113;
  _BYTE *v114;
  _BYTE *v115;
  void (*v116)(_BYTE *, uint64_t);
  __n128 v117;
  _BYTE *v118;
  _BYTE *v119;
  uint64_t v120;
  uint64_t v121;
  __n128 v122;
  uint64_t v123;
  _BYTE *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _BYTE *v128;
  _BYTE *v129;
  void (*v130)(_BYTE *, uint64_t);
  __n128 v131;
  uint64_t v133;
  _BYTE v134[4];
  int v135;
  _BYTE *v136;
  _BYTE *v137;
  uint64_t v138;
  uint64_t v139;
  _BYTE *v140;
  _BYTE *v141;
  _BYTE *v142;
  _BYTE *v143;
  uint64_t v144;
  uint64_t v145;
  _BYTE *v146;
  _BYTE *v147;
  _BYTE *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  _BYTE *v155;
  uint64_t v156;
  uint64_t v157;
  _BYTE *v158;
  int v159;
  void *v160;
  _BYTE *v161;
  uint64_t countAndFlagsBits;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  Swift::String v166;
  Swift::String v167;

  v159 = a3;
  v149 = a2;
  v139 = type metadata accessor for PublishedLocation.Label.Length(0);
  v138 = *(_QWORD *)(v139 - 8);
  __chkstk_darwin(v139);
  v137 = &v134[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_100053F2C((uint64_t *)&unk_1005D6700);
  v8 = __chkstk_darwin(v7);
  v140 = &v134[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __chkstk_darwin(v8);
  v147 = &v134[-v11];
  __chkstk_darwin(v10);
  v142 = &v134[-v12];
  v145 = type metadata accessor for PublishedLocation.Label.DetailLevel(0);
  v144 = *(_QWORD *)(v145 - 8);
  __chkstk_darwin(v145);
  v143 = &v134[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_100053F2C(&qword_1005D9990);
  v15 = __chkstk_darwin(v14);
  v136 = &v134[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = __chkstk_darwin(v15);
  v146 = &v134[-v18];
  v19 = __chkstk_darwin(v17);
  v141 = &v134[-v20];
  v21 = __chkstk_darwin(v19);
  v23 = &v134[-v22];
  v24 = __chkstk_darwin(v21);
  v158 = &v134[-v25];
  v26 = __chkstk_darwin(v24);
  v155 = &v134[-v27];
  v28 = __chkstk_darwin(v26);
  v30 = &v134[-v29];
  v31 = __chkstk_darwin(v28);
  v33 = &v134[-v32];
  __chkstk_darwin(v31);
  v35 = &v134[-v34];
  v36 = type metadata accessor for PublishedLocation.Label(0);
  v150 = *(_QWORD *)(v36 - 8);
  v151 = v36;
  v37 = __chkstk_darwin(v36);
  v148 = &v134[-((v38 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v37);
  v161 = &v134[-v39];
  countAndFlagsBits = 0;
  object = 0;
  v135 = a4;
  if ((a4 & 1) != 0)
  {
    v164 = 0;
    v165 = 0xE000000000000000;
    v41 = a1;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v165);
    v42 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v166._countAndFlagsBits = 0xD00000000000002BLL;
    v166._object = (void *)0x80000001004B5250;
    v43._object = (void *)0x80000001004B5230;
    v43._countAndFlagsBits = 0xD000000000000019;
    v44._countAndFlagsBits = 0;
    v44._object = (void *)0xE000000000000000;
    v45 = NSLocalizedString(_:tableName:bundle:value:comment:)(v43, (Swift::String_optional)0, (NSBundle)v42, v44, v166);
    countAndFlagsBits = v45._countAndFlagsBits;
    object = v45._object;

    a1 = v41;
  }
  v160 = object;
  sub_100007464(a1, (uint64_t)v35, &qword_1005D9990);
  v46 = type metadata accessor for FMIPAddress(0);
  v47 = *(_QWORD *)(v46 - 8);
  v48 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v47 + 48);
  v49 = v48(v35, 1, v46);
  v50 = a1;
  v163 = v47;
  if (v49 == 1)
  {
    sub_1000051EC((uint64_t)v35, &qword_1005D9990);
    v156 = 0;
    v157 = 0;
  }
  else
  {
    v51 = v23;
    v52 = a1;
    v53 = FMIPAddress.coarseAddressModern.getter();
    v55 = v54;
    (*(void (**)(_BYTE *, uint64_t))(v47 + 8))(v35, v46);
    if (v55)
    {
      v56 = String.nilIfEmpty.getter(v53, v55);
      v156 = v57;
      v157 = v56;
      swift_bridgeObjectRelease(v55);
    }
    else
    {
      v156 = 0;
      v157 = 0;
    }
    v50 = v52;
    v23 = v51;
  }
  v58 = (uint64_t)v158;
  v59 = (uint64_t)v155;
  sub_100007464(v50, (uint64_t)v33, &qword_1005D9990);
  if (v48(v33, 1, v46) == 1)
  {
    sub_1000051EC((uint64_t)v33, &qword_1005D9990);
    v158 = 0;
    v155 = 0;
  }
  else
  {
    v60 = v50;
    v61 = FMIPAddress.streetAddressModern.getter();
    v63 = v62;
    (*(void (**)(_BYTE *, uint64_t))(v163 + 8))(v33, v46);
    if (v63)
    {
      v158 = (_BYTE *)String.nilIfEmpty.getter(v61, v63);
      v155 = v64;
      swift_bridgeObjectRelease(v63);
    }
    else
    {
      v158 = 0;
      v155 = 0;
    }
    v50 = v60;
  }
  v65 = v163;
  sub_100007464(v50, (uint64_t)v30, &qword_1005D9990);
  if (v48(v30, 1, v46) == 1)
  {
    sub_1000051EC((uint64_t)v30, &qword_1005D9990);
  }
  else
  {
    v66 = FMIPAddress.smallAddressModern.getter();
    v68 = v67;
    (*(void (**)(_BYTE *, uint64_t))(v65 + 8))(v30, v46);
    if (v68)
    {
      v69 = String.nilIfEmpty.getter(v66, v68);
      v153 = v70;
      v154 = v69;
      swift_bridgeObjectRelease(v68);
      goto LABEL_20;
    }
  }
  v153 = 0;
  v154 = 0;
LABEL_20:
  sub_100007464(v50, v59, &qword_1005D9990);
  if (v48((_BYTE *)v59, 1, v46) == 1)
  {
    sub_1000051EC(v59, &qword_1005D9990);
  }
  else
  {
    v71 = FMIPAddress.mediumAddressModern.getter();
    v73 = v72;
    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v59, v46);
    if (v73)
    {
      v74 = String.nilIfEmpty.getter(v71, v73);
      v152 = v75;
      swift_bridgeObjectRelease(v73);
      goto LABEL_25;
    }
  }
  v74 = 0;
  v152 = 0;
LABEL_25:
  sub_100007464(v50, v58, &qword_1005D9990);
  if (v48((_BYTE *)v58, 1, v46) == 1)
  {
    sub_1000051EC(v58, &qword_1005D9990);
  }
  else
  {
    v76 = FMIPAddress.largeAddressModern.getter();
    v78 = v77;
    (*(void (**)(uint64_t, uint64_t))(v163 + 8))(v58, v46);
    if (v78)
    {
      v79 = String.nilIfEmpty.getter(v76, v78);
      v81 = v80;
      swift_bridgeObjectRelease(v78);
      goto LABEL_30;
    }
  }
  v79 = 0;
  v81 = 0;
LABEL_30:
  sub_100007464(v50, (uint64_t)v23, &qword_1005D9990);
  if (v48(v23, 1, v46) == 1)
  {
    sub_1000051EC((uint64_t)v23, &qword_1005D9990);
  }
  else
  {
    v82 = FMIPAddress.poiAddressModern.getter();
    v84 = v83;
    (*(void (**)(_BYTE *, uint64_t))(v163 + 8))(v23, v46);
    if (v84)
    {
      v85 = String.nilIfEmpty.getter(v82, v84);
      v87 = v86;
      swift_bridgeObjectRelease(v84);
      goto LABEL_35;
    }
  }
  v85 = 0;
  v87 = 0;
LABEL_35:
  v89 = v160;
  v88 = v161;
  v90 = v159;
  v91 = v152;
  swift_bridgeObjectRetain(v160);
  v133 = v91;
  v92 = (_QWORD *)countAndFlagsBits;
  PublishedLocation.Label.init(customLabel:coarseLabel:streetLabel:smallLabel:mediumLabel:largeLabel:poiLabel:)(countAndFlagsBits, v89, v157, v156, v158, v155, v154, v153, v74, v133, v79, v81, v85, v87);
  if ((v90 & 1) != 0)
  {
    v93 = swift_bridgeObjectRelease(v89);
    v94 = v144;
    v95 = v143;
    v96 = v145;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, __n128))(v144 + 104))(v143, enum case for PublishedLocation.Label.DetailLevel.detailed(_:), v145, v93);
    v92 = (_QWORD *)PublishedLocation.Label.primaryAndSecondaryNoFallbackLabel(detailLevel:)(v95);
    v98 = v97;
    v100 = v99;
    v102 = v101;
    (*(void (**)(_BYTE *, uint64_t))(v94 + 8))(v95, v96);
    if (v98)
    {
      if (v102)
      {
        v164 = 0;
        v165 = 0xE000000000000000;
        _StringGuts.grow(_:)(20);
        swift_bridgeObjectRelease(v165);
        v103 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v104._countAndFlagsBits = 0xD000000000000027;
        v167._countAndFlagsBits = 0xD000000000000039;
        v167._object = (void *)0x80000001004B05E0;
        v104._object = (void *)0x80000001004B05B0;
        v105._countAndFlagsBits = 0;
        v105._object = (void *)0xE000000000000000;
        v106 = NSLocalizedString(_:tableName:bundle:value:comment:)(v104, (Swift::String_optional)0, (NSBundle)v103, v105, v167);

        v107 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
        v108 = swift_allocObject(v107, 112, 7);
        *(_OWORD *)(v108 + 16) = xmmword_100481730;
        *(_QWORD *)(v108 + 56) = &type metadata for String;
        v109 = sub_100071E88();
        *(_QWORD *)(v108 + 32) = v92;
        *(_QWORD *)(v108 + 40) = v98;
        *(_QWORD *)(v108 + 96) = &type metadata for String;
        *(_QWORD *)(v108 + 104) = v109;
        *(_QWORD *)(v108 + 64) = v109;
        *(_QWORD *)(v108 + 72) = v100;
        *(_QWORD *)(v108 + 80) = v102;
        v92 = (_QWORD *)String.init(format:_:)(v106._countAndFlagsBits, v106._object, v108);
        v110 = swift_bridgeObjectRelease(v106._object);
        (*(void (**)(_BYTE *, uint64_t, __n128))(v150 + 8))(v88, v151, v110);
        return v92;
      }
    }
    else
    {
      swift_bridgeObjectRelease(v102);
    }
    v118 = v141;
    sub_100007464(v50, (uint64_t)v141, &qword_1005D9990);
    v119 = v142;
    sub_100007464(v149, (uint64_t)v142, (uint64_t *)&unk_1005D6700);
    if (!v98)
      v92 = sub_10020CFC4((uint64_t)v118, (uint64_t)v119, 1, v135 & 1);
    v120 = v150;
    v121 = v151;
    sub_1000051EC((uint64_t)v119, (uint64_t *)&unk_1005D6700);
    sub_1000051EC((uint64_t)v118, &qword_1005D9990);
    (*(void (**)(_BYTE *, uint64_t, __n128))(v120 + 8))(v88, v121, v122);
  }
  else
  {
    v112 = v150;
    v111 = v151;
    v113 = v148;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v150 + 16))(v148, v88, v151);
    v114 = v146;
    sub_100007464(v50, (uint64_t)v146, &qword_1005D9990);
    v115 = v147;
    sub_100007464(v149, (uint64_t)v147, (uint64_t *)&unk_1005D6700);
    if (v89)
    {
      sub_1000051EC((uint64_t)v115, (uint64_t *)&unk_1005D6700);
      sub_1000051EC((uint64_t)v114, &qword_1005D9990);
      v116 = *(void (**)(_BYTE *, uint64_t))(v112 + 8);
      v116(v113, v111);
      ((void (*)(_BYTE *, uint64_t, __n128))v116)(v88, v111, v117);
    }
    else
    {
      v123 = v138;
      v124 = v137;
      v125 = v139;
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v138 + 104))(v137, enum case for PublishedLocation.Label.Length.small(_:), v139);
      v92 = (_QWORD *)PublishedLocation.Label.combinedNoFallbackLabel(maxLength:)(v124);
      v127 = v126;
      (*(void (**)(_BYTE *, uint64_t))(v123 + 8))(v124, v125);
      v128 = v136;
      sub_100007464((uint64_t)v114, (uint64_t)v136, &qword_1005D9990);
      v129 = v140;
      sub_100007464((uint64_t)v115, (uint64_t)v140, (uint64_t *)&unk_1005D6700);
      if (!v127)
        v92 = sub_10020CFC4((uint64_t)v128, (uint64_t)v129, 0, v135 & 1);
      sub_1000051EC((uint64_t)v129, (uint64_t *)&unk_1005D6700);
      sub_1000051EC((uint64_t)v128, &qword_1005D9990);
      sub_1000051EC((uint64_t)v115, (uint64_t *)&unk_1005D6700);
      sub_1000051EC((uint64_t)v114, &qword_1005D9990);
      v130 = *(void (**)(_BYTE *, uint64_t))(v112 + 8);
      v130(v148, v111);
      ((void (*)(_BYTE *, uint64_t, __n128))v130)(v161, v111, v131);
    }
  }
  return v92;
}

uint64_t sub_10020E04C(uint64_t a1, uint64_t a2, int a3, int a4, int a5, int a6, int a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void (*v132)(char *, uint64_t);
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  unint64_t v144;
  __n128 v145;
  void (*v146)(char *, uint64_t, __n128);
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t (*v150)(_QWORD, _QWORD, _QWORD);
  uint64_t v151;
  uint64_t v152;
  __n128 v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t (*v158)(_QWORD, _QWORD, _QWORD);
  char *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t (*v184)(char *, char *, uint64_t);
  char v185;
  char *v186;
  uint64_t v187;
  char *v188;
  void (*v189)(char *, uint64_t);
  __n128 v190;
  char v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;
  unint64_t v196;
  char v197;
  __n128 v198;
  uint64_t v199;
  void (*v200)(char *, uint64_t);
  void (*v201)(char *, uint64_t);
  uint64_t v202;
  id v203;
  unint64_t v204;
  unint64_t v205;
  unint64_t v206;
  Swift::String v207;
  uint64_t countAndFlagsBits;
  uint64_t v209;
  uint64_t (*v211)(_QWORD, _QWORD, _QWORD);
  uint64_t v212;
  uint64_t v213;
  const char *v214;
  uint64_t v215;
  char v216;
  uint64_t (*v217)(char *, uint64_t);
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  void *v224;
  void *v225;
  uint64_t v226;
  uint64_t v227;
  void *v228;
  void *v229;
  unint64_t v230;
  unint64_t object;
  uint64_t *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t (*v235)(uint64_t, uint64_t, uint64_t);
  int v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  id v243;
  Swift::String_optional v244;
  Swift::String v245;
  Swift::String v246;
  Swift::String v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  uint64_t v252;
  char *v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  __n128 v258;
  uint64_t v259;
  uint64_t v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t (*v269)(_QWORD, _QWORD, _QWORD);
  uint64_t v270;
  uint64_t v271;
  uint64_t (*v272)(_QWORD, _QWORD, _QWORD);
  char *v273;
  uint64_t v274;
  char *v275;
  uint64_t v276;
  char *v277;
  uint64_t v278;
  char v279;
  void (*v280)(char *, uint64_t);
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  char *v286;
  uint64_t v287;
  double v288;
  void (*v289)(char *, uint64_t);
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  unsigned int (*v297)(uint64_t, uint64_t, uint64_t);
  unsigned int v298;
  char *v299;
  uint64_t v300;
  double v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  void *v306;
  uint64_t v307;
  id v308;
  char *v309;
  uint64_t v310;
  double v311;
  void (*v312)(char *, uint64_t);
  char *v313;
  id v314;
  Swift::String v315;
  Swift::String v316;
  Swift::String v317;
  uint64_t v318;
  void *v319;
  uint64_t v320;
  uint64_t v321;
  _QWORD *v322;
  void *v323;
  id v324;
  uint64_t v325;
  char v326;
  uint64_t v327;
  uint64_t v328;
  id v329;
  unint64_t v330;
  unint64_t v331;
  unint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  void (*v338)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v339;
  unint64_t v340;
  id v341;
  Swift::String v342;
  Swift::String v343;
  Swift::String v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  void *v348;
  id v349;
  char *v350;
  uint64_t v351;
  double v352;
  char *v353;
  char *v354;
  uint64_t v355;
  char v356;
  id v357;
  Swift::String v358;
  Swift::String v359;
  Swift::String v360;
  __n128 v361;
  uint64_t v362;
  char *v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  void *v367;
  id v368;
  char *v369;
  uint64_t v370;
  void (*v371)(char *, char *, uint64_t);
  id v372;
  Swift::String v373;
  Swift::String v374;
  Swift::String v375;
  uint64_t v376;
  uint64_t v377;
  void *v378;
  void *v379;
  id v380;
  char *v381;
  uint64_t v382;
  void (*v383)(char *, char *, uint64_t);
  char *v384;
  const char *v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  unint64_t v389;
  uint64_t v390;
  char *v391;
  uint64_t v392;
  char v393;
  void (*v394)(char *, uint64_t);
  uint64_t v395;
  void *v396;
  void *v397;
  uint64_t v398;
  uint64_t v399;
  void *v400;
  void *v401;
  unint64_t v402;
  uint64_t *v403;
  uint64_t v404;
  id v405;
  Swift::String v406;
  Swift::String v407;
  Swift::String v408;
  uint64_t v409;
  uint64_t v410;
  _QWORD *v411;
  void *v412;
  id v413;
  void *v414;
  id v415;
  Swift::String v416;
  Swift::String_optional v417;
  Swift::String v418;
  Swift::String v419;
  uint64_t v420;
  uint64_t v421;
  unint64_t v422;
  uint64_t v423;
  void *v424;
  id v425;
  char *v426;
  uint64_t v427;
  id v428;
  Swift::String v429;
  Swift::String v430;
  Swift::String v431;
  __n128 v432;
  char *v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  id v440;
  void *v441;
  id v442;
  Class isa;
  id v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  unint64_t v448;
  __n128 v449;
  Swift::String v450;
  Swift::String v451;
  uint64_t My;
  _QWORD *v453;
  char v454;
  int v455;
  char *v456;
  uint64_t v457;
  char v458;
  char *v459;
  uint64_t v460;
  void (*v461)(char *, uint64_t);
  char *v462;
  uint64_t v463;
  char v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  char *v469;
  uint64_t v470;
  uint64_t v471;
  char v472;
  id v473;
  const char *v474;
  char *v475;
  char v476;
  uint64_t v477;
  unint64_t v478;
  uint64_t v479;
  __n128 v480;
  uint64_t v481;
  uint64_t v482;
  void *v483;
  void *v484;
  id v485;
  void *v486;
  id v487;
  char *v488;
  Class v489;
  char *v490;
  id v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  unint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  id v500;
  void *v501;
  id v502;
  Class v503;
  id v504;
  unint64_t v505;
  int v506;
  uint64_t v507;
  _QWORD *v508;
  uint64_t v509;
  uint64_t v510;
  id v511;
  Swift::String v512;
  Swift::String v513;
  Swift::String v514;
  uint64_t v515;
  uint64_t v516;
  unint64_t v517;
  unint64_t v518;
  unint64_t v519;
  uint64_t v520;
  void *v521;
  id v522;
  Swift::String v523;
  Swift::String_optional v524;
  Swift::String v525;
  Swift::String v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  unint64_t v530;
  unint64_t v531;
  Swift::String v532;
  unint64_t v533;
  Swift::String v534;
  unsigned int (*v535)(uint64_t, uint64_t, uint64_t);
  uint64_t v536;
  uint64_t v537;
  void *v538;
  id v539;
  char *v540;
  id v541;
  Swift::String v542;
  Swift::String v543;
  Swift::String v544;
  uint64_t v545;
  unint64_t v546;
  _QWORD *v547;
  uint64_t v548;
  uint64_t v549;
  id v550;
  Swift::String v551;
  Swift::String v552;
  Swift::String v553;
  uint64_t v554;
  uint64_t v555;
  unint64_t v556;
  unint64_t v557;
  unint64_t v558;
  unint64_t v559;
  char *v560;
  uint64_t v561;
  char *v562;
  uint64_t v563;
  char *v564;
  int v565;
  char *v566;
  int v567;
  char *v568;
  int v569;
  char *v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  char *v574;
  char *v575;
  uint64_t v576;
  char *v577;
  uint64_t v578;
  uint64_t v579;
  uint64_t v580;
  uint64_t v581;
  char *v582;
  uint64_t v583;
  uint64_t v584;
  uint64_t v585;
  uint64_t v586;
  char *v587;
  char *v588;
  int v589;
  char *v590;
  char *v591;
  char *v592;
  char *v593;
  uint64_t v594;
  char *v595;
  char *v596;
  char *v597;
  char *v598;
  char *v599;
  uint64_t v600;
  uint64_t v601;
  char *v602;
  uint64_t v603;
  uint64_t v604;
  char *v605;
  uint64_t v606;
  uint64_t v607;
  int v608;
  char *v609;
  char *v610;
  char *v611;
  int v612;
  char *v613;
  void (*v614)(char *, uint64_t);
  uint64_t v615;
  void (*v616)(char *, _QWORD, uint64_t);
  int v617;
  void (*v618)(char *, uint64_t);
  uint64_t v619;
  char *v620;
  uint64_t v621;
  uint64_t v622;
  uint64_t v623;
  char *v624;
  char *v625;
  int v626;
  int v627;
  int v628;
  char *v629;
  char *v630;
  uint64_t (*v631)(uint64_t, uint64_t, uint64_t);
  char *v632;
  char *v633;
  char *v634;
  uint64_t v635;
  char *v636;
  char *v637;
  int v638;
  int v639;
  char *v640;
  char **v641;
  uint64_t v642;
  uint64_t v643;
  uint64_t v644;
  uint64_t v645;
  uint64_t v646;
  uint64_t v647;
  uint64_t v648;
  uint64_t v649;
  _QWORD *v650;
  uint64_t (*v651)(char *, uint64_t, uint64_t);
  uint64_t v652;
  uint64_t v653;
  uint64_t v654;
  unint64_t v655;
  uint64_t v656;
  uint64_t v657;
  uint64_t v658;
  unint64_t v659;
  Swift::String v660;
  Swift::String v661;
  Swift::String v662;
  Swift::String v663;
  Swift::String v664;
  Swift::String v665;
  Swift::String v666;
  Swift::String v667;
  Swift::String v668;
  Swift::String v669;
  Swift::String v670;
  Swift::String v671;

  v563 = a8;
  v639 = a7;
  v627 = a6;
  v565 = a5;
  v567 = a4;
  v638 = a3;
  v643 = a2;
  v10 = sub_100053F2C(&qword_1005D72D0);
  __chkstk_darwin(v10);
  v575 = (char *)&v560 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v594 = type metadata accessor for FMIPActionStatus(0);
  v586 = *(_QWORD *)(v594 - 8);
  v12 = __chkstk_darwin(v594);
  v593 = (char *)&v560 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v592 = (char *)&v560 - v14;
  v15 = sub_100053F2C((uint64_t *)&unk_1005E3B00);
  __chkstk_darwin(v15);
  v620 = (char *)&v560 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v607 = type metadata accessor for FMIPEraseMetadata(0);
  v606 = *(_QWORD *)(v607 - 8);
  __chkstk_darwin(v607);
  v587 = (char *)&v560 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v604 = type metadata accessor for Date.FormatStyle.TimeStyle(0);
  v603 = *(_QWORD *)(v604 - 8);
  __chkstk_darwin(v604);
  v602 = (char *)&v560 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v601 = type metadata accessor for Date.FormatStyle.DateStyle(0);
  v600 = *(_QWORD *)(v601 - 8);
  __chkstk_darwin(v601);
  v599 = (char *)&v560 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v578 = type metadata accessor for FormatStyleCapitalizationContext(0);
  v576 = *(_QWORD *)(v578 - 8);
  __chkstk_darwin(v578);
  v577 = (char *)&v560 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  v22 = __chkstk_darwin(v21);
  v560 = (char *)&v560 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v22);
  v570 = (char *)&v560 - v25;
  v26 = __chkstk_darwin(v24);
  v590 = (char *)&v560 - v27;
  v28 = __chkstk_darwin(v26);
  v596 = (char *)&v560 - v29;
  v30 = __chkstk_darwin(v28);
  v619 = (uint64_t)&v560 - v31;
  v32 = __chkstk_darwin(v30);
  v623 = (uint64_t)&v560 - v33;
  __chkstk_darwin(v32);
  v574 = (char *)&v560 - v34;
  v622 = type metadata accessor for Date(0);
  v621 = *(_QWORD *)(v622 - 8);
  v35 = __chkstk_darwin(v622);
  v564 = (char *)&v560 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __chkstk_darwin(v35);
  v597 = (char *)&v560 - v38;
  v39 = __chkstk_darwin(v37);
  v595 = (char *)&v560 - v40;
  v41 = __chkstk_darwin(v39);
  v582 = (char *)&v560 - v42;
  v43 = __chkstk_darwin(v41);
  v598 = (char *)&v560 - v44;
  v45 = __chkstk_darwin(v43);
  v588 = (char *)&v560 - v46;
  __chkstk_darwin(v45);
  v568 = (char *)&v560 - v47;
  v649 = type metadata accessor for FMIPLocation(0);
  v642 = *(_QWORD *)(v649 - 8);
  __chkstk_darwin(v649);
  v566 = (char *)&v560 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v579 = sub_100053F2C(&qword_1005DB610);
  __chkstk_darwin(v579);
  v581 = (uint64_t)&v560 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v50);
  v613 = (char *)&v560 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_100053F2C(&qword_1005D9990);
  v53 = __chkstk_darwin(v52);
  v562 = (char *)&v560 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __chkstk_darwin(v53);
  v637 = (char *)&v560 - v56;
  __chkstk_darwin(v55);
  v644 = (uint64_t)&v560 - v57;
  v58 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  v59 = __chkstk_darwin(v58);
  v636 = (char *)&v560 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v59);
  v641 = (char **)((char *)&v560 - v61);
  v62 = sub_100053F2C((uint64_t *)&unk_1005D6700);
  v63 = __chkstk_darwin(v62);
  v561 = (uint64_t)&v560 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __chkstk_darwin(v63);
  v571 = (uint64_t)&v560 - v66;
  v67 = __chkstk_darwin(v65);
  v572 = (uint64_t)&v560 - v68;
  v69 = __chkstk_darwin(v67);
  v605 = (char *)&v560 - v70;
  v71 = __chkstk_darwin(v69);
  v584 = (uint64_t)&v560 - v72;
  v73 = __chkstk_darwin(v71);
  v580 = (uint64_t)&v560 - v74;
  v75 = __chkstk_darwin(v73);
  v573 = (uint64_t)&v560 - v76;
  v77 = __chkstk_darwin(v75);
  v630 = (char *)&v560 - v78;
  v79 = __chkstk_darwin(v77);
  v583 = (uint64_t)&v560 - v80;
  v81 = __chkstk_darwin(v79);
  v585 = (uint64_t)&v560 - v82;
  v83 = __chkstk_darwin(v81);
  v635 = (uint64_t)&v560 - v84;
  v85 = __chkstk_darwin(v83);
  v633 = (char *)&v560 - v86;
  __chkstk_darwin(v85);
  v648 = (uint64_t)&v560 - v87;
  v647 = type metadata accessor for FMIPDeviceStatus(0);
  v650 = *(_QWORD **)(v647 - 8);
  v88 = __chkstk_darwin(v647);
  v625 = (char *)&v560 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = __chkstk_darwin(v88);
  v624 = (char *)&v560 - v91;
  v92 = __chkstk_darwin(v90);
  v94 = (char *)&v560 - v93;
  __chkstk_darwin(v92);
  v96 = (char *)&v560 - v95;
  v652 = type metadata accessor for FMIPDevice(0);
  v645 = *(_QWORD *)(v652 - 8);
  v97 = __chkstk_darwin(v652);
  v611 = (char *)&v560 - ((v98 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = __chkstk_darwin(v97);
  v609 = (char *)&v560 - v100;
  v101 = __chkstk_darwin(v99);
  v610 = (char *)&v560 - v102;
  v103 = __chkstk_darwin(v101);
  v591 = (char *)&v560 - v104;
  v105 = __chkstk_darwin(v103);
  v629 = (char *)&v560 - v106;
  v107 = __chkstk_darwin(v105);
  v640 = (char *)&v560 - v108;
  v109 = __chkstk_darwin(v107);
  v634 = (char *)&v560 - v110;
  v111 = __chkstk_darwin(v109);
  v632 = (char *)&v560 - v112;
  __chkstk_darwin(v111);
  v114 = (char *)&v560 - v113;
  v115 = type metadata accessor for FMIPDeviceState(0);
  v116 = *(_QWORD *)(v115 - 8);
  v117 = __chkstk_darwin(v115);
  v119 = (char *)&v560 - ((v118 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = __chkstk_darwin(v117);
  v122 = (char *)&v560 - v121;
  v653 = a1;
  v123 = FMIPDevice.ownerIdentifier.getter(v120);
  v125 = v124;
  v127 = FMIPDefaultOwnerIdentifier.getter();
  v128 = v126;
  if (v123 == v127 && v125 == v126)
  {
    v612 = 1;
    v128 = v125;
  }
  else
  {
    v612 = _stringCompareWithSmolCheck(_:_:expecting:)(v123, v125, v127, v126, 0);
  }
  swift_bridgeObjectRelease(v125);
  swift_bridgeObjectRelease(v128);
  v129 = v653;
  v131 = FMIPDevice.state.getter(v130);
  static FMIPDeviceState.isFamilySharedDevice.getter(v131);
  v646 = sub_100008000((unint64_t *)&qword_1005D4158, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPDeviceState, (uint64_t)&protocol conformance descriptor for FMIPDeviceState);
  v608 = dispatch thunk of SetAlgebra.isSuperset(of:)(v119, v115, v646);
  v132 = *(void (**)(char *, uint64_t))(v116 + 8);
  v132(v119, v115);
  v132(v122, v115);
  v651 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v645 + 16);
  v133 = v651(v114, v129, v652);
  if ((v639 & 1) != 0)
    v569 = 0;
  else
    v569 = FMIPDevice.isLocating.getter(v133);
  v134 = v650;
  v650 = *(_QWORD **)(v645 + 8);
  v135 = ((uint64_t (*)(char *, uint64_t))v650)(v114, v652);
  v136 = FMIPDevice.state.getter(v135);
  static FMIPDeviceState.isLocationCapable.getter(v136);
  v137 = v646;
  v589 = dispatch thunk of SetAlgebra.isSuperset(of:)(v119, v115, v646);
  v132(v119, v115);
  v138 = ((uint64_t (*)(char *, uint64_t))v132)(v122, v115);
  v139 = FMIPDevice.state.getter(v138);
  static FMIPDeviceState.isLocationEnabled.getter(v139);
  v617 = dispatch thunk of SetAlgebra.isSuperset(of:)(v119, v115, v137);
  v132(v119, v115);
  v140 = ((uint64_t (*)(char *, uint64_t))v132)(v122, v115);
  FMIPDevice.status.getter(v140);
  v141 = v647;
  v616 = (void (*)(char *, _QWORD, uint64_t))v134[13];
  v616(v94, enum case for FMIPDeviceStatus.online(_:), v647);
  v142 = sub_100008000(&qword_1005DB618, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPDeviceStatus, (uint64_t)&protocol conformance descriptor for FMIPDeviceStatus);
  dispatch thunk of RawRepresentable.rawValue.getter(&v654, v141, v142);
  v615 = v142;
  dispatch thunk of RawRepresentable.rawValue.getter(&v658, v141, v142);
  v143 = v655;
  v144 = v659;
  if (v654 == v658 && v655 == v659)
  {
    v628 = 1;
    v144 = v655;
  }
  else
  {
    v628 = _stringCompareWithSmolCheck(_:_:expecting:)(v654, v655, v658, v659, 0);
  }
  swift_bridgeObjectRelease(v143);
  v145 = swift_bridgeObjectRelease(v144);
  v146 = (void (*)(char *, uint64_t, __n128))v134[1];
  v147 = v647;
  v146(v94, v647, v145);
  v614 = (void (*)(char *, uint64_t))v146;
  v148 = ((uint64_t (*)(char *, uint64_t))v146)(v96, v147);
  v149 = FMIPDevice.state.getter(v148);
  static FMIPDeviceState.isThisDevice.getter(v149);
  v626 = dispatch thunk of SetAlgebra.isSuperset(of:)(v119, v115, v646);
  v132(v119, v115);
  v618 = v132;
  v132(v122, v115);
  v150 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v641;
  sub_100007464(v643, (uint64_t)v641, (uint64_t *)&unk_1005D3AA0);
  v151 = type metadata accessor for FMIPItem(0);
  v152 = *(_QWORD *)(v151 - 8);
  v631 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v152 + 48);
  if (v631((uint64_t)v150, 1, v151) == 1)
  {
    sub_1000051EC((uint64_t)v150, (uint64_t *)&unk_1005D3AA0);
    v154 = v642;
    v155 = (uint64_t)v633;
    v156 = v649;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v642 + 56))(v633, 1, 1, v649);
  }
  else
  {
    v157 = v633;
    FMIPItem.location.getter(v153);
    v158 = v150;
    v155 = (uint64_t)v157;
    (*(void (**)(uint64_t (*)(_QWORD, _QWORD, _QWORD), uint64_t))(v152 + 8))(v158, v151);
    v156 = v649;
    v154 = v642;
  }
  v159 = v632;
  v160 = v652;
  v651(v632, v653, v652);
  v641 = *(char ***)(v154 + 48);
  v161 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v641)(v155, 1, v156);
  if ((_DWORD)v161 == 1)
  {
    v633 = (char *)v151;
    v162 = v122;
    v163 = v119;
    v164 = v115;
    v165 = v152;
    v166 = v648;
    FMIPDevice.bestLocation.getter(v161);
    v167 = v160;
    v168 = v166;
    v152 = v165;
    v115 = v164;
    v119 = v163;
    v122 = v162;
    v151 = (uint64_t)v633;
    v156 = v649;
    ((void (*)(char *, uint64_t))v650)(v159, v167);
    sub_1000051EC(v155, (uint64_t *)&unk_1005D6700);
  }
  else
  {
    ((void (*)(char *, uint64_t))v650)(v159, v160);
    v168 = v648;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v154 + 32))(v648, v155, v156);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v154 + 56))(v168, 0, 1, v156);
  }
  v169 = (uint64_t)v636;
  v170 = v635;
  sub_100007464(v168, v635, (uint64_t *)&unk_1005D6700);
  v171 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v641)(v170, 1, v156);
  v172 = (uint64_t)v637;
  if ((_DWORD)v171 == 1)
  {
    sub_1000051EC(v170, (uint64_t *)&unk_1005D6700);
    LODWORD(v636) = 0;
  }
  else
  {
    LODWORD(v636) = FMIPLocation.isOld.getter(v171);
    (*(void (**)(uint64_t, uint64_t))(v642 + 8))(v170, v649);
  }
  v173 = v634;
  sub_100007464(v643, v169, (uint64_t *)&unk_1005D3AA0);
  v174 = v631(v169, 1, v151);
  if ((_DWORD)v174 == 1)
  {
    sub_1000051EC(v169, (uint64_t *)&unk_1005D3AA0);
    v175 = type metadata accessor for FMIPAddress(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v175 - 8) + 56))(v172, 1, 1, v175);
  }
  else
  {
    FMIPItem.address.getter(v174);
    (*(void (**)(uint64_t, uint64_t))(v152 + 8))(v169, v151);
  }
  v176 = v644;
  v178 = v652;
  v177 = v653;
  v651(v173, v653, v652);
  v179 = type metadata accessor for FMIPAddress(0);
  v180 = *(_QWORD *)(v179 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v180 + 48))(v172, 1, v179) == 1)
  {
    ((void (*)(void))FMIPDevice.address.getter)();
    ((void (*)(char *, uint64_t))v650)(v173, v178);
    sub_1000051EC(v172, &qword_1005D9990);
  }
  else
  {
    ((void (*)(char *, uint64_t))v650)(v173, v178);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v180 + 32))(v176, v172, v179);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v180 + 56))(v176, 0, 1, v179);
  }
  v181 = v178;
  v182 = v640;
  v183 = v178;
  v184 = (uint64_t (*)(char *, char *, uint64_t))v651;
  v651(v640, v177, v183);
  if ((v638 & 1) == 0)
  {
    ((void (*)(char *, uint64_t))v650)(v182, v181);
    v191 = 0;
    goto LABEL_31;
  }
  v185 = v628 & v636;
  v186 = v629;
  v187 = v184(v629, v182, v181);
  if ((v185 & 1) != 0)
  {
    v188 = v182;
    v189 = (void (*)(char *, uint64_t))v650;
    ((void (*)(char *, uint64_t))v650)(v186, v181);
    v189(v188, v181);
    v191 = 1;
LABEL_31:
    v192 = (uint64_t)v630;
    goto LABEL_37;
  }
  FMIPDevice.status.getter(v187);
  v193 = v647;
  v616(v625, enum case for FMIPDeviceStatus.pending(_:), v647);
  v194 = v615;
  dispatch thunk of RawRepresentable.rawValue.getter(&v654, v193, v615);
  dispatch thunk of RawRepresentable.rawValue.getter(&v658, v193, v194);
  v195 = v655;
  v196 = v659;
  v192 = (uint64_t)v630;
  if (v654 == v658 && v655 == v659)
  {
    v197 = 1;
    v196 = v655;
  }
  else
  {
    v197 = _stringCompareWithSmolCheck(_:_:expecting:)(v654, v655, v658, v659, 0);
  }
  swift_bridgeObjectRelease(v195);
  v198 = swift_bridgeObjectRelease(v196);
  v199 = v647;
  v200 = v614;
  ((void (*)(char *, uint64_t, __n128))v614)(v625, v647, v198);
  v200(v624, v199);
  v181 = v652;
  v201 = (void (*)(char *, uint64_t))v650;
  ((void (*)(char *, uint64_t))v650)(v629, v652);
  v201(v640, v181);
  v191 = v197 & v636;
LABEL_37:
  v202 = FMIPDevice.pairingIncomplete.getter(v190);
  if ((v202 & 1) != 0)
  {
    v654 = 0;
    v655 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v655);
    v203 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v204 = 0xD00000000000002ELL;
    v558 = 0x80000001004B52A0;
    v205 = 0x80000001004B5280;
    v206 = 0xD00000000000001CLL;
LABEL_39:
    v207._countAndFlagsBits = 0;
    v207._object = (void *)0xE000000000000000;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v206, (Swift::String_optional)0, (NSBundle)v203, v207, *(Swift::String *)&v204)._countAndFlagsBits;

    goto LABEL_40;
  }
  LODWORD(v647) = v627;
  if ((v626 & 1) == 0)
  {
    v215 = FMIPDevice.state.getter(v202);
    static FMIPDeviceState.isDeviceInPendingRemove.getter(v215);
    v216 = dispatch thunk of SetAlgebra.isSuperset(of:)(v119, v115, v646);
    v217 = (uint64_t (*)(char *, uint64_t))v618;
    v618(v119, v115);
    v218 = v217(v122, v115);
    if ((v216 & 1) != 0)
    {
      v219 = v623;
      FMIPDevice.pendingRemoveUntilTimestamp.getter(v218);
      v220 = v622;
      v221 = v621;
    }
    else
    {
      v221 = v621;
      v219 = v623;
      v220 = v622;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v621 + 56))(v623, 1, 1, v622);
    }
    v234 = v619;
    sub_100007464(v219, v619, (uint64_t *)&unk_1005D3320);
    v235 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v221 + 48);
    v236 = v235(v234, 1, v220);
    v211 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v641;
    v237 = (uint64_t)v620;
    if (v236 != 1)
    {
      v242 = v598;
      (*(void (**)(char *, uint64_t, uint64_t))(v221 + 32))(v598, v234, v220);
      v243 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v244.value._countAndFlagsBits = 0xD000000000000015;
      v660._countAndFlagsBits = 0xD00000000000001ALL;
      v245._countAndFlagsBits = 0xD000000000000023;
      v660._object = (void *)0x80000001004B5600;
      v245._object = (void *)0x80000001004B55B0;
      v244.value._object = (void *)0x80000001004B55E0;
      v246._countAndFlagsBits = 0;
      v246._object = (void *)0xE000000000000000;
      v247 = NSLocalizedString(_:tableName:bundle:value:comment:)(v245, v244, (NSBundle)v243, v246, v660);

      v248 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
      v249 = v221;
      v250 = swift_allocObject(v248, 72, 7);
      *(_OWORD *)(v250 + 16) = xmmword_100481740;
      v251 = v599;
      v252 = static Date.FormatStyle.DateStyle.abbreviated.getter();
      v253 = v602;
      static Date.FormatStyle.TimeStyle.omitted.getter(v252);
      v254 = Date.formatted(date:time:)(v251, v253);
      v255 = v220;
      v257 = v256;
      (*(void (**)(char *, uint64_t))(v603 + 8))(v253, v604);
      (*(void (**)(char *, uint64_t))(v600 + 8))(v251, v601);
      *(_QWORD *)(v250 + 56) = &type metadata for String;
      *(_QWORD *)(v250 + 64) = sub_100071E88();
      *(_QWORD *)(v250 + 32) = v254;
      *(_QWORD *)(v250 + 40) = v257;
      countAndFlagsBits = String.init(format:_:)(v247._countAndFlagsBits, v247._object, v250);
      v258 = swift_bridgeObjectRelease(v247._object);
      (*(void (**)(char *, uint64_t, __n128))(v249 + 8))(v242, v255, v258);
      sub_1000051EC(v623, (uint64_t *)&unk_1005D3320);
      goto LABEL_40;
    }
    v646 = (uint64_t)v235;
    v238 = sub_1000051EC(v234, (uint64_t *)&unk_1005D3320);
    FMIPDevice.eraseMetadata.getter(v238);
    v239 = v606;
    v240 = v607;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v606 + 48))(v237, 1, v607) == 1)
    {
      v241 = sub_1000051EC(v237, (uint64_t *)&unk_1005E3B00);
      goto LABEL_69;
    }
    v272 = v211;
    v273 = v587;
    v274 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v239 + 32))(v587, v237, v240);
    v275 = v592;
    FMIPEraseMetadata.status.getter(v274);
    v276 = v586;
    v277 = v593;
    v278 = v594;
    v645 = *(_QWORD *)(v586 + 104);
    ((void (*)(char *, _QWORD, uint64_t))v645)(v593, enum case for FMIPActionStatus.eraseCancelled(_:), v594);
    v643 = sub_100008000(&qword_1005E3B50, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPActionStatus, (uint64_t)&protocol conformance descriptor for FMIPActionStatus);
    v279 = dispatch thunk of static Equatable.== infix(_:_:)(v275, v277, v278, v643);
    v280 = *(void (**)(char *, uint64_t))(v276 + 8);
    v280(v277, v278);
    v281 = ((uint64_t (*)(char *, uint64_t))v280)(v275, v278);
    if ((v279 & 1) != 0)
    {
      v241 = (*(uint64_t (**)(char *, uint64_t))(v239 + 8))(v273, v240);
      v219 = v623;
      v220 = v622;
      v211 = v272;
      goto LABEL_69;
    }
    v286 = v582;
    v287 = FMIPEraseMetadata.timestamp.getter(v281);
    v288 = Date.timeIntervalSince1970.getter(v287);
    v289 = *(void (**)(char *, uint64_t))(v221 + 8);
    v290 = v622;
    v289(v286, v622);
    v291 = v580;
    sub_100007464(v648, v580, (uint64_t *)&unk_1005D6700);
    v292 = v649;
    v293 = v272(v291, 1, v649);
    if ((_DWORD)v293 == 1)
    {
      v294 = sub_1000051EC(v291, (uint64_t *)&unk_1005D6700);
      if (v288 <= 0.0)
      {
LABEL_68:
        v241 = (*(uint64_t (**)(char *, uint64_t))(v606 + 8))(v273, v607);
        v211 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v641;
        v219 = v623;
        v220 = v622;
        v221 = v621;
LABEL_69:
        v295 = (uint64_t)v596;
        v296 = (uint64_t)v605;
        v297 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v646;
        FMIPDevice.wipedTimestamp.getter(v241);
        v298 = v297(v295, 1, v220);
        v299 = v597;
        if (v298 == 1)
        {
          sub_1000051EC(v295, (uint64_t *)&unk_1005D3320);
          goto LABEL_79;
        }
        v300 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v221 + 32))(v595, v295, v220);
        v301 = Date.timeIntervalSince1970.getter(v300);
        v302 = v584;
        sub_100007464(v648, v584, (uint64_t *)&unk_1005D6700);
        v303 = v649;
        v304 = v211(v302, 1, v649);
        if ((_DWORD)v304 == 1)
        {
          sub_1000051EC(v302, (uint64_t *)&unk_1005D6700);
          if (v301 <= 0.0)
          {
            (*(void (**)(char *, uint64_t))(v221 + 8))(v595, v220);
            goto LABEL_79;
          }
        }
        else
        {
          v305 = v303;
          v306 = (void *)FMIPLocation.location.getter(v304);
          v307 = v305;
          v221 = v621;
          (*(void (**)(uint64_t, uint64_t))(v642 + 8))(v302, v307);
          v308 = objc_msgSend(v306, "timestamp");

          v309 = v588;
          static Date._unconditionallyBridgeFromObjectiveC(_:)(v308);

          v311 = Date.timeIntervalSince1970.getter(v310);
          v312 = *(void (**)(char *, uint64_t))(v221 + 8);
          v313 = v309;
          v297 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v646;
          v296 = (uint64_t)v605;
          v312(v313, v220);
          if (v311 >= v301)
          {
            v312(v595, v220);
LABEL_79:
            v325 = v649;
            if ((v612 & 1) != 0)
            {
              sub_100007464(v648, v296, (uint64_t *)&unk_1005D6700);
            }
            else
            {
              v326 = v608 & v628;
              sub_100007464(v648, v296, (uint64_t *)&unk_1005D6700);
              if ((v326 & 1) != 0)
              {
                v327 = v572;
                sub_100007464(v296, v572, (uint64_t *)&unk_1005D6700);
                v328 = v211(v327, 1, v325);
                if ((_DWORD)v328 == 1)
                {
                  sub_1000051EC(v296, (uint64_t *)&unk_1005D6700);
                  sub_1000051EC(v327, (uint64_t *)&unk_1005D6700);
                  v654 = 0;
                  v655 = 0xE000000000000000;
                  _StringGuts.grow(_:)(20);
                  swift_bridgeObjectRelease(v655);
                  v329 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
                  v330 = 0xD000000000000030;
                  v331 = 0xD000000000000042;
                  v559 = 0x80000001004B54A0;
                  v332 = 0x80000001004B5460;
LABEL_131:
                  v450._countAndFlagsBits = 0;
                  v450._object = (void *)0xE000000000000000;
                  v451 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v330, (Swift::String_optional)0, (NSBundle)v329, v450, *(Swift::String *)&v331);
                  countAndFlagsBits = v451._countAndFlagsBits;
                  object = (unint64_t)v451._object;

                  goto LABEL_132;
                }
                v376 = v325;
                v377 = v327;
                v378 = (void *)FMIPLocation.location.getter(v328);
                sub_1000051EC(v296, (uint64_t *)&unk_1005D6700);
                (*(void (**)(uint64_t, uint64_t))(v642 + 8))(v377, v376);

                v221 = v621;
                goto LABEL_85;
              }
            }
            v333 = sub_1000051EC(v296, (uint64_t *)&unk_1005D6700);
LABEL_85:
            v334 = (uint64_t)v590;
            if (!(v589 & 1 | ((v628 & 1) == 0)))
            {
              countAndFlagsBits = sub_1001DE434(0xD000000000000036, (void *)0x80000001004B5420);
              object = v340;
              goto LABEL_132;
            }
            FMIPDevice.lockedTimestamp.getter(v333);
            if (v297(v334, 1, v220) == 1)
            {
              sub_1000051EC(v334, (uint64_t *)&unk_1005D3320);
              v335 = v571;
              sub_100007464(v648, v571, (uint64_t *)&unk_1005D6700);
              v336 = v649;
              v337 = v211(v335, 1, v649);
              if ((_DWORD)v337 == 1)
              {
                sub_1000051EC(v335, (uint64_t *)&unk_1005D6700);
                v338 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v621 + 56);
                v339 = (uint64_t)v570;
                v338(v570, 1, 1, v220);
              }
              else
              {
                v379 = (void *)FMIPLocation.location.getter(v337);
                (*(void (**)(uint64_t, uint64_t))(v642 + 8))(v335, v336);
                v380 = objc_msgSend(v379, "timestamp");

                v381 = v588;
                static Date._unconditionallyBridgeFromObjectiveC(_:)(v380);

                v382 = v621;
                v383 = *(void (**)(char *, char *, uint64_t))(v621 + 32);
                v339 = (uint64_t)v570;
                v384 = v381;
                v297 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v646;
                v383(v570, v384, v220);
                v338 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v382 + 56);
                v338((char *)v339, 0, 1, v220);
                if (v297(v339, 1, v220) != 1)
                {
                  v426 = v564;
                  v427 = ((uint64_t (*)(char *, uint64_t, uint64_t))v383)(v564, v339, v220);
                  if ((v639 & 1) != 0)
                  {
                    v654 = 0;
                    v655 = 0xE000000000000000;
                    _StringGuts.grow(_:)(20);
                    swift_bridgeObjectRelease(v655);
                    v428 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
                    v667._countAndFlagsBits = 0xD00000000000002ELL;
                    v667._object = (void *)0x80000001004A9590;
                    v429._object = (void *)0x80000001004A9570;
                    v429._countAndFlagsBits = 0xD00000000000001CLL;
                    v430._countAndFlagsBits = 0;
                    v430._object = (void *)0xE000000000000000;
                    v431 = NSLocalizedString(_:tableName:bundle:value:comment:)(v429, (Swift::String_optional)0, (NSBundle)v428, v430, v667);
                    countAndFlagsBits = v431._countAndFlagsBits;
                    object = (unint64_t)v431._object;

                  }
                  else if (a9)
                  {
                    swift_bridgeObjectRetain(a9);
                    if ((v647 & 1) != 0)
                    {
                      v482 = sub_1000A5C6C();
                      v484 = v483;
                    }
                    else
                    {
                      v520 = (uint64_t)v577;
                      static FormatStyleCapitalizationContext.beginningOfSentence.getter(v481);
                      v482 = sub_1000A5868(v520);
                      v484 = v521;
                      (*(void (**)(uint64_t, uint64_t))(v576 + 8))(v520, v578);
                    }
                    v522 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
                    v523._countAndFlagsBits = 0xD000000000000010;
                    v669._countAndFlagsBits = 0xD000000000000015;
                    v669._object = (void *)0x80000001004B3420;
                    v523._object = (void *)0x80000001004B53B0;
                    v524.value._object = (void *)0x80000001004B3400;
                    v524.value._countAndFlagsBits = 0xD000000000000010;
                    v525._countAndFlagsBits = 0;
                    v525._object = (void *)0xE000000000000000;
                    v526 = NSLocalizedString(_:tableName:bundle:value:comment:)(v523, v524, (NSBundle)v522, v525, v669);

                    v527 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
                    v528 = swift_allocObject(v527, 72, 7);
                    *(_OWORD *)(v528 + 16) = xmmword_100481740;
                    *(_QWORD *)(v528 + 56) = &type metadata for String;
                    *(_QWORD *)(v528 + 64) = sub_100071E88();
                    *(_QWORD *)(v528 + 32) = v563;
                    *(_QWORD *)(v528 + 40) = a9;
                    v529 = String.init(format:_:)(v526._countAndFlagsBits, v526._object, v528);
                    v531 = v530;
                    swift_bridgeObjectRelease(v526._object);
                    v654 = v529;
                    v655 = v531;
                    swift_bridgeObjectRetain(v531);
                    v532._countAndFlagsBits = 10;
                    v532._object = (void *)0xE100000000000000;
                    String.append(_:)(v532);
                    swift_bridgeObjectRelease(v531);
                    v533 = v655;
                    swift_bridgeObjectRetain(v655);
                    v534._countAndFlagsBits = v482;
                    v534._object = v484;
                    String.append(_:)(v534);
                    swift_bridgeObjectRelease(v533);
                    v432 = swift_bridgeObjectRelease(v484);
                    countAndFlagsBits = v654;
                    object = v655;
                    v211 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v641;
                    v220 = v622;
                  }
                  else if ((v647 & 1) != 0)
                  {
                    countAndFlagsBits = sub_1000A5C6C();
                    object = v519;
                  }
                  else
                  {
                    v545 = (uint64_t)v577;
                    static FormatStyleCapitalizationContext.beginningOfSentence.getter(v427);
                    countAndFlagsBits = sub_1000A5868(v545);
                    object = v546;
                    (*(void (**)(uint64_t, uint64_t))(v576 + 8))(v545, v578);
                  }
                  if ((v567 & 1) != 0)
                  {
                    v547 = sub_10020D508(v644, v648, v647 & 1, v565 & 1);
                    v549 = v548;
                    v654 = 0;
                    v655 = 0xE000000000000000;
                    _StringGuts.grow(_:)(20);
                    swift_bridgeObjectRelease(v655);
                    v550 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
                    v551._countAndFlagsBits = 0xD00000000000001ALL;
                    v671._countAndFlagsBits = 0xD00000000000002CLL;
                    v671._object = (void *)0x80000001004B06E0;
                    v551._object = (void *)0x80000001004B06C0;
                    v552._countAndFlagsBits = 0;
                    v552._object = (void *)0xE000000000000000;
                    v553 = NSLocalizedString(_:tableName:bundle:value:comment:)(v551, (Swift::String_optional)0, (NSBundle)v550, v552, v671);

                    v554 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
                    v555 = swift_allocObject(v554, 112, 7);
                    *(_OWORD *)(v555 + 16) = xmmword_100481730;
                    *(_QWORD *)(v555 + 56) = &type metadata for String;
                    v556 = sub_100071E88();
                    *(_QWORD *)(v555 + 32) = v547;
                    *(_QWORD *)(v555 + 40) = v549;
                    v220 = v622;
                    *(_QWORD *)(v555 + 96) = &type metadata for String;
                    *(_QWORD *)(v555 + 104) = v556;
                    v219 = v623;
                    *(_QWORD *)(v555 + 64) = v556;
                    *(_QWORD *)(v555 + 72) = countAndFlagsBits;
                    *(_QWORD *)(v555 + 80) = object;
                    v211 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v641;
                    countAndFlagsBits = String.init(format:_:)(v553._countAndFlagsBits, v553._object, v555);
                    object = v557;
                    v432 = swift_bridgeObjectRelease(v553._object);
                  }
                  (*(void (**)(char *, uint64_t, __n128))(v621 + 8))(v426, v220, v432);
                  goto LABEL_132;
                }
              }
              sub_1000051EC(v339, (uint64_t *)&unk_1005D3320);
              if ((v639 & 1) != 0)
              {
                v654 = 0;
                v655 = 0xE000000000000000;
                _StringGuts.grow(_:)(20);
                swift_bridgeObjectRelease(v655);
                v329 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
                v331 = 0xD00000000000002ELL;
                v559 = 0x80000001004A9590;
                v385 = "LOCATION_SUBSCRIPTION_PAUSED";
LABEL_130:
                v332 = (unint64_t)(v385 - 32) | 0x8000000000000000;
                v330 = 0xD00000000000001CLL;
                goto LABEL_131;
              }
              if ((v628 & 1) == 0)
              {
                v654 = 0;
                v655 = 0xE000000000000000;
                _StringGuts.grow(_:)(20);
                swift_bridgeObjectRelease(v655);
                v329 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
                v331 = 0xD00000000000002ELL;
                v559 = 0x80000001004B52A0;
                v385 = "DEVICE_LIST_SUBTITLE_OFFLINE";
                goto LABEL_130;
              }
              if (!a9)
              {
                v496 = v561;
                sub_100007464(v648, v561, (uint64_t *)&unk_1005D6700);
                v497 = v649;
                v498 = v211(v496, 1, v649);
                if ((_DWORD)v498 == 1)
                {
                  sub_1000051EC(v496, (uint64_t *)&unk_1005D6700);
                  v499 = (uint64_t)v560;
                  v338(v560, 1, 1, v220);
                }
                else
                {
                  v535 = v297;
                  v536 = v220;
                  v537 = v497;
                  v538 = (void *)FMIPLocation.location.getter(v498);
                  (*(void (**)(uint64_t, uint64_t))(v642 + 8))(v496, v537);
                  v539 = objc_msgSend(v538, "timestamp");

                  v540 = v588;
                  static Date._unconditionallyBridgeFromObjectiveC(_:)(v539);

                  v499 = (uint64_t)v560;
                  (*(void (**)(char *, char *, uint64_t))(v621 + 32))(v560, v540, v536);
                  v338((char *)v499, 0, 1, v536);
                  if (v535(v499, 1, v536) != 1)
                  {
                    sub_1000051EC(v499, (uint64_t *)&unk_1005D3320);
                    sub_1000051EC(v219, (uint64_t *)&unk_1005D3320);
                    countAndFlagsBits = 0;
                    object = 0xE000000000000000;
                    goto LABEL_134;
                  }
                }
                sub_1000051EC(v499, (uint64_t *)&unk_1005D3320);
                v654 = 0;
                v655 = 0xE000000000000000;
                _StringGuts.grow(_:)(20);
                swift_bridgeObjectRelease(v655);
                v541 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
                v542._countAndFlagsBits = 0xD000000000000031;
                v670._countAndFlagsBits = 0xD000000000000043;
                v670._object = (void *)0x80000001004B5360;
                v542._object = (void *)0x80000001004B5320;
                v543._countAndFlagsBits = 0;
                v543._object = (void *)0xE000000000000000;
                v544 = NSLocalizedString(_:tableName:bundle:value:comment:)(v542, (Swift::String_optional)0, (NSBundle)v541, v543, v670);
                countAndFlagsBits = v544._countAndFlagsBits;
                object = (unint64_t)v544._object;

                v404 = v219;
                v403 = (uint64_t *)&unk_1005D3320;
                goto LABEL_133;
              }
              v414 = (void *)objc_opt_self(NSBundle);
              v415 = objc_msgSend(v414, "mainBundle", swift_bridgeObjectRetain(a9).n128_f64[0]);
              v416._countAndFlagsBits = 0xD000000000000010;
              v666._countAndFlagsBits = 0xD000000000000015;
              v666._object = (void *)0x80000001004B3420;
              v416._object = (void *)0x80000001004B53B0;
              v417.value._object = (void *)0x80000001004B3400;
              v417.value._countAndFlagsBits = 0xD000000000000010;
              v418._countAndFlagsBits = 0;
              v418._object = (void *)0xE000000000000000;
              v419 = NSLocalizedString(_:tableName:bundle:value:comment:)(v416, v417, (NSBundle)v415, v418, v666);

              v420 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
              v421 = swift_allocObject(v420, 72, 7);
              *(_OWORD *)(v421 + 16) = xmmword_100481740;
              *(_QWORD *)(v421 + 56) = &type metadata for String;
              *(_QWORD *)(v421 + 64) = sub_100071E88();
              *(_QWORD *)(v421 + 32) = v563;
              *(_QWORD *)(v421 + 40) = a9;
              countAndFlagsBits = String.init(format:_:)(v419._countAndFlagsBits, v419._object, v421);
              object = v422;
              swift_bridgeObjectRelease(v419._object);
LABEL_132:
              v403 = (uint64_t *)&unk_1005D3320;
              v404 = v219;
              goto LABEL_133;
            }
            (*(void (**)(char *, uint64_t, uint64_t))(v221 + 32))(v299, v334, v220);
            v654 = 0;
            v655 = 0xE000000000000000;
            _StringGuts.grow(_:)(20);
            swift_bridgeObjectRelease(v655);
            v341 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
            v342._countAndFlagsBits = 0xD00000000000001BLL;
            v662._countAndFlagsBits = 0xD00000000000002DLL;
            v662._object = (void *)0x80000001004B53F0;
            v342._object = (void *)0x80000001004B53D0;
            v343._countAndFlagsBits = 0;
            v343._object = (void *)0xE000000000000000;
            v344 = NSLocalizedString(_:tableName:bundle:value:comment:)(v342, (Swift::String_optional)0, (NSBundle)v341, v343, v662);
            v318 = v344._countAndFlagsBits;
            v319 = v344._object;

            v345 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
            v346 = swift_allocObject(v345, 72, 7);
            v322 = (_QWORD *)v346;
            *(_OWORD *)(v346 + 16) = xmmword_100481740;
            if ((v647 & 1) != 0)
            {
              v323 = (void *)qword_1005F5EC8;
              if (qword_1005F5EC8)
              {
                v324 = (id)qword_1005F5EC8;
                goto LABEL_127;
              }
              goto LABEL_126;
            }
            v363 = v577;
            static FormatStyleCapitalizationContext.middleOfSentence.getter(v346);
            v364 = (uint64_t)v363;
            goto LABEL_109;
          }
        }
        v654 = 0;
        v655 = 0xE000000000000000;
        _StringGuts.grow(_:)(20);
        swift_bridgeObjectRelease(v655);
        v314 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v315._countAndFlagsBits = 0xD00000000000001BLL;
        v661._countAndFlagsBits = 0xD00000000000002DLL;
        v661._object = (void *)0x80000001004B5510;
        v315._object = (void *)0x80000001004B54F0;
        v316._countAndFlagsBits = 0;
        v316._object = (void *)0xE000000000000000;
        v317 = NSLocalizedString(_:tableName:bundle:value:comment:)(v315, (Swift::String_optional)0, (NSBundle)v314, v316, v661);
        v318 = v317._countAndFlagsBits;
        v319 = v317._object;

        v320 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
        v321 = swift_allocObject(v320, 72, 7);
        v322 = (_QWORD *)v321;
        *(_OWORD *)(v321 + 16) = xmmword_100481740;
        if ((v647 & 1) != 0)
        {
          v323 = (void *)qword_1005F5EC8;
          v299 = v595;
          if (qword_1005F5EC8)
          {
            v324 = (id)qword_1005F5EC8;
LABEL_127:
            v442 = v323;
            isa = Date._bridgeToObjectiveC()().super.isa;
            v444 = objc_msgSend(v324, "stringFromDate:", isa);

            v445 = static String._unconditionallyBridgeFromObjectiveC(_:)(v444);
            v447 = v446;

            v322[7] = &type metadata for String;
            v322[8] = sub_100071E88();
            v322[4] = v445;
            v322[5] = v447;
            countAndFlagsBits = String.init(format:_:)(v318, v319, v322);
            object = v448;
            v211 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v641;
            goto LABEL_128;
          }
LABEL_126:
          v440 = objc_msgSend(objc_allocWithZone((Class)FMRelativeDateFormatter), "init");
          objc_msgSend(v440, "setFormattingContext:", 5);
          v441 = (void *)qword_1005F5EC8;
          qword_1005F5EC8 = (uint64_t)v440;
          v324 = v440;

          v323 = 0;
          goto LABEL_127;
        }
        v363 = v577;
        static FormatStyleCapitalizationContext.middleOfSentence.getter(v321);
        v364 = (uint64_t)v363;
        v299 = v595;
LABEL_109:
        v386 = sub_1000A5868(v364);
        v388 = v387;
        (*(void (**)(char *, uint64_t))(v576 + 8))(v363, v578);
        v322[7] = &type metadata for String;
        v322[8] = sub_100071E88();
        v322[4] = v386;
        v322[5] = v388;
        countAndFlagsBits = String.init(format:_:)(v318, v319, v322);
        object = v389;
LABEL_128:
        v449 = swift_bridgeObjectRelease(v319);
        (*(void (**)(char *, uint64_t, __n128))(v621 + 8))(v299, v622, v449);
        goto LABEL_132;
      }
    }
    else
    {
      v347 = v292;
      v348 = (void *)FMIPLocation.location.getter(v293);
      (*(void (**)(uint64_t, uint64_t))(v642 + 8))(v291, v347);
      v349 = objc_msgSend(v348, "timestamp");

      v350 = v588;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v349);

      v352 = Date.timeIntervalSince1970.getter(v351);
      v294 = ((uint64_t (*)(char *, uint64_t))v289)(v350, v290);
      if (v352 >= v288)
        goto LABEL_68;
    }
    v353 = v592;
    FMIPEraseMetadata.status.getter(v294);
    v354 = v593;
    v355 = v594;
    ((void (*)(char *, _QWORD, uint64_t))v645)(v593, enum case for FMIPActionStatus.pending(_:), v594);
    v356 = dispatch thunk of static Equatable.== infix(_:_:)(v353, v354, v355, v643);
    v280(v354, v355);
    v280(v353, v355);
    if ((v356 & 1) != 0)
    {
      v654 = 0;
      v655 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(v655);
      v357 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v358._countAndFlagsBits = 0xD000000000000022;
      v663._countAndFlagsBits = 0xD000000000000034;
      v663._object = (void *)0x80000001004B5570;
      v358._object = (void *)0x80000001004B5540;
      v359._countAndFlagsBits = 0;
      v359._object = (void *)0xE000000000000000;
      v360 = NSLocalizedString(_:tableName:bundle:value:comment:)(v358, (Swift::String_optional)0, (NSBundle)v357, v359, v663);
      countAndFlagsBits = v360._countAndFlagsBits;
      object = (unint64_t)v360._object;

      v362 = v623;
    }
    else
    {
      v654 = 0;
      v655 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(v655);
      v405 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v406._countAndFlagsBits = 0xD00000000000001BLL;
      v665._countAndFlagsBits = 0xD00000000000002DLL;
      v665._object = (void *)0x80000001004B5510;
      v406._object = (void *)0x80000001004B54F0;
      v407._countAndFlagsBits = 0;
      v407._object = (void *)0xE000000000000000;
      v408 = NSLocalizedString(_:tableName:bundle:value:comment:)(v406, (Swift::String_optional)0, (NSBundle)v405, v407, v665);

      v409 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
      v410 = swift_allocObject(v409, 72, 7);
      v411 = (_QWORD *)v410;
      *(_OWORD *)(v410 + 16) = xmmword_100481740;
      v362 = v623;
      if ((v647 & 1) != 0)
      {
        v412 = (void *)qword_1005F5EC8;
        if (qword_1005F5EC8)
        {
          v413 = (id)qword_1005F5EC8;
        }
        else
        {
          v485 = objc_msgSend(objc_allocWithZone((Class)FMRelativeDateFormatter), "init");
          objc_msgSend(v485, "setFormattingContext:", 5);
          v486 = (void *)qword_1005F5EC8;
          qword_1005F5EC8 = (uint64_t)v485;
          v413 = v485;

          v362 = v623;
          v412 = 0;
        }
        v487 = v412;
        v488 = v588;
        FMIPEraseMetadata.timestamp.getter(v487);
        v489 = Date._bridgeToObjectiveC()().super.isa;
        v289(v488, v622);
        v490 = v273;
        v491 = objc_msgSend(v413, "stringFromDate:", v489);

        v492 = static String._unconditionallyBridgeFromObjectiveC(_:)(v491);
        v494 = v493;

        v273 = v490;
        v411[7] = &type metadata for String;
        v411[8] = sub_100071E88();
        v411[4] = v492;
        v411[5] = v494;
        v439 = v408._countAndFlagsBits;
      }
      else
      {
        v646 = v408._countAndFlagsBits;
        v433 = v588;
        v434 = FMIPEraseMetadata.timestamp.getter(v410);
        v435 = (uint64_t)v577;
        static FormatStyleCapitalizationContext.middleOfSentence.getter(v434);
        v436 = sub_1000A5868(v435);
        v438 = v437;
        (*(void (**)(uint64_t, uint64_t))(v576 + 8))(v435, v578);
        v289(v433, v622);
        v411[7] = &type metadata for String;
        v411[8] = sub_100071E88();
        v411[4] = v436;
        v411[5] = v438;
        v439 = v646;
      }
      countAndFlagsBits = String.init(format:_:)(v439, v408._object, v411);
      object = v495;
      v361 = swift_bridgeObjectRelease(v408._object);
    }
    (*(void (**)(char *, uint64_t, __n128))(v606 + 8))(v273, v607, v361);
    v232 = (uint64_t *)&unk_1005D3320;
    v233 = v362;
    goto LABEL_49;
  }
  if ((v617 & 1) == 0)
  {
    v222 = (uint64_t)v613;
    v651(v613, v653, v181);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v645 + 56))(v222, 0, 1, v181);
    v223 = sub_1001DE71C(0xD000000000000036, 0x80000001004B5620, v222);
    v225 = v224;
    v227 = v226;
    v229 = v228;
    swift_bridgeObjectRetain(v228);
    countAndFlagsBits = sub_1001DDC8C(v223, v225, v227, v229, 0, 0);
    object = v230;
    swift_bridgeObjectRelease_n(v229, 2);
    swift_bridgeObjectRelease(v225);
    v232 = &qword_1005D6710;
    v233 = v222;
LABEL_49:
    sub_1000051EC(v233, v232);
    v211 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v641;
    goto LABEL_134;
  }
  v211 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v641;
  if (!(v612 & 1 | ((v608 & 1) == 0)) && ((v628 ^ 1) & 1) == 0)
  {
    v212 = (uint64_t)v613;
    v651(v613, v653, v181);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v645 + 56))(v212, 0, 1, v181);
    v213 = 0xD000000000000035;
    v214 = "DEVICE_LIST_SUBTITLE_THIS_DEVICE_NOT_SHARING_LOCATION";
LABEL_112:
    v395 = sub_1001DE71C(v213, (unint64_t)(v214 - 32) | 0x8000000000000000, v212);
    v397 = v396;
    v399 = v398;
    v401 = v400;
    swift_bridgeObjectRetain(v400);
    countAndFlagsBits = sub_1001DDC8C(v395, v397, v399, v401, 0, 0);
    object = v402;
    swift_bridgeObjectRelease_n(v401, 2);
    swift_bridgeObjectRelease(v397);
    v403 = &qword_1005D6710;
    v404 = v212;
LABEL_133:
    sub_1000051EC(v404, v403);
    goto LABEL_134;
  }
  v259 = v181;
  v260 = v585;
  sub_100007464(v648, v585, (uint64_t *)&unk_1005D6700);
  v261 = v591;
  v262 = v651(v591, v653, v259);
  if ((v191 & 1) == 0)
  {
    v263 = v259;
    ((void (*)(char *, uint64_t))v650)(v261, v259);
    v268 = v649;
    v270 = v622;
    v271 = v642;
    goto LABEL_62;
  }
  v263 = v259;
  v264 = v583;
  FMIPDevice.crowdSourcedLocation.getter(v262);
  v265 = v581;
  v266 = v581 + *(int *)(v579 + 48);
  sub_100007464(v260, v581, (uint64_t *)&unk_1005D6700);
  sub_100007464(v264, v266, (uint64_t *)&unk_1005D6700);
  v267 = v649;
  if (v211(v265, 1, v649) != 1)
  {
    sub_100007464(v265, v192, (uint64_t *)&unk_1005D6700);
    v269 = v211;
    if (v211(v266, 1, v267) != 1)
    {
      v271 = v642;
      v390 = v260;
      v391 = v566;
      (*(void (**)(char *, uint64_t, uint64_t))(v642 + 32))(v566, v266, v267);
      v392 = sub_100008000((unint64_t *)&unk_1005DB620, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPLocation, (uint64_t)&protocol conformance descriptor for FMIPLocation);
      v393 = dispatch thunk of static Equatable.== infix(_:_:)(v192, v391, v649, v392);
      v394 = *(void (**)(char *, uint64_t))(v271 + 8);
      v394(v391, v649);
      sub_1000051EC(v583, (uint64_t *)&unk_1005D6700);
      ((void (*)(char *, uint64_t))v650)(v591, v652);
      sub_1000051EC(v390, (uint64_t *)&unk_1005D6700);
      v394((char *)v192, v649);
      v263 = v652;
      v268 = v649;
      v282 = sub_1000051EC(v265, (uint64_t *)&unk_1005D6700);
      v270 = v622;
      v211 = v269;
      if ((v393 & 1) != 0)
        goto LABEL_63;
LABEL_111:
      v212 = (uint64_t)v613;
      v651(v613, v653, v263);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v645 + 56))(v212, 0, 1, v263);
      v213 = 0xD000000000000037;
      v214 = "DEVICE_LIST_SUBTITLE_THIS_DEVICE_LOCATION_NOT_AVAILABLE";
      goto LABEL_112;
    }
    sub_1000051EC(v583, (uint64_t *)&unk_1005D6700);
    ((void (*)(char *, uint64_t))v650)(v591, v263);
    sub_1000051EC(v260, (uint64_t *)&unk_1005D6700);
    (*(void (**)(uint64_t, uint64_t))(v642 + 8))(v192, v267);
LABEL_96:
    sub_1000051EC(v265, &qword_1005DB610);
    v211 = v269;
    goto LABEL_111;
  }
  sub_1000051EC(v264, (uint64_t *)&unk_1005D6700);
  ((void (*)(char *, uint64_t))v650)(v261, v263);
  v268 = v649;
  sub_1000051EC(v260, (uint64_t *)&unk_1005D6700);
  v269 = v211;
  if (v211(v266, 1, v268) != 1)
    goto LABEL_96;
  v260 = v265;
  v270 = v622;
  v271 = v642;
LABEL_62:
  v282 = sub_1000051EC(v260, (uint64_t *)&unk_1005D6700);
LABEL_63:
  if ((FMIPShowCrowdSourcedLocationOnly.getter(v282) & 1) == 0)
  {
    v212 = (uint64_t)v613;
    v651(v613, v653, v263);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v645 + 56))(v212, 0, 1, v263);
    v213 = 0xD000000000000020;
    v214 = "DEVICE_LIST_SUBTITLE_THIS_DEVICE";
    goto LABEL_112;
  }
  v283 = v573;
  sub_100007464(v648, v573, (uint64_t *)&unk_1005D6700);
  v284 = v211(v283, 1, v268);
  if ((_DWORD)v284 == 1)
  {
    sub_1000051EC(v283, (uint64_t *)&unk_1005D6700);
    v285 = (uint64_t)v574;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v621 + 56))(v574, 1, 1, v270);
    goto LABEL_102;
  }
  v365 = FMIPLocation.location.getter(v284);
  v366 = v283;
  v367 = (void *)v365;
  v263 = v652;
  (*(void (**)(uint64_t, uint64_t))(v271 + 8))(v366, v268);
  v368 = objc_msgSend(v367, "timestamp");

  v369 = v588;
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v368);

  v370 = v621;
  v371 = *(void (**)(char *, char *, uint64_t))(v621 + 32);
  v285 = (uint64_t)v574;
  v371(v574, v369, v270);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v370 + 56))(v285, 0, 1, v270);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v370 + 48))(v285, 1, v270) == 1)
  {
LABEL_102:
    sub_1000051EC(v285, (uint64_t *)&unk_1005D3320);
    if ((v569 & 1) != 0)
    {
      v654 = 0;
      v655 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(v655);
      v372 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v664._countAndFlagsBits = 0xD00000000000002ELL;
      v664._object = (void *)0x80000001004B52A0;
      v373._object = (void *)0x80000001004B5280;
      v373._countAndFlagsBits = 0xD00000000000001CLL;
      v374._countAndFlagsBits = 0;
      v374._object = (void *)0xE000000000000000;
      v375 = NSLocalizedString(_:tableName:bundle:value:comment:)(v373, (Swift::String_optional)0, (NSBundle)v372, v374, v664);
      countAndFlagsBits = v375._countAndFlagsBits;
      object = (unint64_t)v375._object;

      goto LABEL_134;
    }
    goto LABEL_111;
  }
  v423 = ((uint64_t (*)(char *, uint64_t, uint64_t))v371)(v568, v285, v270);
  if ((v647 & 1) != 0)
  {
    v424 = (void *)qword_1005F5ED0;
    if (qword_1005F5ED0)
    {
      v425 = (id)qword_1005F5ED0;
    }
    else
    {
      v500 = objc_msgSend(objc_allocWithZone((Class)FMRelativeDateFormatter), "init");
      objc_msgSend(v500, "setFormattingContext:", 2);
      v501 = (void *)qword_1005F5ED0;
      qword_1005F5ED0 = (uint64_t)v500;
      v425 = v500;

      v424 = 0;
    }
    v502 = v424;
    v503 = Date._bridgeToObjectiveC()().super.isa;
    v504 = objc_msgSend(v425, "stringFromDate:", v503);

    countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(v504);
    object = v505;

  }
  else
  {
    v477 = (uint64_t)v577;
    static FormatStyleCapitalizationContext.beginningOfSentence.getter(v423);
    countAndFlagsBits = sub_1000A5868(v477);
    object = v478;
    v479 = (*(uint64_t (**)(uint64_t, uint64_t))(v576 + 8))(v477, v578);
  }
  if ((v567 & 1) != 0)
  {
    v506 = v647 & 1;
    v507 = (uint64_t)v562;
    FMIPDevice.address.getter(v479);
    v508 = sub_10020D508(v507, v648, v506, v565 & 1);
    v510 = v509;
    sub_1000051EC(v507, &qword_1005D9990);
    v654 = 0;
    v655 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v655);
    v511 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v512._countAndFlagsBits = 0xD00000000000001ALL;
    v668._countAndFlagsBits = 0xD00000000000002CLL;
    v668._object = (void *)0x80000001004B06E0;
    v512._object = (void *)0x80000001004B06C0;
    v513._countAndFlagsBits = 0;
    v513._object = (void *)0xE000000000000000;
    v514 = NSLocalizedString(_:tableName:bundle:value:comment:)(v512, (Swift::String_optional)0, (NSBundle)v511, v513, v668);

    v515 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
    v516 = swift_allocObject(v515, 112, 7);
    *(_OWORD *)(v516 + 16) = xmmword_100481730;
    *(_QWORD *)(v516 + 56) = &type metadata for String;
    v517 = sub_100071E88();
    *(_QWORD *)(v516 + 32) = v508;
    *(_QWORD *)(v516 + 40) = v510;
    v270 = v622;
    *(_QWORD *)(v516 + 96) = &type metadata for String;
    *(_QWORD *)(v516 + 104) = v517;
    *(_QWORD *)(v516 + 64) = v517;
    *(_QWORD *)(v516 + 72) = countAndFlagsBits;
    *(_QWORD *)(v516 + 80) = object;
    v211 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v641;
    countAndFlagsBits = String.init(format:_:)(v514._countAndFlagsBits, v514._object, v516);
    object = v518;
    v480 = swift_bridgeObjectRelease(v514._object);
  }
  (*(void (**)(char *, uint64_t, __n128))(v621 + 8))(v568, v270, v480);
LABEL_134:
  My = type metadata accessor for Feature.FindMy(0);
  v656 = My;
  v657 = sub_100008000((unint64_t *)&qword_1005D9690, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.FindMy, (uint64_t)&protocol conformance descriptor for Feature.FindMy);
  v453 = sub_10003D370(&v654);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(My - 8) + 104))(v453, enum case for Feature.FindMy.baAirpodsMultipartUI(_:), My);
  v454 = isFeatureEnabled(_:)(&v654);
  sub_100029574(&v654);
  v455 = v211(v648, 1, v649);
  if ((v454 & 1) != 0)
  {
    v456 = v610;
    v457 = v651(v610, v653, v652);
    if (v455 != 1 || (v647 & 1) != 0)
    {
      v475 = v456;
      v460 = v652;
      v461 = (void (*)(char *, uint64_t))v650;
      ((void (*)(char *, uint64_t))v650)(v475, v652);
      v462 = v609;
      v651(v609, v653, v460);
    }
    else
    {
      v458 = FMIPDevice.hasLocation.getter(v457);
      v459 = v456;
      v460 = v652;
      v461 = (void (*)(char *, uint64_t))v650;
      ((void (*)(char *, uint64_t))v650)(v459, v652);
      v462 = v609;
      v463 = v651(v609, v653, v460);
      if ((v458 & 1) != 0)
      {
        v464 = FMIPDevice.shouldDisplaySeparatedLocation.getter(v463);
        v461(v462, v460);
        if ((v464 & 1) == 0)
          goto LABEL_40;
        swift_bridgeObjectRelease(object);
        v465 = (uint64_t)v575;
        FMIPDevice.itemGroup.getter(v466);
        v467 = type metadata accessor for FMIPItemGroup(0);
        v468 = *(_QWORD *)(v467 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v468 + 48))(v465, 1, v467) == 1)
        {
          sub_1000051EC(v465, &qword_1005D72D0);
LABEL_150:
          v654 = 0;
          v655 = 0xE000000000000000;
          _StringGuts.grow(_:)(20);
          swift_bridgeObjectRelease(v655);
          v203 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
          v206 = 0xD000000000000019;
          v204 = 0xD00000000000002BLL;
          v558 = 0x80000001004B52F0;
          v474 = "ITEM_SUBTITLE_OUT_OF_CASE";
          goto LABEL_151;
        }
        v476 = FMIPItemGroup.partsAtMultipleLocations.getter();
        (*(void (**)(uint64_t, uint64_t))(v468 + 8))(v465, v467);
        if ((v476 & 1) == 0)
          goto LABEL_150;
        v654 = 0;
        v655 = 0xE000000000000000;
        _StringGuts.grow(_:)(20);
        swift_bridgeObjectRelease(v655);
        v473 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
LABEL_144:
        v203 = v473;
        v206 = 0xD00000000000001FLL;
        v204 = 0xD000000000000031;
        v558 = 0x80000001004B2A40;
        v474 = "ITEM_SUBTITLE_MULTIPLE_LOCATION";
LABEL_151:
        v205 = (unint64_t)(v474 - 32) | 0x8000000000000000;
        goto LABEL_39;
      }
    }
    v461(v462, v460);
    goto LABEL_40;
  }
  v469 = v611;
  v470 = v652;
  v471 = v651(v611, v653, v652);
  if (v455 != 1)
  {
    ((void (*)(char *, uint64_t))v650)(v469, v470);
    goto LABEL_40;
  }
  v472 = FMIPDevice.shouldDisplaySeparatedLocation.getter(v471);
  ((void (*)(char *, uint64_t))v650)(v469, v470);
  if ((v472 & 1) != 0)
  {
    swift_bridgeObjectRelease(object);
    v654 = 0;
    v655 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v655);
    v473 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    goto LABEL_144;
  }
LABEL_40:
  v209 = v648;
  sub_1000051EC(v644, &qword_1005D9990);
  sub_1000051EC(v209, (uint64_t *)&unk_1005D6700);
  return countAndFlagsBits;
}

uint64_t sub_100211A8C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t My;
  _QWORD *v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  char v40;
  __n128 v41;
  void (*v42)(char *, uint64_t, __n128);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t i;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  Swift::String v68;
  uint64_t v69;
  Swift::String v70;
  void *object;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t);
  char v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  _QWORD *v85;
  char *v86;
  unsigned int (*v87)(char *, uint64_t, uint64_t);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;

  v88 = a2;
  v85 = (_QWORD *)type metadata accessor for FMIPDevice(0);
  v83 = *(v85 - 1);
  __chkstk_darwin(v85);
  v82 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100053F2C(&qword_1005DB5F8);
  __chkstk_darwin(v8);
  v80 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FMIPPartType(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v79 - v15;
  v17 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  v18 = __chkstk_darwin(v17);
  v84 = (char *)&v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v21 = (char *)&v79 - v20;
  v22 = type metadata accessor for FMIPItem(0);
  v89 = *(_QWORD *)(v22 - 8);
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v79 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __chkstk_darwin(v23);
  v86 = (char *)&v79 - v27;
  v81 = a1;
  result = FMIPDevice.name.getter(v26);
  v96 = result;
  v97 = v29;
  if ((a4 & 1) == 0)
    return result;
  My = type metadata accessor for Feature.FindMy(0);
  v94 = My;
  v95 = sub_100008000((unint64_t *)&qword_1005D9690, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.FindMy, (uint64_t)&protocol conformance descriptor for Feature.FindMy);
  v31 = sub_10003D370(&v92);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(My - 8) + 104))(v31, enum case for Feature.FindMy.baAirpodsMultipartUI(_:), My);
  LOBYTE(My) = isFeatureEnabled(_:)(&v92);
  sub_100029574(&v92);
  if ((My & 1) == 0)
    return v96;
  sub_100007464(v88, (uint64_t)v21, (uint64_t *)&unk_1005D3AA0);
  v32 = v89;
  v87 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48);
  if (v87(v21, 1, v22) == 1)
  {
    sub_1000051EC((uint64_t)v21, (uint64_t *)&unk_1005D3AA0);
    if (!a3)
      return v96;
    goto LABEL_17;
  }
  v33 = swift_bridgeObjectRelease(v97);
  v34 = (*(uint64_t (**)(char *, char *, uint64_t, __n128))(v32 + 32))(v86, v21, v22, v33);
  FMIPItem.partType.getter(v34);
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v14, enum case for FMIPPartType.case(_:), v10);
  v35 = sub_100008000((unint64_t *)&unk_1005E3AF0, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPartType, (uint64_t)&protocol conformance descriptor for FMIPPartType);
  dispatch thunk of RawRepresentable.rawValue.getter(&v92, v10, v35);
  dispatch thunk of RawRepresentable.rawValue.getter(&v90, v10, v35);
  v36 = v93;
  v37 = v91;
  if (v92 == v90 && v93 == v91)
  {
    swift_bridgeObjectRelease_n(v93, 2);
    v38 = *(void (**)(char *, uint64_t))(v11 + 8);
    v38(v14, v10);
    v39 = ((uint64_t (*)(char *, uint64_t))v38)(v16, v10);
LABEL_10:
    v43 = v86;
    v44 = FMIPItem.name.getter(v39);
    v46 = v45;
    (*(void (**)(char *, uint64_t))(v89 + 8))(v43, v22);
    goto LABEL_16;
  }
  v40 = _stringCompareWithSmolCheck(_:_:expecting:)(v92, v93, v90, v91, 0);
  swift_bridgeObjectRelease(v36);
  v41 = swift_bridgeObjectRelease(v37);
  v42 = *(void (**)(char *, uint64_t, __n128))(v11 + 8);
  v42(v14, v10, v41);
  v39 = ((uint64_t (*)(char *, uint64_t))v42)(v16, v10);
  if ((v40 & 1) != 0)
    goto LABEL_10;
  v47 = a3;
  v48 = (uint64_t)v80;
  FMIPItem.partInfo.getter(v39);
  v49 = type metadata accessor for FMIPPartInfo(0);
  v50 = *(_QWORD *)(v49 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49) == 1)
  {
    sub_1000051EC(v48, &qword_1005DB5F8);
    v52 = v82;
    v51 = v83;
    v53 = v85;
    v54 = (*(uint64_t (**)(char *, uint64_t, _QWORD *))(v83 + 16))(v82, v81, v85);
LABEL_14:
    v44 = FMIPDevice.name.getter(v54);
    v46 = v56;
    goto LABEL_15;
  }
  v44 = FMIPPartInfo.name.getter();
  v46 = v55;
  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
  v52 = v82;
  v51 = v83;
  v53 = v85;
  v54 = (*(uint64_t (**)(char *, uint64_t, _QWORD *))(v83 + 16))(v82, v81, v85);
  if (!v46)
    goto LABEL_14;
LABEL_15:
  a3 = v47;
  (*(void (**)(char *, _QWORD *))(v51 + 8))(v52, v53);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v86, v22);
LABEL_16:
  v96 = v44;
  v97 = v46;
  if (!a3)
    return v96;
LABEL_17:
  v92 = a3;
  swift_bridgeObjectRetain(a3);
  sub_10020A6DC(&v92);
  v57 = v92;
  v58 = *(_QWORD *)(v92 + 16);
  v59 = (uint64_t)v84;
  if (!v58)
    goto LABEL_31;
  v60 = (*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80);
  v83 = v92;
  v61 = v92 + v60;
  v62 = *(char **)(v89 + 72);
  v85 = *(_QWORD **)(v89 + 16);
  v86 = v62;
  for (i = ((uint64_t (*)(char *, unint64_t, uint64_t))v85)(v25, v92 + v60, v22);
        ;
        i = ((uint64_t (*)(char *, uint64_t, uint64_t))v85)(v25, v61, v22))
  {
    v64 = FMIPItem.identifier.getter(i);
    v66 = v65;
    sub_100007464(v88, v59, (uint64_t *)&unk_1005D3AA0);
    v67 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v87)(v59, 1, v22);
    if ((_DWORD)v67 == 1)
    {
      sub_1000051EC(v59, (uint64_t *)&unk_1005D3AA0);
      swift_bridgeObjectRelease(v66);
    }
    else
    {
      v72 = FMIPItem.identifier.getter(v67);
      v73 = v59;
      v74 = v72;
      v76 = v75;
      v77 = *(void (**)(uint64_t, uint64_t))(v89 + 8);
      v77(v73, v22);
      if (v64 == v74 && v66 == v76)
      {
        swift_bridgeObjectRelease_n(v66, 2);
        v59 = (uint64_t)v84;
LABEL_20:
        v77((uint64_t)v25, v22);
        goto LABEL_21;
      }
      v78 = _stringCompareWithSmolCheck(_:_:expecting:)(v64, v66, v74, v76, 0);
      swift_bridgeObjectRelease(v66);
      swift_bridgeObjectRelease(v76);
      v59 = (uint64_t)v84;
      if ((v78 & 1) != 0)
        goto LABEL_20;
    }
    v68._countAndFlagsBits = 2108192;
    v68._object = (void *)0xE300000000000000;
    String.append(_:)(v68);
    v70._countAndFlagsBits = FMIPItem.name.getter(v69);
    object = v70._object;
    String.append(_:)(v70);
    swift_bridgeObjectRelease(object);
    (*(void (**)(char *, uint64_t))(v89 + 8))(v25, v22);
LABEL_21:
    v61 += (uint64_t)v86;
    if (!--v58)
      break;
  }
  v57 = v83;
LABEL_31:
  swift_release(v57);
  return v96;
}

void sub_100212108()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t ObjCClassFromMetadata;
  NSString v11;
  id v12;

  v1 = v0;
  v2 = objc_msgSend(v0, "navigationController");
  if (v2)
  {
    v3 = v2;
    sub_1003C8288();

  }
  v4 = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithFrame:", 0.0, 0.0, 20.0, 20.0);
  v5 = (void *)objc_opt_self(UIColor);
  v6 = objc_msgSend(v5, "grayColor");
  objc_msgSend(v4, "setColor:", v6);

  v7 = *(void **)&v1[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_tableView];
  objc_msgSend(v7, "setDataSource:", v1);
  objc_msgSend(v7, "setDelegate:", v1);
  objc_msgSend(v7, "setKeyboardDismissMode:", 2);
  objc_msgSend(v7, "setScrollEnabled:", 0);
  objc_msgSend(v7, "setAllowsSelection:", 0);
  v8 = objc_msgSend(v5, "clearColor");
  objc_msgSend(v7, "setBackgroundColor:", v8);

  v9 = type metadata accessor for FMEditableMessageTableViewCell();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v9);
  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v11);

  v12 = objc_msgSend(v1, "contentView");
  objc_msgSend(v12, "addSubview:", v7);

}

id sub_1002122F4(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  NSString v4;
  Class isa;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t (*v11)(void);
  char *v12;
  uint64_t v13;
  char *v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v2 = v1;
  v4 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v6 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v4, isa);

  v7 = type metadata accessor for FMEditableMessageTableViewCell();
  v8 = swift_dynamicCastClass(v6, v7);
  if (v8)
  {
    v9 = v8;
    swift_unknownObjectWeakAssign(v8 + OBJC_IVAR____TtC6FindMy30FMEditableMessageTableViewCell_delegate, v2);
    *(_BYTE *)(v9 + OBJC_IVAR____TtC6FindMy30FMEditableMessageTableViewCell_textViewIsEnabled) = 1;
    v10 = v6;
    sub_1002FF5A0();

    v11 = *(uint64_t (**)(void))((swift_isaMask & *v2) + 0x1F0);
    v12 = (char *)*(id *)(v9 + OBJC_IVAR____TtC6FindMy30FMEditableMessageTableViewCell_textView);
    v13 = v11();
    v14 = &v12[OBJC_IVAR____TtC6FindMy17FMMessageTextView_maxCharacterLimit];
    *(_QWORD *)v14 = v13;
    v14[8] = v15 & 1;

  }
  v16 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_message);
  v17 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_message + 8);
  swift_bridgeObjectRetain(v17);
  sub_100212604(v16, v17, v18, 0, 1);
  swift_bridgeObjectRelease(v17);
  return v6;
}

double sub_100212468(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  double result;

  v2 = objc_msgSend(a1, "text");
  if (v2)
  {
    v3 = v2;
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v6 = v5;

  }
  else
  {
    v4 = 0;
    v6 = 0;
  }
  v7 = (uint64_t *)(v1 + OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_message);
  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_message + 8);
  *v7 = v4;
  v7[1] = v6;
  swift_bridgeObjectRelease(v8);
  v9 = *v7;
  v10 = v7[1];
  swift_bridgeObjectRetain(v10);
  sub_100212604(v9, v10, v11, 0, 1);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v10).n128_u64[0];
  return result;
}

id sub_1002124FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  Class isa;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v12;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_tableView);
  IndexPath.init(row:section:)(0, 0);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v7 = objc_msgSend(v5, "cellForRowAtIndexPath:", isa);

  if (!v7)
    return 0;
  v8 = type metadata accessor for FMEditableMessageTableViewCell();
  v9 = swift_dynamicCastClass(v7, v8);
  if (!v9)
  {

    return 0;
  }
  v10 = *(id *)(v9 + OBJC_IVAR____TtC6FindMy30FMEditableMessageTableViewCell_textView);

  return v10;
}

uint64_t sub_100212604(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v11;
  uint64_t result;
  char v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  id v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  NSString v39;
  unsigned int v40;
  uint64_t v41;
  unint64_t v42;
  Swift::String v43;

  v6 = v5;
  if (a2)
    v11 = String.characterCount.getter(a1, a2);
  else
    v11 = 0;
  result = (*(uint64_t (**)(void))((swift_isaMask & *v5) + 0x1F0))();
  if ((v13 & 1) != 0)
    return 0;
  v14 = result;
  v15 = result - v11;
  if (__OFSUB__(result, v11))
  {
    __break(1u);
    goto LABEL_27;
  }
  v16 = 0;
  if (a2 && (a5 & 1) == 0)
  {
    if (a4 >= 1)
    {
      v17 = HIBYTE(a2) & 0xF;
      if ((a2 & 0x2000000000000000) == 0)
        v17 = a1 & 0xFFFFFFFFFFFFLL;
      if (!v17)
      {
        v19 = __OFADD__(v15, a4);
        v15 += a4;
        if (v19)
        {
LABEL_28:
          __break(1u);
          return result;
        }
LABEL_19:
        v16 = 1;
        goto LABEL_20;
      }
    }
    if (v11 >= result)
    {
      v16 = 0;
      goto LABEL_20;
    }
    v18 = String.characterCount.getter(a1, a2);
    v19 = __OFSUB__(v15, v18);
    v15 -= v18;
    if (!v19)
      goto LABEL_19;
    __break(1u);
    return 0;
  }
LABEL_20:
  v41 = 0;
  v42 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v20 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v43._countAndFlagsBits = 0xD00000000000002ALL;
  v43._object = (void *)0x80000001004B5870;
  v21._object = (void *)0x80000001004B5850;
  v21._countAndFlagsBits = 0xD000000000000018;
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)v20, v22, v43);

  v24 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
  result = swift_allocObject(v24, 112, 7);
  *(_OWORD *)(result + 16) = xmmword_100481730;
  if (__OFSUB__(v14, v15))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v25 = (_QWORD *)result;
  v40 = v16;
  v26 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v28 = v27;
  v25[7] = &type metadata for String;
  v29 = sub_100071E88();
  v25[8] = v29;
  v25[4] = v26;
  v25[5] = v28;
  v41 = v14;
  v30 = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v25[12] = &type metadata for String;
  v25[13] = v29;
  v25[9] = v30;
  v25[10] = v31;
  v32 = String.init(format:_:)(v23._countAndFlagsBits, v23._object, v25);
  v34 = v33;
  swift_bridgeObjectRelease(v23._object);
  v35 = *(void **)((char *)v6 + OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_remainingCharsLabel);
  if (v35)
  {
    v41 = v32;
    v42 = v34;
    v36 = v35;
    String.init<A>(_:)(&v41, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
    v38 = v37;
    v39 = String._bridgeToObjectiveC()();
    objc_msgSend(v36, "setText:", v39, swift_bridgeObjectRelease(v38).n128_f64[0]);

  }
  else
  {
    swift_bridgeObjectRelease(v34);
  }
  return v40;
}

UIFontTextStyle sub_1002128E8()
{
  qword_1005F5318 = (uint64_t)UIFontTextStyleBody;
  *(_OWORD *)&qword_1005F5320 = xmmword_100488610;
  return UIFontTextStyleBody;
}

char *sub_100212910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  char *v9;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void *v18;
  __int128 v19;
  uint64_t v20;
  id v21;
  id v22;
  char *v23;
  char *v24;
  NSString v25;
  NSString v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  objc_super v36;

  v13 = &v9[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_passcode];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  v14 = &v9[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_phoneNumber];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  v15 = &v9[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_style];
  v16 = qword_1005D1D08;
  v17 = v9;
  if (v16 != -1)
    swift_once(&qword_1005D1D08, sub_1002128E8);
  v18 = (void *)qword_1005F5318;
  v19 = *(_OWORD *)&qword_1005F5320;
  *(_QWORD *)v15 = qword_1005F5318;
  *(_OWORD *)(v15 + 8) = v19;
  v20 = OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_tableView;
  v21 = objc_allocWithZone((Class)type metadata accessor for OBTableView());
  v22 = v18;
  *(_QWORD *)&v17[v20] = objc_msgSend(v21, "initWithFrame:style:", 2, 0.0, 0.0, 0.0, 0.0);
  v23 = &v17[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_message];
  *(_QWORD *)v23 = 0;
  *((_QWORD *)v23 + 1) = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_remainingCharsLabel] = 0;
  v24 = &v17[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_keyboardHeightScrollViewPadding];
  *(_QWORD *)v24 = 0;
  v24[8] = 1;
  *(_QWORD *)&v17[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_keyboardWillShowObserver] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_keyboardWillHideObserver] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_rightBarButtonItem] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_mediator] = a5;
  swift_retain(a5);

  v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  if (a4)
  {
    v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a4);
  }
  else
  {
    v26 = 0;
  }
  v36.receiver = v17;
  v36.super_class = (Class)type metadata accessor for FMEditableMessageViewController();
  v27 = (char *)objc_msgSendSuper2(&v36, "initWithTitle:detailText:icon:contentLayout:", v25, v26, 0, 3);

  swift_release(a5);
  v28 = &v27[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_passcode];
  v29 = *(_QWORD *)&v27[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_passcode + 8];
  *(_QWORD *)v28 = a6;
  *((_QWORD *)v28 + 1) = a7;
  swift_bridgeObjectRelease(v29);
  v30 = &v27[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_phoneNumber];
  v31 = *(_QWORD *)&v27[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_phoneNumber + 8];
  *(_QWORD *)v30 = a8;
  *((_QWORD *)v30 + 1) = a9;
  swift_bridgeObjectRelease(v31);
  return v27;
}

void sub_100212B50()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  double v26;
  id v27;
  Class isa;

  v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_tableView];
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = sub_100053F2C(&qword_1005D2F10);
  v3 = swift_allocObject(v2, 72, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1004820D0;
  v4 = objc_msgSend(v1, "topAnchor");
  v5 = objc_msgSend(v0, "contentView");
  v6 = objc_msgSend(v5, "topAnchor");

  v7 = objc_msgSend(v4, "constraintEqualToAnchor:constant:", v6, *(double *)&v0[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_style + 8]);
  *(_QWORD *)(v3 + 32) = v7;
  v8 = objc_msgSend(v1, "bottomAnchor");
  v9 = objc_msgSend(v0, "contentView");
  v10 = objc_msgSend(v9, "bottomAnchor");

  v11 = objc_msgSend(v8, "constraintEqualToAnchor:", v10);
  *(_QWORD *)(v3 + 40) = v11;
  v12 = objc_msgSend(v1, "leadingAnchor");
  v13 = objc_msgSend(v0, "contentView");
  v14 = objc_msgSend(v13, "leadingAnchor");

  v15 = objc_msgSend(v12, "constraintEqualToAnchor:", v14);
  *(_QWORD *)(v3 + 48) = v15;
  v16 = objc_msgSend(v1, "trailingAnchor");
  v17 = objc_msgSend(v0, "contentView");
  v18 = objc_msgSend(v17, "trailingAnchor");

  v19 = objc_msgSend(v16, "constraintEqualToAnchor:", v18);
  *(_QWORD *)(v3 + 56) = v19;
  v20 = objc_msgSend(v1, "heightAnchor");
  v21 = objc_msgSend(v0, "view");
  if (v21)
  {
    v22 = v21;
    v23 = (void *)objc_opt_self(NSLayoutConstraint);
    v24 = objc_msgSend(v22, "heightAnchor");

    v25 = objc_msgSend(v20, "constraintEqualToAnchor:", v24);
    LODWORD(v26) = 1132068864;
    v27 = objc_msgSend(v25, "setPriority:", v26);
    *(_QWORD *)(v3 + 64) = v25;
    specialized Array._endMutation()(v27);
    sub_100048C64();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v23, "activateConstraints:", isa, swift_bridgeObjectRelease(v3).n128_f64[0]);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100212F34()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  void **v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  void *v20;
  void (*v21)();
  uint64_t v22;

  v1 = (void *)objc_opt_self(NSNotificationCenter);
  v2 = objc_msgSend(v1, "defaultCenter");
  v3 = swift_allocObject(&unk_100551360, 24, 7);
  *(_QWORD *)(v3 + 16) = v0;
  v21 = sub_100214050;
  v22 = v3;
  v17 = _NSConcreteStackBlock;
  v18 = 1107296256;
  v19 = sub_1003B9AE8;
  v20 = &unk_100551378;
  v4 = _Block_copy(&v17);
  v5 = v22;
  v6 = v0;
  v7 = objc_msgSend(v2, "addObserverForName:object:queue:usingBlock:", UIKeyboardWillShowNotification, 0, 0, v4, swift_release(v5).n128_f64[0]);
  _Block_release(v4);

  v8 = *(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_keyboardWillShowObserver];
  *(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_keyboardWillShowObserver] = v7;
  swift_unknownObjectRelease(v8);
  v9 = objc_msgSend(v1, "defaultCenter");
  v10 = swift_allocObject(&unk_1005513B0, 24, 7);
  *(_QWORD *)(v10 + 16) = v6;
  v21 = sub_100214070;
  v22 = v10;
  v17 = _NSConcreteStackBlock;
  v18 = 1107296256;
  v19 = sub_1003B9AE8;
  v20 = &unk_1005513C8;
  v11 = _Block_copy(&v17);
  v12 = v22;
  v13 = v6;
  v14 = objc_msgSend(v9, "addObserverForName:object:queue:usingBlock:", UIKeyboardWillHideNotification, 0, 0, v11, swift_release(v12).n128_f64[0]);
  _Block_release(v11);

  v15 = *(_QWORD *)&v13[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_keyboardWillHideObserver];
  *(_QWORD *)&v13[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_keyboardWillHideObserver] = v14;
  return swift_unknownObjectRelease(v15);
}

void sub_100213190()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  id v6;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_keyboardWillHideObserver);
  if (v1)
  {
    v2 = (void *)objc_opt_self(NSNotificationCenter);
    swift_unknownObjectRetain(v1);
    v3 = objc_msgSend(v2, "defaultCenter");
    objc_msgSend(v3, "removeObserver:", v1);
    swift_unknownObjectRelease(v1);

  }
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_keyboardWillShowObserver);
  if (v4)
  {
    v5 = (void *)objc_opt_self(NSNotificationCenter);
    swift_unknownObjectRetain(v4);
    v6 = objc_msgSend(v5, "defaultCenter");
    objc_msgSend(v6, "removeObserver:", v4);
    swift_unknownObjectRelease(v4);

  }
}

id sub_100213694()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMEditableMessageViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMEditableMessageViewController()
{
  return objc_opt_self(_TtC6FindMy31FMEditableMessageViewController);
}

uint64_t initializeBufferWithCopyOfBuffer for FMEditableMessageViewStyle(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for FMEditableMessageViewStyle(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for FMEditableMessageViewStyle(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for FMEditableMessageViewStyle(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMEditableMessageViewStyle(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMEditableMessageViewStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMEditableMessageViewStyle()
{
  return &type metadata for FMEditableMessageViewStyle;
}

void sub_100213914()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  CGFloat v28;
  CGFloat v29;
  CGFloat v30;
  CGFloat v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  void *v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  id v43;
  void *v44;
  double v45;
  double v46;
  id v47;
  void *v48;
  id v49;
  void *v50;
  CGFloat Height;
  CGFloat *v52;
  _QWORD v53[2];
  _QWORD v54[5];
  __int128 v55;
  __int128 v56;
  CGRect v57;
  CGRect v58;
  CGRect v59;
  CGRect v60;

  v1 = v0;
  v2 = sub_1002124FC();
  if (!v2)
    return;
  v3 = v2;
  objc_msgSend(v2, "bounds");
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v12 = objc_msgSend(v0, "view");
  objc_msgSend(v3, "convertRect:toView:", v12, v5, v7, v9, v11);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v20 = v19;

  v22 = Notification.userInfo.getter(v21);
  if (!v22)
  {
    v55 = 0u;
    v56 = 0u;
LABEL_19:

    sub_10005D03C((uint64_t)&v55);
    return;
  }
  v23 = v22;
  v53[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyboardFrameEndUserInfoKey);
  v53[1] = v24;
  AnyHashable.init<A>(_:)(v54, v53, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v23 + 16) && (v25 = sub_100025F20((uint64_t)v54), (v26 & 1) != 0))
  {
    sub_100056E70(*(_QWORD *)(v23 + 56) + 32 * v25, (uint64_t)&v55);
  }
  else
  {
    v55 = 0u;
    v56 = 0u;
  }
  swift_bridgeObjectRelease(v23);
  sub_100025EEC((uint64_t)v54);
  if (!*((_QWORD *)&v56 + 1))
    goto LABEL_19;
  type metadata accessor for CGRect(0);
  if ((swift_dynamicCast(v54, &v55, (char *)&type metadata for Any + 8, v27, 6) & 1) != 0)
  {
    v28 = *(double *)v54;
    v29 = *(double *)&v54[1];
    v30 = *(double *)&v54[2];
    v31 = *(double *)&v54[3];
    v32 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v33 = objc_msgSend(v32, "keyWindow");

    if (v33)
    {
      v34 = objc_msgSend(v33, "rootViewController");

      if (v34)
      {
        v35 = objc_msgSend(v34, "view");

        if (v35)
        {
          v36 = objc_msgSend(v1, "view");
          if (v36)
          {
            v37 = v36;
            v57.origin.x = v14;
            v57.origin.y = v16;
            v57.size.width = v18;
            v57.size.height = v20;
            objc_msgSend(v36, "convertPoint:toCoordinateSpace:", v35, 0.0, CGRectGetMaxY(v57));
            v39 = v38;

            objc_msgSend(v35, "frame");
            v41 = v40;
            v58.origin.x = v28;
            v58.origin.y = v29;
            v58.size.width = v30;
            v58.size.height = v31;
            v42 = v39 - (v41 - CGRectGetHeight(v58));
            if (v42 <= 0.0)
            {

              return;
            }
            v43 = objc_msgSend(v1, "scrollView");
            if (v43)
            {
              v44 = v43;
              objc_msgSend(v43, "contentOffset");
              v46 = v45;

              v47 = objc_msgSend(v1, "scrollView");
              if (v47)
              {
                v48 = v47;
                v59.origin.x = v28;
                v59.origin.y = v29;
                v59.size.width = v30;
                v59.size.height = v31;
                CGRectGetHeight(v59);
                objc_msgSend(v48, "contentSize");
                objc_msgSend(v48, "setContentSize:");

                v49 = objc_msgSend(v1, "scrollView");
                if (v49)
                {
                  v50 = v49;
                  objc_msgSend(v49, "setContentOffset:animated:", 1, 0.0, v42 + v46);

                  v60.origin.x = v28;
                  v60.origin.y = v29;
                  v60.size.width = v30;
                  v60.size.height = v31;
                  Height = CGRectGetHeight(v60);

                  v52 = (CGFloat *)&v1[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_keyboardHeightScrollViewPadding];
                  *v52 = Height;
                  *((_BYTE *)v52 + 8) = 0;
                  return;
                }
                goto LABEL_26;
              }
LABEL_25:
              __break(1u);
LABEL_26:
              __break(1u);
              return;
            }
          }
          else
          {
            __break(1u);
          }
          __break(1u);
          goto LABEL_25;
        }
      }
    }
  }

}

void sub_100213CF4()
{
  _BYTE *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  double v6;
  double v7;
  id v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  id v13;
  void *v14;
  double v15;
  double v16;
  id v17;
  void *v18;

  v1 = &v0[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_keyboardHeightScrollViewPadding];
  if ((v0[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_keyboardHeightScrollViewPadding + 8] & 1) != 0)
    goto LABEL_12;
  v2 = objc_msgSend(v0, "scrollView");
  if (!v2)
  {
    __break(1u);
    goto LABEL_14;
  }
  v3 = v2;
  objc_msgSend(v2, "contentSize");
  objc_msgSend(v3, "setContentSize:");

  v4 = objc_msgSend(v0, "scrollView");
  if (!v4)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v5 = v4;
  objc_msgSend(v4, "contentSize");
  v7 = v6;

  v8 = objc_msgSend(v0, "scrollView");
  if (!v8)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v9 = v8;
  objc_msgSend(v8, "bounds");
  v11 = v10;

  if (v7 - v11 < 0.0)
    v12 = 0.0;
  else
    v12 = v7 - v11;
  v13 = objc_msgSend(v0, "scrollView");
  if (!v13)
    goto LABEL_16;
  v14 = v13;
  objc_msgSend(v13, "contentOffset");
  v16 = v15;

  if (v12 >= v16)
  {
LABEL_12:
    *(_QWORD *)v1 = 0;
    v1[8] = 1;
    return;
  }
  v17 = objc_msgSend(v0, "scrollView");
  if (v17)
  {
    v18 = v17;
    objc_msgSend(v17, "setContentOffset:animated:", 1, 0.0, v12);

    goto LABEL_12;
  }
LABEL_17:
  __break(1u);
}

char *sub_100213E7C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  Swift::String v3;
  Swift::String v4;
  void *object;
  id v6;
  char *v7;
  NSString v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  Swift::String v16;

  v1 = v0;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v16._countAndFlagsBits = 0xD000000000000035;
  v16._object = (void *)0x80000001004AC610;
  v3._object = (void *)0x80000001004AC5E0;
  v3._countAndFlagsBits = 0xD000000000000023;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v16)._object;

  v6 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMMessageTableViewHeaderView()), "initWithReuseIdentifier:", 0);
  objc_msgSend(v6, "setSectionHeader:", 1);
  v7 = (char *)v6;
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "setText:", v8, swift_bridgeObjectRelease(object).n128_f64[0]);

  sub_10037B400();
  v9 = *(void **)&v7[OBJC_IVAR____TtC6FindMy28FMMessageTableViewHeaderView_remainingCharsLabel];
  v10 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_remainingCharsLabel);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_remainingCharsLabel) = v9;
  v11 = v9;

  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_message);
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_message + 8);
  swift_bridgeObjectRetain(v13);
  sub_100212604(v12, v13, v14, 0, 1);
  swift_bridgeObjectRelease(v13);
  return v7;
}

uint64_t sub_10021402C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100214050()
{
  sub_100213914();
}

void sub_100214070()
{
  sub_100213CF4();
}

uint64_t sub_1002140A0()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  char v7;
  id v8;
  id v9;
  id v10;
  id v11;

  v1 = v0;
  v2 = objc_msgSend(v0, "navigationBar");
  v3 = objc_msgSend(v2, "backgroundColor");

  v4 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  v5 = v4;
  if (v3)
  {
    if (!v4)
    {
      v7 = 0;
      goto LABEL_8;
    }
    sub_100006C5C(0, (unint64_t *)&qword_1005DB750, UIColor_ptr);
    v6 = v3;
    v7 = static NSObject.== infix(_:_:)(v6, v5);

LABEL_6:
    v3 = v5;
LABEL_8:

    goto LABEL_9;
  }
  if (v4)
  {
    v7 = 0;
    goto LABEL_6;
  }
  v7 = 1;
LABEL_9:
  v8 = objc_msgSend(v1, "navigationBar");
  v9 = objc_msgSend(v8, "backgroundImageForBarMetrics:", 0);

  v10 = objc_msgSend(v1, "navigationBar");
  v11 = objc_msgSend(v10, "shadowImage");

  if (!v11)
    return v7 & (v9 == 0);

  return 0;
}

void sub_1002142E4()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  objc_super v8;

  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for FMTransparentNavigationController();
  objc_msgSendSuper2(&v8, "viewDidLoad");
  v1 = objc_msgSend(v0, "navigationBar");
  objc_msgSend(v1, "setTranslucent:", 1);

  v2 = objc_msgSend(v0, "navigationBar");
  v3 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  objc_msgSend(v2, "setBackgroundImage:forBarMetrics:", v3, 0);

  v4 = objc_msgSend(v0, "navigationBar");
  v5 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  objc_msgSend(v4, "setShadowImage:", v5);

  v6 = objc_msgSend(v0, "navigationBar");
  v7 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v6, "setBackgroundColor:", v7);

}

void sub_100214484(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_1002144DC(a1);

  }
}

void sub_1002144DC(void *a1)
{
  void *v1;
  double v3;
  double v4;
  double v5;
  double v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;

  objc_msgSend(a1, "adjustedContentInset");
  v4 = -trunc(v3);
  objc_msgSend(a1, "contentOffset");
  if (v5 > v4 && (sub_1002140A0() & 1) == 0)
  {
    v12 = objc_msgSend(v1, "navigationBar");
    v13 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
    objc_msgSend(v12, "setBackgroundColor:", v13);

    v14 = objc_msgSend(v1, "navigationBar");
    objc_msgSend(v14, "setBackgroundImage:forBarMetrics:", 0, 0);

    v15 = objc_msgSend(v1, "navigationBar");
    objc_msgSend(v15, "setShadowImage:", 0);
    goto LABEL_8;
  }
  objc_msgSend(a1, "contentOffset");
  if (v6 <= v4 && (sub_1002140A0() & 1) != 0)
  {
    v7 = objc_msgSend(v1, "navigationBar");
    v8 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
    objc_msgSend(v7, "setBackgroundImage:forBarMetrics:", v8, 0);

    v9 = objc_msgSend(v1, "navigationBar");
    v10 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    objc_msgSend(v9, "setBackgroundColor:", v10);

    v11 = objc_msgSend(v1, "navigationBar");
    v15 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
    objc_msgSend(v11, "setShadowImage:");

LABEL_8:
  }
}

id sub_100214734()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMTransparentNavigationController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMTransparentNavigationController()
{
  return objc_opt_self(_TtC6FindMy33FMTransparentNavigationController);
}

uint64_t sub_1002147E8(void *a1)
{
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9[2];
  uint64_t v10;
  void *v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;

  v11 = a1;
  v2 = sub_100006C5C(0, (unint64_t *)&qword_1005D6558, UIViewController_ptr);
  v3 = a1;
  v4 = sub_100053F2C(&qword_1005DB740);
  if (swift_dynamicCast(v9, &v11, v2, v4, 6))
  {
    sub_10003D3AC(v9, (uint64_t)v12);
    v5 = swift_allocObject(&unk_100551408, 24, 7);
    swift_unknownObjectWeakInit(v5 + 16);
    v6 = v13;
    v7 = v14;
    sub_10021494C((uint64_t)v12, v13);
    (*(void (**)(void (*)(void *), uint64_t, uint64_t, uint64_t))(v7 + 16))(sub_100214944, v5, v6, v7);
    return sub_100029574(v12);
  }
  else
  {
    v10 = 0;
    memset(v9, 0, sizeof(v9));
    return sub_1002148E0((uint64_t)v9);
  }
}

uint64_t sub_1002148E0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100053F2C(&qword_1005DB748);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100214920()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100214944(void *a1)
{
  uint64_t v1;

  sub_100214484(a1, v1);
}

uint64_t sub_10021494C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

void sub_100214974()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  Swift::String v5;
  Swift::String v6;
  void *object;
  NSString v8;
  void *v9;
  NSString v10;
  id v11;
  void *v12;
  id v13;
  Swift::String v14;
  Swift::String v15;
  void *v16;
  NSString v17;
  id v18;
  id v19;
  Swift::String v20;
  Swift::String v21;
  void *v22;
  NSString v23;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;

  v1 = v0;
  sub_10004A2D8();
  v2 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_titleLabel);
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v3 = (void *)objc_opt_self(NSBundle);
  v4 = objc_msgSend(v3, "mainBundle");
  v24._countAndFlagsBits = 0xD000000000000021;
  v24._object = (void *)0x80000001004B59A0;
  v5._countAndFlagsBits = 0x43495645445F4F4ELL;
  v5._object = (void *)0xEF454C5449545F45;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v24)._object;

  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setText:", v8, swift_bridgeObjectRelease(object).n128_f64[0]);

  v9 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_iconView);
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v10);

  objc_msgSend(v9, "setImage:", v11);
  v12 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_messageLabel);
  _StringGuts.grow(_:)(20);
  v13 = objc_msgSend(v3, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
  v25._countAndFlagsBits = 0xD000000000000023;
  v25._object = (void *)0x80000001004B59F0;
  v14._object = (void *)0x80000001004B59D0;
  v14._countAndFlagsBits = 0xD000000000000011;
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, (NSBundle)v13, v15, v25)._object;

  v17 = String._bridgeToObjectiveC()();
  objc_msgSend(v12, "setText:", v17, swift_bridgeObjectRelease(v16).n128_f64[0]);

  v18 = objc_retain(*(id *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButton)
                          + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label));
  _StringGuts.grow(_:)(20);
  v19 = objc_msgSend(v3, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
  v20._countAndFlagsBits = 0xD000000000000016;
  v26._countAndFlagsBits = 0xD000000000000028;
  v26._object = (void *)0x80000001004B5A40;
  v20._object = (void *)0x80000001004B5A20;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, (Swift::String_optional)0, (NSBundle)v19, v21, v26)._object;

  v23 = String._bridgeToObjectiveC()();
  objc_msgSend(v18, "setText:", v23, swift_bridgeObjectRelease(v22).n128_f64[0]);

}

void sub_100214CB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  Swift::String v11;
  Swift::String v12;
  void *object;
  NSString v14;
  void *v15;
  id v16;
  id v17;
  Swift::String v18;

  v1 = v0;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100056D88(v2, (uint64_t)qword_1005F5748);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMNoDeviceView: action tapped", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButton);
  v8 = OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label;
  v9 = *(id *)(v7 + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label);
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v18._countAndFlagsBits = 0xD000000000000031;
  v18._object = (void *)0x80000001004B5960;
  v11._object = (void *)0x80000001004B5940;
  v11._countAndFlagsBits = 0xD00000000000001FLL;
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v18)._object;

  v14 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setText:", v14, swift_bridgeObjectRelease(object).n128_f64[0]);

  *(_BYTE *)(v7 + OBJC_IVAR____TtC6FindMy17FMEmptyListButton_isEnabled) = 0;
  v15 = *(void **)(v7 + v8);
  v16 = objc_msgSend(*(id *)(v7 + OBJC_IVAR____TtC6FindMy17FMEmptyListButton_textColor), "colorWithAlphaComponent:", 0.5);
  objc_msgSend(v15, "setTextColor:", v16);

  v17 = objc_msgSend((id)objc_opt_self(FMDFMIPManager), "sharedInstance");
}

_QWORD *sub_100214F5C(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return sub_10022D214(a1);
}

id sub_100214FD0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMNoDeviceView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMNoDeviceView()
{
  return objc_opt_self(_TtC6FindMy14FMNoDeviceView);
}

uint64_t sub_100215020@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  char *v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v2 = sub_100053F2C(&qword_1005DBA58);
  v3 = __chkstk_darwin(v2);
  v66 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v65 = (char *)&v64 - v6;
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v64 - v8;
  __chkstk_darwin(v7);
  v11 = (char *)&v64 - v10;
  v12 = sub_100053F2C(&qword_1005D4138);
  v13 = __chkstk_darwin(v12);
  v64 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v64 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v64 - v18;
  v20 = sub_100053F2C(&qword_1005D72D0);
  __chkstk_darwin(v20);
  v22 = (char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for FMIPItemGroup(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = __chkstk_darwin(v23);
  v27 = (char *)&v64 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  FMIPDevice.itemGroup.getter(v25);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
  {
    v28 = sub_1000051EC((uint64_t)v22, &qword_1005D72D0);
    FMIPDevice.lostMetadata.getter(v28);
    v29 = type metadata accessor for FMIPDeviceLostModeMetadata(0);
    v30 = *(_QWORD *)(v29 - 8);
    v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
    if (v31(v11, 1, v29) == 1)
    {
      v32 = sub_1000051EC((uint64_t)v11, &qword_1005DBA58);
      v69 = 0;
      v33 = 0;
    }
    else
    {
      v69 = FMIPDeviceLostModeMetadata.message.getter();
      v33 = v39;
      v32 = (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v11, v29);
    }
    FMIPDevice.lostMetadata.getter(v32);
    v40 = v31(v9, 1, v29);
    v41 = (uint64_t)v65;
    if (v40 == 1)
    {
      v42 = sub_1000051EC((uint64_t)v9, &qword_1005DBA58);
      v67 = 0;
      v68 = 0;
    }
    else
    {
      v47 = FMIPDeviceLostModeMetadata.ownerNumber.getter();
      v67 = v48;
      v68 = v47;
      v42 = (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v9, v29);
    }
    FMIPDevice.lostMetadata.getter(v42);
    v49 = v31((char *)v41, 1, v29);
    v50 = (uint64_t)v66;
    if (v49 == 1)
    {
      v51 = sub_1000051EC(v41, &qword_1005DBA58);
      v52 = 0;
      v53 = 0;
    }
    else
    {
      v57 = FMIPDeviceLostModeMetadata.email.getter();
      v58 = v41;
      v52 = v57;
      v53 = v59;
      v51 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8))(v58, v29);
    }
    FMIPDevice.lostMetadata.getter(v51);
    if (v31((char *)v50, 1, v29) == 1)
    {
      result = sub_1000051EC(v50, &qword_1005DBA58);
      v60 = 0;
    }
    else
    {
      v60 = FMIPDeviceLostModeMetadata.isEmailUpdatesEnabled.getter();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8))(v50, v29);
    }
    v62 = v69;
  }
  else
  {
    v34 = (*(uint64_t (**)(char *, char *, uint64_t))(v24 + 32))(v27, v22, v23);
    FMIPItemGroup.lostMetadata.getter(v34);
    v35 = type metadata accessor for FMIPItemLostModeMetadata(0);
    v36 = *(_QWORD *)(v35 - 8);
    v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
    if (v37(v19, 1, v35) == 1)
    {
      v38 = sub_1000051EC((uint64_t)v19, &qword_1005D4138);
      v69 = 0;
      v66 = 0;
    }
    else
    {
      v69 = FMIPItemLostModeMetadata.message.getter();
      v66 = v43;
      v38 = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v19, v35);
    }
    FMIPItemGroup.lostMetadata.getter(v38);
    v44 = v37(v17, 1, v35);
    v45 = (uint64_t)v64;
    if (v44 == 1)
    {
      v46 = sub_1000051EC((uint64_t)v17, &qword_1005D4138);
      v67 = 0;
      v68 = 0;
    }
    else
    {
      v54 = FMIPItemLostModeMetadata.ownerNumber.getter();
      v67 = v55;
      v68 = v54;
      v46 = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v17, v35);
    }
    FMIPItemGroup.lostMetadata.getter(v46);
    if (v37((char *)v45, 1, v35) == 1)
    {
      (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
      result = sub_1000051EC(v45, &qword_1005D4138);
      v52 = 0;
      v53 = 0;
    }
    else
    {
      v52 = FMIPItemLostModeMetadata.email.getter();
      v53 = v61;
      (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
      result = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8))(v45, v35);
    }
    v60 = 0;
    v62 = v69;
    v33 = v66;
  }
  *(_QWORD *)a1 = v62;
  *(_QWORD *)(a1 + 8) = v33;
  v63 = v67;
  *(_QWORD *)(a1 + 16) = v68;
  *(_QWORD *)(a1 + 24) = v63;
  *(_QWORD *)(a1 + 32) = v52;
  *(_QWORD *)(a1 + 40) = v53;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0;
  *(_BYTE *)(a1 + 64) = v60 & 1;
  return result;
}

uint64_t sub_10021553C(uint64_t a1, __int16 a2, uint64_t (*a3)(uint64_t *))
{
  uint64_t v4;
  __int16 v5;

  v4 = a1;
  v5 = a2 & 0x1FF;
  return a3(&v4);
}

id sub_100215578()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  char v12;
  char v13;
  char *v14;
  _QWORD *v15;
  double v16;
  uint64_t v17;
  void *v18;
  NSString v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  NSString v24;
  char v25;
  uint64_t v26;
  BOOL v27;
  char v28;
  _BYTE *v29;
  double v30;
  uint64_t v31;
  void *v32;
  NSString v33;
  uint64_t v35;
  uint64_t v36;

  v1 = v0;
  v2 = type metadata accessor for FMIPDevice(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FMLostModeTrackable(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v1 + qword_1005DBD10);
  sub_1000E5A64(v1 + qword_1005F4F20, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
  {
    v10 = (uint64_t)&v8[*(int *)(sub_100053F2C(&qword_1005D2F90) + 48)];
    v11.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    v12 = FMIPDevice.isConsideredAccessory.getter(v11);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v13 = v12 ^ 1;
    sub_1000051EC(v10, (uint64_t *)&unk_1005D3AA0);
  }
  else
  {
    sub_1000E5AA8((uint64_t)v8);
    v13 = 0;
  }
  *(_BYTE *)(v9 + OBJC_IVAR____TtC6FindMy28FMLostModeSummaryContentView_shouldShowEmailUpdates) = v13 & 1;
  v14 = *(char **)(v9 + OBJC_IVAR____TtC6FindMy28FMLostModeSummaryContentView_sendEmailUpdatesView);
  objc_msgSend(v14, "setHidden:", (v13 & 1) == 0);
  v15 = (_QWORD *)(v1 + qword_1005F5330);
  objc_msgSend(*(id *)&v14[OBJC_IVAR____TtC6FindMy27FMLostModeSummaryToggleView_toggle], "setOn:animated:", *(unsigned __int8 *)(v1 + qword_1005F5330 + 64), 0);
  v17 = v15[3];
  v18 = *(void **)(*(_QWORD *)(v9 + OBJC_IVAR____TtC6FindMy28FMLostModeSummaryContentView_phoneNumberView)
                 + OBJC_IVAR____TtC6FindMy25FMLostModeSummaryTextView_contentTextView);
  v35 = v15[2];
  v36 = OBJC_IVAR____TtC6FindMy28FMLostModeSummaryContentView_phoneNumberView;
  if (v17)
  {
    swift_bridgeObjectRetain(v17);
    v19 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v16 = swift_bridgeObjectRelease(v17).n128_u64[0];
  }
  else
  {
    v19 = 0;
  }
  objc_msgSend(v18, "setText:", v19, v16, v35);

  sub_100275358();
  v20 = v15[5];
  v21 = OBJC_IVAR____TtC6FindMy28FMLostModeSummaryContentView_emailView;
  v22 = *(void **)(*(_QWORD *)(v9 + OBJC_IVAR____TtC6FindMy28FMLostModeSummaryContentView_emailView)
                 + OBJC_IVAR____TtC6FindMy25FMLostModeSummaryTextView_contentTextView);
  if (v20)
  {
    v23 = v15[4];
    swift_bridgeObjectRetain(v15[5]);
    v24 = String._bridgeToObjectiveC()();
    objc_msgSend(v22, "setText:", v24, swift_bridgeObjectRelease(v20).n128_f64[0]);

    sub_100275358();
    if (v23 || v20 != 0xE000000000000000)
      v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v23, v20, 0, 0xE000000000000000, 0);
    else
      v25 = 1;
  }
  else
  {
    objc_msgSend(v22, "setText:", 0);
    sub_100275358();
    v25 = 1;
  }
  v26 = v36;
  if (v17 && (v35 || v17 != 0xE000000000000000))
  {
    v28 = _stringCompareWithSmolCheck(_:_:expecting:)(v35, v17, 0, 0xE000000000000000, 0);
    v27 = 0;
    if ((v25 & 1) == 0)
      v27 = v28;
  }
  else
  {
    v27 = (v25 & 1) == 0;
  }
  v29 = (_BYTE *)(v9 + OBJC_IVAR____TtC6FindMy28FMLostModeSummaryContentView_shouldShowEmail);
  *(_BYTE *)(v9 + OBJC_IVAR____TtC6FindMy28FMLostModeSummaryContentView_shouldShowEmail) = v27;
  objc_msgSend(*(id *)(v9 + v26), "setHidden:");
  objc_msgSend(*(id *)(v9 + v21), "setHidden:", (*v29 & 1) == 0);
  v31 = v15[1];
  v32 = *(void **)(*(_QWORD *)(v9 + OBJC_IVAR____TtC6FindMy28FMLostModeSummaryContentView_messageView)
                 + OBJC_IVAR____TtC6FindMy25FMLostModeSummaryTextView_contentTextView);
  if (v31)
  {
    swift_bridgeObjectRetain(v15[1]);
    v33 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v30 = swift_bridgeObjectRelease(v31).n128_u64[0];
  }
  else
  {
    v33 = 0;
  }
  objc_msgSend(v32, "setText:", v33, v30);

  return sub_100275358();
}

void sub_100215948(uint64_t a1, unsigned __int8 a2)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  id v14;
  Swift::String v15;
  Swift::String v16;
  void *object;
  id v18;
  Swift::String v19;
  Swift::String v20;
  void *v21;
  char v22;
  id v23;
  int v24;
  void *v25;
  id v26;
  Swift::String v27;
  Swift::String_optional v28;
  Swift::String v29;
  id v30;
  unint64_t v31;
  const char *v32;
  Swift::String v33;
  Swift::String_optional v34;
  Swift::String v35;
  unint64_t v36;
  Swift::String_optional v37;
  Swift::String v38;
  unint64_t v39;
  NSString v40;
  NSString v41;
  id v42;
  id v43;
  Swift::String v44;
  Swift::String v45;
  void *v46;
  uint64_t v47;
  id v48;
  NSString v49;
  void *v50;
  id v51;
  unint64_t v52;
  id v53;
  void **aBlock;
  unint64_t v55;
  void (*v56)(uint64_t, void *);
  void *v57;
  id (*v58)();
  uint64_t v59;
  Swift::String v60;
  Swift::String v61;
  Swift::String v62;
  Swift::String v63;
  Swift::String v64;

  v3 = v2;
  if (a2 > 2u)
  {
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(0xE000000000000000);
    v13 = (void *)objc_opt_self(NSBundle);
    v14 = objc_msgSend(v13, "mainBundle");
    v60._countAndFlagsBits = 0xD00000000000001FLL;
    v60._object = (void *)0x80000001004B5B60;
    v15._countAndFlagsBits = 0x5F4552554C494146;
    v15._object = (void *)0xED0000454C544954;
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v60)._object;

    aBlock = 0;
    v55 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    v18 = objc_msgSend(v13, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
    v61._countAndFlagsBits = 0xD000000000000021;
    v61._object = (void *)0x80000001004A8FE0;
    v19._countAndFlagsBits = 0x5F4552554C494146;
    v19._object = (void *)0xEF4547415353454DLL;
    v20._countAndFlagsBits = 0;
    v20._object = (void *)0xE000000000000000;
    v21 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, (Swift::String_optional)0, (NSBundle)v18, v20, v61)._object;

LABEL_16:
    v40 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v41 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v21);
    v42 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v40, v41, 1);

    aBlock = 0;
    v55 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v55);
    v43 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v64._countAndFlagsBits = 0xD000000000000021;
    v64._object = (void *)0x80000001004A5EE0;
    v44._countAndFlagsBits = 0x4F545455425F4B4FLL;
    v44._object = (void *)0xEF454C5449545F4ELL;
    v45._countAndFlagsBits = 0;
    v45._object = (void *)0xE000000000000000;
    v46 = NSLocalizedString(_:tableName:bundle:value:comment:)(v44, (Swift::String_optional)0, (NSBundle)v43, v45, v64)._object;

    v47 = swift_allocObject(&unk_1005516B8, 24, 7);
    *(_QWORD *)(v47 + 16) = v42;
    v48 = v42;
    v49 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v46);
    v58 = sub_1000A4A10;
    v59 = v47;
    aBlock = _NSConcreteStackBlock;
    v55 = 1107296256;
    v56 = sub_100008B40;
    v57 = &unk_1005516D0;
    v50 = _Block_copy(&aBlock);
    swift_release(v59);
    v51 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v49, 1, v50);
    _Block_release(v50);

    objc_msgSend(v48, "addAction:", v51);
    objc_msgSend(v3, "presentViewController:animated:completion:", v48, 1, 0);

    return;
  }
  if (!a1)
    goto LABEL_12;
  aBlock = (void **)a1;
  sub_100218CB0(a1, a2);
  v5 = sub_100053F2C((uint64_t *)&unk_1005D2AC0);
  v6 = sub_100006C5C(0, &qword_1005D3480, NSError_ptr);
  if (!swift_dynamicCast(&v53, &aBlock, v5, v6, 6))
    goto LABEL_12;
  v7 = v53;
  v8 = objc_msgSend(v53, "domain");
  v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v11 = v10;

  if (v9 == 0xD00000000000003BLL && v11 == 0x80000001004B5AF0)
  {
    v12 = swift_bridgeObjectRelease(0x80000001004B5AF0).n128_u64[0];
  }
  else
  {
    v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v11, 0xD00000000000003BLL, 0x80000001004B5AF0, 0);
    v12 = swift_bridgeObjectRelease(v11).n128_u64[0];
    if ((v22 & 1) == 0)
    {

      goto LABEL_12;
    }
  }
  v23 = objc_msgSend(v7, "code", *(double *)&v12);

  if (v23 != (id)1)
  {
LABEL_12:
    v24 = a2;
    v25 = (void *)objc_opt_self(NSBundle);
    v26 = objc_msgSend(v25, "mainBundle");
    if (v24 == 1)
    {
      v27._countAndFlagsBits = 0xD000000000000032;
      v62._object = (void *)0x80000001004A5660;
      v27._object = (void *)0x80000001004B5B80;
      v28.value._countAndFlagsBits = 0xD000000000000013;
      v28.value._object = (void *)0x80000001004A5640;
      v29._countAndFlagsBits = 0;
      v29._object = (void *)0xE000000000000000;
      v62._countAndFlagsBits = 0xD000000000000018;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, v28, (NSBundle)v26, v29, v62)._object;

      v30 = objc_msgSend(v25, "mainBundle");
      v31 = 0xD000000000000034;
      v52 = 0x80000001004A5660;
      v32 = "ITEM_PERFORM_DISABLE_LOST_MODE_ACTION_FAILED_MESSAGE";
    }
    else
    {
      v33._countAndFlagsBits = 0xD000000000000031;
      v63._object = (void *)0x80000001004A5660;
      v33._object = (void *)0x80000001004B5C00;
      v34.value._countAndFlagsBits = 0xD000000000000013;
      v34.value._object = (void *)0x80000001004A5640;
      v35._countAndFlagsBits = 0;
      v35._object = (void *)0xE000000000000000;
      v63._countAndFlagsBits = 0xD000000000000018;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v33, v34, (NSBundle)v26, v35, v63)._object;

      v30 = objc_msgSend(v25, "mainBundle");
      v31 = 0xD000000000000033;
      v52 = 0x80000001004A5660;
      v32 = "ITEM_PERFORM_ENABLE_LOST_MODE_ACTION_FAILED_MESSAGE";
    }
    v36 = (unint64_t)(v32 - 32) | 0x8000000000000000;
    v37.value._countAndFlagsBits = 0xD000000000000013;
    v37.value._object = (void *)0x80000001004A5640;
    v38._countAndFlagsBits = 0;
    v38._object = (void *)0xE000000000000000;
    v39 = 0xD000000000000018;
    v21 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v31, v37, (NSBundle)v30, v38, *(Swift::String *)(&v52 + -8))._object;

    goto LABEL_16;
  }
}

uint64_t sub_100215F74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t ObjectType;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  char v36;

  v30 = (char *)a1;
  ObjectType = swift_getObjectType(v1);
  v2 = type metadata accessor for FMIPItem(0);
  v28 = *(_QWORD *)(v2 - 8);
  v29 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FMIPAnalyticsActionType(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FMIPDevice(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FMLostModeTrackable(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E5A64((uint64_t)v30, (uint64_t)v15);
  if (swift_getEnumCaseMultiPayload(v15, v13) == 1)
  {
    v30 = &v15[*(int *)(sub_100053F2C(&qword_1005D2F90) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for FMIPAnalyticsActionType.enableLostMode(_:), v5);
    sub_1002166B8((uint64_t)v12, (uint64_t)v8);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v16 = *(_OWORD *)(v1 + qword_1005F5330 + 48);
    v34 = *(_OWORD *)(v1 + qword_1005F5330 + 32);
    v35 = v16;
    v36 = *(_BYTE *)(v1 + qword_1005F5330 + 64);
    v17 = *(_OWORD *)(v1 + qword_1005F5330 + 16);
    v32 = *(_OWORD *)(v1 + qword_1005F5330);
    v33 = v17;
    v18 = *(_QWORD *)(*(_QWORD *)(v1 + qword_1005DBD28) + 24);
    swift_retain(v18);
    v19 = sub_100217054(1, (uint64_t)v12, (uint64_t *)&v32, v18, v1);
    v20 = swift_release(v18);
    (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v20);
    sub_1000051EC((uint64_t)v30, (uint64_t *)&unk_1005D3AA0);
  }
  else
  {
    v22 = v28;
    v21 = v29;
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v4, v15, v29);
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for FMIPAnalyticsActionType.enableLostMode(_:), v5);
    sub_1002166D4((uint64_t)v4, (uint64_t)v8);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v23 = *(_OWORD *)(v1 + qword_1005F5330 + 48);
    v34 = *(_OWORD *)(v1 + qword_1005F5330 + 32);
    v35 = v23;
    v36 = *(_BYTE *)(v1 + qword_1005F5330 + 64);
    v24 = *(_OWORD *)(v1 + qword_1005F5330 + 16);
    v32 = *(_OWORD *)(v1 + qword_1005F5330);
    v33 = v24;
    v25 = *(_QWORD *)(*(_QWORD *)(v1 + qword_1005DBD28) + 24);
    swift_retain(v25);
    v19 = sub_100216EEC((uint64_t)v4, (uint64_t *)&v32, v25);
    v26 = swift_release(v25);
    (*(void (**)(char *, uint64_t, __n128))(v22 + 8))(v4, v21, v26);
  }
  return v19;
}

uint64_t sub_100216278(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  __n128 v20;
  uint64_t ObjectType;
  uint64_t *v23;

  v23 = a2;
  ObjectType = swift_getObjectType(v2);
  v4 = type metadata accessor for FMIPItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&ObjectType - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FMIPDevice(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&ObjectType - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FMLostModeTrackable(0);
  __chkstk_darwin(v12);
  v14 = (char *)&ObjectType - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E5A64(a1, (uint64_t)v14);
  if (swift_getEnumCaseMultiPayload(v14, v12) == 1)
  {
    v15 = (uint64_t)&v14[*(int *)(sub_100053F2C(&qword_1005D2F90) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + qword_1005DBD28) + 24);
    swift_retain(v16);
    v17 = sub_100217054(1, (uint64_t)v11, v23, v16, v2);
    v18 = swift_release(v16);
    (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v18);
    sub_1000051EC(v15, (uint64_t *)&unk_1005D3AA0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v14, v4);
    v19 = *(_QWORD *)(*(_QWORD *)(v2 + qword_1005DBD28) + 24);
    swift_retain(v19);
    v17 = sub_100217260(1, (uint64_t)v7, v23, v19);
    v20 = swift_release(v19);
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v20);
  }
  return v17;
}

uint64_t sub_100216484(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  _QWORD v25[2];
  _OWORD v26[4];
  char v27;

  v2 = v1;
  v25[1] = swift_getObjectType(v1);
  v4 = type metadata accessor for FMIPItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FMIPDevice(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FMLostModeTrackable(0);
  __chkstk_darwin(v12);
  v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E5A64(a1, (uint64_t)v14);
  if (swift_getEnumCaseMultiPayload(v14, v12) == 1)
  {
    v15 = (uint64_t)&v14[*(int *)(sub_100053F2C(&qword_1005D2F90) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
    v16 = *(_OWORD *)(v2 + qword_1005F5330 + 48);
    v26[2] = *(_OWORD *)(v2 + qword_1005F5330 + 32);
    v26[3] = v16;
    v27 = *(_BYTE *)(v2 + qword_1005F5330 + 64);
    v17 = *(_OWORD *)(v2 + qword_1005F5330 + 16);
    v26[0] = *(_OWORD *)(v2 + qword_1005F5330);
    v26[1] = v17;
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + qword_1005DBD28) + 24);
    swift_retain(v18);
    v19 = sub_100217054(0, (uint64_t)v11, (uint64_t *)v26, v18, v2);
    v20 = swift_release(v18);
    (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v20);
    sub_1000051EC(v15, (uint64_t *)&unk_1005D3AA0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v14, v4);
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + qword_1005DBD28) + 24);
    swift_retain(v21);
    v19 = sub_100217404((uint64_t)v7, v22, v21);
    v23 = swift_release(v21);
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v23);
  }
  return v19;
}

uint64_t sub_1002166B8(uint64_t a1, uint64_t a2)
{
  return sub_1002166F0(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPDevice, (uint64_t (*)(uint64_t))&FMIPDevice.isOwned.getter, (void (*)(char *))&FMIPAnalyticsProductType.init(device:));
}

uint64_t sub_1002166D4(uint64_t a1, uint64_t a2)
{
  return sub_1002166F0(a1, a2, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPItem, (uint64_t (*)(uint64_t))&FMIPItem.isOwner.getter, (void (*)(char *))&FMIPAnalyticsProductType.init(item:));
}

uint64_t sub_1002166F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(uint64_t), void (*a5)(char *))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unsigned int *v27;
  char *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t (*v34)(uint64_t);
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *);

  v37 = a5;
  v34 = a4;
  v6 = v5;
  v31 = a2;
  v32 = a1;
  v7 = a3(0);
  v35 = *(_QWORD *)(v7 - 8);
  v36 = v7;
  __chkstk_darwin(v7);
  v33 = (char *)&v30 - v8;
  v9 = type metadata accessor for FMIPAnalyticsProductType(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FMIPAnalyticsOwnerContext(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FMIPAnalyticsActionType(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for FMIPActionEvent(0);
  v20 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)(*(_QWORD *)(v6 + qword_1005DBD28) + 24);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v31, v16);
  v24 = swift_retain(v23);
  v25 = v32;
  v26 = v34(v24);
  v27 = (unsigned int *)&enum case for FMIPAnalyticsOwnerContext.owner(_:);
  if ((v26 & 1) == 0)
    v27 = (unsigned int *)&enum case for FMIPAnalyticsOwnerContext.shared(_:);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *v27, v12);
  v28 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v33, v25, v36);
  v37(v28);
  FMIPActionEvent.init(type:ownerContext:productType:)(v19, v15, v11);
  FMIPManager.enqueue(actionEvent:)(v22);
  swift_release(v23);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v30);
}

uint64_t sub_10021691C(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[4];
  char v8;
  _OWORD v9[4];
  char v10;

  v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  v8 = *(_BYTE *)(a1 + 64);
  v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v10 = *(_BYTE *)(a2 + 64);
  v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_100217F18((uint64_t *)v7, (uint64_t)v9) & 1;
}

BOOL sub_100216974(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  id v16;
  id v17;
  _QWORD v18[9];

  if (a2 > 2u || a1 == 0)
    return 0;
  v18[7] = v2;
  v18[8] = v3;
  v18[0] = a1;
  sub_100218CB0(a1, a2);
  v6 = sub_100053F2C((uint64_t *)&unk_1005D2AC0);
  v7 = sub_100006C5C(0, &qword_1005D3480, NSError_ptr);
  v8 = swift_dynamicCast(&v17, v18, v6, v7, 6);
  if ((v8 & 1) != 0)
  {
    v9 = v17;
    v10 = objc_msgSend(v17, "domain");
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

    if (v11 == 0xD00000000000003BLL && v13 == 0x80000001004B5AF0)
    {
      v14 = swift_bridgeObjectRelease(0x80000001004B5AF0).n128_u64[0];
LABEL_12:
      v16 = objc_msgSend(v9, "code", *(double *)&v14);

      return v16 == (id)1;
    }
    v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v11, v13, 0xD00000000000003BLL, 0x80000001004B5AF0, 0);
    v14 = swift_bridgeObjectRelease(v13).n128_u64[0];
    if ((v15 & 1) != 0)
      goto LABEL_12;

  }
  return 0;
}

void sub_100216AC4(char *a1, uint64_t a2, void *a3)
{
  id v4;

  *(_QWORD *)&a1[qword_1005DB788] = 0;
  *(_QWORD *)&a1[qword_1005DB790] = 0;
  v4 = a3;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMLostModeSummaryViewController.swift", 44, 2, 118, 0);
  __break(1u);
}

void sub_100216B44(void *a1)
{
  id v1;
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for FMLostModeSummaryViewController(0);
  v1 = v2.receiver;
  objc_msgSendSuper2(&v2, "viewDidLoad");
  sub_100215578();

}

id sub_100216B9C(void *a1)
{
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for FMLostModeSummaryViewController(0);
  return objc_msgSendSuper2(&v2, "viewDidLayoutSubviews");
}

uint64_t sub_100216BDC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unsigned __int8 v15;
  _BOOL8 v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unsigned __int8 v26;

  v24 = a2;
  v3 = sub_100053F2C(&qword_1005DBA48);
  v23 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100053F2C(&qword_1005D5B20);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100053F2C(&qword_1005D5B28);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)a1;
  v15 = *(_BYTE *)(a1 + 8);
  v16 = sub_100216974(v14, v15);
  if (v16)
  {
    Just.init(_:)(v16, &type metadata for () + 1);
    v17 = sub_1000E5C58();
    Just.setFailureType<A>(to:)(&type metadata for FMLostModeSummaryViewController.Error, v6, &type metadata for FMLostModeSummaryViewController.Error, v17);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v18 = sub_10003F774(&qword_1005D5B38, &qword_1005D5B28, (uint64_t)&protocol conformance descriptor for Result<A, B>.Publisher);
    v19 = Publisher.eraseToAnyPublisher()(v10, v18);
    result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    v25 = v14;
    v26 = v15;
    sub_100218CB0(v14, v15);
    v21 = sub_1000E5C58();
    Fail.init(error:)(&v25, &type metadata for () + 1, &type metadata for FMLostModeSummaryViewController.Error, v21);
    v22 = sub_10003F774(&qword_1005DBA50, &qword_1005DBA48, (uint64_t)&protocol conformance descriptor for Fail<A, B>);
    v19 = Publisher.eraseToAnyPublisher()(v3, v22);
    result = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v5, v3);
  }
  *v24 = v19;
  return result;
}

void sub_100216E00(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 1;
  *(_BYTE *)(a1 + 8) = 3;
}

void sub_100216E14(uint64_t a1, void *a2)
{
  uint64_t v3;
  int v4;
  id v5;
  id v6;

  v3 = *(_QWORD *)a1;
  v4 = *(unsigned __int8 *)(a1 + 8);
  sub_10034AB98(a1);
  if (v4 == 255)
  {
    v5 = objc_msgSend(a2, "navigationController");
    if (v5)
    {
      v6 = v5;
      objc_msgSend(v5, "dismissViewControllerAnimated:completion:", 1, 0);

    }
  }
  else
  {
    sub_100218CB0(v3, v4);
    sub_100215948(v3, v4);
    sub_100218D24(v3, v4);
  }
}

uint64_t sub_100216ED4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100217054(1, a1, a2, a3, a4);
}

uint64_t sub_100216EEC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  _QWORD v23[2];

  v6 = type metadata accessor for FMIPItem(0);
  __chkstk_darwin(v6);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v9 + 16))(v8, a1);
  v10 = *a2;
  v11 = a2[1];
  v12 = a2[2];
  v13 = a2[3];
  v15 = a2[4];
  v14 = a2[5];
  v16 = type metadata accessor for FMIPLostModeItemAction(0);
  swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(v11);
  v17 = swift_bridgeObjectRetain(v13);
  v22 = 1;
  v18 = FMIPLostModeItemAction.init(item:message:phoneNumber:email:trackingEnabled:emailUpdatesEnabled:)(v8, v10, v11, v12, v13, v15, v14, 1, v17, v22);
  v19 = swift_allocObject(&unk_100551690, 48, 7);
  *(_QWORD *)(v19 + 16) = a3;
  *(_QWORD *)(v19 + 24) = v18;
  *(_BYTE *)(v19 + 32) = 1;
  *(_QWORD *)(v19 + 40) = v23[1];
  v20 = sub_100053F2C(&qword_1005D5B18);
  swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  swift_retain(a3);
  return Future.init(_:)(sub_100218FFC, v19);
}

uint64_t sub_100217054(int a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int16 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;

  v39 = a4;
  v9 = type metadata accessor for FMIPDevice(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(objc_allocWithZone((Class)AKAppleIDAuthenticationInAppContext), "init");
  objc_msgSend(v13, "setPresentingViewController:", a5);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  v37 = a1;
  if ((a1 & 1) != 0)
  {
    v16 = *a3;
    v15 = a3[1];
    v18 = a3[2];
    v17 = a3[3];
    v19 = a3[5];
    v20 = a3[6];
    v21 = a3[7];
    v35 = a3[4];
    v36 = v20;
    v22 = *((_BYTE *)a3 + 64);
    swift_bridgeObjectRetain(v21);
    swift_bridgeObjectRetain(v15);
    swift_bridgeObjectRetain(v17);
    v14 = swift_bridgeObjectRetain(v19);
  }
  else
  {
    v22 = 0;
    v35 = 0;
    v36 = 0;
    v21 = 0;
    v19 = 0;
    v18 = 0;
    v17 = 0;
    v16 = 0;
    v15 = 0;
  }
  v23 = type metadata accessor for FMIPLostModeAction(0, v14);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  HIBYTE(v33) = v22;
  v24 = v37 & 1;
  LOBYTE(v33) = v37 & 1;
  v25 = FMIPLostModeAction.init(device:message:phoneNumber:email:passcode:trackingEnabled:emailUpdatesEnabled:)(v12, v16, v15, v18, v17, v35, v19, v36, v21, v33);
  swift_retain(v25);
  v26 = v13;
  dispatch thunk of FMIPDeviceAction.authenticationContext.setter(v13);
  swift_release(v25);
  v27 = swift_allocObject(&unk_100551578, 48, 7);
  v28 = v38;
  v29 = v39;
  *(_QWORD *)(v27 + 16) = v39;
  *(_QWORD *)(v27 + 24) = v25;
  *(_BYTE *)(v27 + 32) = v24;
  *(_QWORD *)(v27 + 40) = v28;
  v30 = sub_100053F2C(&qword_1005D5B18);
  swift_allocObject(v30, *(unsigned int *)(v30 + 48), *(unsigned __int16 *)(v30 + 52));
  swift_retain(v29);
  v31 = Future.init(_:)(sub_100218CDC, v27);

  return v31;
}

uint64_t sub_100217260(char a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[2];

  v8 = type metadata accessor for FMIPItem(0);
  __chkstk_darwin(v8);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v11 + 16))(v10, a2);
  v12 = 0;
  v13 = 0;
  v14 = 0;
  v15 = 0;
  v16 = 0;
  v17 = 0;
  if ((a1 & 1) != 0)
  {
    v16 = *a3;
    v17 = a3[1];
    v14 = a3[2];
    v15 = a3[3];
    v12 = a3[4];
    v13 = a3[5];
    swift_bridgeObjectRetain(v13);
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v15);
  }
  v18 = type metadata accessor for FMIPLostModeItemAction(0);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  v19 = a1 & 1;
  v21 = FMIPLostModeItemAction.init(item:message:phoneNumber:email:trackingEnabled:emailUpdatesEnabled:)(v10, v16, v17, v14, v15, v12, v13, a1 & 1, v20, 1);
  v22 = swift_allocObject(&unk_100551668, 48, 7);
  *(_QWORD *)(v22 + 16) = a4;
  *(_QWORD *)(v22 + 24) = v21;
  *(_BYTE *)(v22 + 32) = v19;
  *(_QWORD *)(v22 + 40) = v25[1];
  v23 = sub_100053F2C(&qword_1005D5B18);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  swift_retain(a4);
  return Future.init(_:)(sub_100218FFC, v22);
}

uint64_t sub_1002173EC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_100217054(0, a1, a2, a3, a4);
}

uint64_t sub_100217404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  uint64_t v18;

  v4 = v3;
  v7 = type metadata accessor for FMIPItem(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v10 + 16))(v9, a1);
  v11 = type metadata accessor for FMIPLostModeItemAction(0);
  swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  v17 = 1;
  v13 = FMIPLostModeItemAction.init(item:message:phoneNumber:email:trackingEnabled:emailUpdatesEnabled:)(v9, 0, 0, 0, 0, 0, 0, 0, v12, v17);
  v14 = swift_allocObject(&unk_1005515F0, 48, 7);
  *(_QWORD *)(v14 + 16) = a3;
  *(_QWORD *)(v14 + 24) = v13;
  *(_BYTE *)(v14 + 32) = 0;
  *(_QWORD *)(v14 + 40) = v4;
  v15 = sub_100053F2C(&qword_1005D5B18);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  swift_retain(a3);
  return Future.init(_:)(sub_100218D3C, v14);
}

double sub_100217520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  double result;

  v11 = swift_allocObject(&unk_100551618, 32, 7);
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  v12 = swift_allocObject(&unk_100551640, 48, 7);
  *(_BYTE *)(v12 + 16) = a5;
  *(_QWORD *)(v12 + 24) = sub_100218CEC;
  *(_QWORD *)(v12 + 32) = v11;
  *(_QWORD *)(v12 + 40) = a6;
  swift_retain(a2);
  sub_1000B18E4(a4, (uint64_t)sub_100218DAC, v12);
  *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  return result;
}

uint64_t sub_1002175D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(uint64_t, uint64_t), uint64_t a6)
{
  unsigned __int8 v10;

  if (a3)
    v10 = (a4 & 1) == 0;
  else
    v10 = -1;
  swift_errorRetain(a3);
  sub_100217B80(a5, a6, a1, a3, v10);
  return swift_errorRelease(a3);
}

double sub_100217640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  double result;

  v11 = swift_allocObject(&unk_1005515A0, 32, 7);
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  v12 = swift_allocObject(&unk_1005515C8, 48, 7);
  *(_BYTE *)(v12 + 16) = a5;
  *(_QWORD *)(v12 + 24) = sub_100218CEC;
  *(_QWORD *)(v12 + 32) = v11;
  *(_QWORD *)(v12 + 40) = a6;
  swift_retain(a2);
  sub_1000B2024(a4, (uint64_t)sub_100218D14, v12);
  *(_QWORD *)&result = swift_release(v12).n128_u64[0];
  return result;
}

uint64_t sub_1002176F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void (*a6)(uint64_t, uint64_t), uint64_t a7)
{
  unsigned __int8 v11;

  if (a3)
    v11 = (a5 & 1) == 0;
  else
    v11 = -1;
  swift_errorRetain(a3);
  sub_100217D4C(a6, a7, a1, a3, v11);
  return swift_errorRelease(a3);
}

uint64_t sub_100217760()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + qword_1005F5330 + 24);
  v2 = *(_QWORD *)(v0 + qword_1005F5330 + 40);
  v3 = *(_QWORD *)(v0 + qword_1005F5330 + 56);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_1005F5330 + 8));
  swift_bridgeObjectRelease(v1);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  return swift_release(*(_QWORD *)(v0 + qword_1005DB788));
}

id sub_1002177C4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMLostModeSummaryViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1002177F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + qword_1005F5330 + 24);
  v3 = *(_QWORD *)(a1 + qword_1005F5330 + 40);
  v4 = *(_QWORD *)(a1 + qword_1005F5330 + 56);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_1005F5330 + 8));
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v4);
  return swift_release(*(_QWORD *)(a1 + qword_1005DB788));
}

uint64_t type metadata accessor for FMLostModeSummaryViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1005DB7C0;
  if (!qword_1005DB7C0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMLostModeSummaryViewController);
  return result;
}

uint64_t sub_10021789C(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = "A";
  v2[1] = &unk_100488748;
  v2[2] = (char *)&value witness table for Builtin.Int64 + 64;
  return swift_initClassMetadata2(a1, 256, 3, v2, a1 + 360);
}

uint64_t sub_1002178F4()
{
  return type metadata accessor for FMLostModeSummaryViewController(0);
}

uint64_t initializeWithCopy for FMLostModeContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  return a1;
}

uint64_t assignWithCopy for FMLostModeContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v10;
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRelease(v11);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

__n128 initializeWithTake for FMLostModeContext(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for FMLostModeContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v10;
  swift_bridgeObjectRelease(v11);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMLostModeContext(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 65))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FMLostModeContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 65) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMLostModeContext()
{
  return &type metadata for FMLostModeContext;
}

uint64_t sub_100217B80(void (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD v21[5];
  uint64_t v22;
  _QWORD v23[5];

  v8 = ~a5;
  v9 = type metadata accessor for FMIPItemActionStatus(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v21[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[3] = v11;
  v23[4] = &off_100551450;
  sub_10003D370(v23);
  (*(void (**)(void))(v10 + 16))();
  if (!v8)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v13, enum case for FMIPItemActionStatus.pending(_:), v9);
    v14 = sub_100008000((unint64_t *)&qword_1005D9930, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItemActionStatus, (uint64_t)&protocol conformance descriptor for FMIPItemActionStatus);
    dispatch thunk of RawRepresentable.rawValue.getter(v21, v9, v14);
    dispatch thunk of RawRepresentable.rawValue.getter(&v22, v9, v14);
    v15 = v21[0];
    v16 = v22;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    sub_100056284((uint64_t)v23, (uint64_t)v21);
    if (v15 == v16)
    {
      sub_100029574(v21);
    }
    else
    {
      sub_100029550(v21, v21[3]);
      v17 = FMIPItemActionStatus.isActionSuccessful.getter();
      sub_100029574(v21);
      if ((v17 & 1) == 0)
      {
        v18 = 259;
        goto LABEL_8;
      }
    }
    v18 = 0;
LABEL_8:
    a1(0, v18);
    return sub_100029574(v23);
  }
  sub_100218CB0(a4, a5);
  a1(a4, a5 | 0x100u);
  sub_100218D24(a4, a5);
  return sub_100029574(v23);
}

uint64_t sub_100217D4C(void (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char v18;
  uint64_t v19;
  _QWORD v22[5];
  uint64_t v23;
  _QWORD v24[5];

  v8 = ~a5;
  v9 = type metadata accessor for FMIPActionStatus(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v22[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24[3] = v11;
  v24[4] = &off_100551468;
  sub_10003D370(v24);
  (*(void (**)(void))(v10 + 16))();
  if (!v8)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v13, enum case for FMIPActionStatus.pending(_:), v9);
    v14 = sub_100008000(&qword_1005D9928, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPActionStatus, (uint64_t)&protocol conformance descriptor for FMIPActionStatus);
    dispatch thunk of RawRepresentable.rawValue.getter(v22, v9, v14);
    dispatch thunk of RawRepresentable.rawValue.getter(&v23, v9, v14);
    v15 = v22[0];
    v16 = v23;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    sub_100056284((uint64_t)v24, (uint64_t)v22);
    if (v15 == v16)
    {
      sub_100029574(v22);
    }
    else
    {
      v17 = sub_100029550(v22, v22[3]);
      v18 = FMIPActionStatus.isActionSuccessful.getter(v17);
      sub_100029574(v22);
      if ((v18 & 1) == 0)
      {
        v19 = 259;
        goto LABEL_8;
      }
    }
    v19 = 0;
LABEL_8:
    a1(0, v19);
    return sub_100029574(v24);
  }
  sub_100218CB0(a4, a5);
  a1(a4, a5 | 0x100u);
  sub_100218D24(a4, a5);
  return sub_100029574(v24);
}

uint64_t sub_100217F18(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  v4 = a1[1];
  v5 = *(_QWORD *)(a2 + 8);
  if (!v4)
  {
    if (v5)
      goto LABEL_31;
    goto LABEL_10;
  }
  if (!v5)
    goto LABEL_31;
  v6 = *a1;
  v7 = *a1 == *(_QWORD *)a2 && v4 == v5;
  if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, v4, *(_QWORD *)a2, v5, 0), v9 = 0, (v8 & 1) != 0))
  {
LABEL_10:
    v10 = a1[3];
    v11 = *(_QWORD *)(a2 + 24);
    if (v10)
    {
      if (!v11)
        goto LABEL_31;
      v12 = a1[2];
      v13 = *(_QWORD *)(a2 + 16);
      if (v12 != v13 || v10 != v11)
      {
        v14 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v10, v13, v11, 0);
        v9 = 0;
        if ((v14 & 1) == 0)
          return v9 & 1;
      }
    }
    else if (v11)
    {
      goto LABEL_31;
    }
    v15 = a1[5];
    v16 = *(_QWORD *)(a2 + 40);
    if (v15)
    {
      if (!v16)
        goto LABEL_31;
      v17 = a1[4];
      v18 = *(_QWORD *)(a2 + 32);
      if (v17 != v18 || v15 != v16)
      {
        v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v15, v18, v16, 0);
        v9 = 0;
        if ((v19 & 1) == 0)
          return v9 & 1;
      }
    }
    else if (v16)
    {
      goto LABEL_31;
    }
    v20 = a1[7];
    v21 = *(_QWORD *)(a2 + 56);
    if (v20)
    {
      if (v21)
      {
        v22 = a1[6];
        v23 = *(_QWORD *)(a2 + 48);
        if (v22 != v23 || v20 != v21)
        {
          v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v20, v23, v21, 0);
          v9 = 0;
          if ((v24 & 1) == 0)
            return v9 & 1;
        }
LABEL_33:
        v9 = ((a1[8] & 1) == 0) ^ *(_BYTE *)(a2 + 64);
        return v9 & 1;
      }
    }
    else if (!v21)
    {
      goto LABEL_33;
    }
LABEL_31:
    v9 = 0;
  }
  return v9 & 1;
}

double sub_100218054(void *a1, void *a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  double result;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;

  v45 = a1;
  v5 = sub_100053F2C(&qword_1005D9640);
  __chkstk_darwin(v5);
  v44 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride(0);
  v48 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v41 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100053F2C(&qword_1005DBA60);
  v40 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_100053F2C(&qword_1005DBA18);
  v46 = *(_QWORD *)(v43 - 8);
  __chkstk_darwin(v43);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_100053F2C(&qword_1005DBA20);
  v49 = *(_QWORD *)(v47 - 8);
  v13 = __chkstk_darwin(v47);
  v42 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100389D70(v13);
  v51 = (id)sub_100215F74((uint64_t)a2 + qword_1005F4F20);
  v15 = swift_allocObject(&unk_100551708, 32, 7);
  *(_BYTE *)(v15 + 16) = a3;
  *(_QWORD *)(v15 + 24) = a2;
  v16 = static Subscribers.Demand.unlimited.getter(a2);
  v17 = sub_100053F2C(&qword_1005D5B18);
  v18 = sub_100053F2C(&qword_1005DBA28);
  v19 = sub_10003F774(&qword_1005D5B40, &qword_1005D5B18, (uint64_t)&protocol conformance descriptor for Future<A, B>);
  v20 = sub_10003F774(&qword_1005DBA30, &qword_1005DBA28, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publisher.flatMap<A, B>(maxPublishers:_:)(v16, sub_100218E14, v15, v17, &type metadata for () + 1, v18, v19, v20);
  swift_release(v15);
  swift_release(v51);
  v21 = sub_10003F774(&qword_1005DBA68, &qword_1005DBA60, (uint64_t)&protocol conformance descriptor for Publishers.FlatMap<A, B>);
  v22 = (void *)Publisher.eraseToAnyPublisher()(v8, v21);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v8);
  v51 = v22;
  Publisher.catch<A>(_:)(sub_100216BDC, 0, v18, v18, v20, v20);
  swift_release(v22);
  v23 = v41;
  NSRunLoop.SchedulerTimeType.Stride.init(integerLiteral:)(120.0);
  v51 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v24 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  v25 = (uint64_t)v44;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v44, 1, 1, v24);
  v26 = sub_100006C5C(0, (unint64_t *)&qword_1005E5530, NSRunLoop_ptr);
  v27 = sub_10003F774(&qword_1005DBA38, &qword_1005DBA18, (uint64_t)&protocol conformance descriptor for Publishers.Catch<A, B>);
  v28 = sub_100121168();
  v29 = v42;
  v30 = v43;
  Publisher.timeout<A>(_:scheduler:options:customError:)(v23, &v51, v25, sub_100216E00, 0, v43, v26, v27, v28);
  sub_1000051EC(v25, &qword_1005D9640);

  (*(void (**)(char *, uint64_t))(v48 + 8))(v23, v50);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v12, v30);
  v31 = swift_allocObject(&unk_100551730, 24, 7);
  v32 = v45;
  *(_QWORD *)(v31 + 16) = v45;
  v33 = sub_10003F774(&qword_1005DBA40, &qword_1005DBA20, (uint64_t)&protocol conformance descriptor for Publishers.Timeout<A, B>);
  v34 = v32;
  v35 = v47;
  v36 = Publisher.sink(receiveCompletion:receiveValue:)(sub_100218FE4, v31, State.rawValue.getter, 0, v47, v33);
  v37 = swift_release(v31);
  (*(void (**)(char *, uint64_t, __n128))(v49 + 8))(v29, v35, v37);
  v38 = *(_QWORD *)&v34[qword_1005DB788];
  *(_QWORD *)&v34[qword_1005DB788] = v36;
  *(_QWORD *)&result = swift_release(v38).n128_u64[0];
  return result;
}

double sub_100218514(void *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  double result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;

  v6 = sub_100053F2C(&qword_1005D9640);
  __chkstk_darwin(v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride(0);
  v38 = *(_QWORD *)(v9 - 8);
  v39 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100053F2C(&qword_1005DBA18);
  v37 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100053F2C(&qword_1005DBA20);
  v40 = *(_QWORD *)(v15 - 8);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100389D70(v16);
  v19 = (void *)sub_100216278(a2 + qword_1005F4F20, a3);
  v41 = v19;
  v20 = sub_100053F2C(&qword_1005D5B18);
  v21 = sub_10003F774(&qword_1005D5B40, &qword_1005D5B18, (uint64_t)&protocol conformance descriptor for Future<A, B>);
  v22 = (void *)Publisher.eraseToAnyPublisher()(v20, v21);
  swift_release(v19);
  v41 = v22;
  v23 = sub_100053F2C(&qword_1005DBA28);
  v24 = sub_10003F774(&qword_1005DBA30, &qword_1005DBA28, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publisher.catch<A>(_:)(sub_100216BDC, 0, v23, v23, v24, v24);
  swift_release(v22);
  NSRunLoop.SchedulerTimeType.Stride.init(integerLiteral:)(120.0);
  v41 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v25 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v8, 1, 1, v25);
  v26 = sub_100006C5C(0, (unint64_t *)&qword_1005E5530, NSRunLoop_ptr);
  v27 = sub_10003F774(&qword_1005DBA38, &qword_1005DBA18, (uint64_t)&protocol conformance descriptor for Publishers.Catch<A, B>);
  v28 = sub_100121168();
  Publisher.timeout<A>(_:scheduler:options:customError:)(v11, &v41, v8, sub_100216E00, 0, v12, v26, v27, v28);
  sub_1000051EC((uint64_t)v8, &qword_1005D9640);

  (*(void (**)(char *, uint64_t))(v38 + 8))(v11, v39);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v14, v12);
  v29 = swift_allocObject(&unk_100551550, 24, 7);
  *(_QWORD *)(v29 + 16) = a1;
  v30 = sub_10003F774(&qword_1005DBA40, &qword_1005DBA20, (uint64_t)&protocol conformance descriptor for Publishers.Timeout<A, B>);
  v31 = a1;
  v32 = Publisher.sink(receiveCompletion:receiveValue:)(sub_100218FE4, v29, State.rawValue.getter, 0, v15, v30);
  v33 = swift_release(v29);
  (*(void (**)(char *, uint64_t, __n128))(v40 + 8))(v18, v15, v33);
  v34 = *(_QWORD *)&v31[qword_1005DB788];
  *(_QWORD *)&v31[qword_1005DB788] = v32;
  *(_QWORD *)&result = swift_release(v34).n128_u64[0];
  return result;
}

double sub_1002188D0(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  double result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;

  v4 = sub_100053F2C(&qword_1005D9640);
  __chkstk_darwin(v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride(0);
  v36 = *(_QWORD *)(v7 - 8);
  v37 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100053F2C(&qword_1005DBA18);
  v35 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100053F2C(&qword_1005DBA20);
  v38 = *(_QWORD *)(v13 - 8);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100389D70(v14);
  v17 = (void *)sub_100216484(a2 + qword_1005F4F20);
  v39 = v17;
  v18 = sub_100053F2C(&qword_1005D5B18);
  v19 = sub_10003F774(&qword_1005D5B40, &qword_1005D5B18, (uint64_t)&protocol conformance descriptor for Future<A, B>);
  v20 = (void *)Publisher.eraseToAnyPublisher()(v18, v19);
  swift_release(v17);
  v39 = v20;
  v21 = sub_100053F2C(&qword_1005DBA28);
  v22 = sub_10003F774(&qword_1005DBA30, &qword_1005DBA28, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publisher.catch<A>(_:)(sub_100216BDC, 0, v21, v21, v22, v22);
  swift_release(v20);
  NSRunLoop.SchedulerTimeType.Stride.init(integerLiteral:)(120.0);
  v39 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v23 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v6, 1, 1, v23);
  v24 = sub_100006C5C(0, (unint64_t *)&qword_1005E5530, NSRunLoop_ptr);
  v25 = sub_10003F774(&qword_1005DBA38, &qword_1005DBA18, (uint64_t)&protocol conformance descriptor for Publishers.Catch<A, B>);
  v26 = sub_100121168();
  Publisher.timeout<A>(_:scheduler:options:customError:)(v9, &v39, v6, sub_100216E00, 0, v10, v24, v25, v26);
  sub_1000051EC((uint64_t)v6, &qword_1005D9640);

  (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v37);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v12, v10);
  v27 = swift_allocObject(&unk_100551528, 24, 7);
  *(_QWORD *)(v27 + 16) = a1;
  v28 = sub_10003F774(&qword_1005DBA40, &qword_1005DBA20, (uint64_t)&protocol conformance descriptor for Publishers.Timeout<A, B>);
  v29 = a1;
  v30 = Publisher.sink(receiveCompletion:receiveValue:)(sub_100218CA8, v27, State.rawValue.getter, 0, v13, v28);
  v31 = swift_release(v27);
  (*(void (**)(char *, uint64_t, __n128))(v38 + 8))(v16, v13, v31);
  v32 = *(_QWORD *)&v29[qword_1005DB788];
  *(_QWORD *)&v29[qword_1005DB788] = v30;
  *(_QWORD *)&result = swift_release(v32).n128_u64[0];
  return result;
}

uint64_t sub_100218C84()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100218CA8(uint64_t a1)
{
  uint64_t v1;

  sub_100216E14(a1, *(void **)(v1 + 16));
}

uint64_t sub_100218CB0(uint64_t result, unsigned __int8 a2)
{
  if (a2 <= 2u)
    return swift_errorRetain(result);
  return result;
}

uint64_t sub_100218CC4(uint64_t result, unsigned __int8 a2)
{
  if (a2 <= 2u)
    return swift_errorRelease(result);
  return result;
}

double sub_100218CDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100217640(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_BYTE *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_100218CF0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100218D14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1002176F4(a1, a2, a3, a4, *(_BYTE *)(v4 + 16), *(void (**)(uint64_t, uint64_t))(v4 + 24), *(_QWORD *)(v4 + 32));
}

uint64_t sub_100218D24(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 0xFF)
    return sub_100218CC4(result, a2);
  return result;
}

double sub_100218D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100217520(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_BYTE *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_100218D4C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100218D70(uint64_t a1, __int16 a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t *);
  uint64_t v5;
  __int16 v6;

  v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  v5 = a1;
  v6 = a2 & 0x1FF;
  return v3(&v5);
}

uint64_t sub_100218DAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1002175D4(a1, a2, a3, *(_BYTE *)(v3 + 16), *(void (**)(uint64_t, uint64_t))(v3 + 24), *(_QWORD *)(v3 + 32));
}

uint64_t sub_100218DC4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100218DF0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100218E14(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_1000E4E90(*(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t initializeBufferWithCopyOfBuffer for FMLostModeSummaryViewController.Error(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned __int8 v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_100218CB0(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for FMLostModeSummaryViewController.Error(uint64_t a1)
{
  return sub_100218CC4(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for FMLostModeSummaryViewController.Error(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_100218CB0(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_100218CC4(v5, v6);
  return a1;
}

uint64_t initializeWithTake for FMLostModeSummaryViewController.Error(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for FMLostModeSummaryViewController.Error(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_100218CC4(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMLostModeSummaryViewController.Error(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FMLostModeSummaryViewController.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_100218FA0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 2u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_100218FB8(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FMLostModeSummaryViewController.Error()
{
  return &type metadata for FMLostModeSummaryViewController.Error;
}

void sub_100219000()
{
  qword_1005F5338 = 0xC079000000000000;
}

void sub_100219010(void *a1)
{
  uint64_t v1;
  NSObject *v3;
  NSObject *v4;
  NSObject *v5;
  id v6;
  void *v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  double v15;
  double v16;
  id v17;
  id v18;
  void *v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  NSObject *v31;
  double v32;
  double v33;
  id v34;
  void *v35;
  uint64_t v36;
  NSObject *v37;
  CGRect v38;
  CGRect v39;

  v3 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextToViewControllerKey);
  if (!v3)
    goto LABEL_16;
  v37 = v3;
  v4 = objc_msgSend(a1, "viewForKey:", UITransitionContextToViewKey);
  if (!v4)
  {

LABEL_16:
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v22 = type metadata accessor for Logger(0);
    v23 = sub_100056D88(v22, (uint64_t)qword_1005F5748);
    v37 = Logger.logObject.getter(v23);
    v24 = static os_log_type_t.error.getter(v37);
    if (os_log_type_enabled(v37, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v37, v24, "FMCardPresentationTransition: Invalid presented view controller", v25, 2u);
      swift_slowDealloc(v25, -1, -1);
    }
    goto LABEL_26;
  }
  v5 = v4;
  v6 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextFromViewControllerKey);
  if (!v6)
  {
LABEL_21:
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v26 = type metadata accessor for Logger(0);
    v27 = sub_100056D88(v26, (uint64_t)qword_1005F5748);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.error.getter(v28);
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "FMCardPresentationTransition: Invalid presenting view controller", v30, 2u);
      swift_slowDealloc(v30, -1, -1);
    }

    goto LABEL_26;
  }
  v7 = v6;
  ObjectType = swift_getObjectType(v6);
  v9 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for FMCardPresenting);
  if (v9)
    v10 = v9;
  else
    v10 = 0;
  if (v9)
    v11 = (uint64_t)v7;
  else
    v11 = 0;
  if (!v11
    || (v12 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextFromViewControllerKey)) == 0
    || (v13 = v12, v14 = objc_msgSend(v12, "view"), v13, !v14))
  {

    goto LABEL_21;
  }
  sub_1003021A8((uint64_t)a1, v5);
  objc_msgSend(v14, "bounds");
  CGRectGetWidth(v38);
  objc_msgSend(v14, "bounds");
  CGRectGetHeight(v39);
  objc_msgSend(v14, "frame");
  v16 = v15;
  objc_msgSend(v14, "frame");
  -[NSObject setFrame:](v5, "setFrame:", v16);
  v17 = objc_msgSend(a1, "containerView");
  objc_msgSend(v17, "addSubview:", v5);

  -[NSObject layoutIfNeeded](v5, "layoutIfNeeded");
  v18 = objc_msgSend(v14, "window");
  if (v18)
  {
    v19 = v18;
    objc_msgSend(v18, "bounds");
    v21 = v20;

  }
  else
  {
    v21 = 0.0;
  }
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  if (qword_1005F5980 == 1)
  {
    if (qword_1005D1D10 != -1)
      swift_once(&qword_1005D1D10, sub_100219000);
    v32 = v21 + fabs(*(double *)&qword_1005F5338);
  }
  else
  {
    if (qword_1005D1D10 != -1)
      swift_once(&qword_1005D1D10, sub_100219000);
    v32 = *(double *)&qword_1005F5338;
  }
  objc_msgSend(v14, "frame");
  -[NSObject setFrame:](v5, "setFrame:", v32);
  v33 = *(double *)(v1 + OBJC_IVAR____TtC6FindMy16FMCardTransition_duration);
  v34 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextFromViewControllerKey);
  v35 = v34;
  if (v33 == 0.0)
  {
    if (v34)
    {
      objc_msgSend(v34, "viewWillDisappear:", 0);

    }
    sub_100219B48(v11, v10, v14, v37);
    objc_msgSend(a1, "completeTransition:", 1);

LABEL_26:
    v31 = v37;
    goto LABEL_27;
  }
  if (v34)
  {
    objc_msgSend(v34, "viewWillDisappear:", 1);

  }
  v36 = swift_allocObject(&unk_100551848, 24, 7);
  *(_QWORD *)(v36 + 16) = a1;
  swift_unknownObjectRetain(a1);
  sub_1002195C4(v11, v10, v14, v37, (uint64_t)sub_100167410, v36);
  swift_release(v36);

  v31 = v5;
LABEL_27:

}

void sub_1002195C4(uint64_t a1, uint64_t a2, id a3, void *a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  CGFloat Width;
  CGFloat Height;
  void *v15;
  double v16;
  double v17;
  CGFloat *v18;
  void *v19;
  CGFloat *v20;
  char *v21;
  id v22;
  id v23;
  CGFloat *v24;
  void *v25;
  CGFloat *v26;
  id v27;
  void **v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  CGFloat *v33;
  CGRect v34;
  CGRect v35;

  objc_msgSend(a3, "bounds");
  Width = CGRectGetWidth(v34);
  objc_msgSend(a3, "bounds");
  Height = CGRectGetHeight(v35);
  v15 = (void *)objc_opt_self(UIView);
  v16 = *(double *)&v6[OBJC_IVAR____TtC6FindMy16FMCardTransition_duration];
  v17 = *(double *)&v6[OBJC_IVAR____TtC6FindMy16FMCardTransition_delay];
  v18 = (CGFloat *)swift_allocObject(&unk_100551870, 80, 7);
  *((_QWORD *)v18 + 2) = v6;
  *((_QWORD *)v18 + 3) = a1;
  *((_QWORD *)v18 + 4) = a2;
  *((_QWORD *)v18 + 5) = a4;
  *((_QWORD *)v18 + 6) = a3;
  v18[7] = Width;
  v18[8] = Height;
  v18[9] = 0.2;
  v32 = sub_100219CC4;
  v33 = v18;
  v28 = _NSConcreteStackBlock;
  v29 = 1107296256;
  v30 = sub_100037DF8;
  v31 = &unk_100551888;
  v19 = _Block_copy(&v28);
  v20 = v33;
  v21 = v6;
  swift_unknownObjectRetain(a1);
  v22 = a4;
  v23 = a3;
  swift_release(v20);
  v24 = (CGFloat *)swift_allocObject(&unk_1005518C0, 40, 7);
  *((_QWORD *)v24 + 2) = v23;
  *((_QWORD *)v24 + 3) = a5;
  *((_QWORD *)v24 + 4) = a6;
  v32 = sub_100219D08;
  v33 = v24;
  v28 = _NSConcreteStackBlock;
  v29 = 1107296256;
  v30 = sub_10005D218;
  v31 = &unk_1005518D8;
  v25 = _Block_copy(&v28);
  v26 = v33;
  v27 = v23;
  swift_retain(a6);
  swift_release(v26);
  objc_msgSend(v15, "animateKeyframesWithDuration:delay:options:animations:completion:", 0, v19, v25, v16, v17);
  _Block_release(v25);
  _Block_release(v19);
}

void sub_1002197C0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, double a6, double a7, double a8)
{
  void *v16;
  uint64_t v17;
  double v18;
  _QWORD *v19;
  void *v20;
  _QWORD *v21;
  id v22;
  double v23;
  uint64_t v24;
  void *v25;
  _QWORD *v26;
  id v27;
  id v28;
  double v29;
  uint64_t v30;
  void *v31;
  _QWORD *v32;
  id v33;
  void **v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t);
  void *v37;
  void *v38;
  _QWORD *v39;

  v16 = (void *)objc_opt_self(UIView);
  v17 = OBJC_IVAR____TtC6FindMy16FMCardTransition_duration;
  v18 = *(double *)(a1 + OBJC_IVAR____TtC6FindMy16FMCardTransition_duration) / 1.5;
  v19 = (_QWORD *)swift_allocObject(&unk_100551910, 40, 7);
  v19[2] = a2;
  v19[3] = a3;
  v19[4] = a4;
  v38 = sub_100219D68;
  v39 = v19;
  v34 = _NSConcreteStackBlock;
  v35 = 1107296256;
  v36 = sub_100037DF8;
  v37 = &unk_100551928;
  v20 = _Block_copy(&v34);
  v21 = v39;
  swift_unknownObjectRetain(a2);
  v22 = a4;
  swift_release(v21);
  objc_msgSend(v16, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v20, 0.0, v18);
  _Block_release(v20);
  v23 = *(double *)(a1 + v17);
  v24 = swift_allocObject(&unk_100551960, 48, 7);
  *(_QWORD *)(v24 + 16) = v22;
  *(_QWORD *)(v24 + 24) = a5;
  *(double *)(v24 + 32) = a6;
  *(double *)(v24 + 40) = a7;
  v38 = sub_100219DE4;
  v39 = (_QWORD *)v24;
  v34 = _NSConcreteStackBlock;
  v35 = 1107296256;
  v36 = sub_100037DF8;
  v37 = &unk_100551978;
  v25 = _Block_copy(&v34);
  v26 = v39;
  v27 = v22;
  v28 = a5;
  swift_release(v26);
  objc_msgSend(v16, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v25, 0.0, v23);
  _Block_release(v25);
  v29 = *(double *)(a1 + v17);
  v30 = swift_allocObject(&unk_1005519B0, 24, 7);
  *(_QWORD *)(v30 + 16) = v28;
  v38 = sub_100219E14;
  v39 = (_QWORD *)v30;
  v34 = _NSConcreteStackBlock;
  v35 = 1107296256;
  v36 = sub_100037DF8;
  v37 = &unk_1005519C8;
  v31 = _Block_copy(&v34);
  v32 = v39;
  v33 = v28;
  swift_release(v32);
  objc_msgSend(v16, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v31, v29, a8);
  _Block_release(v31);
}

void sub_1002199FC(void *a1, void *a2)
{
  double v3;
  double v4;
  id v5;

  v5 = objc_msgSend(a1, "view");
  if (v5)
  {
    objc_msgSend(a2, "frame");
    v4 = v3;
    objc_msgSend(a2, "frame");
    objc_msgSend(v5, "setFrame:", v4);

  }
  else
  {
    __break(1u);
  }
}

id sub_100219AD4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMCardPresentedRegularTransition();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMCardPresentedRegularTransition()
{
  return objc_opt_self(_TtC6FindMy32FMCardPresentedRegularTransition);
}

uint64_t sub_100219B24()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_100219B48(uint64_t a1, uint64_t a2, id a3, void *a4)
{
  uint64_t ObjectType;
  id v9;
  double v10;
  double v11;
  id v12;
  CGRect v13;
  CGRect v14;

  objc_msgSend(a3, "bounds");
  CGRectGetWidth(v13);
  objc_msgSend(a3, "bounds");
  CGRectGetHeight(v14);
  v12 = objc_msgSend(a4, "view");
  ObjectType = swift_getObjectType(a1);
  (*(void (**)(uint64_t, uint64_t, void *, uint64_t, uint64_t))(a2 + 16))(a1, a2, a4, ObjectType, a2);
  if (v12)
  {
    v9 = v12;
    objc_msgSend(a3, "frame");
    v11 = v10;
    objc_msgSend(a3, "frame");
    objc_msgSend(v9, "setFrame:", v11);

  }
  objc_msgSend(a3, "setAlpha:", 0.0);
  objc_msgSend(a3, "setHidden:", 1);

}

uint64_t sub_100219C88()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 80, 7);
}

void sub_100219CC4()
{
  uint64_t v0;

  sub_1002197C0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48), *(double *)(v0 + 56), *(double *)(v0 + 64), *(double *)(v0 + 72));
}

uint64_t sub_100219CDC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100219D08()
{
  uint64_t v0;

  return (*(uint64_t (**)(id))(v0 + 24))(objc_msgSend(*(id *)(v0 + 16), "setHidden:", 1));
}

uint64_t sub_100219D3C()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100219D68()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;

  v1 = v0[2];
  v2 = v0[3];
  v3 = v0[4];
  ObjectType = swift_getObjectType(v1);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v2, v3, ObjectType, v2);
}

uint64_t sub_100219DB8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 48, 7);
}

void sub_100219DE4()
{
  uint64_t v0;

  sub_1002199FC(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100219DF0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100219E14()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "setAlpha:", 0.0);
}

id sub_100219E48()
{
  void *v0;
  id v1;
  id v2;
  NSString v3;
  objc_super v5;

  v1 = objc_msgSend((id)objc_opt_self(NSDistributedNotificationCenter), "defaultCenter");
  v2 = v0;
  v3 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "removeObserver:name:object:", v2, v3, 0);

  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for FMAccessoryDiscoveryCoordinator(0);
  return objc_msgSendSuper2(&v5, "dealloc");
}

uint64_t sub_10021A098()
{
  return type metadata accessor for FMAccessoryDiscoveryCoordinator(0);
}

uint64_t type metadata accessor for FMAccessoryDiscoveryCoordinator(uint64_t a1)
{
  return sub_10001DC04(a1, (uint64_t *)&unk_1005DBB18, (uint64_t)&nominal type descriptor for FMAccessoryDiscoveryCoordinator);
}

uint64_t sub_10021A0B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[5];
  uint64_t v30;

  v25 = a2;
  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v28 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v26 = *(_QWORD *)(v6 - 8);
  v27 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FMIPAccessoryError(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  __chkstk_darwin(v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000555A8();
  v13 = (void *)static OS_dispatch_queue.main.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  v14 = *(unsigned __int8 *)(v10 + 80);
  v15 = (v14 + 24) & ~v14;
  v16 = swift_allocObject(&unk_100551AA8, v15 + v11, v14 | 7);
  v17 = v25;
  *(_QWORD *)(v16 + 16) = v25;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v16 + v15, v12, v9);
  aBlock[4] = sub_10021E5D0;
  v30 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_100551AC0;
  v18 = _Block_copy(aBlock);
  v19 = v30;
  swift_retain(v17);
  swift_release(v19);
  static DispatchQoS.unspecified.getter(v20);
  aBlock[0] = _swiftEmptyArrayStorage;
  v21 = sub_100056580();
  v22 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v23 = sub_1000555E4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v22, v23, v3, v21);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v5, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v5, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v8, v27);
}

uint64_t sub_10021A300(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  void *v8;
  uint64_t v9;
  _BYTE v11[24];

  v4 = type metadata accessor for FMAccessoryDiscoveryCoordinator.Event(0);
  __chkstk_darwin(v4);
  v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v11, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a1);
  if (result)
  {
    v8 = (void *)result;
    v9 = type metadata accessor for FMIPAccessoryError(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v6, a2, v9);
    swift_storeEnumTagMultiPayload(v6, v4, 6);
    sub_10021ABAC(v6);

    return sub_10004FCB8((uint64_t)v6, type metadata accessor for FMAccessoryDiscoveryCoordinator.Event);
  }
  return result;
}

uint64_t sub_10021A47C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t Strong;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int EnumCaseMultiPayload;
  BOOL v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char *v69;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD aBlock[5];
  uint64_t v91;
  char v92[24];
  char v93[32];

  v83 = a1;
  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v86 = *(_QWORD *)(v7 - 8);
  v87 = v7;
  __chkstk_darwin(v7);
  v85 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100053F2C(&qword_1005DBC78);
  v10 = __chkstk_darwin(v9);
  v79 = (uint64_t)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v13 = (char *)&v75 - v12;
  v81 = type metadata accessor for FMIPDiscoveredAccessory(0);
  v80 = *(_QWORD *)(v81 - 8);
  v14 = __chkstk_darwin(v81);
  v78 = (char *)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v17 = (char *)&v75 - v16;
  v18 = sub_100053F2C(&qword_1005DBC80);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v75 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (char *)&v75 - v22;
  v82 = type metadata accessor for FMAccessoryDiscoveryCoordinator.Event(0);
  v89 = *(_QWORD *)(v82 - 8);
  v24 = *(_QWORD *)(v89 + 64);
  v25 = __chkstk_darwin(v82);
  v88 = (uint64_t)&v75 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v27 = (char *)&v75 - v26;
  v84 = a2;
  a2 += 16;
  swift_beginAccess(a2, v93, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v29 = (void *)Strong;
    v77 = v6;
    v30 = v4;
    v31 = v3;
    v32 = Strong + OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_state;
    swift_beginAccess(Strong + OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_state, v92, 0, 0);
    sub_10004FC74(v32, (uint64_t)v23, type metadata accessor for FMAccessoryDiscoveryCoordinator.State);

    v33 = type metadata accessor for FMAccessoryDiscoveryCoordinator.State(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v23, 0, 1, v33);
    sub_10021E3EC((uint64_t)v23, (uint64_t)v21);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v21, v33);
    if (EnumCaseMultiPayload == 5)
    {
      v43 = v83;
      v44 = *(_QWORD *)(v83 + 16);
      v36 = v31;
      v37 = v27;
      v38 = v89;
      v76 = v30;
      if (v44 == 1)
      {
        v79 = v31;
        v45 = v83;
        sub_1000C92B0(v83, (uint64_t)v13);
        v46 = v80;
        v47 = v81;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v13, 1, v81) != 1)
        {
          v74 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
          v74(v17, v13, v47);
          v74(v37, v17, v47);
          swift_storeEnumTagMultiPayload(v37, v82, 1);
          v38 = v89;
          v36 = v79;
          goto LABEL_16;
        }
        sub_1000051EC((uint64_t)v13, &qword_1005DBC78);
        v44 = *(_QWORD *)(v45 + 16);
        v43 = v45;
        v38 = v89;
        v36 = v79;
      }
      if (v44 >= 2)
      {
        v48 = v43;
        swift_bridgeObjectRetain(v43);
        v49 = sub_1003EFACC(v48);
        swift_bridgeObjectRelease(v48);
        *(_QWORD *)v37 = v49;
        v50 = v37;
        v51 = v82;
        v52 = 2;
LABEL_15:
        swift_storeEnumTagMultiPayload(v50, v51, v52);
LABEL_16:
        sub_1000051EC((uint64_t)v23, &qword_1005DBC80);
        sub_1000555A8();
        v55 = (void *)static OS_dispatch_queue.main.getter();
        v56 = v88;
        sub_10004FC74((uint64_t)v37, v88, type metadata accessor for FMAccessoryDiscoveryCoordinator.Event);
        v57 = *(unsigned __int8 *)(v38 + 80);
        v58 = (uint64_t)v37;
        v59 = (v57 + 24) & ~v57;
        v60 = swift_allocObject(&unk_100551A58, v59 + v24, v57 | 7);
        v61 = v84;
        *(_QWORD *)(v60 + 16) = v84;
        sub_10021E504(v56, v60 + v59);
        aBlock[4] = sub_10021E548;
        v91 = v60;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100037DF8;
        aBlock[3] = &unk_100551A70;
        v62 = _Block_copy(aBlock);
        v63 = v91;
        swift_retain(v61);
        swift_release(v63);
        v64 = v85;
        static DispatchQoS.unspecified.getter(v65);
        aBlock[0] = _swiftEmptyArrayStorage;
        v66 = sub_100056580();
        v67 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
        v68 = sub_1000555E4();
        v69 = v77;
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v67, v68, v36, v66);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v64, v69, v62);
        _Block_release(v62);

        (*(void (**)(char *, uint64_t))(v76 + 8))(v69, v36);
        (*(void (**)(char *, uint64_t))(v86 + 8))(v64, v87);
        return sub_10004FCB8(v58, type metadata accessor for FMAccessoryDiscoveryCoordinator.Event);
      }
LABEL_14:
      *(_QWORD *)v37 = 0;
      v53 = enum case for FMIPAccessoryError.unknownDiscoveryError(_:);
      v54 = type metadata accessor for FMIPAccessoryError(0);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 104))(v37, v53, v54);
      v50 = v37;
      v51 = v82;
      v52 = 6;
      goto LABEL_15;
    }
    if (EnumCaseMultiPayload == 6)
    {
      v35 = *(_QWORD *)(v83 + 16) == 1;
      v36 = v31;
      v37 = v27;
      v38 = v89;
      v76 = v30;
      if (v35)
      {
        v39 = v79;
        sub_1000C92B0(v83, v79);
        v40 = v80;
        v41 = v81;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v39, 1, v81) != 1)
        {
          v71 = v78;
          v72 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 32))(v78, v39, v41);
          v73 = v88;
          FMIPDiscoveredAccessory.identifier.getter(v72);
          (*(void (**)(char *, uint64_t))(v40 + 8))(v71, v41);
          swift_storeEnumTagMultiPayload(v73, v82, 5);
          sub_10021E504(v73, (uint64_t)v37);
          goto LABEL_16;
        }
        sub_1000051EC(v39, &qword_1005DBC78);
      }
      goto LABEL_14;
    }
    sub_10004FCB8((uint64_t)v21, type metadata accessor for FMAccessoryDiscoveryCoordinator.State);
  }
  else
  {
    v42 = type metadata accessor for FMAccessoryDiscoveryCoordinator.State(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v23, 1, 1, v42);
  }
  return sub_1000051EC((uint64_t)v23, &qword_1005DBC80);
}

void sub_10021AB54(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_10021ABAC(a2);

  }
}

void sub_10021ABAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t (*v39)(_QWORD);
  uint64_t v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  uint64_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  Swift::String v49;
  Swift::String v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  _QWORD v56[2];
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t aBlock;
  unint64_t v88;
  uint64_t v89;

  v2 = v1;
  v69 = type metadata accessor for FMIPAccessoryError(0);
  v68 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v66 = (char *)v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100053F2C(&qword_1005D81A0);
  __chkstk_darwin(v5);
  v60 = (char *)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for UUID(0);
  v77 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v59 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = v9;
  __chkstk_darwin(v8);
  v79 = (char *)v56 - v10;
  v64 = type metadata accessor for FMAccessoryPairingCoordinator.Event(0);
  __chkstk_darwin(v64);
  v65 = (char *)v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for Date(0);
  v62 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v61 = (char *)v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = type metadata accessor for FMIPDiscoveredAccessory(0);
  v85 = *(_QWORD *)(v80 - 8);
  v13 = __chkstk_darwin(v80);
  v86 = (char *)v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v78 = (char *)v56 - v15;
  v82 = type metadata accessor for FMAccessoryDiscoveryCoordinator.State(0);
  v16 = __chkstk_darwin(v82);
  v18 = (char *)v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v81 = (char *)v56 - v19;
  v83 = sub_100053F2C(&qword_1005DBC88);
  __chkstk_darwin(v83);
  v21 = (char *)v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for FMAccessoryDiscoveryCoordinator.Event(0);
  v23 = __chkstk_darwin(v22);
  v76 = (char *)v56 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v23);
  v74 = (char *)v56 - v26;
  v27 = __chkstk_darwin(v25);
  v75 = (char *)v56 - v28;
  v29 = __chkstk_darwin(v27);
  v73 = (char *)v56 - v30;
  v31 = __chkstk_darwin(v29);
  v71 = (char *)v56 - v32;
  v33 = __chkstk_darwin(v31);
  v72 = (char *)v56 - v34;
  v35 = __chkstk_darwin(v33);
  v70 = (char *)v56 - v36;
  __chkstk_darwin(v35);
  v38 = (char *)v56 - v37;
  v84 = a1;
  v40 = sub_10004FC74(a1, (uint64_t)v56 - v37, v39);
  v41 = static os_log_type_t.default.getter(v40);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v42 = type metadata accessor for Logger(0);
  v43 = sub_100056D88(v42, (uint64_t)qword_1005F5748);
  v44 = Logger.logObject.getter(v43);
  if (os_log_type_enabled(v44, v41))
  {
    v45 = swift_slowAlloc(12, -1);
    v56[1] = v18;
    v46 = (uint8_t *)v45;
    v47 = swift_slowAlloc(32, -1);
    v57 = v2;
    v48 = v47;
    v67 = v7;
    *(_DWORD *)v46 = 136315138;
    v89 = v47;
    aBlock = 0;
    v88 = 0xE000000000000000;
    _StringGuts.grow(_:)(18);
    v49._object = (void *)0x80000001004AB000;
    v49._countAndFlagsBits = 0xD000000000000010;
    String.append(_:)(v49);
    _print_unlocked<A, B>(_:_:)(v38, &aBlock, v22, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v50._countAndFlagsBits = 0;
    v50._object = (void *)0xE000000000000000;
    String.append(_:)(v50);
    v51 = v88;
    aBlock = sub_100056DA0(aBlock, v88, &v89);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v88);
    swift_bridgeObjectRelease(v51);
    _os_log_impl((void *)&_mh_execute_header, v44, v41, "FMAccessoryDiscoveryCoordinator: %s", v46, 0xCu);
    swift_arrayDestroy(v48, 1, (char *)&type metadata for Any + 8);
    v52 = v48;
    v2 = v57;
    swift_slowDealloc(v52, -1, -1);
    swift_slowDealloc(v46, -1, -1);
  }

  sub_10004FCB8((uint64_t)v38, type metadata accessor for FMAccessoryDiscoveryCoordinator.Event);
  v53 = v2 + OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_state;
  swift_beginAccess(v2 + OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_state, &v89, 0, 0);
  v54 = (uint64_t)&v21[*(int *)(v83 + 48)];
  sub_10004FC74(v53, (uint64_t)v21, type metadata accessor for FMAccessoryDiscoveryCoordinator.State);
  sub_10004FC74(v84, v54, type metadata accessor for FMAccessoryDiscoveryCoordinator.Event);
  v55 = (char *)&loc_10021B1C8 + *((int *)qword_10021BE38 + swift_getEnumCaseMultiPayload(v54, v22));
  __asm { BR              X10 }
}

void sub_10021BE58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  char *v4;
  os_log_type_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (char *)Strong;
    v5 = static os_log_type_t.default.getter(Strong);
    sub_10021E80C(v5, 0xD000000000000038, 0x80000001004B5E30);
    objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_presenter], "dismissViewControllerAnimated:completion:", 1, 0);
    objc_msgSend(v4, "proxCardFlowDidDismiss");

  }
}

uint64_t sub_10021BEF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v7 = type metadata accessor for UUID(0);
  v6[5] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[6] = v8;
  v6[7] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10021BF58, 0, 0);
}

uint64_t sub_10021BF58()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;
  NSString v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0[7];
  v2 = (void *)v0[2];
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v0[6] + 16))(v1, v0[3], v0[5]);
  v3 = v2;
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v4);

  v6 = objc_allocWithZone((Class)type metadata accessor for DiscoveredAccessory(0));
  v0[8] = DiscoveredAccessory.init(identifier:productType:productImage:)(v1, 2, v5);
  v7 = type metadata accessor for MainActor(0);
  v0[9] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  return swift_task_switch(sub_10021C054, v8, v9);
}

uint64_t sub_10021C054()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  id v4;

  v1 = v0[8];
  v2 = v0[2];
  v3 = swift_release(v0[9]);
  v4 = objc_allocWithZone((Class)type metadata accessor for AccessoryOnboardingCoordinator(0, v3));
  v0[10] = AccessoryOnboardingCoordinator.init(presenter:accessory:)(v2, v1);
  return swift_task_switch(sub_10021C0B8, 0, 0);
}

uint64_t sub_10021C0B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  NSString v6;
  void *v7;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = swift_unknownObjectRetain(v3);
  AccessoryOnboardingCoordinator.delegate.setter(v4);
  v5 = objc_msgSend((id)objc_opt_self(NSDistributedNotificationCenter), "defaultCenter");
  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "postNotificationName:object:userInfo:deliverImmediately:", v6, 0, 0, 1);

  AccessoryOnboardingCoordinator.start()();
  v7 = *(void **)(v3 + OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_onboardingCoordinator);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_onboardingCoordinator) = v1;

  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10021C194(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  Swift::String v28;
  Swift::String v29;
  unint64_t v30;
  char *v31;
  _QWORD v32[4];
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45[3];

  v34 = type metadata accessor for FMAccessoryDiscoveryAndPairingFailedCard.ViewModel(0);
  __chkstk_darwin(v34);
  v36 = (char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FMIPAccessoryError(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v39 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for FMAccessoryDiscoveryAccessoryConfirmationCard.ViewModel(0);
  v7 = __chkstk_darwin(v33);
  v35 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v37 = (char *)v32 - v9;
  v10 = type metadata accessor for FMIPDiscoveredAccessory(0);
  v40 = *(_QWORD *)(v10 - 8);
  v41 = v10;
  __chkstk_darwin(v10);
  v38 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FMAccessoryDiscoveryCoordinator.State(0);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)v32 - v16;
  v42 = a1;
  v19 = sub_10004FC74(a1, (uint64_t)v32 - v16, v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v21 = type metadata accessor for Logger(0);
  v22 = sub_100056D88(v21, (uint64_t)qword_1005F5748);
  v23 = Logger.logObject.getter(v22);
  v24 = v20;
  if (os_log_type_enabled(v23, v20))
  {
    v25 = (uint8_t *)swift_slowAlloc(12, -1);
    v26 = swift_slowAlloc(32, -1);
    v32[3] = v1;
    v27 = v26;
    v32[1] = v5;
    *(_DWORD *)v25 = 136315138;
    v43 = v26;
    v32[2] = v4;
    v44 = 0;
    v45[0] = 0xE000000000000000;
    _StringGuts.grow(_:)(22);
    v28._object = (void *)0x80000001004AAFC0;
    v28._countAndFlagsBits = 0xD000000000000014;
    String.append(_:)(v28);
    _print_unlocked<A, B>(_:_:)(v17, &v44, v12, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v29._countAndFlagsBits = 0;
    v29._object = (void *)0xE000000000000000;
    String.append(_:)(v29);
    v30 = v45[0];
    v44 = sub_100056DA0(v44, v45[0], &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, v45);
    swift_bridgeObjectRelease(v30);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "FMAccessoryDiscoveryCoordinator: %s", v25, 0xCu);
    swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v25, -1, -1);
  }

  sub_10004FCB8((uint64_t)v17, type metadata accessor for FMAccessoryDiscoveryCoordinator.State);
  sub_10004FC74(v42, (uint64_t)v15, type metadata accessor for FMAccessoryDiscoveryCoordinator.State);
  v31 = (char *)&loc_10021C530 + dword_10021CF8C[swift_getEnumCaseMultiPayload(v15, v12)];
  __asm { BR              X10 }
}

uint64_t sub_10021CFD8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[10];

  v5[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v5[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v5[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v5[3] = "\b";
  v5[4] = "\b";
  v5[5] = "\b";
  v5[6] = &unk_100488908;
  v5[7] = &unk_100488920;
  result = type metadata accessor for FMAccessoryDiscoveryCoordinator.State(319);
  if (v3 <= 0x3F)
  {
    v5[8] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for FMAccessoryDiscoveryCoordinator.Event(319);
    if (v4 <= 0x3F)
    {
      v5[9] = *(_QWORD *)(result - 8) + 64;
      result = swift_updateClassMetadata2(a1, 256, 10, v5, a1 + 80);
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for FMAccessoryDiscoveryCoordinator.State(uint64_t a1)
{
  return sub_10001DC04(a1, qword_1005DBC40, (uint64_t)&nominal type descriptor for FMAccessoryDiscoveryCoordinator.State);
}

double sub_10021D0B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  void *v8;
  uint64_t Strong;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double result;
  _BYTE v17[24];
  _BYTE v18[24];

  v1 = v0;
  v2 = sub_100053F2C(&qword_1005D2C70);
  __chkstk_darwin(v2);
  v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for FMAccessoryDiscoveryCoordinator.State(0);
  __chkstk_darwin(v5);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_pairingCoordinator);
  if (v8)
  {
    objc_msgSend(v8, "proxCardFlowDidDismiss");
  }
  else
  {
    Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_delegate);
    if (Strong)
    {
      v10 = Strong;
      sub_1003CB6D0();
      swift_unknownObjectRelease(v10);
    }
  }
  v11 = v1 + OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_state;
  swift_beginAccess(v1 + OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_state, v18, 0, 0);
  sub_10004FC74(v11, (uint64_t)v7, type metadata accessor for FMAccessoryDiscoveryCoordinator.State);
  if (swift_getEnumCaseMultiPayload(v7, v5) == 6)
  {
    dispatch thunk of FMIPAccessoryDiscoveryController.stopDiscovery(localFindable:completion:)(1, 0, 0);
  }
  else
  {
    dispatch thunk of FMIPAccessoryDiscoveryController.stopDiscovery(localFindable:completion:)(0, 0, 0);
    sub_10004FCB8((uint64_t)v7, type metadata accessor for FMAccessoryDiscoveryCoordinator.State);
  }
  v12 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_onboardingCoordinator);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_onboardingCoordinator) = 0;

  v13 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_mediator) + 56);
  v14 = type metadata accessor for FMSelectionPendingAction(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v4, 1, 1, v14);
  v15 = v13 + OBJC_IVAR____TtC6FindMy21FMSelectionController_pendingAction;
  swift_beginAccess(v13 + OBJC_IVAR____TtC6FindMy21FMSelectionController_pendingAction, v17, 33, 0);
  swift_retain(v13);
  sub_100073BC4((uint64_t)v4, v15);
  swift_endAccess(v17);
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

uint64_t *sub_10021D334(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v9);
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 1u:
        v8 = type metadata accessor for FMIPDiscoveredAccessory(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        swift_storeEnumTagMultiPayload(a1, a3, 1);
        break;
      case 2u:
        v11 = *a2;
        *a1 = *a2;
        swift_bridgeObjectRetain(v11);
        swift_storeEnumTagMultiPayload(a1, a3, 2);
        break;
      case 3u:
        v12 = type metadata accessor for FMIPDiscoveredAccessory(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
        swift_storeEnumTagMultiPayload(a1, a3, 3);
        break;
      case 4u:
        v13 = type metadata accessor for FMIPDiscoveredAccessory(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
        swift_storeEnumTagMultiPayload(a1, a3, 4);
        break;
      case 5u:
        v14 = type metadata accessor for UUID(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
        swift_storeEnumTagMultiPayload(a1, a3, 5);
        break;
      case 6u:
        v15 = type metadata accessor for FMIPAccessoryError(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
        swift_storeEnumTagMultiPayload(a1, a3, 6);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_10021D4F4(_QWORD *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  switch((int)result)
  {
    case 1:
    case 3:
    case 4:
      v4 = type metadata accessor for FMIPDiscoveredAccessory(0);
      goto LABEL_6;
    case 2:
      return swift_bridgeObjectRelease(*a1);
    case 5:
      v4 = type metadata accessor for UUID(0);
      goto LABEL_6;
    case 6:
      v4 = type metadata accessor for FMIPAccessoryError(0);
LABEL_6:
      result = (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *sub_10021D584(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  switch(swift_getEnumCaseMultiPayload(a2, a3))
  {
    case 1u:
      v6 = type metadata accessor for FMIPDiscoveredAccessory(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = a1;
      v8 = a3;
      v9 = 1;
      goto LABEL_9;
    case 2u:
      v10 = *a2;
      *a1 = *a2;
      swift_bridgeObjectRetain(v10);
      v7 = a1;
      v8 = a3;
      v9 = 2;
      goto LABEL_9;
    case 3u:
      v11 = type metadata accessor for FMIPDiscoveredAccessory(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v7 = a1;
      v8 = a3;
      v9 = 3;
      goto LABEL_9;
    case 4u:
      v12 = type metadata accessor for FMIPDiscoveredAccessory(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
      v7 = a1;
      v8 = a3;
      v9 = 4;
      goto LABEL_9;
    case 5u:
      v13 = type metadata accessor for UUID(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v7 = a1;
      v8 = a3;
      v9 = 5;
      goto LABEL_9;
    case 6u:
      v14 = type metadata accessor for FMIPAccessoryError(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      v7 = a1;
      v8 = a3;
      v9 = 6;
LABEL_9:
      swift_storeEnumTagMultiPayload(v7, v8, v9);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t *sub_10021D708(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_10004FCB8((uint64_t)a1, type metadata accessor for FMAccessoryDiscoveryCoordinator.Event);
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 1u:
        v6 = type metadata accessor for FMIPDiscoveredAccessory(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        swift_storeEnumTagMultiPayload(a1, a3, 1);
        break;
      case 2u:
        v7 = *a2;
        *a1 = *a2;
        swift_bridgeObjectRetain(v7);
        swift_storeEnumTagMultiPayload(a1, a3, 2);
        break;
      case 3u:
        v8 = type metadata accessor for FMIPDiscoveredAccessory(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        swift_storeEnumTagMultiPayload(a1, a3, 3);
        break;
      case 4u:
        v9 = type metadata accessor for FMIPDiscoveredAccessory(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
        swift_storeEnumTagMultiPayload(a1, a3, 4);
        break;
      case 5u:
        v10 = type metadata accessor for UUID(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
        swift_storeEnumTagMultiPayload(a1, a3, 5);
        break;
      case 6u:
        v11 = type metadata accessor for FMIPAccessoryError(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
        swift_storeEnumTagMultiPayload(a1, a3, 6);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *sub_10021D8B8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  switch(swift_getEnumCaseMultiPayload(a2, a3))
  {
    case 1u:
      v6 = type metadata accessor for FMIPDiscoveredAccessory(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = a1;
      v8 = a3;
      v9 = 1;
      goto LABEL_8;
    case 3u:
      v10 = type metadata accessor for FMIPDiscoveredAccessory(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      v7 = a1;
      v8 = a3;
      v9 = 3;
      goto LABEL_8;
    case 4u:
      v11 = type metadata accessor for FMIPDiscoveredAccessory(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
      v7 = a1;
      v8 = a3;
      v9 = 4;
      goto LABEL_8;
    case 5u:
      v12 = type metadata accessor for UUID(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
      v7 = a1;
      v8 = a3;
      v9 = 5;
      goto LABEL_8;
    case 6u:
      v13 = type metadata accessor for FMIPAccessoryError(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
      v7 = a1;
      v8 = a3;
      v9 = 6;
LABEL_8:
      swift_storeEnumTagMultiPayload(v7, v8, v9);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_10021DA20(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (a1 != a2)
  {
    sub_10004FCB8((uint64_t)a1, type metadata accessor for FMAccessoryDiscoveryCoordinator.Event);
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 1u:
        v6 = type metadata accessor for FMIPDiscoveredAccessory(0);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        v7 = a1;
        v8 = a3;
        v9 = 1;
        goto LABEL_9;
      case 3u:
        v10 = type metadata accessor for FMIPDiscoveredAccessory(0);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
        v7 = a1;
        v8 = a3;
        v9 = 3;
        goto LABEL_9;
      case 4u:
        v11 = type metadata accessor for FMIPDiscoveredAccessory(0);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
        v7 = a1;
        v8 = a3;
        v9 = 4;
        goto LABEL_9;
      case 5u:
        v12 = type metadata accessor for UUID(0);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
        v7 = a1;
        v8 = a3;
        v9 = 5;
        goto LABEL_9;
      case 6u:
        v13 = type metadata accessor for FMIPAccessoryError(0);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
        v7 = a1;
        v8 = a3;
        v9 = 6;
LABEL_9:
        swift_storeEnumTagMultiPayload(v7, v8, v9);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t *sub_10021DBA0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v10);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v11 = type metadata accessor for FMIPAccessoryError(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = type metadata accessor for FMIPDiscoveredAccessory(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_10021DC8C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload(a1, a2);
  if ((_DWORD)result == 1)
  {
    v4 = type metadata accessor for FMIPAccessoryError(0);
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v4 = type metadata accessor for FMIPDiscoveredAccessory(0);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
}

void *sub_10021DCE8(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v8 = type metadata accessor for FMIPAccessoryError(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for FMIPDiscoveredAccessory(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

void *sub_10021DDAC(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_10004FCB8((uint64_t)a1, type metadata accessor for FMAccessoryDiscoveryCoordinator.State);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for FMIPAccessoryError(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = type metadata accessor for FMIPDiscoveredAccessory(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

void *sub_10021DE88(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v8 = type metadata accessor for FMIPAccessoryError(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = type metadata accessor for FMIPDiscoveredAccessory(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

void *sub_10021DF4C(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_10004FCB8((uint64_t)a1, type metadata accessor for FMAccessoryDiscoveryCoordinator.State);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for FMIPAccessoryError(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = type metadata accessor for FMIPDiscoveredAccessory(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_10021E028(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];

  result = type metadata accessor for FMIPDiscoveredAccessory(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for FMIPAccessoryError(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      swift_initEnumMetadataMultiPayload(a1, 256, 2, v5);
      return 0;
    }
  }
  return result;
}

id sub_10021E0A8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  NSString v12;
  id v13;
  char *v14;
  char *v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  void (*v21)(_BYTE *, _QWORD);
  uint64_t v22;
  void (*v23)(_BYTE *, _QWORD);
  id v24;
  NSString v25;
  _BYTE v27[32];
  objc_super v28;

  *(_QWORD *)&v4[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_pairingCoordinator] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_onboardingCoordinator] = 0;
  v9 = OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_sharingDefaults;
  v10 = objc_allocWithZone((Class)NSUserDefaults);
  v11 = v4;
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v10, "initWithSuiteName:", v12);

  *(_QWORD *)&v4[v9] = v13;
  swift_unknownObjectWeakInit(&v11[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_currentCard]);
  v14 = &v11[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_delegate];
  *((_QWORD *)v14 + 1) = 0;
  swift_unknownObjectWeakInit(v14);
  v15 = &v11[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_state];
  v16 = type metadata accessor for FMAccessoryDiscoveryCoordinator.State(0);
  swift_storeEnumTagMultiPayload(v15, v16, 2);
  *(_QWORD *)&v11[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_mediator] = a2;
  *(_QWORD *)&v11[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_discoveryController] = a3;
  *(_QWORD *)&v11[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_presenter] = a1;
  sub_10004FC74(a4, (uint64_t)&v11[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_initialEvent], type metadata accessor for FMAccessoryDiscoveryCoordinator.Event);
  swift_retain(a2);
  swift_retain(a3);
  v17 = a1;

  v28.receiver = v11;
  v28.super_class = (Class)type metadata accessor for FMAccessoryDiscoveryCoordinator(0);
  v18 = objc_msgSendSuper2(&v28, "init");
  v19 = swift_allocObject(&unk_100551A30, 24, 7);
  swift_unknownObjectWeakInit(v19 + 16);
  v20 = v18;
  swift_retain(v19);
  v21 = (void (*)(_BYTE *, _QWORD))dispatch thunk of FMIPAccessoryDiscoveryController.callbacks.modify(v27);
  FMIPAccessoryDiscoveryController.Callbacks.errorHandler.setter(sub_10021E3DC, v19);
  v21(v27, 0);
  swift_release(v19);
  v22 = swift_allocObject(&unk_100551A30, 24, 7);
  swift_unknownObjectWeakInit(v22 + 16);
  swift_retain(v22);
  v23 = (void (*)(_BYTE *, _QWORD))dispatch thunk of FMIPAccessoryDiscoveryController.callbacks.modify(v27);
  FMIPAccessoryDiscoveryController.Callbacks.discoveredAccessoriesCallback.setter(sub_10021E3E4, v22);
  v23(v27, 0);
  swift_release(v22);
  v24 = objc_msgSend((id)objc_opt_self(NSDistributedNotificationCenter), "defaultCenter");
  v25 = String._bridgeToObjectiveC()();
  objc_msgSend(v24, "addObserver:selector:name:object:", v20, "systemOnboardingStarted", v25, 0);

  sub_10004FCB8(a4, type metadata accessor for FMAccessoryDiscoveryCoordinator.Event);
  return v20;
}

void sub_10021E39C(os_log_type_t a1)
{
  sub_10021E80C(a1, 0xD000000000000022, 0x80000001004B5D80);
}

uint64_t sub_10021E3B8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10021E3DC(uint64_t a1)
{
  uint64_t v1;

  return sub_10021A0B4(a1, v1);
}

uint64_t sub_10021E3E4(uint64_t a1)
{
  uint64_t v1;

  return sub_10021A47C(a1, v1);
}

uint64_t sub_10021E3EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C(&qword_1005DBC80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10021E434()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for FMAccessoryDiscoveryCoordinator.Event(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  switch(swift_getEnumCaseMultiPayload(v0 + v4, v1))
  {
    case 1u:
    case 3u:
    case 4u:
      v6 = type metadata accessor for FMIPDiscoveredAccessory(0);
      goto LABEL_6;
    case 2u:
      swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4));
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
    case 5u:
      v6 = type metadata accessor for UUID(0);
      goto LABEL_6;
    case 6u:
      v6 = type metadata accessor for FMIPAccessoryError(0);
LABEL_6:
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v4, v6);
      break;
    default:
      return swift_deallocObject(v0, v4 + v5, v3 | 7);
  }
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10021E504(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMAccessoryDiscoveryCoordinator.Event(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10021E548()
{
  return sub_10005DAF4(type metadata accessor for FMAccessoryDiscoveryCoordinator.Event, (uint64_t (*)(_QWORD, uint64_t))sub_10021AB54);
}

uint64_t sub_10021E55C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for FMIPAccessoryError(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10021E5D0()
{
  return sub_10005DAF4((uint64_t (*)(_QWORD))&type metadata accessor for FMIPAccessoryError, sub_10021A300);
}

void sub_10021E5E4(os_log_type_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  Swift::String v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  Swift::String v14;
  Swift::String v15;
  NSObject *log;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100056D88(v4, (uint64_t)qword_1005F5748);
  v6 = a1;
  log = Logger.logObject.getter(v5);
  if (os_log_type_enabled(log, a1))
  {
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    *(_DWORD *)v7 = 136315138;
    v18 = 0xE000000000000000;
    v19 = v8;
    _StringGuts.grow(_:)(27);
    v9._object = (void *)0x80000001004AAFE0;
    v9._countAndFlagsBits = 0xD000000000000019;
    String.append(_:)(v9);
    v10 = objc_msgSend(a2, "description");
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

    v14._countAndFlagsBits = v11;
    v14._object = v13;
    String.append(_:)(v14);
    swift_bridgeObjectRelease(v13);
    v15._countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    String.append(_:)(v15);
    v17 = sub_100056DA0(0, 0xE000000000000000, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18);
    swift_bridgeObjectRelease(0xE000000000000000);
    _os_log_impl((void *)&_mh_execute_header, log, v6, "FMAccessoryDiscoveryCoordinator: %s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

  }
  else
  {

  }
}

void sub_10021E80C(os_log_type_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  NSObject *log;
  uint64_t v11;
  uint64_t v12;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100056D88(v6, (uint64_t)qword_1005F5748);
  log = Logger.logObject.getter(v7);
  if (os_log_type_enabled(log, a1))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v12 = v9;
    *(_DWORD *)v8 = 136315138;
    v11 = sub_100056DA0(a2, a3, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12);
    _os_log_impl((void *)&_mh_execute_header, log, a1, "FMAccessoryDiscoveryCoordinator: %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

  }
}

id sub_10021E994(uint64_t a1)
{
  char *v1;
  os_log_type_t v2;
  id v3;
  NSString v4;
  uint64_t v5;
  os_log_type_t v6;

  v2 = static os_log_type_t.default.getter(a1);
  sub_10021E80C(v2, 0xD00000000000003FLL, 0x80000001004B5E70);
  v3 = objc_msgSend((id)objc_opt_self(NSDistributedNotificationCenter), "defaultCenter");
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v3, "postNotificationName:object:userInfo:deliverImmediately:", v4, 0, 0, 1);

  v6 = static os_log_type_t.default.getter(v5);
  sub_10021E80C(v6, 0xD000000000000038, 0x80000001004B5E30);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy31FMAccessoryDiscoveryCoordinator_presenter], "dismissViewControllerAnimated:completion:", 1, 0);
  return objc_msgSend(v1, "proxCardFlowDidDismiss");
}

uint64_t sub_10021EA8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMAccessoryDiscoveryCoordinator.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_10021EAD0(uint64_t a1)
{
  uint64_t v1;

  sub_10021BE58(a1, v1);
}

uint64_t sub_10021EAD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_10021EB70(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = v1[4];
  v9 = (uint64_t)v1 + v5;
  v10 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v11 = (_QWORD *)swift_task_alloc(dword_1005DBC94);
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_1000BBF58;
  return sub_10021BEF4(a1, v6, v7, v8, v9, v10);
}

uint64_t storeEnumTagSinglePayload for FMAccessoryDiscoveryCoordinator.FlowType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10021EC68 + 4 * byte_10048888F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10021EC9C + 4 * byte_10048888A[v4]))();
}

uint64_t sub_10021EC9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10021ECA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10021ECACLL);
  return result;
}

uint64_t sub_10021ECB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10021ECC0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10021ECC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10021ECCC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMAccessoryDiscoveryCoordinator.FlowType()
{
  return &type metadata for FMAccessoryDiscoveryCoordinator.FlowType;
}

unint64_t sub_10021ECEC()
{
  unint64_t result;

  result = qword_1005DBCA8;
  if (!qword_1005DBCA8)
  {
    result = swift_getWitnessTable(&unk_1004889BC, &type metadata for FMAccessoryDiscoveryCoordinator.FlowType);
    atomic_store(result, (unint64_t *)&qword_1005DBCA8);
  }
  return result;
}

BOOL sub_10021ED40()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  char v9;
  _BOOL8 result;

  v1 = objc_msgSend(v0, "domain");
  v2 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
  v4 = v3;

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(NSURLErrorDomain);
  if (v2 == v5 && v4 == v6)
  {
    swift_bridgeObjectRelease_n(v4, 2);
  }
  else
  {
    v8 = v6;
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v2, v4, v5, v6, 0);
    swift_bridgeObjectRelease(v4);
    swift_bridgeObjectRelease(v8);
    result = 0;
    if ((v9 & 1) == 0)
      return result;
  }
  return (uint64_t)objc_msgSend(v0, "code") >= 500 && (uint64_t)objc_msgSend(v0, "code") < 600;
}

id sub_10021EE24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v14;

  v4 = *(_QWORD *)(a1 - 8);
  __chkstk_darwin(a1);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, a1);
  v8 = _getErrorEmbeddedNSError<A>(_:)(v6, a1, a2);
  if (v8)
  {
    v9 = v8;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
  }
  else
  {
    v9 = swift_allocError(a1, a2, 0, 0);
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v10, v6, a1);
  }
  v11 = (void *)_convertErrorToNSError(_:)(v9);
  swift_errorRelease(v9);
  v12 = objc_msgSend(v11, "code");

  return v12;
}

uint64_t sub_10021EF24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v15;

  v4 = *(_QWORD *)(a1 - 8);
  __chkstk_darwin(a1);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, a1);
  v8 = _getErrorEmbeddedNSError<A>(_:)(v6, a1, a2);
  if (v8)
  {
    v9 = v8;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
  }
  else
  {
    v9 = swift_allocError(a1, a2, 0, 0);
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v10, v6, a1);
  }
  v11 = (void *)_convertErrorToNSError(_:)(v9);
  swift_errorRelease(v9);
  v12 = objc_msgSend(v11, "domain");

  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  return v13;
}

BOOL sub_10021F044(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  BOOL v12;
  uint64_t v14;

  v4 = *(_QWORD *)(a1 - 8);
  __chkstk_darwin(a1);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, a1);
  v8 = _getErrorEmbeddedNSError<A>(_:)(v6, a1, a2);
  if (v8)
  {
    v9 = v8;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
  }
  else
  {
    v9 = swift_allocError(a1, a2, 0, 0);
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v10, v6, a1);
  }
  v11 = (void *)_convertErrorToNSError(_:)(v9);
  swift_errorRelease(v9);
  v12 = sub_10021ED40();

  return v12;
}

double sub_10021F1F8(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  _BYTE v15[24];
  objc_super v16;

  v16.receiver = v1;
  v16.super_class = (Class)type metadata accessor for FMPopOverController();
  objc_msgSendSuper2(&v16, "viewWillAppear:", a1 & 1);
  v3 = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy19FMPopOverController_mediator] + 56);
  v4 = type metadata accessor for FMSelectionSubscription(0);
  v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v6 = v5 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
  *(_QWORD *)(v6 + 8) = 0;
  swift_unknownObjectWeakInit(v6);
  swift_retain(v3);
  v7 = v1;
  UUID.init()(v7);
  v8 = v5 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
  *(_QWORD *)(v8 + 8) = &off_100551C08;
  swift_unknownObjectWeakAssign(v8, v7);

  swift_beginAccess(v3 + 16, v15, 33, 0);
  v9 = swift_retain(v5);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v9);
  v11 = *(_QWORD *)((*(_QWORD *)(v3 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v10 = *(_QWORD *)((*(_QWORD *)(v3 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v11 >= v10 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v10 > 1, v11 + 1, 1);
  v12 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v5);
  specialized Array._endMutation()(v12);
  swift_endAccess(v15);
  swift_release(v3);
  v13 = *(_QWORD *)&v7[OBJC_IVAR____TtC6FindMy19FMPopOverController_selectionSubscription];
  *(_QWORD *)&v7[OBJC_IVAR____TtC6FindMy19FMPopOverController_selectionSubscription] = v5;
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

void sub_10021F398(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];
  objc_super v11;

  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for FMPopOverController();
  objc_msgSendSuper2(&v11, "viewWillDisappear:", a1 & 1);
  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy19FMPopOverController_selectionSubscription];
  if (v3)
  {
    v4 = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy19FMPopOverController_mediator] + 56);
    swift_beginAccess(v4 + 16, v10, 33, 0);
    swift_retain(v3);
    swift_retain(v4);
    v5 = sub_100334CE8((uint64_t *)(v4 + 16), v3);
    v6 = v5;
    v7 = *(_QWORD *)(v4 + 16);
    if ((unint64_t)v7 >> 62)
    {
      if (v7 < 0)
        v9 = *(_QWORD *)(v4 + 16);
      else
        v9 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(v4 + 16));
      v8 = _CocoaArrayWrapper.endIndex.getter(v9);
      swift_bridgeObjectRelease(v7);
      if (v8 >= v6)
        goto LABEL_4;
    }
    else
    {
      v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v8 >= v5)
      {
LABEL_4:
        sub_100200704(v6, v8);
        swift_endAccess(v10);
        swift_release(v3);
        swift_release(v4);
        return;
      }
    }
    __break(1u);
  }
}

void sub_10021F62C()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  Class isa;

  v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy19FMPopOverController_sideBarView];
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = sub_100053F2C(&qword_1005D2F10);
  v3 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100481720;
  v4 = objc_msgSend(v1, "topAnchor");
  v5 = objc_msgSend(v0, "view");
  if (!v5)
  {
    __break(1u);
    goto LABEL_7;
  }
  v6 = v5;
  v7 = objc_msgSend(v5, "topAnchor");

  v8 = objc_msgSend(v4, "constraintEqualToAnchor:", v7);
  *(_QWORD *)(v3 + 32) = v8;
  v9 = objc_msgSend(v1, "bottomAnchor");
  v10 = objc_msgSend(v0, "view");
  if (!v10)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v11 = v10;
  v12 = objc_msgSend(v10, "bottomAnchor");

  v13 = objc_msgSend(v9, "constraintEqualToAnchor:", v12);
  *(_QWORD *)(v3 + 40) = v13;
  v14 = objc_msgSend(v1, "leadingAnchor");
  v15 = objc_msgSend(v0, "view");
  if (!v15)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v16 = v15;
  v17 = objc_msgSend(v15, "leadingAnchor");

  v18 = objc_msgSend(v14, "constraintEqualToAnchor:", v17);
  *(_QWORD *)(v3 + 48) = v18;
  v19 = objc_msgSend(v1, "trailingAnchor");
  v20 = objc_msgSend(v0, "view");
  if (v20)
  {
    v21 = v20;
    v22 = (void *)objc_opt_self(NSLayoutConstraint);
    v23 = objc_msgSend(v21, "trailingAnchor");

    v24 = objc_msgSend(v19, "constraintEqualToAnchor:", v23);
    *(_QWORD *)(v3 + 56) = v24;
    specialized Array._endMutation()(v25);
    sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v22, "activateConstraints:", isa, swift_bridgeObjectRelease(v3).n128_f64[0]);

    return;
  }
LABEL_9:
  __break(1u);
}

void sub_10021F910(void *a1)
{
  char *v1;
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  Class isa;

  v3 = objc_msgSend(a1, "view");
  if (v3)
  {
    v4 = v3;
    sub_1000428F0();
    objc_msgSend(v1, "addChildViewController:", a1);
    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    objc_msgSend(v4, "setPreservesSuperviewLayoutMargins:", 1);
    v5 = objc_msgSend(*(id *)(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy19FMPopOverController_sideBarView]+ OBJC_IVAR____TtC6FindMy13FMSideBarView_blurredBackground), "contentView");
    objc_msgSend(v5, "addSubview:", v4);

    objc_msgSend(a1, "didMoveToParentViewController:", v1);
    v6 = sub_100053F2C(&qword_1005D2F10);
    v7 = swift_allocObject(v6, 64, 7);
    *(_OWORD *)(v7 + 16) = xmmword_100481720;
    v8 = objc_msgSend(v4, "topAnchor");
    v9 = objc_msgSend(v1, "view");
    if (v9)
    {
      v10 = v9;
      v11 = objc_msgSend(v9, "topAnchor");

      v12 = objc_msgSend(v8, "constraintEqualToAnchor:", v11);
      *(_QWORD *)(v7 + 32) = v12;
      v13 = objc_msgSend(v4, "bottomAnchor");
      v14 = objc_msgSend(v1, "view");
      if (v14)
      {
        v15 = v14;
        v16 = objc_msgSend(v14, "bottomAnchor");

        v17 = objc_msgSend(v13, "constraintEqualToAnchor:", v16);
        *(_QWORD *)(v7 + 40) = v17;
        v18 = objc_msgSend(v4, "leadingAnchor");
        v19 = objc_msgSend(v1, "view");
        if (v19)
        {
          v20 = v19;
          v21 = objc_msgSend(v19, "leadingAnchor");

          v22 = objc_msgSend(v18, "constraintEqualToAnchor:", v21);
          *(_QWORD *)(v7 + 48) = v22;
          v23 = objc_msgSend(v4, "trailingAnchor");
          v24 = objc_msgSend(v1, "view");
          if (v24)
          {
            v25 = v24;
            v26 = (void *)objc_opt_self(NSLayoutConstraint);
            v27 = objc_msgSend(v25, "trailingAnchor");

            v28 = objc_msgSend(v23, "constraintEqualToAnchor:", v27);
            *(_QWORD *)(v7 + 56) = v28;
            specialized Array._endMutation()(v29);
            sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
            isa = Array._bridgeToObjectiveC()().super.isa;
            objc_msgSend(v26, "activateConstraints:", isa, swift_bridgeObjectRelease(v7).n128_f64[0]);

            return;
          }
          goto LABEL_11;
        }
LABEL_10:
        __break(1u);
LABEL_11:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_10;
  }
}

id sub_10021FCE4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPopOverController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMPopOverController()
{
  return objc_opt_self(_TtC6FindMy19FMPopOverController);
}

uint64_t sub_10021FD8C(uint64_t a1, uint64_t a2)
{
  return sub_10021FD94(a2);
}

uint64_t sub_10021FD94(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  NSObject *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;

  v2 = v1;
  v4 = type metadata accessor for FMSelectedSection(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100024F3C(a1, (uint64_t)v6);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v6, v4);
  switch(EnumCaseMultiPayload)
  {
    case 3:
      v18 = OBJC_IVAR____TtC6FindMy19FMPopOverController_mediator;
      v19 = *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy19FMPopOverController_mediator];
      v20 = objc_allocWithZone((Class)type metadata accessor for FMItemDetailContentViewController(0));
      v21 = swift_retain(v19);
      v22 = sub_100306770(v21);
      v23 = *(_QWORD *)&v2[v18];
      v24 = (char *)v22 + OBJC_IVAR____TtC6FindMy33FMItemDetailContentViewController_playSoundDelegate;
      *((_QWORD *)v24 + 1) = &off_100545AB0;
      swift_unknownObjectWeakAssign(v24, v23);
      sub_10021F910(v22);

      break;
    case 2:
      v25 = *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy19FMPopOverController_mediator];
      v26 = objc_allocWithZone((Class)type metadata accessor for FMPersonDetailContentViewController(0));
      v27 = swift_retain(v25);
      v28 = sub_10010935C(v27);
      swift_release(v25);
      sub_10021F910(v28);

      break;
    case 0:
      v8 = (uint64_t)&v6[*(int *)(sub_100053F2C(&qword_1005DE9B0) + 48)];
      v9 = OBJC_IVAR____TtC6FindMy19FMPopOverController_mediator;
      v10 = *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy19FMPopOverController_mediator];
      v11 = objc_allocWithZone((Class)type metadata accessor for FMDeviceDetailContentViewController(0));
      v12 = swift_retain(v10);
      v13 = sub_1001983C8(v12);
      v14 = *(_QWORD *)&v2[v9];
      v15 = &v13[OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_playSoundDelegate];
      *((_QWORD *)v15 + 1) = &off_100545A98;
      swift_unknownObjectWeakAssign(v15, v14);
      sub_10021F910(v13);

      sub_100066780(v8);
      v16 = type metadata accessor for FMIPDevice(0);
      return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v6, v16);
    default:
      objc_msgSend(v2, "dismissViewControllerAnimated:completion:", 1, 0);
      break;
  }
  return sub_100024F00((uint64_t)v6);
}

uint64_t sub_10021FF9C(uint64_t a1)
{
  _QWORD v2[8];

  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[2] = "\b";
  v2[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[6] = &unk_100488AA0;
  v2[7] = &unk_100488AB8;
  return swift_initClassMetadata2(a1, 0, 8, v2, a1 + 88);
}

uint64_t sub_100220010(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (_QWORD *)(v2 + qword_1005DBD30);
  v4 = *(_QWORD *)(v2 + qword_1005DBD30);
  v5 = *(_QWORD *)(v2 + qword_1005DBD30 + 8);
  *v3 = a1;
  v3[1] = a2;
  return sub_1000327F0(v4, v5);
}

uint64_t sub_100220030()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_1005DBD38);
}

uint64_t sub_100220040(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + qword_1005DBD38) = result;
  return result;
}

void sub_100220050()
{
  sub_100220110();
  sub_100220070();
  sub_1002203CC();
  sub_100220AE8();
  sub_100220BB8();
}

void sub_100220070()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v1, "addObserver:selector:name:object:", v0, "adjustForKeyboardWithNotification:", UIKeyboardWillHideNotification, 0);
  objc_msgSend(v1, "addObserver:selector:name:object:", v0, "adjustForKeyboardWithNotification:", UIKeyboardWillChangeFrameNotification, 0);

}

void sub_100220110()
{
  char *v0;
  id v1;
  void *v2;
  char *v3;
  uint64_t v4;
  void *v5;
  id v6;
  double v7;
  double v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  id v21;

  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    v3 = *(char **)&v0[qword_1005DBD00];
    objc_msgSend(v1, "addSubview:", v3);

    v4 = OBJC_IVAR____TtC6FindMy12FMScrollView_content;
    v5 = *(void **)&v0[qword_1005DBD08];
    objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC6FindMy12FMScrollView_content], "addSubview:", v5);
    objc_msgSend(v3, "setDelegate:", v0);
    objc_msgSend(v3, "setPreservesSuperviewLayoutMargins:", 1);
    objc_msgSend(v3, "setContentInsetAdjustmentBehavior:", 3);
    objc_msgSend(*(id *)&v3[v4], "setPreservesSuperviewLayoutMargins:", 1);
    objc_msgSend(v5, "setAxis:", 1);
    objc_msgSend(v5, "setLayoutMarginsRelativeArrangement:", 1);
    objc_msgSend(v5, "setDirectionalLayoutMargins:", 0.0, 4.0, 0.0, 4.0);
    v6 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    LODWORD(v7) = 1132068864;
    objc_msgSend(v6, "setContentHuggingPriority:forAxis:", 1, v7);
    LODWORD(v8) = 1132068864;
    objc_msgSend(v6, "setContentCompressionResistancePriority:forAxis:", 1, v8);
    v9 = *(void **)&v0[qword_1005DBD10];
    v10 = *(void **)&v0[qword_1005DBD20];
    v11 = *(void **)&v0[qword_1005DBD08];
    v12 = *(id *)&v0[qword_1005DBD18];
    v13 = v9;
    v14 = v6;
    v15 = v10;
    objc_msgSend(v11, "addArrangedSubview:", v12);

    v16 = *(void **)&v0[qword_1005DBD08];
    v17 = v13;
    objc_msgSend(v16, "addArrangedSubview:", v17);

    v18 = *(void **)&v0[qword_1005DBD08];
    v21 = v14;
    objc_msgSend(v18, "addArrangedSubview:", v21);

    v19 = *(void **)&v0[qword_1005DBD08];
    v20 = v15;
    objc_msgSend(v19, "addArrangedSubview:", v20);

    objc_msgSend(v5, "setCustomSpacing:afterView:", v17, 0.0);
  }
  else
  {
    __break(1u);
  }
}

void sub_1002203CC()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  char *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  Class isa;
  double v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  double v46;
  id v47;
  Class v48;
  uint64_t v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  id v65;
  Class v66;

  v1 = *(void **)&v0[qword_1005DBD08];
  v2 = *(void **)&v0[qword_1005DBD18];
  v3 = *(void **)&v0[qword_1005DBD10];
  v4 = *(void **)&v0[qword_1005DBD20];
  v5 = (char *)*(id *)&v0[qword_1005DBD00];
  v6 = v1;
  v7 = v2;
  v8 = v3;
  v9 = v4;
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v10 = sub_100053F2C(&qword_1005D2F10);
  v11 = swift_allocObject(v10, 64, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100481720;
  v12 = objc_msgSend(v5, "leadingAnchor");
  v13 = objc_msgSend(v0, "view");
  if (!v13)
  {
    __break(1u);
    goto LABEL_7;
  }
  v14 = v13;
  v15 = objc_msgSend(v13, "leadingAnchor");

  v16 = objc_msgSend(v12, "constraintEqualToAnchor:", v15);
  *(_QWORD *)(v11 + 32) = v16;
  v17 = objc_msgSend(v5, "trailingAnchor");
  v18 = objc_msgSend(v0, "view");
  if (!v18)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v19 = v18;
  v20 = objc_msgSend(v18, "trailingAnchor");

  v21 = objc_msgSend(v17, "constraintEqualToAnchor:", v20);
  *(_QWORD *)(v11 + 40) = v21;
  v22 = objc_msgSend(v5, "topAnchor");
  v23 = objc_msgSend(v0, "view");
  if (!v23)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v24 = v23;
  v25 = objc_msgSend(v23, "topAnchor");

  v26 = objc_msgSend(v22, "constraintEqualToAnchor:", v25);
  *(_QWORD *)(v11 + 48) = v26;
  v27 = objc_msgSend(v5, "bottomAnchor");
  v28 = objc_msgSend(v0, "view");
  if (v28)
  {
    v29 = v28;
    v30 = (void *)objc_opt_self(NSLayoutConstraint);
    v31 = objc_msgSend(v29, "bottomAnchor");

    v32 = objc_msgSend(v27, "constraintEqualToAnchor:", v31);
    *(_QWORD *)(v11 + 56) = v32;
    specialized Array._endMutation()(v33);
    sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v35 = swift_bridgeObjectRelease(v11).n128_u64[0];
    v36 = v30;
    v65 = v30;
    objc_msgSend(v30, "activateConstraints:", isa, v35);

    v37 = swift_allocObject(v10, 48, 7);
    *(_OWORD *)(v37 + 16) = xmmword_1004820B0;
    v38 = OBJC_IVAR____TtC6FindMy12FMScrollView_content;
    v39 = objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC6FindMy12FMScrollView_content], "widthAnchor");
    v40 = objc_msgSend(v5, "widthAnchor");
    v41 = objc_msgSend(v39, "constraintEqualToAnchor:", v40);

    *(_QWORD *)(v37 + 32) = v41;
    v42 = objc_msgSend(*(id *)&v5[v38], "heightAnchor");
    v43 = objc_msgSend(v5, "layoutMarginsGuide");
    v44 = objc_msgSend(v43, "heightAnchor");

    v45 = objc_msgSend(v42, "constraintEqualToAnchor:", v44);
    LODWORD(v46) = 1132068864;
    v47 = objc_msgSend(v45, "setPriority:", v46);
    *(_QWORD *)(v37 + 40) = v45;
    specialized Array._endMutation()(v47);
    v48 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v36, "activateConstraints:", v48, swift_bridgeObjectRelease(v37).n128_f64[0]);

    v49 = swift_allocObject(v10, 64, 7);
    *(_OWORD *)(v49 + 16) = xmmword_100481720;
    v50 = objc_msgSend(v6, "leadingAnchor");
    v51 = objc_msgSend(*(id *)&v5[v38], "layoutMarginsGuide");
    v52 = objc_msgSend(v51, "leadingAnchor");

    v53 = objc_msgSend(v50, "constraintEqualToAnchor:", v52);
    *(_QWORD *)(v49 + 32) = v53;
    v54 = objc_msgSend(v6, "trailingAnchor");
    v55 = objc_msgSend(*(id *)&v5[v38], "layoutMarginsGuide");
    v56 = objc_msgSend(v55, "trailingAnchor");

    v57 = objc_msgSend(v54, "constraintEqualToAnchor:", v56);
    *(_QWORD *)(v49 + 40) = v57;
    v58 = objc_msgSend(v6, "topAnchor");
    v59 = objc_msgSend(*(id *)&v5[v38], "topAnchor");
    v60 = objc_msgSend(v58, "constraintEqualToAnchor:", v59);

    *(_QWORD *)(v49 + 48) = v60;
    v61 = objc_msgSend(v6, "bottomAnchor");
    v62 = objc_msgSend(*(id *)&v5[v38], "bottomAnchor");
    v63 = objc_msgSend(v61, "constraintEqualToAnchor:", v62);

    *(_QWORD *)(v49 + 56) = v63;
    specialized Array._endMutation()(v64);
    v66 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v65, "activateConstraints:", v66, swift_bridgeObjectRelease(v49).n128_f64[0]);

    return;
  }
LABEL_9:
  __break(1u);
}

void sub_100220AE8()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;

  v1 = swift_isaMask & *v0;
  v2 = objc_allocWithZone((Class)UIBarButtonItem);
  v5 = type metadata accessor for FMProductActionBaseViewController(0, *(_QWORD *)(v1 + 80), v3, v4);
  v6 = _bridgeAnythingToObjectiveC<A>(_:)(&v9, v5);
  v7 = objc_msgSend(v2, "initWithBarButtonSystemItem:target:action:", 1, v6, "cancelActionWithSender:");
  swift_unknownObjectRelease(v6);
  v8 = objc_msgSend(v0, "navigationItem");
  objc_msgSend(v8, "setLeftBarButtonItem:", v7);

}

void sub_100220BB8()
{
  void *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_msgSend(v0, "view");
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
    objc_msgSend(v2, "setBackgroundColor:", v3);

  }
  else
  {
    __break(1u);
  }
}

id sub_100220C3C()
{
  uint64_t v0;
  id result;

  if (*(_BYTE *)(v0 + qword_1005DBD38) == 1)
  {
    result = objc_msgSend(*(id *)(v0 + qword_1005DBD00), "flashScrollIndicators");
    *(_BYTE *)(v0 + qword_1005DBD38) = 0;
  }
  return result;
}

uint64_t sub_100220C88(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t result;
  id v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat v35;
  CGFloat v36;
  CGFloat v37;
  _QWORD v38[2];
  id v39[5];
  __int128 v40;
  __int128 v41;
  CGRect v42;
  CGRect v43;
  CGRect v44;
  CGRect v45;

  v2 = v1;
  v3 = Notification.userInfo.getter(a1);
  if (!v3)
  {
    v40 = 0u;
    v41 = 0u;
    return sub_10005D03C((uint64_t)&v40);
  }
  v4 = v3;
  v38[0] = static String._unconditionallyBridgeFromObjectiveC(_:)(UIKeyboardFrameEndUserInfoKey);
  v38[1] = v5;
  AnyHashable.init<A>(_:)(v39, v38, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v4 + 16) && (v6 = sub_100025F20((uint64_t)v39), (v7 & 1) != 0))
  {
    sub_100056E70(*(_QWORD *)(v4 + 56) + 32 * v6, (uint64_t)&v40);
  }
  else
  {
    v40 = 0u;
    v41 = 0u;
  }
  swift_bridgeObjectRelease(v4);
  sub_100025EEC((uint64_t)v39);
  if (!*((_QWORD *)&v41 + 1))
    return sub_10005D03C((uint64_t)&v40);
  v8 = sub_100006C5C(0, &qword_1005DBDC8, NSValue_ptr);
  result = swift_dynamicCast(v39, &v40, (char *)&type metadata for Any + 8, v8, 6);
  if ((result & 1) != 0)
  {
    v10 = v39[0];
    objc_msgSend(v39[0], "CGRectValue");
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v18 = v17;
    result = (uint64_t)objc_msgSend(v2, "view");
    if (result)
    {
      v19 = (void *)result;
      v20 = objc_msgSend((id)result, "window");

      if (!v20
        || (v21 = objc_msgSend(v20, "screen"),
            v20,
            v22 = objc_msgSend(v21, "coordinateSpace"),
            v21,
            !v22))
      {
        v23 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
        v22 = objc_msgSend(v23, "coordinateSpace");

      }
      v24 = *(void **)&v2[qword_1005DBD00];
      v25 = objc_msgSend(v24, "coordinateSpace");
      objc_msgSend(v22, "convertRect:toCoordinateSpace:", v25, v12, v14, v16, v18);
      v27 = v26;
      v29 = v28;
      v31 = v30;
      v33 = v32;
      swift_unknownObjectRelease(v25);
      objc_msgSend(v24, "bounds");
      v45.origin.x = v34;
      v45.origin.y = v35;
      v45.size.width = v36;
      v45.size.height = v37;
      v42.origin.x = v27;
      v42.origin.y = v29;
      v42.size.width = v31;
      v42.size.height = v33;
      if (CGRectIntersectsRect(v42, v45))
      {
        objc_msgSend(v24, "bounds");
        CGRectGetMaxY(v43);
        v44.origin.x = v27;
        v44.origin.y = v29;
        v44.size.width = v31;
        v44.size.height = v33;
        CGRectGetMinY(v44);
      }
      objc_msgSend(v24, "contentInset");
      objc_msgSend(v24, "setContentInset:");
      objc_msgSend(v24, "contentInset");
      objc_msgSend(v24, "setScrollIndicatorInsets:");

      return swift_unknownObjectRelease(v22);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100220FA8(uint64_t result)
{
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;

  v2 = *(void (**)(uint64_t))(v1 + qword_1005DBD30);
  if (v2)
  {
    v3 = result;
    v4 = *(_QWORD *)(v1 + qword_1005DBD30 + 8);
    sub_1000A190C((uint64_t)v2, v4);
    v2(v3);
    return sub_1000327F0((uint64_t)v2, v4);
  }
  return result;
}

void sub_100221010(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_100221724();
}

void sub_100221034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v6;

  v5 = (objc_class *)type metadata accessor for FMProductActionBaseViewController(0, *(_QWORD *)((swift_isaMask & *v4) + 0x50), a3, a4);
  v6.receiver = v4;
  v6.super_class = v5;
  objc_msgSendSuper2(&v6, "viewDidLoad");
  sub_100220050();
}

void sub_100221084(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v4 = a1;
  sub_100221034((uint64_t)v4, v1, v2, v3);

}

id sub_1002210B8(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v6;
  id result;
  void (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  objc_super v11;

  v6 = (objc_class *)type metadata accessor for FMProductActionBaseViewController(0, *(_QWORD *)((swift_isaMask & *v4) + 0x50), a3, a4);
  v11.receiver = v4;
  v11.super_class = v6;
  result = objc_msgSendSuper2(&v11, "viewWillAppear:", a1 & 1);
  v8 = *(void (**)(uint64_t))((char *)v4 + qword_1005DBD30);
  if (v8)
  {
    v9 = *(_QWORD *)((char *)v4 + qword_1005DBD30 + 8);
    v10 = *(_QWORD *)((char *)v4 + qword_1005DBD00);
    sub_1000A190C((uint64_t)v8, v9);
    v8(v10);
    return (id)sub_1000327F0((uint64_t)v8, v9);
  }
  return result;
}

void sub_100221164(void *a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t v5;
  id v6;

  v6 = a1;
  sub_1002210B8(a3, (uint64_t)v6, v4, v5);

}

id sub_1002211A4(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v6;
  id result;
  objc_super v8;

  v6 = (objc_class *)type metadata accessor for FMProductActionBaseViewController(0, *(_QWORD *)((swift_isaMask & *v4) + 0x50), a3, a4);
  v8.receiver = v4;
  v8.super_class = v6;
  result = objc_msgSendSuper2(&v8, "viewDidAppear:", a1 & 1);
  if (*((_BYTE *)v4 + qword_1005DBD38) == 1)
  {
    result = objc_msgSend(*(id *)((char *)v4 + qword_1005DBD00), "flashScrollIndicators");
    *((_BYTE *)v4 + qword_1005DBD38) = 0;
  }
  return result;
}

void sub_100221234(void *a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t v5;
  id v6;

  v6 = a1;
  sub_1002211A4(a3, (uint64_t)v6, v4, v5);

}

void sub_100221274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  id v6;
  void *v7;
  double v8;
  double v9;
  objc_super v10;

  v5 = (objc_class *)type metadata accessor for FMProductActionBaseViewController(0, *(_QWORD *)((swift_isaMask & *v4) + 0x50), a3, a4);
  v10.receiver = v4;
  v10.super_class = v5;
  objc_msgSendSuper2(&v10, "viewLayoutMarginsDidChange");
  v6 = objc_msgSend(v4, "view");
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v6, "safeAreaInsets");
    v9 = v8;

    if (v9 == 0.0)
    {
      objc_msgSend(v4, "systemMinimumLayoutMargins");
      objc_msgSend(v4, "additionalSafeAreaInsets");
      objc_msgSend(v4, "setAdditionalSafeAreaInsets:");
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_100221348(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v4 = a1;
  sub_100221274((uint64_t)v4, v1, v2, v3);

}

id sub_10022137C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100221594((SEL *)&selRef_viewDidLayoutSubviews, a2, a3, a4);
}

void sub_100221388(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;

  v3 = a1;
  sub_100221594((SEL *)&selRef_viewDidLayoutSubviews, (uint64_t)v3, v1, v2);

}

void sub_1002213C8(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_100221860();

}

void sub_100221414(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_1002216A0();

}

uint64_t sub_100221460(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v11;

  v5 = type metadata accessor for Notification(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)(a3);
  v9 = a1;
  sub_100220C88((uint64_t)v8);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1002214FC(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_100220FA8((uint64_t)v4);

}

void sub_100221550(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v4;

  v4 = a4;
  sub_100221864();
}

id sub_100221588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100221594((SEL *)&selRef_dealloc, a2, a3, a4);
}

id sub_100221594(SEL *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v6;
  objc_super v8;

  v6 = (objc_class *)type metadata accessor for FMProductActionBaseViewController(0, *(_QWORD *)((swift_isaMask & *v4) + 0x50), a3, a4);
  v8.receiver = v4;
  v8.super_class = v6;
  return objc_msgSendSuper2(&v8, *a1);
}

uint64_t sub_1002215E8(uint64_t a1)
{

  swift_release(*(_QWORD *)(a1 + qword_1005DBD28));
  return sub_1000327F0(*(_QWORD *)(a1 + qword_1005DBD30), *(_QWORD *)(a1 + qword_1005DBD30 + 8));
}

uint64_t type metadata accessor for FMProductActionBaseViewController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10003BC28(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FMProductActionBaseViewController);
}

uint64_t sub_100221680(uint64_t a1, uint64_t a2)
{
  return sub_100220010(a1, a2);
}

void sub_1002216A0()
{
  void *v0;
  void *v1;
  _QWORD v2[6];

  v2[4] = State.rawValue.getter;
  v2[5] = 0;
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 1107296256;
  v2[2] = sub_100037DF8;
  v2[3] = &unk_100551D10;
  v1 = _Block_copy(v2);
  objc_msgSend(v0, "dismissViewControllerAnimated:completion:", 1, v1);
  _Block_release(v1);
}

void sub_100221724()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = swift_isaMask & *v0;
  v2 = qword_1005DBD00;
  *(_QWORD *)((char *)v0 + v2) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMScrollView()), "init");
  v3 = qword_1005DBD08;
  *(_QWORD *)((char *)v0 + v3) = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v4 = qword_1005DBD10;
  *(_QWORD *)((char *)v0 + v4) = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(*(_QWORD *)(v1 + 80))), "init");
  v5 = qword_1005DBD18;
  *(_QWORD *)((char *)v0 + v5) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMProductActionHeaderView(0)), "init");
  v6 = qword_1005DBD20;
  *(_QWORD *)((char *)v0 + v6) = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v7 = (_QWORD *)((char *)v0 + qword_1005DBD30);
  *v7 = 0;
  v7[1] = 0;
  *((_BYTE *)v0 + qword_1005DBD38) = 1;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMProductBaseViewController.swift", 40, 2, 59, 0);
  __break(1u);
}

void sub_100221864()
{
  _swift_stdlib_reportUnimplementedInitializer("FindMy.FMProductActionBaseViewController", 40, "init(nibName:bundle:)", 21, 0);
  __break(1u);
}

uint64_t PushAlert.body.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain(v0[1]);
  return v1;
}

void *FMItemShareViewModel.image.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 32);
  v2 = v1;
  return v1;
}

uint64_t FMItemShareViewModel.expiry.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FMItemShareViewModel(0) + 28);
  return sub_10022194C(v3, a1);
}

uint64_t type metadata accessor for FMItemShareViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_1005DBE30;
  if (!qword_1005DBE30)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMItemShareViewModel);
  return result;
}

uint64_t sub_10022194C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void FMItemShareViewModel.hash(into:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  v4 = type metadata accessor for Date(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  __chkstk_darwin(v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v1;
  v12 = v2[1];
  swift_bridgeObjectRetain(v12);
  String.hash(into:)(a1, v11, v12);
  swift_bridgeObjectRelease(v12);
  v13 = v2[2];
  v14 = v2[3];
  swift_bridgeObjectRetain(v14);
  String.hash(into:)(a1, v13, v14);
  swift_bridgeObjectRelease(v14);
  v15 = (void *)v2[4];
  if (v15)
  {
    Hasher._combine(_:)(1u);
    v16 = v15;
    NSObject.hash(into:)(a1);

  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v17 = type metadata accessor for FMItemShareViewModel(0);
  sub_10022194C((uint64_t)v2 + *(int *)(v17 + 28), (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    Hasher._combine(_:)(1u);
    v18 = sub_100008000(&qword_1005D4790, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    dispatch thunk of Hashable.hash(into:)(a1, v4, v18);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

Swift::Int FMItemShareViewModel.hashValue.getter()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  FMItemShareViewModel.hash(into:)((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_100221BAC(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  FMItemShareViewModel.hash(into:)((uint64_t)v2);
  return Hasher._finalize()();
}

uint64_t _s6FindMy20FMItemShareViewModelV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  char v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  char v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unsigned int (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  char v51;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v4 = type metadata accessor for Date(0);
  v60 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v57 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  __chkstk_darwin(v6);
  v58 = (uint64_t)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_100053F2C(&qword_1005D3430);
  __chkstk_darwin(v59);
  v61 = (uint64_t)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FMItemShareViewModel(0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v57 - v14;
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v57 - v17;
  v19 = __chkstk_darwin(v16);
  v21 = (char *)&v57 - v20;
  v22 = __chkstk_darwin(v19);
  v24 = (char *)&v57 - v23;
  __chkstk_darwin(v22);
  v26 = (char *)&v57 - v25;
  v27 = *a1;
  v28 = a1[1];
  v29 = *a2;
  v30 = a2[1];
  v36 = *a1 == *a2;
  v62 = v4;
  if (v36 && v28 == v30)
  {
    sub_1002228DC((uint64_t)a1, (uint64_t)&v57 - v25);
    sub_1002228DC((uint64_t)a2, (uint64_t)v24);
  }
  else
  {
    v31 = _stringCompareWithSmolCheck(_:_:expecting:)(v27, v28, v29, v30, 0);
    sub_1002228DC((uint64_t)a1, (uint64_t)v26);
    sub_1002228DC((uint64_t)a2, (uint64_t)v24);
    if ((v31 & 1) == 0)
    {
      sub_100222920((uint64_t)v26);
      sub_100222920((uint64_t)v24);
      sub_1002228DC((uint64_t)a1, (uint64_t)v21);
      sub_1002228DC((uint64_t)a2, (uint64_t)v18);
LABEL_18:
      sub_100222920((uint64_t)v18);
      sub_100222920((uint64_t)v21);
LABEL_26:
      sub_1002228DC((uint64_t)a1, (uint64_t)v15);
      sub_1002228DC((uint64_t)a2, (uint64_t)v12);
LABEL_27:
      sub_100222920((uint64_t)v12);
      sub_100222920((uint64_t)v15);
LABEL_28:
      v51 = 0;
      return v51 & 1;
    }
  }
  v32 = *((_QWORD *)v26 + 2);
  v33 = *((_QWORD *)v26 + 3);
  v34 = *((_QWORD *)v24 + 2);
  v35 = *((_QWORD *)v24 + 3);
  v36 = v32 == v34 && v33 == v35;
  if (v36)
  {
    sub_100222920((uint64_t)v26);
    sub_100222920((uint64_t)v24);
    sub_1002228DC((uint64_t)a1, (uint64_t)v21);
    sub_1002228DC((uint64_t)a2, (uint64_t)v18);
  }
  else
  {
    v37 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v33, v34, v35, 0);
    sub_100222920((uint64_t)v26);
    sub_100222920((uint64_t)v24);
    sub_1002228DC((uint64_t)a1, (uint64_t)v21);
    sub_1002228DC((uint64_t)a2, (uint64_t)v18);
    if ((v37 & 1) == 0)
      goto LABEL_18;
  }
  v38 = (void *)*((_QWORD *)v21 + 4);
  v39 = (void *)*((_QWORD *)v18 + 4);
  if (!v38)
  {
    v43 = v39;
    sub_100222920((uint64_t)v18);
    sub_100222920((uint64_t)v21);
    if (!v39)
    {
      sub_1002228DC((uint64_t)a1, (uint64_t)v15);
      sub_1002228DC((uint64_t)a2, (uint64_t)v12);
      goto LABEL_21;
    }
LABEL_25:

    goto LABEL_26;
  }
  if (!v39)
  {
    v43 = v38;
    sub_100222920((uint64_t)v18);
    sub_100222920((uint64_t)v21);
    goto LABEL_25;
  }
  sub_10011D1D8();
  v40 = v39;
  v41 = v38;
  v42 = static NSObject.== infix(_:_:)(v41, v40);
  sub_100222920((uint64_t)v18);
  sub_100222920((uint64_t)v21);

  sub_1002228DC((uint64_t)a1, (uint64_t)v15);
  sub_1002228DC((uint64_t)a2, (uint64_t)v12);
  if ((v42 & 1) == 0)
    goto LABEL_27;
LABEL_21:
  v44 = *(int *)(v9 + 28);
  v45 = (uint64_t)&v12[v44];
  v46 = v61;
  v47 = v61 + *(int *)(v59 + 48);
  sub_10022194C((uint64_t)&v15[v44], v61);
  sub_10022194C(v45, v47);
  v48 = v60;
  v49 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48);
  v50 = v62;
  if (v49(v46, 1, v62) != 1)
  {
    v53 = v58;
    sub_10022194C(v46, v58);
    if (v49(v47, 1, v50) != 1)
    {
      v54 = v57;
      (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v57, v47, v50);
      v55 = sub_100008000((unint64_t *)&qword_1005D3438, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
      v51 = dispatch thunk of static Equatable.== infix(_:_:)(v53, v54, v50, v55);
      v56 = *(void (**)(char *, uint64_t))(v48 + 8);
      v56(v54, v50);
      sub_100222920((uint64_t)v12);
      sub_100222920((uint64_t)v15);
      v56((char *)v53, v50);
      sub_1000051EC(v46, (uint64_t *)&unk_1005D3320);
      return v51 & 1;
    }
    sub_100222920((uint64_t)v12);
    sub_100222920((uint64_t)v15);
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v53, v50);
    goto LABEL_32;
  }
  sub_100222920((uint64_t)v12);
  sub_100222920((uint64_t)v15);
  if (v49(v47, 1, v50) != 1)
  {
LABEL_32:
    sub_1000051EC(v46, &qword_1005D3430);
    goto LABEL_28;
  }
  sub_1000051EC(v46, (uint64_t *)&unk_1005D3320);
  v51 = 1;
  return v51 & 1;
}

uint64_t sub_100222130()
{
  return sub_100008000(&qword_1005DBDD0, type metadata accessor for FMItemShareViewModel, (uint64_t)&protocol conformance descriptor for FMItemShareViewModel);
}

uint64_t *initializeBufferWithCopyOfBuffer for FMItemShareViewModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v16 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v16 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain(v16);
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = (void *)a2[4];
    v8 = *(int *)(a3 + 28);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    a1[4] = (uint64_t)v7;
    v11 = type metadata accessor for Date(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain(v5);
    swift_bridgeObjectRetain(v6);
    v14 = v7;
    if (v13(v10, 1, v11))
    {
      v15 = sub_100053F2C((uint64_t *)&unk_1005D3320);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return v3;
}

uint64_t destroy for FMItemShareViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));

  v4 = a1 + *(int *)(a2 + 28);
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *initializeWithCopy for FMItemShareViewModel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  id v13;
  uint64_t v14;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = (void *)a2[4];
  a1[4] = v6;
  v7 = *(int *)(a3 + 28);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Date(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  v13 = v6;
  if (v12(v9, 1, v10))
  {
    v14 = sub_100053F2C((uint64_t *)&unk_1005D3320);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

_QWORD *assignWithCopy for FMItemShareViewModel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;

  *a1 = *a2;
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  a1[2] = a2[2];
  v8 = a2[3];
  v9 = a1[3];
  a1[3] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = (void *)a1[4];
  v11 = (void *)a2[4];
  a1[4] = v11;
  v12 = v11;

  v13 = *(int *)(a3 + 28);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Date(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 24))(v14, v15, v16);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    v21 = sub_100053F2C((uint64_t *)&unk_1005D3320);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  return a1;
}

uint64_t initializeWithTake for FMItemShareViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(int *)(a3 + 28);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    v10 = sub_100053F2C((uint64_t *)&unk_1005D3320);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

_QWORD *assignWithTake for FMItemShareViewModel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;

  v6 = a2[1];
  v7 = a1[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease(v7);
  v8 = a2[3];
  v9 = a1[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_bridgeObjectRelease(v9);
  v10 = (void *)a1[4];
  a1[4] = a2[4];

  v11 = *(int *)(a3 + 28);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Date(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v12, v13, v14);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v19 = sub_100053F2C((uint64_t *)&unk_1005D3320);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMItemShareViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100222758);
}

uint64_t sub_100222758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100053F2C((uint64_t *)&unk_1005D3320);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for FMItemShareViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002227E4);
}

uint64_t sub_1002227E4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_100053F2C((uint64_t *)&unk_1005D3320);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

void sub_10022285C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = &unk_100488BA8;
  v4[1] = &unk_100488BA8;
  v4[2] = &unk_100488BC0;
  sub_10005F8A4(319);
  if (v3 <= 0x3F)
  {
    v4[3] = *(_QWORD *)(v2 - 8) + 64;
    swift_initStructMetadata(a1, 256, 4, v4, a1 + 16);
  }
}

uint64_t sub_1002228DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMItemShareViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100222920(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FMItemShareViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10022295C()
{
  void *v0;
  id v1;
  id v2;
  id v3;

  v0 = (void *)objc_opt_self(NSURLSessionConfiguration);
  v1 = objc_msgSend(v0, "defaultSessionConfiguration");
  objc_msgSend(v1, "setHTTPShouldUsePipelining:", 1);
  v2 = objc_msgSend(v0, "defaultSessionConfiguration");
  v3 = objc_msgSend((id)objc_opt_self(NSURLSession), "sessionWithConfiguration:", v2);

  qword_1005DBE70 = (uint64_t)v3;
}

uint64_t sub_100222A04()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1[8] = v0;
  v2 = type metadata accessor for URL(0);
  v1[9] = v2;
  v3 = *(_QWORD *)(v2 - 8);
  v1[10] = v3;
  v1[11] = swift_task_alloc((*(_QWORD *)(v3 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for URLRequest(0);
  v1[12] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v1[13] = v5;
  v6 = (*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v1[14] = swift_task_alloc(v6);
  v1[15] = swift_task_alloc(v6);
  return swift_task_switch(sub_100222A9C, 0, 0);
}

uint64_t sub_100222A9C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  if (qword_1005D1D18 != -1)
    swift_once(&qword_1005D1D18, sub_10022295C);
  v1 = v0[11];
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v0[10] + 16))(v1, v0[8] + qword_1005DBE78, v0[9]);
  URLRequest.init(url:cachePolicy:timeoutInterval:)(v1, 0, 60.0);
  v2 = (_QWORD *)swift_task_alloc(async function pointer to NSURLSession.data(for:delegate:)[1]);
  v0[16] = v2;
  *v2 = v0;
  v2[1] = sub_100222B64;
  return NSURLSession.data(for:delegate:)(v0[15], 0);
}

uint64_t sub_100222B64(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t (*v8)();

  v6 = (_QWORD *)*v4;
  v6[2] = v4;
  v6[3] = a1;
  v6[4] = a2;
  v6[5] = a3;
  v6[6] = v3;
  v7 = v6[16];
  v6[17] = v3;
  swift_task_dealloc(v7);
  if (v3)
  {
    v8 = sub_100222E34;
  }
  else
  {

    v8 = sub_100222BDC;
  }
  return swift_task_switch(v8, 0, 0);
}

uint64_t sub_100222BDC()
{
  uint64_t v0;
  uint64_t v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  Swift::String v10;
  unint64_t v11;
  Swift::String v12;
  void *object;
  Swift::String v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v23[3];

  v1 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 16))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96));
  v2 = static os_log_type_t.default.getter(v1);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_100056D88(v3, (uint64_t)qword_1005F5748);
  v5 = Logger.logObject.getter(v4);
  v6 = v2;
  if (os_log_type_enabled(v5, v2))
  {
    v7 = *(_QWORD *)(v0 + 96);
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    *(_DWORD *)v8 = 136315138;
    v23[0] = v9;
    v23[1] = 0;
    v23[2] = 0xE000000000000000;
    _StringGuts.grow(_:)(44);
    v10._object = (void *)0x80000001004B62F0;
    v10._countAndFlagsBits = 0xD00000000000002ALL;
    String.append(_:)(v10);
    v11 = sub_100223208();
    v12._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v7, v11);
    object = v12._object;
    String.append(_:)(v12);
    swift_bridgeObjectRelease(object);
    v14._countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    String.append(_:)(v14);
    *(_QWORD *)(v0 + 56) = sub_100056DA0(0, 0xE000000000000000, v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 56, v0 + 64);
    swift_bridgeObjectRelease(0xE000000000000000);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "FMDiscoveredAccessoryImageDownloadOperation: %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }

  v16 = *(_QWORD *)(v0 + 24);
  v15 = *(_QWORD *)(v0 + 32);
  v18 = *(_QWORD *)(v0 + 112);
  v17 = *(_QWORD *)(v0 + 120);
  v19 = *(_QWORD *)(v0 + 96);
  v20 = *(_QWORD *)(v0 + 88);
  v21 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 104) + 8);
  v21(v18, v19);
  v21(v17, v19);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v16, v15);
}

uint64_t sub_100222E34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 88);
  v7 = swift_errorRetain(v1);
  v8 = static os_log_type_t.default.getter(v7);
  sub_100223000(v8, v1);
  v9 = swift_errorRelease(v1);
  swift_willThrow(v9);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100222ED0()
{
  _swift_stdlib_reportUnimplementedInitializer("FindMy.FMAccessoryProductImageDownloadOperation", 47, "init()", 6, 0);
  __break(1u);
}

uint64_t sub_100222EFC()
{
  uint64_t v0;

  return sub_1000ABAB8(v0 + qword_1005DBE78);
}

id sub_100222F0C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMAccessoryProductImageDownloadOperation(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100222F40(uint64_t a1)
{
  return sub_1000ABAB8(a1 + qword_1005DBE78);
}

uint64_t sub_100222F50(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  *(_QWORD *)(v1 + 16) = a1;
  v2 = (_QWORD *)swift_task_alloc(dword_1005DBFF4);
  *(_QWORD *)(v1 + 24) = v2;
  *v2 = v1;
  v2[1] = sub_100222F98;
  return sub_100222A04();
}

uint64_t sub_100222F98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v6 = *v3;
  v7 = *(_QWORD *)(*v3 + 24);
  v8 = *v3;
  swift_task_dealloc(v7);
  if (!v2)
  {
    v9 = *(_QWORD **)(v6 + 16);
    *v9 = a1;
    v9[1] = a2;
  }
  return (*(uint64_t (**)(void))(v8 + 8))();
}

uint64_t sub_100222FF8()
{
  return type metadata accessor for FMAccessoryProductImageDownloadOperation(0);
}

void sub_100223000(os_log_type_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  Swift::String v9;
  uint64_t v10;
  Swift::String v11;
  unint64_t v12;
  NSObject *log;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100056D88(v4, (uint64_t)qword_1005F5748);
  v6 = a1;
  log = Logger.logObject.getter(v5);
  if (os_log_type_enabled(log, a1))
  {
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    *(_DWORD *)v7 = 136315138;
    v15 = 0;
    v16 = 0xE000000000000000;
    v17 = v8;
    _StringGuts.grow(_:)(41);
    v9._object = (void *)0x80000001004B6320;
    v9._countAndFlagsBits = 0xD000000000000027;
    String.append(_:)(v9);
    v14 = a2;
    v10 = sub_100053F2C((uint64_t *)&unk_1005D2AC0);
    _print_unlocked<A, B>(_:_:)(&v14, &v15, v10, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v11._countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    String.append(_:)(v11);
    v12 = v16;
    v15 = sub_100056DA0(v15, v16, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16);
    swift_bridgeObjectRelease(v12);
    _os_log_impl((void *)&_mh_execute_header, log, v6, "FMDiscoveredAccessoryImageDownloadOperation: %s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

  }
  else
  {

  }
}

unint64_t sub_100223208()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005DBFF8;
  if (!qword_1005DBFF8)
  {
    v1 = type metadata accessor for URLRequest(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for URLRequest, v1);
    atomic_store(result, (unint64_t *)&qword_1005DBFF8);
  }
  return result;
}

char *sub_100223250()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  char *v9;
  double v10;
  id v11;
  void *v12;
  id v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  id v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;
  uint64_t v22;
  unint64_t v23;
  Swift::String v24;
  Swift::String v25;

  v1 = sub_100053F2C((uint64_t *)&unk_1005E4430);
  __chkstk_darwin(v1);
  v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = &v0[OBJC_IVAR____TtC6FindMy22FMDeviceMarkAsLostView_delegate];
  *((_QWORD *)v4 + 1) = 0;
  swift_unknownObjectWeakInit(v4);
  v5 = OBJC_IVAR____TtC6FindMy22FMDeviceMarkAsLostView_lostStatusRow;
  v6 = type metadata accessor for FMPlatterIcon(0);
  v7 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
  v7(v3, 1, 1, v6);
  v8 = qword_1005D1E80;
  v9 = v0;
  if (v8 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v10 = *(double *)&qword_1005F5978;
  v11 = objc_allocWithZone((Class)type metadata accessor for FMMultiSettingsRowView());
  *(_QWORD *)&v9[v5] = sub_100430344(0, 0, 0, (uint64_t)v3, 1, 0, 1, v10);

  v22 = 0;
  v23 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v23);
  v12 = (void *)objc_opt_self(NSBundle);
  v13 = objc_msgSend(v12, "mainBundle");
  v14._countAndFlagsBits = 0xD000000000000024;
  v24._countAndFlagsBits = 0xD000000000000036;
  v24._object = (void *)0x80000001004B6400;
  v14._object = (void *)0x80000001004B63D0;
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, (NSBundle)v13, v15, v24);

  swift_storeEnumTagMultiPayload(v3, v6, 12);
  v7(v3, 0, 1, v6);
  v22 = 0;
  v23 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v17 = objc_msgSend(v12, "mainBundle", swift_bridgeObjectRelease(v23).n128_f64[0]);
  v25._countAndFlagsBits = 0xD000000000000032;
  v25._object = (void *)0x80000001004AAB10;
  v18._object = (void *)0x80000001004AAAE0;
  v18._countAndFlagsBits = 0xD000000000000020;
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v25);

  return sub_1003A4038(v16._countAndFlagsBits, (uint64_t)v16._object, 0, 0, (uint64_t)v3, v20._countAndFlagsBits, (uint64_t)v20._object, 0, 0, 0, 0);
}

void sub_100223540()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "handleStatusRowTap");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy22FMDeviceMarkAsLostView_lostStatusRow), "addGestureRecognizer:", v1);

}

void sub_1002235AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  int v20;
  id v21;
  char *v22;
  Swift::String v23;
  Swift::String v24;
  Swift::String v25;
  void *object;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  Class isa;
  id v36;
  unint64_t v37;
  int v38;
  double v39;
  id v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  double v44;
  Swift::String v45;
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t *v51;
  uint64_t v52;
  char *v53;
  void *v54;
  uint64_t v55;
  id v56;
  double v57;
  NSString v58;
  double v59;
  Swift::String v60;
  Swift::String v61;
  Swift::String v62;
  char *v63;
  uint64_t *v64;
  uint64_t v65;
  char *v66;
  void *v67;
  uint64_t v68;
  id v69;
  double v70;
  NSString v71;
  void *v72;
  void *v73;
  id v74;
  id v75;
  void *v76;
  void *v77;
  id v78;
  id v79;
  uint64_t v80;
  id v81;
  id v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t countAndFlagsBits;
  unint64_t v87;
  char *v88;
  id v89;
  int v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  Swift::String v96;
  Swift::String v97;

  v2 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  __chkstk_darwin(v2);
  v4 = (char *)&v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v88 = (char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FMDeviceDetailViewModel(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v84 - v13;
  v15 = *(int *)(v12 + 92);
  v16 = *(_QWORD *)(a1 + v15);
  sub_1002240EC(a1, (uint64_t)&v84 - v13);
  if ((v16 & 0x10) != 0)
    v17 = 1;
  else
    v17 = (v14[*(int *)(v8 + 92)] >> 6) & 1;
  sub_100224130((uint64_t)v14);
  v18 = *(_QWORD *)(a1 + v15);
  sub_1002240EC(a1, (uint64_t)v11);
  if ((v18 & 0x20) != 0)
    v19 = 1;
  else
    v19 = v11[*(int *)(v8 + 92)] >> 7;
  sub_100224130((uint64_t)v11);
  v87 = *(_QWORD *)(a1 + v15);
  v91 = (v87 >> 9) & 1;
  v92 = v19;
  v90 = v17 | v19;
  v20 = v17;
  v94 = 0;
  v95 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v95);
  v89 = (id)objc_opt_self(NSBundle);
  v21 = objc_msgSend(v89, "mainBundle");
  v96._countAndFlagsBits = 0xD000000000000033;
  v22 = "RK_LOST_ACTIVATED";
  v96._object = (void *)0x80000001004B6470;
  v23._object = (void *)0x80000001004B6440;
  v23._countAndFlagsBits = 0xD000000000000021;
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v23, (Swift::String_optional)0, (NSBundle)v21, v24, v96);
  countAndFlagsBits = v25._countAndFlagsBits;
  object = v25._object;

  sub_10022194C(a1 + *(int *)(v8 + 132), (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1000A5E24((uint64_t)v4);
    v27 = 0;
    v28 = 0xE000000000000000;
  }
  else
  {
    v85 = "RK_LOST_ACTIVATED";
    v29 = v88;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v88, v4, v5);
    v30 = (void *)qword_1005F5ED0;
    if (qword_1005F5ED0)
    {
      v31 = (id)qword_1005F5ED0;
    }
    else
    {
      v32 = objc_msgSend(objc_allocWithZone((Class)FMRelativeDateFormatter), "init");
      objc_msgSend(v32, "setFormattingContext:", 2);
      v33 = (void *)qword_1005F5ED0;
      qword_1005F5ED0 = (uint64_t)v32;
      v31 = v32;

      v30 = 0;
    }
    v34 = v30;
    isa = Date._bridgeToObjectiveC()().super.isa;
    v36 = objc_msgSend(v31, "stringFromDate:", isa);

    v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v36);
    v28 = v37;

    (*(void (**)(char *, uint64_t))(v6 + 8))(v29, v5);
    v22 = v85;
  }
  v38 = v90 | v91;
  if (v20)
  {
    swift_bridgeObjectRelease(v25._object);
    v94 = 0;
    v95 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    *(_QWORD *)&v39 = swift_bridgeObjectRelease(v95).n128_u64[0];
    v40 = objc_msgSend(v89, "mainBundle", v39);
    v41 = 0xD000000000000033;
    v83 = (unint64_t)v22 | 0x8000000000000000;
    v42 = 0x80000001004B6440;
    v43 = 0xD000000000000021;
LABEL_17:
    v45._countAndFlagsBits = 0;
    v45._object = (void *)0xE000000000000000;
    v46 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v43, (Swift::String_optional)0, (NSBundle)v40, v45, *(Swift::String *)&v41);
    v47 = v46._countAndFlagsBits;
    object = v46._object;
    v48 = v93;
    goto LABEL_18;
  }
  if (v92)
  {
    swift_bridgeObjectRelease(v25._object);
    v94 = 0;
    v95 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    *(_QWORD *)&v44 = swift_bridgeObjectRelease(v95).n128_u64[0];
    v40 = objc_msgSend(v89, "mainBundle", v44);
    v43 = 0xD00000000000001FLL;
    v41 = 0xD000000000000031;
    v83 = 0x80000001004B6540;
    v42 = 0x80000001004B6520;
    goto LABEL_17;
  }
  v48 = v93;
  if ((v87 & 0x200) == 0)
  {
    v47 = countAndFlagsBits;
    if (__PAIR64__(v91, v90))
      goto LABEL_19;
LABEL_29:
    swift_bridgeObjectRelease(object);
    objc_msgSend(*(id *)(v48 + OBJC_IVAR____TtC6FindMy22FMDeviceMarkAsLostView_lostStatusRow), "removeFromSuperview", swift_bridgeObjectRelease(v28).n128_f64[0]);
    *(_BYTE *)(v48 + OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isActionButtonHidden) = 0;
    goto LABEL_30;
  }
  swift_bridgeObjectRelease(v25._object);
  v94 = 0;
  v95 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  *(_QWORD *)&v59 = swift_bridgeObjectRelease(v95).n128_u64[0];
  v40 = objc_msgSend(v89, "mainBundle", v59);
  v60._countAndFlagsBits = 0xD000000000000024;
  v97._countAndFlagsBits = 0xD000000000000036;
  v97._object = (void *)0x80000001004B64E0;
  v60._object = (void *)0x80000001004B64B0;
  v61._countAndFlagsBits = 0;
  v61._object = (void *)0xE000000000000000;
  v62 = NSLocalizedString(_:tableName:bundle:value:comment:)(v60, (Swift::String_optional)0, (NSBundle)v40, v61, v97);
  v47 = v62._countAndFlagsBits;
  object = v62._object;
LABEL_18:

  if (!v38)
    goto LABEL_29;
LABEL_19:
  v49 = OBJC_IVAR____TtC6FindMy22FMDeviceMarkAsLostView_lostStatusRow;
  v50 = *(char **)(v48 + OBJC_IVAR____TtC6FindMy22FMDeviceMarkAsLostView_lostStatusRow);
  v51 = (uint64_t *)&v50[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_title];
  v52 = *(_QWORD *)&v50[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_title + 8];
  *v51 = v47;
  v51[1] = (uint64_t)object;
  v53 = v50;
  swift_bridgeObjectRelease(v52);
  v54 = *(void **)&v53[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_titleLabel];
  v55 = v51[1];
  v56 = v54;
  if (v55)
  {
    swift_bridgeObjectRetain(v55);
    v58 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v57 = swift_bridgeObjectRelease(v55).n128_u64[0];
  }
  else
  {
    v58 = 0;
  }
  objc_msgSend(v54, "setText:", v58, v57);

  v63 = *(char **)(v48 + v49);
  v64 = (uint64_t *)&v63[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitle];
  v65 = *(_QWORD *)&v63[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitle + 8];
  *v64 = v27;
  v64[1] = v28;
  v66 = v63;
  swift_bridgeObjectRelease(v65);
  v67 = *(void **)&v66[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_secondaryLabel];
  v68 = v64[1];
  v69 = v67;
  if (v68)
  {
    swift_bridgeObjectRetain(v68);
    v71 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v70 = swift_bridgeObjectRelease(v68).n128_u64[0];
  }
  else
  {
    v71 = 0;
  }
  objc_msgSend(v67, "setText:", v71, v70);

  v72 = *(void **)(*(_QWORD *)(v48 + v49) + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_secondaryLabel);
  v73 = (void *)objc_opt_self(UIFont);
  v74 = v72;
  v75 = objc_msgSend(v73, "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
  objc_msgSend(v74, "setFont:", v75);

  v76 = *(void **)(*(_QWORD *)(v48 + v49) + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_titleLabel);
  v77 = (void *)objc_opt_self(UIColor);
  v78 = v76;
  v79 = objc_msgSend(v77, "systemRedColor");
  objc_msgSend(v78, "setTextColor:", v79);

  v80 = *(_QWORD *)(v48 + v49);
  *(_BYTE *)(v80 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_separated) = 0;
  objc_msgSend(*(id *)(v80 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_separator), "setHidden:", 1);
  v81 = objc_msgSend(*(id *)(*(_QWORD *)(v48 + v49) + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_backgroundView), "layer");
  objc_msgSend(v81, "setCornerRadius:", _UISheetCornerRadius);

  v82 = objc_msgSend(*(id *)(*(_QWORD *)(v48 + v49) + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_backgroundView), "layer");
  objc_msgSend(v82, "setMaskedCorners:", 12);

  objc_msgSend(*(id *)(v48 + OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_contentStackView), "addArrangedSubview:", *(_QWORD *)(v48 + v49));
  *(_BYTE *)(v48 + OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isActionButtonHidden) = 1;
LABEL_30:
  sub_1003A66DC();
}

uint64_t sub_100223DF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];

  v1 = v0;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100056D88(v2, (uint64_t)qword_1005F5748);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMDeviceMarkAsLostview: User pressed activate notify me", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  result = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC6FindMy22FMDeviceMarkAsLostView_delegate);
  if (result)
  {
    v8 = result;
    v9 = *(_QWORD *)(result + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource)
       + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
    swift_beginAccess(v9, v10, 0, 0);
    if ((*(_BYTE *)(v9 + *(int *)(type metadata accessor for FMDeviceDetailViewModel(0) + 88)) & 4) != 0)
      sub_1001BC364();
    else
      sub_1001BBF2C();
    return swift_unknownObjectRelease(v8);
  }
  return result;
}

uint64_t sub_100223F70()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  _BYTE v4[24];

  result = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC6FindMy22FMDeviceMarkAsLostView_delegate);
  if (result)
  {
    v2 = result;
    v3 = *(_QWORD *)(result + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_dataSource)
       + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
    swift_beginAccess(v3, v4, 0, 0);
    if ((*(_BYTE *)(v3 + *(int *)(type metadata accessor for FMDeviceDetailViewModel(0) + 88)) & 4) != 0)
      sub_1001BC364();
    else
      sub_1001BBF2C();
    return swift_unknownObjectRelease(v2);
  }
  return result;
}

void sub_100224038()
{
  uint64_t v0;

  sub_10005E190(v0 + OBJC_IVAR____TtC6FindMy22FMDeviceMarkAsLostView_delegate);

}

id sub_100224064()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMDeviceMarkAsLostView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMDeviceMarkAsLostView()
{
  return objc_opt_self(_TtC6FindMy22FMDeviceMarkAsLostView);
}

uint64_t sub_1002240EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMDeviceDetailViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100224130(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FMDeviceDetailViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10022416C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  id v9;
  uint64_t v10;

  v1 = v0;
  v2 = sub_100053F2C((uint64_t *)&unk_1005E4430);
  __chkstk_darwin(v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = &v1[OBJC_IVAR____TtC6FindMy22FMDeviceMarkAsLostView_delegate];
  *((_QWORD *)v5 + 1) = 0;
  swift_unknownObjectWeakInit(v5);
  v6 = OBJC_IVAR____TtC6FindMy22FMDeviceMarkAsLostView_lostStatusRow;
  v7 = type metadata accessor for FMPlatterIcon(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 1, 1, v7);
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v8 = *(double *)&qword_1005F5978;
  v9 = objc_allocWithZone((Class)type metadata accessor for FMMultiSettingsRowView());
  *(_QWORD *)&v1[v6] = sub_100430344(0, 0, 0, (uint64_t)v4, 1, 0, 1, v8);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMDeviceMarkAsLostView.swift", 35, 2, 36, 0);
  __break(1u);
}

unint64_t sub_100224310(void *a1)
{
  char *v1;
  void *v2;
  NSString v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  NSString v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  unint64_t result;
  id v32;
  void *v33;
  void *v34;
  id v35;
  uint64_t v36;
  NSString v37;
  id v38;
  NSString v39;
  id v40;
  void *v41;
  id v42;
  void *v43;
  id v44;
  void *v45;
  id v46;
  id v47;
  id v48;
  id v49;
  unint64_t v50;
  unint64_t v51;
  NSString v52;
  id v53;
  void *v54;
  NSString v55;
  id v56;

  v2 = v1;
  if (IndexPath.row.getter(a1))
    goto LABEL_2;
  v23 = objc_msgSend(v1, "navigationItem");
  v24 = (uint64_t)objc_msgSend(v23, "searchController");

  if (v24)
  {
    v25 = objc_msgSend((id)v24, "searchBar");

    v26 = objc_msgSend(v25, "text");
    if (v26)
    {
      v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v26);
      v28 = v27;

      goto LABEL_27;
    }
    v24 = 0;
  }
  v28 = 0xE000000000000000;
LABEL_27:
  swift_bridgeObjectRelease(v28);
  v36 = HIBYTE(v28) & 0xF;
  if ((v28 & 0x2000000000000000) == 0)
    v36 = v24 & 0xFFFFFFFFFFFFLL;
  if (v36)
  {
    v37 = String._bridgeToObjectiveC()();
    v8 = (char *)objc_msgSend(a1, "dequeueReusableCellWithIdentifier:", v37);

    if (!v8)
    {
      v38 = objc_allocWithZone((Class)UITableViewCell);
      v39 = String._bridgeToObjectiveC()();
      v8 = (char *)objc_msgSend(v38, "initWithStyle:reuseIdentifier:", 0, v39);

    }
    v40 = objc_msgSend(v8, "textLabel");
    if (v40)
    {
      v41 = v40;
      objc_msgSend(v40, "setText:", 0);

    }
    v42 = objc_msgSend(v8, "detailTextLabel");
    if (v42)
    {
      v43 = v42;
      objc_msgSend(v42, "setText:", 0);

    }
    objc_msgSend(v8, "setAccessoryView:", 0);
    v44 = objc_msgSend(v8, "textLabel");
    if (v44)
    {
      v45 = v44;
      v46 = objc_msgSend(v2, "navigationItem");
      v47 = objc_msgSend(v46, "searchController");

      if (v47
        && (v48 = objc_msgSend(v47, "searchBar"),
            v47,
            v49 = objc_msgSend(v48, "text"),
            v48,
            v49))
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
        v51 = v50;

      }
      else
      {
        v51 = 0xE000000000000000;
      }
      v52 = String._bridgeToObjectiveC()();
      objc_msgSend(v45, "setText:", v52, swift_bridgeObjectRelease(v51).n128_f64[0]);

    }
    v53 = objc_msgSend(v8, "imageView");
    if (v53)
    {
      v54 = v53;
      v55 = String._bridgeToObjectiveC()();
      v56 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v55);

      objc_msgSend(v54, "setImage:", v56);
    }
    return (unint64_t)v8;
  }
LABEL_2:
  v4 = String._bridgeToObjectiveC()();
  v5 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:", v4);

  if (!v5)
  {
LABEL_5:
    v9 = objc_allocWithZone((Class)type metadata accessor for FMFenceMapTableViewCell());
    v10 = String._bridgeToObjectiveC()();
    v8 = (char *)objc_msgSend(v9, "initWithStyle:reuseIdentifier:", 3, v10);

    goto LABEL_6;
  }
  v6 = type metadata accessor for FMFenceMapTableViewCell();
  v7 = swift_dynamicCastClass(v5, v6);
  v8 = (char *)v7;
  if (!v7)
  {

    goto LABEL_5;
  }
LABEL_6:
  v11 = objc_msgSend(v1, "tableView:numberOfRowsInSection:", a1, IndexPath.section.getter(v7));
  if (IndexPath.row.getter(v11) >= (uint64_t)v11
    || (v12 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_filteredSearchRecords]) == 0)
  {
    v22 = *(void **)&v8[OBJC_IVAR____TtC6FindMy23FMFenceMapTableViewCell_record];
    *(_QWORD *)&v8[OBJC_IVAR____TtC6FindMy23FMFenceMapTableViewCell_record] = 0;

    sub_100337258();
    return (unint64_t)v8;
  }
  swift_bridgeObjectRetain(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_filteredSearchRecords]);
  v14 = IndexPath.row.getter(v13);
  v15 = objc_msgSend(v2, "navigationItem");
  v16 = objc_msgSend(v15, "searchController");

  if (v16)
  {
    v17 = objc_msgSend(v16, "searchBar");

    v18 = objc_msgSend(v17, "text");
    if (v18)
    {
      v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
      v21 = v20;

      v18 = (id)(v19 & 0xFFFFFFFFFFFFLL);
      goto LABEL_17;
    }
  }
  else
  {
    v18 = 0;
  }
  v21 = 0xE000000000000000;
LABEL_17:
  swift_bridgeObjectRelease(v21);
  v29 = HIBYTE(v21) & 0xF;
  if ((v21 & 0x2000000000000000) == 0)
    v29 = (uint64_t)v18;
  v30 = v29 != 0;
  result = v14 - v30;
  if (__OFSUB__(v14, v30))
  {
    __break(1u);
    goto LABEL_46;
  }
  if ((v12 & 0xC000000000000001) != 0)
  {
LABEL_46:
    v32 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(result, v12);
    goto LABEL_24;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v32 = *(id *)(v12 + 8 * result + 32);
LABEL_24:
    v33 = v32;
    swift_bridgeObjectRelease(v12);
    v34 = *(void **)&v8[OBJC_IVAR____TtC6FindMy23FMFenceMapTableViewCell_record];
    *(_QWORD *)&v8[OBJC_IVAR____TtC6FindMy23FMFenceMapTableViewCell_record] = v33;
    v35 = v33;

    sub_100337258();
    return (unint64_t)v8;
  }
  __break(1u);
  return result;
}

void sub_100224A4C(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  SEL *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  unint64_t v34;
  unint64_t v35;
  double v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BOOL8 v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  void **v56;
  unint64_t v57;
  void **v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  void *v65;
  char *v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char *v70;
  uint64_t v71;
  void *v72;
  _QWORD *v73;
  void *v74;
  id v75;
  Swift::String v76;
  Swift::String v77;
  void *object;
  NSString v79;
  __n128 v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  void **aBlock;
  unint64_t v97;
  uint64_t (*v98)(uint64_t);
  void *v99;
  void (*v100)();
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  Swift::String v104;

  v2 = v1;
  v4 = type metadata accessor for Logger(0);
  v94 = *(_QWORD *)(v4 - 8);
  v95 = v4;
  __chkstk_darwin(v4);
  v93 = (char *)&v87 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v92 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v90 = *(_QWORD *)(v9 - 8);
  v91 = v9;
  __chkstk_darwin(v9);
  v89 = (char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)type metadata accessor for FMFLocationAlertAddressType(0);
  v12 = *(v11 - 1);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v87 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = IndexPath.row.getter(v13);
  v17 = (SEL *)&selRef_viewWillAppear_;
  if (v16)
    goto LABEL_2;
  v88 = v7;
  v29 = v6;
  v30 = objc_msgSend(v1, "navigationItem");
  v31 = (uint64_t)objc_msgSend(v30, "searchController");

  if (v31)
  {
    v32 = objc_msgSend((id)v31, "searchBar");

    v33 = objc_msgSend(v32, "text");
    if (v33)
    {
      v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
      v35 = v34;

      goto LABEL_13;
    }
    v31 = 0;
  }
  v35 = 0xE000000000000000;
LABEL_13:
  v17 = (SEL *)&selRef_viewWillAppear_;
  *(_QWORD *)&v36 = swift_bridgeObjectRelease(v35).n128_u64[0];
  v37 = HIBYTE(v35) & 0xF;
  if ((v35 & 0x2000000000000000) == 0)
    v37 = v31 & 0xFFFFFFFFFFFFLL;
  v6 = v29;
  v7 = v88;
  if (v37)
  {
    v38 = objc_msgSend(v1, "navigationItem", v36);
    v39 = objc_msgSend(v38, "searchController");

    if (v39)
    {
      v40 = objc_msgSend(v39, "searchBar");

      v41 = objc_msgSend(v40, "text");
      if (v41)
      {
        v39 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)(v41);
        v43 = v42;

LABEL_38:
        (*(void (**)(char *, _QWORD, _QWORD *))(v12 + 104))(v15, enum case for FMFLocationAlertAddressType.custom(_:), v11);
        sub_1003B8894((uint64_t)v39, v43, (uint64_t)v15, 1);
        v80 = swift_bridgeObjectRelease(v43);
        (*(void (**)(char *, _QWORD *, __n128))(v12 + 8))(v15, v11, v80);
        goto LABEL_39;
      }
      v39 = 0;
    }
    v43 = 0xE000000000000000;
    goto LABEL_38;
  }
LABEL_2:
  v18 = objc_msgSend(v1, "tableView:numberOfRowsInSection:", a1, IndexPath.section.getter(v16));
  if (IndexPath.row.getter(v18) >= (uint64_t)v18)
    goto LABEL_39;
  v19 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_filteredSearchRecords];
  if (!v19)
    goto LABEL_39;
  v88 = v6;
  swift_bridgeObjectRetain(v19);
  v21 = IndexPath.row.getter(v20);
  v22 = objc_msgSend(v2, "navigationItem");
  v23 = objc_msgSend(v22, "searchController");

  if (v23)
  {
    v24 = objc_msgSend(v23, "searchBar");

    v25 = objc_msgSend(v24, "text");
    if (v25)
    {
      v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
      v28 = v27;

      v25 = (id)(v26 & 0xFFFFFFFFFFFFLL);
    }
    else
    {
      v28 = 0xE000000000000000;
    }
  }
  else
  {
    v25 = 0;
    v28 = 0xE000000000000000;
  }
  swift_bridgeObjectRelease(v28);
  v44 = HIBYTE(v28) & 0xF;
  if ((v28 & 0x2000000000000000) == 0)
    v44 = (uint64_t)v25;
  v45 = v44 != 0;
  v46 = v21 - v45;
  if (__OFSUB__(v21, v45))
  {
    __break(1u);
  }
  else if ((v19 & 0xC000000000000001) == 0)
  {
    if ((v46 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v46 < *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v47 = *(id *)(v19 + 8 * v46 + 32);
      goto LABEL_27;
    }
    __break(1u);
    goto LABEL_49;
  }
  v47 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v46, v19);
LABEL_27:
  v11 = v47;
  swift_bridgeObjectRelease(v19);
  v48 = (_QWORD *)((char *)v11 + OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_coordinate);
  if ((*((_BYTE *)v11 + OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_coordinate + 16) & 1) != 0)
  {
    if (qword_1005D1DE8 == -1)
    {
LABEL_29:
      v49 = v95;
      v50 = sub_100056D88(v95, (uint64_t)qword_1005F5748);
      v52 = v93;
      v51 = v94;
      (*(void (**)(char *, uint64_t, uint64_t))(v94 + 16))(v93, v50, v49);
      v17 = v11;
      v53 = Logger.logObject.getter(v17);
      v54 = static os_log_type_t.default.getter(v53);
      if (os_log_type_enabled(v53, v54))
      {
        v55 = (uint8_t *)swift_slowAlloc(12, -1);
        v56 = (void **)swift_slowAlloc(32, -1);
        aBlock = v56;
        *(_DWORD *)v55 = 136315138;
        v57 = *(unint64_t *)((char *)v17 + OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_displayAddress + 8);
        if (!v57)
          goto LABEL_51;
        v58 = v56;
        v59 = *(uint64_t *)((char *)v17 + OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_displayAddress);
        swift_bridgeObjectRetain(*(SEL *)((char *)v17
                                        + OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_displayAddress
                                        + 8));
        v102 = (_QWORD *)sub_100056DA0(v59, v57, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v102, &v103);

        swift_bridgeObjectRelease(v57);
        _os_log_impl((void *)&_mh_execute_header, v53, v54, "FMFenceMapViewController: Failed to geocode address string: %s", v55, 0xCu);
        swift_arrayDestroy(v58, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v58, -1, -1);
        swift_slowDealloc(v55, -1, -1);

        (*(void (**)(char *, uint64_t))(v94 + 8))(v93, v95);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v49);
      }
      v74 = (void *)objc_opt_self(FMAddFriendsUtilities);
      aBlock = 0;
      v97 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(v97);
      v75 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v104._countAndFlagsBits = 0xD00000000000002CLL;
      v104._object = (void *)0x80000001004B65E0;
      v76._object = (void *)0x80000001004B65C0;
      v76._countAndFlagsBits = 0xD00000000000001ALL;
      v77._countAndFlagsBits = 0;
      v77._object = (void *)0xE000000000000000;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v76, (Swift::String_optional)0, (NSBundle)v75, v77, v104)._object;

      v79 = String._bridgeToObjectiveC()();
      objc_msgSend(v74, "showSimpleAlertWithTitle:message:sender:", v79, 0, v2, swift_bridgeObjectRelease(object).n128_f64[0]);

      goto LABEL_35;
    }
LABEL_49:
    swift_once(&qword_1005D1DE8, sub_100005ADC);
    goto LABEL_29;
  }
  v61 = *v48;
  v60 = v48[1];
  v95 = *(_QWORD *)((char *)v11 + OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_completedGeoWorkGroup);
  v62 = sub_1000555A8();
  v94 = static OS_dispatch_queue.main.getter(v62);
  v63 = swift_allocObject(&unk_100551DB8, 24, 7);
  swift_unknownObjectWeakInit(v63 + 16);
  v64 = (_QWORD *)swift_allocObject(&unk_100551DE0, 48, 7);
  v64[2] = v63;
  v64[3] = v61;
  v64[4] = v60;
  v64[5] = v11;
  v100 = sub_100225724;
  v101 = v64;
  aBlock = _NSConcreteStackBlock;
  v97 = 1107296256;
  v98 = sub_100037DF8;
  v99 = &unk_100551DF8;
  v65 = _Block_copy(&aBlock);
  swift_retain(v63);
  v93 = v11;
  v66 = v89;
  static DispatchQoS.unspecified.getter(v93);
  v102 = _swiftEmptyArrayStorage;
  v67 = sub_100056580();
  v68 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v69 = sub_1000555E4();
  v70 = v92;
  v71 = v88;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v102, v68, v69, v88, v67);
  v72 = (void *)v94;
  OS_dispatch_group.notify(qos:flags:queue:execute:)(v66, v70, v94, v65);
  _Block_release(v65);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v70, v71);
  (*(void (**)(char *, uint64_t))(v90 + 8))(v66, v91);

  v73 = v101;
  swift_release(v63);
  swift_release(v73);
LABEL_35:
  v17 = (SEL *)&selRef_viewWillAppear_;
LABEL_39:
  v81 = objc_msgSend(v2, v17[105]);
  v82 = objc_msgSend(v81, "searchController");

  if (v82)
  {
    v83 = objc_msgSend(v82, "searchBar");

    objc_msgSend(v83, "resignFirstResponder");
  }
  v84 = objc_msgSend(v2, v17[105]);
  v85 = objc_msgSend(v84, "searchController");

  if (v85)
  {
    objc_msgSend(v85, "setActive:", 0);

  }
  v86 = *(void **)&v2[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchResultsTableView];
  if (v86)
  {
    objc_msgSend(v86, "setHidden:", 1);
    return;
  }
  __break(1u);
LABEL_51:

  __break(1u);
}

void sub_1002253DC(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t Strong;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char *v25;
  _BYTE v27[24];
  _BYTE v28[24];
  _BYTE v29[24];

  v8 = sub_100053F2C(&qword_1005D3370);
  __chkstk_darwin(v8);
  v10 = &v27[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = sub_100053F2C(&qword_1005D3418);
  __chkstk_darwin(v11);
  v13 = &v27[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v29, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v15 = (void *)Strong;
    v16 = *(_QWORD *)(a2 + OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_labelLocalizedValue + 8);
    if (v16)
    {
      v17 = *(_QWORD *)(a2 + OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_labelLocalizedValue);
      v18 = *(_QWORD *)(a2 + OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_labelLocalizedValue + 8);
    }
    else
    {
      v17 = *(_QWORD *)(a2 + OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_title);
      v18 = *(_QWORD *)(a2 + OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_title + 8);
      swift_bridgeObjectRetain(v18);
    }
    v19 = a2 + OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_addressType;
    swift_beginAccess(a2 + OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_addressType, v28, 0, 0);
    sub_100007464(v19, (uint64_t)v13, &qword_1005D3418);
    v20 = type metadata accessor for FMFLocationAlertAddressType(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v13, 1, v20) == 1)
    {
      __break(1u);
    }
    else
    {
      v21 = a2 + OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_fmfPlacemark;
      swift_beginAccess(a2 + OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_fmfPlacemark, v27, 0, 0);
      sub_100007464(v21, (uint64_t)v10, &qword_1005D3370);
      v22 = a2 + OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_radius;
      v23 = *(_QWORD *)(a2 + OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_radius);
      v24 = *(_BYTE *)(v22 + 8);
      objc_allocWithZone((Class)type metadata accessor for FMFenceMapAnnotation(0));
      swift_bridgeObjectRetain(v16);
      v25 = sub_1003CBA64(v17, v18, 0, 0, 1, (uint64_t)v13, (uint64_t)v10, v23, a3, a4, v24);
      sub_1003AD2BC(v25);

    }
  }
}

uint64_t sub_1002256D4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002256F8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 48, 7);
}

void sub_100225724()
{
  uint64_t v0;

  sub_1002253DC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40), *(double *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t sub_100225734()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _BOOL8 v9;
  uint64_t result;
  uint64_t v11;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_filteredSearchRecords);
  if (v1)
  {
    if ((unint64_t)v1 >> 62)
      goto LABEL_15;
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  else
  {
    v2 = 0;
  }
  while (1)
  {
    v3 = objc_msgSend((id)v0, "navigationItem");
    v4 = objc_msgSend(v3, "searchController");

    if (v4)
    {
      v5 = objc_msgSend(v4, "searchBar");

      v1 = (uint64_t)objc_msgSend(v5, "text");
      if (v1)
      {
        v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
        v0 = v7;

        v1 = v6 & 0xFFFFFFFFFFFFLL;
        goto LABEL_10;
      }
    }
    else
    {
      v1 = 0;
    }
    v0 = 0xE000000000000000;
LABEL_10:
    swift_bridgeObjectRelease(v0);
    v8 = HIBYTE(v0) & 0xF;
    if ((v0 & 0x2000000000000000) == 0)
      v8 = v1;
    v9 = v8 != 0;
    result = v2 + v9;
    if (!__OFADD__(v2, v9))
      return result;
    __break(1u);
LABEL_15:
    if (v1 >= 0)
      v11 = v1 & 0xFFFFFFFFFFFFFF8;
    else
      v11 = v1;
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(v1);
  }
}

char *sub_100225878(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  id v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  objc_class *ObjCClassFromMetadata;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  char *v25;
  void *v26;
  char *v27;
  id v28;
  NSString v29;
  id v30;
  NSString v31;
  id v32;
  NSString v33;
  objc_super v35;

  v5 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryBackground;
  v6 = objc_allocWithZone((Class)UIVisualEffectView);
  v7 = v2;
  *(_QWORD *)&v2[v5] = objc_msgSend(v6, "init");
  v8 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primarySeperator;
  *(_QWORD *)&v7[v8] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v9 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollView;
  *(_QWORD *)&v7[v9] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMScrollView()), "init");
  v10 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryLabel;
  *(_QWORD *)&v7[v10] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v11 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_secondaryLabel;
  v12 = type metadata accessor for FMCopyableLabel();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v12);
  *(_QWORD *)&v7[v11] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v14 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_tertiaryLabel;
  *(_QWORD *)&v7[v14] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v15 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_actionBackground;
  *(_QWORD *)&v7[v15] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v16 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_tertiaryRowStackView;
  *(_QWORD *)&v7[v16] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v17 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_headerBackground;
  *(_QWORD *)&v7[v17] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v18 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_batteryIndicatorView;
  v19 = type metadata accessor for FMBatteryWrapperView();
  *(_QWORD *)&v7[v18] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v19)), "init");
  *(_QWORD *)&v7[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_secondaryLabelTopConstraint] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_locatingIndicatorHeightConstraint] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_batteryIndicatorHeightConstraint] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollViewBottomConstraint] = 0;
  v20 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_locatingIndicator;
  *(_QWORD *)&v7[v20] = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "init");
  v7[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_isLocating] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator] = a1;
  v21 = &v7[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_styleGuide];
  v22 = *(_OWORD *)(a2 + 80);
  *((_OWORD *)v21 + 4) = *(_OWORD *)(a2 + 64);
  *((_OWORD *)v21 + 5) = v22;
  *((_OWORD *)v21 + 6) = *(_OWORD *)(a2 + 96);
  *((_QWORD *)v21 + 14) = *(_QWORD *)(a2 + 112);
  v23 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v21 = *(_OWORD *)a2;
  *((_OWORD *)v21 + 1) = v23;
  v24 = *(_OWORD *)(a2 + 48);
  *((_OWORD *)v21 + 2) = *(_OWORD *)(a2 + 32);
  *((_OWORD *)v21 + 3) = v24;
  swift_retain(a1);

  v35.receiver = v7;
  v35.super_class = (Class)type metadata accessor for FMBaseContentViewController();
  v25 = (char *)objc_msgSendSuper2(&v35, "initWithNibName:bundle:", 0, 0);
  v26 = *(void **)&v25[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryLabel];
  v27 = v25;
  v28 = v26;
  v29 = String._bridgeToObjectiveC()();
  objc_msgSend(v28, "setAccessibilityIdentifier:", v29);

  v30 = *(id *)&v27[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_secondaryLabel];
  v31 = String._bridgeToObjectiveC()();
  objc_msgSend(v30, "setAccessibilityIdentifier:", v31);

  v32 = *(id *)&v27[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_tertiaryLabel];
  v33 = String._bridgeToObjectiveC()();
  objc_msgSend(v32, "setAccessibilityIdentifier:", v33);

  swift_release(a1);
  return v27;
}

id sub_100225BE4()
{
  char *v0;
  char *v1;
  id result;
  void *v3;
  char *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  double v11;
  double v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  double v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  char **v25;
  id v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  NSString v31;
  id v32;
  id v33;
  char v34;
  void *v35;
  void *v36;
  id v37;
  void *v38;
  void *v39;
  uint64_t v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  double v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  uint64_t v56;
  void *v57;
  void *v58;
  void *v59;
  char *v60;
  void *v61;
  CGAffineTransform v62;

  v1 = v0;
  result = objc_msgSend(v0, "view");
  if (!result)
  {
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v3 = result;
  objc_msgSend(result, "setPreservesSuperviewLayoutMargins:", 1);

  v4 = *(char **)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollView];
  v5 = (void *)objc_opt_self(UIColor);
  v6 = objc_msgSend(v5, "clearColor");
  objc_msgSend(v4, "setBackgroundColor:", v6);

  objc_msgSend(v4, "setAlwaysBounceVertical:", 1);
  if (qword_1005D1D20 != -1)
    swift_once(&qword_1005D1D20, sub_100228680);
  v60 = v4;
  objc_msgSend(v4, "setVerticalScrollIndicatorInsets:", *(double *)&qword_1005F5390, 0.0, *(double *)algn_1005F5398, *(double *)&xmmword_1005F53A0);
  v7 = *(void **)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_actionBackground];
  v8 = objc_msgSend(v7, "layer");
  objc_msgSend(v8, "setShouldRasterize:", 1);

  v9 = objc_msgSend(v7, "layer");
  v10 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v10, "scale");
  v12 = v11;

  objc_msgSend(v9, "setRasterizationScale:", v12);
  v13 = objc_msgSend(v7, "layer");
  objc_msgSend(v13, "setCornerRadius:", _UISheetCornerRadius);

  v14 = objc_msgSend(v7, "layer");
  objc_msgSend(v14, "setMasksToBounds:", 0);

  v15 = objc_msgSend(v7, "layer");
  v16 = objc_msgSend(v5, "blackColor");
  v17 = objc_msgSend(v16, "CGColor");

  objc_msgSend(v15, "setShadowColor:", v17);
  v18 = objc_msgSend(v7, "layer");
  LODWORD(v19) = 1031127695;
  objc_msgSend(v18, "setShadowOpacity:", v19);

  v20 = objc_msgSend(v7, "layer");
  objc_msgSend(v20, "setShadowRadius:", 16.0);

  v21 = objc_msgSend(v7, "layer");
  objc_msgSend(v21, "setShadowOffset:", 0.0, 0.0);

  v22 = objc_msgSend(v7, "layer");
  v23 = objc_msgSend(v1, "traitCollection");
  v24 = objc_msgSend(v23, "userInterfaceStyle");

  v25 = &selRef_clearColor;
  if (v24 != (id)2)
    v25 = &selRef_whiteColor;
  v26 = objc_msgSend(v5, *v25);
  v27 = objc_msgSend(v26, "CGColor");

  objc_msgSend(v22, "setBackgroundColor:", v27);
  v28 = *(void **)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_locatingIndicator];
  CGAffineTransformMakeScale(&v62, 0.75, 0.75);
  v61 = v28;
  objc_msgSend(v28, "setTransform:", &v62);
  v29 = *(void **)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryBackground];
  v30 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 1100);
  objc_msgSend(v29, "setEffect:", v30);

  v31 = String._bridgeToObjectiveC()();
  objc_msgSend(v29, "_setGroupName:", v31);

  if (qword_1005D1E90 != -1)
    swift_once(&qword_1005D1E90, sub_10000642C);
  objc_msgSend(v29, "_setCaptureView:", qword_1005F59F8);
  v59 = v29;
  objc_msgSend(v29, "setAlpha:", 0.0);
  v32 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v33 = objc_msgSend(v32, "preferredContentSizeCategory");

  v34 = UIContentSizeCategory.isAccessibilityCategory.getter(v33);
  v35 = *(void **)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryLabel];
  v36 = (void *)objc_opt_self(UIFont);
  v37 = objc_msgSend(v36, "preferredFontForTextStyle:", UIFontTextStyleTitle2);
  v38 = (void *)sub_10003CEE8(0x8000);

  v39 = (void *)sub_10003CEE8(2);
  objc_msgSend(v35, "setFont:", v39);

  if ((v34 & 1) != 0)
    v40 = 0;
  else
    v40 = 2;
  objc_msgSend(v35, "setNumberOfLines:", v40);
  v41 = objc_msgSend(v5, "labelColor");
  objc_msgSend(v35, "setTextColor:", v41);

  objc_msgSend(v35, "setAdjustsFontForContentSizeCategory:", 1);
  v42 = *(void **)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primarySeperator];
  v43 = objc_msgSend(v5, "separatorColor");
  objc_msgSend(v42, "setBackgroundColor:", v43);

  v58 = v42;
  objc_msgSend(v42, "setAlpha:", 0.0);
  v44 = *(void **)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_secondaryLabel];
  v45 = objc_msgSend(v36, "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
  objc_msgSend(v44, "setFont:", v45);

  objc_msgSend(v44, "setNumberOfLines:", v40);
  v46 = objc_msgSend(v5, "secondaryLabelColor");
  objc_msgSend(v44, "setTextColor:", v46);

  v57 = v44;
  objc_msgSend(v44, "setAdjustsFontForContentSizeCategory:", 1);
  v47 = *(void **)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_tertiaryLabel];
  v48 = objc_msgSend(v36, "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
  objc_msgSend(v47, "setFont:", v48);

  objc_msgSend(v47, "setNumberOfLines:", v40);
  v49 = objc_msgSend(v5, "secondaryLabelColor");
  objc_msgSend(v47, "setTextColor:", v49);

  objc_msgSend(v47, "setAdjustsFontForContentSizeCategory:", 1);
  LODWORD(v50) = 1148846080;
  objc_msgSend(v47, "setContentCompressionResistancePriority:forAxis:", 0, v50);
  v51 = *(void **)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_tertiaryRowStackView];
  objc_msgSend(v51, "setAxis:", 0);
  objc_msgSend(v51, "setAlignment:", 3);
  objc_msgSend(v51, "setDistribution:", 2);
  objc_msgSend(v51, "setSpacing:", *(double *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_styleGuide + 16]);
  objc_msgSend(v51, "addArrangedSubview:", v47);
  objc_msgSend(v51, "addArrangedSubview:", *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_batteryIndicatorView]);
  objc_msgSend(v51, "addArrangedSubview:", v61);
  result = objc_msgSend(v1, "view");
  if (!result)
    goto LABEL_17;
  v52 = result;
  objc_msgSend(result, "addSubview:", v60);

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v53 = result;
  objc_msgSend(result, "addSubview:", v59);

  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v54 = result;
  objc_msgSend(result, "addSubview:", v35);

  result = objc_msgSend(v1, "view");
  if (result)
  {
    v55 = result;
    objc_msgSend(result, "addSubview:", v58);

    v56 = OBJC_IVAR____TtC6FindMy12FMScrollView_content;
    objc_msgSend(*(id *)&v60[OBJC_IVAR____TtC6FindMy12FMScrollView_content], "addSubview:", *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_headerBackground]);
    objc_msgSend(*(id *)&v60[v56], "addSubview:", v57);
    objc_msgSend(*(id *)&v60[v56], "addSubview:", v51);
    return objc_msgSend(*(id *)&v60[v56], "addSubview:", v7);
  }
LABEL_20:
  __break(1u);
  return result;
}

void sub_10022659C()
{
  char *v0;
  char *v1;
  char *v2;
  char *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  char *v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  id v30;
  Class isa;
  void *v32;
  void *v33;
  uint64_t v34;
  id v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  double v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  double v46;
  uint64_t v47;
  id v48;
  id v49;
  Class v50;
  id v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  double v57;
  uint64_t v58;
  id v59;
  id v60;
  void *v61;
  id v62;
  id v63;
  id v64;
  id v65;
  void *v66;
  id v67;
  id v68;
  id v69;
  id v70;
  void *v71;
  id v72;
  id v73;
  id v74;
  id v75;
  double v76;
  id v77;
  uint64_t v78;
  Class v79;
  uint64_t v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  void *v86;
  id v87;
  id v88;
  id v89;
  id v90;
  void *v91;
  id v92;
  id v93;
  id v94;
  id v95;
  double v96;
  double v97;
  id v98;
  uint64_t v99;
  Class v100;
  uint64_t v101;
  id v102;
  id v103;
  void *v104;
  id v105;
  double v106;
  id v107;
  id v108;
  id v109;
  void *v110;
  id v111;
  id v112;
  id v113;
  uint64_t v114;
  id v115;
  Class v116;
  id v117;
  void *v118;
  double v119;
  double v120;
  id v121;
  id v122;
  id v123;
  uint64_t v124;
  id v125;
  id v126;
  uint64_t v127;
  Class v128;
  uint64_t v129;
  uint64_t v130;
  id v131;
  id v132;
  id v133;
  id v134;
  uint64_t v135;
  id v136;
  Class v137;
  id v138;
  id v139;
  id v140;
  id v141;
  id v142;
  void *v143;
  id v144;
  id v145;
  id v146;
  double v147;
  uint64_t v148;
  id v149;
  id v150;
  void *v151;
  id v152;
  id v153;
  id v154;
  uint64_t v155;
  Class v156;
  uint64_t v157;
  id v158;
  id v159;
  id v160;
  id v161;
  id v162;
  void *v163;
  id v164;
  id v165;
  id v166;
  id v167;
  id v168;
  void *v169;
  id v170;
  id v171;
  id v172;
  uint64_t v173;
  Class v174;
  uint64_t v175;
  id v176;
  id v177;
  id v178;
  id v179;
  id v180;
  id v181;
  id v182;
  id v183;
  id v184;
  id v185;
  id v186;
  id v187;
  uint64_t v188;
  Class v189;
  void *v190;
  id v191;
  void *v192;
  id v193;
  void *v194;
  void *v195;
  id v196;
  id v197;
  void *v198;
  char *v199;
  id v200;
  id v201;
  id v202;
  id v203;
  id v204;
  id v205;
  id v206;
  id v207;
  char *v208;
  id v209;
  id v210;
  id v211;
  void *v212;
  double *v213;
  void *v214;
  uint64_t v215;
  void *v216;
  uint64_t v217;

  v1 = v0;
  v2 = *(char **)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollView];
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v212 = *(void **)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryBackground];
  objc_msgSend(v212, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v210 = *(id *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryLabel];
  objc_msgSend(v210, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v206 = *(id *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primarySeperator];
  objc_msgSend(v206, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v203 = *(id *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_secondaryLabel];
  objc_msgSend(v203, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v204 = *(id *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_tertiaryLabel];
  objc_msgSend(v204, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v201 = *(id *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_locatingIndicator];
  objc_msgSend(v201, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = *(char **)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_batteryIndicatorView];
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_tertiaryRowStackView];
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = *(void **)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_headerBackground];
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v6 = objc_msgSend(v2, "bottomAnchor");
  v7 = objc_msgSend(v1, "view");
  if (!v7)
  {
    __break(1u);
    goto LABEL_24;
  }
  v8 = v7;
  v209 = v4;
  v9 = objc_msgSend(v7, "bottomAnchor");

  v10 = objc_msgSend(v6, "constraintEqualToAnchor:", v9);
  v215 = sub_100053F2C(&qword_1005D2F10);
  v11 = swift_allocObject(v215, 64, 7);
  *(_OWORD *)(v11 + 16) = xmmword_100481720;
  v12 = objc_msgSend(v2, "topAnchor");
  v13 = objc_msgSend(v1, "view");
  if (!v13)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v14 = v13;
  v197 = v5;
  v15 = objc_msgSend(v13, "topAnchor");

  v16 = objc_msgSend(v12, "constraintEqualToAnchor:", v15);
  *(_QWORD *)(v11 + 32) = v16;
  v17 = objc_msgSend(v2, "leadingAnchor");
  v18 = objc_msgSend(v1, "view");
  if (!v18)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v19 = v18;
  v199 = v3;
  v20 = objc_msgSend(v18, "leadingAnchor");

  v21 = objc_msgSend(v17, "constraintEqualToAnchor:", v20);
  *(_QWORD *)(v11 + 40) = v21;
  v22 = objc_msgSend(v2, "trailingAnchor");
  v23 = objc_msgSend(v1, "view");
  if (!v23)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v24 = v23;
  v25 = v2;
  v26 = (void *)objc_opt_self(NSLayoutConstraint);
  v27 = objc_msgSend(v24, "trailingAnchor");

  v28 = objc_msgSend(v22, "constraintEqualToAnchor:", v27);
  *(_QWORD *)(v11 + 48) = v28;
  *(_QWORD *)(v11 + 56) = v10;
  specialized Array._endMutation()(v29);
  sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
  v30 = v10;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v32 = v26;
  objc_msgSend(v26, "activateConstraints:", isa, swift_bridgeObjectRelease(v11).n128_f64[0]);

  v33 = *(void **)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollViewBottomConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollViewBottomConstraint] = v30;
  v196 = v30;

  v34 = OBJC_IVAR____TtC6FindMy12FMScrollView_content;
  v35 = objc_msgSend(*(id *)&v25[OBJC_IVAR____TtC6FindMy12FMScrollView_content], "widthAnchor");
  v36 = objc_msgSend(v1, "view");
  if (!v36)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v37 = v36;
  v38 = objc_msgSend(v36, "widthAnchor");

  v39 = objc_msgSend(v35, "constraintEqualToAnchor:", v38);
  LODWORD(v40) = 1132068864;
  objc_msgSend(v39, "setPriority:", v40);
  v208 = v25;
  v41 = objc_msgSend(*(id *)&v25[v34], "heightAnchor");
  v42 = objc_msgSend(v1, "view");
  if (!v42)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v43 = v42;
  v44 = objc_msgSend(v42, "heightAnchor");

  v45 = objc_msgSend(v41, "constraintLessThanOrEqualToAnchor:", v44);
  LODWORD(v46) = 1132068864;
  objc_msgSend(v45, "setPriority:", v46);
  v47 = swift_allocObject(v215, 48, 7);
  *(_OWORD *)(v47 + 16) = xmmword_1004820B0;
  *(_QWORD *)(v47 + 32) = v39;
  *(_QWORD *)(v47 + 40) = v45;
  v217 = v47;
  specialized Array._endMutation()(v47);
  v48 = v39;
  v49 = v45;
  v50 = Array._bridgeToObjectiveC()().super.isa;
  v214 = v32;
  objc_msgSend(v32, "activateConstraints:", v50, swift_bridgeObjectRelease(v217).n128_f64[0]);

  v51 = objc_msgSend(v210, "trailingAnchor");
  v52 = objc_msgSend(v1, "view");
  if (!v52)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v53 = v52;
  v194 = v49;
  v195 = v48;
  v54 = objc_msgSend(v52, "layoutMarginsGuide");

  v55 = objc_msgSend(v54, "trailingAnchor");
  v213 = (double *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_styleGuide];
  v56 = objc_msgSend(v51, "constraintEqualToAnchor:constant:", v55, -*(double *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_styleGuide]);

  LODWORD(v57) = 1144750080;
  v198 = v56;
  objc_msgSend(v56, "setPriority:", v57);
  v58 = swift_allocObject(v215, 64, 7);
  *(_OWORD *)(v58 + 16) = xmmword_100481720;
  v59 = objc_msgSend(v212, "topAnchor");
  v60 = objc_msgSend(v1, "view");
  if (!v60)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v61 = v60;
  v62 = objc_msgSend(v60, "topAnchor");

  v63 = objc_msgSend(v59, "constraintEqualToAnchor:", v62);
  *(_QWORD *)(v58 + 32) = v63;
  v64 = objc_msgSend(v212, "leadingAnchor");
  v65 = objc_msgSend(v1, "view");
  if (!v65)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v66 = v65;
  v67 = objc_msgSend(v65, "leadingAnchor");

  v68 = objc_msgSend(v64, "constraintEqualToAnchor:", v67);
  *(_QWORD *)(v58 + 40) = v68;
  v69 = objc_msgSend(v212, "trailingAnchor");
  v70 = objc_msgSend(v1, "view");
  if (!v70)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v71 = v70;
  v72 = objc_msgSend(v70, "trailingAnchor");

  v73 = objc_msgSend(v69, "constraintEqualToAnchor:", v72);
  *(_QWORD *)(v58 + 48) = v73;
  v74 = objc_msgSend(v212, "bottomAnchor");
  v75 = objc_msgSend(v210, "bottomAnchor");
  v76 = v213[8];
  v77 = objc_msgSend(v74, "constraintEqualToAnchor:constant:", v75, v76);

  *(_QWORD *)(v58 + 56) = v77;
  specialized Array._endMutation()(v78);
  v79 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v214, "activateConstraints:", v79, swift_bridgeObjectRelease(v58).n128_f64[0]);

  v80 = swift_allocObject(v215, 64, 7);
  *(_OWORD *)(v80 + 16) = xmmword_100481720;
  v81 = objc_msgSend(v206, "topAnchor");
  v82 = objc_msgSend(v212, "bottomAnchor");
  v83 = objc_msgSend(v81, "constraintEqualToAnchor:", v82);

  *(_QWORD *)(v80 + 32) = v83;
  v84 = objc_msgSend(v206, "leadingAnchor");
  v85 = objc_msgSend(v1, "view");
  if (!v85)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v86 = v85;
  v87 = objc_msgSend(v85, "leadingAnchor");

  v88 = objc_msgSend(v84, "constraintEqualToAnchor:", v87);
  *(_QWORD *)(v80 + 40) = v88;
  v89 = objc_msgSend(v206, "trailingAnchor");
  v90 = objc_msgSend(v1, "view");
  if (!v90)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v91 = v90;
  v92 = objc_msgSend(v90, "trailingAnchor");

  v93 = objc_msgSend(v89, "constraintEqualToAnchor:", v92);
  *(_QWORD *)(v80 + 48) = v93;
  v94 = objc_msgSend(v206, "heightAnchor");
  v95 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v95, "scale");
  v97 = v96;

  v98 = objc_msgSend(v94, "constraintEqualToConstant:", 1.0 / v97);
  *(_QWORD *)(v80 + 56) = v98;
  specialized Array._endMutation()(v99);
  v100 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v214, "activateConstraints:", v100, swift_bridgeObjectRelease(v80).n128_f64[0]);

  v101 = swift_allocObject(v215, 56, 7);
  *(_OWORD *)(v101 + 16) = xmmword_1004820C0;
  v102 = objc_msgSend(v210, "topAnchor");
  v103 = objc_msgSend(v1, "view");
  if (!v103)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v104 = v103;
  v105 = objc_msgSend(v103, "topAnchor");

  v106 = v213[7];
  v107 = objc_msgSend(v102, "constraintEqualToAnchor:constant:", v105, v106);

  *(_QWORD *)(v101 + 32) = v107;
  v108 = objc_msgSend(v210, "leadingAnchor");
  v109 = objc_msgSend(v1, "view");
  if (!v109)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v110 = v109;
  v111 = objc_msgSend(v109, "layoutMarginsGuide");

  v112 = objc_msgSend(v111, "leadingAnchor");
  v113 = objc_msgSend(v108, "constraintEqualToAnchor:", v112);

  *(_QWORD *)(v101 + 40) = v113;
  *(_QWORD *)(v101 + 48) = v198;
  specialized Array._endMutation()(v114);
  v115 = v198;
  v116 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v214, "activateConstraints:", v116, swift_bridgeObjectRelease(v101).n128_f64[0]);

  v117 = objc_msgSend(v204, "font");
  if (!v117)
  {
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v118 = v117;
  v207 = v115;
  objc_msgSend(v117, "lineHeight");
  v120 = v119;

  v121 = objc_msgSend(v201, "heightAnchor");
  v122 = objc_msgSend(v121, "constraintEqualToConstant:", v120);

  v123 = objc_msgSend(v199, "heightAnchor");
  v211 = objc_msgSend(v123, "constraintEqualToConstant:", v120);

  v124 = swift_allocObject(v215, 48, 7);
  *(_OWORD *)(v124 + 16) = xmmword_1004820B0;
  v125 = objc_msgSend(v201, "widthAnchor");
  if (qword_1005D1CD8 != -1)
    swift_once(&qword_1005D1CD8, sub_100008DD0);
  v126 = objc_msgSend(v125, "constraintEqualToConstant:", *(double *)&qword_1005F51D8 + *(double *)&qword_1005F51D8);

  *(_QWORD *)(v124 + 32) = v126;
  *(_QWORD *)(v124 + 40) = v122;
  specialized Array._endMutation()(v127);
  v205 = v122;
  v128 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v214, "activateConstraints:", v128, swift_bridgeObjectRelease(v124).n128_f64[0]);

  v129 = swift_allocObject(v215, 56, 7);
  *(_OWORD *)(v129 + 16) = xmmword_1004820C0;
  v130 = OBJC_IVAR____TtC6FindMy20FMBatteryWrapperView_batteryView;
  v131 = objc_msgSend(*(id *)&v199[OBJC_IVAR____TtC6FindMy20FMBatteryWrapperView_batteryView], "widthAnchor");
  v132 = objc_msgSend(v131, "constraintEqualToConstant:", v213[13]);

  *(_QWORD *)(v129 + 32) = v132;
  v133 = objc_msgSend(*(id *)&v199[v130], "heightAnchor");
  v134 = objc_msgSend(v133, "constraintEqualToConstant:", v213[14]);

  *(_QWORD *)(v129 + 40) = v134;
  *(_QWORD *)(v129 + 48) = v211;
  specialized Array._endMutation()(v135);
  v136 = v211;
  v137 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v214, "activateConstraints:", v137, swift_bridgeObjectRelease(v129).n128_f64[0]);

  v138 = objc_msgSend(v203, "topAnchor");
  v139 = objc_msgSend(*(id *)&v208[v34], "topAnchor");
  v140 = objc_msgSend(v138, "constraintEqualToAnchor:", v139);

  v141 = objc_msgSend(v203, "trailingAnchor");
  v142 = objc_msgSend(v1, "view");
  if (!v142)
    goto LABEL_38;
  v143 = v142;
  v144 = objc_msgSend(v142, "layoutMarginsGuide");

  v145 = objc_msgSend(v144, "trailingAnchor");
  v146 = objc_msgSend(v141, "constraintEqualToAnchor:constant:", v145, -v106);

  LODWORD(v147) = 1144750080;
  objc_msgSend(v146, "setPriority:", v147);
  v148 = swift_allocObject(v215, 56, 7);
  *(_OWORD *)(v148 + 16) = xmmword_1004820C0;
  *(_QWORD *)(v148 + 32) = v140;
  *(_QWORD *)(v148 + 40) = v146;
  v200 = v140;
  v202 = v146;
  v149 = objc_msgSend(v203, "leadingAnchor");
  v150 = objc_msgSend(v1, "view");
  if (!v150)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v151 = v150;
  v152 = objc_msgSend(v150, "layoutMarginsGuide");

  v153 = objc_msgSend(v152, "leadingAnchor");
  v154 = objc_msgSend(v149, "constraintEqualToAnchor:", v153);

  *(_QWORD *)(v148 + 48) = v154;
  specialized Array._endMutation()(v155);
  v156 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v214, "activateConstraints:", v156, swift_bridgeObjectRelease(v148).n128_f64[0]);

  v157 = swift_allocObject(v215, 56, 7);
  *(_OWORD *)(v157 + 16) = xmmword_1004820C0;
  v158 = objc_msgSend(v209, "topAnchor");
  v159 = objc_msgSend(v203, "lastBaselineAnchor");
  v160 = objc_msgSend(v158, "constraintEqualToAnchor:constant:", v159, v213[2]);

  *(_QWORD *)(v157 + 32) = v160;
  v161 = objc_msgSend(v209, "leadingAnchor");
  v162 = objc_msgSend(v1, "view");
  if (!v162)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v163 = v162;
  v164 = objc_msgSend(v162, "layoutMarginsGuide");

  v165 = objc_msgSend(v164, "leadingAnchor");
  v166 = objc_msgSend(v161, "constraintEqualToAnchor:", v165);

  *(_QWORD *)(v157 + 40) = v166;
  v167 = objc_msgSend(v209, "trailingAnchor");
  v168 = objc_msgSend(v1, "view");
  if (v168)
  {
    v169 = v168;
    v170 = objc_msgSend(v168, "layoutMarginsGuide");

    v171 = objc_msgSend(v170, "trailingAnchor");
    v172 = objc_msgSend(v167, "constraintLessThanOrEqualToAnchor:", v171);

    *(_QWORD *)(v157 + 48) = v172;
    specialized Array._endMutation()(v173);
    v174 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v214, "activateConstraints:", v174, swift_bridgeObjectRelease(v157).n128_f64[0]);

    v175 = swift_allocObject(v215, 64, 7);
    *(_OWORD *)(v175 + 16) = xmmword_100481720;
    v176 = objc_msgSend(v197, "topAnchor");
    v177 = objc_msgSend(v208, "topAnchor");
    v178 = objc_msgSend(v176, "constraintEqualToAnchor:", v177);

    *(_QWORD *)(v175 + 32) = v178;
    v179 = objc_msgSend(v197, "leadingAnchor");
    v180 = objc_msgSend(v208, "leadingAnchor");
    v181 = objc_msgSend(v179, "constraintEqualToAnchor:", v180);

    *(_QWORD *)(v175 + 40) = v181;
    v182 = objc_msgSend(v197, "trailingAnchor");
    v183 = objc_msgSend(v208, "trailingAnchor");
    v184 = objc_msgSend(v182, "constraintEqualToAnchor:", v183);

    *(_QWORD *)(v175 + 48) = v184;
    v185 = objc_msgSend(v197, "bottomAnchor");
    v186 = objc_msgSend(v209, "bottomAnchor");
    v187 = objc_msgSend(v185, "constraintEqualToAnchor:constant:", v186, v76);

    *(_QWORD *)(v175 + 56) = v187;
    specialized Array._endMutation()(v188);
    v189 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v214, "activateConstraints:", v189, swift_bridgeObjectRelease(v175).n128_f64[0]);

    v190 = *(void **)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_batteryIndicatorHeightConstraint];
    *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_batteryIndicatorHeightConstraint] = v136;
    v191 = v136;

    v192 = *(void **)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_locatingIndicatorHeightConstraint];
    *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_locatingIndicatorHeightConstraint] = v205;
    v193 = v205;

    v216 = *(void **)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_secondaryLabelTopConstraint];
    *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_secondaryLabelTopConstraint] = v200;

    return;
  }
LABEL_41:
  __break(1u);
}

void *sub_100227BE8()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollView);
  v2 = v1;
  return v1;
}

id sub_100227C14(id result)
{
  uint64_t v1;
  int v2;
  char v3;
  void *v4;
  char **v5;
  void *v6;

  v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_isLocating);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_isLocating) = (_BYTE)result;
  if (v2 != (result & 1))
  {
    v3 = (char)result;
    v4 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_locatingIndicator);
    objc_msgSend(v4, "setHidden:", (result & 1) == 0);
    v5 = &selRef_startAnimating;
    if ((v3 & 1) == 0)
      v5 = &selRef_stopAnimating;
    objc_msgSend(v4, *v5);
    v6 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollView);
    objc_msgSend(v6, "setNeedsLayout");
    return objc_msgSend(v6, "layoutIfNeeded");
  }
  return result;
}

uint64_t sub_100227CD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint8_t *v35;
  uint64_t EnumCaseMultiPayload;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  const char *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _BYTE v68[24];
  uint64_t v69[3];
  uint64_t v70;
  unint64_t v71;
  char v72[32];

  v1 = v0;
  v2 = type metadata accessor for FMSelectedSection(0);
  v3 = __chkstk_darwin(v2);
  v65 = (uint64_t)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v64 = (uint64_t)&v59 - v6;
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v59 - v8;
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v59 - v11;
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v59 - v14;
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v59 - v17;
  __chkstk_darwin(v16);
  v20 = (char *)&v59 - v19;
  v66 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator;
  v21 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator) + 56)
      + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection;
  swift_beginAccess(v21, v72, 0, 0);
  sub_100024F3C(v21, (uint64_t)v20);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v22 = type metadata accessor for Logger(0);
  v23 = sub_100056D88(v22, (uint64_t)qword_1005F5748);
  v24 = sub_100024F3C((uint64_t)v20, (uint64_t)v18);
  v67 = v23;
  v25 = Logger.logObject.getter(v24);
  v26 = static os_log_type_t.default.getter(v25);
  if (os_log_type_enabled(v25, v26))
  {
    v60 = v1;
    v27 = swift_slowAlloc(12, -1);
    v62 = v9;
    v28 = (uint8_t *)v27;
    v29 = swift_slowAlloc(32, -1);
    v63 = v20;
    v30 = v29;
    v61 = v12;
    *(_DWORD *)v28 = 136315138;
    v69[0] = v29;
    v70 = 0;
    v71 = 0xE000000000000000;
    _print_unlocked<A, B>(_:_:)(v18, &v70, v2, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v31 = v2;
    v32 = v71;
    v70 = sub_100056DA0(v70, v71, v69);
    v1 = v60;
    v12 = v61;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v70, &v71);
    v33 = v32;
    v2 = v31;
    swift_bridgeObjectRelease(v33);
    sub_100024F00((uint64_t)v18);
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "FMBaseContentViewController: previousSelection %s", v28, 0xCu);
    swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
    v34 = v30;
    v20 = v63;
    swift_slowDealloc(v34, -1, -1);
    v35 = v28;
    v9 = v62;
    swift_slowDealloc(v35, -1, -1);
  }
  else
  {
    sub_100024F00((uint64_t)v18);
  }

  sub_100024F3C((uint64_t)v20, (uint64_t)v15);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v15, v2);
  if ((_DWORD)EnumCaseMultiPayload == 8)
  {
    v41 = Logger.logObject.getter(EnumCaseMultiPayload);
    v42 = static os_log_type_t.default.getter(v41);
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v43 = 0;
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "FMBaseContentViewController: UT ignores previous selection", v43, 2u);
      swift_slowDealloc(v43, -1, -1);
    }

    v44 = (uint64_t)v20;
    goto LABEL_29;
  }
  if ((_DWORD)EnumCaseMultiPayload != 18)
  {
    if ((_DWORD)EnumCaseMultiPayload == 15)
    {
      v37 = Logger.logObject.getter(EnumCaseMultiPayload);
      v38 = static os_log_type_t.default.getter(v37);
      if (os_log_type_enabled(v37, v38))
      {
        v39 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v39 = 0;
        v40 = "FMBaseContentViewController: Map options ignores previous selection";
LABEL_16:
        _os_log_impl((void *)&_mh_execute_header, v37, v38, v40, v39, 2u);
        swift_slowDealloc(v39, -1, -1);
        goto LABEL_17;
      }
      goto LABEL_17;
    }
    v45 = *(_QWORD *)(v1 + v66);
    v46 = *(_QWORD *)(v45 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
    swift_beginAccess(v46, &v70, 0, 0);
    sub_100024F3C(v46, (uint64_t)v12);
    sub_100024F3C((uint64_t)v12, (uint64_t)v9);
    v47 = swift_getEnumCaseMultiPayload(v9, v2);
    if ((_DWORD)v47 == 18)
    {
      v51 = Logger.logObject.getter(v47);
      v52 = static os_log_type_t.default.getter(v51);
      if (os_log_type_enabled(v51, v52))
      {
        v53 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v53 = 0;
        _os_log_impl((void *)&_mh_execute_header, v51, v52, "FMBaseContentViewController: Ranging ignores previous selection", v53, 2u);
        swift_slowDealloc(v53, -1, -1);
      }

      v9 = v20;
    }
    else
    {
      if ((_DWORD)v47 == 8)
      {
        v48 = Logger.logObject.getter(v47);
        v49 = static os_log_type_t.default.getter(v48);
        if (os_log_type_enabled(v48, v49))
        {
          v50 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v50 = 0;
          _os_log_impl((void *)&_mh_execute_header, v48, v49, "FMBaseContentViewController: UT ignores previous selection", v50, 2u);
          swift_slowDealloc(v50, -1, -1);
        }

      }
      else
      {
        v54 = *(_QWORD *)(v45 + 56);
        v55 = v64;
        sub_100024F3C((uint64_t)v20, v64);
        v56 = v54 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
        swift_beginAccess(v54 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, v69, 0, 0);
        v57 = v65;
        sub_100024F3C(v56, v65);
        swift_beginAccess(v56, v68, 33, 0);
        swift_retain(v54);
        sub_100009DF8(v55, v56);
        swift_endAccess(v68);
        sub_10004C8A4(v57);
        sub_100024F00(v55);
        sub_100024F00(v57);
        swift_release(v54);
      }
      sub_100024F00((uint64_t)v12);
      v12 = v20;
    }
    sub_100024F00((uint64_t)v12);
    v44 = (uint64_t)v9;
LABEL_29:
    sub_100024F00(v44);
    return sub_100024F00((uint64_t)v15);
  }
  v37 = Logger.logObject.getter(EnumCaseMultiPayload);
  v38 = static os_log_type_t.default.getter(v37);
  if (os_log_type_enabled(v37, v38))
  {
    v39 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v39 = 0;
    v40 = "FMBaseContentViewController: Ranging ignores previous selection";
    goto LABEL_16;
  }
LABEL_17:

  v15 = v20;
  return sub_100024F00((uint64_t)v15);
}

uint64_t sub_100228360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  void *v7;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  _QWORD *v20;
  void *v21;
  _QWORD *v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[5];
  _QWORD *v36;

  v7 = v6;
  v30 = a3;
  v31 = a5;
  v12 = type metadata accessor for DispatchWorkItemFlags(0);
  v34 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchQoS(0);
  v32 = *(_QWORD *)(v15 - 8);
  v33 = v15;
  __chkstk_darwin(v15);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v19 = (void *)static OS_dispatch_queue.main.getter(v18);
  v20 = (_QWORD *)swift_allocObject(&unk_100551F38, 72, 7);
  v20[2] = a1;
  v20[3] = a2;
  v20[4] = v30;
  v20[5] = a4;
  v20[6] = v31;
  v20[7] = a6;
  v20[8] = v6;
  aBlock[4] = sub_1002292F0;
  v36 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_100551F50;
  v21 = _Block_copy(aBlock);
  v22 = v36;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRetain(a6);
  v23 = v7;
  swift_release(v22);
  static DispatchQoS.unspecified.getter(v24);
  aBlock[0] = _swiftEmptyArrayStorage;
  v25 = sub_100056580();
  v26 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v27 = sub_1000555E4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v26, v27, v12, v25);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v17, v14, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v17, v33);
}

id sub_100228580(void *a1)
{
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;

  objc_msgSend(a1, "contentOffset");
  v3 = v2;
  if (qword_1005D1D20 != -1)
    swift_once(&qword_1005D1D20, sub_100228680);
  if (v3 / *((double *)&xmmword_1005F5380 + 1) > 0.0)
    v4 = v3 / *((double *)&xmmword_1005F5380 + 1);
  else
    v4 = 0.0;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryBackground), "setAlpha:", v4);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primarySeperator), "setAlpha:", v4);
  v5 = 1.0 / v4;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_secondaryLabel), "setAlpha:", v5);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_tertiaryLabel), "setAlpha:", v5);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_isLocating))
    v6 = v5;
  else
    v6 = 0.0;
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_locatingIndicator), "setAlpha:", v6);
}

double sub_100228680()
{
  double result;

  xmmword_1005F5340 = xmmword_100488CA0;
  *(_OWORD *)algn_1005F5350 = xmmword_100488CB0;
  unk_1005F5360 = xmmword_100488CC0;
  unk_1005F5370 = xmmword_100488CD0;
  xmmword_1005F5380 = xmmword_100488CE0;
  *(_OWORD *)&qword_1005F5390 = xmmword_100488CF0;
  result = 3.0;
  xmmword_1005F53A0 = xmmword_100488D00;
  qword_1005F53B0 = 0x4026000000000000;
  return result;
}

double sub_1002286DC()
{
  double result;

  xmmword_1005F53C0 = xmmword_100488CA0;
  *(_OWORD *)algn_1005F53D0 = xmmword_100488CB0;
  xmmword_1005F53E0 = xmmword_100488CC0;
  unk_1005F53F0 = xmmword_100488D10;
  xmmword_1005F5400 = xmmword_100488D20;
  unk_1005F5410 = xmmword_100488CF0;
  result = 3.0;
  xmmword_1005F5420 = xmmword_100488D00;
  qword_1005F5430 = 0x4026000000000000;
  return result;
}

id sub_10022875C()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  void *v5;
  char **v6;
  void *v7;
  objc_super v9;

  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for FMBaseContentViewController();
  v1 = objc_msgSendSuper2(&v9, "viewDidLoad");
  v2 = (*(uint64_t (**)(id))((swift_isaMask & *v0) + 0x198))(v1);
  v3 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x1A0))(v2);
  (*(void (**)(uint64_t))((swift_isaMask & *v0) + 0x1A8))(v3);
  v4 = *((unsigned __int8 *)v0 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_isLocating);
  v5 = *(void **)((char *)v0 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_locatingIndicator);
  objc_msgSend(v5, "setHidden:", v4 ^ 1u);
  v6 = &selRef_startAnimating;
  if (!v4)
    v6 = &selRef_stopAnimating;
  objc_msgSend(v5, *v6);
  v7 = *(void **)((char *)v0 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollView);
  objc_msgSend(v7, "setNeedsLayout");
  objc_msgSend(v7, "layoutIfNeeded");
  return objc_msgSend(v7, "setDelegate:", v0);
}

id sub_1002288A4()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  double v4;
  double v5;
  double v6;
  void *v7;
  objc_super v9;
  CGRect v10;

  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for FMBaseContentViewController();
  objc_msgSendSuper2(&v9, "viewDidLayoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_secondaryLabelTopConstraint];
  if (v1)
  {
    v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryLabel];
    v3 = v1;
    objc_msgSend(v2, "frame");
    v5 = v4;
    objc_msgSend(v2, "frame");
    objc_msgSend(v3, "setConstant:", v5 + v6 + *(double *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_styleGuide + 8]);

  }
  v7 = *(void **)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_tertiaryLabel];
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryLabel], "bounds");
  return objc_msgSend(v7, "setPreferredMaxLayoutWidth:", CGRectGetWidth(v10));
}

void sub_100228A20(uint64_t a1)
{
  char *v1;
  id v3;
  id v4;
  id v5;
  UIFontTextStyle v6;
  void *v7;
  double v8;
  double v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  char **v14;
  id v15;
  id v16;
  objc_super v17;

  v17.receiver = v1;
  v17.super_class = (Class)type metadata accessor for FMBaseContentViewController();
  objc_msgSendSuper2(&v17, "traitCollectionDidChange:", a1);
  v3 = objc_msgSend(v1, "traitCollection");
  v4 = objc_msgSend(v3, "preferredContentSizeCategory");

  LOBYTE(v3) = UIContentSizeCategory.isAccessibilityCategory.getter(v4);
  v5 = (id)objc_opt_self(UIFont);
  v6 = UIFontTextStyleSubheadline;
  if ((v3 & 1) != 0)
  {
    v5 = objc_msgSend(v5, "_preferredFontForTextStyle:maximumContentSizeCategory:", UIFontTextStyleSubheadline, UIContentSizeCategoryExtraExtraExtraLarge);
    if (v5)
      goto LABEL_5;
    __break(1u);
  }
  v5 = objc_msgSend(v5, "preferredFontForTextStyle:", v6);
LABEL_5:
  v7 = v5;
  objc_msgSend(v5, "lineHeight");
  v9 = v8;

  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_locatingIndicatorHeightConstraint], "setConstant:", v9);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_batteryIndicatorHeightConstraint], "setConstant:", v9);
  v10 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_actionBackground], "layer");
  v11 = objc_msgSend(v1, "traitCollection");
  v12 = objc_msgSend(v11, "userInterfaceStyle");

  v13 = (void *)objc_opt_self(UIColor);
  v14 = &selRef_clearColor;
  if (v12 != (id)2)
    v14 = &selRef_whiteColor;
  v15 = objc_msgSend(v13, *v14);
  v16 = objc_msgSend(v15, "CGColor");

  objc_msgSend(v10, "setBackgroundColor:", v16);
}

void sub_100228C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  NSString v11;
  NSString v12;
  id v13;
  NSString v14;
  id v15;

  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRetain(a2);
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  v13 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v11, v12, 1);

  swift_bridgeObjectRetain(a6);
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a6);
  v15 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v14, 0, 0);

  objc_msgSend(v13, "addAction:", v15);
  objc_msgSend(a7, "presentViewController:animated:completion:", v13, 1, 0);

}

id sub_100228DFC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMBaseContentViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMBaseContentViewController()
{
  return objc_opt_self(_TtC6FindMy27FMBaseContentViewController);
}

__n128 initializeWithCopy for FMBaseContentViewStyle(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for FMBaseContentViewStyle(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 120))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FMBaseContentViewStyle(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 120) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FMBaseContentViewStyle()
{
  return &type metadata for FMBaseContentViewStyle;
}

uint64_t sub_100229008()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x158))();
}

double sub_100229024()
{
  uint64_t v0;
  CGRect v2;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primarySeperator), "frame");
  return fabs(CGRectGetMinY(v2));
}

uint64_t sub_100229054()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1D0))();
}

uint64_t sub_100229070()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1C0))();
}

uint64_t sub_10022908C()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1C8))();
}

void sub_1002290AC()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_class *ObjCClassFromMetadata;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryBackground;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "init");
  v2 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primarySeperator;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v3 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMScrollView()), "init");
  v4 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryLabel;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v5 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_secondaryLabel;
  v6 = type metadata accessor for FMCopyableLabel();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v6);
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v8 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_tertiaryLabel;
  *(_QWORD *)&v0[v8] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v9 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_actionBackground;
  *(_QWORD *)&v0[v9] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v10 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_tertiaryRowStackView;
  *(_QWORD *)&v0[v10] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v11 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_headerBackground;
  *(_QWORD *)&v0[v11] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v12 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_batteryIndicatorView;
  v13 = type metadata accessor for FMBatteryWrapperView();
  *(_QWORD *)&v0[v12] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v13)), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_secondaryLabelTopConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_locatingIndicatorHeightConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_batteryIndicatorHeightConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollViewBottomConstraint] = 0;
  v14 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_locatingIndicator;
  *(_QWORD *)&v0[v14] = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "init");
  v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_isLocating] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMBaseContentViewController.swift", 40, 2, 101, 0);
  __break(1u);
}

uint64_t sub_1002292B4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));

  return swift_deallocObject(v0, 72, 7);
}

void sub_1002292F0()
{
  uint64_t v0;

  sub_100228C74(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(void **)(v0 + 64));
}

id sub_100229304()
{
  objc_class *v0;
  void *v1;
  id v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  void *object;
  id v7;
  Swift::String v8;
  Swift::String_optional v9;
  Swift::String v10;
  void *v11;
  NSString v12;
  id v13;
  id v14;
  id v15;
  id v16;
  NSString v17;
  NSString v18;
  id v19;
  id v20;
  Swift::String v22;
  Swift::String v23;

  v1 = (void *)objc_opt_self(NSBundle);
  v2 = objc_msgSend(v1, "mainBundle");
  v22._object = (void *)0x80000001004AEFE0;
  v3._object = (void *)0x80000001004B68F0;
  v3._countAndFlagsBits = 0xD000000000000015;
  v4.value._countAndFlagsBits = 0xD000000000000010;
  v4.value._object = (void *)0x80000001004AEFC0;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v22._countAndFlagsBits = 0xD000000000000015;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v22)._object;

  v7 = objc_msgSend(v1, "mainBundle");
  v8._countAndFlagsBits = 0xD000000000000018;
  v23._object = (void *)0x80000001004AEFE0;
  v8._object = (void *)0x80000001004B6910;
  v9.value._countAndFlagsBits = 0xD000000000000010;
  v9.value._object = (void *)0x80000001004AEFC0;
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v23._countAndFlagsBits = 0xD000000000000015;
  v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v23)._object;

  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v12);

  if (v13)
  {
    v14 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
    v15 = objc_msgSend(v13, "imageWithTintColor:renderingMode:", v14, 1);

  }
  else
  {
    v15 = 0;
  }
  v16 = objc_allocWithZone(v0);
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v18 = String._bridgeToObjectiveC()();
  v19 = objc_msgSend(v16, "initWithTitle:detailText:icon:", v17, v18, v15, swift_bridgeObjectRelease(v11).n128_f64[0]);

  v20 = v19;
  sub_10022955C();

  return v20;
}

void sub_10022955C()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  Swift::String v4;
  Swift::String v5;
  void *object;
  NSString v7;
  id v8;
  Swift::String v9;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(OBBoldTrayButton), "boldButton");
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v3 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v9._countAndFlagsBits = 0xD00000000000002FLL;
  v9._object = (void *)0x80000001004B6950;
  v4._object = (void *)0x80000001004B6930;
  v4._countAndFlagsBits = 0xD00000000000001DLL;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v9)._object;

  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v2, "setTitle:forState:", v7, 0);

  objc_msgSend(v2, "addTarget:action:forControlEvents:", v1, "continue", 64);
  v8 = objc_msgSend(v1, "buttonTray");
  objc_msgSend(v8, "addButton:", v2);

}

id sub_100229808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void *v7;
  objc_class *ObjectType;
  NSString v13;
  NSString v14;
  NSString v15;
  id v16;
  objc_super v18;

  ObjectType = (objc_class *)swift_getObjectType(v7);
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  if (!a4)
  {
    v14 = 0;
    if (a6)
      goto LABEL_3;
LABEL_5:
    v15 = 0;
    goto LABEL_6;
  }
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  if (!a6)
    goto LABEL_5;
LABEL_3:
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a6);
LABEL_6:
  v18.receiver = v7;
  v18.super_class = ObjectType;
  v16 = objc_msgSendSuper2(&v18, "initWithTitle:detailText:symbolName:contentLayout:", v13, v14, v15, a7);

  return v16;
}

uint64_t type metadata accessor for FMUTDisclaimerViewController()
{
  return objc_opt_self(_TtC6FindMy28FMUTDisclaimerViewController);
}

uint64_t sub_100229AC8(char a1)
{
  return sub_100229EF0(a1, 34, 0xD000000000000020, (void *)0x80000001004B6BC0);
}

uint64_t sub_100229AE8(char a1)
{
  return sub_100229EF0(a1, 45, 0xD00000000000002BLL, (void *)0x80000001004B6B90);
}

void sub_100229B08(char a1)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  id v5;
  Swift::String_optional v6;
  Swift::String v7;
  Swift::String v8;
  void *object;
  id v10;
  NSString v11;
  id v12;
  id v13;
  NSString v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  NSString v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  Swift::String v28;

  _StringGuts.grow(_:)(47);
  swift_bridgeObjectRelease(0xE000000000000000);
  if (a1)
  {
    if (a1 == 1)
      v2 = 0x80000001004B6AF0;
    else
      v2 = 0x80000001004B6AD0;
    v3 = 0xD000000000000015;
  }
  else
  {
    v2 = 0x80000001004B6B10;
    v3 = 0xD000000000000018;
  }
  v4 = v2;
  String.append(_:)(*(Swift::String *)&v3);
  swift_bridgeObjectRelease(v2);
  v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v6.value._countAndFlagsBits = 0xD000000000000013;
  v28._object = (void *)0x80000001004A5660;
  v6.value._object = (void *)0x80000001004A5640;
  v7._countAndFlagsBits = 0xD00000000000002DLL;
  v7._object = (void *)0x80000001004B6B30;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v28._countAndFlagsBits = 0xD000000000000018;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v6, (NSBundle)v5, v8, v28)._object;
  swift_bridgeObjectRelease(0x80000001004B6B30);

  v10 = objc_allocWithZone((Class)NSMutableAttributedString);
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v12 = objc_msgSend(v10, "initWithString:", v11);

  v13 = objc_msgSend(v12, "mutableString");
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v13, "rangeOfString:", v14);
  v17 = v16;

  if (v15 != (id)NSNotFound.getter())
  {
    v18 = objc_msgSend(objc_allocWithZone((Class)NSTextAttachment), "init");
    v19 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
    v20 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", v19);

    v21 = v20;
    v22 = String._bridgeToObjectiveC()();
    v23 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:withConfiguration:", v22, v21);

    if (v23)
    {
      v24 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
      v25 = objc_msgSend(v23, "imageWithTintColor:", v24);

      v26 = objc_msgSend(v25, "imageWithRenderingMode:", 1);
      objc_msgSend(v18, "setImage:", v26);

      v27 = objc_msgSend((id)objc_opt_self(NSAttributedString), "attributedStringWithAttachment:", v18);
      objc_msgSend(v12, "replaceCharactersInRange:withAttributedString:", v15, v17, v27);

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_100229ED0(char a1)
{
  return sub_100229EF0(a1, 35, 0xD000000000000021, (void *)0x80000001004B6AA0);
}

uint64_t sub_100229EF0(char a1, Swift::Int a2, uint64_t a3, void *a4)
{
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  Swift::String_optional v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t countAndFlagsBits;
  uint64_t v16;
  void *v17;
  Swift::String v18;

  _StringGuts.grow(_:)(a2);
  swift_bridgeObjectRelease(0xE000000000000000);
  v16 = a3;
  v17 = a4;
  if (a1)
  {
    if (a1 == 1)
      v7 = 0x80000001004B6AF0;
    else
      v7 = 0x80000001004B6AD0;
    v8 = 0xD000000000000015;
  }
  else
  {
    v7 = 0x80000001004B6B10;
    v8 = 0xD000000000000018;
  }
  v9 = v7;
  String.append(_:)(*(Swift::String *)&v8);
  swift_bridgeObjectRelease(v7);
  v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v11.value._countAndFlagsBits = 0xD000000000000013;
  v18._object = (void *)0x80000001004A5660;
  v11.value._object = (void *)0x80000001004A5640;
  v12._countAndFlagsBits = v16;
  v12._object = a4;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v18._countAndFlagsBits = 0xD000000000000018;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v11, (NSBundle)v10, v13, v18)._countAndFlagsBits;
  swift_bridgeObjectRelease(v17);

  return countAndFlagsBits;
}

id sub_10022A044()
{
  NSString v0;
  id v1;

  v0 = String._bridgeToObjectiveC()();
  v1 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v0);

  return v1;
}

char *sub_10022A0F4(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _OWORD v16[7];
  uint64_t v17;

  v3 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_contentStackView;
  v4 = objc_allocWithZone((Class)UIStackView);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_contentContainerView;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v7 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_heroImageView;
  *(_QWORD *)&v5[v7] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v8 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_titleLabel;
  *(_QWORD *)&v5[v8] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v9 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_primarySubtitleLabel;
  *(_QWORD *)&v5[v9] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v10 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_secondarySubtitleLabel;
  *(_QWORD *)&v5[v10] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v11 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_searchButton;
  *(_QWORD *)&v5[v11] = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
  v12 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_spacerView;
  *(_QWORD *)&v5[v12] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v13 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_searchButtonTopConstraint;
  *(_QWORD *)&v5[v13] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v5[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_type] = 1;
  v14 = &v5[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_delegate];
  *((_QWORD *)v14 + 1) = 0;
  swift_unknownObjectWeakInit(v14);
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_cardChangeSubscription] = 0;
  v5[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_showsAdditionalContent] = 1;

  if (qword_1005D1D28 != -1)
    swift_once(&qword_1005D1D28, sub_1002286DC);
  v16[4] = xmmword_1005F5400;
  v16[5] = unk_1005F5410;
  v16[6] = xmmword_1005F5420;
  v17 = qword_1005F5430;
  v16[0] = xmmword_1005F53C0;
  v16[1] = *(_OWORD *)algn_1005F53D0;
  v16[2] = xmmword_1005F53E0;
  v16[3] = unk_1005F53F0;
  return sub_100225878(a1, (uint64_t)v16);
}

id sub_10022A4E4()
{
  char *v0;
  id result;
  void *v2;
  double v3;
  double v4;
  void *v5;
  double v6;
  double v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  objc_super v12;

  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for FMUnknownItemsLandingViewController();
  objc_msgSendSuper2(&v12, "viewLayoutMarginsDidChange");
  result = objc_msgSend(v0, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  v2 = result;
  objc_msgSend(result, "layoutMargins");
  v4 = v3;

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_contentStackView], "setSpacing:", v4);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_contentContainerView], "setLayoutMargins:", v4, v4, v4, v4);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_searchButtonTopConstraint], "setConstant:", v4);
  result = objc_msgSend(v0, "view");
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v5 = result;
  objc_msgSend(result, "safeAreaInsets");
  v7 = v6;

  if (v7 != 0.0)
  {
    result = objc_msgSend(v0, "view");
    if (result)
    {
      v8 = result;
      objc_msgSend(result, "safeAreaInsets");
      v10 = v9;

      result = objc_msgSend(v0, "systemMinimumLayoutMargins");
      if (v11 >= v10)
        return result;
      goto LABEL_7;
    }
LABEL_11:
    __break(1u);
    return result;
  }
  objc_msgSend(v0, "systemMinimumLayoutMargins");
LABEL_7:
  objc_msgSend(v0, "additionalSafeAreaInsets");
  return objc_msgSend(v0, "setAdditionalSafeAreaInsets:");
}

uint64_t sub_10022A72C()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  _QWORD v8[5];
  uint64_t v9;

  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1005D20D8 != -1)
    swift_once(&qword_1005D20D8, sub_10005D2D8);
  v2 = qword_1005F61F8;
  v3 = swift_allocObject(&unk_1005521B0, 24, 7);
  swift_unknownObjectWeakInit(v3 + 16);
  v8[4] = sub_10022D010;
  v9 = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_1003B9AE8;
  v8[3] = &unk_1005521C8;
  v4 = _Block_copy(v8);
  v5 = objc_msgSend(v1, "addObserverForName:object:queue:usingBlock:", v2, 0, 0, v4, swift_release(v9).n128_f64[0]);
  _Block_release(v4);

  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_cardChangeSubscription);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_cardChangeSubscription) = v5;
  return swift_unknownObjectRelease(v6);
}

void sub_10022A864(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t Strong;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  double v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;

  v3 = Notification.userInfo.getter(a1);
  if (!v3)
    goto LABEL_12;
  v4 = v3;
  v18 = 0x746E6563726570;
  v19 = 0xE700000000000000;
  AnyHashable.init<A>(_:)(&v20, &v18, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_100025F20((uint64_t)&v20), (v6 & 1) != 0))
  {
    sub_100056E70(*(_QWORD *)(v4 + 56) + 32 * v5, (uint64_t)&v22);
  }
  else
  {
    v22 = 0u;
    v23 = 0u;
  }
  swift_bridgeObjectRelease(v4);
  sub_100025EEC((uint64_t)&v20);
  if (!*((_QWORD *)&v23 + 1))
    goto LABEL_13;
  v7 = swift_dynamicCast(&v20, &v22, (char *)&type metadata for Any + 8, &type metadata for CGFloat, 6);
  if ((v7 & 1) == 0)
    return;
  v8 = v20;
  v9 = Notification.userInfo.getter(v7);
  if (!v9)
  {
LABEL_12:
    v22 = 0u;
    v23 = 0u;
LABEL_13:
    sub_1000051EC((uint64_t)&v22, &qword_1005D3AB0);
    return;
  }
  v10 = v9;
  v18 = 0x656372756F73;
  v19 = 0xE600000000000000;
  AnyHashable.init<A>(_:)(&v20, &v18, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v10 + 16) && (v11 = sub_100025F20((uint64_t)&v20), (v12 & 1) != 0))
  {
    sub_100056E70(*(_QWORD *)(v10 + 56) + 32 * v11, (uint64_t)&v22);
  }
  else
  {
    v22 = 0u;
    v23 = 0u;
  }
  swift_bridgeObjectRelease(v10);
  sub_100025EEC((uint64_t)&v20);
  if (!*((_QWORD *)&v23 + 1))
    goto LABEL_13;
  if ((swift_dynamicCast(&v20, &v22, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) == 0)
    return;
  v13 = v21;
  if (v20 == 6.14137824e257 && v21 == 0xEA00000000006572)
  {
    swift_bridgeObjectRelease(0xEA00000000006572);
  }
  else
  {
    v14 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)&v20, v21, 0x75747365476E6170, 0xEA00000000006572, 0);
    swift_bridgeObjectRelease(v13);
    if ((v14 & 1) == 0)
      return;
  }
  v15 = a2 + 16;
  swift_beginAccess(v15, &v20, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v15);
  if (Strong)
  {
    v17 = (void *)Strong;
    sub_10022C104(v8);

  }
}

uint64_t sub_10022AABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  Swift::String_optional v20;
  Swift::String v21;
  Swift::String v22;
  void *object;
  NSString v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  NSString v32;
  void *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  __n128 v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t KeyPath;
  uint64_t v55;
  char v56;
  Swift::String v57;

  v1 = v0;
  v2 = sub_100053F2C((uint64_t *)&unk_1005E59C0);
  __chkstk_darwin(v2);
  v50 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100053F2C(&qword_1005DC1B8);
  v5 = __chkstk_darwin(v4);
  v51 = (uint64_t)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v8 = (char *)&v50 - v7;
  v9 = type metadata accessor for AttributeContainer(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for AttributedString(0);
  v52 = *(_QWORD *)(v12 - 8);
  v53 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_heroImageView);
  v16 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_type;
  v17 = sub_10022A044();
  objc_msgSend(v15, "setImage:", v17);

  v18 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryLabel);
  v19 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v20.value._countAndFlagsBits = 0xD000000000000013;
  v57._object = (void *)0x80000001004A5660;
  v21._object = (void *)0x80000001004B6A80;
  v20.value._object = (void *)0x80000001004A5640;
  v21._countAndFlagsBits = 0xD000000000000018;
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  v57._countAndFlagsBits = 0xD000000000000018;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, v20, (NSBundle)v19, v22, v57)._object;

  v24 = String._bridgeToObjectiveC()();
  objc_msgSend(v18, "setText:", v24, swift_bridgeObjectRelease(object).n128_f64[0]);

  v25 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_titleLabel);
  sub_100229EF0(*(_BYTE *)(v1 + v16), 34, 0xD000000000000020, (void *)0x80000001004B6BC0);
  v27 = v26;
  v28 = String._bridgeToObjectiveC()();
  objc_msgSend(v25, "setText:", v28, swift_bridgeObjectRelease(v27).n128_f64[0]);

  v29 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_primarySubtitleLabel);
  sub_100229EF0(*(_BYTE *)(v1 + v16), 45, 0xD00000000000002BLL, (void *)0x80000001004B6B90);
  v31 = v30;
  v32 = String._bridgeToObjectiveC()();
  objc_msgSend(v29, "setText:", v32, swift_bridgeObjectRelease(v31).n128_f64[0]);

  v33 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_secondarySubtitleLabel);
  sub_100229B08(*(_BYTE *)(v1 + v16));
  v35 = v34;
  objc_msgSend(v33, "setAttributedText:", v34);

  v36 = sub_100229EF0(*(_BYTE *)(v1 + v16), 35, 0xD000000000000021, (void *)0x80000001004B6AA0);
  v38 = v37;
  AttributeContainer.init()(v36);
  AttributedString.init(_:attributes:)(v36, v38, v11, v39);
  KeyPath = swift_getKeyPath(&unk_100488ED8);
  v40 = swift_getKeyPath(&unk_100488F08);
  v55 = 2;
  v56 = 0;
  v41 = sub_10022CEC8();
  v42 = AttributedString.subscript.setter(&v55, v40, v41);
  UIButton.configuration.getter(v42);
  v43 = type metadata accessor for UIButton.Configuration(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 48))(v8, 1, v43))
  {
    v44 = v51;
    sub_10022CFA4((uint64_t)v8, v51);
    UIButton.configuration.setter(v44);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v14, v53);
    return sub_1000051EC((uint64_t)v8, &qword_1005DC1B8);
  }
  else
  {
    v47 = v52;
    v46 = v53;
    v48 = v50;
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v50, v14, v53);
    v49.n128_f64[0] = (*(double (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v48, 0, 1, v46);
    UIButton.Configuration.attributedTitle.setter(v48, v49);
    UIButton.configuration.setter(v8);
    return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v14, v46);
  }
}

uint64_t sub_10022AF48(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = *a2;
  v5 = *a1;
  v6 = v2;
  v3 = sub_100053F2C(&qword_1005DC1C8);
  return dispatch thunk of static Equatable.== infix(_:_:)(&v6, &v5, v3, &protocol witness table for AnyKeyPath) & 1;
}

void sub_10022B010()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;

  v1 = v0;
  v2 = sub_100053F2C(&qword_1005DC1B8);
  __chkstk_darwin(v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100225BE4();
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_batteryIndicatorView], "setHidden:", 1);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryBackground], "setAlpha:", 1.0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primarySeperator], "setAlpha:", 1.0);
  v5 = *(void **)&v0[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_contentContainerView];
  objc_msgSend(*(id *)(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollView]+ OBJC_IVAR____TtC6FindMy12FMScrollView_content), "addSubview:", *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_contentContainerView]);
  v6 = *(void **)&v1[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_contentStackView];
  objc_msgSend(v5, "addSubview:", v6);
  objc_msgSend(v6, "setAxis:", 1);
  v31 = *(id *)&v1[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_heroImageView];
  objc_msgSend(v31, "setContentMode:", 1);
  v7 = *(void **)&v1[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_titleLabel];
  v8 = (void *)objc_opt_self(UIFont);
  v9 = objc_msgSend(v8, "preferredFontForTextStyle:", UIFontTextStyleTitle1);
  v10 = (void *)sub_10003CEE8(2);

  objc_msgSend(v7, "setFont:", v10);
  v11 = *(void **)&v1[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_primarySubtitleLabel];
  v12 = objc_msgSend(v8, "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v11, "setFont:", v12);

  v13 = *(void **)&v1[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_secondarySubtitleLabel];
  v14 = objc_msgSend(v8, "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v13, "setFont:", v14);

  v15 = v7;
  v16 = v11;
  v17 = v13;
  objc_msgSend(v15, "setNumberOfLines:", 0);
  objc_msgSend(v15, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v15, "setTextAlignment:", 1);

  v18 = v16;
  objc_msgSend(v18, "setNumberOfLines:", 0);
  objc_msgSend(v18, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v18, "setTextAlignment:", 1);

  v19 = v17;
  objc_msgSend(v19, "setNumberOfLines:", 0);
  objc_msgSend(v19, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v19, "setTextAlignment:", 1);

  v20 = *(void **)&v1[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_searchButton];
  sub_10010F9F0(2u);
  v21 = type metadata accessor for UIButton.Configuration(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v4, 0, 1, v21);
  UIButton.configuration.setter(v4);
  objc_msgSend(v20, "addTarget:action:forControlEvents:", v1, "handleButtonTap:", 64);
  v22 = objc_msgSend(v1, "view");
  if (v22)
  {
    v23 = v22;
    objc_msgSend(v22, "addSubview:", v20);

    v24 = *(void **)&v1[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_spacerView];
    v25 = v15;
    v26 = v18;
    v27 = v19;
    v28 = v31;
    v29 = v24;
    objc_msgSend(v6, "addArrangedSubview:", v28);
    objc_msgSend(v6, "addArrangedSubview:", v25);
    objc_msgSend(v6, "addArrangedSubview:", v26);
    objc_msgSend(v6, "addArrangedSubview:", v27);
    objc_msgSend(v6, "addArrangedSubview:", v29);

  }
  else
  {
    __break(1u);
  }
}

void sub_10022B478()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  Class isa;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  void *v45;
  id v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  id v57;
  void *v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  double v67;
  id v68;
  Class v69;
  uint64_t v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  uint64_t v87;
  Class v88;
  id v89;
  id v90;
  id v91;
  void *v92;
  id v93;
  uint64_t v94;
  id v95;
  id v96;
  id v97;
  void *v98;
  id v99;
  id v100;
  id v101;
  double v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  uint64_t v109;
  char *v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  Class v117;

  v1 = v0;
  sub_10022659C();
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_contentContainerView];
  v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_contentStackView];
  v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_heroImageView];
  v5 = *(void **)&v1[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_titleLabel];
  v6 = *(void **)&v1[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_primarySubtitleLabel];
  v7 = *(void **)&v1[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_secondarySubtitleLabel];
  v8 = *(void **)&v1[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_searchButton];
  v9 = v2;
  v10 = v3;
  v11 = v4;
  v12 = v5;
  v13 = v6;
  v14 = v7;
  v15 = v8;
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v114 = v15;
  v112 = v10;

  v16 = objc_msgSend(objc_allocWithZone((Class)UILayoutGuide), "init");
  v17 = objc_msgSend(v1, "view");
  if (!v17)
  {
    __break(1u);
    goto LABEL_9;
  }
  v18 = v17;
  objc_msgSend(v17, "addLayoutGuide:", v16);

  v116 = (id)sub_100053F2C(&qword_1005D2F10);
  v19 = swift_allocObject(v116, 64, 7);
  *(_OWORD *)(v19 + 16) = xmmword_100481720;
  v20 = objc_msgSend(v16, "topAnchor");
  v21 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primarySeperator], "topAnchor");
  v22 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

  *(_QWORD *)(v19 + 32) = v22;
  v23 = objc_msgSend(v16, "leadingAnchor");
  v24 = objc_msgSend(v1, "view");
  if (!v24)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v25 = v24;
  v111 = v11;
  v26 = objc_msgSend(v24, "layoutMarginsGuide");

  v27 = objc_msgSend(v26, "leadingAnchor");
  v28 = objc_msgSend(v23, "constraintEqualToAnchor:", v27);

  *(_QWORD *)(v19 + 40) = v28;
  v29 = objc_msgSend(v16, "trailingAnchor");
  v30 = objc_msgSend(v1, "view");
  if (!v30)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v31 = v30;
  v32 = (void *)objc_opt_self(NSLayoutConstraint);
  v33 = objc_msgSend(v31, "layoutMarginsGuide");

  v34 = objc_msgSend(v33, "trailingAnchor");
  v35 = objc_msgSend(v29, "constraintEqualToAnchor:", v34);

  *(_QWORD *)(v19 + 48) = v35;
  v113 = v16;
  v36 = objc_msgSend(v16, "bottomAnchor");
  v37 = objc_msgSend(v114, "topAnchor");
  v38 = objc_msgSend(v36, "constraintEqualToAnchor:", v37);

  *(_QWORD *)(v19 + 56) = v38;
  specialized Array._endMutation()(v39);
  sub_100048C64();
  isa = Array._bridgeToObjectiveC()().super.isa;
  v115 = v32;
  objc_msgSend(v32, "activateConstraints:", isa, swift_bridgeObjectRelease(v19).n128_f64[0]);

  v41 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollViewBottomConstraint;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollViewBottomConstraint], "setActive:", 0);
  v110 = *(char **)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollView];
  v42 = objc_msgSend(v110, "bottomAnchor");
  v43 = objc_msgSend(v114, "topAnchor");
  v44 = objc_msgSend(v42, "constraintEqualToAnchor:", v43);

  objc_msgSend(v44, "setActive:", 1);
  v45 = *(void **)&v1[v41];
  *(_QWORD *)&v1[v41] = v44;
  v46 = v44;

  v47 = swift_allocObject(v116, 72, 7);
  *(_OWORD *)(v47 + 16) = xmmword_1004820D0;
  v48 = objc_msgSend(v9, "topAnchor");
  v49 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_tertiaryLabel], "bottomAnchor");
  v50 = objc_msgSend(v48, "constraintEqualToAnchor:constant:", v49, 2.0);

  *(_QWORD *)(v47 + 32) = v50;
  v51 = objc_msgSend(v9, "leadingAnchor");
  v52 = objc_msgSend(v1, "view");
  if (!v52)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v53 = v52;
  v54 = objc_msgSend(v52, "leadingAnchor");

  v55 = objc_msgSend(v51, "constraintEqualToAnchor:", v54);
  *(_QWORD *)(v47 + 40) = v55;
  v56 = objc_msgSend(v9, "trailingAnchor");
  v57 = objc_msgSend(v1, "view");
  if (!v57)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v58 = v57;
  v59 = objc_msgSend(v57, "trailingAnchor");

  v60 = objc_msgSend(v56, "constraintEqualToAnchor:", v59);
  *(_QWORD *)(v47 + 48) = v60;
  v61 = objc_msgSend(v9, "bottomAnchor");
  v62 = objc_msgSend(*(id *)&v110[OBJC_IVAR____TtC6FindMy12FMScrollView_content], "bottomAnchor");
  v63 = objc_msgSend(v61, "constraintEqualToAnchor:", v62);

  *(_QWORD *)(v47 + 56) = v63;
  v64 = objc_msgSend(v9, "heightAnchor");
  v65 = objc_msgSend(v113, "heightAnchor");
  v66 = objc_msgSend(v64, "constraintEqualToAnchor:", v65);

  LODWORD(v67) = 1132068864;
  v68 = objc_msgSend(v66, "setPriority:", v67);
  *(_QWORD *)(v47 + 64) = v66;
  specialized Array._endMutation()(v68);
  v69 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v115, "activateConstraints:", v69, swift_bridgeObjectRelease(v47).n128_f64[0]);

  v70 = swift_allocObject(v116, 64, 7);
  *(_OWORD *)(v70 + 16) = xmmword_100481720;
  v71 = objc_msgSend(v112, "topAnchor");
  v72 = objc_msgSend(v9, "layoutMarginsGuide");
  v73 = objc_msgSend(v72, "topAnchor");

  v74 = objc_msgSend(v71, "constraintEqualToAnchor:", v73);
  *(_QWORD *)(v70 + 32) = v74;
  v75 = objc_msgSend(v112, "bottomAnchor");
  v76 = objc_msgSend(v9, "layoutMarginsGuide");
  v77 = objc_msgSend(v76, "bottomAnchor");

  v78 = objc_msgSend(v75, "constraintEqualToAnchor:", v77);
  *(_QWORD *)(v70 + 40) = v78;
  v79 = objc_msgSend(v112, "leadingAnchor");
  v80 = objc_msgSend(v9, "layoutMarginsGuide");
  v81 = objc_msgSend(v80, "leadingAnchor");

  v82 = objc_msgSend(v79, "constraintEqualToAnchor:", v81);
  *(_QWORD *)(v70 + 48) = v82;
  v83 = objc_msgSend(v112, "trailingAnchor");
  v84 = objc_msgSend(v9, "layoutMarginsGuide");
  v85 = objc_msgSend(v84, "trailingAnchor");

  v86 = objc_msgSend(v83, "constraintEqualToAnchor:", v85);
  *(_QWORD *)(v70 + 56) = v86;
  specialized Array._endMutation()(v87);
  v88 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v115, "activateConstraints:", v88, swift_bridgeObjectRelease(v70).n128_f64[0]);

  v89 = objc_msgSend(v114, "topAnchor");
  v90 = objc_msgSend(v111, "bottomAnchor");
  v91 = objc_msgSend(v89, "constraintGreaterThanOrEqualToAnchor:", v90);

  v92 = *(void **)&v1[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_searchButtonTopConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_searchButtonTopConstraint] = v91;
  v93 = v91;

  v94 = swift_allocObject(v116, 64, 7);
  *(_OWORD *)(v94 + 16) = xmmword_100481720;
  *(_QWORD *)(v94 + 32) = v93;
  v95 = v93;
  v96 = objc_msgSend(v114, "bottomAnchor");
  v97 = objc_msgSend(v1, "view");
  if (v97)
  {
    v98 = v97;
    v99 = objc_msgSend(v97, "safeAreaLayoutGuide");

    v100 = objc_msgSend(v99, "bottomAnchor");
    v101 = objc_msgSend(v96, "constraintEqualToAnchor:", v100);

    LODWORD(v102) = 1132068864;
    objc_msgSend(v101, "setPriority:", v102);
    *(_QWORD *)(v94 + 40) = v101;
    v103 = objc_msgSend(v114, "leadingAnchor");
    v104 = objc_msgSend(v113, "leadingAnchor");
    v105 = objc_msgSend(v103, "constraintEqualToAnchor:", v104);

    *(_QWORD *)(v94 + 48) = v105;
    v106 = objc_msgSend(v114, "trailingAnchor");
    v107 = objc_msgSend(v113, "trailingAnchor");
    v108 = objc_msgSend(v106, "constraintEqualToAnchor:", v107);

    *(_QWORD *)(v94 + 56) = v108;
    specialized Array._endMutation()(v109);
    v117 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v115, "activateConstraints:", v117, swift_bridgeObjectRelease(v94).n128_f64[0]);

    return;
  }
LABEL_13:
  __break(1u);
}

void sub_10022C104(double a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double Height;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  unint64_t v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  double v21;
  double v22;
  double v23;
  id v24;
  void *v25;
  double v26;
  double v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  double v34;
  _BYTE v35[48];
  CGRect v36;

  v2 = v1;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_contentStackView);
  objc_msgSend(v4, "spacing");
  v6 = v5;
  objc_msgSend(v4, "bounds");
  v8 = v7;
  v10 = v9;
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_spacerView), "bounds");
  Height = CGRectGetHeight(v36);
  v12 = sub_100053F2C(&qword_1005D2F10);
  *(double *)&v13 = COERCE_DOUBLE(swift_initStackObject(v12, v35));
  *(_OWORD *)(v13 + 16) = xmmword_1004820B0;
  v14 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_titleLabel);
  *(_QWORD *)(v13 + 32) = v14;
  v15 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_secondarySubtitleLabel);
  *(_QWORD *)(v13 + 40) = v15;
  v34 = *(double *)&v13;
  specialized Array._endMutation()(v13);
  v16 = *(_QWORD *)&v34 & 0xC000000000000001;
  v17 = v14;
  v18 = v15;
  if ((*(_QWORD *)&v34 & 0xC000000000000001) != 0)
    v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, *(_QWORD *)&v34);
  else
    v19 = *(id *)(*(_QWORD *)&v34 + 32);
  v20 = v19;
  if ((objc_msgSend(v19, "isHidden") & 1) != 0)
  {
    objc_msgSend(v20, "sizeThatFits:", v8, v10);
    v22 = v21;

    v23 = v6 + v22 + 0.0;
    if (v16)
    {
LABEL_6:
      v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(1, *(_QWORD *)&v34);
      goto LABEL_9;
    }
  }
  else
  {

    v23 = 0.0;
    if (v16)
      goto LABEL_6;
  }
  v24 = *(id *)(*(_QWORD *)&v34 + 40);
LABEL_9:
  v25 = v24;
  if (objc_msgSend(v24, "isHidden"))
  {
    objc_msgSend(v25, "sizeThatFits:", v8, v10);
    v27 = v26;
    swift_bridgeObjectRelease(*(_QWORD *)&v34);

    v23 = v23 + v6 + v27;
  }
  else
  {
    swift_bridgeObjectRelease(*(_QWORD *)&v34);

  }
  v28 = a1 < 0.1 || v23 < Height;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v29 = type metadata accessor for Logger(0);
  v30 = sub_100056D88(v29, (uint64_t)qword_1005F5748);
  v31 = Logger.logObject.getter(v30);
  v32 = static os_log_type_t.default.getter(v31);
  if (os_log_type_enabled(v31, v32))
  {
    v33 = swift_slowAlloc(18, -1);
    *(_DWORD *)v33 = 134218240;
    v34 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, v35);
    *(_WORD *)(v33 + 12) = 1024;
    LODWORD(v34) = v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v34, (char *)&v34 + 4);
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "FMUnknownItemsLandingViewController: updateContentVisibility: percent: %f show: %{BOOL}d", (uint8_t *)v33, 0x12u);
    swift_slowDealloc(v33, -1, -1);
  }

  sub_10022C3EC(v28, 1);
}

void sub_10022C3EC(char a1, char a2)
{
  void *v2;
  char v3;
  uint64_t v4;
  void *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  id (*v17)();
  uint64_t v18;
  id (*v19)();
  uint64_t v20;
  void *v21;
  void *v22;
  _QWORD *v23;
  _QWORD *v24;
  void *v25;
  _QWORD *v26;
  void (*v27)(__n128);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  _QWORD *v32;
  char isEscapingClosureAtFileLocation;
  __n128 v34;
  void **aBlock;
  uint64_t v36;
  void *v37;
  void *v38;
  void *v39;
  _QWORD *v40;

  v3 = a1 & 1;
  v4 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_showsAdditionalContent;
  if (*((_BYTE *)v2 + OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_showsAdditionalContent) != (a1 & 1))
  {
    v5 = v2;
    v8 = swift_allocObject(&unk_100552028, 25, 7);
    *(_QWORD *)(v8 + 16) = v2;
    *(_BYTE *)(v8 + 24) = v3;
    v9 = swift_allocObject(&unk_100552050, 25, 7);
    *(_QWORD *)(v9 + 16) = v2;
    *(_BYTE *)(v9 + 24) = v3;
    v10 = qword_1005D1DE8;
    v11 = v5;
    if (v10 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v12 = type metadata accessor for Logger(0);
    v13 = sub_100056D88(v12, (uint64_t)qword_1005F5748);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc(14, -1);
      *(_DWORD *)v16 = 67109376;
      LODWORD(aBlock) = a1 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 4);
      *(_WORD *)(v16 + 8) = 1024;
      LODWORD(aBlock) = a2 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, (char *)&aBlock + 4);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "FMUnknownItemsLandingViewController: Update additional content visibility: %{BOOL}d, animated: %{BOOL}d", (uint8_t *)v16, 0xEu);
      swift_slowDealloc(v16, -1, -1);
    }

    if ((a1 & 1) != 0)
      v17 = sub_10022CDDC;
    else
      v17 = sub_10022CD7C;
    if ((a1 & 1) != 0)
      v18 = v9;
    else
      v18 = v8;
    if ((a1 & 1) != 0)
      v19 = sub_10022CD7C;
    else
      v19 = sub_10022CDDC;
    if ((a1 & 1) != 0)
      v20 = v8;
    else
      v20 = v9;
    *((_BYTE *)v5 + v4) = v3;
    v21 = (void *)objc_opt_self(UIView);
    if ((a2 & 1) != 0)
    {
      v39 = v19;
      v40 = (_QWORD *)v20;
      aBlock = _NSConcreteStackBlock;
      v36 = 1107296256;
      v37 = sub_100037DF8;
      v38 = &unk_1005520E0;
      v22 = _Block_copy(&aBlock);
      v23 = v40;
      swift_retain_n(v20, 2);
      swift_retain(v18);
      swift_release(v23);
      v24 = (_QWORD *)swift_allocObject(&unk_100552118, 48, 7);
      v24[2] = 0x3FE0000000000000;
      v24[3] = 4;
      v24[4] = v17;
      v24[5] = v18;
      v39 = sub_10022CE9C;
      v40 = v24;
      aBlock = _NSConcreteStackBlock;
      v36 = 1107296256;
      v37 = sub_10005D218;
      v38 = &unk_100552130;
      v25 = _Block_copy(&aBlock);
      v26 = v40;
      swift_retain(v18);
      swift_release(v26);
      objc_msgSend(v21, "animateWithDuration:delay:options:animations:completion:", 4, v22, v25, 0.25, 0.0);
      swift_release(v18);
      swift_release(v20);
      swift_release(v9);
      swift_release(v8);
      _Block_release(v25);
      _Block_release(v22);
    }
    else
    {
      v27 = (void (*)(__n128))v17;
      v28 = v8;
      v29 = swift_allocObject(&unk_100552078, 32, 7);
      *(_QWORD *)(v29 + 16) = v19;
      *(_QWORD *)(v29 + 24) = v20;
      v30 = swift_allocObject(&unk_1005520A0, 32, 7);
      *(_QWORD *)(v30 + 16) = sub_100021E58;
      *(_QWORD *)(v30 + 24) = v29;
      v39 = sub_100021E78;
      v40 = (_QWORD *)v30;
      aBlock = _NSConcreteStackBlock;
      v36 = 1107296256;
      v37 = sub_100021E38;
      v38 = &unk_1005520B8;
      v31 = _Block_copy(&aBlock);
      v32 = v40;
      swift_retain_n(v20, 2);
      swift_retain(v18);
      swift_retain(v30);
      objc_msgSend(v21, "performWithoutAnimation:", v31, swift_release(v32).n128_f64[0]);
      _Block_release(v31);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v30, "", 123, 358, 44, 1);
      v34 = swift_release(v30);
      if ((isEscapingClosureAtFileLocation & 1) != 0)
      {
        __break(1u);
      }
      else
      {
        v27(v34);
        swift_release(v29);
        swift_release(v18);
        swift_release(v20);
        swift_release(v9);
        swift_release(v28);
      }
    }
  }
}

void sub_10022C838(char a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  void *v9;
  void *v10;
  uint64_t v11;
  _QWORD v12[5];
  uint64_t v13;

  if ((a1 & 1) != 0)
  {
    v9 = (void *)objc_opt_self(UIView);
    v12[4] = a3;
    v13 = a4;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    v12[2] = sub_100037DF8;
    v12[3] = &unk_100552158;
    v10 = _Block_copy(v12);
    v11 = v13;
    swift_retain(a4);
    swift_release(v11);
    objc_msgSend(v9, "animateWithDuration:delay:options:animations:completion:", a2, v10, 0, a5 * 0.5, 0.0);
    _Block_release(v10);
  }
}

void sub_10022C918(char a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100056D88(v2, (uint64_t)qword_1005F5748);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc(18, -1);
    v7 = qword_100488F50[a1];
    *(_DWORD *)v6 = 134218240;
    v9 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v9, &v10);
    *(_WORD *)(v6 + 12) = 1024;
    v8 = (a1 & 7) == 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v8, &v9);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMUnknownItemsLandingViewController: didLockCard: percent: %f show: %{BOOL}d", (uint8_t *)v6, 0x12u);
    swift_slowDealloc(v6, -1, -1);
  }

  sub_10022C3EC((a1 & 7) == 0, 0);
}

uint64_t sub_10022CA70()
{
  uint64_t v0;

  sub_10005E190(v0 + OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_delegate);
  return swift_unknownObjectRelease(*(_QWORD *)(v0
                                              + OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_cardChangeSubscription));
}

id sub_10022CB2C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMUnknownItemsLandingViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMUnknownItemsLandingViewController()
{
  return objc_opt_self(_TtC6FindMy35FMUnknownItemsLandingViewController);
}

uint64_t storeEnumTagSinglePayload for FMUnknownItemsLandingViewType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_10022CC90 + 4 * byte_100488DD5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_10022CCC4 + 4 * asc_100488DD0[v4]))();
}

uint64_t sub_10022CCC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10022CCCC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10022CCD4);
  return result;
}

uint64_t sub_10022CCE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10022CCE8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_10022CCEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10022CCF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMUnknownItemsLandingViewType()
{
  return &type metadata for FMUnknownItemsLandingViewType;
}

unint64_t sub_10022CD14()
{
  unint64_t result;

  result = qword_1005DC1B0;
  if (!qword_1005DC1B0)
  {
    result = swift_getWitnessTable(&unk_100488EB0, &type metadata for FMUnknownItemsLandingViewType);
    atomic_store(result, (unint64_t *)&qword_1005DC1B0);
  }
  return result;
}

uint64_t sub_10022CD58()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

id sub_10022CD7C()
{
  uint64_t v0;
  uint64_t v1;
  _BOOL8 v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (*(_BYTE *)(v0 + 24) & 1) == 0;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_titleLabel), "setHidden:", v2);
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_secondarySubtitleLabel), "setHidden:", v2);
}

id sub_10022CDDC()
{
  uint64_t v0;
  uint64_t v1;
  double v2;

  v1 = *(_QWORD *)(v0 + 16);
  if (*(_BYTE *)(v0 + 24))
    v2 = 1.0;
  else
    v2 = 0.0;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_titleLabel), "setAlpha:", v2);
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_secondarySubtitleLabel), "setAlpha:", v2);
}

uint64_t sub_10022CE44()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10022CE68()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10022CE78()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_10022CE9C(char a1)
{
  uint64_t v1;

  sub_10022C838(a1, *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(double *)(v1 + 16));
}

void sub_10022CEAC()
{
  AttributeScopes.FoundationAttributes.inlinePresentationIntent.getter();
  __break(1u);
}

unint64_t sub_10022CEC8()
{
  unint64_t result;

  result = qword_1005DC1C0;
  if (!qword_1005DC1C0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AttributeScopes.FoundationAttributes.InlinePresentationIntentAttribute, &type metadata for AttributeScopes.FoundationAttributes.InlinePresentationIntentAttribute);
    atomic_store(result, (unint64_t *)&qword_1005DC1C0);
  }
  return result;
}

void sub_10022CF0C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_10022CEC8();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

uint64_t sub_10022CF30()
{
  return 8;
}

uint64_t sub_10022CF3C(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_10022CF44(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_10022CF54()
{
  uint64_t v0;

  v0 = sub_100053F2C(&qword_1005DC1C8);
  return dispatch thunk of Hashable.hashValue.getter(v0, &protocol witness table for AnyKeyPath);
}

_QWORD *sub_10022CF98(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_10022CFA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C(&qword_1005DC1B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10022CFEC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10022D010(uint64_t a1)
{
  uint64_t v1;

  sub_10022A864(a1, v1);
}

void sub_10022D018()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_contentStackView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v2 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_contentContainerView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v3 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_heroImageView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v4 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_titleLabel;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v5 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_primarySubtitleLabel;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v6 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_secondarySubtitleLabel;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v7 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_searchButton;
  *(_QWORD *)&v0[v7] = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
  v8 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_spacerView;
  *(_QWORD *)&v0[v8] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v9 = OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_searchButtonTopConstraint;
  *(_QWORD *)&v0[v9] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  v0[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_type] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_cardChangeSubscription] = 0;
  v0[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_showsAdditionalContent] = 1;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMUnknownItemsLandingViewController.swift", 48, 2, 98, 0);
  __break(1u);
}

double sub_10022D1FC()
{
  double result;

  result = 18.0;
  xmmword_1005F5490 = xmmword_100488F90;
  *(_OWORD *)&qword_1005F54A0 = xmmword_100488F90;
  return result;
}

_QWORD *sub_10022D214(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  char *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t (*v22)(void);
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  objc_super v28;

  v1[OBJC_IVAR____TtC6FindMy15FMEmptyListView_isFirstLayout] = 1;
  v3 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_iconView;
  v4 = objc_allocWithZone((Class)UIImageView);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_iconViewContainer;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v7 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_titleLabel;
  *(_QWORD *)&v5[v7] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v8 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_messageLabel;
  *(_QWORD *)&v5[v8] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v9 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButton;
  v10 = (char *)objc_allocWithZone((Class)type metadata accessor for FMEmptyListButton());
  v11 = OBJC_IVAR____TtC6FindMy17FMEmptyListButton_textColor;
  v12 = (void *)objc_opt_self(UIColor);
  v13 = v10;
  *(_QWORD *)&v10[v11] = objc_msgSend(v12, "systemBlueColor");
  v13[OBJC_IVAR____TtC6FindMy17FMEmptyListButton_isEnabled] = 1;

  v14 = objc_msgSend(v12, "tertiarySystemFillColor");
  v15 = sub_1000472FC(v14, 1, 1, 0);

  *(_QWORD *)&v5[v9] = v15;
  v16 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_scrollView;
  *(_QWORD *)&v5[v16] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMScrollView()), "init");
  v17 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_fixedContainerView;
  *(_QWORD *)&v5[v17] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v18 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_scrollableContainerView;
  *(_QWORD *)&v5[v18] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v19 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButtonsStackView;
  *(_QWORD *)&v5[v19] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v20 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButtonCenteringConstraint;
  *(_QWORD *)&v5[v20] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy15FMEmptyListView_mediator] = a1;
  swift_retain(a1);

  v28.receiver = v5;
  v28.super_class = (Class)type metadata accessor for FMEmptyListView();
  v21 = objc_msgSendSuper2(&v28, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v22 = *(uint64_t (**)(void))((swift_isaMask & *v21) + 0x110);
  v23 = v21;
  v24 = v22();
  v25 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v23) + 0x118))(v24);
  v26 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v23) + 0x120))(v25);
  (*(void (**)(uint64_t))((swift_isaMask & *v23) + 0x128))(v26);
  sub_1000475B8();

  swift_release(a1);
  return v23;
}

id sub_10022D540()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMEmptyListView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_10022D570()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  char *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = v0;
  v0[OBJC_IVAR____TtC6FindMy15FMEmptyListView_isFirstLayout] = 1;
  v2 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_iconView;
  *(_QWORD *)&v1[v2] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v3 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_iconViewContainer;
  *(_QWORD *)&v1[v3] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v4 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_titleLabel;
  *(_QWORD *)&v1[v4] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v5 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_messageLabel;
  *(_QWORD *)&v1[v5] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v6 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButton;
  v7 = (char *)objc_allocWithZone((Class)type metadata accessor for FMEmptyListButton());
  v8 = OBJC_IVAR____TtC6FindMy17FMEmptyListButton_textColor;
  v9 = (void *)objc_opt_self(UIColor);
  v10 = v7;
  *(_QWORD *)&v7[v8] = objc_msgSend(v9, "systemBlueColor");
  v10[OBJC_IVAR____TtC6FindMy17FMEmptyListButton_isEnabled] = 1;

  v11 = objc_msgSend(v9, "tertiarySystemFillColor");
  v12 = sub_1000472FC(v11, 1, 1, 0);

  *(_QWORD *)&v1[v6] = v12;
  v13 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_scrollView;
  *(_QWORD *)&v1[v13] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMScrollView()), "init");
  v14 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_fixedContainerView;
  *(_QWORD *)&v1[v14] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v15 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_scrollableContainerView;
  *(_QWORD *)&v1[v15] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v16 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButtonsStackView;
  *(_QWORD *)&v1[v16] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v17 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButtonCenteringConstraint;
  *(_QWORD *)&v1[v17] = objc_msgSend(objc_allocWithZone((Class)NSLayoutConstraint), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMEmptyListView-iOS.swift", 32, 2, 71, 0);
  __break(1u);
}

uint64_t sub_10022D7B0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 26, 7);
}

void sub_10022D7D4()
{
  qword_1005F54B0 = 0x4034000000000000;
}

UIFontTextStyle sub_10022D7E4()
{
  qword_1005F54B8 = (uint64_t)UIFontTextStyleBody;
  return UIFontTextStyleBody;
}

UIFontTextStyle sub_10022D7FC()
{
  qword_1005F54C0 = (uint64_t)UIFontTextStyleBody;
  return UIFontTextStyleBody;
}

char *sub_10022D874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  char *v5;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  char *v18;
  NSString v19;
  void *v20;
  NSString v21;
  objc_super v23;

  v9 = OBJC_IVAR____TtC6FindMy28FMSymbolBulletedListItemView_imageView;
  v10 = objc_allocWithZone((Class)UIImageView);
  v11 = v5;
  *(_QWORD *)&v5[v9] = objc_msgSend(v10, "init");
  v12 = OBJC_IVAR____TtC6FindMy28FMSymbolBulletedListItemView_titleLabel;
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v13 = OBJC_IVAR____TtC6FindMy28FMSymbolBulletedListItemView_subtitleLabel;
  *(_QWORD *)&v11[v13] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v14 = OBJC_IVAR____TtC6FindMy28FMSymbolBulletedListItemView_imageViewContainer;
  *(_QWORD *)&v11[v14] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v15 = OBJC_IVAR____TtC6FindMy28FMSymbolBulletedListItemView_verticalStackView;
  *(_QWORD *)&v11[v15] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");

  v23.receiver = v11;
  v23.super_class = (Class)type metadata accessor for FMSymbolBulletedListItemView();
  v16 = (char *)objc_msgSendSuper2(&v23, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v17 = *(void **)&v16[OBJC_IVAR____TtC6FindMy28FMSymbolBulletedListItemView_titleLabel];
  v18 = v16;
  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v17, "setText:", v19, swift_bridgeObjectRelease(a2).n128_f64[0]);

  v20 = *(void **)&v18[OBJC_IVAR____TtC6FindMy28FMSymbolBulletedListItemView_subtitleLabel];
  v21 = String._bridgeToObjectiveC()();
  objc_msgSend(v20, "setText:", v21, swift_bridgeObjectRelease(a4).n128_f64[0]);

  objc_msgSend(*(id *)&v18[OBJC_IVAR____TtC6FindMy28FMSymbolBulletedListItemView_imageView], "setImage:", a5);
  sub_10022DA6C();

  return v18;
}

void sub_10022DA6C()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  double v10;
  double v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  Class isa;

  v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy28FMSymbolBulletedListItemView_titleLabel];
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy28FMSymbolBulletedListItemView_subtitleLabel];
  v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy28FMSymbolBulletedListItemView_imageViewContainer];
  v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMy28FMSymbolBulletedListItemView_imageView];
  v5 = *(id *)&v0[OBJC_IVAR____TtC6FindMy28FMSymbolBulletedListItemView_verticalStackView];
  v6 = v1;
  v7 = v2;
  v8 = v3;
  v9 = v4;
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  objc_msgSend(v0, "setAxis:", 0);
  objc_msgSend(v0, "setAlignment:", 3);
  objc_msgSend(v0, "setDistribution:", 0);
  if (qword_1005D1D58 != -1)
    swift_once(&qword_1005D1D58, sub_10022D7D4);
  objc_msgSend(v0, "setSpacing:", *(double *)&qword_1005F54B0);
  objc_msgSend(v8, "addSubview:", v9);
  objc_msgSend(v0, "addArrangedSubview:", v8);
  objc_msgSend(v0, "addArrangedSubview:", v5);
  objc_msgSend(v9, "setContentMode:", 4);
  LODWORD(v10) = 1148846080;
  objc_msgSend(v9, "setContentHuggingPriority:forAxis:", 0, v10);
  LODWORD(v11) = 1148846080;
  objc_msgSend(v9, "setContentCompressionResistancePriority:forAxis:", 0, v11);
  v12 = (void *)objc_opt_self(UIFont);
  if (qword_1005D1D60 != -1)
    swift_once(&qword_1005D1D60, sub_10022D7E4);
  v13 = objc_msgSend(v12, "preferredFontForTextStyle:", qword_1005F54B8);
  v14 = (void *)sub_10003CEE8(2);

  objc_msgSend(v6, "setFont:", v14);
  v15 = (void *)objc_opt_self(UIColor);
  v16 = objc_msgSend(v15, "labelColor");
  objc_msgSend(v6, "setTextColor:", v16);

  if (qword_1005D1D68 != -1)
    swift_once(&qword_1005D1D68, sub_10022D7FC);
  v17 = objc_msgSend(v12, "preferredFontForTextStyle:", qword_1005F54C0);
  objc_msgSend(v7, "setFont:", v17);

  v18 = objc_msgSend(v15, "secondaryLabelColor");
  objc_msgSend(v7, "setTextColor:", v18);

  v19 = v6;
  v20 = v7;
  objc_msgSend(v19, "setNumberOfLines:", 0);
  objc_msgSend(v19, "setAdjustsFontForContentSizeCategory:", 1);

  v21 = v20;
  objc_msgSend(v21, "setNumberOfLines:", 0);
  objc_msgSend(v21, "setAdjustsFontForContentSizeCategory:", 1);

  objc_msgSend(v5, "setAxis:", 1);
  objc_msgSend(v5, "addArrangedSubview:", v19);
  objc_msgSend(v5, "addArrangedSubview:", v21);
  v22 = (void *)objc_opt_self(NSLayoutConstraint);
  v23 = sub_100053F2C(&qword_1005D2F10);
  v24 = swift_allocObject(v23, 72, 7);
  *(_OWORD *)(v24 + 16) = xmmword_1004820D0;
  v25 = objc_msgSend(v9, "leadingAnchor");
  v26 = objc_msgSend(v8, "leadingAnchor");
  v27 = objc_msgSend(v25, "constraintEqualToAnchor:", v26);

  *(_QWORD *)(v24 + 32) = v27;
  v28 = objc_msgSend(v9, "trailingAnchor");
  v29 = objc_msgSend(v8, "trailingAnchor");
  v30 = objc_msgSend(v28, "constraintEqualToAnchor:", v29);

  *(_QWORD *)(v24 + 40) = v30;
  v31 = objc_msgSend(v9, "topAnchor");
  v32 = objc_msgSend(v8, "topAnchor");
  v33 = objc_msgSend(v31, "constraintGreaterThanOrEqualToAnchor:", v32);

  *(_QWORD *)(v24 + 48) = v33;
  v34 = objc_msgSend(v9, "bottomAnchor");
  v35 = objc_msgSend(v8, "bottomAnchor");
  v36 = objc_msgSend(v34, "constraintLessThanOrEqualToAnchor:", v35);

  *(_QWORD *)(v24 + 56) = v36;
  v37 = objc_msgSend(v9, "centerYAnchor");
  v38 = objc_msgSend(v19, "firstBaselineAnchor");
  v39 = objc_msgSend(v37, "constraintEqualToAnchor:", v38);

  *(_QWORD *)(v24 + 64) = v39;
  specialized Array._endMutation()(v40);
  sub_100048C64();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v22, "activateConstraints:", isa, swift_bridgeObjectRelease(v24).n128_f64[0]);

}

id sub_10022E104()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMSymbolBulletedListItemView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMSymbolBulletedListItemView()
{
  return objc_opt_self(_TtC6FindMy28FMSymbolBulletedListItemView);
}

void sub_10022E1BC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = OBJC_IVAR____TtC6FindMy28FMSymbolBulletedListItemView_imageView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v2 = OBJC_IVAR____TtC6FindMy28FMSymbolBulletedListItemView_titleLabel;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v3 = OBJC_IVAR____TtC6FindMy28FMSymbolBulletedListItemView_subtitleLabel;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v4 = OBJC_IVAR____TtC6FindMy28FMSymbolBulletedListItemView_imageViewContainer;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v5 = OBJC_IVAR____TtC6FindMy28FMSymbolBulletedListItemView_verticalStackView;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMSymbolBulletedListItemView.swift", 41, 2, 63, 0);
  __break(1u);
}

uint64_t sub_10022E3D8()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  Swift::String v6;
  uint64_t v7;
  id v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String v13;

  v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label), "text"));
  if (v1)
  {
    v2 = v1;
    v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);
    v5 = v4;

  }
  else
  {
    v3 = 0;
    v5 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain(v5);
  v6._countAndFlagsBits = 32;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(v5);
  v7 = v3;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v13._countAndFlagsBits = 0xD000000000000026;
  v13._object = (void *)0x80000001004B6F40;
  v9._object = (void *)0x80000001004B6F20;
  v9._countAndFlagsBits = 0xD000000000000014;
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v13);

  swift_bridgeObjectRetain(v5);
  String.append(_:)(v11);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v11._object);
  return v7;
}

void sub_10022E548()
{
  uint64_t v0;

}

id sub_10022E558()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMEmptyListButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_10022E588()
{
  sub_100045720();
  __asm { BR              X10 }
}

void sub_10022E5F4()
{
  uint64_t v0;
  char v1;
  void *v2;
  void *v3;
  id v4;
  Swift::String v5;
  Swift::String v6;
  void *object;
  NSString v8;
  void *v9;
  id v10;
  Swift::String v11;
  Swift::String v12;
  void *v13;
  NSString v14;
  id v15;
  id v16;
  Swift::String v17;
  Swift::String v18;
  void *v19;
  NSString v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;

  v1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x41646567616E616DLL, 0xEE00746E756F6363, 0x6E756F6363416F6ELL, 0xE900000000000074, 0);
  swift_bridgeObjectRelease(0xEE00746E756F6363);
  if ((v1 & 1) != 0)
  {
    v2 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_titleLabel);
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(0xE000000000000000);
    v3 = (void *)objc_opt_self(NSBundle);
    v4 = objc_msgSend(v3, "mainBundle");
    v5._countAndFlagsBits = 0xD000000000000018;
    v21._countAndFlagsBits = 0xD00000000000002ALL;
    v21._object = (void *)0x80000001004B6FE0;
    v5._object = (void *)0x80000001004B6FC0;
    v6._countAndFlagsBits = 0;
    v6._object = (void *)0xE000000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v21)._object;

    v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    objc_msgSend(v2, "setText:", v8);

    v9 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_messageLabel);
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(0xE000000000000000);
    v10 = objc_msgSend(v3, "mainBundle");
    v11._countAndFlagsBits = 0xD00000000000001ALL;
    v22._countAndFlagsBits = 0xD00000000000002CLL;
    v22._object = (void *)0x80000001004B7030;
    v11._object = (void *)0x80000001004B7010;
    v12._countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v22)._object;

    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v13);
    objc_msgSend(v9, "setText:", v14);

    v15 = objc_retain(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButton)
                            + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label));
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(0xE000000000000000);
    v16 = objc_msgSend(v3, "mainBundle");
    v23._countAndFlagsBits = 0xD000000000000023;
    v23._object = (void *)0x80000001004AFD40;
    v17._object = (void *)0x80000001004AFD20;
    v17._countAndFlagsBits = 0xD000000000000011;
    v18._countAndFlagsBits = 0;
    v18._object = (void *)0xE000000000000000;
    v19 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, (Swift::String_optional)0, (NSBundle)v16, v18, v23)._object;

    v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v19);
    objc_msgSend(v15, "setText:", v20);

  }
}

_QWORD *sub_10022E998(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return sub_100366F70(a1);
}

id sub_10022EA0C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMDevicesTerminalView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMDevicesTerminalView()
{
  return objc_opt_self(_TtC6FindMy21FMDevicesTerminalView);
}

uint64_t *sub_10022EA5C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v14);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = type metadata accessor for FMIPDevice(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = *(int *)(sub_100053F2C(&qword_1005D2F90) + 48);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = type metadata accessor for FMIPItem(0);
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        v13 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      v16 = a1;
      v17 = a3;
      v18 = 1;
    }
    else
    {
      v15 = type metadata accessor for FMIPItem(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
      v16 = a1;
      v17 = a3;
      v18 = 0;
    }
    swift_storeEnumTagMultiPayload(v16, v17, v18);
  }
  return a1;
}

uint64_t sub_10022EBC4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload(a1, a2) != 1)
  {
    v8 = type metadata accessor for FMIPItem(0);
    v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
    v10 = a1;
    return v9(v10, v8);
  }
  v3 = type metadata accessor for FMIPDevice(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  v4 = a1 + *(int *)(sub_100053F2C(&qword_1005D2F90) + 48);
  v5 = type metadata accessor for FMIPItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    v9 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    v10 = v4;
    v8 = v5;
    return v9(v10, v8);
  }
  return result;
}

uint64_t sub_10022EC84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for FMIPDevice(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = *(int *)(sub_100053F2C(&qword_1005D2F90) + 48);
    v8 = (void *)(a1 + v7);
    v9 = (const void *)(a2 + v7);
    v10 = type metadata accessor for FMIPItem(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      v13 = 1;
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
      v13 = 1;
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  else
  {
    v14 = type metadata accessor for FMIPItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
    v13 = 0;
  }
  swift_storeEnumTagMultiPayload(a1, a3, v13);
  return a1;
}

uint64_t sub_10022EDC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a1 != a2)
  {
    sub_1000E5AA8(a1);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for FMIPDevice(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = *(int *)(sub_100053F2C(&qword_1005D2F90) + 48);
      v8 = (void *)(a1 + v7);
      v9 = (const void *)(a2 + v7);
      v10 = type metadata accessor for FMIPItem(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        v12 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        v13 = 1;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
        v13 = 1;
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
    }
    else
    {
      v14 = type metadata accessor for FMIPItem(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, a3, v13);
  }
  return a1;
}

uint64_t type metadata accessor for FMLostModeTrackable(uint64_t a1)
{
  uint64_t result;

  result = qword_1005DC378;
  if (!qword_1005DC378)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMLostModeTrackable);
  return result;
}

uint64_t sub_10022EF48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for FMIPDevice(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = *(int *)(sub_100053F2C(&qword_1005D2F90) + 48);
    v8 = (void *)(a1 + v7);
    v9 = (const void *)(a2 + v7);
    v10 = type metadata accessor for FMIPItem(0);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      v13 = 1;
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
      v13 = 1;
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  else
  {
    v14 = type metadata accessor for FMIPItem(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
    v13 = 0;
  }
  swift_storeEnumTagMultiPayload(a1, a3, v13);
  return a1;
}

uint64_t sub_10022F084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a1 != a2)
  {
    sub_1000E5AA8(a1);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for FMIPDevice(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = *(int *)(sub_100053F2C(&qword_1005D2F90) + 48);
      v8 = (void *)(a1 + v7);
      v9 = (const void *)(a2 + v7);
      v10 = type metadata accessor for FMIPItem(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        v12 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        v13 = 1;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
        v13 = 1;
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
    }
    else
    {
      v14 = type metadata accessor for FMIPItem(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a1, a2, v14);
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(a1, a3, v13);
  }
  return a1;
}

uint64_t sub_10022F1D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _BYTE v9[32];
  _QWORD v10[2];

  v2 = type metadata accessor for FMIPItem(319);
  v3 = v2;
  if (v4 <= 0x3F)
  {
    v10[0] = *(_QWORD *)(v2 - 8) + 64;
    v3 = type metadata accessor for FMIPDevice(319);
    if (v5 <= 0x3F)
    {
      sub_1000058E0(319);
      if (v7 > 0x3F)
      {
        return v6;
      }
      else
      {
        swift_getTupleTypeLayout2(v9, *(_QWORD *)(v3 - 8) + 64, *(_QWORD *)(v6 - 8) + 64);
        v10[1] = v9;
        swift_initEnumMetadataMultiPayload(a1, 256, 2, v10);
        return 0;
      }
    }
  }
  return v3;
}

uint64_t sub_10022F290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v24;

  v1 = type metadata accessor for FMIPFeatures(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v24 - v6;
  v8 = type metadata accessor for FMIPDevice(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FMLostModeTrackable(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E5A64(v0, (uint64_t)v14);
  if (swift_getEnumCaseMultiPayload(v14, v12) == 1)
  {
    v15 = (uint64_t)&v14[*(int *)(sub_100053F2C(&qword_1005D2F90) + 48)];
    v16.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
    v17 = FMIPDevice.isLocalFindable.getter(v16);
    if ((v17 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      sub_1000051EC(v15, (uint64_t *)&unk_1005D3AA0);
      v18 = 0;
    }
    else
    {
      v19 = FMIPDevice.features.getter(v17);
      static FMIPFeatures.isNotifyWhenDetachedSupported.getter(v19);
      v20 = sub_1001404F0();
      v21 = dispatch thunk of SetAlgebra.isSuperset(of:)(v5, v1, v20);
      v22 = *(void (**)(char *, uint64_t))(v2 + 8);
      v22(v5, v1);
      v22(v7, v1);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      v18 = v21 ^ 1;
      sub_1000051EC(v15, (uint64_t *)&unk_1005D3AA0);
    }
  }
  else
  {
    sub_1000E5AA8((uint64_t)v14);
    v18 = 1;
  }
  return v18 & 1;
}

BOOL sub_10022F490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  id v21;
  unint64_t v22;
  Swift::Bool v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  char *v35;
  unint64_t v36;
  char v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v50 = type metadata accessor for FMIPItem(0);
  v53 = *(_QWORD *)(v50 - 8);
  v0 = __chkstk_darwin(v50);
  v52 = (uint64_t)&v45 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v0);
  v47 = (char *)&v45 - v2;
  v51 = type metadata accessor for FMIPFeatures(0);
  v49 = *(_QWORD *)(v51 - 8);
  v3 = __chkstk_darwin(v51);
  v48 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v6 = (char *)&v45 - v5;
  v7 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v45 - v11;
  v13 = type metadata accessor for FMIPDevice(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for FMLostModeTrackable(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = objc_msgSend((id)objc_opt_self(UNUserNotificationCenter), "currentNotificationCenter");
  v21 = objc_msgSend(v20, "notificationSettings");

  v22 = (unint64_t)objc_msgSend(v21, "authorizationStatus");
  if ((v22 | 2) == 3)
    return 0;
  v46 = v10;
  v25 = v51;
  v24 = v52;
  v26 = (uint64_t)v12;
  v27 = v53;
  sub_1000E5A64(v54, (uint64_t)v19);
  if (swift_getEnumCaseMultiPayload(v19, v17) != 1)
  {
    v32 = v50;
    (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v24, v19, v50);
    v23 = FMIPItem.canEnableNotifyWhenFound()();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v24, v32);
    return v23;
  }
  v28 = (uint64_t)&v19[*(int *)(sub_100053F2C(&qword_1005D2F90) + 48)];
  v29 = v16;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v19, v13);
  sub_10005DAA0(v28, v26, (uint64_t *)&unk_1005D3AA0);
  v31 = FMIPDevice.isLocalFindable.getter(v30);
  if ((v31 & 1) != 0)
  {
    sub_1000051EC(v26, (uint64_t *)&unk_1005D3AA0);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    return 0;
  }
  v52 = v26;
  v54 = v13;
  v34 = FMIPDevice.features.getter(v31);
  v35 = v48;
  static FMIPFeatures.isNotifyWhenDetachedSupported.getter(v34);
  v36 = sub_1001404F0();
  v37 = dispatch thunk of SetAlgebra.isSuperset(of:)(v35, v25, v36);
  v38 = *(void (**)(char *, uint64_t))(v49 + 8);
  v38(v35, v25);
  v38(v6, v25);
  if ((v37 & 1) != 0)
  {
    sub_1000051EC(v52, (uint64_t *)&unk_1005D3AA0);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v29, v54);
    return 0;
  }
  v39 = v52;
  v40 = (uint64_t)v46;
  sub_1000E5B2C(v52, (uint64_t)v46);
  v41 = v50;
  v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v40, 1, v50);
  v43 = v54;
  if (v42 == 1)
  {
    sub_1000051EC(v40, (uint64_t *)&unk_1005D3AA0);
    v23 = FMIPDevice.canEnableNotifyWhenFound()();
  }
  else
  {
    v44 = v47;
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v47, v40, v41);
    v23 = FMIPItem.canEnableNotifyWhenFound()();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v44, v41);
  }
  sub_1000051EC(v39, (uint64_t *)&unk_1005D3AA0);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v29, v43);
  return v23;
}

uint64_t sub_10022F8C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  __n128 v25;
  uint64_t v26;
  id v27;
  NSString v28;
  NSString v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;

  v2 = v1;
  v4 = sub_100053F2C((uint64_t *)&unk_1005D3470);
  __chkstk_darwin(v4);
  v38 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FMIPProductType(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FMIPItem(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FMLostModeTrackable(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E5A64(v2, (uint64_t)v16);
  if (swift_getEnumCaseMultiPayload(v16, v14) == 1)
  {
    v17 = (uint64_t)&v16[*(int *)(sub_100053F2C(&qword_1005D2F90) + 48)];
    v18 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a1, 1, 1, v18);
    sub_1000051EC(v17, (uint64_t *)&unk_1005D3AA0);
    v19 = type metadata accessor for FMIPDevice(0);
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v16, v19);
  }
  v21 = a1;
  v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v11 + 32))(v13, v16, v10);
  FMIPItem.productType.getter(v22);
  v23 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
  if (v23 == enum case for FMIPProductType.b389(_:))
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
    sub_1000051EC((uint64_t)v9, &qword_1005D8EA8);
  }
  else
  {
    v24 = v23;
    if (v23 != enum case for FMIPProductType.zeus(_:))
    {
      v34 = enum case for FMIPProductType.hawkeye(_:);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      if (v24 == v34)
      {
        (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
        v35 = type metadata accessor for URL(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v21, 1, 1, v35);
        return sub_1000051EC((uint64_t)v9, &qword_1005D7320);
      }
      else
      {
        v36 = type metadata accessor for URL(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v21, 1, 1, v36);
        return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      }
    }
    v25.n128_f64[0] = (*(double (**)(char *, uint64_t))(v7 + 96))(v9, v6);
    v26 = type metadata accessor for FMIPZeusProductInformation(0, v25);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v9, v26);
  }
  v27 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v28 = String._bridgeToObjectiveC()();
  v29 = String._bridgeToObjectiveC()();
  v30 = objc_msgSend(v27, "URLForResource:withExtension:", v28, v29);

  v31 = (uint64_t)v38;
  if (v30)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)(v30);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v32 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v31, 0, 1, v32);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v33 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v31, 1, 1, v33);
  }
  return sub_10005DAA0(v31, a1, (uint64_t *)&unk_1005D3470);
}

uint64_t sub_10022FCE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  Swift::String v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;

  v1 = type metadata accessor for FMIPItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  __chkstk_darwin(v21);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FMIPDevice(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FMLostModeTrackable(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000E5A64(v0, (uint64_t)v13);
  if (swift_getEnumCaseMultiPayload(v13, v11) == 1)
  {
    v14 = (uint64_t)&v13[*(int *)(sub_100053F2C(&qword_1005D2F90) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v13, v7);
    sub_10005DAA0(v14, (uint64_t)v6, (uint64_t *)&unk_1005D3AA0);
    v22 = 0;
    v23 = 0xE000000000000000;
    _StringGuts.grow(_:)(46);
    v15._countAndFlagsBits = 0xD00000000000001ELL;
    v15._object = (void *)0x80000001004B7080;
    String.append(_:)(v15);
    _print_unlocked<A, B>(_:_:)(v10, &v22, v7, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v16._countAndFlagsBits = 0x61506D657469202CLL;
    v16._object = (void *)0xEC000000203A7472;
    String.append(_:)(v16);
    _print_unlocked<A, B>(_:_:)(v6, &v22, v21, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v17 = v22;
    sub_1000051EC((uint64_t)v6, (uint64_t *)&unk_1005D3AA0);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v13, v1);
    v22 = 0;
    v23 = 0xE000000000000000;
    _StringGuts.grow(_:)(30);
    v18._object = (void *)0x80000001004B7060;
    v18._countAndFlagsBits = 0xD00000000000001CLL;
    String.append(_:)(v18);
    _print_unlocked<A, B>(_:_:)(v4, &v22, v1, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v17 = v22;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return v17;
}

uint64_t FMFLocationAlert.localizedPlaceAndScheduleString.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  NSString v3;
  id v4;
  uint64_t v5;

  sub_100230104();
  v1 = v0;
  v2 = (void *)FMFLocationAlert.fence.getter();
  v3 = String._bridgeToObjectiveC()();
  v4 = objc_msgSend(v2, "localizedSubtitleStringWithLocationName:", v3);

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(v4);
  swift_bridgeObjectRelease(v1);

  return v5;
}

Swift::String __swiftcall FMFLocationAlert.requestNotificationString(follower:)(Swift::String follower)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  NSString v4;
  NSString v5;
  id v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  Swift::String result;

  sub_100230104();
  v2 = v1;
  v3 = (void *)FMFLocationAlert.fence.getter();
  v4 = String._bridgeToObjectiveC()();
  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v3, "localizedRequestNotificationStringForFollower:locationName:", v4, v5);

  v7 = static String._unconditionallyBridgeFromObjectiveC(_:)(v6);
  v9 = v8;
  swift_bridgeObjectRelease(v2);

  v10 = v7;
  v11 = v9;
  result._object = v11;
  result._countAndFlagsBits = v10;
  return result;
}

uint64_t sub_100230104()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t countAndFlagsBits;
  id v26;
  Swift::String v27;
  Swift::String v28;
  char *v29;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  Swift::String v35;

  v0 = sub_100053F2C((uint64_t *)&unk_1005D3350);
  v1 = __chkstk_darwin(v0);
  v3 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  v5 = (char *)&v31 - v4;
  v6 = type metadata accessor for FMFLocation(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v32 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100053F2C(&qword_1005DC400);
  __chkstk_darwin(v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FMFLabel(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  FMFLocationAlert.label.getter(v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    v17 = sub_1000051EC((uint64_t)v11, &qword_1005DC400);
  }
  else
  {
    v18 = (*(uint64_t (**)(char *, char *, uint64_t))(v13 + 32))(v16, v11, v12);
    v19 = FMFLabel.value.getter(v18);
    v21 = v20;
    v23 = swift_bridgeObjectRelease(v20);
    v24 = HIBYTE(v21) & 0xF;
    if ((v21 & 0x2000000000000000) == 0)
      v24 = v19 & 0xFFFFFFFFFFFFLL;
    if (v24)
    {
      countAndFlagsBits = FMFLabel.value.getter(v22);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
      return countAndFlagsBits;
    }
    v17 = (*(uint64_t (**)(char *, uint64_t, __n128))(v13 + 8))(v16, v12, v23);
  }
  FMFLocationAlert.location.getter(v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1000051EC((uint64_t)v5, (uint64_t *)&unk_1005D3350);
    v33 = 0;
    v34 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v34);
    v26 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v35._countAndFlagsBits = 0xD000000000000037;
    v35._object = (void *)0x80000001004B70F0;
    v27._object = (void *)0x80000001004B70C0;
    v27._countAndFlagsBits = 0xD000000000000025;
    v28._countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, (Swift::String_optional)0, (NSBundle)v26, v28, v35)._countAndFlagsBits;

  }
  else
  {
    v29 = v32;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v32, v5, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v3, v29, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v3, 0, 1, v6);
    countAndFlagsBits = sub_1000530E0((uint64_t)v3, 0);
    sub_1000051EC((uint64_t)v3, (uint64_t *)&unk_1005D3350);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v29, v6);
  }
  return countAndFlagsBits;
}

id sub_10023052C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMMutableGestureView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMMutableGestureView()
{
  return objc_opt_self(_TtC6FindMy20FMMutableGestureView);
}

void sub_10023060C(void *a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  _BOOL8 v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  id v77;
  NSString v78;
  Class isa;
  id v80;
  id v81;
  void *v82;
  void *v83;
  char **v84;
  id v85;
  id v86;
  uint64_t v87;
  void *v88;
  void *v89;
  id v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _BOOL8 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  id v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  NSString v108;
  _QWORD *v109;
  int v110;
  void (*v111)(_QWORD, _QWORD, _QWORD);
  uint64_t v112;
  id v113;
  Swift::String v114;
  Swift::String v115;
  void *v116;
  NSString v117;
  id v118;
  char *v119;
  uint64_t v120;
  __int16 v121;
  char *v122;
  uint64_t v123;
  id v124;
  void *v125;
  id v126;
  Swift::String v127;
  Swift::String v128;
  void *object;
  NSString v130;
  id v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  __n128 v135;
  _QWORD *v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  id v140;
  void *v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  NSString v148;
  double v149;
  id v150;
  double v151;
  void *v152;
  NSString v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  char *v160;
  uint64_t v161;
  __n128 v162;
  _QWORD *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t *v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  id v181;
  void *v182;
  void (*v183)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, uint64_t);
  uint64_t v184;
  uint64_t v185;
  uint64_t (*v186)(uint64_t, uint64_t, uint64_t);
  int v187;
  char *v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  char v196;
  void (*v197)(uint64_t, uint64_t);
  uint64_t v198;
  _QWORD *v199;
  char *v200;
  id v201;
  __n128 v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  _QWORD *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  void (*v217)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v218;
  uint64_t (*v219)(uint64_t, uint64_t, uint64_t);
  int v220;
  uint64_t v221;
  uint64_t v222;
  int v223;
  uint64_t v224;
  uint64_t v225;
  char *v226;
  uint64_t v227;
  char v228;
  void (*v229)(char *, uint64_t);
  char *v230;
  char v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  int v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  uint64_t v243;
  uint64_t v244;
  void (*v245)(char *, uint64_t);
  id v246;
  void *v247;
  char v248;
  void *v249;
  char **v250;
  id v251;
  _QWORD *v252;
  uint64_t v253;
  char *v254;
  char *v255;
  char *v256;
  uint64_t v257;
  char *v258;
  uint64_t v259;
  char *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  char *v264;
  char *v265;
  char *v266;
  char *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  char *v280;
  uint64_t (*v281)(char *, uint64_t, uint64_t);
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t (*v286)(char *, uint64_t);
  char *v287;
  uint64_t v288;
  char *v289;
  _QWORD *v290;
  id v291;
  id v292;
  char *v293;
  uint64_t (*v294)(uint64_t, uint64_t, uint64_t);
  char v295[8];
  char v296[8];
  uint64_t v297;
  unint64_t v298;
  Swift::String v299;
  Swift::String v300;

  v292 = a1;
  v4 = type metadata accessor for FMFLabelSourceType(0);
  v276 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v258 = (char *)&v253 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v273 = sub_100053F2C(&qword_1005DC3E8);
  v6 = __chkstk_darwin(v273);
  v265 = (char *)&v253 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v275 = (uint64_t)&v253 - v8;
  v9 = sub_100053F2C((uint64_t *)&unk_1005DC3F0);
  v10 = __chkstk_darwin(v9);
  v257 = (uint64_t)&v253 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v268 = (uint64_t)&v253 - v13;
  v14 = __chkstk_darwin(v12);
  v264 = (char *)&v253 - v15;
  v16 = __chkstk_darwin(v14);
  v259 = (uint64_t)&v253 - v17;
  v18 = __chkstk_darwin(v16);
  v271 = (uint64_t)&v253 - v19;
  __chkstk_darwin(v18);
  v283 = (uint64_t)&v253 - v20;
  v282 = sub_100053F2C(&qword_1005E3230);
  __chkstk_darwin(v282);
  v289 = (char *)&v253 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100053F2C(&qword_1005D33C0);
  v23 = __chkstk_darwin(v22);
  v274 = (uint64_t)&v253 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v23);
  v287 = (char *)&v253 - v26;
  __chkstk_darwin(v25);
  v290 = (uint64_t *)((char *)&v253 - v27);
  v28 = type metadata accessor for FMFLabel(0);
  v29 = *(_QWORD *)(v28 - 8);
  v284 = v28;
  v285 = v29;
  __chkstk_darwin(v28);
  v31 = (char *)&v253 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v262 = type metadata accessor for FMFDefaultLabel(0);
  v261 = *(_QWORD *)(v262 - 8);
  __chkstk_darwin(v262);
  v260 = (char *)&v253 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v279 = type metadata accessor for FMFLocation(0);
  v278 = *(_QWORD *)(v279 - 8);
  v33 = __chkstk_darwin(v279);
  v266 = (char *)&v253 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __chkstk_darwin(v33);
  v256 = (char *)&v253 - v36;
  __chkstk_darwin(v35);
  v254 = (char *)&v253 - v37;
  v38 = sub_100053F2C((uint64_t *)&unk_1005D3350);
  v39 = __chkstk_darwin(v38);
  v280 = (char *)&v253 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __chkstk_darwin(v39);
  v270 = (uint64_t)&v253 - v42;
  __chkstk_darwin(v41);
  v44 = (char *)&v253 - v43;
  v45 = sub_100053F2C(&qword_1005DC400);
  v46 = __chkstk_darwin(v45);
  v263 = (uint64_t)&v253 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __chkstk_darwin(v46);
  v272 = (uint64_t)&v253 - v49;
  v50 = __chkstk_darwin(v48);
  v269 = (uint64_t)&v253 - v51;
  v52 = __chkstk_darwin(v50);
  v288 = (uint64_t)&v253 - v53;
  v54 = __chkstk_darwin(v52);
  v255 = (char *)&v253 - v55;
  __chkstk_darwin(v54);
  v57 = (char *)&v253 - v56;
  v58 = type metadata accessor for IndexPath(0);
  v59 = *(_QWORD *)(v58 - 8);
  v60 = __chkstk_darwin(v58);
  v267 = (char *)&v253 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __chkstk_darwin(v60);
  v293 = (char *)&v253 - v63;
  __chkstk_darwin(v62);
  v65 = (char *)&v253 - v64;
  v294 = v2;
  v66 = sub_1003393F0();
  v67 = v66;
  v68 = IndexPath.section.getter(v66);
  v281 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 16);
  v69 = v281(v65, a2, v58);
  if (v68)
  {
    v286 = *(uint64_t (**)(char *, uint64_t))(v59 + 8);
    v70 = v286(v65, v58);
  }
  else
  {
    v71 = IndexPath.item.getter(v69);
    v286 = *(uint64_t (**)(char *, uint64_t))(v59 + 8);
    v70 = v286(v65, v58);
    if (!v71)
    {
      v118 = objc_allocWithZone((Class)type metadata accessor for FMLabelTableViewLocationCell());
      v119 = sub_100382298(0xD00000000000001CLL, 0x80000001004B7270);
      v120 = *(_QWORD *)((char *)v294 + OBJC_IVAR____TtC6FindMy21FMLabelViewController_displayAddress + 8);
      v121 = *(_WORD *)((char *)v294 + OBJC_IVAR____TtC6FindMy21FMLabelViewController_displayAddress + 16);
      v122 = &v119[OBJC_IVAR____TtC6FindMy28FMLabelTableViewLocationCell_displayAddress];
      v123 = *(_QWORD *)&v119[OBJC_IVAR____TtC6FindMy28FMLabelTableViewLocationCell_displayAddress + 8];
      *(_QWORD *)v122 = *(_QWORD *)((char *)v294 + OBJC_IVAR____TtC6FindMy21FMLabelViewController_displayAddress);
      *((_QWORD *)v122 + 1) = v120;
      *((_WORD *)v122 + 8) = v121;
      swift_bridgeObjectRetain(v120);
      swift_bridgeObjectRelease(v123);
      sub_100382AE0();
      objc_msgSend(v119, "setSelectionStyle:", 0);
      return;
    }
  }
  v277 = v4;
  v72 = IndexPath.section.getter(v70);
  v73 = IndexPath.item.getter(v72);
  v74 = v73;
  if (!v72)
  {
    v74 = v73 - 1;
    if (__OFSUB__(v73, 1))
    {
      __break(1u);
      goto LABEL_128;
    }
  }
  v75 = IndexPath.section.getter(v73);
  IndexPath.init(item:section:)(v74, v75);
  v76 = v292;
  v77 = objc_msgSend(v292, "allowsSelection");
  v78 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v80 = objc_msgSend(v76, "dequeueReusableCellWithIdentifier:forIndexPath:", v78, isa);

  objc_msgSend(v80, "setUserInteractionEnabled:", v77);
  v291 = v80;
  v81 = objc_msgSend(v80, "textLabel");
  if (v81)
  {
    v82 = v81;
    v83 = (void *)objc_opt_self(UIColor);
    v84 = &selRef_labelColor;
    if (!(_DWORD)v77)
      v84 = &selRef_secondaryLabelColor;
    v85 = objc_msgSend(v83, *v84);
    objc_msgSend(v82, "setTextColor:", v85);

  }
  v86 = objc_msgSend(v291, "textLabel");
  v87 = (uint64_t)v289;
  if (v86)
  {
    v88 = v86;
    v89 = (void *)objc_opt_self(UIFont);
    v90 = objc_msgSend(v89, "preferredFontForTextStyle:", *(_QWORD *)((char *)v294 + OBJC_IVAR____TtC6FindMy21FMLabelViewController_style));
    objc_msgSend(v88, "setFont:", v90);

  }
  v91 = v293;
  v92 = IndexPath.section.getter(v86);
  if (v92)
  {
    if (IndexPath.section.getter(v92) != 1)
    {
      v270 = 0;
      v109 = 0;
      v110 = 0;
      v111 = (void (*)(_QWORD, _QWORD, _QWORD))v290;
      v102 = v291;
      goto LABEL_68;
    }
    v93 = OBJC_IVAR____TtC6FindMy21FMLabelViewController_customLabels;
    v94 = *(_QWORD *)((char *)v294 + OBJC_IVAR____TtC6FindMy21FMLabelViewController_customLabels);
    v95 = v284;
    if (v94)
      v96 = *(_QWORD *)(v94 + 16);
    else
      v96 = 0;
    if (IndexPath.item.getter(1) == v96
      && *((_BYTE *)v294 + OBJC_IVAR____TtC6FindMy21FMLabelViewController_isShowingAddCustomLabel) == 1)
    {
      v102 = v291;
      v124 = objc_msgSend(v291, "textLabel");
      if (v124)
      {
        v125 = v124;
        v297 = 0;
        v298 = 0xE000000000000000;
        _StringGuts.grow(_:)(20);
        swift_bridgeObjectRelease(v298);
        v126 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v127._countAndFlagsBits = 0xD00000000000001BLL;
        v300._countAndFlagsBits = 0xD00000000000002DLL;
        v300._object = (void *)0x80000001004B71F0;
        v127._object = (void *)0x80000001004B71D0;
        v128._countAndFlagsBits = 0;
        v128._object = (void *)0xE000000000000000;
        object = NSLocalizedString(_:tableName:bundle:value:comment:)(v127, (Swift::String_optional)0, (NSBundle)v126, v128, v300)._object;

        v130 = String._bridgeToObjectiveC()();
        objc_msgSend(v125, "setText:", v130, swift_bridgeObjectRelease(object).n128_f64[0]);

      }
      v109 = objc_msgSend(v102, "textLabel");
      if (v109)
      {
        v131 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
        objc_msgSend(v109, "setTextColor:", v131);

        v270 = 0;
        v109 = 0;
      }
      else
      {
        v270 = 0;
      }
      v110 = 0;
      goto LABEL_58;
    }
    v109 = *(_QWORD **)((char *)v294 + v93);
    v111 = (void (*)(_QWORD, _QWORD, _QWORD))v290;
    if (!v109)
    {
      v270 = 0;
      v87 = (uint64_t)v289;
      goto LABEL_43;
    }
    swift_bridgeObjectRetain(v109);
    v133 = IndexPath.item.getter(v132);
    if ((v133 & 0x8000000000000000) == 0)
    {
      v87 = (uint64_t)v289;
      if (v133 < v109[2])
      {
        v134 = v285;
        (*(void (**)(char *, unint64_t, uint64_t))(v285 + 16))(v31, (unint64_t)v109+ ((*(unsigned __int8 *)(v134 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80))+ *(_QWORD *)(v285 + 72) * v133, v95);
        v135 = swift_bridgeObjectRelease(v109);
        v270 = FMFLabel.localizedValue.getter(v135);
        v109 = v136;
        (*(void (**)(char *, uint64_t))(v134 + 8))(v31, v95);
        v111 = (void (*)(_QWORD, _QWORD, _QWORD))v290;
LABEL_43:
        *(_QWORD *)&v149 = swift_bridgeObjectRetain(v109).n128_u64[0];
        v102 = v291;
        v150 = objc_msgSend(v291, "textLabel", v149);
        if (!v150)
        {
          swift_bridgeObjectRelease(v109);
          v110 = 0;
          goto LABEL_68;
        }
        v152 = v150;
        if (v109)
        {
          v153 = String._bridgeToObjectiveC()();
          *(_QWORD *)&v151 = swift_bridgeObjectRelease(v109).n128_u64[0];
        }
        else
        {
          v153 = 0;
        }
        objc_msgSend(v152, "setText:", v153, v151);

        goto LABEL_67;
      }
      goto LABEL_130;
    }
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
    goto LABEL_132;
  }
  v97 = v67;
  v98 = static FMFLabel.defaultLabels(includingOther:)(0);
  v99 = *(_QWORD *)(v98 + 16);
  swift_bridgeObjectRelease(v98);
  if (__OFADD__(v99 + v97, 1))
  {
LABEL_128:
    __break(1u);
    goto LABEL_129;
  }
  v101 = IndexPath.item.getter(v100);
  if (v101 == 0 && v67)
  {
    v102 = v291;
    v103 = objc_msgSend(v291, "textLabel");
    v104 = v278;
    v87 = (uint64_t)v289;
    if (v103)
    {
      v105 = v103;
      v106 = (uint64_t)v294 + OBJC_IVAR____TtC6FindMy21FMLabelViewController_location;
      swift_beginAccess((char *)v294 + OBJC_IVAR____TtC6FindMy21FMLabelViewController_location, v295, 0, 0);
      sub_100007464(v106, (uint64_t)v44, (uint64_t *)&unk_1005D3350);
      v107 = v279;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v104 + 48))(v44, 1, v279))
      {
        sub_1000051EC((uint64_t)v44, (uint64_t *)&unk_1005D3350);
        v108 = 0;
      }
      else
      {
        v154 = v254;
        (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v254, v44, v107);
        v155 = sub_1000051EC((uint64_t)v44, (uint64_t *)&unk_1005D3350);
        FMFLocation.label.getter(v155);
        v104 = v278;
        (*(void (**)(char *, uint64_t))(v278 + 8))(v154, v107);
        v156 = v284;
        v157 = v285;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v285 + 48))(v57, 1, v284) == 1)
        {
          sub_1000051EC((uint64_t)v57, &qword_1005DC400);
          v108 = 0;
        }
        else
        {
          ((void (*)(void))FMFLabel.localizedValue.getter)();
          v165 = v164;
          (*(void (**)(char *, uint64_t))(v157 + 8))(v57, v156);
          v108 = String._bridgeToObjectiveC()();
          v166 = v165;
          v104 = v278;
          swift_bridgeObjectRelease(v166);
        }
        v87 = (uint64_t)v289;
      }
      objc_msgSend(v105, "setText:", v108);

    }
    v167 = (uint64_t)v294 + OBJC_IVAR____TtC6FindMy21FMLabelViewController_location;
    swift_beginAccess((char *)v294 + OBJC_IVAR____TtC6FindMy21FMLabelViewController_location, v296, 0, 0);
    v168 = v270;
    sub_100007464(v167, v270, (uint64_t *)&unk_1005D3350);
    v169 = v279;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v104 + 48))(v168, 1, v279))
    {
      v170 = (uint64_t *)&unk_1005D3350;
      v171 = v168;
    }
    else
    {
      v172 = v256;
      (*(void (**)(char *, uint64_t, uint64_t))(v104 + 16))(v256, v168, v169);
      v173 = sub_1000051EC(v168, (uint64_t *)&unk_1005D3350);
      v174 = v255;
      v175 = v104;
      FMFLocation.label.getter(v173);
      v176 = (uint64_t)v174;
      (*(void (**)(char *, uint64_t))(v175 + 8))(v172, v169);
      v177 = v285;
      v178 = v174;
      v179 = v284;
      v180 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v285 + 48))(v178, 1, v284);
      if ((_DWORD)v180 != 1)
      {
        v270 = FMFLabel.value.getter(v180);
        v109 = v252;
        (*(void (**)(uint64_t, uint64_t))(v177 + 8))(v176, v179);
        goto LABEL_67;
      }
      v170 = &qword_1005DC400;
      v171 = v176;
    }
    sub_1000051EC(v171, v170);
    v270 = 0;
    v109 = 0;
LABEL_67:
    v110 = 0;
    v111 = (void (*)(_QWORD, _QWORD, _QWORD))v290;
LABEL_68:
    v289 = (char *)v109;
    v181 = objc_msgSend(v292, "indexPathForSelectedRow");
    if (v181)
    {
      v182 = v181;
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v181);

      v183 = *(void (**)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, uint64_t))(v59 + 56);
      v183(v111, 0, 1, v58);
    }
    else
    {
      v183 = *(void (**)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, uint64_t))(v59 + 56);
      v183(v111, 1, 1, v58);
    }
    v184 = (uint64_t)v287;
    v281(v287, (uint64_t)v91, v58);
    v183((void (*)(_QWORD, _QWORD, _QWORD))v184, 0, 1, v58);
    v185 = v87 + *(int *)(v282 + 48);
    sub_100007464((uint64_t)v111, v87, &qword_1005D33C0);
    sub_100007464(v184, v185, &qword_1005D33C0);
    v186 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
    if (v186(v87, 1, v58) == 1)
    {
      sub_1000051EC(v184, &qword_1005D33C0);
      sub_1000051EC((uint64_t)v111, &qword_1005D33C0);
      v187 = v186(v185, 1, v58);
      v188 = v293;
      v189 = v289;
      if (v187 == 1)
      {
        sub_1000051EC(v87, &qword_1005D33C0);
        v190 = 3;
        v191 = v285;
        v192 = v283;
        goto LABEL_80;
      }
    }
    else
    {
      v193 = v274;
      sub_100007464(v87, v274, &qword_1005D33C0);
      if (v186(v185, 1, v58) != 1)
      {
        v194 = v267;
        (*(void (**)(char *, uint64_t, uint64_t))(v59 + 32))(v267, v185, v58);
        v195 = sub_100008000((unint64_t *)&unk_1005DC410, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
        v196 = dispatch thunk of static Equatable.== infix(_:_:)(v193, v194, v58, v195);
        v197 = (void (*)(uint64_t, uint64_t))v286;
        v286(v194, v58);
        sub_1000051EC((uint64_t)v287, &qword_1005D33C0);
        sub_1000051EC((uint64_t)v290, &qword_1005D33C0);
        v197(v193, v58);
        sub_1000051EC(v87, &qword_1005D33C0);
        v188 = v293;
        v191 = v285;
        v192 = v283;
        v189 = v289;
        if ((v196 & 1) != 0)
        {
          v190 = 3;
          goto LABEL_80;
        }
LABEL_79:
        v190 = 0;
LABEL_80:
        v198 = (uint64_t)v280;
        objc_msgSend(v102, "setSelectionStyle:", v190);
        if (v110 && !*(_QWORD *)((char *)v294 + OBJC_IVAR____TtC6FindMy21FMLabelViewController_selectedLabelValue + 8)
          || v189
          && (v199 = (_QWORD *)((char *)v294 + OBJC_IVAR____TtC6FindMy21FMLabelViewController_selectedLabelValue),
              (v200 = *(char **)((char *)v294 + OBJC_IVAR____TtC6FindMy21FMLabelViewController_selectedLabelValue + 8)) != 0)
          && (*v199 == v270 && v200 == v189
           || (_stringCompareWithSmolCheck(_:_:expecting:)(*v199, v200, v270, v189, 0) & 1) != 0))
        {
          v201 = objc_msgSend(v102, "accessoryView");

          if (!v201)
            objc_msgSend(v102, "setAccessoryType:", 3);
          v202 = swift_bridgeObjectRelease(v189);
          goto LABEL_125;
        }
        LODWORD(v292) = objc_msgSend(v292, "allowsSelection");
        objc_msgSend(v102, "setAccessoryType:", 0);
        v203 = (uint64_t)v294 + OBJC_IVAR____TtC6FindMy21FMLabelViewController_location;
        swift_beginAccess((char *)v294 + OBJC_IVAR____TtC6FindMy21FMLabelViewController_location, &v297, 0, 0);
        sub_100007464(v203, v198, (uint64_t *)&unk_1005D3350);
        v204 = v278;
        v205 = v279;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v278 + 48))(v198, 1, v279))
        {
          sub_1000051EC(v198, (uint64_t *)&unk_1005D3350);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v191 + 56))(v288, 1, 1, v284);
        }
        else
        {
          v206 = v198;
          v207 = v266;
          (*(void (**)(char *, uint64_t, uint64_t))(v204 + 16))(v266, v206, v205);
          v208 = sub_1000051EC(v206, (uint64_t *)&unk_1005D3350);
          FMFLocation.label.getter(v208);
          v189 = v289;
          (*(void (**)(char *, uint64_t))(v204 + 8))(v207, v205);
        }
        v209 = v277;
        if (!v110)
        {
          v214 = 3;
LABEL_124:
          objc_msgSend(v102, "setSelectionStyle:", v214);
          swift_bridgeObjectRelease(v189);
          sub_1000051EC(v288, &qword_1005DC400);
LABEL_125:
          ((void (*)(char *, uint64_t, __n128))v286)(v188, v58, v202);
          return;
        }
        v210 = v269;
        sub_100007464(v288, v269, &qword_1005DC400);
        v211 = v284;
        v294 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v191 + 48);
        v212 = v294(v210, 1, v284);
        if ((_DWORD)v212 == 1)
        {
          sub_1000051EC(v210, &qword_1005DC400);
          v213 = (_QWORD *)v276;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v276 + 56))(v192, 1, 1, v209);
        }
        else
        {
          FMFLabel.labelSourceType.getter(v212);
          (*(void (**)(uint64_t, uint64_t))(v191 + 8))(v210, v211);
          v213 = (_QWORD *)v276;
        }
        v215 = v275;
        v216 = v271;
        v290 = (_QWORD *)v213[13];
        ((void (*)(uint64_t, _QWORD, uint64_t))v290)(v271, enum case for FMFLabelSourceType.friend(_:), v209);
        v217 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v213[7];
        v217(v216, 0, 1, v209);
        v218 = v215 + *(int *)(v273 + 48);
        sub_100007464(v192, v215, (uint64_t *)&unk_1005DC3F0);
        sub_100007464(v216, v218, (uint64_t *)&unk_1005DC3F0);
        v219 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v213[6];
        if (v219(v215, 1, v209) == 1)
        {
          sub_1000051EC(v216, (uint64_t *)&unk_1005DC3F0);
          sub_1000051EC(v192, (uint64_t *)&unk_1005DC3F0);
          v220 = v219(v218, 1, v209);
          v189 = v289;
          if (v220 == 1)
          {
            sub_1000051EC(v275, (uint64_t *)&unk_1005DC3F0);
            v221 = v272;
            sub_100007464(v288, v272, &qword_1005DC400);
LABEL_105:
            sub_1000051EC(v221, &qword_1005DC400);
            v231 = 1;
LABEL_117:
            v102 = v291;
            v246 = objc_msgSend(v291, "textLabel");
            if (v246)
            {
              v247 = v246;
              v248 = v231 | ~(_BYTE)v292;
              v249 = (void *)objc_opt_self(UIColor);
              v250 = &selRef_secondaryLabelColor;
              if ((v248 & 1) == 0)
                v250 = &selRef_labelColor;
              v251 = objc_msgSend(v249, *v250);
              objc_msgSend(v247, "setTextColor:", v251);

            }
            if ((v231 & 1) != 0)
              v214 = 0;
            else
              v214 = 3;
            goto LABEL_124;
          }
        }
        else
        {
          v222 = v259;
          sub_100007464(v215, v259, (uint64_t *)&unk_1005DC3F0);
          v223 = v219(v218, 1, v209);
          v189 = v289;
          if (v223 != 1)
          {
            v224 = v222;
            v225 = v276;
            v226 = v258;
            (*(void (**)(char *, uint64_t, uint64_t))(v276 + 32))(v258, v218, v209);
            v227 = sub_100008000(&qword_1005DC408, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLabelSourceType, (uint64_t)&protocol conformance descriptor for FMFLabelSourceType);
            v228 = dispatch thunk of static Equatable.== infix(_:_:)(v224, v226, v209, v227);
            v229 = *(void (**)(char *, uint64_t))(v225 + 8);
            v230 = v226;
            v188 = v293;
            v229(v230, v277);
            sub_1000051EC(v271, (uint64_t *)&unk_1005DC3F0);
            sub_1000051EC(v283, (uint64_t *)&unk_1005DC3F0);
            v229((char *)v224, v277);
            v209 = v277;
            sub_1000051EC(v215, (uint64_t *)&unk_1005DC3F0);
            v221 = v272;
            sub_100007464(v288, v272, &qword_1005DC400);
            if ((v228 & 1) != 0)
              goto LABEL_105;
LABEL_106:
            v232 = v263;
            sub_100007464(v221, v263, &qword_1005DC400);
            v233 = v284;
            v234 = v294(v232, 1, v284);
            if ((_DWORD)v234 == 1)
            {
              sub_1000051EC(v232, &qword_1005DC400);
              v235 = (uint64_t)v264;
              v217((uint64_t)v264, 1, 1, v209);
            }
            else
            {
              v235 = (uint64_t)v264;
              FMFLabel.labelSourceType.getter(v234);
              (*(void (**)(uint64_t, uint64_t))(v285 + 8))(v232, v233);
            }
            v236 = (uint64_t)v265;
            v237 = v268;
            ((void (*)(uint64_t, _QWORD, uint64_t))v290)(v268, enum case for FMFLabelSourceType.premises(_:), v209);
            v217(v237, 0, 1, v209);
            v238 = v236 + *(int *)(v273 + 48);
            sub_100007464(v235, v236, (uint64_t *)&unk_1005DC3F0);
            sub_100007464(v237, v238, (uint64_t *)&unk_1005DC3F0);
            if (v219(v236, 1, v209) == 1)
            {
              sub_1000051EC(v237, (uint64_t *)&unk_1005DC3F0);
              sub_1000051EC(v235, (uint64_t *)&unk_1005DC3F0);
              sub_1000051EC(v272, &qword_1005DC400);
              v239 = v219(v238, 1, v209);
              v188 = v293;
              if (v239 == 1)
              {
                sub_1000051EC(v236, (uint64_t *)&unk_1005DC3F0);
                v231 = 1;
LABEL_116:
                v189 = v289;
                goto LABEL_117;
              }
            }
            else
            {
              v240 = v257;
              sub_100007464(v236, v257, (uint64_t *)&unk_1005DC3F0);
              if (v219(v238, 1, v209) != 1)
              {
                v241 = v276;
                v242 = v258;
                (*(void (**)(char *, uint64_t, uint64_t))(v276 + 32))(v258, v238, v209);
                v243 = sub_100008000(&qword_1005DC408, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLabelSourceType, (uint64_t)&protocol conformance descriptor for FMFLabelSourceType);
                v231 = dispatch thunk of static Equatable.== infix(_:_:)(v240, v242, v209, v243);
                v244 = v209;
                v245 = *(void (**)(char *, uint64_t))(v241 + 8);
                v245(v242, v244);
                sub_1000051EC(v268, (uint64_t *)&unk_1005DC3F0);
                sub_1000051EC(v235, (uint64_t *)&unk_1005DC3F0);
                sub_1000051EC(v272, &qword_1005DC400);
                v245((char *)v240, v244);
                sub_1000051EC(v236, (uint64_t *)&unk_1005DC3F0);
                v188 = v293;
                goto LABEL_116;
              }
              sub_1000051EC(v268, (uint64_t *)&unk_1005DC3F0);
              sub_1000051EC(v235, (uint64_t *)&unk_1005DC3F0);
              sub_1000051EC(v272, &qword_1005DC400);
              (*(void (**)(uint64_t, uint64_t))(v276 + 8))(v240, v209);
              v188 = v293;
            }
            sub_1000051EC(v236, &qword_1005DC3E8);
            v231 = 0;
            goto LABEL_116;
          }
          sub_1000051EC(v271, (uint64_t *)&unk_1005DC3F0);
          sub_1000051EC(v192, (uint64_t *)&unk_1005DC3F0);
          (*(void (**)(uint64_t, uint64_t))(v276 + 8))(v222, v209);
        }
        sub_1000051EC(v275, &qword_1005DC3E8);
        v221 = v272;
        sub_100007464(v288, v272, &qword_1005DC400);
        goto LABEL_106;
      }
      sub_1000051EC((uint64_t)v287, &qword_1005D33C0);
      sub_1000051EC((uint64_t)v290, &qword_1005D33C0);
      v286((char *)v193, v58);
      v188 = v293;
      v189 = v289;
    }
    sub_1000051EC(v87, &qword_1005E3230);
    v191 = v285;
    v192 = v283;
    goto LABEL_79;
  }
  v112 = IndexPath.item.getter(v101);
  v102 = v291;
  if (v112 == v99 + v67)
  {
    v109 = objc_msgSend(v291, "textLabel");
    if (v109)
    {
      v297 = 0;
      v298 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(v298);
      v113 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v114._countAndFlagsBits = 0xD000000000000015;
      v299._countAndFlagsBits = 0xD000000000000027;
      v299._object = (void *)0x80000001004B7240;
      v114._object = (void *)0x80000001004B7220;
      v115._countAndFlagsBits = 0;
      v115._object = (void *)0xE000000000000000;
      v116 = NSLocalizedString(_:tableName:bundle:value:comment:)(v114, (Swift::String_optional)0, (NSBundle)v113, v115, v299)._object;

      v117 = String._bridgeToObjectiveC()();
      objc_msgSend(v109, "setText:", v117, swift_bridgeObjectRelease(v116).n128_f64[0]);

      v270 = 0;
      v109 = 0;
    }
    else
    {
      v270 = 0;
    }
    v110 = 1;
LABEL_58:
    v87 = (uint64_t)v289;
    v111 = (void (*)(_QWORD, _QWORD, _QWORD))v290;
    goto LABEL_68;
  }
  v137 = IndexPath.item.getter(v112);
  v138 = v137 - v97;
  if (__OFSUB__(v137, v97))
    goto LABEL_131;
  v139 = static FMFLabel.defaultLabels(includingOther:)(0);
  v140 = objc_msgSend(v102, "textLabel");
  v87 = (uint64_t)v289;
  if (!v140)
  {
    if ((v138 & 0x8000000000000000) != 0)
    {
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
      goto LABEL_134;
    }
LABEL_54:
    v111 = (void (*)(_QWORD, _QWORD, _QWORD))v290;
    if (v138 < *(_QWORD *)(v139 + 16))
    {
      v158 = v261;
      v159 = v139
           + ((*(unsigned __int8 *)(v158 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v158 + 80))
           + *(_QWORD *)(v158 + 72) * v138;
      v160 = v260;
      v161 = v262;
      (*(void (**)(char *, unint64_t, uint64_t))(v261 + 16))(v260, v159, v262);
      v162 = swift_bridgeObjectRelease(v139);
      v270 = FMFDefaultLabel.rawValue.getter(v162);
      v109 = v163;
      (*(void (**)(char *, uint64_t))(v158 + 8))(v160, v161);
      v110 = 0;
      v91 = v293;
      goto LABEL_68;
    }
    goto LABEL_133;
  }
  if ((v138 & 0x8000000000000000) != 0)
  {
LABEL_134:
    __break(1u);
    goto LABEL_135;
  }
  if (v138 < *(_QWORD *)(v139 + 16))
  {
    v141 = v140;
    v142 = v261;
    v143 = v260;
    v144 = v262;
    v145 = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v261 + 16))(v260, v139+ ((*(unsigned __int8 *)(v142 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v142 + 80))+ *(_QWORD *)(v142 + 72) * v138, v262);
    v270 = FMFDefaultLabel.localizedLabel.getter(v145);
    v147 = v146;
    (*(void (**)(char *, uint64_t))(v142 + 8))(v143, v144);
    v148 = String._bridgeToObjectiveC()();
    objc_msgSend(v141, "setText:", v148, swift_bridgeObjectRelease(v147).n128_f64[0]);

    v87 = (uint64_t)v289;
    goto LABEL_54;
  }
LABEL_135:
  __break(1u);
}

uint64_t sub_1002323F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  void *v23;
  _QWORD *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void *v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD aBlock[5];
  _QWORD *v41;

  v33 = a3;
  v34 = a2;
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v39 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v37 = *(_QWORD *)(v10 - 8);
  v38 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchTime(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v32 - v18;
  v20 = sub_1000555A8();
  v35 = static OS_dispatch_queue.main.getter(v20);
  static DispatchTime.now()(v35);
  + infix(_:_:)(v17, 0.25);
  v36 = *(void (**)(char *, uint64_t))(v14 + 8);
  v36(v17, v13);
  v21 = (_QWORD *)swift_allocObject(&unk_100552368, 48, 7);
  v22 = v34;
  v21[2] = v33;
  v21[3] = a4;
  v21[4] = a5;
  v21[5] = v22;
  aBlock[4] = sub_1002343B4;
  v41 = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_100552380;
  v23 = _Block_copy(aBlock);
  v24 = v41;
  swift_bridgeObjectRetain(a4);
  v25 = a5;
  swift_errorRetain(v22);
  swift_release(v24);
  static DispatchQoS.unspecified.getter(v26);
  aBlock[0] = _swiftEmptyArrayStorage;
  v27 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v28 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v29 = sub_1000555E4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v28, v29, v7, v27);
  v30 = (void *)v35;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v19, v12, v9, v23);
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v12, v38);
  return ((uint64_t (*)(char *, uint64_t))v36)(v19, v13);
}

uint64_t sub_10023268C(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  char *v6;
  uint64_t v7;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  __n128 v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t result;
  int v35;
  uint64_t v36;
  _QWORD v37[2];
  _QWORD v38[2];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v6 = &a3[OBJC_IVAR____TtC6FindMy21FMLabelViewController_selectedLabelValue];
  v7 = *(_QWORD *)&a3[OBJC_IVAR____TtC6FindMy21FMLabelViewController_selectedLabelValue + 8];
  if (v7)
  {
    if (*(_QWORD *)v6 != a1 || v7 != a2)
    {
      v9 = 0;
      if ((_stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, *(_QWORD *)v6, v7, 0) & 1) == 0)
        goto LABEL_10;
      v7 = *((_QWORD *)v6 + 1);
    }
    *(_QWORD *)v6 = 0;
    *((_QWORD *)v6 + 1) = 0;
    swift_bridgeObjectRelease(v7);
    v9 = 1;
  }
  else
  {
    v9 = 0;
  }
LABEL_10:
  sub_100339DF0();
  v10 = OBJC_IVAR____TtC6FindMy21FMLabelViewController_customLabels;
  v11 = *(_QWORD *)&a3[OBJC_IVAR____TtC6FindMy21FMLabelViewController_customLabels];
  *(_QWORD *)&a3[OBJC_IVAR____TtC6FindMy21FMLabelViewController_customLabels] = v12;
  swift_bridgeObjectRelease(v11);
  sub_10033A304();
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v13 = type metadata accessor for Logger(0);
  sub_100056D88(v13, (uint64_t)qword_1005F5748);
  swift_errorRetain(a4);
  v14 = a3;
  swift_errorRetain(a4);
  v15 = v14;
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    v35 = v9;
    v18 = swift_slowAlloc(22, -1);
    v36 = swift_slowAlloc(64, -1);
    v41 = v36;
    *(_DWORD *)v18 = 136315394;
    v39 = a4;
    swift_errorRetain(a4);
    v19 = sub_100053F2C(&qword_1005D7E40);
    v20 = String.init<A>(describing:)(&v39, v19);
    v22 = v21;
    v39 = sub_100056DA0(v20, v21, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);
    swift_bridgeObjectRelease(v22);
    swift_errorRelease(a4);
    swift_errorRelease(a4);
    *(_WORD *)(v18 + 12) = 2080;
    v23 = *(_QWORD *)&a3[v10];
    v24 = 0xE000000000000000;
    if (v23)
    {
      v25 = type metadata accessor for FMFLabel(0);
      swift_bridgeObjectRetain(v23);
      v27 = Array.description.getter(v26, v25);
      v29 = v28;
      swift_bridgeObjectRelease(v23);
      v39 = v27;
      v40 = v29;
      v38[0] = 10;
      v38[1] = 0xE100000000000000;
      v37[0] = 0;
      v37[1] = 0xE000000000000000;
      v30 = sub_1000517B8();
      v23 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v38, v37, 0, 0, 0, 1, &type metadata for String, &type metadata for String, v31, &type metadata for String, v30, v30, v30);
      v24 = v32;
      swift_bridgeObjectRelease(v29);
    }
    v9 = v35;
    v39 = sub_100056DA0(v23, v24, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);

    swift_bridgeObjectRelease(v24);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "🏷 FMLabelViewController: remove label completed with error: %s, updated list is %s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy(v36, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v36, -1, -1);
    swift_slowDealloc(v18, -1, -1);

  }
  else
  {
    swift_errorRelease(a4);
    swift_errorRelease(a4);

  }
  result = sub_10034AB98(v33);
  if (v9)
    return sub_10033A3AC(0, 0);
  return result;
}

void sub_100232AAC(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  unsigned int (*v80)(uint64_t, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  void (*v90)(char *, uint64_t);
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char v102;
  void (*v103)(char *, uint64_t);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(char *, uint64_t);
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132[32];

  v129 = a2;
  v131 = type metadata accessor for FMFLabelSourceType(0);
  v127 = *(_QWORD *)(v131 - 8);
  __chkstk_darwin(v131);
  v112 = (char *)&v108 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = sub_100053F2C(&qword_1005DC3E8);
  v4 = __chkstk_darwin(v122);
  v115 = (uint64_t)&v108 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v125 = (uint64_t)&v108 - v6;
  v7 = sub_100053F2C((uint64_t *)&unk_1005DC3F0);
  v8 = __chkstk_darwin(v7);
  v110 = (uint64_t)&v108 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v117 = (uint64_t)&v108 - v11;
  v12 = __chkstk_darwin(v10);
  v116 = (char *)&v108 - v13;
  v14 = __chkstk_darwin(v12);
  v113 = (uint64_t)&v108 - v15;
  v16 = __chkstk_darwin(v14);
  v119 = (uint64_t)&v108 - v17;
  __chkstk_darwin(v16);
  v120 = (uint64_t)&v108 - v18;
  v19 = type metadata accessor for FMFLocation(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v111 = (char *)&v108 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100053F2C((uint64_t *)&unk_1005D3350);
  __chkstk_darwin(v22);
  v24 = (char *)&v108 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100053F2C(&qword_1005DC400);
  v26 = __chkstk_darwin(v25);
  v114 = (uint64_t)&v108 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __chkstk_darwin(v26);
  v121 = (uint64_t)&v108 - v29;
  v30 = __chkstk_darwin(v28);
  v32 = (char *)&v108 - v31;
  __chkstk_darwin(v30);
  v130 = (uint64_t)&v108 - v33;
  v34 = type metadata accessor for IndexPath(0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = __chkstk_darwin(v34);
  v38 = (char *)&v108 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __chkstk_darwin(v36);
  v41 = (char *)&v108 - v40;
  v42 = IndexPath.section.getter(v39);
  v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 16))(v41, a1, v34);
  v128 = v35;
  if (v42)
  {
    v44 = *(uint64_t (**)(char *, uint64_t))(v35 + 8);
    v45 = v44(v41, v34);
    v46 = v34;
  }
  else
  {
    v47 = IndexPath.item.getter(v43);
    v44 = *(uint64_t (**)(char *, uint64_t))(v35 + 8);
    v45 = v44(v41, v34);
    v46 = v34;
    if (!v47)
    {
      v85 = 1;
      v87 = v128;
      v86 = v129;
LABEL_40:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v87 + 56))(v86, v85, 1, v46);
      return;
    }
  }
  v123 = (void (*)(char *, uint64_t))v44;
  v124 = v46;
  v48 = a1;
  v49 = IndexPath.section.getter(v45);
  v50 = IndexPath.item.getter(v49);
  v51 = v50;
  v52 = v38;
  v54 = v126;
  v53 = v127;
  if (!v49)
  {
    v51 = v50 - 1;
    if (__OFSUB__(v50, 1))
      goto LABEL_42;
  }
  v118 = v48;
  v55 = IndexPath.section.getter(v50);
  IndexPath.init(item:section:)(v51, v55);
  v56 = sub_1003393F0();
  v57 = static FMFLabel.defaultLabels(includingOther:)(0);
  v58 = *(_QWORD *)(v57 + 16);
  swift_bridgeObjectRelease(v57);
  v60 = v58 + v56;
  v61 = v60 + 1;
  if (__OFADD__(v60, 1))
  {
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v62 = IndexPath.item.getter(v59);
  v63 = IndexPath.section.getter(v62);
  if (v63 || v62 != v61 - 1)
    goto LABEL_35;
  v64 = (uint64_t)&v54[OBJC_IVAR____TtC6FindMy21FMLabelViewController_location];
  swift_beginAccess(&v54[OBJC_IVAR____TtC6FindMy21FMLabelViewController_location], v132, 0, 0);
  sub_100007464(v64, (uint64_t)v24, (uint64_t *)&unk_1005D3350);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v24, 1, v19))
  {
    sub_1000051EC((uint64_t)v24, (uint64_t *)&unk_1005D3350);
    v65 = type metadata accessor for FMFLabel(0);
    v66 = v130;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v130, 1, 1, v65);
  }
  else
  {
    v67 = v111;
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v111, v24, v19);
    v68 = sub_1000051EC((uint64_t)v24, (uint64_t *)&unk_1005D3350);
    v69 = v130;
    FMFLocation.label.getter(v68);
    v66 = v69;
    (*(void (**)(char *, uint64_t))(v20 + 8))(v67, v19);
  }
  v70 = v131;
  v71 = v120;
  sub_100007464(v66, (uint64_t)v32, &qword_1005DC400);
  v72 = type metadata accessor for FMFLabel(0);
  v73 = *(_QWORD *)(v72 - 8);
  v126 = *(char **)(v73 + 48);
  v74 = ((uint64_t (*)(char *, uint64_t, uint64_t))v126)(v32, 1, v72);
  v109 = v73;
  if ((_DWORD)v74 == 1)
  {
    sub_1000051EC((uint64_t)v32, &qword_1005DC400);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56))(v71, 1, 1, v70);
  }
  else
  {
    FMFLabel.labelSourceType.getter(v74);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v32, v72);
  }
  v75 = v125;
  v76 = v119;
  v111 = *(char **)(v53 + 104);
  ((void (*)(uint64_t, _QWORD, uint64_t))v111)(v119, enum case for FMFLabelSourceType.friend(_:), v70);
  v77 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56);
  v77(v76, 0, 1, v70);
  v78 = v75 + *(int *)(v122 + 48);
  sub_100007464(v71, v75, (uint64_t *)&unk_1005DC3F0);
  v79 = v131;
  sub_100007464(v76, v78, (uint64_t *)&unk_1005DC3F0);
  v80 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48);
  if (v80(v75, 1, v79) == 1)
  {
    sub_1000051EC(v76, (uint64_t *)&unk_1005DC3F0);
    v79 = v131;
    sub_1000051EC(v71, (uint64_t *)&unk_1005DC3F0);
    if (v80(v78, 1, v79) == 1)
    {
      sub_1000051EC(v125, (uint64_t *)&unk_1005DC3F0);
      v81 = v130;
      v82 = v121;
      sub_100007464(v130, v121, &qword_1005DC400);
LABEL_23:
      sub_1000051EC(v82, &qword_1005DC400);
      sub_1000051EC(v81, &qword_1005DC400);
LABEL_34:
      v85 = 1;
      v87 = v128;
      v86 = v129;
      v46 = v124;
LABEL_39:
      v123(v52, v46);
      goto LABEL_40;
    }
  }
  else
  {
    v83 = v113;
    sub_100007464(v75, v113, (uint64_t *)&unk_1005DC3F0);
    if (v80(v78, 1, v79) != 1)
    {
      v88 = v112;
      (*(void (**)(char *, uint64_t, uint64_t))(v53 + 32))(v112, v78, v79);
      v89 = sub_100008000(&qword_1005DC408, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLabelSourceType, (uint64_t)&protocol conformance descriptor for FMFLabelSourceType);
      LODWORD(v125) = dispatch thunk of static Equatable.== infix(_:_:)(v83, v88, v79, v89);
      v90 = *(void (**)(char *, uint64_t))(v53 + 8);
      v91 = v88;
      v84 = (uint64_t)v116;
      v90(v91, v79);
      sub_1000051EC(v119, (uint64_t *)&unk_1005DC3F0);
      sub_1000051EC(v120, (uint64_t *)&unk_1005DC3F0);
      v90((char *)v83, v131);
      v79 = v131;
      sub_1000051EC(v75, (uint64_t *)&unk_1005DC3F0);
      v81 = v130;
      v82 = v121;
      sub_100007464(v130, v121, &qword_1005DC400);
      if ((v125 & 1) != 0)
        goto LABEL_23;
      goto LABEL_24;
    }
    sub_1000051EC(v119, (uint64_t *)&unk_1005DC3F0);
    sub_1000051EC(v120, (uint64_t *)&unk_1005DC3F0);
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v83, v79);
  }
  sub_1000051EC(v125, &qword_1005DC3E8);
  v82 = v121;
  sub_100007464(v130, v121, &qword_1005DC400);
  v84 = (uint64_t)v116;
LABEL_24:
  v92 = v114;
  sub_100007464(v82, v114, &qword_1005DC400);
  v93 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v126)(v92, 1, v72);
  if ((_DWORD)v93 == 1)
  {
    sub_1000051EC(v92, &qword_1005DC400);
    v77(v84, 1, 1, v79);
  }
  else
  {
    FMFLabel.labelSourceType.getter(v93);
    (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v92, v72);
  }
  v94 = v117;
  ((void (*)(uint64_t, _QWORD, uint64_t))v111)(v117, enum case for FMFLabelSourceType.premises(_:), v79);
  v77(v94, 0, 1, v79);
  v95 = v115;
  v96 = v115 + *(int *)(v122 + 48);
  sub_100007464(v84, v115, (uint64_t *)&unk_1005DC3F0);
  sub_100007464(v94, v96, (uint64_t *)&unk_1005DC3F0);
  if (v80(v95, 1, v79) == 1)
  {
    sub_1000051EC(v94, (uint64_t *)&unk_1005DC3F0);
    sub_1000051EC(v84, (uint64_t *)&unk_1005DC3F0);
    sub_1000051EC(v121, &qword_1005DC400);
    sub_1000051EC(v130, &qword_1005DC400);
    if (v80(v96, 1, v79) == 1)
    {
      sub_1000051EC(v95, (uint64_t *)&unk_1005DC3F0);
      goto LABEL_34;
    }
  }
  else
  {
    v97 = v110;
    sub_100007464(v95, v110, (uint64_t *)&unk_1005DC3F0);
    if (v80(v96, 1, v79) != 1)
    {
      v98 = v84;
      v99 = v127;
      v100 = v112;
      (*(void (**)(char *, uint64_t, uint64_t))(v127 + 32))(v112, v96, v79);
      v101 = sub_100008000(&qword_1005DC408, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLabelSourceType, (uint64_t)&protocol conformance descriptor for FMFLabelSourceType);
      v102 = dispatch thunk of static Equatable.== infix(_:_:)(v97, v100, v79, v101);
      v103 = *(void (**)(char *, uint64_t))(v99 + 8);
      v103(v100, v79);
      sub_1000051EC(v117, (uint64_t *)&unk_1005DC3F0);
      sub_1000051EC(v98, (uint64_t *)&unk_1005DC3F0);
      sub_1000051EC(v121, &qword_1005DC400);
      sub_1000051EC(v130, &qword_1005DC400);
      v103((char *)v97, v79);
      v63 = sub_1000051EC(v95, (uint64_t *)&unk_1005DC3F0);
      if ((v102 & 1) != 0)
        goto LABEL_34;
      goto LABEL_35;
    }
    sub_1000051EC(v117, (uint64_t *)&unk_1005DC3F0);
    sub_1000051EC(v84, (uint64_t *)&unk_1005DC3F0);
    sub_1000051EC(v121, &qword_1005DC400);
    sub_1000051EC(v130, &qword_1005DC400);
    (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v97, v79);
  }
  v63 = sub_1000051EC(v95, &qword_1005DC3E8);
LABEL_35:
  v104 = IndexPath.section.getter(v63);
  if (v104)
  {
    v105 = IndexPath.item.getter(v104);
    v106 = v105;
    v86 = v129;
LABEL_38:
    v46 = v124;
    v87 = v128;
    v107 = IndexPath.section.getter(v105);
    IndexPath.init(item:section:)(v106, v107);
    v85 = 0;
    goto LABEL_39;
  }
  v105 = IndexPath.item.getter(0);
  v106 = v105 + 1;
  v86 = v129;
  if (!__OFADD__(v105, 1))
    goto LABEL_38;
LABEL_43:
  __break(1u);
}

void sub_100233778(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Class isa;
  id v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void *v37;
  _QWORD *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  __n128 v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  BOOL v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  void *v54;
  void *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  Class v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;

  v71 = a1;
  v67 = type metadata accessor for FMFLabel(0);
  v2 = *(_QWORD *)(v67 - 8);
  __chkstk_darwin(v67);
  v66 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for FMFDefaultLabel(0);
  v4 = *(_QWORD *)(v65 - 8);
  __chkstk_darwin(v65);
  v6 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IndexPath(0);
  v69 = *(_QWORD *)(v7 - 8);
  v70 = v7;
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v64 - v12;
  v14 = IndexPath.section.getter(v11);
  v15 = IndexPath.item.getter(v14);
  v16 = v15;
  if (!v14)
  {
    v16 = v15 - 1;
    if (__OFSUB__(v15, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
  }
  v17 = IndexPath.section.getter(v15);
  IndexPath.init(item:section:)(v16, v17);
  v68 = v1;
  v18 = sub_1003393F0();
  v19 = v18;
  v20 = IndexPath.section.getter(v18);
  if (v20)
  {
    v21 = IndexPath.section.getter(v20);
    if (v21 == 1)
    {
      v22 = OBJC_IVAR____TtC6FindMy21FMLabelViewController_customLabels;
      v23 = v68;
      v24 = *(_QWORD *)(v68 + OBJC_IVAR____TtC6FindMy21FMLabelViewController_customLabels);
      if (v24)
        v25 = *(_QWORD *)(v24 + 16);
      else
        v25 = 0;
      if (IndexPath.item.getter(1) == v25)
      {
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        v32 = objc_msgSend(v71, "cellForRowAtIndexPath:", isa);

        if (v32)
        {
          v33 = type metadata accessor for FMLabelTableViewCell();
          v34 = (char *)swift_dynamicCastClass(v32, v33);
          if (v34)
          {
            v35 = v34;
            v36 = v68;
            sub_10033B4C8(v34);
            v37 = *(void **)(v36 + OBJC_IVAR____TtC6FindMy21FMLabelViewController_editingTableViewCellText);
            *(_QWORD *)(v36 + OBJC_IVAR____TtC6FindMy21FMLabelViewController_editingTableViewCellText) = v35;

          }
          else
          {

          }
        }
        goto LABEL_27;
      }
      v38 = *(_QWORD **)(v23 + v22);
      if (v38)
      {
        swift_bridgeObjectRetain(v38);
        v40 = IndexPath.item.getter(v39);
        if ((v40 & 0x8000000000000000) != 0)
        {
LABEL_35:
          __break(1u);
          goto LABEL_36;
        }
        if (v40 >= v38[2])
        {
LABEL_36:
          __break(1u);
          goto LABEL_37;
        }
        v42 = v66;
        v41 = v67;
        (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v66, (unint64_t)v38+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v40, v67);
        v43 = swift_bridgeObjectRelease(v38);
        v44 = FMFLabel.localizedValue.getter(v43);
        v38 = v45;
        (*(void (**)(char *, uint64_t))(v2 + 8))(v42, v41);
      }
      else
      {
        v44 = 0;
      }
      sub_10033A3AC(v44, v38);
      v56 = v38;
      goto LABEL_26;
    }
LABEL_27:
    v57 = IndexPath.section.getter(v21);
    if (v57)
    {
      v58 = IndexPath.item.getter(v57);
      v59 = v58;
LABEL_30:
      v60 = IndexPath.section.getter(v58);
      IndexPath.init(item:section:)(v59, v60);
      v61 = IndexPath._bridgeToObjectiveC()().super.isa;
      v62 = v70;
      v63 = *(void (**)(char *, uint64_t))(v69 + 8);
      v63(v10, v70);
      objc_msgSend(v71, "deselectRowAtIndexPath:animated:", v61, 1);

      v63(v13, v62);
      return;
    }
    v58 = IndexPath.item.getter(0);
    v59 = v58 + 1;
    if (!__OFADD__(v58, 1))
      goto LABEL_30;
    goto LABEL_34;
  }
  v26 = v19;
  v27 = static FMFLabel.defaultLabels(includingOther:)(0);
  v28 = *(_QWORD *)(v27 + 16);
  swift_bridgeObjectRelease(v27);
  if (__OFADD__(v28 + v26, 1))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v21 = IndexPath.item.getter(v29);
  if (v21 == 0 && v19)
    goto LABEL_27;
  v30 = IndexPath.item.getter(v21);
  if (v30 == v28 + v19)
  {
    v21 = sub_10033A3AC(0, 0);
    goto LABEL_27;
  }
  v46 = IndexPath.item.getter(v30);
  v47 = __OFSUB__(v46, v26);
  v48 = v46 - v26;
  if (v47)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v49 = static FMFLabel.defaultLabels(includingOther:)(0);
  if ((v48 & 0x8000000000000000) != 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v50 = v49;
  if (v48 < *(_QWORD *)(v49 + 16))
  {
    v51 = v65;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, v49+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v48, v65);
    v52 = swift_bridgeObjectRelease(v50);
    v53 = FMFDefaultLabel.rawValue.getter(v52);
    v55 = v54;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v51);
    sub_10033A3AC(v53, v55);
    v56 = v55;
LABEL_26:
    swift_bridgeObjectRelease(v56);
    goto LABEL_27;
  }
LABEL_39:
  __break(1u);
}

void sub_100233D40(uint64_t a1)
{
  BOOL v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = sub_1003393F0();
  if (!a1)
  {
    if (v2)
      v3 = 2;
    else
      v3 = 1;
    v4 = static FMFLabel.defaultLabels(includingOther:)(0);
    v5 = *(_QWORD *)(v4 + 16);
    swift_bridgeObjectRelease(v4);
    if (__OFADD__(v3, v5))
    {
      __break(1u);
    }
    else if (__OFADD__(v3 + v5, 1))
    {
      __break(1u);
    }
  }
}

void sub_100233DD4(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __n128 v17;
  uint64_t v18;
  unint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;

  v3 = v2;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FMFLabel(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 != 1)
    goto LABEL_10;
  v14 = *(_QWORD *)&v3[OBJC_IVAR____TtC6FindMy21FMLabelViewController_customLabels];
  if (!v14)
    goto LABEL_10;
  swift_bridgeObjectRetain(*(_QWORD *)&v3[OBJC_IVAR____TtC6FindMy21FMLabelViewController_customLabels]);
  v16 = IndexPath.row.getter(v15);
  if ((v16 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v16 >= *(_QWORD *)(v14 + 16))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v13, v14+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v16, v10);
  v17 = swift_bridgeObjectRelease(v14);
  v18 = FMFLabel.localizedValue.getter(v17);
  v14 = v19;
  v20 = *(void (**)(char *, uint64_t))(v11 + 8);
  v11 = v18;
  v20(v13, v10);
  v21 = sub_100053F2C((uint64_t *)&unk_1005D2A90);
  v22 = swift_allocObject(v21, 48, 7);
  *(_OWORD *)(v22 + 16) = xmmword_100481740;
  *(_QWORD *)(v22 + 32) = v11;
  *(_QWORD *)(v22 + 40) = v14;
  v23 = type metadata accessor for FMFRemoveLabelsAction(0);
  swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  v24 = swift_bridgeObjectRetain(v14);
  v25 = FMFRemoveLabelsAction.init(labels:)(v22, v24);
  if (v25)
  {
    v10 = v25;
    if (qword_1005D1DE8 == -1)
    {
LABEL_7:
      v26 = type metadata accessor for Logger(0);
      sub_100056D88(v26, (uint64_t)qword_1005F5748);
      v27 = swift_bridgeObjectRetain_n(v14, 2);
      v28 = Logger.logObject.getter(v27);
      v29 = static os_log_type_t.default.getter(v28);
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc(12, -1);
        v31 = swift_slowAlloc(32, -1);
        v48 = v31;
        *(_DWORD *)v30 = 136315138;
        swift_bridgeObjectRetain(v14);
        v47 = sub_100056DA0(v11, v14, &v48);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48);
        swift_bridgeObjectRelease_n(v14, 3);
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "🏷 FMLabelViewController: removing label '%s'...", v30, 0xCu);
        swift_arrayDestroy(v31, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v31, -1, -1);
        swift_slowDealloc(v30, -1, -1);

      }
      else
      {

        v32 = swift_bridgeObjectRelease_n(v14, 2);
      }
      sub_100389D70(v32);
      v43 = *(_QWORD *)&v3[OBJC_IVAR____TtC6FindMy21FMLabelViewController_mediator];
      if (v43)
      {
        v44 = *(_QWORD *)(*(_QWORD *)(v43 + 48) + 56);
        v45 = (_QWORD *)swift_allocObject(&unk_100552340, 40, 7);
        v45[2] = v11;
        v45[3] = v14;
        v45[4] = v3;
        swift_retain(v44);
        v46 = v3;
        sub_1000D421C(v10, (uint64_t)sub_100234374, (uint64_t)v45);
        swift_release(v10);
        swift_release(v44);
        swift_release(v45);
      }
      else
      {
        __break(1u);
      }
      return;
    }
LABEL_21:
    swift_once(&qword_1005D1DE8, sub_100005ADC);
    goto LABEL_7;
  }
  swift_bridgeObjectRelease(v14);
LABEL_10:
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v33 = type metadata accessor for Logger(0);
  sub_100056D88(v33, (uint64_t)qword_1005F5748);
  v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  v35 = Logger.logObject.getter(v34);
  v36 = static os_log_type_t.default.getter(v35);
  if (os_log_type_enabled(v35, v36))
  {
    v37 = (uint8_t *)swift_slowAlloc(12, -1);
    v38 = swift_slowAlloc(32, -1);
    v48 = v38;
    *(_DWORD *)v37 = 136315138;
    v39 = IndexPath.description.getter();
    v41 = v40;
    v47 = sub_100056DA0(v39, v40, &v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48);
    v42 = swift_bridgeObjectRelease(v41);
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v42);
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "🏷 FMLabelViewController: could not label at %s...", v37, 0xCu);
    swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v38, -1, -1);
    swift_slowDealloc(v37, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }

}

uint64_t sub_1002342E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = IndexPath.section.getter(a1);
  if (result)
  {
    if (IndexPath.section.getter(result) == 1)
    {
      v3 = IndexPath.row.getter();
      v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy21FMLabelViewController_customLabels);
      if (v4)
      {
        if (v3 < *(_QWORD *)(v4 + 16))
          return 1;
      }
      else if (v3 < 0)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_100234348()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100234374(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1002323F4(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_100234380()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  swift_errorRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1002343B4()
{
  uint64_t v0;

  return sub_10023268C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(char **)(v0 + 32), *(_QWORD *)(v0 + 40));
}

id sub_1002344C4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMEmailUpdatesTableViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMEmailUpdatesTableViewCell()
{
  return objc_opt_self(_TtC6FindMy27FMEmailUpdatesTableViewCell);
}

id sub_100234540()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  objc_super v9;

  v1 = OBJC_IVAR____TtC6FindMy21FMGradientMaskingView_gradientLayer;
  v2 = objc_allocWithZone((Class)CAGradientLayer);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, "init");

  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for FMGradientMaskingView();
  v4 = objc_msgSendSuper2(&v9, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v5 = (void *)objc_opt_self(UIColor);
  v6 = v4;
  v7 = objc_msgSend(v5, "clearColor");
  objc_msgSend(v6, "setBackgroundColor:", v7);

  sub_1002346EC();
  return v6;
}

void sub_1002346EC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  Class isa;
  uint64_t v15;
  uint64_t v16;
  NSNumber v17;
  uint64_t v18;
  Class v19;
  id v20;

  v20 = objc_msgSend(v0, "layer");
  v1 = objc_opt_self(CAGradientLayer);
  v2 = swift_dynamicCastObjCClass(v20, v1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = sub_100053F2C(&qword_1005D67A0);
    v5 = swift_allocObject(v4, 96, 7);
    *(_OWORD *)(v5 + 16) = xmmword_100481730;
    v6 = (void *)objc_opt_self(UIColor);
    v7 = objc_msgSend(v6, "whiteColor");
    v8 = objc_msgSend(v7, "colorWithAlphaComponent:", 0.0);

    v9 = objc_msgSend(v8, "CGColor");
    type metadata accessor for CGColor(0);
    v11 = v10;
    *(_QWORD *)(v5 + 56) = v10;
    *(_QWORD *)(v5 + 32) = v9;
    v12 = objc_msgSend(v6, "systemBackgroundColor");
    v13 = objc_msgSend(v12, "CGColor");

    *(_QWORD *)(v5 + 88) = v11;
    *(_QWORD *)(v5 + 64) = v13;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v3, "setColors:", isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

    v15 = sub_100053F2C(&qword_1005D2F10);
    v16 = swift_allocObject(v15, 48, 7);
    *(_OWORD *)(v16 + 16) = xmmword_1004820B0;
    sub_100006C5C(0, &qword_1005D3858, NSNumber_ptr);
    *(NSNumber *)(v16 + 32) = NSNumber.init(floatLiteral:)(0.0);
    v17.super.super.isa = NSNumber.init(floatLiteral:)(1.0).super.super.isa;
    *(NSNumber *)(v16 + 40) = v17;
    specialized Array._endMutation()(v17.super.super.isa);
    v18 = v16;
    v19 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v3, "setLocations:", v19, swift_bridgeObjectRelease(v18).n128_f64[0]);

  }
  else
  {

  }
}

id sub_100234950()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMGradientMaskingView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMGradientMaskingView()
{
  return objc_opt_self(_TtC6FindMy21FMGradientMaskingView);
}

uint64_t sub_1002349B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __n128 v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t, __n128);
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[24];

  v26 = a1;
  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v24 - v7;
  v9 = type metadata accessor for FMIPUnknownItem(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = v1;
  v13 = v1 + OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_selectedItem;
  v14 = swift_beginAccess(v1 + OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_selectedItem, v27, 0, 0);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
  v16 = v15(v12, v13, v9, v14);
  FMIPUnknownItem.identifier.getter(v16);
  v17 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
  v18 = v17(v12, v9);
  FMIPUnknownItem.identifier.getter(v18);
  v19 = sub_100008000((unint64_t *)&unk_1005E2220, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v20 = dispatch thunk of static Equatable.== infix(_:_:)(v8, v6, v2, v19);
  v21 = *(void (**)(char *, uint64_t))(v3 + 8);
  v21(v6, v2);
  result = ((uint64_t (*)(char *, uint64_t))v21)(v8, v2);
  if ((v20 & 1) == 0)
  {
    result = swift_unknownObjectWeakLoadStrong(v25 + 24);
    if (result)
    {
      v23 = result;
      ((void (*)(char *, uint64_t, uint64_t))v15)(v12, v13, v9);
      sub_1002A1DA4((uint64_t)v12);
      swift_unknownObjectRelease(v23);
      return v17(v12, v9);
    }
  }
  return result;
}

void sub_100234B78()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD aBlock[5];
  char *v70;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v6);
  v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v1[OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_updatesEnabled] != 1)
  {
    v50 = *((_QWORD *)v1 + 5);
    if (!v50)
    {
      v52 = 0;
      v50 = *((_QWORD *)v1 + 6);
      if (!v50)
      {
LABEL_13:
        v50 = *((_QWORD *)v1 + 7);
        if (!v50)
          return;
        goto LABEL_19;
      }
LABEL_16:
      v51 = *(_QWORD *)(*((_QWORD *)v1 + 2) + 56);
      swift_beginAccess(v51 + 16, aBlock, 33, 0);
      swift_retain(v50);
      swift_retain(v51);
      v57 = sub_100334CE8((uint64_t *)(v51 + 16), v50);
      v54 = v57;
      v55 = *(_QWORD *)(v51 + 16);
      if (!((unint64_t)v55 >> 62))
      {
        v58 = *(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v58 >= v57)
          goto LABEL_18;
        goto LABEL_32;
      }
LABEL_28:
      if (v55 < 0)
        v64 = v55;
      else
        v64 = v55 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v55);
      v58 = _CocoaArrayWrapper.endIndex.getter(v64);
      swift_bridgeObjectRelease(v55);
      if (v58 >= v54)
      {
LABEL_18:
        sub_100200704(v54, v58);
        swift_endAccess(aBlock);
        swift_release(v50);
        swift_release(v51);
        v50 = *((_QWORD *)v1 + 7);
        if (!v50)
          return;
LABEL_19:
        v59 = *(char **)(*((_QWORD *)v1 + 2) + 16);
        v60 = (uint64_t *)&v59[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions];
        swift_beginAccess(&v59[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions], aBlock, 33, 0);
        swift_retain(v50);
        v1 = v59;
        v61 = sub_10005D558(v60, v50);
        v52 = v61;
        v54 = *v60;
        if (!((unint64_t)*v60 >> 62))
        {
          v62 = *(_QWORD *)((v54 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v62 >= v61)
          {
LABEL_21:
            sub_10005D32C(v52, v62);
            swift_endAccess(aBlock);
            swift_release(v50);

            return;
          }
LABEL_37:
          __break(1u);
          return;
        }
LABEL_33:
        if (v54 < 0)
          v65 = v54;
        else
          v65 = v54 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v54);
        v62 = _CocoaArrayWrapper.endIndex.getter(v65);
        swift_bridgeObjectRelease(v54);
        if (v62 >= v52)
          goto LABEL_21;
        goto LABEL_37;
      }
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    v51 = *(_QWORD *)(*((_QWORD *)v1 + 2) + 24);
    swift_beginAccess(v51 + 16, aBlock, 33, 0);
    swift_retain(v50);
    swift_retain(v51);
    v52 = 0;
    v53 = sub_1001138E0((uint64_t *)(v51 + 16), v50);
    v54 = v53;
    v55 = *(_QWORD *)(v51 + 16);
    if ((unint64_t)v55 >> 62)
    {
      if (v55 < 0)
        v63 = *(_QWORD *)(v51 + 16);
      else
        v63 = v55 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(v51 + 16));
      v56 = _CocoaArrayWrapper.endIndex.getter(v63);
      swift_bridgeObjectRelease(v55);
      if (v56 >= v54)
      {
LABEL_12:
        sub_1002006EC(v54, v56);
        swift_endAccess(aBlock);
        swift_release(v50);
        swift_release(v51);
        v50 = *((_QWORD *)v1 + 6);
        if (!v50)
          goto LABEL_13;
        goto LABEL_16;
      }
    }
    else
    {
      v56 = *(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v56 >= v53)
        goto LABEL_12;
    }
    __break(1u);
    goto LABEL_28;
  }
  v66 = v7;
  v67 = v3;
  v10 = (_QWORD *)*((_QWORD *)v1 + 2);
  v11 = v10[3];
  v12 = type metadata accessor for FMDevicesSubscription(0);
  v13 = swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  v14 = v13 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
  *(_QWORD *)(v14 + 8) = 0;
  swift_unknownObjectWeakInit(v14);
  swift_retain(v11);
  v15 = swift_retain(v1);
  UUID.init()(v15);
  v16 = v13 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
  *(_QWORD *)(v16 + 8) = &off_100552470;
  swift_unknownObjectWeakAssign(v16, v1);
  swift_release(v1);
  swift_beginAccess(v11 + 16, aBlock, 33, 0);
  v17 = swift_retain(v13);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v17);
  v19 = *(_QWORD *)((*(_QWORD *)(v11 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v18 = *(_QWORD *)((*(_QWORD *)(v11 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v19 >= v18 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v18 > 1, v19 + 1, 1);
  v20 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v19, v13);
  specialized Array._endMutation()(v20);
  swift_endAccess(aBlock);
  swift_release(v11);
  v21 = *((_QWORD *)v1 + 5);
  *((_QWORD *)v1 + 5) = v13;
  swift_release(v21);
  v22 = v10[7];
  v23 = type metadata accessor for FMSelectionSubscription(0);
  v24 = swift_allocObject(v23, *(unsigned int *)(v23 + 48), *(unsigned __int16 *)(v23 + 52));
  v25 = v24 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
  *(_QWORD *)(v25 + 8) = 0;
  swift_unknownObjectWeakInit(v25);
  swift_retain(v1);
  v26 = swift_retain(v22);
  UUID.init()(v26);
  v27 = v24 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
  *(_QWORD *)(v27 + 8) = &off_100552438;
  swift_unknownObjectWeakAssign(v27, v1);
  swift_release(v1);
  swift_beginAccess(v22 + 16, aBlock, 33, 0);
  v28 = swift_retain(v24);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v28);
  v30 = *(_QWORD *)((*(_QWORD *)(v22 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v29 = *(_QWORD *)((*(_QWORD *)(v22 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v30 >= v29 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v29 > 1, v30 + 1, 1);
  v31 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v24);
  specialized Array._endMutation()(v31);
  swift_endAccess(aBlock);
  swift_release(v22);
  v32 = *((_QWORD *)v1 + 6);
  *((_QWORD *)v1 + 6) = v24;
  swift_release(v32);
  v33 = (void *)v10[2];
  v34 = type metadata accessor for FMConditionSubscription(0);
  v35 = swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
  v36 = v35 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber;
  *(_QWORD *)(v36 + 8) = 0;
  swift_unknownObjectWeakInit(v36);
  swift_retain(v1);
  v37 = v33;
  UUID.init()(v37);
  v38 = v35 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber;
  *(_QWORD *)(v38 + 8) = &off_1005523B8;
  swift_unknownObjectWeakAssign(v38, v1);
  swift_release(v1);
  v39 = &v37[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions];
  swift_beginAccess(&v37[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions], aBlock, 33, 0);
  v40 = swift_retain(v35);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v40);
  v42 = *(_QWORD *)((*(_QWORD *)v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v41 = *(_QWORD *)((*(_QWORD *)v39 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v42 >= v41 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v41 > 1, v42 + 1, 1);
  v43 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v42, v35);
  specialized Array._endMutation()(v43);
  swift_endAccess(aBlock);

  v44 = *((_QWORD *)v1 + 7);
  *((_QWORD *)v1 + 7) = v35;
  swift_release(v44);
  aBlock[4] = sub_1002384BC;
  v70 = v1;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_100552668;
  v45 = _Block_copy(aBlock);
  v46 = swift_retain(v1);
  static DispatchQoS.unspecified.getter(v46);
  v68 = _swiftEmptyArrayStorage;
  v47 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v48 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v49 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v68, v48, v49, v2, v47);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v45);
  _Block_release(v45);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v9, v6);
  swift_release(v70);
}

uint64_t sub_1002352C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _BYTE v12[24];

  v3 = sub_100053F2C(&qword_1005DC6A8);
  __chkstk_darwin(v3);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = v1 + OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_itemViewModel;
  swift_beginAccess(v1 + OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_itemViewModel, v12, 33, 0);
  sub_1002384C0(a1, v6);
  swift_endAccess(v12);
  Strong = swift_unknownObjectWeakLoadStrong(v1 + 24);
  if (!Strong)
    return sub_1000051EC(a1, &qword_1005DC6A8);
  v8 = Strong;
  sub_100238508(v6, (uint64_t)v5);
  v9 = type metadata accessor for FMUTDetailViewModel(0);
  result = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v5, 1, v9);
  if ((_DWORD)result != 1)
  {
    sub_1002A21D8((uint64_t)v5);
    swift_unknownObjectRelease(v8);
    sub_10004FCB8((uint64_t)v5, type metadata accessor for FMUTDetailViewModel);
    return sub_1000051EC(a1, &qword_1005DC6A8);
  }
  __break(1u);
  return result;
}

uint64_t sub_1002353D4(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t result;
  Swift::String v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  _QWORD v53[3];

  v2 = v1;
  v46 = a1;
  v50 = type metadata accessor for FMIPUnknownItem(0);
  v48 = *(_QWORD *)(v50 - 8);
  __chkstk_darwin(v50);
  v49 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for FMSelectedSection(0);
  v4 = __chkstk_darwin(v45);
  v47 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v7 = (char *)&v42 - v6;
  v8 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v43 = *(_QWORD *)(v8 - 8);
  v44 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v14);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)v1 + 4) = 0;
  swift_unknownObjectWeakInit(v1 + 24);
  v17 = type metadata accessor for FMItemAger();
  *((_QWORD *)v1 + 6) = 0;
  *((_QWORD *)v1 + 7) = 0;
  *((_QWORD *)v1 + 5) = 0;
  swift_allocObject(v17, 40, 7);
  *((_QWORD *)v1 + 8) = sub_1000465C0();
  sub_1000555A8();
  static DispatchQoS.userInitiated.getter();
  v53[0] = _swiftEmptyArrayStorage;
  v18 = sub_100008000((unint64_t *)&unk_1005D3970, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v19 = sub_100053F2C((uint64_t *)&unk_1005D20F0);
  v20 = sub_10003F734((unint64_t *)&unk_1005D3980, (uint64_t *)&unk_1005D20F0);
  v21 = v19;
  v22 = (uint64_t)v7;
  dispatch thunk of SetAlgebra.init<A>(_:)(v53, v21, v20, v11, v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v43 + 104))(v10, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v44);
  v23 = v13;
  v24 = v45;
  v25 = v46;
  *((_QWORD *)v1 + 9) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000023, 0x80000001004B73B0, v16, v23, v10, 0);
  *((_QWORD *)v1 + 10) = 0;
  v1[OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_isRangingServiceAvailable] = 1;
  v1[OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_updatesEnabled] = 0;
  v26 = &v1[OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_itemViewModel];
  v27 = type metadata accessor for FMUTDetailViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
  v28 = *(_QWORD *)(v25 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v28, v53, 0, 0);
  v29 = v28;
  v30 = (uint64_t)v47;
  sub_10004FC74(v29, (uint64_t)v7, type metadata accessor for FMSelectedSection);
  sub_10004FC74((uint64_t)v7, v30, type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload(v30, v24) == 8)
  {
    v31 = v49;
    v32 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 32);
    v33 = v50;
    v32(v49, v30, v50);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v34 = type metadata accessor for Logger(0);
    v35 = sub_100056D88(v34, (uint64_t)qword_1005F5748);
    v36 = Logger.logObject.getter(v35);
    v37 = static os_log_type_t.default.getter(v36);
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v38 = 0;
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "FMUTDetailDataSource: initialized", v38, 2u);
      swift_slowDealloc(v38, -1, -1);
    }

    sub_10004FCB8(v22, type metadata accessor for FMSelectedSection);
    v32(&v2[OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_selectedItem], (uint64_t)v31, v33);
    *((_QWORD *)v2 + 2) = v25;
    v39 = *((_QWORD *)v2 + 8);
    *(_QWORD *)(v39 + 24) = &off_100552460;
    swift_unknownObjectWeakAssign(v39 + 16, v2);
    return (uint64_t)v2;
  }
  else
  {
    sub_10004FCB8(v30, type metadata accessor for FMSelectedSection);
    v51 = 0;
    v52 = 0xE000000000000000;
    _StringGuts.grow(_:)(82);
    v41._countAndFlagsBits = 0xD000000000000050;
    v41._object = (void *)0x80000001004B7410;
    String.append(_:)(v41);
    _print_unlocked<A, B>(_:_:)(v7, &v51, v24, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v51, v52, "FindMy/FMUTDetailDataSource.swift", 33, 2, 100, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_1002358E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  void (*v11)(_BYTE *, uint64_t, uint64_t);
  uint64_t v12;
  __n128 v13;
  __n128 v14;
  void (*v15)(_BYTE *, uint64_t);
  _BYTE v17[24];
  _BYTE v18[24];

  v4 = type metadata accessor for FMIPUnknownItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v10 = &v17[-v9];
  v11 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
  v11(&v17[-v9], a2, v4);
  v12 = a1 + OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_selectedItem;
  v13 = swift_beginAccess(a1 + OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_selectedItem, v18, 0, 0);
  ((void (*)(_BYTE *, uint64_t, uint64_t, __n128))v11)(v8, v12, v4, v13);
  v14 = swift_beginAccess(v12, v17, 33, 0);
  (*(void (**)(uint64_t, _BYTE *, uint64_t, __n128))(v5 + 24))(v12, v10, v4, v14);
  swift_endAccess(v17);
  sub_1002349B0((uint64_t)v8);
  v15 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v15(v10, v4);
  v15(v8, v4);
  return sub_100235A14();
}

uint64_t sub_100235A14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t (*v31)(char *, unint64_t, uint64_t, __n128);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  void (*v37)(char *, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  __n128 v45;
  char *v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  __n128 v57;
  char *v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  __n128 v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  _BYTE v82[24];
  char v83[24];
  char v84[32];

  v1 = v0;
  v2 = sub_100053F2C(&qword_1005DC6A8);
  __chkstk_darwin(v2);
  v70 = (uint64_t)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = type metadata accessor for FMUTDetailViewModel(0);
  v69 = *(_QWORD *)(v71 - 8);
  __chkstk_darwin(v71);
  v5 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UUID(0);
  v78 = *(_QWORD *)(v6 - 8);
  v79 = v6;
  v7 = __chkstk_darwin(v6);
  v77 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v64 - v9;
  v11 = sub_100053F2C((uint64_t *)&unk_1005D2A50);
  __chkstk_darwin(v11);
  v73 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FMIPUnknownItem(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v72 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v15);
  v81 = (char *)&v64 - v18;
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v64 - v20;
  __chkstk_darwin(v19);
  v74 = (char *)&v64 - v22;
  v68 = *(_QWORD *)(v0 + 16);
  v23 = *(_QWORD *)(v68 + 24);
  v24 = swift_retain(v23);
  v25 = FMIPManager.unknownItems.getter(v24);
  v26 = swift_release(v23);
  v27 = *(_QWORD *)(v25 + 16);
  if (v27)
  {
    v66 = v5;
    v28 = v25 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v67 = v0;
    v29 = v0 + OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_selectedItem;
    v65 = v25;
    swift_bridgeObjectRetain(v25);
    v76 = v29;
    v30 = swift_beginAccess(v29, v84, 0, 0);
    v75 = *(_QWORD *)(v14 + 72);
    v80 = v14;
    v31 = *(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v14 + 16);
    while (1)
    {
      v32 = v31(v21, v28, v13, v30);
      FMIPUnknownItem.identifier.getter(v32);
      v33 = v81;
      v34 = ((uint64_t (*)(char *, uint64_t, uint64_t))v31)(v81, v76, v13);
      v35 = v77;
      FMIPUnknownItem.identifier.getter(v34);
      v36 = *(void (**)(char *, uint64_t))(v80 + 8);
      v36(v33, v13);
      LOBYTE(v33) = static UUID.== infix(_:_:)(v10, v35);
      v37 = *(void (**)(char *, uint64_t))(v78 + 8);
      v38 = v35;
      v39 = v13;
      v40 = v79;
      v37(v38, v79);
      v37(v10, v40);
      if ((v33 & 1) != 0)
        break;
      v36(v21, v39);
      v28 += v75;
      --v27;
      v13 = v39;
      if (!v27)
      {
        v25 = v65;
        v26 = swift_bridgeObjectRelease(v65);
        v41 = 1;
        v1 = v67;
        v5 = v66;
        v14 = v80;
        goto LABEL_7;
      }
    }
    v43 = v65;
    v44 = swift_bridgeObjectRelease(v65);
    v14 = v80;
    v42 = (uint64_t)v73;
    (*(void (**)(char *, char *, uint64_t, __n128))(v80 + 32))(v73, v21, v39, v44);
    v41 = 0;
    v1 = v67;
    v5 = v66;
    v13 = v39;
    v25 = v43;
  }
  else
  {
    v41 = 1;
LABEL_7:
    v42 = (uint64_t)v73;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v14 + 56))(v42, v41, 1, v13, v26);
  v45 = swift_bridgeObjectRelease(v25);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v14 + 48))(v42, 1, v13, v45) == 1)
    return sub_1000051EC(v42, (uint64_t *)&unk_1005D2A50);
  v47 = v74;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v74, v42, v13);
  v48 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v49 = (uint64_t)v81;
  v48(v81, v47, v13);
  LODWORD(v47) = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_isRangingServiceAvailable);
  v50 = swift_retain(v68);
  sub_1004381C8(v50, v49, (int)v47, (uint64_t)v5);
  v51 = v70;
  sub_10004FC74((uint64_t)v5, v70, type metadata accessor for FMUTDetailViewModel);
  v52 = v71;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v69 + 56))(v51, 0, 1, v71);
  sub_1002352C4(v51);
  v53 = sub_100053F2C(&qword_1005D55E8);
  v54 = v14;
  v55 = swift_allocObject(v53, 72, 7);
  *(_OWORD *)(v55 + 16) = xmmword_100481740;
  *(_QWORD *)(v55 + 56) = v52;
  *(_QWORD *)(v55 + 64) = &off_100566CD8;
  v56 = sub_10003D370((_QWORD *)(v55 + 32));
  sub_10004FC74((uint64_t)v5, (uint64_t)v56, type metadata accessor for FMUTDetailViewModel);
  sub_100054D40(v55);
  v57 = swift_bridgeObjectRelease(v55);
  v58 = v74;
  ((void (*)(uint64_t, char *, uint64_t, __n128))v48)(v49, v74, v13, v57);
  v59 = v1 + OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_selectedItem;
  v60 = swift_beginAccess(v1 + OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_selectedItem, v83, 0, 0);
  v61 = (uint64_t)v72;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v48)(v72, v59, v13, v60);
  v62 = swift_beginAccess(v59, v82, 33, 0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v54 + 24))(v59, v49, v13, v62);
  swift_endAccess(v82);
  sub_1002349B0(v61);
  v63 = *(void (**)(uint64_t, uint64_t))(v54 + 8);
  v63(v49, v13);
  v63(v61, v13);
  sub_10004FCB8((uint64_t)v5, type metadata accessor for FMUTDetailViewModel);
  return ((uint64_t (*)(char *, uint64_t))v63)(v58, v13);
}

uint64_t sub_100235FD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 16));
  sub_10005E190(v0 + 24);
  swift_release(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 56));
  swift_release(*(_QWORD *)(v0 + 64));

  v1 = v0 + OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_selectedItem;
  v2 = type metadata accessor for FMIPUnknownItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1000051EC(v0 + OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_itemViewModel, &qword_1005DC6A8);
  return v0;
}

uint64_t sub_10023606C()
{
  uint64_t v0;

  sub_100235FD0();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_100236090()
{
  return type metadata accessor for FMUTDetailDataSource(0);
}

uint64_t type metadata accessor for FMUTDetailDataSource(uint64_t a1)
{
  uint64_t result;

  result = qword_1005DC4A8;
  if (!qword_1005DC4A8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMUTDetailDataSource);
  return result;
}

void sub_1002360D4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[12];

  v6[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v6[1] = &unk_1004891C8;
  v6[2] = &unk_1004891E0;
  v6[3] = &unk_1004891E0;
  v6[4] = &unk_1004891E0;
  v6[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  v6[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v6[7] = &unk_1004891E0;
  v2 = type metadata accessor for FMIPUnknownItem(319);
  if (v3 <= 0x3F)
  {
    v6[8] = *(_QWORD *)(v2 - 8) + 64;
    v6[9] = &unk_1004891F8;
    v6[10] = &unk_1004891F8;
    sub_1002361A0(319);
    if (v5 <= 0x3F)
    {
      v6[11] = *(_QWORD *)(v4 - 8) + 64;
      swift_updateClassMetadata2(a1, 256, 12, v6, a1 + 80);
    }
  }
}

void sub_1002361A0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1005DC4B8)
  {
    v2 = type metadata accessor for FMUTDetailViewModel(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1005DC4B8);
  }
}

double sub_1002361F4(uint64_t a1, uint64_t a2)
{
  return sub_1002373B8(a2, "FMUTDetailDataSource: didUpdate %ld unknownItems", (uint64_t)sub_100238588, (uint64_t)&unk_100552550);
}

double sub_100236224(uint64_t a1, uint64_t a2)
{
  return sub_1002373B8(a2, "FMUTDetailDataSource: didUpdate %ld shares", (uint64_t)sub_100238588, (uint64_t)&unk_100552528);
}

double sub_100236254(uint64_t a1, uint64_t a2)
{
  return sub_100237690(a2);
}

void sub_10023625C(uint64_t a1, uint64_t a2)
{
  sub_100236E50(a2);
}

uint64_t sub_100236264(uint64_t a1, char a2)
{
  return sub_100237A8C(a2);
}

uint64_t sub_10023626C(uint64_t a1, char a2)
{
  return sub_100237DC8(a2);
}

void sub_100236274(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  char *v32;
  char *v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __n128 v48;
  __n128 v49;
  uint64_t v50;
  Swift::Int v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  Swift::Int v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  void *v65;
  uint64_t *v66;
  id v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  __n128 v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  uint8_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  uint8_t *v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  char *v94;
  id v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  NSObject *v101;
  os_log_type_t v102;
  uint8_t *v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  char *v107;
  id v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t (*v124)(char *, uint64_t, uint64_t);
  uint64_t v125;
  char *v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD v131[9];
  char v132[16];

  v2 = v1;
  v122 = a1;
  v114 = type metadata accessor for FMFindingType(0);
  v113 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v115 = (char *)&v110 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v112 = type metadata accessor for FMExperienceType(0);
  v111 = *(_QWORD *)(v112 - 8);
  __chkstk_darwin(v112);
  v110 = (uint64_t)&v110 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FMUTDetailViewModel(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v110 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UUID(0);
  v129 = *(_QWORD *)(v8 - 8);
  v130 = v8;
  v9 = __chkstk_darwin(v8);
  v127 = (char *)&v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v128 = (char *)&v110 - v11;
  v12 = sub_100053F2C((uint64_t *)&unk_1005D2A50);
  __chkstk_darwin(v12);
  v121 = (char *)&v110 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FMIPUnknownItem(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v126 = (char *)&v110 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v110 - v19;
  __chkstk_darwin(v18);
  v22 = (char *)&v110 - v21;
  v23 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 24);
  v24 = swift_retain(v23);
  v25 = FMIPManager.unknownItems.getter(v24);
  v26 = swift_release(v23);
  v27 = *(_QWORD *)(v25 + 16);
  if (v27)
  {
    v117 = v5;
    v118 = v7;
    v119 = v22;
    v28 = v25 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v120 = v2;
    v29 = v2 + OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_selectedItem;
    v116 = v25;
    swift_bridgeObjectRetain(v25);
    v125 = v29;
    v30 = swift_beginAccess(v29, v132, 0, 0);
    v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 16);
    v123 = *(_QWORD *)(v15 + 72);
    v124 = v31;
    v32 = v20;
    v33 = v128;
    while (1)
    {
      v34 = v124;
      v35 = ((uint64_t (*)(char *, unint64_t, uint64_t, __n128))v124)(v32, v28, v14, v30);
      FMIPUnknownItem.identifier.getter(v35);
      v36 = v126;
      v37 = v34(v126, v125, v14);
      v38 = v127;
      FMIPUnknownItem.identifier.getter(v37);
      v39 = v15;
      v40 = *(void (**)(char *, uint64_t))(v15 + 8);
      v40(v36, v14);
      LOBYTE(v36) = static UUID.== infix(_:_:)(v33, v38);
      v41 = v14;
      v42 = *(void (**)(char *, uint64_t))(v129 + 8);
      v43 = v38;
      v44 = v130;
      v42(v43, v130);
      v42(v33, v44);
      if ((v36 & 1) != 0)
        break;
      v40(v32, v41);
      v28 += v123;
      --v27;
      v14 = v41;
      v15 = v39;
      if (!v27)
      {
        v25 = v116;
        v26 = swift_bridgeObjectRelease(v116);
        v45 = 1;
        v2 = v120;
        v22 = v119;
        v46 = v122;
        v7 = v118;
        v5 = v117;
        v47 = (uint64_t)v121;
        goto LABEL_8;
      }
    }
    v25 = v116;
    v48 = swift_bridgeObjectRelease(v116);
    v47 = (uint64_t)v121;
    (*(void (**)(char *, char *, uint64_t, __n128))(v39 + 32))(v121, v32, v41, v48);
    v45 = 0;
    v2 = v120;
    v14 = v41;
    v15 = v39;
    v22 = v119;
    v46 = v122;
    v7 = v118;
    v5 = v117;
  }
  else
  {
    v45 = 1;
    v47 = (uint64_t)v121;
    v46 = v122;
  }
LABEL_8:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v15 + 56))(v47, v45, 1, v14, v26);
  v49 = swift_bridgeObjectRelease(v25);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v15 + 48))(v47, 1, v14, v49) == 1)
  {
    sub_1000051EC(v47, (uint64_t *)&unk_1005D2A50);
    return;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v22, v47, v14);
  v50 = *(_QWORD *)(v46 + *(int *)(v5 + 56));
  if (*(_QWORD *)(v50 + 16)
    && (Hasher.init(_seed:)(v131, *(_QWORD *)(v50 + 40)),
        Hasher._combine(_:)(0),
        v51 = Hasher._finalize()(),
        v52 = -1 << *(_BYTE *)(v50 + 32),
        v53 = v51 & ~v52,
        ((*(_QWORD *)(v50 + 56 + ((v53 >> 3) & 0xFFFFFFFFFFFFF8)) >> v53) & 1) != 0))
  {
    v54 = ~v52;
    while (*(_BYTE *)(*(_QWORD *)(v50 + 48) + v53) != 2)
    {
      v53 = (v53 + 1) & v54;
      if (((*(_QWORD *)(v50 + 56 + ((v53 >> 3) & 0xFFFFFFFFFFFFF8)) >> v53) & 1) == 0)
        goto LABEL_15;
    }
    sub_10004FC74(v46, (uint64_t)v7, type metadata accessor for FMUTDetailViewModel);
  }
  else
  {
LABEL_15:
    sub_10004FC74(v46, (uint64_t)v7, type metadata accessor for FMUTDetailViewModel);
    v55 = *(_QWORD *)&v7[*(int *)(v5 + 56)];
    if (!*(_QWORD *)(v55 + 16)
      || (Hasher.init(_seed:)(v131, *(_QWORD *)(v55 + 40)),
          Hasher._combine(_:)(1uLL),
          v56 = Hasher._finalize()(),
          v57 = -1 << *(_BYTE *)(v55 + 32),
          v58 = v56 & ~v57,
          ((*(_QWORD *)(v55 + 56 + ((v58 >> 3) & 0xFFFFFFFFFFFFF8)) >> v58) & 1) == 0))
    {
LABEL_20:
      sub_10004FCB8((uint64_t)v7, type metadata accessor for FMUTDetailViewModel);
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v60 = type metadata accessor for Logger(0);
      v61 = sub_100056D88(v60, (uint64_t)qword_1005F5748);
      v62 = Logger.logObject.getter(v61);
      v63 = static os_log_type_t.default.getter(v62);
      if (os_log_type_enabled(v62, v63))
      {
        v64 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v64 = 0;
        _os_log_impl((void *)&_mh_execute_header, v62, v63, "FMUTDetailDataSource: Attempting to prewarm, but finding is not supported", v64, 2u);
        swift_slowDealloc(v64, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v15 + 8))(v22, v14);
      return;
    }
    v59 = ~v57;
    while (*(_BYTE *)(*(_QWORD *)(v55 + 48) + v58) != 3)
    {
      v58 = (v58 + 1) & v59;
      if (((*(_QWORD *)(v55 + 56 + ((v58 >> 3) & 0xFFFFFFFFFFFFF8)) >> v58) & 1) == 0)
        goto LABEL_20;
    }
  }
  sub_10004FCB8((uint64_t)v7, type metadata accessor for FMUTDetailViewModel);
  v65 = *(void **)(v2 + 80);
  v66 = &OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_requiredCapability;
  if (v65)
  {
    v67 = v65;
    v68 = v128;
    v69 = FMIPUnknownItem.identifier.getter(v67);
    v70 = UUID.uuidString.getter(v69);
    v72 = v71;
    v73 = (*(uint64_t (**)(char *, uint64_t))(v129 + 8))(v68, v130);
    v74 = (_QWORD *)FMConnectionManager.identifiers.getter(v73);
    LOBYTE(v70) = sub_10006BA18(v70, v72, v74);
    swift_bridgeObjectRelease(v74);
    v75 = swift_bridgeObjectRelease(v72);
    if ((v70 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t, __n128))(v15 + 8))(v22, v14, v75);

      return;
    }
    dispatch thunk of FMConnectionManager.disconnect()(v75);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v76 = type metadata accessor for Logger(0);
    v77 = sub_100056D88(v76, (uint64_t)qword_1005F5748);
    v78 = Logger.logObject.getter(v77);
    v79 = static os_log_type_t.default.getter(v78);
    if (os_log_type_enabled(v78, v79))
    {
      v80 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v80 = 0;
      _os_log_impl((void *)&_mh_execute_header, v78, v79, "FMUTDetailDataSource: Prewarming: Existing item connection manager was discarded due to item change", v80, 2u);
      swift_slowDealloc(v80, -1, -1);
    }

    v66 = &OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_requiredCapability;
    *(_BYTE *)(v2 + OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_isRangingServiceAvailable) = 1;
    sub_100235A14();

  }
  v81 = v110;
  sub_1004391F0(*(unsigned __int8 *)(v2 + v66[155]), (uint64_t)v22, v110);
  v82 = v81;
  v83 = v112;
  v84 = (*(uint64_t (**)(uint64_t, uint64_t))(v111 + 88))(v82, v112);
  if (v84 == enum case for FMExperienceType.r1(_:) || v84 == enum case for FMExperienceType.r1NoAR(_:))
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v86 = type metadata accessor for Logger(0);
    v87 = sub_100056D88(v86, (uint64_t)qword_1005F5748);
    v88 = Logger.logObject.getter(v87);
    v89 = static os_log_type_t.default.getter(v88);
    if (os_log_type_enabled(v88, v89))
    {
      v90 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v90 = 0;
      _os_log_impl((void *)&_mh_execute_header, v88, v89, "FMUTDetailDataSource: Prewarming: Creating new instance of item connection manager for R1 connections.", v90, 2u);
      swift_slowDealloc(v90, -1, -1);
    }

    v91 = sub_100053F2C(&qword_1005D6418);
    v92 = swift_allocObject(v91, 72, 7);
    *(_OWORD *)(v92 + 16) = xmmword_100481740;
    *(_QWORD *)(v92 + 56) = v14;
    *(_QWORD *)(v92 + 64) = sub_100008000(&qword_1005DB4F8, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPUnknownItem, (uint64_t)&protocol conformance descriptor for FMIPUnknownItem);
    v93 = sub_10003D370((_QWORD *)(v92 + 32));
    (*(void (**)(_QWORD *, char *, uint64_t))(v15 + 16))(v93, v22, v14);
    v94 = v115;
    (*(void (**)(char *, _QWORD, uint64_t))(v113 + 104))(v115, enum case for FMFindingType.ut(_:), v114);
    v95 = objc_allocWithZone((Class)type metadata accessor for FMItemR1ConnectionManager(0));
    v96 = (id)FMItemR1ConnectionManager.init(findables:connectionContext:)(v92, v94);
    v97 = sub_100008000(&qword_1005DC6A0, type metadata accessor for FMUTDetailDataSource, (uint64_t)&unk_100489210);
    v98 = swift_unknownObjectRetain(v2);
    dispatch thunk of FMItemR1ConnectionManager.delegate.setter(v98, v97);
    if (*(_BYTE *)(v2 + OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_updatesEnabled) == 1)
    {
      v96 = v96;
      dispatch thunk of FMConnectionManager.connect()();

    }
    goto LABEL_51;
  }
  if (v84 == enum case for FMExperienceType.bt(_:))
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v99 = type metadata accessor for Logger(0);
    v100 = sub_100056D88(v99, (uint64_t)qword_1005F5748);
    v101 = Logger.logObject.getter(v100);
    v102 = static os_log_type_t.default.getter(v101);
    if (os_log_type_enabled(v101, v102))
    {
      v103 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v103 = 0;
      _os_log_impl((void *)&_mh_execute_header, v101, v102, "FMUTDetailDataSource: Prewarming: Creating new instance of item connection manager for BT connections.", v103, 2u);
      swift_slowDealloc(v103, -1, -1);
    }

    v104 = sub_100053F2C(&qword_1005D6418);
    v105 = swift_allocObject(v104, 72, 7);
    *(_OWORD *)(v105 + 16) = xmmword_100481740;
    *(_QWORD *)(v105 + 56) = v14;
    *(_QWORD *)(v105 + 64) = sub_100008000(&qword_1005DB4F8, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPUnknownItem, (uint64_t)&protocol conformance descriptor for FMIPUnknownItem);
    v106 = sub_10003D370((_QWORD *)(v105 + 32));
    (*(void (**)(_QWORD *, char *, uint64_t))(v15 + 16))(v106, v22, v14);
    v107 = v115;
    (*(void (**)(char *, _QWORD, uint64_t))(v113 + 104))(v115, enum case for FMFindingType.ut(_:), v114);
    v108 = objc_allocWithZone((Class)type metadata accessor for FMItemBTConnectionManager(0));
    v96 = (id)FMItemBTConnectionManager.init(findables:connectionContext:)(v105, v107);
LABEL_51:
    (*(void (**)(char *, uint64_t))(v15 + 8))(v22, v14);
    v109 = *(void **)(v2 + 80);
    *(_QWORD *)(v2 + 80) = v96;

    return;
  }
  _diagnoseUnexpectedEnumCase<A>(type:)(v83, v83);
  __break(1u);
}

double sub_100236E44(uint64_t a1, int a2, uint64_t a3)
{
  return sub_100238104(a2, a3);
}

void sub_100236E50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint8_t *v23;
  _QWORD *v24;
  _QWORD *v25;
  char *v26;
  unint64_t v27;
  unint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t aBlock;
  unint64_t v66[4];
  uint64_t v67;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v63 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v61 = *(_QWORD *)(v5 - 8);
  v62 = v5;
  __chkstk_darwin(v5);
  v60 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FMIPUnknownItem(0);
  v58 = *(_QWORD *)(v7 - 8);
  v59 = v7;
  v8 = __chkstk_darwin(v7);
  v54 = v9;
  v55 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v57 = (char *)&v50 - v10;
  v11 = type metadata accessor for FMSelectedSection(0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v50 - v15;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v17 = type metadata accessor for Logger(0);
  v18 = sub_100056D88(v17, (uint64_t)qword_1005F5748);
  v19 = sub_10004FC74(a1, (uint64_t)v16, type metadata accessor for FMSelectedSection);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.default.getter(v20);
  if (os_log_type_enabled(v20, v21))
  {
    v51 = a1;
    v22 = swift_slowAlloc(12, -1);
    v53 = v11;
    v23 = (uint8_t *)v22;
    v24 = (_QWORD *)swift_slowAlloc(32, -1);
    v50 = v18;
    v25 = v24;
    v52 = v2;
    *(_DWORD *)v23 = 136315138;
    v64 = v24;
    aBlock = 0;
    v66[0] = 0xE000000000000000;
    _print_unlocked<A, B>(_:_:)(v16, &aBlock, v53, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v26 = v4;
    v27 = v66[0];
    aBlock = sub_100056DA0(aBlock, v66[0], (uint64_t *)&v64);
    a1 = v51;
    v2 = v52;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v66);
    v28 = v27;
    v4 = v26;
    swift_bridgeObjectRelease(v28);
    sub_10004FCB8((uint64_t)v16, type metadata accessor for FMSelectedSection);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "FMUTDetailDataSource: didUpdate selectedSection %s", v23, 0xCu);
    swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v25, -1, -1);
    v29 = v23;
    v11 = v53;
    swift_slowDealloc(v29, -1, -1);
  }
  else
  {
    sub_10004FCB8((uint64_t)v16, type metadata accessor for FMSelectedSection);
  }

  sub_10004FC74(a1, (uint64_t)v14, type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload(v14, v11) == 8)
  {
    v31 = v57;
    v30 = v58;
    v32 = *(void (**)(char *, char *, uint64_t))(v58 + 32);
    v33 = v14;
    v34 = v59;
    v32(v57, v33, v59);
    v36 = v55;
    v35 = v56;
    v53 = *(_QWORD *)(v56 + 72);
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v55, v31, v34);
    v37 = *(unsigned __int8 *)(v30 + 80);
    v38 = (v37 + 24) & ~v37;
    v39 = swift_allocObject(&unk_1005525B0, v38 + v54, v37 | 7);
    *(_QWORD *)(v39 + 16) = v35;
    v32((char *)(v39 + v38), v36, v34);
    v66[3] = (unint64_t)sub_100237A5C;
    v67 = v39;
    aBlock = (uint64_t)_NSConcreteStackBlock;
    v66[0] = 1107296256;
    v66[1] = (unint64_t)sub_100037DF8;
    v66[2] = (unint64_t)&unk_1005525C8;
    v40 = _Block_copy(&aBlock);
    v41 = swift_retain(v35);
    v42 = v60;
    static DispatchQoS.unspecified.getter(v41);
    v64 = _swiftEmptyArrayStorage;
    v43 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v44 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
    v45 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v64, v44, v45, v2, v43);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v42, v4, v40);
    _Block_release(v40);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v4, v2);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v42, v62);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v34);
    swift_release(v67);
  }
  else
  {
    v46 = sub_10004FCB8((uint64_t)v14, type metadata accessor for FMSelectedSection);
    v47 = Logger.logObject.getter(v46);
    v48 = static os_log_type_t.default.getter(v47);
    if (os_log_type_enabled(v47, v48))
    {
      v49 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v49 = 0;
      _os_log_impl((void *)&_mh_execute_header, v47, v48, "FMUTDetailDataSource: not updating selection...", v49, 2u);
      swift_slowDealloc(v49, -1, -1);
    }

  }
}

double sub_1002373B8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint8_t *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double result;
  uint64_t v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  void **aBlock;
  _QWORD v37[4];
  uint64_t v38;

  v32 = a2;
  v7 = v4;
  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v34 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for DispatchQoS(0);
  v12 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v15 = type metadata accessor for Logger(0);
  sub_100056D88(v15, (uint64_t)qword_1005F5748);
  swift_bridgeObjectRetain(a1);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter(v17);
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(12, -1);
    v31 = a3;
    v20 = v12;
    v21 = a4;
    v22 = v19;
    *(_DWORD *)v19 = 134217984;
    aBlock = *(void ***)(a1 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v37);
    swift_bridgeObjectRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, v32, v22, 0xCu);
    v23 = v22;
    a4 = v21;
    v12 = v20;
    a3 = v31;
    swift_slowDealloc(v23, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease(a1);
  }
  v37[3] = a3;
  v38 = v7;
  aBlock = _NSConcreteStackBlock;
  v37[0] = 1107296256;
  v37[1] = sub_100037DF8;
  v37[2] = a4;
  v24 = _Block_copy(&aBlock);
  v25 = swift_retain(v7);
  static DispatchQoS.unspecified.getter(v25);
  v35 = _swiftEmptyArrayStorage;
  v26 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v27 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v28 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v35, v27, v28, v9, v26);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v11, v24);
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v33);
  *(_QWORD *)&result = swift_release(v38).n128_u64[0];
  return result;
}

double sub_100237690(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  _QWORD *v17;
  Class isa;
  uint64_t v19;
  _QWORD *v20;
  uint8_t *v21;
  void *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double result;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  void **aBlock;
  _QWORD v36[4];
  uint64_t v37;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v33 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v32 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v10 = type metadata accessor for Logger(0);
  sub_100056D88(v10, (uint64_t)qword_1005F5748);
  swift_bridgeObjectRetain(a1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc(12, -1);
    v29 = v2;
    v15 = (uint8_t *)v14;
    v16 = swift_slowAlloc(8, -1);
    v30 = v8;
    v17 = (_QWORD *)v16;
    v31 = v7;
    *(_DWORD *)v15 = 138412290;
    sub_100053F2C((uint64_t *)&unk_1005D6750);
    isa = Array._bridgeToObjectiveC()().super.isa;
    aBlock = (void **)isa;
    v7 = v31;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v36);
    *v17 = isa;
    swift_bridgeObjectRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "FMUTDetailDataSource: itemsDidAge %@", v15, 0xCu);
    v19 = sub_100053F2C((uint64_t *)&unk_1005D9680);
    swift_arrayDestroy(v17, 1, v19);
    v20 = v17;
    v8 = v30;
    swift_slowDealloc(v20, -1, -1);
    v21 = v15;
    v2 = v29;
    swift_slowDealloc(v21, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease(a1);
  }
  v36[3] = sub_100238588;
  v37 = v2;
  aBlock = _NSConcreteStackBlock;
  v36[0] = 1107296256;
  v36[1] = sub_100037DF8;
  v36[2] = &unk_100552578;
  v22 = _Block_copy(&aBlock);
  v23 = swift_retain(v2);
  v24 = v32;
  static DispatchQoS.unspecified.getter(v23);
  v34 = _swiftEmptyArrayStorage;
  v25 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v26 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v27 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v34, v26, v27, v4, v25);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v24, v7, v22);
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v24, v8);
  *(_QWORD *)&result = swift_release(v37).n128_u64[0];
  return result;
}

uint64_t sub_1002379E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for FMIPUnknownItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100237A5C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMIPUnknownItem(0) - 8) + 80);
  return sub_1002358E4(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_100237A8C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  unint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t aBlock[5];
  uint64_t v39;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v35 = *(_QWORD *)(v8 - 8);
  v36 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v11 = type metadata accessor for Logger(0);
  v12 = sub_100056D88(v11, (uint64_t)qword_1005F5748);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc(12, -1);
    v33 = v2;
    v16 = (uint8_t *)v15;
    v17 = swift_slowAlloc(32, -1);
    v34 = v5;
    v18 = v17;
    *(_DWORD *)v16 = 136315138;
    aBlock[0] = v17;
    if ((a1 & 1) != 0)
      v19 = 28239;
    else
      v19 = 6710863;
    if ((a1 & 1) != 0)
      v20 = 0xE200000000000000;
    else
      v20 = 0xE300000000000000;
    v37 = sub_100056DA0(v19, v20, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, aBlock);
    swift_bridgeObjectRelease(v20);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "FMUTDetailDataSource: Airplane Mode is %s", v16, 0xCu);
    swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
    v21 = v18;
    v5 = v34;
    swift_slowDealloc(v21, -1, -1);
    v22 = v16;
    v2 = v33;
    swift_slowDealloc(v22, -1, -1);
  }

  v23 = sub_1000555A8();
  v24 = (void *)static OS_dispatch_queue.main.getter(v23);
  aBlock[4] = (uint64_t)sub_100238588;
  v39 = v2;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100037DF8;
  aBlock[3] = (uint64_t)&unk_100552618;
  v25 = _Block_copy(aBlock);
  v26 = v39;
  swift_retain(v2);
  swift_release(v26);
  static DispatchQoS.unspecified.getter(v27);
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  v28 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v29 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v30 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v29, v30, v4, v28);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v10, v36);
}

uint64_t sub_100237DC8(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  unint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t aBlock[5];
  uint64_t v39;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v35 = *(_QWORD *)(v8 - 8);
  v36 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v11 = type metadata accessor for Logger(0);
  v12 = sub_100056D88(v11, (uint64_t)qword_1005F5748);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc(12, -1);
    v33 = v2;
    v16 = (uint8_t *)v15;
    v17 = swift_slowAlloc(32, -1);
    v34 = v5;
    v18 = v17;
    *(_DWORD *)v16 = 136315138;
    aBlock[0] = v17;
    if ((a1 & 1) != 0)
      v19 = 6710863;
    else
      v19 = 28239;
    if ((a1 & 1) != 0)
      v20 = 0xE300000000000000;
    else
      v20 = 0xE200000000000000;
    v37 = sub_100056DA0(v19, v20, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, aBlock);
    swift_bridgeObjectRelease(v20);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "FMUTDetailDataSource: BT is %s", v16, 0xCu);
    swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
    v21 = v18;
    v5 = v34;
    swift_slowDealloc(v21, -1, -1);
    v22 = v16;
    v2 = v33;
    swift_slowDealloc(v22, -1, -1);
  }

  v23 = sub_1000555A8();
  v24 = (void *)static OS_dispatch_queue.main.getter(v23);
  aBlock[4] = (uint64_t)sub_100238588;
  v39 = v2;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100037DF8;
  aBlock[3] = (uint64_t)&unk_1005525F0;
  v25 = _Block_copy(aBlock);
  v26 = v39;
  swift_retain(v2);
  swift_release(v26);
  static DispatchQoS.unspecified.getter(v27);
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  v28 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v29 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v30 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v29, v30, v4, v28);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v10, v36);
}

double sub_100238104(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double result;
  _BYTE v30[4];
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[3];
  _BYTE v37[8];
  _QWORD *v38;
  uint64_t aBlock[5];
  uint64_t v40;

  v3 = v2;
  LODWORD(v5) = a1;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v30[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for DispatchQoS(0);
  v33 = *(_QWORD *)(v10 - 8);
  v34 = v10;
  __chkstk_darwin(v10);
  v12 = &v30[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v13 = type metadata accessor for Logger(0);
  sub_100056D88(v13, (uint64_t)qword_1005F5748);
  swift_errorRetain(a2);
  v14 = swift_errorRetain(a2);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  v17 = os_log_type_enabled(v15, v16);
  v35 = v7;
  if (v17)
  {
    v32 = v6;
    v18 = swift_slowAlloc(18, -1);
    v19 = swift_slowAlloc(32, -1);
    v20 = v5;
    v5 = v19;
    aBlock[0] = v19;
    *(_DWORD *)v18 = 67109378;
    v31 = v20;
    LODWORD(v38) = v20 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, (char *)&v38 + 4);
    *(_WORD *)(v18 + 8) = 2080;
    if (a2)
    {
      swift_getErrorValue(a2, v37, v36);
      v21 = Error.localizedDescription.getter(v36[1], v36[2]);
      v23 = v22;
    }
    else
    {
      v23 = 0xE300000000000000;
      v21 = 7104878;
    }
    v38 = (_QWORD *)sub_100056DA0(v21, v23, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, aBlock);
    swift_bridgeObjectRelease(v23);
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "FMUTDetailDataSource: isRangingServiceAvailable: %{BOOL}d, error: %s", (uint8_t *)v18, 0x12u);
    swift_arrayDestroy(v5, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v5, -1, -1);
    swift_slowDealloc(v18, -1, -1);

    v6 = v32;
    LOBYTE(v5) = v31;
  }
  else
  {
    swift_errorRelease(a2);
    swift_errorRelease(a2);

  }
  *(_BYTE *)(v3 + OBJC_IVAR____TtC6FindMy20FMUTDetailDataSource_isRangingServiceAvailable) = v5 & 1;
  sub_100235A14();
  aBlock[4] = (uint64_t)sub_100238588;
  v40 = v3;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100037DF8;
  aBlock[3] = (uint64_t)&unk_100552640;
  v24 = _Block_copy(aBlock);
  v25 = swift_retain(v3);
  static DispatchQoS.unspecified.getter(v25);
  v38 = _swiftEmptyArrayStorage;
  v26 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v27 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v28 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v38, v27, v28, v6, v26);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v9, v24);
  _Block_release(v24);
  (*(void (**)(_BYTE *, uint64_t))(v35 + 8))(v9, v6);
  (*(void (**)(_BYTE *, uint64_t))(v33 + 8))(v12, v34);
  *(_QWORD *)&result = swift_release(v40).n128_u64[0];
  return result;
}

uint64_t sub_1002384C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C(&qword_1005DC6A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100238508(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C(&qword_1005DC6A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1002385E0()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  Swift::String v4;
  Swift::String_optional v5;
  Swift::String v6;
  void *object;
  NSString v8;
  id v9;
  Swift::String v10;
  Swift::String_optional v11;
  Swift::String v12;
  void *v13;
  NSString v14;
  uint64_t v15;
  id v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t *v20;
  uint64_t v21;
  Swift::String v22;
  Swift::String v23;

  v1 = v0;
  v2 = (void *)objc_opt_self(NSBundle);
  v3 = objc_msgSend(v2, "mainBundle");
  v4._countAndFlagsBits = 0xD000000000000022;
  v22._object = (void *)0x80000001004A5660;
  v4._object = (void *)0x80000001004B74A0;
  v5.value._countAndFlagsBits = 0xD000000000000013;
  v5.value._object = (void *)0x80000001004A5640;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v22._countAndFlagsBits = 0xD000000000000018;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v3, v6, v22)._object;

  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setTitle:", v8, swift_bridgeObjectRelease(object).n128_f64[0]);

  v9 = objc_msgSend(v2, "mainBundle");
  v10._countAndFlagsBits = 0xD000000000000025;
  v23._object = (void *)0x80000001004A5660;
  v10._object = (void *)0x80000001004B74D0;
  v11.value._countAndFlagsBits = 0xD000000000000013;
  v11.value._object = (void *)0x80000001004A5640;
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  v23._countAndFlagsBits = 0xD000000000000018;
  v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, v11, (NSBundle)v9, v12, v23)._object;

  v14 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setSubtitle:", v14, swift_bridgeObjectRelease(v13).n128_f64[0]);

  objc_msgSend(v0, "setDismissalType:", 3);
  v15 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy29FMAccessoryDiscoveryVideoCard_videoPlayer];
  v16 = objc_msgSend(v1, "traitCollection");
  v17 = objc_msgSend(v16, "userInterfaceStyle");

  v18 = 0xD000000000000017;
  if (v17 == (id)1)
    v18 = 0xD000000000000018;
  v19 = 0x80000001004B7520;
  v20 = (unint64_t *)(v15 + OBJC_IVAR____TtC6FindMy14FMAVPlayerView_assetName);
  v21 = *(_QWORD *)(v15 + OBJC_IVAR____TtC6FindMy14FMAVPlayerView_assetName + 8);
  if (v17 != (id)1)
    v19 = 0x80000001004B7500;
  *v20 = v18;
  v20[1] = v19;
  swift_bridgeObjectRelease(v21);
  sub_100284F78();
}

void sub_10023881C(uint64_t a1)
{
  char *v1;
  void *v2;
  uint64_t v4;
  id v5;
  id v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  uint64_t v10;
  objc_super v11;

  v2 = v1;
  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for FMAccessoryDiscoverySearchingCard();
  objc_msgSendSuper2(&v11, "traitCollectionDidChange:", a1);
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy29FMAccessoryDiscoveryVideoCard_videoPlayer];
  v5 = objc_msgSend(v2, "traitCollection");
  v6 = objc_msgSend(v5, "userInterfaceStyle");

  v7 = 0xD000000000000017;
  v8 = 0x80000001004B7520;
  if (v6 != (id)1)
    v8 = 0x80000001004B7500;
  v9 = (unint64_t *)(v4 + OBJC_IVAR____TtC6FindMy14FMAVPlayerView_assetName);
  v10 = *(_QWORD *)(v4 + OBJC_IVAR____TtC6FindMy14FMAVPlayerView_assetName + 8);
  if (v6 == (id)1)
    v7 = 0xD000000000000018;
  *v9 = v7;
  v9[1] = v8;
  swift_bridgeObjectRelease(v10);
  sub_100284F78();
}

uint64_t sub_100238984()
{
  uint64_t v0;

  return swift_unknownObjectWeakDestroy(v0 + OBJC_IVAR____TtC6FindMy33FMAccessoryDiscoverySearchingCard_coordinator);
}

id sub_100238994()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMAccessoryDiscoverySearchingCard();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMAccessoryDiscoverySearchingCard()
{
  return objc_opt_self(_TtC6FindMy33FMAccessoryDiscoverySearchingCard);
}

_QWORD *sub_1002389F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *result;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;

  v3 = sub_100053F2C(&qword_1005D2C00);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  __chkstk_darwin(v5);
  v8 = *(_QWORD *)(a1 + 16);
  result = _swiftEmptyArrayStorage;
  if (v8)
  {
    v27 = v1;
    v35 = _swiftEmptyArrayStorage;
    v31 = v7;
    v32 = (char *)&v27 - v6;
    specialized ContiguousArray.reserveCapacity(_:)(v8);
    v10 = *(unsigned __int8 *)(v4 + 80);
    v30 = v3;
    v11 = a1 + ((v10 + 32) & ~v10);
    v34 = *(_QWORD *)(v4 + 72);
    v33 = type metadata accessor for UUID(0);
    v29 = *(_QWORD *)(v33 - 8);
    v28 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 16);
    v13 = v31;
    v12 = v32;
    v14 = v33;
    do
    {
      v15 = v30;
      v16 = *(int *)(v30 + 48);
      v17 = (uint64_t)&v12[v16];
      v18 = v11 + v16;
      v19 = *(int *)(v30 + 64);
      v28(v12, v11, v14);
      sub_10004FC74(v18, v17, type metadata accessor for FMBeaconSharingModuleShareState);
      v20 = *(void **)(v11 + v19);
      v21 = v13 + *(int *)(v15 + 48);
      v22 = *(int *)(v15 + 64);
      (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v13, v12, v14);
      sub_100051774(v17, v21, type metadata accessor for FMBeaconSharingModuleShareState);
      *(_QWORD *)(v13 + v22) = v20;
      v23 = v20;
      v24 = sub_1000051EC(v13, &qword_1005D2C00);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v24);
      v25 = v35[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v25);
      v26 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v23);
      specialized ContiguousArray._endMutation()(v26);
      v11 += v34;
      --v8;
    }
    while (v8);
    return v35;
  }
  return result;
}

void sub_100238BD8(uint64_t a1)
{
  char *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  _QWORD *v9;
  uint64_t v10;
  double v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD *v16;
  void *v17;
  _QWORD *v18;
  id v19;
  id v20;
  _QWORD *v21;
  void *v22;
  _QWORD *v23;
  id v24;
  void **aBlock;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t (*v29)();
  _QWORD *v30;
  char v31[24];
  char v32[48];

  v2 = v1;
  v4 = sub_100053F2C(&qword_1005DCE70);
  v5 = swift_allocBox();
  v6 = sub_100053F2C(&qword_1005DCE78);
  v7 = sub_10003F774(&qword_1005DCE80, &qword_1005DCE78, (uint64_t)&unk_1004910F8);
  NSDiffableDataSourceSnapshot.init()(v6, &type metadata for String, v7, &protocol witness table for String);
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_10053F538);
  sub_100253894();
  KeyPath = swift_getKeyPath(&unk_100489688);
  swift_retain(KeyPath);
  v9 = sub_1002520B0(a1, KeyPath);
  swift_release_n(KeyPath, 2);
  v32[0] = 0;
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v9, v32, v4);
  swift_bridgeObjectRelease(v9);
  if (*(_QWORD *)(a1 + 16))
  {
    v10 = *(_QWORD *)&v1[qword_1005E4920] + 16;
    swift_bridgeObjectRetain(a1);
    swift_beginAccess(v10, v31, 0, 0);
    __asm { BR              X8 }
  }
  sub_10024BF60(a1);
  if (v1[qword_1005E4940])
    v11 = 0.3;
  else
    v11 = 0.0;
  v12 = *(void **)&v1[qword_1005E4930];
  v13 = swift_allocObject(&unk_100552F28, 32, 7);
  *(_QWORD *)(v13 + 16) = v2;
  *(_QWORD *)(v13 + 24) = v5;
  v14 = swift_allocObject(&unk_100552F50, 24, 7);
  *(_QWORD *)(v14 + 16) = v2;
  v15 = (void *)objc_opt_self(UIView);
  v16 = (_QWORD *)swift_allocObject(&unk_100552F78, 40, 7);
  v16[2] = v12;
  v16[3] = sub_100253908;
  v16[4] = v13;
  v29 = sub_100253A44;
  v30 = v16;
  aBlock = _NSConcreteStackBlock;
  v26 = 1107296256;
  v27 = sub_100037DF8;
  v28 = &unk_100552F90;
  v17 = _Block_copy(&aBlock);
  v18 = v30;
  v19 = v2;
  swift_retain(v5);
  v20 = v12;
  swift_retain(v13);
  swift_release(v18);
  v21 = (_QWORD *)swift_allocObject(&unk_100552FC8, 40, 7);
  v21[2] = sub_1002534F8;
  v21[3] = v14;
  v21[4] = v20;
  v29 = sub_1002539E0;
  v30 = v21;
  aBlock = _NSConcreteStackBlock;
  v26 = 1107296256;
  v27 = sub_10005D218;
  v28 = &unk_100552FE0;
  v22 = _Block_copy(&aBlock);
  v23 = v30;
  v24 = v20;
  swift_retain(v14);
  swift_release(v23);
  objc_msgSend(v15, "animateWithDuration:delay:options:animations:completion:", 4, v17, v22, v11, 0.0);
  _Block_release(v22);
  _Block_release(v17);
  swift_release(v5);
  swift_release(v13);
  swift_release(v14);
}

void sub_1002392B8(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  Swift::OpaquePointer v56;
  uint64_t v57;
  int v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  double v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  _QWORD *v93;
  void *v94;
  void *v95;
  const void *v96;
  _QWORD *v97;
  id v98;
  id v99;
  _QWORD *v100;
  void *v101;
  _QWORD *v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  _BYTE *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  __int128 v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t *v119;
  uint64_t (*v120)(uint64_t, uint64_t, uint64_t);
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  void **aBlock;
  uint64_t v128;
  void *v129;
  void *v130;
  void *v131;
  _QWORD *v132;
  char v133[8];
  char v134[8];
  _BYTE v135[56];

  v2 = v1;
  v117 = type metadata accessor for UUID(0);
  v116 = *(_QWORD *)(v117 - 8);
  __chkstk_darwin(v117);
  v115 = (char *)&v104 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100053F2C(&qword_1005DCDF8);
  __chkstk_darwin(v5);
  v7 = (char *)&v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FMBeaconSharingModuleEntry(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v109 = (uint64_t)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v108 = (uint64_t)&v104 - v13;
  v14 = __chkstk_darwin(v12);
  v118 = (char *)&v104 - v15;
  v16 = __chkstk_darwin(v14);
  v121 = (char *)&v104 - v17;
  __chkstk_darwin(v16);
  v122 = (char *)&v104 - v18;
  v19 = sub_100053F2C(&qword_1005DCE00);
  v107 = swift_allocBox(v19);
  v21 = v20;
  v22 = sub_100053F2C(&qword_1005DCE08);
  v23 = sub_10003F774(&qword_1005DCE10, &qword_1005DCE08, (uint64_t)&unk_1004910F8);
  NSDiffableDataSourceSnapshot.init()(v22, &type metadata for String, v23, &protocol witness table for String);
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_10053F560);
  v124 = v8;
  v125 = sub_100008000(&qword_1005DCE18, type metadata accessor for FMBeaconSharingModuleEntry, (uint64_t)&unk_100489634);
  v126 = &protocol witness table for String;
  KeyPath = swift_getKeyPath(&unk_100489688);
  swift_retain(KeyPath);
  v25 = sub_10025219C(a1, KeyPath);
  swift_release_n(KeyPath, 2);
  v135[0] = 0;
  v112 = v19;
  v111 = v21;
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v25, v135, v19);
  swift_bridgeObjectRelease(v25);
  v26 = a1;
  v27 = *(_QWORD *)(a1 + 16);
  if (v27)
  {
    v106 = v2;
    v28 = *(_QWORD *)&v2[qword_1005E4920] + 16;
    v29 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v105 = a1;
    swift_bridgeObjectRetain(a1);
    v119 = (uint64_t *)v28;
    swift_beginAccess(v28, v133, 0, 0);
    v123 = *(_QWORD *)(v9 + 72);
    v110 = xmmword_100481740;
    v114 = v8;
    v113 = v9;
    v30 = (uint64_t)v118;
    v31 = (uint64_t)v122;
    do
    {
      sub_10004FC74(v29, v31, type metadata accessor for FMBeaconSharingModuleEntry);
      sub_10004FC74(v31, v30, type metadata accessor for FMBeaconSharingModuleEntry);
      v32 = sub_100053F2C(&qword_1005DCB20);
      v120 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48);
      v33 = v120(v30, 2, v32);
      if (v33)
      {
        if (v33 == 1)
        {
          v34 = 0xE200000000000000;
          v35 = 25933;
        }
        else
        {
          v35 = 0x6F73726550646441;
          v34 = 0xE90000000000006ELL;
        }
      }
      else
      {
        v36 = v30 + *(int *)(v32 + 48);
        v37 = v30 + *(int *)(v32 + 64);
        v38 = v7;
        v39 = v116;
        v40 = v115;
        v41 = v117;
        v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v116 + 32))(v115, v37, v117);
        v35 = UUID.uuidString.getter(v42);
        v34 = v43;
        v44 = *(void (**)(char *, uint64_t))(v39 + 8);
        v7 = v38;
        v30 = (uint64_t)v118;
        v45 = v41;
        v8 = v114;
        v44(v40, v45);
        v46 = v36;
        v9 = v113;
        sub_10004FCB8(v46, type metadata accessor for FMBeaconSharingModuleShareState);
        sub_10004FCB8(v30, type metadata accessor for FMBeaconSharingModuleRelationshipType);
      }
      v47 = *v119;
      if (*(_QWORD *)(*v119 + 16))
      {
        swift_bridgeObjectRetain(*v119);
        v48 = sub_10004C348(v35, v34);
        if ((v49 & 1) != 0)
        {
          sub_10004FC74(*(_QWORD *)(v47 + 56) + v48 * v123, (uint64_t)v7, type metadata accessor for FMBeaconSharingModuleEntry);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
        }
        swift_bridgeObjectRelease(v34);
        v50 = v47;
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
        v50 = v34;
      }
      v51 = swift_bridgeObjectRelease(v50);
      v52 = (uint64_t)v121;
      v31 = (uint64_t)v122;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v9 + 48))(v7, 1, v8, v51) == 1)
      {
        sub_10004FCB8(v31, type metadata accessor for FMBeaconSharingModuleEntry);
        sub_1000051EC((uint64_t)v7, &qword_1005DCDF8);
      }
      else
      {
        sub_100051774((uint64_t)v7, v52, type metadata accessor for FMBeaconSharingModuleEntry);
        if ((sub_1002514B8(v52, v31) & 1) != 0)
        {
          v53 = v52;
        }
        else
        {
          sub_10023B674((uint64_t)v134);
          sub_10025351C((uint64_t)v134);
          sub_1000C90F4((uint64_t)v134, (uint64_t)v135);
          v54 = v135[48];
          v55 = sub_100053F2C((uint64_t *)&unk_1005D2A90);
          v56._rawValue = (void *)swift_allocObject(v55, 48, 7);
          *((_OWORD *)v56._rawValue + 1) = v110;
          if (v54 == 2)
          {
            v57 = v108;
            sub_10004FC74(v31, v108, type metadata accessor for FMBeaconSharingModuleEntry);
            v58 = v120(v57, 2, v32);
            if (v58)
            {
              if (v58 == 1)
              {
                v59 = 0xE200000000000000;
                v60 = 25933;
              }
              else
              {
                v60 = 0x6F73726550646441;
                v59 = 0xE90000000000006ELL;
              }
            }
            else
            {
              v65 = v108 + *(int *)(v32 + 48);
              v66 = v108 + *(int *)(v32 + 64);
              v67 = v116;
              v68 = v115;
              v69 = v117;
              v70 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v116 + 32))(v115, v66, v117);
              v60 = UUID.uuidString.getter(v70);
              v59 = v71;
              v72 = v68;
              v8 = v114;
              v73 = v69;
              v30 = (uint64_t)v118;
              (*(void (**)(char *, uint64_t))(v67 + 8))(v72, v73);
              v74 = v65;
              v9 = v113;
              sub_10004FCB8(v74, type metadata accessor for FMBeaconSharingModuleShareState);
              sub_10004FCB8(v108, type metadata accessor for FMBeaconSharingModuleRelationshipType);
            }
            *((_QWORD *)v56._rawValue + 4) = v60;
            *((_QWORD *)v56._rawValue + 5) = v59;
            NSDiffableDataSourceSnapshot.reloadItems(_:)(v56);
          }
          else
          {
            v61 = v109;
            sub_10004FC74(v31, v109, type metadata accessor for FMBeaconSharingModuleEntry);
            v62 = v120(v61, 2, v32);
            if (v62)
            {
              if (v62 == 1)
              {
                v63 = 0xE200000000000000;
                v64 = 25933;
              }
              else
              {
                v64 = 0x6F73726550646441;
                v63 = 0xE90000000000006ELL;
              }
            }
            else
            {
              v75 = v109 + *(int *)(v32 + 48);
              v76 = v109 + *(int *)(v32 + 64);
              v77 = v116;
              v78 = v115;
              v79 = v117;
              v80 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v116 + 32))(v115, v76, v117);
              v64 = UUID.uuidString.getter(v80);
              v63 = v81;
              v82 = v78;
              v8 = v114;
              v83 = v79;
              v30 = (uint64_t)v118;
              (*(void (**)(char *, uint64_t))(v77 + 8))(v82, v83);
              v84 = v75;
              v9 = v113;
              sub_10004FCB8(v84, type metadata accessor for FMBeaconSharingModuleShareState);
              sub_10004FCB8(v109, type metadata accessor for FMBeaconSharingModuleRelationshipType);
            }
            *((_QWORD *)v56._rawValue + 4) = v64;
            *((_QWORD *)v56._rawValue + 5) = v63;
            NSDiffableDataSourceSnapshot.reconfigureItems(_:)(v56);
          }
          v85 = v121;
          v31 = (uint64_t)v122;
          swift_bridgeObjectRelease(v56._rawValue);
          v53 = (uint64_t)v85;
        }
        sub_10004FCB8(v53, type metadata accessor for FMBeaconSharingModuleEntry);
        sub_10004FCB8(v31, type metadata accessor for FMBeaconSharingModuleEntry);
      }
      v29 += v123;
      --v27;
    }
    while (v27);
    v86 = v105;
    swift_bridgeObjectRelease(v105);
    v26 = v86;
    v2 = v106;
  }
  sub_10024C1DC(v26);
  if (v2[qword_1005E4940])
    v87 = 0.3;
  else
    v87 = 0.0;
  v88 = *(void **)&v2[qword_1005E4930];
  v89 = swift_allocObject(&unk_100552D48, 32, 7);
  v90 = v107;
  *(_QWORD *)(v89 + 16) = v2;
  *(_QWORD *)(v89 + 24) = v90;
  v91 = swift_allocObject(&unk_100552D70, 24, 7);
  *(_QWORD *)(v91 + 16) = v2;
  v92 = (void *)objc_opt_self(UIView);
  v93 = (_QWORD *)swift_allocObject(&unk_100552D98, 40, 7);
  v93[2] = v88;
  v93[3] = sub_1002534D8;
  v93[4] = v89;
  v131 = sub_100253500;
  v132 = v93;
  aBlock = _NSConcreteStackBlock;
  v128 = 1107296256;
  v129 = sub_100037DF8;
  v130 = &unk_100552DB0;
  v94 = _Block_copy(&aBlock);
  v95 = v2;
  v96 = v94;
  v97 = v132;
  v98 = v95;
  swift_retain(v90);
  v99 = v88;
  swift_retain(v89);
  swift_release(v97);
  v100 = (_QWORD *)swift_allocObject(&unk_100552DE8, 40, 7);
  v100[2] = sub_1002534F8;
  v100[3] = v91;
  v100[4] = v99;
  v131 = sub_100253510;
  v132 = v100;
  aBlock = _NSConcreteStackBlock;
  v128 = 1107296256;
  v129 = sub_10005D218;
  v130 = &unk_100552E00;
  v101 = _Block_copy(&aBlock);
  v102 = v132;
  v103 = v99;
  swift_retain(v91);
  swift_release(v102);
  objc_msgSend(v92, "animateWithDuration:delay:options:animations:completion:", 4, v96, v101, v87, 0.0);
  _Block_release(v101);
  _Block_release(v96);
  swift_release(v90);
  swift_release(v89);
  swift_release(v91);
}

uint64_t sub_100239D84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  int v6;
  int v7;
  uint64_t countAndFlagsBits;
  id v9;
  unint64_t v10;
  unint64_t v11;
  const char *v12;
  unint64_t v14;
  Swift::String_optional v15;
  Swift::String v16;
  int v18;
  id v19;
  unint64_t v20;
  Swift::String v21;
  Swift::String_optional v22;
  Swift::String v23;
  Swift::String v24;
  Swift::String_optional v25;
  Swift::String v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;

  v1 = v0;
  v2 = type metadata accessor for FMIPBeaconShareState(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  v6 = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for FMIPBeaconShareState.accepting(_:)
    || (v7 = v6, v6 == enum case for FMIPBeaconShareState.declining(_:)))
  {
    (*(void (**)(_QWORD *, uint64_t))(v3 + 96))(v5, v2);
    swift_release(*v5);
    return 0;
  }
  if (v6 == enum case for FMIPBeaconShareState.unknown(_:))
  {
    v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v10 = 0xD000000000000018;
    v11 = 0xD000000000000025;
    v27 = 0x80000001004A8F80;
    v12 = "SHARE_ITEM_MODULE_SHARE_STATE_UNKNOWN";
LABEL_19:
    v14 = (unint64_t)(v12 - 32) | 0x8000000000000000;
    v15.value._object = (void *)0x80000001004A8F60;
    v15.value._countAndFlagsBits = 0xD000000000000013;
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v11, v15, (NSBundle)v9, v16, *(Swift::String *)&v10)._countAndFlagsBits;

    return countAndFlagsBits;
  }
  if (v6 == enum case for FMIPBeaconShareState.invitationSent(_:))
  {
    v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v10 = 0xD000000000000018;
    v11 = 0xD000000000000025;
    v27 = 0x80000001004A8F80;
    v12 = "SHARE_ITEM_MODULE_SHARE_STATE_PENDING";
    goto LABEL_19;
  }
  if (v6 == enum case for FMIPBeaconShareState.invitationReceived(_:)
    || v6 == enum case for FMIPBeaconShareState.requestSent(_:))
  {
    return 0;
  }
  if (v6 == enum case for FMIPBeaconShareState.requestReceived(_:))
  {
    v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v10 = 0xD000000000000018;
    v11 = 0xD00000000000002ELL;
    v27 = 0x80000001004A8F80;
    v12 = "SHARE_ITEM_MODULE_SHARE_STATE_REQUEST_RECEIVED";
    goto LABEL_19;
  }
  if (v6 == enum case for FMIPBeaconShareState.accepted(_:))
  {
    v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v10 = 0xD000000000000018;
    v11 = 0xD000000000000026;
    v27 = 0x80000001004A8F80;
    v12 = "SHARE_ITEM_MODULE_SHARE_STATE_ACCEPTED";
    goto LABEL_19;
  }
  if (v6 == enum case for FMIPBeaconShareState.expired(_:))
  {
    v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v10 = 0xD000000000000018;
    v11 = 0xD000000000000025;
    v27 = 0x80000001004A8F80;
    v12 = "SHARE_ITEM_MODULE_SHARE_STATE_EXPIRED";
    goto LABEL_19;
  }
  if (v6 == enum case for FMIPBeaconShareState.withdrawing(_:))
    return 0;
  v18 = enum case for FMIPBeaconShareState.failed(_:);
  v19 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v20 = 0xD000000000000018;
  if (v7 == v18)
  {
    v21._countAndFlagsBits = 0xD000000000000024;
    v28 = 0x80000001004A8F80;
    v21._object = (void *)0x80000001004B7730;
    v22.value._object = (void *)0x80000001004A8F60;
    v22.value._countAndFlagsBits = 0xD000000000000013;
    v23._countAndFlagsBits = 0;
    v23._object = (void *)0xE000000000000000;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, v22, (NSBundle)v19, v23, *(Swift::String *)&v20)._countAndFlagsBits;

  }
  else
  {
    v24._countAndFlagsBits = 0xD000000000000025;
    v29 = 0x80000001004A8F80;
    v24._object = (void *)0x80000001004B7700;
    v25.value._object = (void *)0x80000001004A8F60;
    v25.value._countAndFlagsBits = 0xD000000000000013;
    v26._countAndFlagsBits = 0;
    v26._object = (void *)0xE000000000000000;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v24, v25, (NSBundle)v19, v26, *(Swift::String *)&v20)._countAndFlagsBits;

    (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  }
  return countAndFlagsBits;
}

uint64_t sub_10023A208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  int v6;
  id v7;
  int v8;
  id v9;
  id v10;
  unint64_t v11;
  unint64_t v12;
  const char *v13;
  unint64_t v14;
  Swift::String_optional v15;
  Swift::String v16;
  uint64_t countAndFlagsBits;
  int v19;
  id v20;
  Swift::String v21;
  Swift::String_optional v22;
  Swift::String v23;
  unint64_t v24;
  uint64_t v25;
  Swift::String v26;

  v1 = v0;
  v2 = type metadata accessor for FMIPBeaconShareState(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  v6 = (*(uint64_t (**)(_QWORD *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for FMIPBeaconShareState.accepting(_:))
  {
    (*(void (**)(_QWORD *, uint64_t))(v3 + 96))(v5, v2);
    swift_release(*v5);
    v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
LABEL_8:
    v10 = v7;
    v11 = 0xD000000000000018;
    v12 = 0xD000000000000025;
    v24 = 0x80000001004A8F80;
    v13 = "SHARE_ITEM_MODULE_SHARE_ACTION_REMOVE";
    goto LABEL_9;
  }
  v8 = v6;
  if (v6 == enum case for FMIPBeaconShareState.declining(_:))
  {
    (*(void (**)(_QWORD *, uint64_t))(v3 + 96))(v5, v2);
    swift_release(*v5);
    v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
LABEL_5:
    v10 = v9;
    v11 = 0xD000000000000018;
    v12 = 0xD000000000000026;
    v24 = 0x80000001004A8F80;
    v13 = "SHARE_ITEM_MODULE_SHARE_ACTION_DECLINE";
LABEL_9:
    v14 = (unint64_t)(v13 - 32) | 0x8000000000000000;
    v15.value._object = (void *)0x80000001004A8F60;
    v15.value._countAndFlagsBits = 0xD000000000000013;
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v12, v15, (NSBundle)v10, v16, *(Swift::String *)&v11)._countAndFlagsBits;

    return countAndFlagsBits;
  }
  if (v6 == enum case for FMIPBeaconShareState.unknown(_:))
  {
LABEL_7:
    v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    goto LABEL_8;
  }
  if (v6 == enum case for FMIPBeaconShareState.invitationSent(_:))
    goto LABEL_15;
  if (v6 == enum case for FMIPBeaconShareState.invitationReceived(_:))
  {
LABEL_13:
    v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    goto LABEL_5;
  }
  if (v6 == enum case for FMIPBeaconShareState.requestSent(_:))
  {
LABEL_15:
    v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v11 = 0xD000000000000018;
    v12 = 0xD000000000000027;
    v24 = 0x80000001004A8F80;
    v13 = "SHARE_ITEM_MODULE_SHARE_ACTION_WITHDRAW";
    goto LABEL_9;
  }
  if (v6 == enum case for FMIPBeaconShareState.requestReceived(_:))
    goto LABEL_13;
  if (v6 == enum case for FMIPBeaconShareState.accepted(_:)
    || v6 == enum case for FMIPBeaconShareState.expired(_:)
    || v6 == enum case for FMIPBeaconShareState.withdrawing(_:))
  {
    goto LABEL_7;
  }
  v19 = enum case for FMIPBeaconShareState.failed(_:);
  v20 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v26._countAndFlagsBits = 0xD000000000000018;
  v21._countAndFlagsBits = 0xD000000000000025;
  v26._object = (void *)0x80000001004A8F80;
  v21._object = (void *)0x80000001004B79B0;
  v22.value._object = (void *)0x80000001004A8F60;
  v22.value._countAndFlagsBits = 0xD000000000000013;
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, v22, (NSBundle)v20, v23, v26)._countAndFlagsBits;

  if (v8 != v19)
    (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
  return countAndFlagsBits;
}

uint64_t sub_10023A658()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v13;
  id v14;
  Swift::String v15;
  Swift::String_optional v16;
  Swift::String v17;
  uint64_t countAndFlagsBits;
  int v19;
  uint64_t v22;
  Swift::String v23;

  v1 = v0;
  v2 = type metadata accessor for FMIPBeaconShareState(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v22 - v7;
  v9 = type metadata accessor for FMBeaconSharingModuleShareState(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004FC74(v1, (uint64_t)v11, v12);
  v13 = sub_100053F2C(&qword_1005DCB28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v11, 1, v13) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v11, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    v19 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v6, v2);
    if (v19 != enum case for FMIPBeaconShareState.accepting(_:)
      && v19 != enum case for FMIPBeaconShareState.declining(_:))
    {
      if (v19 == enum case for FMIPBeaconShareState.unknown(_:))
        goto LABEL_6;
      if (v19 == enum case for FMIPBeaconShareState.invitationSent(_:))
        goto LABEL_20;
      if (v19 == enum case for FMIPBeaconShareState.invitationReceived(_:)
        || v19 == enum case for FMIPBeaconShareState.requestSent(_:))
      {
        goto LABEL_6;
      }
      if (v19 == enum case for FMIPBeaconShareState.requestReceived(_:))
        goto LABEL_20;
      if (v19 == enum case for FMIPBeaconShareState.accepted(_:))
        goto LABEL_6;
      if (v19 == enum case for FMIPBeaconShareState.expired(_:))
        goto LABEL_20;
      if (v19 == enum case for FMIPBeaconShareState.withdrawing(_:))
        goto LABEL_6;
      if (v19 == enum case for FMIPBeaconShareState.failed(_:))
      {
LABEL_20:
        countAndFlagsBits = sub_100239D84();
        goto LABEL_7;
      }
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
LABEL_6:
    countAndFlagsBits = 0;
LABEL_7:
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    return countAndFlagsBits;
  }
  v14 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v23._countAndFlagsBits = 0xD000000000000018;
  v15._countAndFlagsBits = 0xD000000000000028;
  v23._object = (void *)0x80000001004A8F80;
  v15._object = (void *)0x80000001004B76D0;
  v16.value._object = (void *)0x80000001004A8F60;
  v16.value._countAndFlagsBits = 0xD000000000000013;
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, v16, (NSBundle)v14, v17, v23)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_10023A934()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  id v11;
  Swift::String v12;
  Swift::String_optional v13;
  Swift::String v14;
  uint64_t countAndFlagsBits;
  uint64_t v17;
  Swift::String v18;

  v1 = v0;
  v2 = type metadata accessor for FMIPBeaconShareState(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FMBeaconSharingModuleShareState(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004FC74(v1, (uint64_t)v8, v9);
  v10 = sub_100053F2C(&qword_1005DCB28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v8, 1, v10) == 1)
  {
    v11 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v18._countAndFlagsBits = 0xD000000000000018;
    v12._countAndFlagsBits = 0xD000000000000025;
    v18._object = (void *)0x80000001004A8F80;
    v12._object = (void *)0x80000001004B79B0;
    v13.value._object = (void *)0x80000001004A8F60;
    v13.value._countAndFlagsBits = 0xD000000000000013;
    v14._countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v18)._countAndFlagsBits;

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    countAndFlagsBits = sub_10023A208();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return countAndFlagsBits;
}

Swift::Int sub_10023AADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v13[9];

  v1 = v0;
  v2 = type metadata accessor for FMIPBeaconShareState(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v13[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FMBeaconSharingModuleShareState(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v13[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)(v13, 0);
  sub_10004FC74(v1, (uint64_t)v8, type metadata accessor for FMBeaconSharingModuleShareState);
  v9 = sub_100053F2C(&qword_1005DCB28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    Hasher._combine(_:)(1uLL);
    v10 = sub_100008000(&qword_1005DCD50, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPBeaconShareState, (uint64_t)&protocol conformance descriptor for FMIPBeaconShareState);
    dispatch thunk of Hashable.hash(into:)(v13, v2, v10);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return Hasher._finalize()();
}

void sub_10023AC4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = v1;
  v4 = type metadata accessor for FMIPBeaconShareState(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004FC74(v2, (uint64_t)v10, type metadata accessor for FMBeaconSharingModuleShareState);
  v11 = sub_100053F2C(&qword_1005DCB28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v10, v4);
    Hasher._combine(_:)(1uLL);
    v12 = sub_100008000(&qword_1005DCD50, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPBeaconShareState, (uint64_t)&protocol conformance descriptor for FMIPBeaconShareState);
    dispatch thunk of Hashable.hash(into:)(a1, v4, v12);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
}

Swift::Int sub_10023AD90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v15[9];

  v2 = v1;
  v4 = type metadata accessor for FMIPBeaconShareState(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v15[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v15[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)(v15, a1);
  sub_10004FC74(v2, (uint64_t)v10, type metadata accessor for FMBeaconSharingModuleShareState);
  v11 = sub_100053F2C(&qword_1005DCB28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v10, v4);
    Hasher._combine(_:)(1uLL);
    v12 = sub_100008000(&qword_1005DCD50, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPBeaconShareState, (uint64_t)&protocol conformance descriptor for FMIPBeaconShareState);
    dispatch thunk of Hashable.hash(into:)(v15, v4, v12);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return Hasher._finalize()();
}

uint64_t sub_10023AEFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void **v8;
  uint64_t (*v9)(_QWORD);
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for FMFFriend(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
  __chkstk_darwin(v6);
  v8 = (void **)((char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10004FC74(v1, (uint64_t)v8, v9);
  if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
  {
    v10 = *v8;
    if (qword_1005D1BD0 != -1)
      swift_once(&qword_1005D1BD0, sub_1000C1184);
    v11 = objc_msgSend((id)qword_1005F4DB8, "stringFromContact:", v10);
    if (v11)
    {
      v12 = v11;
      v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);

    }
    else
    {

      return 0;
    }
  }
  else
  {
    v14 = (*(uint64_t (**)(char *, void **, uint64_t))(v3 + 32))(v5, v8, v2);
    v13 = FMFFriend.name.getter(v14);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v13;
}

uint64_t sub_10023B078()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id *v3;
  uint64_t (*v4)(_QWORD);
  id v5;
  Swift::String v6;
  Swift::String_optional v7;
  Swift::String v8;
  uint64_t countAndFlagsBits;
  id v10;
  Swift::String v11;
  Swift::String_optional v12;
  Swift::String v13;
  uint64_t v15;
  Swift::String v16;
  Swift::String v17;

  v1 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
  __chkstk_darwin(v1);
  v3 = (id *)((char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10004FC74(v0, (uint64_t)v3, v4);
  if (swift_getEnumCaseMultiPayload(v3, v1) == 1)
  {

    v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v16._countAndFlagsBits = 0xD000000000000018;
    v6._countAndFlagsBits = 0xD000000000000026;
    v16._object = (void *)0x80000001004A8F80;
    v6._object = (void *)0x80000001004B7950;
    v7.value._object = (void *)0x80000001004A8F60;
    v7.value._countAndFlagsBits = 0xD000000000000013;
    v8._countAndFlagsBits = 0;
    v8._object = (void *)0xE000000000000000;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, v7, (NSBundle)v5, v8, v16)._countAndFlagsBits;

  }
  else
  {
    v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v17._countAndFlagsBits = 0xD000000000000018;
    v11._countAndFlagsBits = 0xD000000000000025;
    v17._object = (void *)0x80000001004A8F80;
    v11._object = (void *)0x80000001004B7980;
    v12.value._object = (void *)0x80000001004A8F60;
    v12.value._countAndFlagsBits = 0xD000000000000013;
    v13._countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, v12, (NSBundle)v10, v13, v17)._countAndFlagsBits;

    sub_10004FCB8((uint64_t)v3, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  }
  return countAndFlagsBits;
}

void sub_10023B240(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  uint64_t (*v11)(_QWORD);
  void *v12;
  uint64_t v13;
  uint64_t v14;

  v2 = v1;
  v4 = type metadata accessor for FMFFriend(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
  __chkstk_darwin(v8);
  v10 = (void **)((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10004FC74(v2, (uint64_t)v10, v11);
  if (swift_getEnumCaseMultiPayload(v10, v8) == 1)
  {
    v12 = *v10;
    Hasher._combine(_:)(1uLL);
    NSObject.hash(into:)(a1);

  }
  else
  {
    (*(void (**)(char *, void **, uint64_t))(v5 + 32))(v7, v10, v4);
    Hasher._combine(_:)(0);
    v13 = sub_100008000(&qword_1005D4DB8, (uint64_t (*)(uint64_t))&type metadata accessor for FMFFriend, (uint64_t)&protocol conformance descriptor for FMFFriend);
    dispatch thunk of Hashable.hash(into:)(a1, v4, v13);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

Swift::Int sub_10023B390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void **v8;
  void *v9;
  uint64_t v10;
  _QWORD v13[9];

  v1 = v0;
  v2 = type metadata accessor for FMFFriend(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v13[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
  __chkstk_darwin(v6);
  v8 = (void **)((char *)&v13[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  Hasher.init(_seed:)(v13, 0);
  sub_10004FC74(v1, (uint64_t)v8, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  if (swift_getEnumCaseMultiPayload(v8, v6) == 1)
  {
    v9 = *v8;
    Hasher._combine(_:)(1uLL);
    NSObject.hash(into:)(v13);

  }
  else
  {
    (*(void (**)(char *, void **, uint64_t))(v3 + 32))(v5, v8, v2);
    Hasher._combine(_:)(0);
    v10 = sub_100008000(&qword_1005D4DB8, (uint64_t (*)(uint64_t))&type metadata accessor for FMFFriend, (uint64_t)&protocol conformance descriptor for FMFFriend);
    dispatch thunk of Hashable.hash(into:)(v13, v2, v10);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return Hasher._finalize()();
}

Swift::Int sub_10023B50C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void **v12;
  void *v13;
  uint64_t v14;
  _QWORD v17[9];

  v4 = v2;
  v6 = type metadata accessor for FMFFriend(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v17[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (void **)((char *)&v17[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  Hasher.init(_seed:)(v17, a1);
  sub_10004FC74(v4, (uint64_t)v12, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  if (swift_getEnumCaseMultiPayload(v12, a2) == 1)
  {
    v13 = *v12;
    Hasher._combine(_:)(1uLL);
    NSObject.hash(into:)(v17);

  }
  else
  {
    (*(void (**)(char *, void **, uint64_t))(v7 + 32))(v10, v12, v6);
    Hasher._combine(_:)(0);
    v14 = sub_100008000(&qword_1005D4DB8, (uint64_t (*)(uint64_t))&type metadata accessor for FMFFriend, (uint64_t)&protocol conformance descriptor for FMFFriend);
    dispatch thunk of Hashable.hash(into:)(v17, v6, v14);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return Hasher._finalize()();
}

void sub_10023B674(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(_QWORD);
  uint64_t v14;
  int v15;
  id v16;
  Swift::String v17;
  Swift::String_optional v18;
  Swift::String v19;
  Swift::String v20;
  uint64_t countAndFlagsBits;
  void *object;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  Swift::String v32;
  Swift::String_optional v33;
  Swift::String v34;
  Swift::String v35;
  uint64_t v36;
  Swift::String v37;
  Swift::String v38;

  v2 = v1;
  v4 = type metadata accessor for FMBeaconSharingModuleShareState(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FMBeaconSharingModuleEntry(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004FC74(v2, (uint64_t)v12, v13);
  v14 = sub_100053F2C(&qword_1005DCB20);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v12, 2, v14);
  if (v15)
  {
    if (v15 == 1)
    {
      v16 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v37._countAndFlagsBits = 0xD000000000000018;
      v17._countAndFlagsBits = 0xD00000000000002ALL;
      v37._object = (void *)0x80000001004A8F80;
      v17._object = (void *)0x80000001004B76A0;
      v18.value._object = (void *)0x80000001004A8F60;
      v18.value._countAndFlagsBits = 0xD000000000000013;
      v19._countAndFlagsBits = 0;
      v19._object = (void *)0xE000000000000000;
      v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v37);
      countAndFlagsBits = v20._countAndFlagsBits;
      object = v20._object;

      v23 = 0;
      v24 = 0;
      v25 = 3;
    }
    else
    {
      v31 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v38._countAndFlagsBits = 0xD000000000000018;
      v32._countAndFlagsBits = 0xD000000000000029;
      v38._object = (void *)0x80000001004A8F80;
      v32._object = (void *)0x80000001004B7670;
      v33.value._object = (void *)0x80000001004A8F60;
      v33.value._countAndFlagsBits = 0xD000000000000013;
      v34._countAndFlagsBits = 0;
      v34._object = (void *)0xE000000000000000;
      v35 = NSLocalizedString(_:tableName:bundle:value:comment:)(v32, v33, (NSBundle)v31, v34, v38);
      countAndFlagsBits = v35._countAndFlagsBits;
      object = v35._object;

      v23 = 0;
      v24 = 0;
      v25 = 0;
    }
  }
  else
  {
    v26 = (uint64_t)&v12[*(int *)(v14 + 48)];
    v27 = &v12[*(int *)(v14 + 64)];
    sub_100051774((uint64_t)v12, (uint64_t)v9, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    sub_100051774(v26, (uint64_t)v6, type metadata accessor for FMBeaconSharingModuleShareState);
    countAndFlagsBits = sub_10023AEFC();
    object = v28;
    v23 = sub_10023A658();
    v24 = v29;
    sub_10004FCB8((uint64_t)v6, type metadata accessor for FMBeaconSharingModuleShareState);
    sub_10004FCB8((uint64_t)v9, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    v30 = type metadata accessor for UUID(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v27, v30);
    v25 = 1;
  }
  *(_QWORD *)a1 = countAndFlagsBits;
  *(_QWORD *)(a1 + 8) = object;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = v23;
  *(_QWORD *)(a1 + 40) = v24;
  *(_BYTE *)(a1 + 48) = v25;
}

void sub_10023B980(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void **v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t (*v24)(_QWORD);
  uint64_t v25;
  int v26;
  Swift::UInt v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  int EnumCaseMultiPayload;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;

  v67 = a1;
  v63 = type metadata accessor for FMIPBeaconShareState(0);
  v61 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v66 = (char *)&v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for FMFFriend(0);
  v3 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v5 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UUID(0);
  v64 = *(_QWORD *)(v6 - 8);
  v65 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FMBeaconSharingModuleShareState(0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v56 - v13;
  v15 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
  v16 = __chkstk_darwin(v15);
  v18 = (void **)((char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  v20 = (char *)&v56 - v19;
  v21 = type metadata accessor for FMBeaconSharingModuleEntry(0);
  __chkstk_darwin(v21);
  v23 = (char *)&v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004FC74(v1, (uint64_t)v23, v24);
  v25 = sub_100053F2C(&qword_1005DCB20);
  v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v23, 2, v25);
  if (v26)
  {
    if (v26 == 1)
      v27 = 0;
    else
      v27 = 2;
    Hasher._combine(_:)(v27);
  }
  else
  {
    v56 = v5;
    v57 = v3;
    v59 = v12;
    v28 = v67;
    v29 = &v23[*(int *)(v25 + 48)];
    v30 = &v23[*(int *)(v25 + 64)];
    sub_100051774((uint64_t)v23, (uint64_t)v20, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    v31 = (uint64_t)v29;
    v32 = v28;
    v60 = v14;
    sub_100051774(v31, (uint64_t)v14, type metadata accessor for FMBeaconSharingModuleShareState);
    v34 = v64;
    v33 = v65;
    v35 = *(void (**)(char *, char *, uint64_t))(v64 + 32);
    v58 = v8;
    v35(v8, v30, v65);
    Hasher._combine(_:)(1uLL);
    sub_10004FC74((uint64_t)v20, (uint64_t)v18, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v18, v15);
    v37 = v33;
    if (EnumCaseMultiPayload == 1)
    {
      v38 = *v18;
      Hasher._combine(_:)(1uLL);
      NSObject.hash(into:)(v28);

      v32 = v28;
    }
    else
    {
      v39 = v57;
      v40 = v20;
      v41 = v56;
      v42 = v62;
      (*(void (**)(char *, void **, uint64_t))(v57 + 32))(v56, v18, v62);
      Hasher._combine(_:)(0);
      v43 = sub_100008000(&qword_1005D4DB8, (uint64_t (*)(uint64_t))&type metadata accessor for FMFFriend, (uint64_t)&protocol conformance descriptor for FMFFriend);
      dispatch thunk of Hashable.hash(into:)(v32, v42, v43);
      v44 = v41;
      v20 = v40;
      (*(void (**)(char *, uint64_t))(v39 + 8))(v44, v42);
    }
    v45 = v66;
    v46 = (uint64_t)v59;
    v47 = (uint64_t)v60;
    sub_10004FC74((uint64_t)v60, (uint64_t)v59, type metadata accessor for FMBeaconSharingModuleShareState);
    v48 = sub_100053F2C(&qword_1005DCB28);
    v49 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48))(v46, 1, v48);
    v50 = v58;
    if (v49 == 1)
    {
      Hasher._combine(_:)(0);
    }
    else
    {
      v51 = v61;
      v52 = v63;
      (*(void (**)(char *, uint64_t, uint64_t))(v61 + 32))(v45, v46, v63);
      Hasher._combine(_:)(1uLL);
      v53 = sub_100008000(&qword_1005DCD50, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPBeaconShareState, (uint64_t)&protocol conformance descriptor for FMIPBeaconShareState);
      dispatch thunk of Hashable.hash(into:)(v32, v52, v53);
      v54 = v52;
      v47 = (uint64_t)v60;
      (*(void (**)(char *, uint64_t))(v51 + 8))(v45, v54);
    }
    v55 = sub_100008000((unint64_t *)&unk_1005E4270, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    dispatch thunk of Hashable.hash(into:)(v32, v37, v55);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v50, v37);
    sub_10004FCB8(v47, type metadata accessor for FMBeaconSharingModuleShareState);
    sub_10004FCB8((uint64_t)v20, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  }
}

uint64_t sub_10023BE10@<X0>(uint64_t a1@<X8>)
{
  _BYTE v3[56];

  sub_10023B674((uint64_t)v3);
  return sub_1000C90F4((uint64_t)v3, a1);
}

uint64_t sub_10023BE48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  int v5;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  __chkstk_darwin(a1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004FC74(v1, (uint64_t)v3, type metadata accessor for FMBeaconSharingModuleEntry);
  v4 = sub_100053F2C(&qword_1005DCB20);
  v5 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 2, v4);
  if (v5)
  {
    if (v5 == 1)
      return 0;
  }
  else
  {
    v7 = (uint64_t)&v3[*(int *)(v4 + 48)];
    v8 = &v3[*(int *)(v4 + 64)];
    v9 = type metadata accessor for UUID(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    sub_10004FCB8(v7, type metadata accessor for FMBeaconSharingModuleShareState);
    sub_10004FCB8((uint64_t)v3, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  }
  return 1;
}

BOOL sub_10023BF3C(uint64_t a1, uint64_t a2)
{
  return (sub_100251908(a2, a1) & 1) == 0;
}

BOOL sub_10023BF64(uint64_t a1, uint64_t a2)
{
  return (sub_100251908(a1, a2) & 1) == 0;
}

uint64_t sub_10023BF80(uint64_t a1, uint64_t a2)
{
  return sub_100251908(a2, a1);
}

uint64_t sub_10023BF90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v2 = v1;
  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004FC74(v2, (uint64_t)v10, type metadata accessor for FMBeaconSharingModuleEntry);
  v11 = sub_100053F2C(&qword_1005DCB20);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 2, v11);
  if ((_DWORD)result)
  {
    if ((_DWORD)result == 1)
    {
      v13 = 0xE200000000000000;
      v14 = 25933;
    }
    else
    {
      v13 = 0xE90000000000006ELL;
      v14 = 0x6F73726550646441;
    }
  }
  else
  {
    v15 = (uint64_t)&v10[*(int *)(v11 + 48)];
    v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v5 + 32))(v8, &v10[*(int *)(v11 + 64)], v4);
    v14 = UUID.uuidString.getter(v16);
    v13 = v17;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    sub_10004FCB8(v15, type metadata accessor for FMBeaconSharingModuleShareState);
    result = sub_10004FCB8((uint64_t)v10, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  }
  *a1 = v14;
  a1[1] = v13;
  return result;
}

Swift::Int sub_10023C108()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_10023B980((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_10023C148(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_10023B980((uint64_t)v2);
  return Hasher._finalize()();
}

uint64_t sub_10023C180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch(sub_10023C198, a4, 0);
}

uint64_t sub_10023C198()
{
  uint64_t v0;

  sub_10023C400();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10023C1C8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  _BYTE v12[24];

  v1 = v0;
  v2 = v0[14];
  v3 = v0[15];
  if (!v3)
    goto LABEL_5;
  v4 = *(_QWORD *)(v2 + 24);
  swift_beginAccess(v4 + 16, v12, 33, 0);
  swift_retain(v3);
  swift_retain(v4);
  v5 = sub_1001138E0((uint64_t *)(v4 + 16), v3);
  v6 = v5;
  v7 = *(_QWORD *)(v4 + 16);
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v11 = *(_QWORD *)(v4 + 16);
    else
      v11 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v4 + 16));
    v8 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(v7);
    if (v8 >= v6)
      goto LABEL_4;
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v8 >= v5)
    {
LABEL_4:
      sub_1002006EC(v6, v8);
      swift_endAccess(v12);
      swift_release(v4);
      swift_release(v3);
      v2 = v0[14];
LABEL_5:
      swift_release(v2);
      swift_release(v0[15]);
      sub_1000327F0(v0[16], v0[17]);
      sub_1000051EC((uint64_t)v0 + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_beaconIdentifier, (uint64_t *)&unk_1005D53A0);
      v9 = *(_QWORD *)((char *)v0 + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_viewModel);
      swift_bridgeObjectRelease(*(_QWORD *)((char *)v1
                                          + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_viewModel
                                          + 8));
      swift_bridgeObjectRelease(v9);
      v10 = swift_release(*(_QWORD *)((char *)v1
                                    + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_currentUpdateTask));
      swift_defaultActor_destroy(v1, v10);
      return;
    }
  }
  __break(1u);
}

uint64_t sub_10023C328()
{
  uint64_t v0;

  sub_10023C1C8();
  return swift_defaultActor_deallocate(v0);
}

uint64_t sub_10023C340()
{
  return type metadata accessor for FMBeaconSharingModuleDataSource(0);
}

uint64_t type metadata accessor for FMBeaconSharingModuleDataSource(uint64_t a1)
{
  return sub_10001DC04(a1, (uint64_t *)&unk_1005DC738, (uint64_t)&nominal type descriptor for FMBeaconSharingModuleDataSource);
}

void sub_10023C35C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[7];

  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[2] = &unk_100489358;
  v4[3] = &unk_100489370;
  sub_100241154(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(v2 - 8) + 64;
    v4[5] = &unk_100489388;
    v4[6] = &unk_100489358;
    swift_updateClassMetadata2(a1, 256, 7, v4, a1 + 80);
  }
}

uint64_t sub_10023C400()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  _QWORD v18[5];
  uint64_t v19;

  v1 = v0;
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 112) + 24);
  v3 = type metadata accessor for FMDevicesSubscription(0);
  v4 = swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  v5 = v4 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
  *(_QWORD *)(v5 + 8) = 0;
  swift_unknownObjectWeakInit(v5);
  swift_retain(v2);
  v6 = swift_retain(v0);
  UUID.init()(v6);
  v7 = v4 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
  *(_QWORD *)(v7 + 8) = &off_1005527C0;
  swift_unknownObjectWeakAssign(v7, v0);
  swift_release(v0);
  swift_beginAccess(v2 + 16, v18, 33, 0);
  v8 = swift_retain(v4);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
  v10 = *(_QWORD *)((*(_QWORD *)(v2 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v9 = *(_QWORD *)((*(_QWORD *)(v2 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v10 >= v9 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v9 > 1, v10 + 1, 1);
  v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v4);
  specialized Array._endMutation()(v11);
  swift_endAccess(v18);
  swift_release(v2);
  v12 = *(_QWORD *)(v0 + 120);
  *(_QWORD *)(v0 + 120) = v4;
  swift_release(v12);
  v13 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  v14 = swift_allocObject(&unk_100552ED8, 24, 7);
  swift_weakInit(v14 + 16, v1);
  v18[4] = sub_10025388C;
  v19 = v14;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_1003B9AE8;
  v18[3] = &unk_100552EF0;
  v15 = _Block_copy(v18);
  v16 = objc_msgSend(v13, "addObserverForName:object:queue:usingBlock:", CNContactStoreDidChangeNotification, 0, 0, v15, swift_release(v19).n128_f64[0]);
  _Block_release(v15);

  return swift_unknownObjectRelease(v16);
}

double sub_10023C618(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  double result;
  uint64_t v5;
  _BYTE v6[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_weakLoadStrong(v2);
  if (Strong)
  {
    v5 = Strong;
    sub_10023CF00();
    *(_QWORD *)&result = swift_release(v5).n128_u64[0];
  }
  return result;
}

uint64_t sub_10023C66C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return swift_task_switch(sub_10023C688, v2, 0);
}

uint64_t sub_10023C688()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v13;

  if (qword_1005D2060 != -1)
    swift_once(&qword_1005D2060, sub_1003CB84C);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100056D88(v1, (uint64_t)qword_1005F5FE0);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v13 = v6;
    *(_DWORD *)v5 = 136315138;
    v0[2] = sub_100056DA0(0xD000000000000012, 0x80000001004B7B60, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 2, v0 + 3);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FMBeaconSharingModuleDataSource: %s", v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);
  }

  v7 = v0[4];
  v8 = v0[5];
  v10 = *(_QWORD *)(v8 + 128);
  v9 = *(_QWORD *)(v8 + 136);
  *(_QWORD *)(v8 + 128) = v0[3];
  *(_QWORD *)(v8 + 136) = v7;
  swift_retain(v7);
  sub_1000327F0(v10, v9);
  v11 = (_QWORD *)swift_task_alloc(dword_1005DC75C);
  v0[6] = v11;
  *v11 = v0;
  v11[1] = sub_10023C844;
  return sub_10023D2A4(1);
}

uint64_t sub_10023C844()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 48));
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_10023C88C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2[10] = a1;
  v2[11] = v1;
  v3 = sub_100053F2C((uint64_t *)&unk_1005E2210);
  v2[12] = v3;
  v2[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (*(_QWORD *)(*(_QWORD *)(sub_100053F2C((uint64_t *)&unk_1005D53A0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[14] = swift_task_alloc(v4);
  v2[15] = swift_task_alloc(v4);
  v2[16] = swift_task_alloc(v4);
  v2[17] = swift_task_alloc(v4);
  v5 = type metadata accessor for UUID(0);
  v2[18] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[19] = v6;
  v7 = (*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[20] = swift_task_alloc(v7);
  v2[21] = swift_task_alloc(v7);
  return swift_task_switch(sub_10023C970, v1, 0);
}

uint64_t sub_10023C970()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __n128 v17;
  void (*v18)(uint64_t, uint64_t, __n128);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  void (*v27)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;

  if (qword_1005D2060 != -1)
    swift_once(&qword_1005D2060, sub_1003CB84C);
  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 152);
  v5 = type metadata accessor for Logger(0);
  sub_100056D88(v5, (uint64_t)qword_1005F5FE0);
  v54 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v6 = v54(v2, v1, v4);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  v9 = os_log_type_enabled(v7, v8);
  v10 = *(_QWORD *)(v0 + 168);
  v11 = *(_QWORD *)(v0 + 152);
  if (v9)
  {
    v52 = *(_QWORD *)(v0 + 144);
    v12 = swift_slowAlloc(22, -1);
    v53 = swift_slowAlloc(64, -1);
    v55 = v53;
    *(_DWORD *)v12 = 136315394;
    *(_QWORD *)(v0 + 64) = sub_100056DA0(0xD000000000000017, 0x80000001004B7B40, &v55);
    v13 = UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 64, v0 + 72);
    *(_WORD *)(v12 + 12) = 2080;
    v14 = UUID.uuidString.getter(v13);
    v16 = v15;
    *(_QWORD *)(v0 + 72) = sub_100056DA0(v14, v15, &v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80);
    v17 = swift_bridgeObjectRelease(v16);
    v18 = *(void (**)(uint64_t, uint64_t, __n128))(v11 + 8);
    v18(v10, v52, v17);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "FMBeaconSharingModuleDataSource: %s - %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy(v53, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v53, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {
    v18 = *(void (**)(uint64_t, uint64_t, __n128))(v11 + 8);
    ((void (*)(_QWORD, _QWORD))v18)(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 144));
  }

  v19 = *(_QWORD *)(v0 + 144);
  v20 = *(_QWORD *)(v0 + 152);
  v21 = *(_QWORD *)(v0 + 136);
  v23 = *(_QWORD *)(v0 + 96);
  v22 = *(_QWORD *)(v0 + 104);
  v24 = *(_QWORD *)(v0 + 80);
  v25 = *(_QWORD *)(v0 + 88) + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_beaconIdentifier;
  v26 = swift_beginAccess(v25, v0 + 16, 0, 0);
  ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v54)(v21, v24, v19, v26);
  v27 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56);
  v27(v21, 0, 1, v19);
  v28 = v22 + *(int *)(v23 + 48);
  sub_100007464(v25, v22, (uint64_t *)&unk_1005D53A0);
  sub_100007464(v21, v28, (uint64_t *)&unk_1005D53A0);
  v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  v30 = v29(v22, 1, v19);
  v31 = *(_QWORD *)(v0 + 144);
  if (v30 == 1)
  {
    sub_1000051EC(*(_QWORD *)(v0 + 136), (uint64_t *)&unk_1005D53A0);
    if (v29(v28, 1, v31) == 1)
    {
      sub_1000051EC(*(_QWORD *)(v0 + 104), (uint64_t *)&unk_1005D53A0);
LABEL_13:
      v41 = *(_QWORD *)(v0 + 160);
      v43 = *(_QWORD *)(v0 + 128);
      v42 = *(_QWORD *)(v0 + 136);
      v45 = *(_QWORD *)(v0 + 112);
      v44 = *(_QWORD *)(v0 + 120);
      v46 = *(_QWORD *)(v0 + 104);
      swift_task_dealloc(*(_QWORD *)(v0 + 168));
      swift_task_dealloc(v41);
      swift_task_dealloc(v42);
      swift_task_dealloc(v43);
      swift_task_dealloc(v44);
      swift_task_dealloc(v45);
      swift_task_dealloc(v46);
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    goto LABEL_11;
  }
  sub_100007464(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 128), (uint64_t *)&unk_1005D53A0);
  if (v29(v28, 1, v31) == 1)
  {
    v32 = *(_QWORD *)(v0 + 144);
    v33 = *(_QWORD *)(v0 + 128);
    sub_1000051EC(*(_QWORD *)(v0 + 136), (uint64_t *)&unk_1005D53A0);
    ((void (*)(uint64_t, uint64_t))v18)(v33, v32);
LABEL_11:
    sub_1000051EC(*(_QWORD *)(v0 + 104), (uint64_t *)&unk_1005E2210);
    goto LABEL_14;
  }
  v34 = *(_QWORD *)(v0 + 160);
  v36 = *(_QWORD *)(v0 + 136);
  v35 = *(_QWORD *)(v0 + 144);
  v37 = *(_QWORD *)(v0 + 128);
  v38 = *(_QWORD *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 152) + 32))(v34, v28, v35);
  v39 = sub_100008000((unint64_t *)&unk_1005E2220, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  v40 = dispatch thunk of static Equatable.== infix(_:_:)(v37, v34, v35, v39);
  ((void (*)(uint64_t, uint64_t))v18)(v34, v35);
  sub_1000051EC(v36, (uint64_t *)&unk_1005D53A0);
  ((void (*)(uint64_t, uint64_t))v18)(v37, v35);
  sub_1000051EC(v38, (uint64_t *)&unk_1005D53A0);
  if ((v40 & 1) != 0)
    goto LABEL_13;
LABEL_14:
  v48 = *(_QWORD *)(v0 + 144);
  v50 = *(_QWORD *)(v0 + 112);
  v49 = *(_QWORD *)(v0 + 120);
  v54(v49, *(_QWORD *)(v0 + 80), v48);
  v27(v49, 0, 1, v48);
  sub_10005DAA0(v49, v50, (uint64_t *)&unk_1005D53A0);
  swift_beginAccess(v25, v0 + 40, 33, 0);
  sub_100253820(v50, v25);
  swift_endAccess(v0 + 40);
  v51 = (_QWORD *)swift_task_alloc(dword_1005DC75C);
  *(_QWORD *)(v0 + 176) = v51;
  *v51 = v0;
  v51[1] = sub_10023CE68;
  return sub_10023D2A4(1);
}

uint64_t sub_10023CE68()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v10;

  v1 = *(_QWORD **)v0;
  v10 = *(_QWORD **)v0;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 176));
  v3 = v1[20];
  v2 = v1[21];
  v5 = v1[16];
  v4 = v1[17];
  v7 = v1[14];
  v6 = v1[15];
  v8 = v1[13];
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  return ((uint64_t (*)(void))v10[1])();
}

double sub_10023CF00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  double result;
  _QWORD v23[4];

  v1 = v0;
  v2 = sub_100053F2C(&qword_1005D81A0);
  __chkstk_darwin(v2);
  v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TaskPriority(0);
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  v7 = (_QWORD *)swift_allocObject(&unk_100552E60, 40, 7);
  v7[2] = 0;
  v8 = v7 + 2;
  v7[3] = 0;
  v7[4] = v1;
  v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  v10 = swift_retain(v1);
  if (v9 == 1)
  {
    sub_1000051EC((uint64_t)v4, &qword_1005D81A0);
    v11 = 0;
    v12 = 0;
    v13 = 7168;
  }
  else
  {
    v14 = TaskPriority.rawValue.getter(v10);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    v13 = v14 | 0x1C00;
    v15 = *v8;
    if (*v8)
    {
      v16 = v7[3];
      ObjectType = swift_getObjectType(*v8);
      swift_unknownObjectRetain(v15);
      v11 = dispatch thunk of Actor.unownedExecutor.getter(ObjectType, v16);
      v12 = v18;
      swift_unknownObjectRelease(v15);
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
  }
  v19 = swift_allocObject(&unk_100552E88, 32, 7);
  *(_QWORD *)(v19 + 16) = &unk_1005DCE50;
  *(_QWORD *)(v19 + 24) = v7;
  if (v12 | v11)
  {
    v23[0] = 0;
    v23[1] = 0;
    v20 = v23;
    v23[2] = v11;
    v23[3] = v12;
  }
  else
  {
    v20 = 0;
  }
  v21 = swift_task_create(v13, v20, &type metadata for () + 1, &unk_1005D7488, v19);
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

uint64_t sub_10023D0D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;

  *(_QWORD *)(v4 + 16) = a4;
  v6 = sub_100053F2C(&qword_1005D81A0);
  *(_QWORD *)(v4 + 24) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10023D134, a4, 0);
}

uint64_t sub_10023D134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_currentUpdateTask;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_currentUpdateTask);
  v4 = v1;
  if (v3)
  {
    swift_retain(*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_currentUpdateTask));
    Task.cancel()();
    swift_release(v3);
    v4 = *(_QWORD *)(v0 + 16);
  }
  v5 = *(_QWORD *)(v0 + 24);
  v6 = type metadata accessor for TaskPriority(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = sub_100008000(&qword_1005DCE60, type metadata accessor for FMBeaconSharingModuleDataSource, (uint64_t)&unk_100489660);
  v8 = (_QWORD *)swift_allocObject(&unk_100552EB0, 40, 7);
  v8[2] = v4;
  v8[3] = v7;
  v8[4] = v4;
  swift_retain_n(v4, 2);
  v9 = sub_100138D6C(v5, (uint64_t)&unk_1005DCE68, (uint64_t)v8);
  v10 = *(_QWORD *)(v1 + v2);
  *(_QWORD *)(v1 + v2) = v9;
  swift_release(v10);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10023D258()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc(dword_1005DC75C);
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1000C7978;
  return sub_10023D2A4(0);
}

uint64_t sub_10023D2A4(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  *(_QWORD *)(v2 + 88) = v1;
  *(_BYTE *)(v2 + 548) = a1;
  v3 = type metadata accessor for FMItemCapabilities(0);
  *(_QWORD *)(v2 + 96) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 104) = v4;
  v5 = (*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v2 + 112) = swift_task_alloc(v5);
  *(_QWORD *)(v2 + 120) = swift_task_alloc(v5);
  v6 = type metadata accessor for FMIPBeaconSharingLimits(0);
  *(_QWORD *)(v2 + 128) = v6;
  v7 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v2 + 136) = v7;
  *(_QWORD *)(v2 + 144) = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100053F2C(&qword_1005D2C00);
  *(_QWORD *)(v2 + 152) = v8;
  v9 = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v2 + 160) = v9;
  *(_QWORD *)(v2 + 168) = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100053F2C(&qword_1005D2BF0);
  *(_QWORD *)(v2 + 176) = v10;
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v2 + 184) = v11;
  *(_QWORD *)(v2 + 192) = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100053F2C(&qword_1005D3380);
  *(_QWORD *)(v2 + 200) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FMFFriend(0);
  *(_QWORD *)(v2 + 208) = v13;
  v14 = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v2 + 216) = v14;
  *(_QWORD *)(v2 + 224) = swift_task_alloc((*(_QWORD *)(v14 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FMBeaconSharingModuleShareState(0);
  *(_QWORD *)(v2 + 232) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FMIPBeaconShare(0);
  *(_QWORD *)(v2 + 240) = v16;
  v17 = *(_QWORD *)(v16 - 8);
  *(_QWORD *)(v2 + 248) = v17;
  *(_QWORD *)(v2 + 256) = swift_task_alloc((*(_QWORD *)(v17 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for UUID(0);
  *(_QWORD *)(v2 + 264) = v18;
  v19 = *(_QWORD *)(v18 - 8);
  *(_QWORD *)(v2 + 272) = v19;
  v20 = (*(_QWORD *)(v19 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v2 + 280) = swift_task_alloc(v20);
  *(_QWORD *)(v2 + 288) = swift_task_alloc(v20);
  *(_QWORD *)(v2 + 296) = swift_task_alloc(v20);
  *(_QWORD *)(v2 + 304) = swift_task_alloc(v20);
  *(_QWORD *)(v2 + 312) = swift_task_alloc(v20);
  v21 = (*(_QWORD *)(*(_QWORD *)(sub_100053F2C((uint64_t *)&unk_1005D53A0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v2 + 320) = swift_task_alloc(v21);
  *(_QWORD *)(v2 + 328) = swift_task_alloc(v21);
  *(_QWORD *)(v2 + 336) = swift_task_alloc(v21);
  v22 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  *(_QWORD *)(v2 + 344) = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v22 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for FMIPItem(0);
  *(_QWORD *)(v2 + 352) = v23;
  v24 = *(_QWORD *)(v23 - 8);
  *(_QWORD *)(v2 + 360) = v24;
  v25 = (*(_QWORD *)(v24 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v2 + 368) = swift_task_alloc(v25);
  *(_QWORD *)(v2 + 376) = swift_task_alloc(v25);
  return swift_task_switch(sub_10023D524, v1, 0);
}

void sub_10023D524()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  _BOOL4 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  __n128 v63;
  void (*v64)(uint64_t, uint64_t, __n128);
  uint64_t v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  void (*v70)(uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  id v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  __n128 v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t ShouldBe;
  void (*v90)(_QWORD, _QWORD);
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  BOOL v100;
  char v101;
  uint64_t v102;
  __n128 v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  id v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v120;
  uint64_t v121;
  uint64_t v122;
  BOOL v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  __n128 v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char v139;
  void (*v140)(uint64_t, uint64_t);
  _BOOL4 v142;
  int v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  int v152;
  void (*v153)(uint64_t, uint64_t);
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  uint64_t v163;
  int v164;
  unsigned int v165;
  int v166;
  int v167;
  uint64_t v168;
  char v169;
  __n128 v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  NSObject *v183;
  os_log_type_t v184;
  uint8_t *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  int *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  int v202;
  int v203;
  int v204;
  uint64_t v205;
  _QWORD *v206;
  int v207;
  int v208;
  int v209;
  char v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  _QWORD *v216;
  uint64_t v217;
  uint64_t v218;
  int v219;
  uint64_t v220;
  uint64_t v221;
  int v222;
  uint64_t v223;
  int v224;
  uint64_t v225;
  _QWORD *v226;
  uint64_t v227;
  uint64_t v228;
  int v229;
  uint64_t v230;
  unsigned int (*v231)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v232)(_QWORD, unint64_t, _QWORD, __n128);
  int v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  _BOOL4 v239;
  uint64_t v240;
  int *v241;
  uint64_t v242[2];

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v1 + 112);
  *(_QWORD *)(v0 + 384) = v2;
  v3 = *(_QWORD *)(*(_QWORD *)(v2 + 24) + 64);
  swift_retain(v1);
  swift_bridgeObjectRetain(v3);
  v5 = sub_100251C60(v4, v1);
  swift_release(v1);
  swift_bridgeObjectRelease(v3);
  v242[0] = (uint64_t)v5;
  swift_bridgeObjectRetain(v5);
  sub_10024C6D4(v242, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPBeaconShare, (uint64_t (*)(uint64_t))sub_10020CEE8, (uint64_t (*)(_QWORD *))sub_10024E3A0);
  v226 = (_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 328);
  v6 = *(_QWORD *)(v0 + 336);
  v8 = *(_QWORD *)(v0 + 264);
  v9 = *(_QWORD *)(v0 + 272);
  v10 = *(_QWORD *)(v0 + 88);
  swift_bridgeObjectRelease(v5);
  v235 = v242[0];
  *(_QWORD *)(v0 + 392) = v242[0];
  v11 = v10 + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_beaconIdentifier;
  swift_beginAccess(v11, v0 + 16, 0, 0);
  sub_100007464(v11, v6, (uint64_t *)&unk_1005D53A0);
  sub_100007464(v6, v7, (uint64_t *)&unk_1005D53A0);
  v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v12(v7, 1, v8) == 1)
  {
    v13 = *(_QWORD *)(v0 + 352);
    v14 = *(_QWORD *)(v0 + 360);
    v15 = *(_QWORD *)(v0 + 344);
    sub_1000051EC(*(_QWORD *)(v0 + 336), (uint64_t *)&unk_1005D53A0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v15, 1, 1, v13);
    v16 = v0 + 88;
    v17 = v235;
    goto LABEL_7;
  }
  v231 = v12;
  v18 = *(_QWORD *)(v0 + 328);
  v19 = *(_QWORD *)(v0 + 336);
  v20 = *(_QWORD *)(v0 + 312);
  v22 = *(_QWORD *)(v0 + 264);
  v21 = *(_QWORD *)(v0 + 272);
  v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 32);
  *(_QWORD *)(v0 + 400) = v23;
  v24 = v23(v20, v18, v22);
  v25 = UUID.uuidString.getter(v24);
  v27 = v26;
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  sub_1000051EC(v19, (uint64_t *)&unk_1005D53A0);
  v28 = *(_QWORD *)(v2 + 24);
  swift_retain(v28);
  swift_bridgeObjectRetain(v27);
  v30 = FMIPManager.items.getter(v29);
  swift_bridgeObjectRetain(v27);
  v31 = sub_100114030(v30, v25, v27);
  swift_bridgeObjectRelease(v27);
  v32 = swift_bridgeObjectRelease(v30);
  if (v31[2])
  {
    (*(void (**)(_QWORD, unint64_t, _QWORD, __n128))(*(_QWORD *)(v0 + 360) + 16))(*(_QWORD *)(v0 + 344), (unint64_t)v31+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 360) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 360) + 80)), *(_QWORD *)(v0 + 352), v32);
    v33 = 0;
  }
  else
  {
    v33 = 1;
  }
  v16 = v0 + 88;
  v17 = v235;
  v34 = *(_QWORD *)(v0 + 352);
  v35 = *(_QWORD *)(v0 + 360);
  v36 = *(_QWORD *)(v0 + 344);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56))(v36, v33, 1, v34);
  swift_release(v28);
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease_n(v27, 2);
  v12 = v231;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v36, 1, v34) == 1)
  {
LABEL_7:
    v37 = *(_QWORD *)(v0 + 344);
    v38 = *(_QWORD *)(v0 + 320);
    v39 = *(_QWORD *)(v0 + 264);
    swift_release(v17);
    sub_1000051EC(v37, (uint64_t *)&unk_1005D3AA0);
    sub_100007464(v11, v38, (uint64_t *)&unk_1005D53A0);
    if (v12(v38, 1, v39) != 1)
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 32))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 264));
      if (qword_1005D2060 != -1)
        swift_once(&qword_1005D2060, sub_1003CB84C);
      v45 = *(_QWORD *)(v0 + 280);
      v46 = *(_QWORD *)(v0 + 288);
      v47 = *(_QWORD *)(v0 + 264);
      v48 = *(_QWORD *)(v0 + 272);
      v49 = type metadata accessor for Logger(0);
      sub_100056D88(v49, (uint64_t)qword_1005F5FE0);
      v50 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v45, v46, v47);
      v51 = Logger.logObject.getter(v50);
      v52 = static os_log_type_t.error.getter(v51);
      v53 = os_log_type_enabled(v51, v52);
      v54 = *(_QWORD *)(v0 + 280);
      v55 = *(_QWORD *)(v0 + 288);
      v57 = *(_QWORD *)(v0 + 264);
      v56 = *(_QWORD *)(v0 + 272);
      if (v53)
      {
        v228 = *(_QWORD *)(v0 + 264);
        v236 = *(_QWORD *)(v0 + 288);
        v58 = (uint8_t *)swift_slowAlloc(12, -1);
        v59 = swift_slowAlloc(32, -1);
        v242[0] = v59;
        *(_DWORD *)v58 = 136315138;
        v60 = UUID.uuidString.getter(v59);
        v62 = v61;
        *(_QWORD *)(v16 - 24) = sub_100056DA0(v60, v61, v242);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(v16 - 24, v226);
        v63 = swift_bridgeObjectRelease(v62);
        v64 = *(void (**)(uint64_t, uint64_t, __n128))(v56 + 8);
        v64(v54, v228, v63);
        _os_log_impl((void *)&_mh_execute_header, v51, v52, "FMBeaconSharingModuleDataSource: No item found for beacon: %s", v58, 0xCu);
        swift_arrayDestroy(v59, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v59, -1, -1);
        swift_slowDealloc(v58, -1, -1);

        ((void (*)(uint64_t, uint64_t))v64)(v236, v228);
      }
      else
      {

        v70 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
        v70(v54, v57);
        v70(v55, v57);
      }
      goto LABEL_88;
    }
    sub_1000051EC(*(_QWORD *)(v0 + 320), (uint64_t *)&unk_1005D53A0);
    if (qword_1005D2060 == -1)
      goto LABEL_9;
    goto LABEL_108;
  }
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 360) + 32))(*(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 352));
  if (qword_1005D2060 != -1)
    swift_once(&qword_1005D2060, sub_1003CB84C);
  v65 = type metadata accessor for Logger(0);
  *(_QWORD *)(v0 + 408) = sub_100056D88(v65, (uint64_t)qword_1005F5FE0);
  v66 = swift_retain(v235);
  v67 = Logger.logObject.getter(v66);
  v68 = static os_log_type_t.default.getter(v67);
  if (os_log_type_enabled(v67, v68))
  {
    v69 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v69 = 134217984;
    *(_QWORD *)(v0 + 80) = *(_QWORD *)(v235 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 80, v0 + 88);
    swift_release(v235);
    _os_log_impl((void *)&_mh_execute_header, v67, v68, "FMBeaconSharingModuleDataSource: Received shares updates: %ld", v69, 0xCu);
    swift_slowDealloc(v69, -1, -1);
  }
  else
  {
    swift_release(v235);
  }

  v72 = FMIPItem.owner.getter(v71);
  v74 = v73;
  v75 = (void *)objc_opt_self(SPBeacon);
  *(_QWORD *)(v0 + 416) = v75;
  v76 = objc_msgSend(v75, "SPOwner");
  v77 = objc_msgSend(v76, "destination");

  v78 = static String._unconditionallyBridgeFromObjectiveC(_:)(v77);
  v80 = v79;

  if (v72 == v78 && v74 == v80)
  {
    v81 = 1;
    v80 = v74;
  }
  else
  {
    v81 = _stringCompareWithSmolCheck(_:_:expecting:)(v72, v74, v78, v80, 0);
  }
  *(_BYTE *)(v0 + 549) = v81 & 1;
  swift_bridgeObjectRelease(v80);
  v82 = swift_bridgeObjectRelease(v74);
  v83 = *(_QWORD *)(v235 + 16);
  *(_QWORD *)(v0 + 424) = v83;
  if (v83)
  {
    v224 = 0;
    v84 = 0;
    *(_DWORD *)(v0 + 544) = *(_DWORD *)(*(_QWORD *)(v0 + 248) + 80);
    while (1)
    {
      *(_QWORD *)(v0 + 432) = _swiftEmptyArrayStorage;
      *(_QWORD *)(v0 + 440) = _swiftEmptyArrayStorage;
      v85 = *(_QWORD *)(v0 + 392);
      if (v84 >= *(_QWORD *)(v85 + 16))
        goto LABEL_107;
      v86 = *(_QWORD *)(v0 + 248);
      v87 = v84 + 1;
      v232 = *(uint64_t (**)(_QWORD, unint64_t, _QWORD, __n128))(v86 + 16);
      v237 = *(_QWORD *)(v86 + 72);
      v88 = v232(*(_QWORD *)(v0 + 256), v85+ ((*(unsigned __int8 *)(v0 + 544) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 544))+ v237 * v84, *(_QWORD *)(v0 + 240), v82);
      ShouldBe = FMIPBeaconShare.otherShareeShouldBeHidden.getter(v88);
      if ((ShouldBe & 1) == 0)
        break;
      v90 = *(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8);
LABEL_51:
      v121 = *(_QWORD *)(v0 + 424);
      v90(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
      v84 = v87;
      if (v87 == v121)
        goto LABEL_55;
    }
    v91 = *(void **)(v0 + 416);
    v92 = FMIPBeaconShare.shareeHandle.getter(ShouldBe);
    v94 = v93;
    v95 = objc_msgSend(v91, "SPOwner");
    v96 = objc_msgSend(v95, "destination");

    v97 = static String._unconditionallyBridgeFromObjectiveC(_:)(v96);
    v99 = v98;

    v100 = v92 == v97 && v94 == v99;
    if (v100)
    {
      swift_bridgeObjectRelease_n(v94, 2);
    }
    else
    {
      v101 = _stringCompareWithSmolCheck(_:_:expecting:)(v92, v94, v97, v99, 0);
      swift_bridgeObjectRelease(v99);
      v103 = swift_bridgeObjectRelease(v94);
      if ((v101 & 1) == 0)
      {
LABEL_91:
        *(_BYTE *)(v0 + 550) = v224 & 1;
        *(_QWORD *)(v0 + 448) = v87;
        v188 = FMIPBeaconShare.shareeHandle.getter(v102);
        v190 = v189;
        *(_QWORD *)(v0 + 456) = v188;
        *(_QWORD *)(v0 + 464) = v189;
        v191 = FMIPBeaconShare.shareeHandle.getter(v188);
        v193 = v192;
        v195 = FMIPBeaconShare.ownerHandle.getter();
        v196 = v194;
        if (v191 == v195 && v193 == v194)
        {
          swift_bridgeObjectRelease_n(v193, 2);
        }
        else
        {
          v210 = _stringCompareWithSmolCheck(_:_:expecting:)(v191, v193, v195, v194, 0);
          swift_bridgeObjectRelease(v196);
          swift_bridgeObjectRelease(v193);
          if ((v210 & 1) == 0)
          {
            v214 = *(_QWORD *)(v0 + 232);
            FMIPBeaconShare.state.getter(v211);
            v215 = sub_100053F2C(&qword_1005DCB28);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v215 - 8) + 56))(v214, 0, 1, v215);
            goto LABEL_106;
          }
        }
        v212 = *(_QWORD *)(v0 + 232);
        v213 = sub_100053F2C(&qword_1005DCB28);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v213 - 8) + 56))(v212, 1, 1, v213);
LABEL_106:
        v216 = (_QWORD *)swift_task_alloc(dword_1005DC764);
        *(_QWORD *)(v0 + 472) = v216;
        *v216 = v0;
        v216[1] = sub_10023E67C;
        sub_100240768(*(_QWORD *)(v0 + 200), v188, v190);
        return;
      }
    }
    v104 = *(_QWORD *)(v0 + 424);
    v90 = *(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8);
    ((void (*)(_QWORD, _QWORD, __n128))v90)(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240), v103);
    if (v87 == v104)
    {
LABEL_53:
      v224 = 1;
      goto LABEL_55;
    }
    v105 = v237 * v87;
    v87 = v84 + 2;
    while (1)
    {
      v107 = *(_QWORD *)(v0 + 392);
      if (v87 - 1 >= *(_QWORD *)(v107 + 16))
        break;
      v108 = ((uint64_t (*)(_QWORD, unint64_t, _QWORD))v232)(*(_QWORD *)(v0 + 256), v107+ v105+ ((*(unsigned __int8 *)(v0 + 544) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 544)), *(_QWORD *)(v0 + 240));
      v109 = FMIPBeaconShare.otherShareeShouldBeHidden.getter(v108);
      if ((v109 & 1) != 0)
      {
        v224 = 1;
        goto LABEL_51;
      }
      v110 = *(void **)(v0 + 416);
      v111 = FMIPBeaconShare.shareeHandle.getter(v109);
      v113 = v112;
      v114 = objc_msgSend(v110, "SPOwner");
      v115 = objc_msgSend(v114, "destination");

      v116 = static String._unconditionallyBridgeFromObjectiveC(_:)(v115);
      v118 = v117;

      if (v111 == v116 && v113 == v118)
      {
        swift_bridgeObjectRelease_n(v113, 2);
      }
      else
      {
        v120 = _stringCompareWithSmolCheck(_:_:expecting:)(v111, v113, v116, v118, 0);
        swift_bridgeObjectRelease(v118);
        swift_bridgeObjectRelease(v113);
        if ((v120 & 1) == 0)
        {
          LOBYTE(v224) = 1;
          goto LABEL_91;
        }
      }
      v106 = *(_QWORD *)(v0 + 424);
      v90(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
      v105 += v237;
      v100 = v87++ == v106;
      if (v100)
        goto LABEL_53;
    }
LABEL_107:
    __break(1u);
LABEL_108:
    swift_once(&qword_1005D2060, sub_1003CB84C);
LABEL_9:
    v40 = type metadata accessor for Logger(0);
    v41 = sub_100056D88(v40, (uint64_t)qword_1005F5FE0);
    v42 = Logger.logObject.getter(v41);
    v43 = static os_log_type_t.default.getter(v42);
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v44 = 0;
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "FMBeaconSharingModuleDataSource: No beaconIdentifier when calling update", v44, 2u);
      swift_slowDealloc(v44, -1, -1);
    }

    goto LABEL_88;
  }
  v224 = 0;
LABEL_55:
  swift_release(*(_QWORD *)(v0 + 392));
  v122 = _swiftEmptyArrayStorage[2];
  v123 = __OFADD__(v122, v122);
  v124 = 2 * v122;
  if (v123)
  {
    __break(1u);
    goto LABEL_110;
  }
  v125 = v124 + 1;
  if (__OFADD__(v124, 1))
  {
LABEL_110:
    __break(1u);
    return;
  }
  v127 = *(_QWORD *)(v0 + 136);
  v126 = *(_QWORD *)(v0 + 144);
  v128 = *(_QWORD *)(v0 + 120);
  v129 = *(_QWORD *)(v0 + 128);
  v130 = *(_QWORD *)(v0 + 112);
  v238 = *(_QWORD *)(v0 + 104);
  v131 = *(_QWORD *)(v0 + 96);
  v132 = *(_QWORD *)(*(_QWORD *)(v0 + 384) + 24) + OBJC_IVAR____TtC6FindMy17FMDevicesProvider_sharingLimits;
  v133 = swift_beginAccess(v132, v0 + 40, 0, 0);
  v134 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v127 + 16))(v126, v132, v129, v133);
  v135 = FMIPBeaconSharingLimits.maxCircleMembers.getter(v134);
  v136 = (*(uint64_t (**)(uint64_t, uint64_t))(v127 + 8))(v126, v129);
  v137 = FMIPItem.capabilities.getter(v136);
  static FMItemCapabilities.canEnableSharing.getter(v137);
  v138 = sub_100008000((unint64_t *)&qword_1005E3B40, (uint64_t (*)(uint64_t))&type metadata accessor for FMItemCapabilities, (uint64_t)&protocol conformance descriptor for FMItemCapabilities);
  v139 = dispatch thunk of SetAlgebra.isSuperset(of:)(v130, v131, v138);
  v140 = *(void (**)(uint64_t, uint64_t))(v238 + 8);
  v140(v130, v131);
  v140(v128, v131);
  v142 = v125 < 0 || v125 < v135;
  if ((v139 & 1) == 0)
    v142 = 0;
  v239 = v142;
  v143 = *(unsigned __int8 *)(v0 + 549);
  v144 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 360) + 16))(*(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 352));
  v145 = *(_QWORD *)(v0 + 360);
  v146 = *(_QWORD *)(v0 + 368);
  v147 = *(_QWORD *)(v0 + 352);
  if (v143 == 1)
  {
    v149 = *(_QWORD *)(v0 + 112);
    v148 = *(_QWORD *)(v0 + 120);
    v150 = *(_QWORD *)(v0 + 96);
    v151 = FMIPItem.capabilities.getter(v144);
    static FMItemCapabilities.canDisableSharing.getter(v151);
    v152 = dispatch thunk of SetAlgebra.isSuperset(of:)(v149, v150, v138);
    v140(v149, v150);
    v140(v148, v150);
    v153 = *(void (**)(uint64_t, uint64_t))(v145 + 8);
    v153(v146, v147);
  }
  else
  {
    v153 = *(void (**)(uint64_t, uint64_t))(v145 + 8);
    v153(*(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 352));
    v152 = 0;
  }
  *(_QWORD *)(v0 + 496) = v153;
  v222 = *(unsigned __int8 *)(v0 + 548);
  v154 = *(_QWORD *)(v0 + 88) + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_viewModel;
  v156 = *(_QWORD *)v154;
  v155 = *(_QWORD *)(v154 + 8);
  v157 = *(unsigned __int8 *)(v154 + 16);
  v158 = *(unsigned __int8 *)(v154 + 17);
  if (*(_BYTE *)(v154 + 17))
    v159 = 256;
  else
    v159 = 0;
  v160 = v159 | v157;
  v229 = *(unsigned __int8 *)(v154 + 18);
  if (*(_BYTE *)(v154 + 18))
    v161 = 0x10000;
  else
    v161 = 0;
  v162 = v160 | v161;
  swift_bridgeObjectRetain(v156);
  swift_bridgeObjectRetain(v155);
  v163 = sub_1002400E0(v156, v155, v162);
  if (v239)
    v164 = 256;
  else
    v164 = 0;
  v165 = v164 & 0xFFFFFFFE | v224 & 1;
  v233 = v152;
  v166 = v152 & 1;
  if (v166)
    v167 = 0x10000;
  else
    v167 = 0;
  v219 = v165 | v167;
  v168 = sub_1002400E0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, v165 | v167);
  v169 = sub_1001F42D4(v163, v168);
  swift_bridgeObjectRelease(v168);
  swift_bridgeObjectRelease(v163);
  swift_bridgeObjectRelease(v156);
  v170 = swift_bridgeObjectRelease(v155);
  if ((v169 & 1) != 0 && ((v224 ^ v157) & 1) == 0 && ((v239 ^ v158) & 1) == 0 && ((v233 ^ v229) & 1) == 0 && !v222
    || (static Task<>.isCancelled.getter(v170) & 1) != 0)
  {
    swift_bridgeObjectRelease_n(_swiftEmptyArrayStorage, 2);
LABEL_87:
    (*(void (**)(_QWORD, _QWORD))(v0 + 496))(*(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 352));
LABEL_88:
    v171 = *(_QWORD *)(v0 + 368);
    v172 = *(_QWORD *)(v0 + 336);
    v173 = *(_QWORD *)(v0 + 344);
    v175 = *(_QWORD *)(v0 + 320);
    v174 = *(_QWORD *)(v0 + 328);
    v177 = *(_QWORD *)(v0 + 304);
    v176 = *(_QWORD *)(v0 + 312);
    v179 = *(_QWORD *)(v0 + 288);
    v178 = *(_QWORD *)(v0 + 296);
    v217 = *(_QWORD *)(v0 + 280);
    v218 = *(_QWORD *)(v0 + 256);
    v220 = *(_QWORD *)(v0 + 232);
    v221 = *(_QWORD *)(v0 + 224);
    v223 = *(_QWORD *)(v0 + 200);
    v225 = *(_QWORD *)(v0 + 192);
    v227 = *(_QWORD *)(v0 + 168);
    v230 = *(_QWORD *)(v0 + 144);
    v234 = *(_QWORD *)(v0 + 120);
    v240 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 376));
    swift_task_dealloc(v171);
    swift_task_dealloc(v173);
    swift_task_dealloc(v172);
    swift_task_dealloc(v174);
    swift_task_dealloc(v175);
    swift_task_dealloc(v176);
    swift_task_dealloc(v177);
    swift_task_dealloc(v178);
    swift_task_dealloc(v179);
    swift_task_dealloc(v217);
    swift_task_dealloc(v218);
    swift_task_dealloc(v220);
    swift_task_dealloc(v221);
    swift_task_dealloc(v223);
    swift_task_dealloc(v225);
    swift_task_dealloc(v227);
    swift_task_dealloc(v230);
    swift_task_dealloc(v234);
    swift_task_dealloc(v240);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v180 = *(_QWORD *)v154;
  v181 = *(_QWORD *)(v154 + 8);
  *(_QWORD *)v154 = _swiftEmptyArrayStorage;
  *(_QWORD *)(v154 + 8) = _swiftEmptyArrayStorage;
  *(_BYTE *)(v154 + 16) = v224 & 1;
  *(_BYTE *)(v154 + 17) = v239;
  *(_BYTE *)(v154 + 18) = v166;
  swift_bridgeObjectRetain_n(_swiftEmptyArrayStorage, 4);
  swift_bridgeObjectRelease(v180);
  swift_bridgeObjectRelease(v181);
  v183 = Logger.logObject.getter(v182);
  v184 = static os_log_type_t.default.getter(v183);
  if (os_log_type_enabled(v183, v184))
  {
    v185 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v185 = 134217984;
    v186 = sub_1002400E0((uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, v219);
    v187 = *(_QWORD *)(v186 + 16);
    swift_bridgeObjectRelease(v186);
    swift_bridgeObjectRelease_n(_swiftEmptyArrayStorage, 2);
    *v226 = v187;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v226, v0 + 80);
    swift_bridgeObjectRelease_n(_swiftEmptyArrayStorage, 2);
    _os_log_impl((void *)&_mh_execute_header, v183, v184, "FMBeaconSharingModuleDataSource: Received new rows: %ld", v185, 0xCu);
    swift_slowDealloc(v185, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(_swiftEmptyArrayStorage, 4);
  }

  v197 = *(_QWORD *)(v0 + 88);
  v198 = *(int **)(v197 + 128);
  *(_QWORD *)(v0 + 504) = v198;
  if (!v198)
    goto LABEL_87;
  v199 = *(_QWORD *)(v197 + 136);
  *(_QWORD *)(v0 + 512) = v199;
  v200 = *(_QWORD *)v154;
  *(_QWORD *)(v0 + 520) = *(_QWORD *)v154;
  v201 = *(_QWORD *)(v154 + 8);
  *(_QWORD *)(v0 + 528) = v201;
  v202 = *(unsigned __int8 *)(v154 + 16);
  v203 = *(unsigned __int8 *)(v154 + 17);
  v204 = *(unsigned __int8 *)(v154 + 18);
  sub_1000A190C((uint64_t)v198, v199);
  v205 = v198[1];
  v241 = (int *)((char *)v198 + *v198);
  swift_bridgeObjectRetain(v200);
  swift_bridgeObjectRetain(v201);
  v206 = (_QWORD *)swift_task_alloc(v205);
  *(_QWORD *)(v0 + 536) = v206;
  if (v203)
    v207 = 256;
  else
    v207 = 0;
  v208 = v207 | v202;
  if (v204)
    v209 = 0x10000;
  else
    v209 = 0;
  *v206 = v0;
  v206[1] = sub_10023FF0C;
  ((void (*)(uint64_t, uint64_t, _QWORD))v241)(v200, v201, v208 | v209);
}

uint64_t sub_10023E67C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 472));
  return swift_task_switch(sub_10023E6D4, v1, 0);
}

void sub_10023E6D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  void (*v49)(uint64_t, uint64_t);
  _BOOL4 v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  void (*v61)(uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(_QWORD, unint64_t, _QWORD);
  uint64_t v67;
  uint64_t ShouldBe;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  BOOL v79;
  char v80;
  __n128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  uint64_t v108;
  int v109;
  unsigned int v110;
  int v111;
  int v112;
  int v113;
  uint64_t v114;
  char v115;
  __n128 v116;
  __n128 v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  NSObject *v130;
  os_log_type_t v131;
  uint8_t *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  int *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  int v140;
  int v141;
  int v142;
  uint64_t v143;
  _QWORD *v144;
  int v145;
  int v146;
  int v147;
  char v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  _QWORD *v164;
  uint64_t v165;
  char v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  int v170;
  uint64_t v171;
  uint64_t v172;
  int v173;
  uint64_t v174;
  char v175;
  int v176;
  uint64_t v177;
  int v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  _BOOL4 v182;
  uint64_t (*v183)(_QWORD, _QWORD, __n128);
  uint64_t v184;
  void (*v185)(uint64_t, uint64_t, uint64_t);
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  int *v191;

  v1 = *(_QWORD *)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1000051EC(v3, &qword_1005D3380);
    v4 = (_QWORD *)swift_task_alloc(dword_1005DC76C);
    *(_QWORD *)(v0 + 480) = v4;
    *v4 = v0;
    v4[1] = sub_10023F324;
    v5 = *(_QWORD *)(v0 + 456);
    v6 = *(_QWORD *)(v0 + 88);
    v4[3] = *(_QWORD *)(v0 + 464);
    v4[4] = v6;
    v4[2] = v5;
    swift_task_switch(sub_100240E80, v6, 0);
    return;
  }
  v185 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 400);
  v188 = *(_QWORD *)(v0 + 440);
  v7 = *(_QWORD *)(v0 + 304);
  v8 = *(_QWORD *)(v0 + 264);
  v9 = *(_QWORD *)(v0 + 224);
  v180 = *(_QWORD *)(v0 + 232);
  v10 = *(_QWORD *)(v0 + 192);
  v11 = *(_QWORD *)(v0 + 176);
  v12 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 464));
  v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v2 + 32))(v9, v3, v1, v12);
  FMIPBeaconShare.identifier.getter(v13);
  v14 = v10 + *(int *)(v11 + 48);
  v15 = v10 + *(int *)(v11 + 64);
  v185(v10, v7, v8);
  sub_10004FC74(v180, v14, type metadata accessor for FMBeaconSharingModuleShareState);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v15, v9, v1);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v188);
  v17 = *(_QWORD *)(v0 + 440);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v17 = sub_1000705C4(0, *(_QWORD *)(v17 + 16) + 1, 1, *(_QWORD *)(v0 + 440));
  v19 = *(_QWORD *)(v17 + 16);
  v18 = *(_QWORD *)(v17 + 24);
  if (v19 >= v18 >> 1)
    v17 = sub_1000705C4(v18 > 1, v19 + 1, 1, v17);
  v21 = *(_QWORD *)(v0 + 216);
  v20 = *(_QWORD *)(v0 + 224);
  v22 = *(_QWORD *)(v0 + 208);
  v24 = *(_QWORD *)(v0 + 184);
  v23 = *(_QWORD *)(v0 + 192);
  *(_QWORD *)(v17 + 16) = v19 + 1;
  sub_10005DAA0(v23, v17+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(_QWORD *)(v24 + 72) * v19, &qword_1005D2BF0);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  v25 = *(_QWORD *)(v0 + 432);
  sub_10004FCB8(*(_QWORD *)(v0 + 232), type metadata accessor for FMBeaconSharingModuleShareState);
  v26 = *(unsigned __int8 *)(v0 + 550);
  v27 = *(_QWORD *)(v0 + 448);
  v28 = *(_QWORD *)(v0 + 424);
  v29 = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
  v186 = v25;
  v189 = v17;
  if (v27 != v28)
  {
LABEL_20:
    v62 = v27 + 1;
    v27 += 2;
    while (1)
    {
      *(_QWORD *)(v0 + 432) = v25;
      *(_QWORD *)(v0 + 440) = v17;
      v63 = *(_QWORD *)(v0 + 392);
      if ((unint64_t)(v62 - 1) >= *(_QWORD *)(v63 + 16))
        goto LABEL_88;
      v64 = *(_QWORD *)(v0 + 248);
      v65 = *(_QWORD *)(v64 + 72);
      v66 = *(uint64_t (**)(_QWORD, unint64_t, _QWORD))(v64 + 16);
      v67 = v66(*(_QWORD *)(v0 + 256), v63+ ((*(unsigned __int8 *)(v0 + 544) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 544))+ v65 * (v62 - 1), *(_QWORD *)(v0 + 240));
      ShouldBe = FMIPBeaconShare.otherShareeShouldBeHidden.getter(v67);
      if ((ShouldBe & 1) == 0)
        break;
      v69 = *(_QWORD *)(v0 + 424);
      v29 = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 248) + 8))(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
      ++v27;
      v79 = v62++ == v69;
      if (v79)
        goto LABEL_8;
    }
    v175 = v26;
    v70 = *(void **)(v0 + 416);
    v71 = FMIPBeaconShare.shareeHandle.getter(ShouldBe);
    v73 = v72;
    v74 = objc_msgSend(v70, "SPOwner");
    v75 = objc_msgSend(v74, "destination");

    v76 = static String._unconditionallyBridgeFromObjectiveC(_:)(v75);
    v78 = v77;

    v79 = v71 == v76 && v73 == v78;
    if (v79)
    {
      swift_bridgeObjectRelease_n(v73, 2);
    }
    else
    {
      v80 = _stringCompareWithSmolCheck(_:_:expecting:)(v71, v73, v76, v78, 0);
      swift_bridgeObjectRelease(v78);
      v81 = swift_bridgeObjectRelease(v73);
      if ((v80 & 1) == 0)
        goto LABEL_89;
    }
    v82 = *(_QWORD *)(v0 + 424);
    v183 = *(uint64_t (**)(_QWORD, _QWORD, __n128))(*(_QWORD *)(v0 + 248) + 8);
    v29 = v183(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240), v81);
    if (v82 == v62)
    {
      v26 = 1;
      v25 = v186;
      v17 = v189;
      goto LABEL_8;
    }
    v62 *= v65;
    v25 = v186;
    v17 = v189;
    while (1)
    {
      v84 = *(_QWORD *)(v0 + 392);
      if ((unint64_t)(v27 - 1) >= *(_QWORD *)(v84 + 16))
        break;
      v85 = v66(*(_QWORD *)(v0 + 256), v84 + v62 + ((*(unsigned __int8 *)(v0 + 544) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 544)), *(_QWORD *)(v0 + 240));
      v86 = FMIPBeaconShare.otherShareeShouldBeHidden.getter(v85);
      if ((v86 & 1) != 0)
      {
        v98 = *(_QWORD *)(v0 + 424);
        v29 = ((uint64_t (*)(_QWORD, _QWORD))v183)(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
        v26 = 1;
        if (v98 != v27)
          goto LABEL_20;
        goto LABEL_8;
      }
      v87 = *(void **)(v0 + 416);
      v88 = FMIPBeaconShare.shareeHandle.getter(v86);
      v90 = v89;
      v91 = objc_msgSend(v87, "SPOwner");
      v92 = objc_msgSend(v91, "destination");

      v93 = static String._unconditionallyBridgeFromObjectiveC(_:)(v92);
      v95 = v94;

      if (v88 == v93 && v90 == v95)
      {
        swift_bridgeObjectRelease_n(v90, 2);
      }
      else
      {
        v97 = _stringCompareWithSmolCheck(_:_:expecting:)(v88, v90, v93, v95, 0);
        swift_bridgeObjectRelease(v95);
        swift_bridgeObjectRelease(v90);
        if ((v97 & 1) == 0)
        {
          v148 = 1;
          goto LABEL_80;
        }
      }
      v83 = *(_QWORD *)(v0 + 424);
      v29 = ((uint64_t (*)(_QWORD, _QWORD))v183)(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240));
      v62 += v65;
      v79 = v27++ == v83;
      v25 = v186;
      v17 = v189;
      if (v79)
      {
        v26 = 1;
        goto LABEL_8;
      }
    }
LABEL_88:
    __break(1u);
LABEL_89:
    v27 = v62;
    v148 = v175;
LABEL_80:
    *(_BYTE *)(v0 + 550) = v148 & 1;
    *(_QWORD *)(v0 + 448) = v27;
    v149 = FMIPBeaconShare.shareeHandle.getter(v29);
    v151 = v150;
    *(_QWORD *)(v0 + 456) = v149;
    *(_QWORD *)(v0 + 464) = v150;
    v152 = FMIPBeaconShare.shareeHandle.getter(v149);
    v154 = v153;
    v156 = FMIPBeaconShare.ownerHandle.getter();
    v157 = v155;
    if (v152 == v156 && v154 == v155)
    {
      swift_bridgeObjectRelease_n(v154, 2);
    }
    else
    {
      v158 = _stringCompareWithSmolCheck(_:_:expecting:)(v152, v154, v156, v155, 0);
      swift_bridgeObjectRelease(v157);
      swift_bridgeObjectRelease(v154);
      if ((v158 & 1) == 0)
      {
        v162 = *(_QWORD *)(v0 + 232);
        FMIPBeaconShare.state.getter(v159);
        v163 = sub_100053F2C(&qword_1005DCB28);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v163 - 8) + 56))(v162, 0, 1, v163);
        goto LABEL_86;
      }
    }
    v160 = *(_QWORD *)(v0 + 232);
    v161 = sub_100053F2C(&qword_1005DCB28);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v161 - 8) + 56))(v160, 1, 1, v161);
LABEL_86:
    v164 = (_QWORD *)swift_task_alloc(dword_1005DC764);
    *(_QWORD *)(v0 + 472) = v164;
    *v164 = v0;
    v164[1] = sub_10023E67C;
    sub_100240768(*(_QWORD *)(v0 + 200), v149, v151);
    return;
  }
LABEL_8:
  swift_release(*(_QWORD *)(v0 + 392));
  v30 = *(_QWORD *)(v17 + 16);
  v31 = *(_QWORD *)(v25 + 16);
  v32 = __OFADD__(v30, v31);
  v33 = v30 + v31;
  if (v32)
  {
    __break(1u);
    goto LABEL_91;
  }
  v34 = v33 + 1;
  if (__OFADD__(v33, 1))
  {
LABEL_91:
    __break(1u);
    return;
  }
  v176 = v26;
  v36 = *(_QWORD *)(v0 + 136);
  v35 = *(_QWORD *)(v0 + 144);
  v37 = *(_QWORD *)(v0 + 120);
  v38 = *(_QWORD *)(v0 + 128);
  v39 = *(_QWORD *)(v0 + 112);
  v181 = *(_QWORD *)(v0 + 104);
  v40 = *(_QWORD *)(v0 + 96);
  v41 = *(_QWORD *)(*(_QWORD *)(v0 + 384) + 24) + OBJC_IVAR____TtC6FindMy17FMDevicesProvider_sharingLimits;
  v42 = swift_beginAccess(v41, v0 + 40, 0, 0);
  v43 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v36 + 16))(v35, v41, v38, v42);
  v44 = FMIPBeaconSharingLimits.maxCircleMembers.getter(v43);
  v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8))(v35, v38);
  v46 = FMIPItem.capabilities.getter(v45);
  static FMItemCapabilities.canEnableSharing.getter(v46);
  v47 = sub_100008000((unint64_t *)&qword_1005E3B40, (uint64_t (*)(uint64_t))&type metadata accessor for FMItemCapabilities, (uint64_t)&protocol conformance descriptor for FMItemCapabilities);
  v48 = dispatch thunk of SetAlgebra.isSuperset(of:)(v39, v40, v47);
  v49 = *(void (**)(uint64_t, uint64_t))(v181 + 8);
  v49(v39, v40);
  v49(v37, v40);
  v51 = v34 < 0 || v34 < v44;
  if ((v48 & 1) == 0)
    v51 = 0;
  v182 = v51;
  v52 = *(unsigned __int8 *)(v0 + 549);
  v53 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 360) + 16))(*(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 352));
  v55 = *(_QWORD *)(v0 + 360);
  v54 = *(_QWORD *)(v0 + 368);
  if (v52 == 1)
  {
    v57 = *(_QWORD *)(v0 + 112);
    v56 = *(_QWORD *)(v0 + 120);
    v58 = *(_QWORD *)(v0 + 96);
    v172 = *(_QWORD *)(v0 + 352);
    v59 = FMIPItem.capabilities.getter(v53);
    static FMItemCapabilities.canDisableSharing.getter(v59);
    v60 = dispatch thunk of SetAlgebra.isSuperset(of:)(v57, v58, v47);
    v49(v57, v58);
    v49(v56, v58);
    v61 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
    v61(v54, v172);
  }
  else
  {
    v61 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
    v61(*(_QWORD *)(v0 + 368), *(_QWORD *)(v0 + 352));
    v60 = 0;
  }
  *(_QWORD *)(v0 + 496) = v61;
  v170 = *(unsigned __int8 *)(v0 + 548);
  v99 = *(_QWORD *)(v0 + 88) + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_viewModel;
  v101 = *(_QWORD *)v99;
  v100 = *(_QWORD *)(v99 + 8);
  v102 = *(unsigned __int8 *)(v99 + 16);
  v168 = v99;
  v103 = *(unsigned __int8 *)(v99 + 18);
  v178 = *(unsigned __int8 *)(v99 + 17);
  if (*(_BYTE *)(v99 + 17))
    v104 = 256;
  else
    v104 = 0;
  v105 = v104 | v102;
  v173 = v103;
  if (v103)
    v106 = 0x10000;
  else
    v106 = 0;
  v107 = v105 | v106;
  swift_bridgeObjectRetain(v101);
  swift_bridgeObjectRetain(v100);
  v108 = sub_1002400E0(v101, v100, v107);
  if (v182)
    v109 = 256;
  else
    v109 = 0;
  v110 = v109 & 0xFFFFFFFE | v176 & 1;
  v111 = v60;
  v166 = v60 & 1;
  if ((v60 & 1) != 0)
    v112 = 0x10000;
  else
    v112 = 0;
  v113 = v110 | v112;
  v114 = sub_1002400E0(v189, v186, v110 | v112);
  v115 = sub_1001F42D4(v108, v114);
  swift_bridgeObjectRelease(v114);
  swift_bridgeObjectRelease(v108);
  swift_bridgeObjectRelease(v101);
  v116 = swift_bridgeObjectRelease(v100);
  if ((v115 & 1) != 0 && ((v176 ^ v102) & 1) == 0 && ((v182 ^ v178) & 1) == 0 && ((v111 ^ v173) & 1) == 0 && !v170
    || (static Task<>.isCancelled.getter(v116) & 1) != 0)
  {
    swift_bridgeObjectRelease(v189);
    v117 = swift_bridgeObjectRelease(v186);
LABEL_67:
    (*(void (**)(_QWORD, _QWORD, __n128))(v0 + 496))(*(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 352), v117);
    v118 = *(_QWORD *)(v0 + 368);
    v119 = *(_QWORD *)(v0 + 336);
    v120 = *(_QWORD *)(v0 + 344);
    v122 = *(_QWORD *)(v0 + 320);
    v121 = *(_QWORD *)(v0 + 328);
    v124 = *(_QWORD *)(v0 + 304);
    v123 = *(_QWORD *)(v0 + 312);
    v126 = *(_QWORD *)(v0 + 288);
    v125 = *(_QWORD *)(v0 + 296);
    v165 = *(_QWORD *)(v0 + 280);
    v167 = *(_QWORD *)(v0 + 256);
    v169 = *(_QWORD *)(v0 + 232);
    v171 = *(_QWORD *)(v0 + 224);
    v174 = *(_QWORD *)(v0 + 200);
    v177 = *(_QWORD *)(v0 + 192);
    v179 = *(_QWORD *)(v0 + 168);
    v184 = *(_QWORD *)(v0 + 144);
    v187 = *(_QWORD *)(v0 + 120);
    v190 = *(_QWORD *)(v0 + 112);
    swift_task_dealloc(*(_QWORD *)(v0 + 376));
    swift_task_dealloc(v118);
    swift_task_dealloc(v120);
    swift_task_dealloc(v119);
    swift_task_dealloc(v121);
    swift_task_dealloc(v122);
    swift_task_dealloc(v123);
    swift_task_dealloc(v124);
    swift_task_dealloc(v125);
    swift_task_dealloc(v126);
    swift_task_dealloc(v165);
    swift_task_dealloc(v167);
    swift_task_dealloc(v169);
    swift_task_dealloc(v171);
    swift_task_dealloc(v174);
    swift_task_dealloc(v177);
    swift_task_dealloc(v179);
    swift_task_dealloc(v184);
    swift_task_dealloc(v187);
    swift_task_dealloc(v190);
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v127 = *(_QWORD *)v168;
  v128 = *(_QWORD *)(v168 + 8);
  *(_QWORD *)v168 = v189;
  *(_QWORD *)(v168 + 8) = v186;
  *(_BYTE *)(v168 + 16) = v176 & 1;
  *(_BYTE *)(v168 + 17) = v182;
  *(_BYTE *)(v168 + 18) = v166;
  swift_bridgeObjectRetain_n(v189, 2);
  swift_bridgeObjectRetain_n(v186, 2);
  swift_bridgeObjectRelease(v127);
  swift_bridgeObjectRelease(v128);
  v130 = Logger.logObject.getter(v129);
  v131 = static os_log_type_t.default.getter(v130);
  if (os_log_type_enabled(v130, v131))
  {
    v132 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v132 = 134217984;
    v133 = sub_1002400E0(v189, v186, v113);
    v134 = *(_QWORD *)(v133 + 16);
    swift_bridgeObjectRelease(v133);
    swift_bridgeObjectRelease(v189);
    swift_bridgeObjectRelease(v186);
    *(_QWORD *)(v0 + 72) = v134;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 72, v0 + 80);
    swift_bridgeObjectRelease(v189);
    swift_bridgeObjectRelease(v186);
    _os_log_impl((void *)&_mh_execute_header, v130, v131, "FMBeaconSharingModuleDataSource: Received new rows: %ld", v132, 0xCu);
    swift_slowDealloc(v132, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v189, 2);
    swift_bridgeObjectRelease_n(v186, 2);
  }

  v135 = *(_QWORD *)(v0 + 88);
  v136 = *(int **)(v135 + 128);
  *(_QWORD *)(v0 + 504) = v136;
  if (!v136)
    goto LABEL_67;
  v137 = *(_QWORD *)(v135 + 136);
  *(_QWORD *)(v0 + 512) = v137;
  v138 = *(_QWORD *)v168;
  *(_QWORD *)(v0 + 520) = *(_QWORD *)v168;
  v139 = *(_QWORD *)(v168 + 8);
  *(_QWORD *)(v0 + 528) = v139;
  v140 = *(unsigned __int8 *)(v168 + 16);
  v141 = *(unsigned __int8 *)(v168 + 17);
  v142 = *(unsigned __int8 *)(v168 + 18);
  sub_1000A190C((uint64_t)v136, v137);
  v143 = v136[1];
  v191 = (int *)((char *)v136 + *v136);
  swift_bridgeObjectRetain(v138);
  swift_bridgeObjectRetain(v139);
  v144 = (_QWORD *)swift_task_alloc(v143);
  *(_QWORD *)(v0 + 536) = v144;
  if (v141)
    v145 = 256;
  else
    v145 = 0;
  v146 = v145 | v140;
  if (v142)
    v147 = 0x10000;
  else
    v147 = 0;
  *v144 = v0;
  v144[1] = sub_10023FF0C;
  ((void (*)(uint64_t, uint64_t, _QWORD))v191)(v138, v139, v146 | v147);
}

uint64_t sub_10023F324(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 480);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 464);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  *(_QWORD *)(*(_QWORD *)v1 + 488) = a1;
  swift_task_dealloc(v2);
  swift_bridgeObjectRelease(v3);
  return swift_task_switch(sub_10023F390, v4, 0);
}

void sub_10023F390(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  void (*v44)(uint64_t, uint64_t);
  _BOOL4 v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  void (*v56)(uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)(_QWORD, unint64_t, _QWORD);
  uint64_t v62;
  uint64_t ShouldBe;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  char v75;
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  id v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  uint64_t v103;
  int v104;
  unsigned int v105;
  int v106;
  int v107;
  int v108;
  uint64_t v109;
  char v110;
  __n128 v111;
  __n128 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  NSObject *v125;
  os_log_type_t v126;
  uint8_t *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  int *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  int v135;
  int v136;
  int v137;
  uint64_t v138;
  _QWORD *v139;
  int v140;
  int v141;
  int v142;
  char v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v159;
  uint64_t v160;
  char v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  int v165;
  uint64_t v166;
  uint64_t v167;
  int v168;
  uint64_t v169;
  char v170;
  int v171;
  uint64_t v172;
  int v173;
  uint64_t v174;
  uint64_t v175;
  _BOOL4 v176;
  uint64_t (*v177)(_QWORD, _QWORD, __n128);
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  int *v183;

  v2 = *(void **)(v1 + 488);
  v3 = *(_QWORD *)(v1 + 432);
  v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 400);
  v5 = *(_QWORD *)(v1 + 296);
  v6 = *(_QWORD *)(v1 + 264);
  v7 = *(_QWORD *)(v1 + 232);
  v8 = *(_QWORD *)(v1 + 168);
  v9 = *(_QWORD *)(v1 + 152);
  FMIPBeaconShare.identifier.getter(a1);
  v10 = v8 + *(int *)(v9 + 48);
  v11 = *(int *)(v9 + 64);
  v4(v8, v5, v6);
  sub_10004FC74(v7, v10, type metadata accessor for FMBeaconSharingModuleShareState);
  *(_QWORD *)(v8 + v11) = v2;
  v12 = v2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v3);
  v14 = *(_QWORD *)(v1 + 432);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v14 = sub_1000705B0(0, *(_QWORD *)(v14 + 16) + 1, 1, *(_QWORD *)(v1 + 432));
  v16 = *(_QWORD *)(v14 + 16);
  v15 = *(_QWORD *)(v14 + 24);
  if (v16 >= v15 >> 1)
    v14 = sub_1000705B0(v15 > 1, v16 + 1, 1, v14);
  v17 = *(void **)(v1 + 488);
  v19 = *(_QWORD *)(v1 + 160);
  v18 = *(_QWORD *)(v1 + 168);
  *(_QWORD *)(v14 + 16) = v16 + 1;
  sub_10005DAA0(v18, v14+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(_QWORD *)(v19 + 72) * v16, &qword_1005D2C00);

  v20 = *(_QWORD *)(v1 + 440);
  sub_10004FCB8(*(_QWORD *)(v1 + 232), type metadata accessor for FMBeaconSharingModuleShareState);
  v21 = *(unsigned __int8 *)(v1 + 550);
  v22 = *(_QWORD *)(v1 + 448);
  v23 = *(_QWORD *)(v1 + 424);
  v24 = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 248) + 8))(*(_QWORD *)(v1 + 256), *(_QWORD *)(v1 + 240));
  v179 = v20;
  v181 = v14;
  if (v22 != v23)
  {
LABEL_18:
    v57 = v22 + 1;
    v22 += 2;
    while (1)
    {
      *(_QWORD *)(v1 + 432) = v14;
      *(_QWORD *)(v1 + 440) = v20;
      v58 = *(_QWORD *)(v1 + 392);
      if ((unint64_t)(v57 - 1) >= *(_QWORD *)(v58 + 16))
        goto LABEL_86;
      v59 = *(_QWORD *)(v1 + 248);
      v60 = *(_QWORD *)(v59 + 72);
      v61 = *(uint64_t (**)(_QWORD, unint64_t, _QWORD))(v59 + 16);
      v62 = v61(*(_QWORD *)(v1 + 256), v58+ ((*(unsigned __int8 *)(v1 + 544) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 544))+ v60 * (v57 - 1), *(_QWORD *)(v1 + 240));
      ShouldBe = FMIPBeaconShare.otherShareeShouldBeHidden.getter(v62);
      if ((ShouldBe & 1) == 0)
        break;
      v64 = *(_QWORD *)(v1 + 424);
      v24 = (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 248) + 8))(*(_QWORD *)(v1 + 256), *(_QWORD *)(v1 + 240));
      ++v22;
      v74 = v57++ == v64;
      if (v74)
        goto LABEL_6;
    }
    v170 = v21;
    v65 = *(void **)(v1 + 416);
    v66 = FMIPBeaconShare.shareeHandle.getter(ShouldBe);
    v68 = v67;
    v69 = objc_msgSend(v65, "SPOwner");
    v70 = objc_msgSend(v69, "destination");

    v71 = static String._unconditionallyBridgeFromObjectiveC(_:)(v70);
    v73 = v72;

    v74 = v66 == v71 && v68 == v73;
    if (v74)
    {
      swift_bridgeObjectRelease_n(v68, 2);
    }
    else
    {
      v75 = _stringCompareWithSmolCheck(_:_:expecting:)(v66, v68, v71, v73, 0);
      swift_bridgeObjectRelease(v73);
      v76 = swift_bridgeObjectRelease(v68);
      if ((v75 & 1) == 0)
        goto LABEL_87;
    }
    v77 = *(_QWORD *)(v1 + 424);
    v177 = *(uint64_t (**)(_QWORD, _QWORD, __n128))(*(_QWORD *)(v1 + 248) + 8);
    v24 = v177(*(_QWORD *)(v1 + 256), *(_QWORD *)(v1 + 240), v76);
    if (v77 == v57)
    {
      v21 = 1;
      v20 = v179;
      v14 = v181;
      goto LABEL_6;
    }
    v57 *= v60;
    v20 = v179;
    v14 = v181;
    while (1)
    {
      v79 = *(_QWORD *)(v1 + 392);
      if ((unint64_t)(v22 - 1) >= *(_QWORD *)(v79 + 16))
        break;
      v80 = v61(*(_QWORD *)(v1 + 256), v79 + v57 + ((*(unsigned __int8 *)(v1 + 544) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 544)), *(_QWORD *)(v1 + 240));
      v81 = FMIPBeaconShare.otherShareeShouldBeHidden.getter(v80);
      if ((v81 & 1) != 0)
      {
        v93 = *(_QWORD *)(v1 + 424);
        v24 = ((uint64_t (*)(_QWORD, _QWORD))v177)(*(_QWORD *)(v1 + 256), *(_QWORD *)(v1 + 240));
        v21 = 1;
        if (v93 != v22)
          goto LABEL_18;
        goto LABEL_6;
      }
      v82 = *(void **)(v1 + 416);
      v83 = FMIPBeaconShare.shareeHandle.getter(v81);
      v85 = v84;
      v86 = objc_msgSend(v82, "SPOwner");
      v87 = objc_msgSend(v86, "destination");

      v88 = static String._unconditionallyBridgeFromObjectiveC(_:)(v87);
      v90 = v89;

      if (v83 == v88 && v85 == v90)
      {
        swift_bridgeObjectRelease_n(v85, 2);
      }
      else
      {
        v92 = _stringCompareWithSmolCheck(_:_:expecting:)(v83, v85, v88, v90, 0);
        swift_bridgeObjectRelease(v90);
        swift_bridgeObjectRelease(v85);
        if ((v92 & 1) == 0)
        {
          v143 = 1;
          goto LABEL_78;
        }
      }
      v78 = *(_QWORD *)(v1 + 424);
      v24 = ((uint64_t (*)(_QWORD, _QWORD))v177)(*(_QWORD *)(v1 + 256), *(_QWORD *)(v1 + 240));
      v57 += v60;
      v74 = v22++ == v78;
      v20 = v179;
      v14 = v181;
      if (v74)
      {
        v21 = 1;
        goto LABEL_6;
      }
    }
LABEL_86:
    __break(1u);
LABEL_87:
    v22 = v57;
    v143 = v170;
LABEL_78:
    *(_BYTE *)(v1 + 550) = v143 & 1;
    *(_QWORD *)(v1 + 448) = v22;
    v144 = FMIPBeaconShare.shareeHandle.getter(v24);
    v146 = v145;
    *(_QWORD *)(v1 + 456) = v144;
    *(_QWORD *)(v1 + 464) = v145;
    v147 = FMIPBeaconShare.shareeHandle.getter(v144);
    v149 = v148;
    v151 = FMIPBeaconShare.ownerHandle.getter();
    v152 = v150;
    if (v147 == v151 && v149 == v150)
    {
      swift_bridgeObjectRelease_n(v149, 2);
    }
    else
    {
      v153 = _stringCompareWithSmolCheck(_:_:expecting:)(v147, v149, v151, v150, 0);
      swift_bridgeObjectRelease(v152);
      swift_bridgeObjectRelease(v149);
      if ((v153 & 1) == 0)
      {
        v157 = *(_QWORD *)(v1 + 232);
        FMIPBeaconShare.state.getter(v154);
        v158 = sub_100053F2C(&qword_1005DCB28);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v158 - 8) + 56))(v157, 0, 1, v158);
        goto LABEL_84;
      }
    }
    v155 = *(_QWORD *)(v1 + 232);
    v156 = sub_100053F2C(&qword_1005DCB28);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v156 - 8) + 56))(v155, 1, 1, v156);
LABEL_84:
    v159 = (_QWORD *)swift_task_alloc(dword_1005DC764);
    *(_QWORD *)(v1 + 472) = v159;
    *v159 = v1;
    v159[1] = sub_10023E67C;
    sub_100240768(*(_QWORD *)(v1 + 200), v144, v146);
    return;
  }
LABEL_6:
  swift_release(*(_QWORD *)(v1 + 392));
  v25 = *(_QWORD *)(v20 + 16);
  v26 = *(_QWORD *)(v14 + 16);
  v27 = __OFADD__(v25, v26);
  v28 = v25 + v26;
  if (v27)
  {
    __break(1u);
    goto LABEL_89;
  }
  v29 = v28 + 1;
  if (__OFADD__(v28, 1))
  {
LABEL_89:
    __break(1u);
    return;
  }
  v171 = v21;
  v31 = *(_QWORD *)(v1 + 136);
  v30 = *(_QWORD *)(v1 + 144);
  v32 = *(_QWORD *)(v1 + 120);
  v33 = *(_QWORD *)(v1 + 128);
  v34 = *(_QWORD *)(v1 + 112);
  v175 = *(_QWORD *)(v1 + 104);
  v35 = *(_QWORD *)(v1 + 96);
  v36 = *(_QWORD *)(*(_QWORD *)(v1 + 384) + 24) + OBJC_IVAR____TtC6FindMy17FMDevicesProvider_sharingLimits;
  v37 = swift_beginAccess(v36, v1 + 40, 0, 0);
  v38 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v31 + 16))(v30, v36, v33, v37);
  v39 = FMIPBeaconSharingLimits.maxCircleMembers.getter(v38);
  v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8))(v30, v33);
  v41 = FMIPItem.capabilities.getter(v40);
  static FMItemCapabilities.canEnableSharing.getter(v41);
  v42 = sub_100008000((unint64_t *)&qword_1005E3B40, (uint64_t (*)(uint64_t))&type metadata accessor for FMItemCapabilities, (uint64_t)&protocol conformance descriptor for FMItemCapabilities);
  v43 = dispatch thunk of SetAlgebra.isSuperset(of:)(v34, v35, v42);
  v44 = *(void (**)(uint64_t, uint64_t))(v175 + 8);
  v44(v34, v35);
  v44(v32, v35);
  v46 = v29 < 0 || v29 < v39;
  if ((v43 & 1) == 0)
    v46 = 0;
  v176 = v46;
  v47 = *(unsigned __int8 *)(v1 + 549);
  v48 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v1 + 360) + 16))(*(_QWORD *)(v1 + 368), *(_QWORD *)(v1 + 376), *(_QWORD *)(v1 + 352));
  v50 = *(_QWORD *)(v1 + 360);
  v49 = *(_QWORD *)(v1 + 368);
  if (v47 == 1)
  {
    v52 = *(_QWORD *)(v1 + 112);
    v51 = *(_QWORD *)(v1 + 120);
    v53 = *(_QWORD *)(v1 + 96);
    v167 = *(_QWORD *)(v1 + 352);
    v54 = FMIPItem.capabilities.getter(v48);
    static FMItemCapabilities.canDisableSharing.getter(v54);
    v55 = dispatch thunk of SetAlgebra.isSuperset(of:)(v52, v53, v42);
    v44(v52, v53);
    v44(v51, v53);
    v56 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
    v56(v49, v167);
  }
  else
  {
    v56 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
    v56(*(_QWORD *)(v1 + 368), *(_QWORD *)(v1 + 352));
    v55 = 0;
  }
  *(_QWORD *)(v1 + 496) = v56;
  v165 = *(unsigned __int8 *)(v1 + 548);
  v94 = *(_QWORD *)(v1 + 88) + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_viewModel;
  v95 = *(_QWORD *)v94;
  v96 = *(_QWORD *)(v94 + 8);
  v97 = *(unsigned __int8 *)(v94 + 16);
  v163 = v94;
  v98 = *(unsigned __int8 *)(v94 + 18);
  v173 = *(unsigned __int8 *)(v94 + 17);
  if (*(_BYTE *)(v94 + 17))
    v99 = 256;
  else
    v99 = 0;
  v100 = v99 | v97;
  v168 = v98;
  if (v98)
    v101 = 0x10000;
  else
    v101 = 0;
  v102 = v100 | v101;
  swift_bridgeObjectRetain(v95);
  swift_bridgeObjectRetain(v96);
  v103 = sub_1002400E0(v95, v96, v102);
  if (v176)
    v104 = 256;
  else
    v104 = 0;
  v105 = v104 & 0xFFFFFFFE | v171 & 1;
  v106 = v55;
  v161 = v55 & 1;
  if ((v55 & 1) != 0)
    v107 = 0x10000;
  else
    v107 = 0;
  v108 = v105 | v107;
  v109 = sub_1002400E0(v179, v181, v105 | v107);
  v110 = sub_1001F42D4(v103, v109);
  swift_bridgeObjectRelease(v109);
  swift_bridgeObjectRelease(v103);
  swift_bridgeObjectRelease(v95);
  v111 = swift_bridgeObjectRelease(v96);
  if ((v110 & 1) != 0 && ((v171 ^ v97) & 1) == 0 && ((v176 ^ v173) & 1) == 0 && ((v106 ^ v168) & 1) == 0 && !v165
    || (static Task<>.isCancelled.getter(v111) & 1) != 0)
  {
    swift_bridgeObjectRelease(v179);
    v112 = swift_bridgeObjectRelease(v181);
LABEL_65:
    (*(void (**)(_QWORD, _QWORD, __n128))(v1 + 496))(*(_QWORD *)(v1 + 376), *(_QWORD *)(v1 + 352), v112);
    v113 = *(_QWORD *)(v1 + 368);
    v114 = *(_QWORD *)(v1 + 336);
    v115 = *(_QWORD *)(v1 + 344);
    v117 = *(_QWORD *)(v1 + 320);
    v116 = *(_QWORD *)(v1 + 328);
    v119 = *(_QWORD *)(v1 + 304);
    v118 = *(_QWORD *)(v1 + 312);
    v121 = *(_QWORD *)(v1 + 288);
    v120 = *(_QWORD *)(v1 + 296);
    v160 = *(_QWORD *)(v1 + 280);
    v162 = *(_QWORD *)(v1 + 256);
    v164 = *(_QWORD *)(v1 + 232);
    v166 = *(_QWORD *)(v1 + 224);
    v169 = *(_QWORD *)(v1 + 200);
    v172 = *(_QWORD *)(v1 + 192);
    v174 = *(_QWORD *)(v1 + 168);
    v178 = *(_QWORD *)(v1 + 144);
    v180 = *(_QWORD *)(v1 + 120);
    v182 = *(_QWORD *)(v1 + 112);
    swift_task_dealloc(*(_QWORD *)(v1 + 376));
    swift_task_dealloc(v113);
    swift_task_dealloc(v115);
    swift_task_dealloc(v114);
    swift_task_dealloc(v116);
    swift_task_dealloc(v117);
    swift_task_dealloc(v118);
    swift_task_dealloc(v119);
    swift_task_dealloc(v120);
    swift_task_dealloc(v121);
    swift_task_dealloc(v160);
    swift_task_dealloc(v162);
    swift_task_dealloc(v164);
    swift_task_dealloc(v166);
    swift_task_dealloc(v169);
    swift_task_dealloc(v172);
    swift_task_dealloc(v174);
    swift_task_dealloc(v178);
    swift_task_dealloc(v180);
    swift_task_dealloc(v182);
    (*(void (**)(void))(v1 + 8))();
    return;
  }
  v122 = *(_QWORD *)v163;
  v123 = *(_QWORD *)(v163 + 8);
  *(_QWORD *)v163 = v179;
  *(_QWORD *)(v163 + 8) = v181;
  *(_BYTE *)(v163 + 16) = v171 & 1;
  *(_BYTE *)(v163 + 17) = v176;
  *(_BYTE *)(v163 + 18) = v161;
  swift_bridgeObjectRetain_n(v179, 2);
  swift_bridgeObjectRetain_n(v181, 2);
  swift_bridgeObjectRelease(v122);
  swift_bridgeObjectRelease(v123);
  v125 = Logger.logObject.getter(v124);
  v126 = static os_log_type_t.default.getter(v125);
  if (os_log_type_enabled(v125, v126))
  {
    v127 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v127 = 134217984;
    v128 = sub_1002400E0(v179, v181, v108);
    v129 = *(_QWORD *)(v128 + 16);
    swift_bridgeObjectRelease(v128);
    swift_bridgeObjectRelease(v179);
    swift_bridgeObjectRelease(v181);
    *(_QWORD *)(v1 + 72) = v129;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v1 + 72, v1 + 80);
    swift_bridgeObjectRelease(v179);
    swift_bridgeObjectRelease(v181);
    _os_log_impl((void *)&_mh_execute_header, v125, v126, "FMBeaconSharingModuleDataSource: Received new rows: %ld", v127, 0xCu);
    swift_slowDealloc(v127, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(v179, 2);
    swift_bridgeObjectRelease_n(v181, 2);
  }

  v130 = *(_QWORD *)(v1 + 88);
  v131 = *(int **)(v130 + 128);
  *(_QWORD *)(v1 + 504) = v131;
  if (!v131)
    goto LABEL_65;
  v132 = *(_QWORD *)(v130 + 136);
  *(_QWORD *)(v1 + 512) = v132;
  v133 = *(_QWORD *)v163;
  *(_QWORD *)(v1 + 520) = *(_QWORD *)v163;
  v134 = *(_QWORD *)(v163 + 8);
  *(_QWORD *)(v1 + 528) = v134;
  v135 = *(unsigned __int8 *)(v163 + 16);
  v136 = *(unsigned __int8 *)(v163 + 17);
  v137 = *(unsigned __int8 *)(v163 + 18);
  sub_1000A190C((uint64_t)v131, v132);
  v138 = v131[1];
  v183 = (int *)((char *)v131 + *v131);
  swift_bridgeObjectRetain(v133);
  swift_bridgeObjectRetain(v134);
  v139 = (_QWORD *)swift_task_alloc(v138);
  *(_QWORD *)(v1 + 536) = v139;
  if (v136)
    v140 = 256;
  else
    v140 = 0;
  v141 = v140 | v135;
  if (v137)
    v142 = 0x10000;
  else
    v142 = 0;
  *v139 = v1;
  v139[1] = sub_10023FF0C;
  ((void (*)(uint64_t, uint64_t, _QWORD))v183)(v133, v134, v141 | v142);
}

uint64_t sub_10023FF0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 528);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 520);
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 504);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 512);
  v5 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v0 + 536));
  sub_1000327F0(v4, v3);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v1);
  return swift_task_switch(sub_10023FF9C, v5, 0);
}

uint64_t sub_10023FF9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  (*(void (**)(_QWORD, _QWORD))(v0 + 496))(*(_QWORD *)(v0 + 376), *(_QWORD *)(v0 + 352));
  v1 = *(_QWORD *)(v0 + 368);
  v2 = *(_QWORD *)(v0 + 336);
  v3 = *(_QWORD *)(v0 + 344);
  v5 = *(_QWORD *)(v0 + 320);
  v4 = *(_QWORD *)(v0 + 328);
  v7 = *(_QWORD *)(v0 + 304);
  v6 = *(_QWORD *)(v0 + 312);
  v9 = *(_QWORD *)(v0 + 288);
  v8 = *(_QWORD *)(v0 + 296);
  v11 = *(_QWORD *)(v0 + 280);
  v12 = *(_QWORD *)(v0 + 256);
  v13 = *(_QWORD *)(v0 + 232);
  v14 = *(_QWORD *)(v0 + 224);
  v15 = *(_QWORD *)(v0 + 200);
  v16 = *(_QWORD *)(v0 + 192);
  v17 = *(_QWORD *)(v0 + 168);
  v18 = *(_QWORD *)(v0 + 144);
  v19 = *(_QWORD *)(v0 + 120);
  v20 = *(_QWORD *)(v0 + 112);
  swift_task_dealloc(*(_QWORD *)(v0 + 376));
  swift_task_dealloc(v1);
  swift_task_dealloc(v3);
  swift_task_dealloc(v2);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  swift_task_dealloc(v8);
  swift_task_dealloc(v9);
  swift_task_dealloc(v11);
  swift_task_dealloc(v12);
  swift_task_dealloc(v13);
  swift_task_dealloc(v14);
  swift_task_dealloc(v15);
  swift_task_dealloc(v16);
  swift_task_dealloc(v17);
  swift_task_dealloc(v18);
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002400E0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  __int16 v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  _QWORD *v66;

  v59 = a3;
  v5 = sub_100053F2C(&qword_1005D2C00);
  v57 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FMBeaconSharingModuleEntry(0);
  v65 = *(_QWORD *)(v8 - 8);
  v9 = __chkstk_darwin(v8);
  v60 = (uint64_t)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v58 = (uint64_t)&v54 - v12;
  v13 = __chkstk_darwin(v11);
  v15 = (uint64_t *)((char *)&v54 - v14);
  __chkstk_darwin(v13);
  v17 = (char *)&v54 - v16;
  v18 = sub_100053F2C(&qword_1005D2BF0);
  v19 = __chkstk_darwin(v18);
  v22 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)(a1 + 16);
  v61 = a2;
  if (v23)
  {
    v55 = a1;
    v56 = v5;
    v64 = &v22[*(int *)(v19 + 48)];
    v63 = &v22[*(int *)(v19 + 64)];
    v24 = a1 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    v62 = *(_QWORD *)(v20 + 72);
    swift_bridgeObjectRetain(a1);
    v25 = _swiftEmptyArrayStorage;
    do
    {
      sub_100007464(v24, (uint64_t)v22, &qword_1005D2BF0);
      v26 = sub_100053F2C(&qword_1005DCB20);
      v27 = (uint64_t)&v17[*(int *)(v26 + 48)];
      v28 = &v17[*(int *)(v26 + 64)];
      v29 = type metadata accessor for FMFFriend(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v17, v63, v29);
      v30 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
      swift_storeEnumTagMultiPayload(v17, v30, 0);
      sub_100051774((uint64_t)v64, v27, type metadata accessor for FMBeaconSharingModuleShareState);
      v31 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v28, v22, v31);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v17, 0, 2, v26);
      if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) == 0)
        v25 = (_QWORD *)sub_100070164(0, v25[2] + 1, 1, (unint64_t)v25);
      v33 = v25[2];
      v32 = v25[3];
      if (v33 >= v32 >> 1)
        v25 = (_QWORD *)sub_100070164(v32 > 1, v33 + 1, 1, (unint64_t)v25);
      v25[2] = v33 + 1;
      sub_100051774((uint64_t)v17, (uint64_t)v25+ ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80))+ *(_QWORD *)(v65 + 72) * v33, type metadata accessor for FMBeaconSharingModuleEntry);
      v24 += v62;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease(v55);
    a2 = v61;
    v5 = v56;
    v34 = *(_QWORD *)(v61 + 16);
    if (!v34)
    {
LABEL_9:
      v35 = v59;
      if ((v59 & 1) == 0)
        goto LABEL_10;
      goto LABEL_20;
    }
  }
  else
  {
    v25 = _swiftEmptyArrayStorage;
    v34 = *(_QWORD *)(a2 + 16);
    if (!v34)
      goto LABEL_9;
  }
  v64 = &v7[*(int *)(v5 + 48)];
  v63 = (char *)*(int *)(v5 + 64);
  v36 = a2 + ((*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80));
  v37 = *(_QWORD *)(v57 + 72);
  swift_bridgeObjectRetain(a2);
  do
  {
    sub_100007464(v36, (uint64_t)v7, &qword_1005D2C00);
    v38 = *(void **)&v63[(_QWORD)v7];
    v39 = sub_100053F2C(&qword_1005DCB20);
    v40 = (uint64_t)v15 + *(int *)(v39 + 48);
    v41 = (char *)v15 + *(int *)(v39 + 64);
    *v15 = v38;
    v42 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
    swift_storeEnumTagMultiPayload(v15, v42, 1);
    sub_100051774((uint64_t)v64, v40, type metadata accessor for FMBeaconSharingModuleShareState);
    v43 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v7, v43);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v15, 0, 2, v39);
    v44 = v38;
    if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) == 0)
      v25 = (_QWORD *)sub_100070164(0, v25[2] + 1, 1, (unint64_t)v25);
    v46 = v25[2];
    v45 = v25[3];
    if (v46 >= v45 >> 1)
      v25 = (_QWORD *)sub_100070164(v45 > 1, v46 + 1, 1, (unint64_t)v25);
    v25[2] = v46 + 1;
    sub_100051774((uint64_t)v15, (uint64_t)v25+ ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80))+ *(_QWORD *)(v65 + 72) * v46, type metadata accessor for FMBeaconSharingModuleEntry);

    v36 += v37;
    --v34;
  }
  while (v34);
  swift_bridgeObjectRelease(v61);
  v35 = v59;
  if ((v59 & 1) == 0)
  {
LABEL_10:
    if ((v35 & 0x100) == 0)
      goto LABEL_30;
    goto LABEL_25;
  }
LABEL_20:
  v47 = sub_100053F2C(&qword_1005DCB20);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v58, 1, 2, v47);
  if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) == 0)
    v25 = (_QWORD *)sub_100070164(0, v25[2] + 1, 1, (unint64_t)v25);
  v49 = v25[2];
  v48 = v25[3];
  if (v49 >= v48 >> 1)
    v25 = (_QWORD *)sub_100070164(v48 > 1, v49 + 1, 1, (unint64_t)v25);
  v25[2] = v49 + 1;
  sub_100051774(v58, (uint64_t)v25+ ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80))+ *(_QWORD *)(v65 + 72) * v49, type metadata accessor for FMBeaconSharingModuleEntry);
  if ((v35 & 0x100) != 0)
  {
LABEL_25:
    v50 = sub_100053F2C(&qword_1005DCB20);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v60, 2, 2, v50);
    if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) == 0)
      v25 = (_QWORD *)sub_100070164(0, v25[2] + 1, 1, (unint64_t)v25);
    v52 = v25[2];
    v51 = v25[3];
    if (v52 >= v51 >> 1)
      v25 = (_QWORD *)sub_100070164(v51 > 1, v52 + 1, 1, (unint64_t)v25);
    v25[2] = v52 + 1;
    sub_100051774(v60, (uint64_t)v25+ ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80))+ *(_QWORD *)(v65 + 72) * v52, type metadata accessor for FMBeaconSharingModuleEntry);
  }
LABEL_30:
  v66 = v25;
  swift_bridgeObjectRetain(v25);
  sub_10024C6D4((uint64_t *)&v66, type metadata accessor for FMBeaconSharingModuleEntry, (uint64_t (*)(uint64_t))sub_10020CE84, (uint64_t (*)(_QWORD *))sub_10024C764);
  swift_bridgeObjectRelease(v25);
  return (uint64_t)v66;
}

uint64_t sub_100240768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v5 = sub_100053F2C(&qword_1005D38C0);
  v4[6] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100053F2C(&qword_1005D3380);
  v4[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FMFFriend(0);
  v4[8] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v4[9] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v4[10] = swift_task_alloc(v9);
  v4[11] = swift_task_alloc(v9);
  v4[12] = swift_task_alloc(v9);
  return swift_task_switch(sub_100240830, v3, 0);
}

uint64_t sub_100240830()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD, unint64_t, _QWORD, __n128);
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::Int v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  BOOL v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __n128 v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  _QWORD v57[9];

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 112);
  *(_QWORD *)(v0 + 104) = v1;
  v2 = *(_QWORD *)(v1 + 48);
  swift_retain(v2);
  v4 = dispatch thunk of FMFManager.friends.getter(v3);
  swift_release(v2);
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v6 = *(_QWORD *)(v0 + 72);
    v56 = v4 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v54 = v4;
    v55 = *(_QWORD *)(v6 + 72);
    v7 = *(uint64_t (**)(_QWORD, unint64_t, _QWORD, __n128))(v6 + 16);
    v8 = swift_bridgeObjectRetain(v4);
    v9 = 0;
    do
    {
      v13 = v7(*(_QWORD *)(v0 + 88), v56 + v9 * v55, *(_QWORD *)(v0 + 64), v8);
      v14 = FMFFriend.contactHandles.getter(v13);
      v15 = v14;
      if (*(_QWORD *)(v14 + 16))
      {
        v17 = *(_QWORD *)(v0 + 24);
        v16 = *(_QWORD *)(v0 + 32);
        Hasher.init(_seed:)(v57, *(_QWORD *)(v14 + 40));
        String.hash(into:)(v57, v17, v16);
        v18 = Hasher._finalize()();
        v19 = -1 << *(_BYTE *)(v15 + 32);
        v20 = v18 & ~v19;
        if (((*(_QWORD *)(v15 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) != 0)
        {
          v21 = *(_QWORD *)(v0 + 24);
          v22 = *(_QWORD *)(v0 + 32);
          v23 = *(_QWORD *)(v15 + 48);
          v24 = (_QWORD *)(v23 + 16 * v20);
          v25 = v24[1];
          v26 = *v24 == v21 && v25 == v22;
          if (v26 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v24, v25, v21, v22, 0) & 1) != 0)
          {
LABEL_18:
            swift_bridgeObjectRelease(v15);
            v4 = v54;
            v33 = swift_bridgeObjectRelease(v54);
            v35 = *(_QWORD *)(v0 + 64);
            v34 = *(_QWORD *)(v0 + 72);
            v36 = *(_QWORD *)(v0 + 56);
            (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v34 + 32))(v36, *(_QWORD *)(v0 + 88), v35, v33);
            v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56);
            v37(v36, 0, 1, v35);
            goto LABEL_21;
          }
          v27 = ~v19;
          while (1)
          {
            v20 = (v20 + 1) & v27;
            if (((*(_QWORD *)(v15 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
              break;
            v28 = *(_QWORD *)(v0 + 24);
            v29 = *(_QWORD *)(v0 + 32);
            v30 = (_QWORD *)(v23 + 16 * v20);
            v31 = v30[1];
            v32 = *v30 == v28 && v31 == v29;
            if (v32 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v30, v31, v28, v29, 0) & 1) != 0)
              goto LABEL_18;
          }
        }
      }
      ++v9;
      v10 = *(_QWORD *)(v0 + 88);
      v11 = *(_QWORD *)(v0 + 64);
      v12 = swift_bridgeObjectRelease(v15);
      (*(void (**)(uint64_t, uint64_t, __n128))(v6 + 8))(v10, v11, v12);
    }
    while (v9 != v5);
    v4 = v54;
    swift_bridgeObjectRelease(v54);
  }
  v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 72) + 56);
  v37(*(_QWORD *)(v0 + 56), 1, 1, *(_QWORD *)(v0 + 64));
LABEL_21:
  *(_QWORD *)(v0 + 112) = v37;
  v39 = *(_QWORD *)(v0 + 64);
  v38 = *(_QWORD *)(v0 + 72);
  v40 = *(_QWORD *)(v0 + 56);
  v41 = swift_bridgeObjectRelease(v4);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v38 + 48))(v40, 1, v39, v41) == 1)
  {
    sub_1000051EC(*(_QWORD *)(v0 + 56), &qword_1005D3380);
    v42 = (_QWORD *)swift_task_alloc(dword_1005DC76C);
    *(_QWORD *)(v0 + 120) = v42;
    *v42 = v0;
    v42[1] = sub_100240B70;
    v43 = *(_QWORD *)(v0 + 40);
    v44 = *(_QWORD *)(v0 + 24);
    v42[3] = *(_QWORD *)(v0 + 32);
    v42[4] = v43;
    v42[2] = v44;
    return swift_task_switch(sub_100240E80, v43, 0);
  }
  else
  {
    v46 = *(_QWORD *)(v0 + 96);
    v47 = *(_QWORD *)(v0 + 64);
    v48 = *(_QWORD *)(v0 + 16);
    v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 72) + 32);
    v49(v46, *(_QWORD *)(v0 + 56), v47);
    v49(v48, v46, v47);
    v37(v48, 0, 1, v47);
    v50 = *(_QWORD *)(v0 + 88);
    v51 = *(_QWORD *)(v0 + 80);
    v53 = *(_QWORD *)(v0 + 48);
    v52 = *(_QWORD *)(v0 + 56);
    swift_task_dealloc(*(_QWORD *)(v0 + 96));
    swift_task_dealloc(v50);
    swift_task_dealloc(v51);
    swift_task_dealloc(v52);
    swift_task_dealloc(v53);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100240B70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *(_QWORD *)(*(_QWORD *)v1 + 128) = a1;
  swift_task_dealloc(v2);
  return swift_task_switch(sub_100240BD0, v3, 0);
}

uint64_t sub_100240BD0()
{
  uint64_t v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  double (*v8)(_QWORD, unint64_t, _QWORD, __n128);
  __n128 v9;
  char v10;
  __n128 v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void (*v26)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 104) + 48);
  swift_retain(v1);
  v3 = dispatch thunk of FMFManager.friends.getter(v2);
  v4 = swift_release(v1);
  v5 = *(_QWORD *)(v3 + 16);
  if (!v5)
  {
LABEL_14:
    v25 = *(void **)(v0 + 128);
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD, __n128))(v0 + 112))(*(_QWORD *)(v0 + 16), 1, 1, *(_QWORD *)(v0 + 64), v4);
    goto LABEL_17;
  }
  v6 = *(_QWORD *)(v0 + 72);
  v7 = v3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v37 = v3;
  v38 = *(_QWORD *)(v6 + 72);
  v8 = *(double (**)(_QWORD, unint64_t, _QWORD, __n128))(v6 + 16);
  v9 = swift_bridgeObjectRetain(v3);
  while (1)
  {
    v12 = *(_QWORD *)(v0 + 48);
    v13.n128_f64[0] = v8(*(_QWORD *)(v0 + 80), v7, *(_QWORD *)(v0 + 64), v9);
    FMFFriend.contact.getter(v13);
    v14 = type metadata accessor for FMFContact(0);
    v15 = *(_QWORD *)(v14 - 8);
    v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14);
    v17 = *(_QWORD *)(v0 + 48);
    if (v16 == 1)
    {
      sub_1000051EC(*(_QWORD *)(v0 + 48), &qword_1005D38C0);
      v18 = 0;
      v19 = 0;
    }
    else
    {
      v18 = FMFContact.storeUUID.getter();
      v19 = v20;
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v17, v14);
    }
    v21 = objc_msgSend(*(id *)(v0 + 128), "identifier");
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v24 = v23;

    if (!v19)
    {
      v11 = swift_bridgeObjectRelease(v24);
      goto LABEL_4;
    }
    if (v18 == v22 && v19 == v24)
    {
      swift_bridgeObjectRelease(v19);
      swift_bridgeObjectRelease(v37);
      goto LABEL_16;
    }
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v19, v22, v24, 0);
    swift_bridgeObjectRelease(v24);
    v11 = swift_bridgeObjectRelease(v19);
    if ((v10 & 1) != 0)
      break;
LABEL_4:
    (*(void (**)(_QWORD, _QWORD, __n128))(v6 + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64), v11);
    v7 += v38;
    if (!--v5)
    {
      v3 = v37;
      v4 = swift_bridgeObjectRelease(v37);
      goto LABEL_14;
    }
  }
  v24 = v37;
LABEL_16:
  v25 = *(void **)(v0 + 128);
  v26 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 112);
  v28 = *(_QWORD *)(v0 + 72);
  v27 = *(_QWORD *)(v0 + 80);
  v29 = *(_QWORD *)(v0 + 64);
  v30 = *(_QWORD *)(v0 + 16);
  v31 = swift_bridgeObjectRelease(v24);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v28 + 32))(v30, v27, v29, v31);
  v26(v30, 0, 1, v29);
  v3 = v37;
LABEL_17:
  swift_bridgeObjectRelease(v3);

  v32 = *(_QWORD *)(v0 + 88);
  v33 = *(_QWORD *)(v0 + 80);
  v35 = *(_QWORD *)(v0 + 48);
  v34 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 96));
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100240E64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return swift_task_switch(sub_100240E80, v2, 0);
}

uint64_t sub_100240E80()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1005D1BD0 != -1)
    swift_once(&qword_1005D1BD0, sub_1000C1184);
  v0[5] = objc_msgSend((id)qword_1005F4DB8, "descriptorForRequiredKeys");
  v0[6] = objc_opt_self(CNContactViewController);
  v1 = type metadata accessor for MainActor(0);
  v0[7] = static MainActor.shared.getter(v1);
  v2 = dispatch thunk of Actor.unownedExecutor.getter(v1, &protocol witness table for MainActor);
  return swift_task_switch(sub_100240F40, v2, v3);
}

uint64_t sub_100240F40()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v0 + 64) = objc_msgSend(*(id *)(v0 + 48), "descriptorForRequiredKeys", swift_release(*(_QWORD *)(v0 + 56)).n128_f64[0]);
  return swift_task_switch(sub_100240F9C, v1, 0);
}

void sub_100240F9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSString *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v6 = sub_100053F2C(&qword_1005D2F10);
  v7 = swift_allocObject(v6, 56, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1004820C0;
  *(_QWORD *)(v7 + 32) = v3;
  *(_QWORD *)(v7 + 40) = v1;
  *(_QWORD *)(v7 + 48) = CNContactOrganizationNameKey;
  v18 = v7;
  specialized Array._endMutation()(v7);
  v8 = *(_QWORD *)(*(_QWORD *)(v2 + 112) + 48);
  v9 = CNContactOrganizationNameKey;
  swift_unknownObjectRetain(v3);
  swift_unknownObjectRetain(v1);
  v10 = swift_retain(v8);
  v11 = dispatch thunk of FMFManager.contactsController.getter(v10);
  swift_release(v8);
  v12 = dispatch thunk of FMFContactsDataController.searchInStore(handle:keysToFetch:)(v5, v4, v18);
  swift_bridgeObjectRelease(v18);
  swift_release(v11);
  if (!v12)
    goto LABEL_13;
  if (!((unint64_t)v12 >> 62))
  {
    if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
    goto LABEL_12;
  }
  if (v12 >= 0)
    v16 = v12 & 0xFFFFFFFFFFFFFF8;
  else
    v16 = v12;
  swift_bridgeObjectRetain(v12);
  v17 = _CocoaArrayWrapper.endIndex.getter(v16);
  swift_bridgeObjectRelease(v12);
  if (!v17)
  {
LABEL_12:
    swift_bridgeObjectRelease(v12);
LABEL_13:
    v13 = *(_QWORD *)(v0 + 64);
    v15 = sub_1000C15B8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
    goto LABEL_14;
  }
LABEL_4:
  if ((v12 & 0xC000000000000001) != 0)
  {
    v13 = *(_QWORD *)(v0 + 64);
    v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v12);
    goto LABEL_7;
  }
  if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v13 = *(_QWORD *)(v0 + 64);
    v14 = *(id *)(v12 + 32);
LABEL_7:
    v15 = v14;
    swift_bridgeObjectRelease(v12);
LABEL_14:

    swift_unknownObjectRelease(v13);
    swift_unknownObjectRelease(*(_QWORD *)(v0 + 40));
    (*(void (**)(id))(v0 + 8))(v15);
    return;
  }
  __break(1u);
}

void sub_100241154(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1005E2C20)
  {
    v2 = type metadata accessor for UUID(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1005E2C20);
  }
}

uint64_t sub_1002411A8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1002411B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  __n128 v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  BOOL v38;
  char *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  double v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  id v66;
  id v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t, uint64_t, __n128);
  uint64_t v77;
  void (*v78)(char *, uint64_t, uint64_t, __n128);
  uint64_t v79;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t, __n128);
  uint64_t v84;
  uint64_t v85;
  char *v86;
  unint64_t v87;
  char *v88;
  char *v89;
  unint64_t v90;
  _QWORD *v91;
  void (*v92)(char *, uint64_t, uint64_t, __n128);

  v4 = sub_100053F2C(&qword_1005D2BF0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v92 = (void (*)(char *, uint64_t, uint64_t, __n128))_swiftEmptyArrayStorage;
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v82 = a2;
    v88 = (char *)&v81 - v9;
    v11 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v12 = *(_QWORD *)(v8 + 72);
    v86 = v7;
    v87 = v12;
    v13 = type metadata accessor for UUID(0);
    v84 = *(_QWORD *)(v13 - 8);
    v85 = v13;
    v83 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v84 + 16);
    v81 = a1;
    v14 = swift_bridgeObjectRetain(a1);
    v15 = v88;
    v16 = v85;
    do
    {
      v17 = *(int *)(v4 + 48);
      v18 = (uint64_t)&v15[v17];
      v19 = *(int *)(v4 + 64);
      v20 = &v15[v19];
      v89 = &v15[v19];
      v90 = v10;
      v21 = v11 + v17;
      v22 = v11 + v19;
      v83(v15, v11, v16, v14);
      sub_10004FC74(v21, v18, type metadata accessor for FMBeaconSharingModuleShareState);
      v23 = type metadata accessor for FMFFriend(0);
      v24 = *(_QWORD *)(v23 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v20, v22, v23);
      v25 = (uint64_t)v86;
      v26 = (uint64_t)&v86[*(int *)(v4 + 48)];
      v27 = &v86[*(int *)(v4 + 64)];
      (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v86, v15, v16);
      sub_100051774(v18, v26, type metadata accessor for FMBeaconSharingModuleShareState);
      v28 = (*(uint64_t (**)(char *, char *, uint64_t))(v24 + 32))(v27, v89, v23);
      v29 = FMFFriend.contactHandles.getter(v28);
      v30 = v25;
      v31 = v90;
      sub_1000051EC(v30, &qword_1005D2BF0);
      sub_1003E5214(v29);
      v11 += v87;
      v10 = v31 - 1;
    }
    while (v10);
    swift_bridgeObjectRelease(v81);
    v83 = v92;
    a2 = v82;
  }
  else
  {
    v83 = (void (*)(char *, uint64_t, uint64_t, __n128))_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain(a2);
  v33 = (unint64_t)sub_1002389F4(v32);
  swift_bridgeObjectRelease(a2);
  v34 = v33;
  v92 = (void (*)(char *, uint64_t, uint64_t, __n128))_swiftEmptyArrayStorage;
  v85 = v33;
  if (v33 >> 62)
    goto LABEL_50;
  v35 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v34);
  while (v35)
  {
    v36 = 0;
    v86 = (char *)v35;
    v87 = v85 & 0xC000000000000001;
    v84 = v85 + 32;
    while (1)
    {
      v34 = v87
          ? specialized _ArrayBuffer._getElementSlowPath(_:)(v36, v85)
          : (uint64_t)*(id *)(v84 + 8 * (_QWORD)v36);
      v37 = (char *)v34;
      v38 = __OFADD__(v36, 1);
      v39 = v36 + 1;
      if (v38)
        break;
      v40 = objc_msgSend((id)v34, "emailAddresses");
      v41 = sub_100053F2C((uint64_t *)&unk_1005DF490);
      v42 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v40, v41);

      if ((unint64_t)v42 >> 62)
      {
        if (v42 < 0)
          v57 = v42;
        else
          v57 = v42 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v42);
        v43 = _CocoaArrayWrapper.endIndex.getter(v57);
        swift_bridgeObjectRelease(v42);
        v88 = v39;
        v89 = v37;
        if (!v43)
        {
LABEL_29:
          *(_QWORD *)&v56 = swift_bridgeObjectRelease(v42).n128_u64[0];
          v45 = _swiftEmptyArrayStorage;
          goto LABEL_30;
        }
      }
      else
      {
        v43 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10);
        v88 = v39;
        v89 = v37;
        if (!v43)
          goto LABEL_29;
      }
      v91 = _swiftEmptyArrayStorage;
      v34 = sub_100111E28(0, v43 & ~(v43 >> 63), 0);
      if (v43 < 0)
        goto LABEL_48;
      v90 = v41;
      v44 = 0;
      v45 = v91;
      do
      {
        if ((v42 & 0xC000000000000001) != 0)
          v46 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v44, v42);
        else
          v46 = *(id *)(v42 + 8 * v44 + 32);
        v47 = v46;
        v48 = objc_msgSend(v47, "value");
        v49 = objc_msgSend(v48, "stringValue");
        v50 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
        v52 = v51;

        v91 = v45;
        v54 = v45[2];
        v53 = v45[3];
        if (v54 >= v53 >> 1)
        {
          sub_100111E28(v53 > 1, v54 + 1, 1);
          v45 = v91;
        }
        ++v44;
        v45[2] = v54 + 1;
        v55 = &v45[2 * v54];
        v55[4] = v50;
        v55[5] = v52;
      }
      while (v43 != v44);
      *(_QWORD *)&v56 = swift_bridgeObjectRelease(v42).n128_u64[0];
      v37 = v89;
      v41 = v90;
LABEL_30:
      v58 = objc_msgSend(v37, "phoneNumbers", v56);
      v59 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v58, v41);

      if ((unint64_t)v59 >> 62)
      {
        if (v59 < 0)
          v75 = v59;
        else
          v75 = v59 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v59);
        v60 = _CocoaArrayWrapper.endIndex.getter(v75);
        swift_bridgeObjectRelease(v59);
        if (!v60)
        {
LABEL_45:
          swift_bridgeObjectRelease(v59);
          v62 = _swiftEmptyArrayStorage;
          goto LABEL_9;
        }
      }
      else
      {
        v60 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v60)
          goto LABEL_45;
      }
      v91 = _swiftEmptyArrayStorage;
      v34 = sub_100111E28(0, v60 & ~(v60 >> 63), 0);
      if (v60 < 0)
        goto LABEL_49;
      v61 = 0;
      v62 = v91;
      v90 = v59 & 0xC000000000000001;
      v63 = v59;
      v64 = v60;
      do
      {
        if (v90)
          v65 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v61, v59);
        else
          v65 = *(id *)(v59 + 8 * v61 + 32);
        v66 = v65;
        v67 = objc_msgSend(v66, "value");
        v68 = objc_msgSend(v67, "stringValue");
        v69 = static String._unconditionallyBridgeFromObjectiveC(_:)(v68);
        v71 = v70;

        v91 = v62;
        v73 = v62[2];
        v72 = v62[3];
        if (v73 >= v72 >> 1)
        {
          sub_100111E28(v72 > 1, v73 + 1, 1);
          v62 = v91;
        }
        ++v61;
        v62[2] = v73 + 1;
        v74 = &v62[2 * v73];
        v74[4] = v69;
        v74[5] = v71;
        v59 = v63;
      }
      while (v64 != v61);
      swift_bridgeObjectRelease(v63);
      v37 = v89;
LABEL_9:
      v91 = v45;
      sub_1003E55F0((uint64_t)v62);

      sub_1003E55F0((uint64_t)v91);
      v36 = v88;
      if (v88 == v86)
      {
        swift_bridgeObjectRelease_n(v85, 2);
        v76 = v92;
        goto LABEL_55;
      }
    }
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    if (v34 < 0)
      v77 = v34;
    else
      v77 = v34 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v34);
    v35 = _CocoaArrayWrapper.endIndex.getter(v77);
  }
  swift_bridgeObjectRelease_n(v85, 2);
  v76 = (void (*)(char *, uint64_t, uint64_t, __n128))_swiftEmptyArrayStorage;
LABEL_55:
  v92 = v83;
  sub_1003E55F0((uint64_t)v76);
  v78 = v92;
  v79 = sub_1000CED00((uint64_t)v92);
  swift_bridgeObjectRelease(v78);
  return v79;
}

uint64_t sub_100241840(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  int v18;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a1 + 17);
  v4 = *(unsigned __int8 *)(a1 + 18);
  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(unsigned __int8 *)(a2 + 16);
  v8 = *(unsigned __int8 *)(a2 + 17);
  v9 = *(unsigned __int8 *)(a2 + 18);
  if (*(_BYTE *)(a1 + 17))
    v10 = 256;
  else
    v10 = 0;
  v11 = v10 | v2;
  if (*(_BYTE *)(a1 + 18))
    v12 = 0x10000;
  else
    v12 = 0;
  v13 = sub_1002400E0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), v11 | v12);
  if (v8)
    v14 = 256;
  else
    v14 = 0;
  v15 = v14 | v7;
  if (v9)
    v16 = 0x10000;
  else
    v16 = 0;
  v17 = sub_1002400E0(v5, v6, v15 | v16);
  v18 = sub_1001F42D4(v13, v17);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(v17);
  return v18 & ~(v2 ^ v7) & ~(v3 ^ v8) & (v4 ^ v9 ^ 1u);
}

id sub_100241930(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  objc_class *v22;
  id v23;
  uint64_t v25;
  uint64_t v26;
  objc_super v27;

  v3 = sub_100053F2C(&qword_1005D81A0);
  __chkstk_darwin(v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit(&v1[qword_1005DC8E8]);
  v6 = qword_1005D2060;
  v7 = v1;
  if (v6 != -1)
    swift_once(&qword_1005D2060, sub_1003CB84C);
  v8 = type metadata accessor for Logger(0);
  v9 = sub_100056D88(v8, (uint64_t)qword_1005F5FE0);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v26 = v13;
    *(_DWORD *)v12 = 136315138;
    v25 = sub_100056DA0(0x64656D2874696E69, 0xEF293A726F746169, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "FMBeaconSharingModuleView: %s", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }

  *(_QWORD *)&v7[qword_1005DC8D8] = a1;
  v14 = type metadata accessor for FMBeaconSharingModuleDataSource(0);
  v15 = (_QWORD *)swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  swift_retain_n(a1, 2);
  swift_defaultActor_initialize(v15);
  v15[15] = 0;
  v15[16] = 0;
  v15[17] = 0;
  v16 = (char *)v15 + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_beaconIdentifier;
  v17 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v18 = (char *)v15 + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_viewModel;
  *(_QWORD *)v18 = _swiftEmptyArrayStorage;
  *((_QWORD *)v18 + 1) = _swiftEmptyArrayStorage;
  *((_WORD *)v18 + 8) = 0;
  v18[18] = 0;
  *(_QWORD *)((char *)v15 + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_currentUpdateTask) = 0;
  v15[14] = a1;
  v19 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v5, 1, 1, v19);
  v20 = (_QWORD *)swift_allocObject(&unk_100552870, 40, 7);
  v20[2] = 0;
  v20[3] = 0;
  v20[4] = v15;
  swift_retain(v15);
  v21 = sub_100138D6C((uint64_t)v5, (uint64_t)&unk_1005DCD30, (uint64_t)v20);
  swift_release(v21);
  *(_QWORD *)&v7[qword_1005DC8E0] = v15;

  v22 = (objc_class *)type metadata accessor for FMBeaconSharingModuleView(0);
  v27.receiver = v7;
  v27.super_class = v22;
  v23 = objc_msgSendSuper2(&v27, "init");
  sub_100241CD4();

  swift_release(a1);
  return v23;
}

void sub_100241C54(char *a1, uint64_t a2, void *a3)
{
  id v5;

  swift_unknownObjectWeakInit(&a1[qword_1005DC8E8], 0);
  v5 = a3;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMBeaconSharingModuleView.swift", 38, 2, 406, 0);
  __break(1u);
}

void sub_100241CD4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  unint64_t v20;
  Class isa;
  id v22;
  id v23;
  NSString v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  char v32;
  uint64_t v33;
  void *v34;
  Swift::String v35;
  unint64_t v36;
  Swift::String v37;
  uint64_t v38;
  void *v39;
  id v40;
  Swift::String_optional v41;
  Swift::String v42;
  Swift::String v43;
  Swift::String v44;
  void *v45;
  char *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  id v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char v69[24];
  unint64_t v70;
  unint64_t v71;
  Swift::String v72;

  v1 = sub_100053F2C(&qword_1005D81A0);
  __chkstk_darwin(v1);
  v3 = (char *)&v60 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FMIPProductType(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FMSelectedSection(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FMIPItem(0);
  v67 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v68 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = v0;
  v13 = *(_QWORD *)(*(_QWORD *)&v0[qword_1005DC8D8] + 56)
      + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v13, v69, 0, 0);
  sub_10004FC74(v13, (uint64_t)v10, type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload(v10, v8) == 3)
  {
    v64 = v11;
    v65 = v3;
    (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v68, v10, v11);
    v14 = (void *)objc_opt_self(UIImageSymbolConfiguration);
    v15 = objc_msgSend(v14, "configurationWithTextStyle:scale:", UIFontTextStyleTitle2, 3);
    v16 = sub_100053F2C(&qword_1005D2F10);
    v17 = swift_allocObject(v16, 48, 7);
    *(_OWORD *)(v17 + 16) = xmmword_1004820B0;
    v18 = (void *)objc_opt_self(UIColor);
    *(_QWORD *)(v17 + 32) = objc_msgSend(v18, "whiteColor");
    v19 = objc_msgSend(v18, "systemGreenColor");
    *(_QWORD *)(v17 + 40) = v19;
    v70 = v17;
    specialized Array._endMutation()(v19);
    v20 = v70;
    sub_100006C5C(0, (unint64_t *)&qword_1005DB750, UIColor_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v22 = objc_msgSend(v14, "configurationWithPaletteColors:", isa, swift_bridgeObjectRelease(v20).n128_f64[0]);

    v62 = v22;
    v63 = v15;
    v23 = objc_msgSend(v15, "configurationByApplyingConfiguration:", v22);
    v24 = String._bridgeToObjectiveC()();
    v25 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v24, v23);

    v61 = v25;
    if (v25)
    {
      v27 = FMIPItem.productType.getter(v26);
      v28 = FMIPProductType.isAirTag.getter(v27);
      v29 = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      if ((v28 & 1) != 0)
        v30 = 0x4741545249415FLL;
      else
        v30 = 0x4D4554495FLL;
      if ((v28 & 1) != 0)
        v31 = (void *)0xE700000000000000;
      else
        v31 = (void *)0xE500000000000000;
      v32 = FMIPItem.isOwner.getter(v29);
      if ((v32 & 1) != 0)
        v33 = 0x52454E574F5FLL;
      else
        v33 = 0x4545524148535FLL;
      if ((v32 & 1) != 0)
        v34 = (void *)0xE600000000000000;
      else
        v34 = (void *)0xE700000000000000;
      v70 = 0xD000000000000012;
      v71 = 0x80000001004B7AC0;
      v35._countAndFlagsBits = v30;
      v35._object = v31;
      String.append(_:)(v35);
      swift_bridgeObjectRelease(v31);
      v36 = v71;
      swift_bridgeObjectRetain(v71);
      v37._countAndFlagsBits = v33;
      v37._object = v34;
      String.append(_:)(v37);
      swift_bridgeObjectRelease(v34);
      swift_bridgeObjectRelease(v36);
      v38 = v70;
      v39 = (void *)v71;
      v40 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v41.value._countAndFlagsBits = 0xD000000000000013;
      v72._countAndFlagsBits = 0xD000000000000018;
      v72._object = (void *)0x80000001004A8F80;
      v41.value._object = (void *)0x80000001004A8F60;
      v42._countAndFlagsBits = v38;
      v42._object = v39;
      v43._countAndFlagsBits = 0;
      v43._object = (void *)0xE000000000000000;
      v44 = NSLocalizedString(_:tableName:bundle:value:comment:)(v42, v41, (NSBundle)v40, v43, v72);

      swift_bridgeObjectRelease(v39);
      v45 = v66;
      v46 = &v66[qword_1005E4910];
      sub_10005DAA0((uint64_t)&v66[qword_1005E4910], (uint64_t)&v70, &qword_1005DCE20);
      v48 = *(void **)v46;
      v47 = *((_QWORD *)v46 + 1);
      v50 = *((_QWORD *)v46 + 2);
      v49 = *((_QWORD *)v46 + 3);
      v51 = *((_QWORD *)v46 + 4);
      v52 = v61;
      *(_QWORD *)v46 = v61;
      *((_QWORD *)v46 + 1) = v44._countAndFlagsBits;
      *((_QWORD *)v46 + 3) = 0;
      *((_QWORD *)v46 + 4) = 0;
      *((_QWORD *)v46 + 2) = v44._object;
      v46[40] = 0;
      v53 = v52;
      sub_1000B06E4((uint64_t)&v70, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000C9178);
      swift_bridgeObjectRetain(v44._object);
      sub_1000C91B0(v48, v47, v50, v49, v51);
      sub_100341510((uint64_t)&v70);

      swift_bridgeObjectRelease(v44._object);
      sub_1000B06E4((uint64_t)&v70, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000C91B0);
      v54 = type metadata accessor for TaskPriority(0);
      v55 = (uint64_t)v65;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v65, 1, 1, v54);
      type metadata accessor for MainActor(0);
      v56 = v45;
      v57 = static MainActor.shared.getter(v56);
      v58 = (_QWORD *)swift_allocObject(&unk_100552E38, 40, 7);
      v58[2] = v57;
      v58[3] = &protocol witness table for MainActor;
      v58[4] = v56;
      v59 = sub_100138D6C(v55, (uint64_t)&unk_1005DCE30, (uint64_t)v58);
      swift_release(v59);

      (*(void (**)(char *, uint64_t))(v67 + 8))(v68, v64);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_10004FCB8((uint64_t)v10, type metadata accessor for FMSelectedSection);
  }
}

uint64_t sub_1002422E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[2] = a4;
  v5 = type metadata accessor for MainActor(0);
  v4[3] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v4[4] = v6;
  v4[5] = v7;
  return swift_task_switch(sub_100242354, v6, v7);
}

uint64_t sub_100242354()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0[2] + qword_1005DC8E0);
  v2 = swift_allocObject(&unk_1005528E8, 24, 7);
  v0[6] = v2;
  swift_unknownObjectWeakInit(v2 + 16);
  v3 = dword_1005DC74C;
  swift_retain(v2);
  v4 = (_QWORD *)swift_task_alloc(v3);
  v0[7] = v4;
  *v4 = v0;
  v4[1] = sub_100242408;
  v4[4] = v2;
  v4[5] = v1;
  v4[3] = &unk_1005DCE40;
  return swift_task_switch(sub_10023C688, v1, 0);
}

uint64_t sub_100242408()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 48);
  swift_task_dealloc(*(_QWORD *)(*v0 + 56));
  swift_release_n(v2, 2);
  return swift_task_switch(sub_100242460, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_100242460()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100242490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a4;
  return swift_task_switch(sub_1002424A8, 0, 0);
}

uint64_t sub_1002424A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 40) + 16;
  swift_beginAccess(v1, v0 + 16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  *(_QWORD *)(v0 + 48) = Strong;
  if (!Strong)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v3 = (_QWORD *)swift_task_alloc(dword_1005DC92C);
  *(_QWORD *)(v0 + 56) = v3;
  *v3 = v0;
  v3[1] = sub_100242530;
  return sub_10024257C();
}

uint64_t sub_100242530()
{
  uint64_t *v0;
  void *v1;
  uint64_t v3;

  v1 = *(void **)(*v0 + 48);
  v3 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 56));

  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_10024257C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[3] = v0;
  v2 = type metadata accessor for MainActor(0);
  v1[4] = static MainActor.shared.getter(v2);
  v3 = dispatch thunk of Actor.unownedExecutor.getter(v2, &protocol witness table for MainActor);
  v1[5] = v3;
  v1[6] = v4;
  return swift_task_switch(sub_1002425E8, v3, v4);
}

uint64_t sub_1002425E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + qword_1005DC8E0);
  *(_QWORD *)(v0 + 56) = v1;
  return swift_task_switch(sub_10024260C, v1, 0);
}

uint64_t sub_10024260C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56) + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_viewModel;
  v3 = *(_QWORD *)v2;
  *(_QWORD *)(v0 + 64) = *(_QWORD *)v2;
  v4 = *(_QWORD *)(v2 + 8);
  *(_QWORD *)(v0 + 72) = v4;
  *(_BYTE *)(v0 + 80) = *(_BYTE *)(v2 + 16);
  *(_BYTE *)(v0 + 81) = *(_BYTE *)(v2 + 17);
  *(_BYTE *)(v0 + 82) = *(_BYTE *)(v2 + 18);
  v5 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return swift_task_switch(sub_100242690, v5, v1);
}

uint64_t sub_100242690()
{
  uint64_t v0;
  void **v1;
  uint64_t v2;
  int v3;
  int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  void *v22;
  uint8_t *v23;

  v1 = (void **)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(unsigned __int8 *)(v0 + 82);
  v4 = *(unsigned __int8 *)(v0 + 81);
  v5 = *(unsigned __int8 *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 32));
  if (v4)
    v8 = 256;
  else
    v8 = 0;
  if (v3)
    v9 = 0x10000;
  else
    v9 = 0;
  v10 = sub_1002400E0(v7, v6, v8 | v9 | v5);
  swift_bridgeObjectRelease(v7);
  swift_bridgeObjectRelease(v6);
  v11 = qword_1005E4918;
  v12 = *(_QWORD *)(v2 + qword_1005E4918);
  *(_QWORD *)(v2 + qword_1005E4918) = v10;
  swift_bridgeObjectRetain(v10);
  v14 = sub_1001F42D4(v13, v12);
  swift_bridgeObjectRelease(v10);
  if ((v14 & 1) == 0)
  {
    v15 = *(_QWORD *)(v2 + v11);
    swift_bridgeObjectRetain(v15);
    sub_1002392B8(v16);
    swift_bridgeObjectRelease(v12);
    v12 = v15;
  }
  swift_bridgeObjectRelease(v12);
  if (qword_1005D2060 != -1)
    swift_once(&qword_1005D2060, sub_1003CB84C);
  v17 = *v1;
  v18 = type metadata accessor for Logger(0);
  sub_100056D88(v18, (uint64_t)qword_1005F5FE0);
  v19 = Logger.logObject.getter(v17);
  v20 = static os_log_type_t.default.getter(v19);
  v21 = os_log_type_enabled(v19, v20);
  v22 = *v1;
  if (v21)
  {
    v23 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v23 = 134217984;
    *(_QWORD *)(v0 + 16) = *(_QWORD *)(*(_QWORD *)(v2 + v11) + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 16, v0 + 24);

    _os_log_impl((void *)&_mh_execute_header, v19, v20, "FMBeaconSharingModuleView: Received new rows: %ld", v23, 0xCu);
    swift_slowDealloc(v23, -1, -1);
  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100242888(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[4] = a1;
  v2[5] = v1;
  v3 = type metadata accessor for UUID(0);
  v2[6] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[7] = v4;
  v2[8] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MainActor(0);
  v2[9] = static MainActor.shared.getter(v5);
  v6 = dispatch thunk of Actor.unownedExecutor.getter(v5, &protocol witness table for MainActor);
  v2[10] = v6;
  v2[11] = v7;
  return swift_task_switch(sub_10024291C, v6, v7);
}

uint64_t sub_10024291C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __n128 v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if (qword_1005D2060 != -1)
    swift_once(&qword_1005D2060, sub_1003CB84C);
  v1 = v0[4];
  v3 = v0[7];
  v2 = v0[8];
  v4 = v0[6];
  v5 = type metadata accessor for Logger(0);
  sub_100056D88(v5, (uint64_t)qword_1005F5FE0);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  v9 = os_log_type_enabled(v7, v8);
  v10 = v0[8];
  v11 = v0[6];
  if (v9)
  {
    v20 = v0[7];
    v12 = swift_slowAlloc(22, -1);
    v21 = swift_slowAlloc(64, -1);
    v22 = v21;
    *(_DWORD *)v12 = 136315394;
    v0[2] = sub_100056DA0(0xD000000000000027, 0x80000001004B7A70, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 2, v0 + 3);
    *(_WORD *)(v12 + 12) = 2080;
    v13 = sub_100008000((unint64_t *)&qword_1005DA7C0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v14 = dispatch thunk of CustomStringConvertible.description.getter(v11, v13);
    v16 = v15;
    v0[3] = sub_100056DA0(v14, v15, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 3, v0 + 4);
    v17 = swift_bridgeObjectRelease(v16);
    (*(void (**)(uint64_t, uint64_t, __n128))(v20 + 8))(v10, v11, v17);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "FMBeaconSharingModuleView: %s - %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy(v21, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v0[7] + 8))(v0[8], v0[6]);
  }

  v18 = (_QWORD *)swift_task_alloc(dword_1005DC754);
  v0[12] = v18;
  *v18 = v0;
  v18[1] = sub_100242B88;
  return sub_10023C88C(v0[4]);
}

uint64_t sub_100242B88()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_task_dealloc(*(_QWORD *)(*v0 + 96));
  return swift_task_switch(sub_100242BD4, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
}

uint64_t sub_100242BD4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 72));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100242C0C(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double result;
  uint64_t v19;

  v3 = type metadata accessor for FMBeaconSharingModuleEntry(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100053F2C(&qword_1005D81A0);
  __chkstk_darwin(v7);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  sub_10004FC74(a1, (uint64_t)v6, type metadata accessor for FMBeaconSharingModuleEntry);
  type metadata accessor for MainActor(0);
  v11 = v1;
  v12 = static MainActor.shared.getter(v11);
  v13 = *(unsigned __int8 *)(v4 + 80);
  v14 = (v13 + 32) & ~v13;
  v15 = (v5 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = swift_allocObject(&unk_100552898, v15 + 8, v13 | 7);
  *(_QWORD *)(v16 + 16) = v12;
  *(_QWORD *)(v16 + 24) = &protocol witness table for MainActor;
  sub_100051774((uint64_t)v6, v16 + v14, type metadata accessor for FMBeaconSharingModuleEntry);
  *(_QWORD *)(v16 + v15) = v11;
  v17 = sub_100138D6C((uint64_t)v9, (uint64_t)&unk_1005DCD60, v16);
  *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  return result;
}

uint64_t sub_100242D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5[7] = a4;
  v5[8] = a5;
  v6 = sub_100053F2C(&qword_1005D81A0);
  v5[9] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for IndexPath(0);
  v5[10] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[11] = v8;
  v5[12] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100053F2C(&qword_1005D33C0);
  v5[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FMSelectedSection(0);
  v5[14] = v10;
  v5[15] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FMIPItem(0);
  v5[16] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v5[17] = v12;
  v13 = *(_QWORD *)(v12 + 64);
  v5[18] = v13;
  v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[19] = swift_task_alloc(v14);
  v5[20] = swift_task_alloc(v14);
  v15 = type metadata accessor for UUID(0);
  v5[21] = v15;
  v16 = *(_QWORD *)(v15 - 8);
  v5[22] = v16;
  v5[23] = swift_task_alloc((*(_QWORD *)(v16 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(type metadata accessor for FMBeaconSharingModuleEntry(0) - 8);
  v5[24] = v17;
  v18 = *(_QWORD *)(v17 + 64);
  v5[25] = v18;
  v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[26] = swift_task_alloc(v19);
  v5[27] = swift_task_alloc(v19);
  v5[28] = swift_task_alloc(v19);
  v5[29] = swift_task_alloc(v19);
  v20 = type metadata accessor for MainActor(0);
  v5[30] = v20;
  v5[31] = static MainActor.shared.getter(v20);
  v21 = dispatch thunk of Actor.unownedExecutor.getter(v20, &protocol witness table for MainActor);
  v5[32] = v21;
  v5[33] = v22;
  return swift_task_switch(sub_100242F2C, v21, v22);
}

uint64_t sub_100242F2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, unint64_t, uint64_t, __n128);
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  Class isa;
  uint64_t v47;
  uint64_t (*v48)(uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  __n128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  os_log_type_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  id v94;
  id v95;
  uint64_t v96;

  v1 = v0 + 16;
  if (qword_1005D2060 != -1)
    swift_once(&qword_1005D2060, sub_1003CB84C);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 232);
  v4 = type metadata accessor for Logger(0);
  sub_100056D88(v4, (uint64_t)qword_1005F5FE0);
  v5 = sub_10004FC74(v2, v3, type metadata accessor for FMBeaconSharingModuleEntry);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  v8 = os_log_type_enabled(v6, v7);
  v9 = *(_QWORD *)(v0 + 232);
  if (v8)
  {
    v87 = v7;
    v10 = *(_QWORD *)(v0 + 224);
    v11 = swift_slowAlloc(22, -1);
    v90 = swift_slowAlloc(64, -1);
    v96 = v90;
    *(_DWORD *)v11 = 136315394;
    *(_QWORD *)(v0 + 40) = sub_100056DA0(0xD000000000000018, 0x80000001004B7820, &v96);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 40, v0 + 48);
    *(_WORD *)(v11 + 12) = 2080;
    sub_10004FC74(v9, v10, type metadata accessor for FMBeaconSharingModuleEntry);
    v12 = sub_100053F2C(&qword_1005DCB20);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v10, 2, v12);
    if (v13)
    {
      if (v13 == 1)
      {
        v14 = 0xE200000000000000;
        v15 = 25933;
      }
      else
      {
        v14 = 0xE90000000000006ELL;
        v15 = 0x6F73726550646441;
      }
    }
    else
    {
      v16 = *(_QWORD *)(v0 + 224);
      v17 = *(_QWORD *)(v0 + 176);
      v18 = *(_QWORD *)(v0 + 184);
      v19 = *(_QWORD *)(v0 + 168);
      v85 = v16 + *(int *)(v12 + 48);
      v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v18, v16 + *(int *)(v12 + 64), v19);
      v15 = UUID.uuidString.getter(v20);
      v14 = v21;
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v19);
      sub_10004FCB8(v85, type metadata accessor for FMBeaconSharingModuleShareState);
      sub_10004FCB8(v16, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    }
    v22 = *(_QWORD *)(v0 + 232);
    *(_QWORD *)(v0 + 48) = sub_100056DA0(v15, v14, &v96);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(v0 + 48, v0 + 56);
    swift_bridgeObjectRelease(v14);
    sub_10004FCB8(v22, type metadata accessor for FMBeaconSharingModuleEntry);
    _os_log_impl((void *)&_mh_execute_header, v6, v87, "FMBeaconSharingModuleView: %s - %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy(v90, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v90, -1, -1);
    swift_slowDealloc(v11, -1, -1);

    v1 = v0 + 16;
  }
  else
  {
    sub_10004FCB8(*(_QWORD *)(v0 + 232), type metadata accessor for FMBeaconSharingModuleEntry);

  }
  v23 = *(_QWORD *)(v0 + 112);
  v24 = *(_QWORD *)(v0 + 120);
  v25 = *(_QWORD *)(*(_QWORD *)(v0 + 64) + qword_1005DC8D8);
  *(_QWORD *)(v0 + 272) = v25;
  v26 = *(_QWORD *)(v25 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v26, v1, 0, 0);
  sub_10004FC74(v26, v24, type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload(v24, v23) != 3)
  {
    v47 = *(_QWORD *)(v0 + 120);
    swift_release(*(_QWORD *)(v0 + 248));
    v48 = type metadata accessor for FMSelectedSection;
    v49 = v47;
LABEL_26:
    sub_10004FCB8(v49, v48);
    goto LABEL_27;
  }
  v27 = *(_QWORD *)(v0 + 160);
  v28 = *(_QWORD *)(v0 + 128);
  v29 = *(_QWORD *)(v0 + 120);
  v30 = *(_QWORD *)(v0 + 64);
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 136) + 32);
  *(_QWORD *)(v0 + 280) = v31;
  v31(v27, v29, v28);
  v93 = *(id *)(v30 + qword_1005E4930);
  v32 = objc_msgSend(v93, "indexPathsForSelectedRows");
  if (v32)
  {
    v33 = v32;
    v34 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v32, *(_QWORD *)(v0 + 80));

    v35 = *(_QWORD *)(v34 + 16);
    v36 = *(_QWORD *)(v0 + 88);
    v91 = v34;
    if (v35)
    {
      v37 = v34 + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
      v38 = *(_QWORD *)(v36 + 72);
      v39 = *(void (**)(uint64_t, unint64_t, uint64_t, __n128))(v36 + 16);
      v40 = swift_bridgeObjectRetain(v34);
      while (1)
      {
        v41 = *(_QWORD *)(v0 + 104);
        v42 = *(_QWORD *)(v0 + 80);
        v39(v41, v37, v42, v40);
        v43 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v36 + 56);
        v43(v41, 0, 1, v42);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v41, 1, v42) == 1)
          break;
        v44 = *(_QWORD *)(v0 + 96);
        v45 = *(_QWORD *)(v0 + 80);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v36 + 32))(v44, *(_QWORD *)(v0 + 104), v45);
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v93, "deselectRowAtIndexPath:animated:", isa, 1);

        (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v44, v45);
        v37 += v38;
        if (!--v35)
          goto LABEL_20;
      }
    }
    else
    {
      v43 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v36 + 56);
      v40 = swift_bridgeObjectRetain(v34);
LABEL_20:
      ((void (*)(_QWORD, uint64_t, uint64_t, _QWORD, __n128))v43)(*(_QWORD *)(v0 + 104), 1, 1, *(_QWORD *)(v0 + 80), v40);
    }
    swift_bridgeObjectRelease_n(v91, 2);
  }
  v50 = *(_QWORD *)(v0 + 216);
  sub_10004FC74(*(_QWORD *)(v0 + 56), v50, type metadata accessor for FMBeaconSharingModuleEntry);
  v51 = sub_100053F2C(&qword_1005DCB20);
  v52 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 48))(v50, 2, v51);
  if (!v52)
  {
    v58 = *(_QWORD *)(v0 + 208);
    v57 = *(_QWORD *)(v0 + 216);
    v60 = *(_QWORD *)(v0 + 192);
    v59 = *(_QWORD *)(v0 + 200);
    v92 = *(_QWORD *)(v0 + 176);
    v94 = *(id *)(v0 + 168);
    v84 = *(_QWORD *)(v0 + 136);
    v86 = *(_QWORD *)(v0 + 128);
    v88 = *(_QWORD *)(v0 + 160);
    v61 = *(void **)(v0 + 64);
    v62 = *(_QWORD *)(v0 + 72);
    v63 = *(_QWORD *)(v0 + 56);
    swift_release(*(_QWORD *)(v0 + 248));
    v89 = v57 + *(int *)(v51 + 48);
    v83 = v57 + *(int *)(v51 + 64);
    v64 = type metadata accessor for TaskPriority(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v62, 1, 1, v64);
    sub_10004FC74(v63, v58, type metadata accessor for FMBeaconSharingModuleEntry);
    v65 = v61;
    v66 = static MainActor.shared.getter(v65);
    v67 = *(unsigned __int8 *)(v60 + 80);
    v68 = (v67 + 40) & ~v67;
    v69 = (_QWORD *)swift_allocObject(&unk_1005528C0, v68 + v59, v67 | 7);
    v69[2] = v66;
    v69[3] = &protocol witness table for MainActor;
    v69[4] = v65;
    sub_100051774(v58, (uint64_t)v69 + v68, type metadata accessor for FMBeaconSharingModuleEntry);
    v70 = sub_100138D6C(v62, (uint64_t)&unk_1005DCD70, (uint64_t)v69);
    v71 = swift_release(v70);
    (*(void (**)(uint64_t, uint64_t, __n128))(v84 + 8))(v88, v86, v71);
    (*(void (**)(uint64_t, id))(v92 + 8))(v83, v94);
    sub_10004FCB8(v89, type metadata accessor for FMBeaconSharingModuleShareState);
    v48 = type metadata accessor for FMBeaconSharingModuleRelationshipType;
    v49 = v57;
    goto LABEL_26;
  }
  if (v52 == 1)
  {
    v53 = *(_QWORD *)(v0 + 160);
    v54 = *(_QWORD *)(v0 + 128);
    v55 = *(_QWORD *)(v0 + 136);
    v56 = swift_release(*(_QWORD *)(v0 + 248));
    (*(void (**)(uint64_t, uint64_t, __n128))(v55 + 8))(v53, v54, v56);
LABEL_27:
    v72 = *(_QWORD *)(v0 + 224);
    v74 = *(_QWORD *)(v0 + 208);
    v73 = *(_QWORD *)(v0 + 216);
    v75 = *(_QWORD *)(v0 + 184);
    v77 = *(_QWORD *)(v0 + 152);
    v76 = *(_QWORD *)(v0 + 160);
    v78 = *(_QWORD *)(v0 + 120);
    v80 = *(_QWORD *)(v0 + 96);
    v79 = *(_QWORD *)(v0 + 104);
    v95 = *(id *)(v0 + 72);
    swift_task_dealloc(*(_QWORD *)(v0 + 232));
    swift_task_dealloc(v72);
    swift_task_dealloc(v73);
    swift_task_dealloc(v74);
    swift_task_dealloc(v75);
    swift_task_dealloc(v76);
    swift_task_dealloc(v77);
    swift_task_dealloc(v78);
    swift_task_dealloc(v79);
    swift_task_dealloc(v80);
    swift_task_dealloc(v95);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v82 = *(_QWORD *)(*(_QWORD *)(v0 + 64) + qword_1005DC8E0);
  *(_QWORD *)(v0 + 288) = v82;
  return swift_task_switch(sub_100243678, v82, 0);
}

uint64_t sub_100243678()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 288) + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_viewModel;
  v2 = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 296) = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(v0 + 304) = v3;
  *(_BYTE *)(v0 + 312) = *(_BYTE *)(v1 + 16);
  *(_BYTE *)(v0 + 313) = *(_BYTE *)(v1 + 17);
  *(_BYTE *)(v0 + 314) = *(_BYTE *)(v1 + 18);
  v5 = *(_QWORD *)(v0 + 256);
  v4 = *(_QWORD *)(v0 + 264);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  return swift_task_switch(sub_1002436FC, v5, v4);
}

uint64_t sub_1002436FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, __n128);
  id v11;
  id v12;
  id v13;
  void *Strong;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  void (**v27)();
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  id v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;

  v2 = *(_QWORD *)(v0 + 296);
  v1 = *(_QWORD *)(v0 + 304);
  v3 = *(_QWORD *)(v0 + 272);
  v5 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 136);
  v8 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 248));
  v43 = sub_1002411B8(v2, v1);
  swift_bridgeObjectRelease(v1);
  v9 = swift_bridgeObjectRelease(v2);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v6 + 16);
  v10(v5, v4, v7, v9);
  v11 = objc_allocWithZone((Class)type metadata accessor for FMItemSharingLandingViewController(0));
  swift_retain(v3);
  v12 = sub_1003317B4(v5, v3, 0, 0);
  swift_release(v3);
  objc_allocWithZone((Class)type metadata accessor for FMActivityIndicatingNavigationController());
  v42 = (char *)v12;
  v13 = sub_1000A750C(v42, 2);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v8 + qword_1005DC8E8);
  if (Strong)
  {
    v15 = Strong;
    objc_msgSend(Strong, "presentViewController:animated:completion:", v13, 1, 0);

  }
  v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 280);
  v41 = v13;
  v17 = *(_QWORD *)(v0 + 152);
  v16 = *(_QWORD *)(v0 + 160);
  v19 = *(_QWORD *)(v0 + 136);
  v18 = *(_QWORD *)(v0 + 144);
  v20 = *(_QWORD *)(v0 + 128);
  v21 = swift_allocObject(&unk_1005528E8, 24, 7);
  swift_unknownObjectWeakInit(v21 + 16);
  ((void (*)(uint64_t, uint64_t, uint64_t))v10)(v17, v16, v20);
  v22 = *(unsigned __int8 *)(v19 + 80);
  v23 = (v22 + 24) & ~v22;
  v24 = (v18 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  v25 = (v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  v26 = swift_allocObject(&unk_100552910, v25 + 8, v22 | 7);
  *(_QWORD *)(v26 + 16) = v21;
  v40(v26 + v23, v17, v20);
  *(_QWORD *)(v26 + v24) = v43;
  *(_QWORD *)(v26 + v25) = v41;
  v27 = (void (**)())&v42[qword_1005F5AE0];
  v29 = *(_QWORD *)&v42[qword_1005F5AE0];
  v28 = *(_QWORD *)&v42[qword_1005F5AE0 + 8];
  *v27 = sub_100252908;
  v27[1] = (void (*)())v26;
  swift_retain(v21);
  sub_1000327F0(v29, v28);

  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v16, v20);
  swift_release(v21);
  v30 = *(_QWORD *)(v0 + 224);
  v32 = *(_QWORD *)(v0 + 208);
  v31 = *(_QWORD *)(v0 + 216);
  v33 = *(_QWORD *)(v0 + 184);
  v35 = *(_QWORD *)(v0 + 152);
  v34 = *(_QWORD *)(v0 + 160);
  v36 = *(_QWORD *)(v0 + 120);
  v38 = *(_QWORD *)(v0 + 96);
  v37 = *(_QWORD *)(v0 + 104);
  v44 = *(_QWORD *)(v0 + 72);
  swift_task_dealloc(*(_QWORD *)(v0 + 232));
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  swift_task_dealloc(v32);
  swift_task_dealloc(v33);
  swift_task_dealloc(v34);
  swift_task_dealloc(v35);
  swift_task_dealloc(v36);
  swift_task_dealloc(v37);
  swift_task_dealloc(v38);
  swift_task_dealloc(v44);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_10024399C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t MyUI;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t Strong;
  char *v29;
  Swift::Bool v30;
  uint64_t v31;
  uint64_t Controller;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(char *, unint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  char *v48;
  double v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  id v74;
  id v75;
  id v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  id v81;
  void *v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  _QWORD *v109;
  char v110[32];

  v108 = a4;
  v104 = a2;
  v6 = type metadata accessor for FMFFriend(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FMIPBeaconSharingLimits(0);
  v96 = *(_QWORD *)(v10 - 8);
  v97 = v10;
  __chkstk_darwin(v10);
  v95 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for ShareItemContactPickerView(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v98 = (char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v99 = (char *)&v84 - v16;
  v93 = type metadata accessor for FMIPProductType(0);
  v92 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v91 = (char *)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for ContactPickerViewModel.Dependencies(0);
  v106 = *(_QWORD *)(v18 - 8);
  v107 = v18;
  v19 = __chkstk_darwin(v18);
  v103 = (char *)&v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v105 = (char *)&v84 - v21;
  v22 = type metadata accessor for FMIPItem(0);
  v100 = *(_QWORD *)(v22 - 8);
  v101 = v22;
  __chkstk_darwin(v22);
  v94 = v23;
  v102 = (char *)&v84 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MyUI = type metadata accessor for Feature.FindMyUI(0);
  v25 = *(_QWORD *)(MyUI - 8);
  __chkstk_darwin(MyUI);
  v27 = (char *)&v84 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v110, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v29 = (char *)Strong;
    v90 = v13;
    (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v27, enum case for Feature.FindMyUI.newContactPicker(_:), MyUI);
    sub_100008000((unint64_t *)&unk_1005E5910, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.FindMyUI, (uint64_t)&protocol conformance descriptor for Feature.FindMyUI);
    v30 = FeatureFlagsKey.isEnabled()();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, MyUI);
    if (v30)
    {
      v88 = v12;
      v87 = v29;
      v31 = *(_QWORD *)&v29[qword_1005DC8D8];
      Controller = type metadata accessor for QueryController(0);
      swift_retain(v31);
      v33 = QueryController.__allocating_init(serviceName:)(0xD00000000000001BLL, 0x80000001004B7840);
      v86 = v31;
      v89 = v33;
      swift_retain(v33);
      v35 = dispatch thunk of FMFManager.friends.getter(v34);
      v36 = v35;
      v109 = _swiftEmptyArrayStorage;
      v37 = *(_QWORD *)(v35 + 16);
      if (v37)
      {
        v85 = Controller;
        v38 = v35 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
        v39 = *(_QWORD *)(v7 + 72);
        v40 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v7 + 16);
        do
        {
          v41 = v40(v9, v38, v6);
          v42 = FMFFriend.contactHandles.getter(v41);
          (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
          sub_1003E5214(v42);
          v38 += v39;
          --v37;
        }
        while (v37);
        v43 = swift_bridgeObjectRelease(v36);
        v44 = v109;
      }
      else
      {
        v43 = swift_bridgeObjectRelease(v35);
        v44 = _swiftEmptyArrayStorage;
      }
      v50 = v105;
      ContactPickerViewModel.Dependencies.init(isReachable:isHandlePartOfSignedInAccount:excludedSuggestedContactHandles:)(&unk_1005DCD80, v89, &unk_1005DCD88, 0, v44, v43);
      v51 = QueryController.__allocating_init(serviceName:)(0xD000000000000037, 0x80000001004AF890);
      v52 = swift_retain(v51);
      v53 = v91;
      v54 = v104;
      v55 = FMIPItem.productType.getter(v52);
      LODWORD(v85) = FMIPProductType.isAirTag.getter(v55);
      (*(void (**)(char *, uint64_t))(v92 + 8))(v53, v93);
      (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v103, v50, v107);
      v56 = v86;
      v57 = *(_QWORD *)(v86 + 24) + OBJC_IVAR____TtC6FindMy17FMDevicesProvider_sharingLimits;
      v58 = swift_beginAccess(v57, &v109, 0, 0);
      v60 = v95;
      v59 = v96;
      v61 = v97;
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v96 + 16))(v95, v57, v97, v58);
      v62 = swift_retain(v51);
      v63 = FMIPBeaconSharingLimits.maxCircleMembers.getter(v62);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v61);
      v65 = v100;
      v64 = v101;
      v66 = v102;
      (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v102, v54, v101);
      v67 = *(unsigned __int8 *)(v65 + 80);
      v68 = (v67 + 16) & ~v67;
      v69 = (v94 + v68 + 7) & 0xFFFFFFFFFFFFFFF8;
      v70 = (v69 + 15) & 0xFFFFFFFFFFFFFFF8;
      v71 = swift_allocObject(&unk_100552938, v70 + 8, v67 | 7);
      (*(void (**)(uint64_t, char *, uint64_t))(v65 + 32))(v71 + v68, v66, v64);
      v72 = v87;
      *(_QWORD *)(v71 + v69) = v87;
      *(_QWORD *)(v71 + v70) = v56;
      v73 = swift_allocObject(&unk_100552960, 24, 7);
      v74 = v108;
      *(_QWORD *)(v73 + 16) = v108;
      swift_retain(v56);
      v75 = v72;
      v76 = v74;
      v77 = v99;
      ShareItemContactPickerView.init(dependencies:isCapabilityEnabled:isAirTag:maxCircleMembersSharingLimits:performAction:showOfferSuccess:)(v103, &unk_1005DCD98, v51, v85 & 1, v63, &unk_1005DCDA8, v71, sub_100252B84, v73);
      v78 = v90;
      v79 = v98;
      v80 = v88;
      (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v98, v77, v88);
      v81 = objc_allocWithZone((Class)sub_100053F2C(&qword_1005DCDB0));
      v82 = (void *)UIHostingController.init(rootView:)(v79);
      objc_msgSend(v76, "pushViewController:animated:", v82, 1);

      swift_release(v56);
      swift_release_n(v51, 2);
      v83 = swift_release(v89);
      (*(void (**)(char *, uint64_t, __n128))(v78 + 8))(v77, v80, v83);
      (*(void (**)(char *, uint64_t))(v106 + 8))(v105, v107);
    }
    else
    {
      v45 = (uint64_t)v102;
      (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v102, v104, v101);
      v46 = *(_QWORD *)&v29[qword_1005DC8D8];
      v47 = objc_allocWithZone((Class)type metadata accessor for FMItemSharingContactPickerViewController(0));
      swift_bridgeObjectRetain(a3);
      swift_retain(v46);
      v48 = sub_100119C04(v45, a3, v46);
      *(_QWORD *)&v49 = swift_release(v46).n128_u64[0];
      objc_msgSend(v108, "pushViewController:animated:", v48, 1, v49);

    }
  }
}

uint64_t sub_1002440C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  v5 = type metadata accessor for FMIPItem(0);
  v4[6] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[7] = v6;
  v4[8] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  return swift_task_switch(sub_10024412C, 0, 0);
}

uint64_t sub_10024412C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;

  if (qword_1005D2060 != -1)
    swift_once(&qword_1005D2060, sub_1003CB84C);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100056D88(v1, (uint64_t)qword_1005F5FE0);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FMItemSharingContactPickerViewController: Will perform sendShareInvite action", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v7 = v0[7];
  v6 = v0[8];
  v8 = v0[5];
  v9 = v0[6];
  v10 = v0[3];
  v11 = v0[2];

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v10, v9);
  v12 = type metadata accessor for FMIPShareItemAction(0);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  v13 = swift_bridgeObjectRetain(v11);
  v14 = FMIPShareItemAction.init(item:handles:)(v6, v11, v13);
  v0[9] = v14;
  v15 = swift_allocObject(&unk_1005528E8, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16);
  v16 = (_QWORD *)swift_allocObject(&unk_100552A00, 40, 7);
  v0[10] = v16;
  v16[2] = v8;
  v16[3] = v14;
  v16[4] = v15;
  v17 = async function pointer to withTimeout<A>(_:block:)[1];
  swift_retain(v8);
  swift_retain(v14);
  v18 = (_QWORD *)swift_task_alloc(v17);
  v0[11] = v18;
  *v18 = v0;
  v18[1] = sub_100244314;
  return withTimeout<A>(_:block:)();
}

uint64_t sub_100244314()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 88);
  *(_QWORD *)(*v1 + 96) = v0;
  swift_task_dealloc(v3);
  if (v0)
  {
    v4 = sub_1002443BC;
  }
  else
  {
    swift_release(*(_QWORD *)(v2 + 80));
    v4 = sub_100244380;
  }
  return swift_task_switch(v4, 0, 0);
}

uint64_t sub_100244380()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 72));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002443BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 72));
  swift_release(v1);
  swift_task_dealloc(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100244404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch(sub_100244420, 0, 0);
}

uint64_t sub_100244420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = swift_task_alloc(48);
  *(_QWORD *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  *(_QWORD *)(v0 + 56) = v3;
  *v3 = v0;
  v3[1] = sub_1002444C8;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(*(_QWORD *)(v0 + 16), 0, 0, 0xD000000000000020, 0x80000001004B7860, sub_100252C40, v2, &type metadata for () + 1);
}

uint64_t sub_1002444C8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*v1 + 56);
  v3 = *v1;
  *(_QWORD *)(v3 + 64) = v0;
  swift_task_dealloc(v2);
  if (v0)
    return swift_task_switch(sub_10024453C, 0, 0);
  swift_task_dealloc(*(_QWORD *)(v3 + 48));
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_10024453C()
{
  uint64_t v0;

  swift_task_dealloc(*(_QWORD *)(v0 + 48));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_100244570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *Strong;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double result;
  _BYTE v20[24];

  v8 = sub_100053F2C(&qword_1005DCDC8);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = a4 + 16;
  v12 = *(_QWORD *)(*(_QWORD *)(a2 + 24) + 32);
  v13 = swift_allocObject(&unk_1005528E8, 24, 7);
  swift_beginAccess(v11, v20, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v11);
  swift_unknownObjectWeakInit(v13 + 16);
  swift_retain(v12);

  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(&v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], a1, v8);
  v15 = *(unsigned __int8 *)(v9 + 80);
  v16 = (v15 + 24) & ~v15;
  v17 = swift_allocObject(&unk_100552A28, v16 + v10, v15 | 7);
  *(_QWORD *)(v17 + 16) = v13;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v9 + 32))(v17 + v16, &v20[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], v8);
  swift_retain(v13);
  sub_1000B2D64(a3, (uint64_t)sub_100252CC4, v17);
  swift_release(v12);
  swift_release(v17);
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

void sub_1002446E0(int64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  void *Strong;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  int64_t v48;
  unint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  char v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD v85[3];
  _BYTE v86[8];
  _QWORD v87[3];
  _BYTE v88[8];
  uint64_t v89;
  _BYTE v90[32];

  v9 = type metadata accessor for FMIPItemActionStatus(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (int64_t)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  a4 += 16;
  swift_beginAccess(a4, v90, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(a4);
  if (!Strong)
  {
    v22 = ((uint64_t (*)(void))type metadata accessor for ShareItemError)();
    v23 = sub_100008000(&qword_1005DCDD0, (uint64_t (*)(uint64_t))&type metadata accessor for ShareItemError, (uint64_t)&protocol conformance descriptor for ShareItemError);
    v24 = swift_allocError(v22, v23, 0, 0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v25, enum case for ShareItemError.generic(_:), v22);
    v89 = v24;
    v26 = sub_100053F2C(&qword_1005DCDC8);
    CheckedContinuation.resume(throwing:)(&v89, v26);
    return;
  }
  v78 = Strong;
  v83 = a5;
  if (qword_1005D2060 != -1)
    goto LABEL_49;
LABEL_3:
  v14 = type metadata accessor for Logger(0);
  v15 = sub_100056D88(v14, (uint64_t)qword_1005F5FE0);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "FMItemSharingContactPickerViewController: Did perform sendShareInvite action", v18, 2u);
    swift_slowDealloc(v18, -1, -1);
  }

  (*(void (**)(int64_t, _QWORD, uint64_t))(v10 + 104))(v12, enum case for FMIPItemActionStatus.success(_:), v9);
  v19 = sub_100008000(&qword_1005D4140, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItemActionStatus, (uint64_t)&protocol conformance descriptor for FMIPItemActionStatus);
  v20 = dispatch thunk of static Equatable.== infix(_:_:)(a1, v12, v9, v19);
  (*(void (**)(int64_t, uint64_t))(v10 + 8))(v12, v9);
  if ((v20 & 1) == 0)
  {
    v27 = sub_100117398(a3);
    v89 = v27;
    v28 = sub_100053F2C(&qword_1005D39B0);
    v29 = sub_10003F774((unint64_t *)&qword_1005E2AD0, &qword_1005D39B0, (uint64_t)&protocol conformance descriptor for [A]);
    v30 = BidirectionalCollection<>.joined(separator:)(10, 0xE100000000000000, v28, v29);
    v32 = v31;
    swift_bridgeObjectRelease(v27);
    swift_bridgeObjectRetain(v32);
    v34 = Logger.logObject.getter(v33);
    v35 = static os_log_type_t.error.getter(v34);
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc(12, -1);
      v37 = swift_slowAlloc(32, -1);
      v89 = v37;
      *(_DWORD *)v36 = 136315138;
      swift_bridgeObjectRetain(v32);
      v84 = sub_100056DA0(v30, v32, &v89);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v84, v85);
      swift_bridgeObjectRelease_n(v32, 3);
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "FMItemSharingContactPickerViewController: sendShareInvite - error: %s", v36, 0xCu);
      swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v37, -1, -1);
      swift_slowDealloc(v36, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v32, 2);
    }
    v38 = a3 + 64;
    v39 = 1 << *(_BYTE *)(a3 + 32);
    v40 = -1;
    if (v39 < 64)
      v40 = ~(-1 << v39);
    v10 = v40 & *(_QWORD *)(a3 + 64);
    a1 = (unint64_t)(v39 + 63) >> 6;
    v9 = SPBeaconSharingErrorDomain;
    v82 = enum case for ShareItemError.sharingCircleSizeLimitReached(_:);
    v81 = enum case for ShareItemError.pendingRequestLimitReached(_:);
    v80 = enum case for ShareItemError.offerLimitReached(_:);
    v79 = enum case for ShareItemError.sharedItemsCountLimitReached(_:);
    swift_bridgeObjectRetain(a3);
    v12 = 0;
    while (1)
    {
      if (v10)
      {
        v46 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v47 = v46 | (v12 << 6);
      }
      else
      {
        v48 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_49:
          swift_once(&qword_1005D2060, sub_1003CB84C);
          goto LABEL_3;
        }
        if (v48 >= a1)
          goto LABEL_46;
        v49 = *(_QWORD *)(v38 + 8 * v48);
        ++v12;
        if (!v49)
        {
          v12 = v48 + 1;
          if (v48 + 1 >= a1)
            goto LABEL_46;
          v49 = *(_QWORD *)(v38 + 8 * v12);
          if (!v49)
          {
            v12 = v48 + 2;
            if (v48 + 2 >= a1)
              goto LABEL_46;
            v49 = *(_QWORD *)(v38 + 8 * v12);
            if (!v49)
            {
              v12 = v48 + 3;
              if (v48 + 3 >= a1)
                goto LABEL_46;
              v49 = *(_QWORD *)(v38 + 8 * v12);
              if (!v49)
              {
                v50 = v48 + 4;
                if (v50 >= a1)
                  goto LABEL_46;
                v49 = *(_QWORD *)(v38 + 8 * v50);
                if (!v49)
                {
                  while (1)
                  {
                    v12 = v50 + 1;
                    if (__OFADD__(v50, 1))
                    {
                      __break(1u);
                      JUMPOUT(0x100244F04);
                    }
                    if (v12 >= a1)
                      break;
                    v49 = *(_QWORD *)(v38 + 8 * v12);
                    ++v50;
                    if (v49)
                      goto LABEL_34;
                  }
LABEL_46:
                  v72 = swift_release(a3);
                  v73 = type metadata accessor for ShareItemError(0, v72);
                  v74 = sub_100008000(&qword_1005DCDD0, (uint64_t (*)(uint64_t))&type metadata accessor for ShareItemError, (uint64_t)&protocol conformance descriptor for ShareItemError);
                  v75 = swift_allocError(v73, v74, 0, 0);
                  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v73 - 8) + 104))(v76, enum case for ShareItemError.generic(_:), v73);
                  v89 = v75;
                  v77 = sub_100053F2C(&qword_1005DCDC8);
                  CheckedContinuation.resume(throwing:)(&v89, v77);
                  goto LABEL_47;
                }
                v12 = v50;
              }
            }
          }
        }
LABEL_34:
        v10 = (v49 - 1) & v49;
        v47 = __clz(__rbit64(v49)) + (v12 << 6);
      }
      v51 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v47);
      swift_getErrorValue(v51, v88, v87);
      v52 = v87[1];
      v53 = v87[2];
      swift_errorRetain(v51);
      v54 = sub_10021EF24(v52, v53);
      v56 = v55;
      v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
      if (v54 == v57 && v56 == v58)
      {
        swift_bridgeObjectRelease_n(v56, 2);
      }
      else
      {
        v60 = v58;
        v61 = _stringCompareWithSmolCheck(_:_:expecting:)(v54, v56, v57, v58, 0);
        swift_bridgeObjectRelease(v56);
        swift_bridgeObjectRelease(v60);
        if ((v61 & 1) == 0)
          goto LABEL_16;
      }
      swift_getErrorValue(v51, v86, v85);
      switch((unint64_t)sub_10021EE24(v85[1], v85[2]))
      {
        case 6uLL:
          v63 = type metadata accessor for ShareItemError(0, v62);
          v64 = sub_100008000(&qword_1005DCDD0, (uint64_t (*)(uint64_t))&type metadata accessor for ShareItemError, (uint64_t)&protocol conformance descriptor for ShareItemError);
          v43 = swift_allocError(v63, v64, 0, 0);
          (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v63 - 8) + 104))(v65, v82, v63);
          goto LABEL_15;
        case 7uLL:
          v41 = type metadata accessor for ShareItemError(0, v62);
          v42 = sub_100008000(&qword_1005DCDD0, (uint64_t (*)(uint64_t))&type metadata accessor for ShareItemError, (uint64_t)&protocol conformance descriptor for ShareItemError);
          v43 = swift_allocError(v41, v42, 0, 0);
          (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v41 - 8) + 104))(v44, v79, v41);
          goto LABEL_15;
        case 0xAuLL:
          v66 = type metadata accessor for ShareItemError(0, v62);
          v67 = sub_100008000(&qword_1005DCDD0, (uint64_t (*)(uint64_t))&type metadata accessor for ShareItemError, (uint64_t)&protocol conformance descriptor for ShareItemError);
          v43 = swift_allocError(v66, v67, 0, 0);
          (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v66 - 8) + 104))(v68, v81, v66);
          goto LABEL_15;
        case 0xBuLL:
          v69 = type metadata accessor for ShareItemError(0, v62);
          v70 = sub_100008000(&qword_1005DCDD0, (uint64_t (*)(uint64_t))&type metadata accessor for ShareItemError, (uint64_t)&protocol conformance descriptor for ShareItemError);
          v43 = swift_allocError(v69, v70, 0, 0);
          (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v69 - 8) + 104))(v71, v80, v69);
LABEL_15:
          v89 = v43;
          v45 = sub_100053F2C(&qword_1005DCDC8);
          CheckedContinuation.resume(throwing:)(&v89, v45);
          break;
        default:
          break;
      }
LABEL_16:
      swift_errorRelease(v51);
    }
  }
  v21 = sub_100053F2C(&qword_1005DCDC8);
  CheckedContinuation.resume(returning:)(v21, v21);
LABEL_47:

}

uint64_t sub_100244F1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = sub_100053F2C(&qword_1005D81B8);
  v3[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Destination(0);
  v3[6] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v3[7] = v6;
  v3[8] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v3[9] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v3[10] = v8;
  v3[11] = v9;
  return swift_task_switch(sub_100244FD8, v8, v9);
}

uint64_t sub_100244FD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v13;
  uint64_t (*v14)(_QWORD);

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = Handle.rawValue.getter();
  Destination.init(string:)(v4, v5, v6);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v7 = *(_QWORD *)(v0 + 40);
    v8 = *(_QWORD **)(v0 + 16);
    swift_release(*(_QWORD *)(v0 + 72));
    sub_1000051EC(v7, &qword_1005D81B8);
    *v8 = 0;
    v8[1] = 0;
    v9 = enum case for ContactPickerViewModel.Dependencies.ReachabilityResult.unreachable(_:);
    v10 = type metadata accessor for ContactPickerViewModel.Dependencies.ReachabilityResult(0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
    v11 = *(_QWORD *)(v0 + 40);
    swift_task_dealloc(*(_QWORD *)(v0 + 64));
    swift_task_dealloc(v11);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 32))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
    v14 = (uint64_t (*)(_QWORD))((char *)&async function pointer to dispatch thunk of QueryController.isRegistered(destination:)
                                         + async function pointer to dispatch thunk of QueryController.isRegistered(destination:));
    v13 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of QueryController.isRegistered(destination:)
                                     + 1));
    *(_QWORD *)(v0 + 96) = v13;
    *v13 = v0;
    v13[1] = sub_100245110;
    return v14(*(_QWORD *)(v0 + 64));
  }
}

uint64_t sub_100245110(char a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 96);
  *(_BYTE *)(*v1 + 104) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_100245168, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88));
}

uint64_t sub_100245168()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unsigned int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(unsigned __int8 *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 72));
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  v5 = *(_QWORD **)(v0 + 16);
  if (v1 == 1)
  {
    v6 = (unsigned int *)&enum case for ContactPickerViewModel.Dependencies.ReachabilityResult.reachable(_:);
  }
  else
  {
    *v5 = 0;
    v5[1] = 0;
    v6 = (unsigned int *)&enum case for ContactPickerViewModel.Dependencies.ReachabilityResult.unreachable(_:);
  }
  v7 = *v6;
  v8 = type metadata accessor for ContactPickerViewModel.Dependencies.ReachabilityResult(0);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(v5, v7, v8);
  v9 = *(_QWORD *)(v0 + 40);
  swift_task_dealloc(*(_QWORD *)(v0 + 64));
  swift_task_dealloc(v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100245218(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = a2;
  v3 = type metadata accessor for MainActor(0);
  v2[4] = static MainActor.shared.getter(v3);
  v4 = dispatch thunk of Actor.unownedExecutor.getter(v3, &protocol witness table for MainActor);
  return swift_task_switch(sub_100245284, v4, v5);
}

uint64_t sub_100245284()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  __n128 v5;
  _QWORD *v6;
  unsigned int *v7;
  uint64_t v8;
  uint64_t v9;

  swift_release(*(_QWORD *)(v0 + 32));
  type metadata accessor for FMContactsUtilities();
  v1 = Handle.rawValue.getter();
  v3 = v2;
  v4 = sub_1003BF070(v1, v2);
  v5 = swift_bridgeObjectRelease(v3);
  v6 = *(_QWORD **)(v0 + 16);
  if ((v4 & 1) != 0)
  {
    *v6 = 0;
    v6[1] = 0;
    v7 = (unsigned int *)&enum case for ContactPickerViewModel.Dependencies.PartOfSignedInAccountResult.yes(_:);
  }
  else
  {
    v7 = (unsigned int *)&enum case for ContactPickerViewModel.Dependencies.PartOfSignedInAccountResult.no(_:);
  }
  v8 = *v7;
  v9 = type metadata accessor for ContactPickerViewModel.Dependencies.PartOfSignedInAccountResult(0, v5);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v6, v8, v9);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100245328(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[2] = a1;
  v2[3] = a2;
  v3 = type metadata accessor for MessagingCapability(0);
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v2[6] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100053F2C(&qword_1005D81B8);
  v2[7] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Destination(0);
  v2[8] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[9] = v7;
  v2[10] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MainActor(0);
  v2[11] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v2[12] = v9;
  v2[13] = v10;
  return swift_task_switch(sub_100245408, v9, v10);
}

uint64_t sub_100245408()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char *v15;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 56);
  v4 = Handle.rawValue.getter();
  Destination.init(string:)(v4, v5, v6);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v7 = *(_QWORD *)(v0 + 56);
    swift_release(*(_QWORD *)(v0 + 88));
    sub_1000051EC(v7, &qword_1005D81B8);
    v8 = *(_QWORD *)(v0 + 48);
    v9 = *(_QWORD *)(v0 + 56);
    swift_task_dealloc(*(_QWORD *)(v0 + 80));
    swift_task_dealloc(v9);
    swift_task_dealloc(v8);
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  else
  {
    v12 = *(_QWORD *)(v0 + 40);
    v11 = *(_QWORD *)(v0 + 48);
    v13 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 32))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 104))(v11, enum case for MessagingCapability.supportsBeaconSharingV3(_:), v13);
    v15 = (char *)&async function pointer to dispatch thunk of QueryController.destinationHasCapabilityWithDataReloadIfRequired(destination:capability:)
        + async function pointer to dispatch thunk of QueryController.destinationHasCapabilityWithDataReloadIfRequired(destination:capability:);
    v14 = (_QWORD *)swift_task_alloc(*((unsigned int *)&async function pointer to dispatch thunk of QueryController.destinationHasCapabilityWithDataReloadIfRequired(destination:capability:)
                                     + 1));
    *(_QWORD *)(v0 + 112) = v14;
    *v14 = v0;
    v14[1] = sub_100245540;
    return ((uint64_t (*)(_QWORD, _QWORD))v15)(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 48));
  }
}

uint64_t sub_100245540(char a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 112);
  *(_QWORD *)(*v2 + 120) = v1;
  swift_task_dealloc(v5);
  v7 = *(_QWORD *)(v4 + 40);
  v6 = *(_QWORD *)(v4 + 48);
  v8 = *(_QWORD *)(v4 + 32);
  if (v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    v9 = *(_QWORD *)(v4 + 96);
    v10 = *(_QWORD *)(v4 + 104);
    v11 = sub_100245644;
  }
  else
  {
    *(_BYTE *)(v4 + 128) = a1 & 1;
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    v9 = *(_QWORD *)(v4 + 96);
    v10 = *(_QWORD *)(v4 + 104);
    v11 = sub_1002455D0;
  }
  return swift_task_switch(v11, v9, v10);
}

uint64_t sub_1002455D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 88));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v4 = *(unsigned __int8 *)(v0 + 128);
  v6 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc(*(_QWORD *)(v0 + 80));
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v4);
}

uint64_t sub_100245644()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  swift_release(*(_QWORD *)(v0 + 88));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc(v1);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

double sub_1002456BC(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double result;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD aBlock[5];
  uint64_t v31;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v28 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v26 = *(_QWORD *)(v6 - 8);
  v27 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchTime(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v24 - v14;
  v16 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v17 = (void *)static OS_dispatch_queue.main.getter(v16);
  static DispatchTime.now()(v17);
  + infix(_:_:)(v13, 0.3);
  v25 = *(void (**)(char *, uint64_t))(v10 + 8);
  v25(v13, v9);
  v18 = swift_allocObject(&unk_100552988, 24, 7);
  *(_QWORD *)(v18 + 16) = a2;
  aBlock[4] = sub_100252B8C;
  v31 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_1005529A0;
  v19 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(a2);
  v29 = _swiftEmptyArrayStorage;
  v20 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v21 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v22 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v29, v21, v22, v3, v20);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v15, v8, v5, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v27);
  v25(v15, v9);
  *(_QWORD *)&result = swift_release(v31).n128_u64[0];
  return result;
}

void sub_100245960(void *a1)
{
  void *v2;
  _QWORD v3[6];

  v3[4] = State.rawValue.getter;
  v3[5] = 0;
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 1107296256;
  v3[2] = sub_100037DF8;
  v3[3] = &unk_1005529C8;
  v2 = _Block_copy(v3);
  objc_msgSend(a1, "dismissViewControllerAnimated:completion:", 1, v2);
  _Block_release(v2);
}

void sub_1002459E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  BOOL v4;
  void *v5;
  char **v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  UIBarButtonItem v13;
  id v14;
  void *Strong;
  void *v16;
  id v17;
  UIAction_optional v18;
  UIMenu_optional v19;

  v2 = v1;
  v4 = sub_1000C1468();
  v5 = (void *)objc_opt_self(CNContactViewController);
  v6 = &selRef_viewControllerForUnknownContact_;
  if (!v4)
    v6 = &selRef_viewControllerForContact_;
  v17 = objc_msgSend(v5, *v6, a1);
  objc_msgSend(v17, "setDisplayMode:", 1);
  objc_msgSend(v17, "setAllowsEditing:", 1);
  v7 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), "init");
  objc_msgSend(v17, "setContactStore:", v7);

  v8 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v17);
  objc_msgSend(v8, "setModalPresentationStyle:", 2);
  sub_100006C5C(0, (unint64_t *)&unk_1005E4BB0, UIAction_ptr);
  v9 = swift_allocObject(&unk_100552D20, 24, 7);
  *(_QWORD *)(v9 + 16) = v8;
  v10 = v8;
  v11 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(0, 0xE000000000000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, sub_1000A4A10, v9);
  sub_100006C5C(0, &qword_1005D34A0, UIBarButtonItem_ptr);
  v12 = v11;
  v18.value.super.super.isa = (Class)v11;
  v18.is_nil = 0;
  v13.super.super.isa = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemCancel, v18, v19).super.super.isa;
  v14 = objc_msgSend(v17, "navigationItem");
  objc_msgSend(v14, "setLeftBarButtonItem:animated:", v13.super.super.isa, 1);

  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2 + qword_1005DC8E8);
  if (Strong)
  {
    v16 = Strong;
    objc_msgSend(Strong, "presentViewController:animated:completion:", v10, 1, 0);

    v10 = v16;
  }

}

uint64_t sub_100245C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5[17] = a4;
  v5[18] = a5;
  v6 = type metadata accessor for FMIPProductType(0);
  v5[19] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[20] = v7;
  v5[21] = swift_task_alloc((*(_QWORD *)(v7 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for FMBeaconSharingModuleShareState(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[22] = swift_task_alloc(v8);
  v5[23] = swift_task_alloc(v8);
  v9 = *(_QWORD *)(type metadata accessor for FMBeaconSharingModuleRelationshipType(0) - 8);
  v5[24] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v5[25] = v10;
  v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[26] = swift_task_alloc(v11);
  v5[27] = swift_task_alloc(v11);
  v12 = type metadata accessor for FMBeaconSharingModuleEntry(0);
  v5[28] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v12 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FMSelectedSection(0);
  v5[29] = v13;
  v5[30] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FMIPItem(0);
  v5[31] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v5[32] = v15;
  v5[33] = swift_task_alloc((*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for MainActor(0);
  v5[34] = static MainActor.shared.getter(v16);
  v17 = dispatch thunk of Actor.unownedExecutor.getter(v16, &protocol witness table for MainActor);
  v5[35] = v17;
  v5[36] = v18;
  return swift_task_switch(sub_100245D8C, v17, v18);
}

uint64_t sub_100245D8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  void (*v28)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  id v35;
  unint64_t v36;
  unint64_t v37;
  const char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  id v51;
  NSString v52;
  void *v53;
  id v54;
  _QWORD *v55;
  unint64_t v56;
  Swift::String_optional v57;
  Swift::String v58;
  void *object;
  uint64_t v60;
  id v61;
  Swift::String v62;
  Swift::String_optional v63;
  Swift::String v64;
  void *v65;
  NSString v66;
  NSString v67;
  id v68;
  uint64_t v69;
  id v70;
  uint64_t (*v71)();
  uint64_t v72;
  unint64_t v73;
  id v74;
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t, uint64_t);
  uint64_t v77;
  void (*v78)(uint64_t, _QWORD, uint64_t, uint64_t);
  Swift::String v79;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 136) + qword_1005DC8D8) + 56)
     + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v3, v0 + 112, 0, 0);
  sub_10004FC74(v3, v2, type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload(v2, v1) != 3)
  {
    v11 = *(_QWORD *)(v0 + 240);
    swift_release(*(_QWORD *)(v0 + 272));
    sub_10004FCB8(v11, type metadata accessor for FMSelectedSection);
    goto LABEL_5;
  }
  v4 = *(_QWORD *)(v0 + 224);
  v5 = *(_QWORD *)(v0 + 144);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 256) + 32))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 248));
  sub_10004FC74(v5, v4, type metadata accessor for FMBeaconSharingModuleEntry);
  v6 = sub_100053F2C(&qword_1005DCB20);
  *(_QWORD *)(v0 + 296) = v6;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v4, 2, v6))
  {
    v7 = *(_QWORD *)(v0 + 264);
    v8 = *(_QWORD *)(v0 + 248);
    v9 = *(_QWORD *)(v0 + 256);
    v10 = swift_release(*(_QWORD *)(v0 + 272));
    (*(void (**)(uint64_t, uint64_t, __n128))(v9 + 8))(v7, v8, v10);
LABEL_5:
    v12 = *(_QWORD *)(v0 + 240);
    v14 = *(_QWORD *)(v0 + 216);
    v13 = *(_QWORD *)(v0 + 224);
    v15 = *(_QWORD *)(v0 + 208);
    v17 = *(_QWORD *)(v0 + 176);
    v16 = *(_QWORD *)(v0 + 184);
    v18 = *(_QWORD *)(v0 + 168);
    swift_task_dealloc(*(_QWORD *)(v0 + 264));
    swift_task_dealloc(v12);
    swift_task_dealloc(v13);
    swift_task_dealloc(v14);
    swift_task_dealloc(v15);
    swift_task_dealloc(v16);
    swift_task_dealloc(v17);
    swift_task_dealloc(v18);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v20 = *(_QWORD *)(v0 + 224);
  v22 = *(_QWORD *)(v0 + 176);
  v21 = *(_QWORD *)(v0 + 184);
  v23 = v20 + *(int *)(v6 + 48);
  sub_100051774(v20, *(_QWORD *)(v0 + 216), type metadata accessor for FMBeaconSharingModuleRelationshipType);
  sub_100051774(v23, v21, type metadata accessor for FMBeaconSharingModuleShareState);
  v24 = enum case for FMIPBeaconShareState.failed(_:);
  v25 = type metadata accessor for FMIPBeaconShareState(0);
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 104);
  v26(v22, v24, v25);
  v27 = sub_100053F2C(&qword_1005DCB28);
  v28 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56);
  v28(v22, 0, 1, v27);
  LOBYTE(v24) = sub_100251298(v21, v22);
  v29 = sub_10004FCB8(v22, type metadata accessor for FMBeaconSharingModuleShareState);
  if ((v24 & 1) != 0)
  {
    v31 = *(_QWORD *)(v0 + 160);
    v30 = *(_QWORD *)(v0 + 168);
    v32 = *(_QWORD *)(v0 + 152);
    v33 = FMIPItem.productType.getter(v29);
    v34 = FMIPProductType.isAirTag.getter(v33);
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v32);
    v35 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v36 = 0xD000000000000018;
    if ((v34 & 1) != 0)
    {
      v37 = 0xD00000000000002DLL;
      v73 = 0x80000001004A8F80;
      v38 = "ITEM_DETAIL_SHARING_FAILED_DESCRIPTION_AIRTAG";
    }
    else
    {
      v37 = 0xD00000000000002BLL;
      v73 = 0x80000001004A8F80;
      v38 = "ITEM_DETAIL_SHARING_FAILED_DESCRIPTION_ITEM";
    }
    v56 = (unint64_t)(v38 - 32) | 0x8000000000000000;
    v57.value._object = (void *)0x80000001004A8F60;
    v57.value._countAndFlagsBits = 0xD000000000000013;
    v58._countAndFlagsBits = 0;
    v58._object = (void *)0xE000000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v37, v57, (NSBundle)v35, v58, *(Swift::String *)&v36)._object;
    v60 = *(_QWORD *)(v0 + 136);

    v61 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v79._countAndFlagsBits = 0xD000000000000018;
    v62._countAndFlagsBits = 0xD000000000000020;
    v79._object = (void *)0x80000001004A8F80;
    v62._object = (void *)0x80000001004B78F0;
    v63.value._object = (void *)0x80000001004A8F60;
    v63.value._countAndFlagsBits = 0xD000000000000013;
    v64._countAndFlagsBits = 0;
    v64._object = (void *)0xE000000000000000;
    v65 = NSLocalizedString(_:tableName:bundle:value:comment:)(v62, v63, (NSBundle)v61, v64, v79)._object;

    v66 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v65);
    v67 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v68 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v66, v67, 1);
    *(_QWORD *)(v0 + 304) = v68;

    v69 = *(_QWORD *)(v60 + qword_1005DC8E0);
    *(_QWORD *)(v0 + 312) = v69;
    v70 = v68;
    v71 = sub_10024641C;
    v72 = v69;
  }
  else
  {
    v78 = v28;
    v40 = *(_QWORD *)(v0 + 208);
    v39 = *(_QWORD *)(v0 + 216);
    v76 = v26;
    v42 = *(_QWORD *)(v0 + 192);
    v41 = *(_QWORD *)(v0 + 200);
    v77 = *(_QWORD *)(v0 + 184);
    v75 = *(_QWORD *)(v0 + 176);
    v43 = *(void **)(v0 + 136);
    v44 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", 0, 0, 0);
    *(_QWORD *)(v0 + 336) = v44;
    v74 = v44;
    sub_10023B078();
    v46 = v45;
    sub_10004FC74(v39, v40, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    v47 = *(unsigned __int8 *)(v42 + 80);
    v48 = (v47 + 16) & ~v47;
    v49 = (v41 + v48 + 7) & 0xFFFFFFFFFFFFFFF8;
    v50 = swift_allocObject(&unk_100552A50, v49 + 8, v47 | 7);
    sub_100051774(v40, v50 + v48, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    *(_QWORD *)(v50 + v49) = v43;
    v51 = v43;
    v52 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v46);
    *(_QWORD *)(v0 + 48) = sub_100252DCC;
    *(_QWORD *)(v0 + 56) = v50;
    *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
    *(_QWORD *)(v0 + 24) = 1107296256;
    *(_QWORD *)(v0 + 32) = sub_100008B40;
    *(_QWORD *)(v0 + 40) = &unk_100552A68;
    v53 = _Block_copy((const void *)(v0 + 16));
    swift_release(*(_QWORD *)(v0 + 56));
    v54 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v52, 0, v53);
    *(_QWORD *)(v0 + 344) = v54;
    _Block_release(v53);

    objc_msgSend(v74, "addAction:", v54);
    v76(v75, enum case for FMIPBeaconShareState.requestReceived(_:), v25);
    v78(v75, 0, 1, v27);
    LOBYTE(v52) = sub_100251298(v77, v75);
    sub_10004FCB8(v75, type metadata accessor for FMBeaconSharingModuleShareState);
    if ((v52 & 1) != 0)
    {
      v55 = (_QWORD *)swift_task_alloc(dword_1005DC93C);
      *(_QWORD *)(v0 + 352) = v55;
      *v55 = v0;
      v55[1] = sub_100246A50;
      return sub_100247704(*(_QWORD *)(v0 + 144));
    }
    v72 = *(_QWORD *)(*(_QWORD *)(v0 + 136) + qword_1005DC8E0);
    *(_QWORD *)(v0 + 368) = v72;
    v71 = sub_100246B0C;
  }
  return swift_task_switch(v71, v72, 0);
}

uint64_t sub_10024641C()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 392) = *(_BYTE *)(*(_QWORD *)(v0 + 312)
                                  + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_viewModel
                                  + 18);
  return swift_task_switch(sub_100246444, *(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 288));
}

uint64_t sub_100246444()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  Swift::String v10;
  Swift::String_optional v11;
  Swift::String v12;
  void *object;
  NSString v14;
  void *v15;
  id v16;
  uint64_t Strong;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  Swift::String v30;

  if (*(_BYTE *)(v0 + 392) == 1)
  {
    v1 = (_QWORD *)swift_task_alloc(dword_1005DC944);
    *(_QWORD *)(v0 + 320) = v1;
    *v1 = v0;
    v1[1] = sub_100246734;
    return sub_1002483F4(*(_QWORD *)(v0 + 144));
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 272);

    swift_release(v3);
    v4 = *(void **)(v0 + 304);
    v5 = *(_QWORD *)(v0 + 216);
    v6 = *(_QWORD *)(v0 + 136);
    v7 = *(_QWORD *)(v0 + 224) + *(int *)(*(_QWORD *)(v0 + 296) + 64);
    sub_10004FCB8(*(_QWORD *)(v0 + 184), type metadata accessor for FMBeaconSharingModuleShareState);
    sub_10004FCB8(v5, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    v8 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v30._countAndFlagsBits = 0xD000000000000018;
    v10._countAndFlagsBits = 0xD000000000000025;
    v30._object = (void *)0x80000001004A8F80;
    v10._object = (void *)0x80000001004B7890;
    v11.value._object = (void *)0x80000001004A8F60;
    v11.value._countAndFlagsBits = 0xD000000000000013;
    v12._countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, v11, (NSBundle)v9, v12, v30)._object;

    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    *(_QWORD *)(v0 + 64) = _NSConcreteStackBlock;
    *(_QWORD *)(v0 + 96) = State.rawValue.getter;
    *(_QWORD *)(v0 + 104) = 0;
    *(_QWORD *)(v0 + 72) = 1107296256;
    *(_QWORD *)(v0 + 80) = sub_100008B40;
    *(_QWORD *)(v0 + 88) = &unk_100552A90;
    v15 = _Block_copy((const void *)(v0 + 64));
    swift_release(*(_QWORD *)(v0 + 104));
    v16 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v14, 1, v15);
    _Block_release(v15);

    objc_msgSend(v4, "addAction:", v16);
    Strong = swift_unknownObjectWeakLoadStrong(v6 + qword_1005DC8E8);
    if (Strong)
    {
      v18 = (void *)Strong;
      v19 = v4;
      objc_msgSend(v18, "presentViewController:animated:completion:", v19, 1, 0);

    }
    v21 = *(_QWORD *)(v0 + 256);
    v20 = *(_QWORD *)(v0 + 264);
    v22 = *(_QWORD *)(v0 + 248);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    v23 = *(_QWORD *)(v0 + 240);
    v25 = *(_QWORD *)(v0 + 216);
    v24 = *(_QWORD *)(v0 + 224);
    v26 = *(_QWORD *)(v0 + 208);
    v28 = *(_QWORD *)(v0 + 176);
    v27 = *(_QWORD *)(v0 + 184);
    v29 = *(_QWORD *)(v0 + 168);
    swift_task_dealloc(*(_QWORD *)(v0 + 264));
    swift_task_dealloc(v23);
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100246734(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 320);
  *(_QWORD *)(*v1 + 328) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_10024678C, *(_QWORD *)(v2 + 280), *(_QWORD *)(v2 + 288));
}

uint64_t sub_10024678C()
{
  _QWORD *v0;
  uint64_t v1;
  double v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  Swift::String v11;
  Swift::String_optional v12;
  Swift::String v13;
  void *object;
  NSString v15;
  void *v16;
  id v17;
  uint64_t Strong;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::String v32;

  v1 = v0[41];
  *(_QWORD *)&v2 = swift_release(v0[34]).n128_u64[0];
  if (v1)
  {
    v3 = (void *)v0[41];
    v4 = (void *)v0[38];
    objc_msgSend(v4, "addAction:", v3, v2);

  }
  else
  {
    v4 = (void *)v0[38];
  }

  v5 = (void *)v0[38];
  v6 = v0[27];
  v7 = v0[17];
  v8 = v0[28] + *(int *)(v0[37] + 64);
  sub_10004FCB8(v0[23], type metadata accessor for FMBeaconSharingModuleShareState);
  sub_10004FCB8(v6, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  v9 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v32._countAndFlagsBits = 0xD000000000000018;
  v11._countAndFlagsBits = 0xD000000000000025;
  v32._object = (void *)0x80000001004A8F80;
  v11._object = (void *)0x80000001004B7890;
  v12.value._object = (void *)0x80000001004A8F60;
  v12.value._countAndFlagsBits = 0xD000000000000013;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, v12, (NSBundle)v10, v13, v32)._object;

  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v0[12] = State.rawValue.getter;
  v0[13] = 0;
  v0[8] = _NSConcreteStackBlock;
  v0[9] = 1107296256;
  v0[10] = sub_100008B40;
  v0[11] = &unk_100552A90;
  v16 = _Block_copy(v0 + 8);
  swift_release(v0[13]);
  v17 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v15, 1, v16);
  _Block_release(v16);

  objc_msgSend(v5, "addAction:", v17);
  Strong = swift_unknownObjectWeakLoadStrong(v7 + qword_1005DC8E8);
  if (Strong)
  {
    v19 = (void *)Strong;
    v20 = v5;
    objc_msgSend(v19, "presentViewController:animated:completion:", v20, 1, 0);

  }
  v22 = v0[32];
  v21 = v0[33];
  v23 = v0[31];

  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
  v24 = v0[30];
  v26 = v0[27];
  v25 = v0[28];
  v27 = v0[26];
  v29 = v0[22];
  v28 = v0[23];
  v30 = v0[21];
  swift_task_dealloc(v0[33]);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_100246A50(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 352);
  *(_QWORD *)(*v1 + 360) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_100246AA8, *(_QWORD *)(v2 + 280), *(_QWORD *)(v2 + 288));
}

uint64_t sub_100246AA8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 360);
  if (v1)
  {
    objc_msgSend(*(id *)(v0 + 336), "addAction:", *(_QWORD *)(v0 + 360));

  }
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 136) + qword_1005DC8E0);
  *(_QWORD *)(v0 + 368) = v2;
  return swift_task_switch(sub_100246B0C, v2, 0);
}

uint64_t sub_100246B0C()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 393) = *(_BYTE *)(*(_QWORD *)(v0 + 368)
                                  + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_viewModel
                                  + 18);
  return swift_task_switch(sub_100246B34, *(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 288));
}

uint64_t sub_100246B34()
{
  uint64_t v0;
  _QWORD *v1;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  Swift::String v11;
  Swift::String_optional v12;
  Swift::String v13;
  void *object;
  NSString v15;
  void *v16;
  id v17;
  uint64_t Strong;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::String v31;

  if (*(_BYTE *)(v0 + 393) == 1)
  {
    v1 = (_QWORD *)swift_task_alloc(dword_1005DC944);
    *(_QWORD *)(v0 + 376) = v1;
    *v1 = v0;
    v1[1] = sub_100246E2C;
    return sub_1002483F4(*(_QWORD *)(v0 + 144));
  }
  else
  {
    v3 = *(void **)(v0 + 344);
    v4 = *(_QWORD *)(v0 + 272);

    swift_release(v4);
    v5 = *(void **)(v0 + 336);
    v6 = *(_QWORD *)(v0 + 216);
    v7 = *(_QWORD *)(v0 + 136);
    v8 = *(_QWORD *)(v0 + 224) + *(int *)(*(_QWORD *)(v0 + 296) + 64);
    sub_10004FCB8(*(_QWORD *)(v0 + 184), type metadata accessor for FMBeaconSharingModuleShareState);
    sub_10004FCB8(v6, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    v9 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v31._countAndFlagsBits = 0xD000000000000018;
    v11._countAndFlagsBits = 0xD000000000000025;
    v31._object = (void *)0x80000001004A8F80;
    v11._object = (void *)0x80000001004B7890;
    v12.value._object = (void *)0x80000001004A8F60;
    v12.value._countAndFlagsBits = 0xD000000000000013;
    v13._countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, v12, (NSBundle)v10, v13, v31)._object;

    v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    *(_QWORD *)(v0 + 64) = _NSConcreteStackBlock;
    *(_QWORD *)(v0 + 96) = State.rawValue.getter;
    *(_QWORD *)(v0 + 104) = 0;
    *(_QWORD *)(v0 + 72) = 1107296256;
    *(_QWORD *)(v0 + 80) = sub_100008B40;
    *(_QWORD *)(v0 + 88) = &unk_100552A90;
    v16 = _Block_copy((const void *)(v0 + 64));
    swift_release(*(_QWORD *)(v0 + 104));
    v17 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v15, 1, v16);
    _Block_release(v16);

    objc_msgSend(v5, "addAction:", v17);
    Strong = swift_unknownObjectWeakLoadStrong(v7 + qword_1005DC8E8);
    if (Strong)
    {
      v19 = (void *)Strong;
      v20 = v5;
      objc_msgSend(v19, "presentViewController:animated:completion:", v20, 1, 0);

    }
    v22 = *(_QWORD *)(v0 + 256);
    v21 = *(_QWORD *)(v0 + 264);
    v23 = *(_QWORD *)(v0 + 248);

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    v24 = *(_QWORD *)(v0 + 240);
    v26 = *(_QWORD *)(v0 + 216);
    v25 = *(_QWORD *)(v0 + 224);
    v27 = *(_QWORD *)(v0 + 208);
    v29 = *(_QWORD *)(v0 + 176);
    v28 = *(_QWORD *)(v0 + 184);
    v30 = *(_QWORD *)(v0 + 168);
    swift_task_dealloc(*(_QWORD *)(v0 + 264));
    swift_task_dealloc(v24);
    swift_task_dealloc(v25);
    swift_task_dealloc(v26);
    swift_task_dealloc(v27);
    swift_task_dealloc(v28);
    swift_task_dealloc(v29);
    swift_task_dealloc(v30);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_100246E2C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 376);
  *(_QWORD *)(*v1 + 384) = a1;
  swift_task_dealloc(v3);
  return swift_task_switch(sub_100246E84, *(_QWORD *)(v2 + 280), *(_QWORD *)(v2 + 288));
}

uint64_t sub_100246E84()
{
  _QWORD *v0;
  uint64_t v1;
  double v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  Swift::String v12;
  Swift::String_optional v13;
  Swift::String v14;
  void *object;
  NSString v16;
  void *v17;
  id v18;
  uint64_t Strong;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::String v33;

  v1 = v0[48];
  *(_QWORD *)&v2 = swift_release(v0[34]).n128_u64[0];
  if (v1)
  {
    v3 = (void *)v0[48];
    v4 = (void *)v0[42];
    v5 = (void *)v0[43];
    objc_msgSend(v4, "addAction:", v3, v2);

  }
  else
  {
    v4 = (void *)v0[42];
    v3 = (void *)v0[43];
  }

  v6 = (void *)v0[42];
  v7 = v0[27];
  v8 = v0[17];
  v9 = v0[28] + *(int *)(v0[37] + 64);
  sub_10004FCB8(v0[23], type metadata accessor for FMBeaconSharingModuleShareState);
  sub_10004FCB8(v7, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  v10 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v33._countAndFlagsBits = 0xD000000000000018;
  v12._countAndFlagsBits = 0xD000000000000025;
  v33._object = (void *)0x80000001004A8F80;
  v12._object = (void *)0x80000001004B7890;
  v13.value._object = (void *)0x80000001004A8F60;
  v13.value._countAndFlagsBits = 0xD000000000000013;
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v33)._object;

  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v0[12] = State.rawValue.getter;
  v0[13] = 0;
  v0[8] = _NSConcreteStackBlock;
  v0[9] = 1107296256;
  v0[10] = sub_100008B40;
  v0[11] = &unk_100552A90;
  v17 = _Block_copy(v0 + 8);
  swift_release(v0[13]);
  v18 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v16, 1, v17);
  _Block_release(v17);

  objc_msgSend(v6, "addAction:", v18);
  Strong = swift_unknownObjectWeakLoadStrong(v8 + qword_1005DC8E8);
  if (Strong)
  {
    v20 = (void *)Strong;
    v21 = v6;
    objc_msgSend(v20, "presentViewController:animated:completion:", v21, 1, 0);

  }
  v23 = v0[32];
  v22 = v0[33];
  v24 = v0[31];

  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
  v25 = v0[30];
  v27 = v0[27];
  v26 = v0[28];
  v28 = v0[26];
  v30 = v0[22];
  v29 = v0[23];
  v31 = v0[21];
  swift_task_dealloc(v0[33]);
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  swift_task_dealloc(v27);
  swift_task_dealloc(v28);
  swift_task_dealloc(v29);
  swift_task_dealloc(v30);
  swift_task_dealloc(v31);
  return ((uint64_t (*)(void))v0[1])();
}

void sub_100247150(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t (*v15)(_QWORD);
  void *v16;
  void (*v17)(char *, uint64_t *, uint64_t);
  uint64_t Strong;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char *v26;
  _QWORD aBlock[5];
  uint64_t v28;

  v5 = type metadata accessor for FMFFriend(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = __chkstk_darwin(v5);
  v9 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)aBlock - v10;
  v12 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
  __chkstk_darwin(v12);
  v14 = (_QWORD *)((char *)aBlock - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10004FC74(a2, (uint64_t)v14, v15);
  if (swift_getEnumCaseMultiPayload(v14, v12) == 1)
  {
    v16 = (void *)*v14;
    sub_1002459E8(*v14);

  }
  else
  {
    v17 = *(void (**)(char *, uint64_t *, uint64_t))(v6 + 32);
    v17(v11, v14, v5);
    Strong = swift_unknownObjectWeakLoadStrong(&a3[qword_1005DC8E8]);
    if (Strong)
    {
      v19 = (void *)Strong;
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
      v20 = *(unsigned __int8 *)(v6 + 80);
      v21 = (v20 + 24) & ~v20;
      v22 = swift_allocObject(&unk_100552AC8, v21 + v7, v20 | 7);
      *(_QWORD *)(v22 + 16) = a3;
      v17((char *)(v22 + v21), (uint64_t *)v9, v5);
      v23 = swift_allocObject(&unk_100552AF0, 32, 7);
      *(_QWORD *)(v23 + 16) = sub_100252E54;
      *(_QWORD *)(v23 + 24) = v22;
      aBlock[4] = sub_100066830;
      v28 = v23;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100037DF8;
      aBlock[3] = &unk_100552B08;
      v24 = _Block_copy(aBlock);
      v25 = v28;
      v26 = a3;
      swift_retain(v22);
      objc_msgSend(v19, "dismissViewControllerAnimated:completion:", 1, v24, swift_release(v25).n128_f64[0]);
      _Block_release(v24);
      swift_release(v22);

    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
}

uint64_t sub_100247394(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v29[24];
  _BYTE v30[24];
  _BYTE v31[24];
  _BYTE v32[24];

  v4 = type metadata accessor for FMSelectedSection(0);
  v5 = __chkstk_darwin(v4);
  v7 = &v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __chkstk_darwin(v5);
  v10 = &v29[-v9];
  v11 = __chkstk_darwin(v8);
  v13 = &v29[-v12];
  __chkstk_darwin(v11);
  v15 = &v29[-v14];
  v16 = *(_QWORD *)(a1 + qword_1005DC8D8);
  v17 = *(_QWORD *)(v16 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v17, v32, 0, 0);
  sub_10004FC74(v17, (uint64_t)v15, type metadata accessor for FMSelectedSection);
  sub_10004FC74((uint64_t)v15, (uint64_t)v13, type metadata accessor for FMSelectedSection);
  LODWORD(v17) = swift_getEnumCaseMultiPayload(v13, v4);
  sub_10004FCB8((uint64_t)v13, type metadata accessor for FMSelectedSection);
  if ((_DWORD)v17 == 2)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v18 = type metadata accessor for Logger(0);
    v19 = sub_100056D88(v18, (uint64_t)qword_1005F5748);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.default.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "FMURLHandler: ignoring currentSelection", v22, 2u);
      swift_slowDealloc(v22, -1, -1);
    }

  }
  else
  {
    v23 = *(_QWORD *)(v16 + 56);
    swift_storeEnumTagMultiPayload(v10, v4, 14);
    v24 = v23 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
    swift_beginAccess(v23 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, v31, 0, 0);
    sub_10004FC74(v24, (uint64_t)v7, type metadata accessor for FMSelectedSection);
    swift_beginAccess(v24, v30, 33, 0);
    swift_retain(v23);
    sub_100009DF8((uint64_t)v10, v24);
    swift_endAccess(v30);
    sub_10004C8A4((uint64_t)v7);
    sub_10004FCB8((uint64_t)v10, type metadata accessor for FMSelectedSection);
    sub_10004FCB8((uint64_t)v7, type metadata accessor for FMSelectedSection);
    swift_release(v23);
  }
  v25 = *(_QWORD *)(v16 + 56);
  v26 = type metadata accessor for FMFFriend(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v10, a2, v26);
  swift_storeEnumTagMultiPayload(v10, v4, 2);
  v27 = v25 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v25 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, v30, 0, 0);
  sub_10004FC74(v27, (uint64_t)v7, type metadata accessor for FMSelectedSection);
  swift_beginAccess(v27, v29, 33, 0);
  swift_retain(v25);
  sub_100009DF8((uint64_t)v10, v27);
  swift_endAccess(v29);
  sub_10004C8A4((uint64_t)v7);
  sub_10004FCB8((uint64_t)v10, type metadata accessor for FMSelectedSection);
  sub_10004FCB8((uint64_t)v7, type metadata accessor for FMSelectedSection);
  swift_release(v25);
  return sub_10004FCB8((uint64_t)v15, type metadata accessor for FMSelectedSection);
}

uint64_t sub_100247704(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2[8] = a1;
  v2[9] = v1;
  v3 = type metadata accessor for FMBeaconSharingModuleEntry(0);
  v2[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for UUID(0);
  v2[11] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v2[12] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v2[13] = v6;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[14] = swift_task_alloc(v7);
  v2[15] = swift_task_alloc(v7);
  v8 = type metadata accessor for MainActor(0);
  v2[16] = static MainActor.shared.getter(v8);
  v9 = dispatch thunk of Actor.unownedExecutor.getter(v8, &protocol witness table for MainActor);
  v2[17] = v9;
  v2[18] = v10;
  return swift_task_switch(sub_1002477CC, v9, v10);
}

uint64_t sub_1002477CC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 72) + qword_1005DC8E0);
  *(_QWORD *)(v0 + 152) = v1;
  return swift_task_switch(sub_1002477F0, v1, 0);
}

uint64_t sub_1002477F0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 144);
  *(_BYTE *)(v0 + 160) = *(_BYTE *)(*(_QWORD *)(v0 + 152)
                                  + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_viewModel
                                  + 17);
  return swift_task_switch(sub_100247818, *(_QWORD *)(v0 + 136), v1);
}

uint64_t sub_100247818()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  id v13;
  Swift::String v14;
  Swift::String_optional v15;
  Swift::String v16;
  void *object;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v22;
  NSString v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  void *v29;
  Swift::String v30;

  v1 = *(unsigned __int8 *)(v0 + 160);
  swift_release(*(_QWORD *)(v0 + 128));
  if (v1 == 1)
  {
    v2 = *(_QWORD *)(v0 + 80);
    sub_10004FC74(*(_QWORD *)(v0 + 64), v2, type metadata accessor for FMBeaconSharingModuleEntry);
    v3 = sub_100053F2C(&qword_1005DCB20);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 2, v3))
    {
      v6 = *(_QWORD *)(v0 + 112);
      v5 = *(_QWORD *)(v0 + 120);
      v7 = *(_QWORD *)(v0 + 96);
      v8 = *(_QWORD *)(v0 + 104);
      v10 = *(_QWORD *)(v0 + 80);
      v9 = *(_QWORD *)(v0 + 88);
      v29 = *(void **)(v0 + 72);
      v11 = v10 + *(int *)(v3 + 48);
      v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
      v28 = v5;
      v12(v5, v10 + *(int *)(v3 + 64), v9);
      sub_10004FCB8(v11, type metadata accessor for FMBeaconSharingModuleShareState);
      sub_10004FCB8(v10, type metadata accessor for FMBeaconSharingModuleRelationshipType);
      v13 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v30._countAndFlagsBits = 0xD000000000000018;
      v14._countAndFlagsBits = 0xD000000000000025;
      v30._object = (void *)0x80000001004A8F80;
      v14._object = (void *)0x80000001004B7A40;
      v15.value._object = (void *)0x80000001004A8F60;
      v15.value._countAndFlagsBits = 0xD000000000000013;
      v16._countAndFlagsBits = 0;
      v16._object = (void *)0xE000000000000000;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, v15, (NSBundle)v13, v16, v30)._object;

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v5, v9);
      v18 = *(unsigned __int8 *)(v7 + 80);
      v19 = (v18 + 16) & ~v18;
      v20 = (v8 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
      v21 = swift_allocObject(&unk_100552C58, v20 + 8, v18 | 7);
      v12(v21 + v19, v6, v9);
      *(_QWORD *)(v21 + v20) = v29;
      v22 = v29;
      v23 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(object);
      *(_QWORD *)(v0 + 48) = sub_10025328C;
      *(_QWORD *)(v0 + 56) = v21;
      *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
      *(_QWORD *)(v0 + 24) = 1107296256;
      *(_QWORD *)(v0 + 32) = sub_100008B40;
      *(_QWORD *)(v0 + 40) = &unk_100552C70;
      v24 = _Block_copy((const void *)(v0 + 16));
      swift_release(*(_QWORD *)(v0 + 56));
      v4 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v23, 0, v24);
      _Block_release(v24);

      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v28, v9);
      goto LABEL_6;
    }
    sub_10004FCB8(*(_QWORD *)(v0 + 80), type metadata accessor for FMBeaconSharingModuleEntry);
  }
  v4 = 0;
LABEL_6:
  v25 = *(_QWORD *)(v0 + 112);
  v26 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 120));
  swift_task_dealloc(v25);
  swift_task_dealloc(v26);
  return (*(uint64_t (**)(id))(v0 + 8))(v4);
}

double sub_100247AE8(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  double result;
  uint64_t v15;

  v5 = type metadata accessor for UUID(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v8 + 16))(v7, a2);
  v9 = type metadata accessor for FMIPAcceptShareAction(0);
  swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52));
  v10 = FMIPAcceptShareAction.init(shareIdentifier:)(v7);
  v11 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&a3[qword_1005DC8D8] + 24) + 32);
  v12 = swift_allocObject(&unk_100552CA8, 24, 7);
  *(_QWORD *)(v12 + 16) = a3;
  swift_retain(v11);
  v13 = a3;
  sub_1000B34B4(v10, (uint64_t)sub_100253324, v12);
  swift_release(v12);
  swift_release(v11);
  *(_QWORD *)&result = swift_release(v10).n128_u64[0];
  return result;
}

double sub_100247BE8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double result;
  uint64_t v23;
  uint64_t v24;

  v24 = a2;
  v6 = type metadata accessor for FMIPItemActionStatus(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100053F2C(&qword_1005D81A0);
  __chkstk_darwin(v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  type metadata accessor for MainActor(0);
  swift_errorRetain(a2);
  v14 = a3;
  v15 = static MainActor.shared.getter(v14);
  v16 = *(unsigned __int8 *)(v7 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (v8 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  v20 = swift_allocObject(&unk_100552CD0, v19 + 8, v16 | 7);
  *(_QWORD *)(v20 + 16) = v15;
  *(_QWORD *)(v20 + 24) = &protocol witness table for MainActor;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v20 + v17, v9, v6);
  *(_QWORD *)(v20 + v18) = v24;
  *(_QWORD *)(v20 + v19) = v14;
  v21 = sub_100138D6C((uint64_t)v12, (uint64_t)&unk_1005DCDF0, v20);
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

uint64_t sub_100247D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6[17] = a5;
  v6[18] = a6;
  v6[16] = a4;
  v7 = type metadata accessor for FMIPItemActionStatus(0);
  v6[19] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[20] = v8;
  v6[21] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v6[22] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  return swift_task_switch(sub_100247E1C, v10, v11);
}

uint64_t sub_100247E1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  const void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  Swift::String v11;
  Swift::String v12;
  void *object;
  id v14;
  Swift::String v15;
  Swift::String v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  id v29;
  Swift::String v30;
  Swift::String_optional v31;
  Swift::String v32;
  id v33;
  Swift::String v34;
  Swift::String_optional v35;
  Swift::String v36;
  uint64_t v37;
  NSString v38;
  NSString v39;
  id v40;
  id v41;
  Swift::String v42;
  Swift::String v43;
  void *v44;
  NSString v45;
  void *v46;
  id v47;
  void *Strong;
  void *v49;
  Swift::String v51;
  Swift::String v52;
  Swift::String v53;
  Swift::String v54;
  Swift::String v55;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 128);
  v5 = swift_release(*(_QWORD *)(v0 + 176));
  (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v3 + 104))(v1, enum case for FMIPItemActionStatus.success(_:), v2, v5);
  v6 = sub_100008000(&qword_1005D4140, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItemActionStatus, (uint64_t)&protocol conformance descriptor for FMIPItemActionStatus);
  LOBYTE(v4) = dispatch thunk of static Equatable.== infix(_:_:)(v4, v1, v2, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  if ((v4 & 1) != 0)
    goto LABEL_14;
  v7 = (const void *)(v0 + 16);
  v8 = *(_QWORD *)(v0 + 136);
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v9 = (void *)objc_opt_self(NSBundle);
  v10 = objc_msgSend(v9, "mainBundle");
  v51._countAndFlagsBits = 0xD00000000000001FLL;
  v51._object = (void *)0x80000001004B5B60;
  v11._countAndFlagsBits = 0x5F4552554C494146;
  v11._object = (void *)0xED0000454C544954;
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v51)._object;

  _StringGuts.grow(_:)(20);
  v14 = objc_msgSend(v9, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
  v52._countAndFlagsBits = 0xD000000000000021;
  v52._object = (void *)0x80000001004A8FE0;
  v15._countAndFlagsBits = 0x5F4552554C494146;
  v15._object = (void *)0xEF4547415353454DLL;
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v52)._object;

  if (v8)
  {
    v18 = *(_QWORD *)(v0 + 136);
    swift_getErrorValue(v18, v0 + 112, v0 + 64);
    v19 = *(_QWORD *)(v0 + 72);
    v20 = *(_QWORD *)(v0 + 80);
    swift_errorRetain(v18);
    v21 = sub_10021EF24(v19, v20);
    v23 = v22;
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(SPBeaconSharingErrorDomain);
    v26 = v24;
    if (v21 == v25 && v23 == v24)
    {
      swift_bridgeObjectRelease_n(v23, 2);
    }
    else
    {
      v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v23, v25, v24, 0);
      swift_bridgeObjectRelease(v26);
      swift_bridgeObjectRelease(v23);
      if ((v27 & 1) == 0)
      {
LABEL_10:
        swift_errorRelease(v18);
        v7 = (const void *)(v0 + 16);
        goto LABEL_11;
      }
    }
    swift_getErrorValue(v18, v0 + 120, v0 + 88);
    v28 = (unint64_t)sub_10021EE24(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
    if (v28 <= 0xD && ((1 << v28) & 0x3080) != 0)
    {
      swift_bridgeObjectRelease(v17);
      v29 = objc_msgSend(v9, "mainBundle", swift_bridgeObjectRelease(object).n128_f64[0]);
      v30._countAndFlagsBits = 0xD00000000000002BLL;
      v53._object = (void *)0x80000001004A8F80;
      v30._object = (void *)0x80000001004ACEC0;
      v31.value._countAndFlagsBits = 0xD000000000000013;
      v31.value._object = (void *)0x80000001004A8F60;
      v32._countAndFlagsBits = 0;
      v32._object = (void *)0xE000000000000000;
      v53._countAndFlagsBits = 0xD000000000000018;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v30, v31, (NSBundle)v29, v32, v53)._object;

      v33 = objc_msgSend(v9, "mainBundle");
      v34._countAndFlagsBits = 0xD00000000000002DLL;
      v54._object = (void *)0x80000001004A8F80;
      v34._object = (void *)0x80000001004ACEF0;
      v35.value._countAndFlagsBits = 0xD000000000000013;
      v35.value._object = (void *)0x80000001004A8F60;
      v36._countAndFlagsBits = 0;
      v36._object = (void *)0xE000000000000000;
      v54._countAndFlagsBits = 0xD000000000000018;
      v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v34, v35, (NSBundle)v33, v36, v54)._object;

    }
    goto LABEL_10;
  }
LABEL_11:
  v37 = *(_QWORD *)(v0 + 144);
  v38 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v39 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v17);
  v40 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v38, v39, 1);

  _StringGuts.grow(_:)(20);
  v41 = objc_msgSend(v9, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
  v55._object = (void *)0x80000001004A5EE0;
  v42._countAndFlagsBits = 0x4F545455425F4B4FLL;
  v42._object = (void *)0xEF454C5449545F4ELL;
  v43._countAndFlagsBits = 0;
  v43._object = (void *)0xE000000000000000;
  v55._countAndFlagsBits = 0xD000000000000021;
  v44 = NSLocalizedString(_:tableName:bundle:value:comment:)(v42, (Swift::String_optional)0, (NSBundle)v41, v43, v55)._object;

  v45 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v44);
  *(_QWORD *)(v0 + 48) = State.rawValue.getter;
  *(_QWORD *)(v0 + 56) = 0;
  *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_100008B40;
  *(_QWORD *)(v0 + 40) = &unk_100552CE8;
  v46 = _Block_copy(v7);
  swift_release(*(_QWORD *)(v0 + 56));
  v47 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v45, 0, v46);
  _Block_release(v46);

  objc_msgSend(v40, "addAction:", v47);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v37 + qword_1005DC8E8);
  if (Strong)
  {
    v49 = Strong;
    objc_msgSend(Strong, "presentViewController:animated:completion:", v40, 1, 0);

  }
LABEL_14:
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1002483F4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2[11] = a1;
  v2[12] = v1;
  v3 = type metadata accessor for FMFFriend(0);
  v2[13] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[14] = v4;
  v2[15] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  v2[16] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FMIPItem(0);
  v2[17] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v2[18] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v2[19] = v8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[20] = swift_task_alloc(v9);
  v2[21] = swift_task_alloc(v9);
  v2[22] = swift_task_alloc(v9);
  v10 = sub_100053F2C((uint64_t *)&unk_1005D53A0);
  v2[23] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v10 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FMIPBeaconShareState(0);
  v2[24] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v2[25] = v12;
  v13 = (*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[26] = swift_task_alloc(v13);
  v2[27] = swift_task_alloc(v13);
  v14 = type metadata accessor for FMBeaconSharingModuleEntry(0);
  v2[28] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v14 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
  v2[29] = v15;
  v16 = (*(_QWORD *)(*(_QWORD *)(v15 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[30] = swift_task_alloc(v16);
  v2[31] = swift_task_alloc(v16);
  v2[32] = swift_task_alloc(v16);
  v2[33] = swift_task_alloc(v16);
  v17 = (*(_QWORD *)(*(_QWORD *)(type metadata accessor for FMBeaconSharingModuleShareState(0) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[34] = swift_task_alloc(v17);
  v2[35] = swift_task_alloc(v17);
  v2[36] = swift_task_alloc(v17);
  v18 = type metadata accessor for UUID(0);
  v2[37] = v18;
  v19 = *(_QWORD *)(v18 - 8);
  v2[38] = v19;
  v20 = *(_QWORD *)(v19 + 64);
  v2[39] = v20;
  v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF0;
  v2[40] = swift_task_alloc(v21);
  v2[41] = swift_task_alloc(v21);
  v2[42] = swift_task_alloc(v21);
  v2[43] = swift_task_alloc(v21);
  v22 = type metadata accessor for MainActor(0);
  v2[44] = static MainActor.shared.getter(v22);
  v23 = dispatch thunk of Actor.unownedExecutor.getter(v22, &protocol witness table for MainActor);
  v2[45] = v23;
  v2[46] = v24;
  return swift_task_switch(sub_10024864C, v23, v24);
}

uint64_t sub_10024864C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 96) + qword_1005DC8E0);
  *(_QWORD *)(v0 + 376) = v1;
  return swift_task_switch(sub_100248670, v1, 0);
}

uint64_t sub_100248670()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 368);
  *(_BYTE *)(v0 + 408) = *(_BYTE *)(*(_QWORD *)(v0 + 376)
                                  + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_viewModel
                                  + 18);
  return swift_task_switch(sub_100248698, *(_QWORD *)(v0 + 360), v1);
}

uint64_t sub_100248698()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  if (*(_BYTE *)(v0 + 408) != 1)
  {
    swift_release(*(_QWORD *)(v0 + 352));
    goto LABEL_5;
  }
  v1 = *(_QWORD *)(v0 + 224);
  sub_10004FC74(*(_QWORD *)(v0 + 88), v1, type metadata accessor for FMBeaconSharingModuleEntry);
  v2 = sub_100053F2C(&qword_1005DCB20);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 2, v2))
  {
    v3 = *(_QWORD *)(v0 + 224);
    swift_release(*(_QWORD *)(v0 + 352));
    sub_10004FCB8(v3, type metadata accessor for FMBeaconSharingModuleEntry);
LABEL_5:
    v4 = *(_QWORD *)(v0 + 336);
    v5 = *(_QWORD *)(v0 + 320);
    v6 = *(_QWORD *)(v0 + 328);
    v8 = *(_QWORD *)(v0 + 280);
    v7 = *(_QWORD *)(v0 + 288);
    v10 = *(_QWORD *)(v0 + 264);
    v9 = *(_QWORD *)(v0 + 272);
    v12 = *(_QWORD *)(v0 + 248);
    v11 = *(_QWORD *)(v0 + 256);
    v54 = *(_QWORD *)(v0 + 240);
    v55 = *(_QWORD *)(v0 + 224);
    v56 = *(_QWORD *)(v0 + 216);
    v57 = *(_QWORD *)(v0 + 208);
    v58 = *(_QWORD *)(v0 + 184);
    v59 = *(_QWORD *)(v0 + 176);
    v60 = *(_QWORD *)(v0 + 168);
    v61 = *(_QWORD *)(v0 + 160);
    v62 = *(_QWORD *)(v0 + 128);
    v64 = *(_QWORD *)(v0 + 120);
    swift_task_dealloc(*(_QWORD *)(v0 + 344));
    swift_task_dealloc(v4);
    swift_task_dealloc(v6);
    swift_task_dealloc(v5);
    swift_task_dealloc(v7);
    swift_task_dealloc(v8);
    swift_task_dealloc(v9);
    swift_task_dealloc(v10);
    swift_task_dealloc(v11);
    swift_task_dealloc(v12);
    swift_task_dealloc(v54);
    swift_task_dealloc(v55);
    swift_task_dealloc(v56);
    swift_task_dealloc(v57);
    swift_task_dealloc(v58);
    swift_task_dealloc(v59);
    swift_task_dealloc(v60);
    swift_task_dealloc(v61);
    swift_task_dealloc(v62);
    swift_task_dealloc(v64);
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  v14 = *(_QWORD *)(v0 + 336);
  v15 = *(_QWORD *)(v0 + 296);
  v16 = *(_QWORD *)(v0 + 304);
  v18 = *(_QWORD *)(v0 + 280);
  v17 = *(_QWORD *)(v0 + 288);
  v19 = *(_QWORD *)(v0 + 224);
  v20 = v19 + *(int *)(v2 + 48);
  v21 = v19 + *(int *)(v2 + 64);
  v22 = *(_QWORD *)(v0 + 272);
  v63 = *(_QWORD *)(v0 + 264);
  v65 = *(_QWORD *)(v0 + 344);
  v23 = *(_QWORD *)(v0 + 256);
  sub_100051774(v19, v23, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  sub_100051774(v20, v18, type metadata accessor for FMBeaconSharingModuleShareState);
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32);
  *(_QWORD *)(v0 + 384) = v24;
  v24(v14, v21, v15);
  sub_10004FC74(v18, v17, type metadata accessor for FMBeaconSharingModuleShareState);
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
  *(_QWORD *)(v0 + 392) = v25;
  v25(v65, v14, v15);
  sub_10004FC74(v23, v63, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  sub_10004FC74(v18, v22, type metadata accessor for FMBeaconSharingModuleShareState);
  v26 = sub_100053F2C(&qword_1005DCB28);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v22, 1, v26) == 1)
  {
    v27 = *(_QWORD *)(v0 + 280);
    v28 = *(_QWORD *)(v0 + 256);
    v29 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 304) + 8);
    v29(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 296));
    sub_10004FCB8(v27, type metadata accessor for FMBeaconSharingModuleShareState);
    sub_10004FCB8(v28, type metadata accessor for FMBeaconSharingModuleRelationshipType);
LABEL_11:
    v43 = 0;
LABEL_12:
    *(_BYTE *)(v0 + 409) = v43;
    *(_QWORD *)(v0 + 400) = v29;
    return swift_task_switch(sub_100248C04, *(_QWORD *)(v0 + 376), 0);
  }
  v30 = *(_QWORD *)(v0 + 208);
  v31 = *(_QWORD *)(v0 + 216);
  v32 = *(_QWORD *)(v0 + 192);
  v33 = *(_QWORD *)(v0 + 200);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v33 + 32))(v31, *(_QWORD *)(v0 + 272), v32);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v30, v31, v32);
  v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 88))(v30, v32);
  if (v34 == enum case for FMIPBeaconShareState.accepting(_:)
    || v34 == enum case for FMIPBeaconShareState.declining(_:))
  {
    v35 = *(_QWORD *)(v0 + 336);
    v36 = *(_QWORD *)(v0 + 296);
    v37 = *(_QWORD *)(v0 + 304);
    v38 = *(_QWORD *)(v0 + 280);
    v39 = *(_QWORD *)(v0 + 256);
    v40 = *(_QWORD **)(v0 + 208);
    v41 = *(_QWORD *)(v0 + 192);
    v42 = *(_QWORD *)(v0 + 200);
    (*(void (**)(_QWORD, uint64_t))(v42 + 8))(*(_QWORD *)(v0 + 216), v41);
    v29 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
    v29(v35, v36);
    sub_10004FCB8(v38, type metadata accessor for FMBeaconSharingModuleShareState);
    sub_10004FCB8(v39, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    (*(void (**)(_QWORD *, uint64_t))(v42 + 96))(v40, v41);
    swift_release(*v40);
    goto LABEL_11;
  }
  if (v34 == enum case for FMIPBeaconShareState.unknown(_:))
  {
LABEL_14:
    v44 = *(_QWORD *)(v0 + 336);
    v45 = *(_QWORD *)(v0 + 296);
    v46 = *(_QWORD *)(v0 + 304);
    v47 = *(_QWORD *)(v0 + 280);
    v48 = *(_QWORD *)(v0 + 256);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 192));
    v29 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
    v29(v44, v45);
    sub_10004FCB8(v47, type metadata accessor for FMBeaconSharingModuleShareState);
    sub_10004FCB8(v48, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    goto LABEL_11;
  }
  if (v34 == enum case for FMIPBeaconShareState.invitationSent(_:))
    goto LABEL_16;
  if (v34 == enum case for FMIPBeaconShareState.invitationReceived(_:))
    goto LABEL_14;
  if (v34 == enum case for FMIPBeaconShareState.requestSent(_:))
    goto LABEL_16;
  if (v34 == enum case for FMIPBeaconShareState.requestReceived(_:)
    || v34 == enum case for FMIPBeaconShareState.accepted(_:)
    || v34 == enum case for FMIPBeaconShareState.expired(_:)
    || v34 == enum case for FMIPBeaconShareState.withdrawing(_:))
  {
    goto LABEL_14;
  }
  if (v34 == enum case for FMIPBeaconShareState.failed(_:))
  {
LABEL_16:
    v49 = *(_QWORD *)(v0 + 336);
    v50 = *(_QWORD *)(v0 + 296);
    v51 = *(_QWORD *)(v0 + 304);
    v52 = *(_QWORD *)(v0 + 280);
    v53 = *(_QWORD *)(v0 + 256);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 200) + 8))(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 192));
    v29 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
    v29(v49, v50);
    sub_10004FCB8(v52, type metadata accessor for FMBeaconSharingModuleShareState);
    sub_10004FCB8(v53, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    v43 = 1;
    goto LABEL_12;
  }
  return _diagnoseUnexpectedEnumCase<A>(type:)(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 192));
}

uint64_t sub_100248C04()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[23];
  v2 = v0[47] + OBJC_IVAR____TtC6FindMy31FMBeaconSharingModuleDataSource_beaconIdentifier;
  swift_beginAccess(v2, v0 + 8, 0, 0);
  sub_100007464(v2, v1, (uint64_t *)&unk_1005D53A0);
  return swift_task_switch(sub_100248C70, v0[45], v0[46]);
}

uint64_t sub_100248C70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  int v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int EnumCaseMultiPayload;
  void **v42;
  void *v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (**v69)();
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  id v77;
  NSString v78;
  void *v79;
  void (*v80)(uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(uint64_t, uint64_t, uint64_t);
  char *v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(uint64_t, uint64_t, uint64_t);
  void *v98;
  uint64_t v99;
  id v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(uint64_t, uint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(uint64_t, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;

  v1 = *(_QWORD *)(v0 + 296);
  v2 = *(_QWORD *)(v0 + 304);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = swift_release(*(_QWORD *)(v0 + 352));
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v2 + 48))(v3, 1, v1, v4);
  v6 = *(_QWORD *)(v0 + 296);
  if (v5 == 1)
  {
    v7 = *(void (**)(uint64_t, uint64_t))(v0 + 400);
    v8 = *(_QWORD *)(v0 + 344);
    v9 = *(_QWORD *)(v0 + 288);
    v10 = *(_QWORD *)(v0 + 184);
    sub_10004FCB8(*(_QWORD *)(v0 + 264), type metadata accessor for FMBeaconSharingModuleRelationshipType);
    sub_10004FCB8(v9, type metadata accessor for FMBeaconSharingModuleShareState);
    v7(v8, v6);
    v11 = (uint64_t *)&unk_1005D53A0;
    v12 = v10;
LABEL_8:
    sub_1000051EC(v12, v11);
    v100 = 0;
    goto LABEL_15;
  }
  v13 = *(_QWORD *)(v0 + 96);
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 384))(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 296));
  v14 = *(_QWORD *)(v13 + qword_1005DC8D8);
  v15 = *(_QWORD *)(v14 + 24);
  v16 = swift_retain(v15);
  v17 = UUID.uuidString.getter(v16);
  v19 = v18;
  v20 = FMIPManager.items.getter(v17);
  swift_bridgeObjectRetain(v19);
  v21 = sub_100114030(v20, v17, v19);
  swift_bridgeObjectRelease(v20);
  v22 = swift_bridgeObjectRelease(v19);
  if (v21[2])
  {
    (*(void (**)(_QWORD, unint64_t, _QWORD, __n128))(*(_QWORD *)(v0 + 144) + 16))(*(_QWORD *)(v0 + 128), (unint64_t)v21+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 144) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 144) + 80)), *(_QWORD *)(v0 + 136), v22);
    v23 = 0;
  }
  else
  {
    v23 = 1;
  }
  v24 = *(_QWORD *)(v0 + 136);
  v25 = *(_QWORD *)(v0 + 144);
  v26 = *(_QWORD *)(v0 + 128);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v26, v23, 1, v24);
  swift_bridgeObjectRelease(v19);
  swift_bridgeObjectRelease(v21);
  v27 = swift_release(v15);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v25 + 48))(v26, 1, v24, v27) == 1)
  {
    v28 = *(void (**)(uint64_t, uint64_t))(v0 + 400);
    v29 = *(_QWORD *)(v0 + 344);
    v31 = *(_QWORD *)(v0 + 288);
    v30 = *(_QWORD *)(v0 + 296);
    v32 = *(_QWORD *)(v0 + 264);
    v33 = *(_QWORD *)(v0 + 128);
    v28(*(_QWORD *)(v0 + 328), v30);
    sub_10004FCB8(v32, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    sub_10004FCB8(v31, type metadata accessor for FMBeaconSharingModuleShareState);
    v28(v29, v30);
    v11 = (uint64_t *)&unk_1005D3AA0;
    v12 = v33;
    goto LABEL_8;
  }
  v34 = *(_QWORD *)(v0 + 264);
  v35 = *(_QWORD *)(v0 + 248);
  v36 = *(_QWORD *)(v0 + 232);
  v38 = *(_QWORD *)(v0 + 168);
  v37 = *(_QWORD *)(v0 + 176);
  v39 = *(_QWORD *)(v0 + 136);
  v40 = *(_QWORD *)(v0 + 144);
  v108 = *(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32);
  v108(v37, *(_QWORD *)(v0 + 128), v39);
  v104 = *(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16);
  v104(v38, v37, v39);
  sub_10004FC74(v34, v35, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v35, v36);
  v42 = *(void ***)(v0 + 248);
  if (EnumCaseMultiPayload == 1)
  {
    v43 = *v42;
    swift_retain(v14);
    v44 = sub_1000C11F8();
    v46 = v45;

  }
  else
  {
    v48 = *(_QWORD *)(v0 + 112);
    v47 = *(_QWORD *)(v0 + 120);
    v49 = *(_QWORD *)(v0 + 104);
    (*(void (**)(uint64_t, void **, uint64_t))(v48 + 32))(v47, v42, v49);
    v50 = swift_retain(v14);
    v44 = FMFFriend.shortName.getter(v50);
    v46 = v51;
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v49);
  }
  v52 = v14;
  sub_10004FC74(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 240), type metadata accessor for FMBeaconSharingModuleRelationshipType);
  if (!v46)
  {
    v44 = sub_10023AEFC();
    v46 = v53;
  }
  v101 = *(_BYTE *)(v0 + 409);
  v54 = *(_QWORD *)(v0 + 344);
  v106 = v54;
  v112 = *(_QWORD *)(v0 + 328);
  v92 = *(_QWORD *)(v0 + 320);
  v93 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 392);
  v96 = *(_QWORD *)(v0 + 312);
  v97 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 384);
  v115 = *(_QWORD *)(v0 + 296);
  v117 = *(_QWORD *)(v0 + 304);
  v119 = *(_QWORD *)(v0 + 288);
  v110 = *(_QWORD *)(v0 + 264);
  v56 = *(_QWORD *)(v0 + 168);
  v55 = *(_QWORD *)(v0 + 176);
  v102 = v55;
  v91 = *(_QWORD *)(v0 + 160);
  v57 = *(_QWORD *)(v0 + 144);
  v95 = *(_QWORD *)(v0 + 152);
  v58 = *(_QWORD *)(v0 + 136);
  v98 = *(void **)(v0 + 96);
  v99 = v57;
  sub_10004FCB8(*(_QWORD *)(v0 + 240), type metadata accessor for FMBeaconSharingModuleRelationshipType);
  v59 = objc_allocWithZone((Class)type metadata accessor for FMItemSharingLandingViewController(0));
  v94 = (char *)sub_1003317B4(v56, v52, v44, v46);
  swift_release(v52);
  v60 = swift_allocObject(&unk_1005528E8, 24, 7);
  swift_unknownObjectWeakInit(v60 + 16);
  v93(v92, v54, v115);
  v104(v91, v55, v58);
  v61 = *(unsigned __int8 *)(v117 + 80);
  v62 = (v61 + 24) & ~v61;
  v63 = *(unsigned __int8 *)(v57 + 80);
  v64 = (v96 + v63 + v62) & ~v63;
  v65 = (v95 + v64 + 7) & 0xFFFFFFFFFFFFFFF8;
  v66 = swift_allocObject(&unk_100552B40, v65 + 8, v61 | v63 | 7);
  *(_QWORD *)(v66 + 16) = v60;
  v97(v66 + v62, v92, v115);
  v67 = v58;
  v108(v66 + v64, v91, v58);
  *(_QWORD *)(v66 + v65) = v94;
  v68 = swift_allocObject(&unk_100552B68, 32, 7);
  *(_QWORD *)(v68 + 16) = sub_100252F80;
  *(_QWORD *)(v68 + 24) = v66;
  v69 = (uint64_t (**)())&v94[qword_1005F5AE0];
  v70 = *(_QWORD *)&v94[qword_1005F5AE0];
  v71 = *(_QWORD *)&v94[qword_1005F5AE0 + 8];
  *v69 = sub_100021E58;
  v69[1] = (uint64_t (*)())v68;
  v72 = v94;
  swift_retain(v66);
  sub_1000327F0(v70, v71);
  sub_10023A934();
  v74 = v73;
  v75 = swift_allocObject(&unk_100552B90, 56, 7);
  *(_BYTE *)(v75 + 16) = v101;
  *(_QWORD *)(v75 + 24) = sub_100252F80;
  *(_QWORD *)(v75 + 32) = v66;
  *(_QWORD *)(v75 + 40) = v72;
  *(_QWORD *)(v75 + 48) = v98;
  v76 = v72;
  swift_retain(v66);
  v77 = v98;
  v78 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v74);
  *(_QWORD *)(v0 + 48) = sub_10025302C;
  *(_QWORD *)(v0 + 56) = v75;
  *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_100008B40;
  *(_QWORD *)(v0 + 40) = &unk_100552BA8;
  v79 = _Block_copy((const void *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 56));
  v100 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v78, 2, v79);
  _Block_release(v79);

  swift_release(v66);
  (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v102, v67);
  v80 = *(void (**)(uint64_t, uint64_t))(v117 + 8);
  v80(v112, v115);
  sub_10004FCB8(v110, type metadata accessor for FMBeaconSharingModuleRelationshipType);
  sub_10004FCB8(v119, type metadata accessor for FMBeaconSharingModuleShareState);
  v80(v106, v115);
LABEL_15:
  v81 = *(_QWORD *)(v0 + 336);
  v82 = *(_QWORD *)(v0 + 320);
  v83 = *(_QWORD *)(v0 + 328);
  v85 = *(_QWORD *)(v0 + 280);
  v84 = *(_QWORD *)(v0 + 288);
  v87 = *(_QWORD *)(v0 + 264);
  v86 = *(_QWORD *)(v0 + 272);
  v89 = *(_QWORD *)(v0 + 248);
  v88 = *(_QWORD *)(v0 + 256);
  v103 = *(_QWORD *)(v0 + 240);
  v105 = *(_QWORD *)(v0 + 224);
  v107 = *(_QWORD *)(v0 + 216);
  v109 = *(_QWORD *)(v0 + 208);
  v111 = *(_QWORD *)(v0 + 184);
  v113 = *(_QWORD *)(v0 + 176);
  v114 = *(_QWORD *)(v0 + 168);
  v116 = *(_QWORD *)(v0 + 160);
  v118 = *(_QWORD *)(v0 + 128);
  v120 = *(_QWORD *)(v0 + 120);
  swift_task_dealloc(*(_QWORD *)(v0 + 344));
  swift_task_dealloc(v81);
  swift_task_dealloc(v83);
  swift_task_dealloc(v82);
  swift_task_dealloc(v84);
  swift_task_dealloc(v85);
  swift_task_dealloc(v86);
  swift_task_dealloc(v87);
  swift_task_dealloc(v88);
  swift_task_dealloc(v89);
  swift_task_dealloc(v103);
  swift_task_dealloc(v105);
  swift_task_dealloc(v107);
  swift_task_dealloc(v109);
  swift_task_dealloc(v111);
  swift_task_dealloc(v113);
  swift_task_dealloc(v114);
  swift_task_dealloc(v116);
  swift_task_dealloc(v118);
  swift_task_dealloc(v120);
  return (*(uint64_t (**)(id))(v0 + 8))(v100);
}

void sub_1002493CC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t Strong;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  double v25;
  id v26;
  char v27[24];

  v26 = a4;
  v7 = type metadata accessor for FMIPItem(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  __chkstk_darwin(v7);
  v10 = &v27[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = type metadata accessor for UUID(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = &v27[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v27, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v16 = (char *)Strong;
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
    v17 = type metadata accessor for FMIPWithdrawShareAction(0);
    swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
    v18 = FMIPWithdrawShareAction.init(shareIdentifier:)(v14);
    v19 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v16[qword_1005DC8D8] + 24) + 32);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(&v27[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], a3, v7);
    v20 = *(unsigned __int8 *)(v8 + 80);
    v21 = (v20 + 16) & ~v20;
    v22 = (v9 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
    v23 = swift_allocObject(&unk_100552BE0, v22 + 8, v20 | 7);
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v23 + v21, v10, v7);
    *(_QWORD *)(v23 + v22) = v16;
    swift_retain(v19);
    v24 = v16;
    sub_1000B34B4(v18, (uint64_t)sub_100253048, v23);
    swift_release(v19);
    *(_QWORD *)&v25 = swift_release(v23).n128_u64[0];
    objc_msgSend(v26, "dismissViewControllerAnimated:completion:", 1, 0, v25);
    swift_release(v18);

  }
}

double sub_1002495B4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;

  v32 = a3;
  v33 = a4;
  v27 = a2;
  v31 = a1;
  v5 = type metadata accessor for FMIPItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  v29 = v5;
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v30 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FMIPItemActionStatus(0);
  v9 = *(_QWORD *)(v8 - 8);
  v28 = v8;
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100053F2C(&qword_1005D81A0);
  __chkstk_darwin(v12);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v31, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v32, v5);
  type metadata accessor for MainActor(0);
  swift_errorRetain(a2);
  v33 = v33;
  v16 = static MainActor.shared.getter(v33);
  v17 = *(unsigned __int8 *)(v9 + 80);
  v18 = (v17 + 32) & ~v17;
  v19 = (v10 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = *(unsigned __int8 *)(v6 + 80);
  v21 = (v20 + v19 + 8) & ~v20;
  v22 = (v7 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  v23 = swift_allocObject(&unk_100552C08, v22 + 8, v17 | v20 | 7);
  *(_QWORD *)(v23 + 16) = v16;
  *(_QWORD *)(v23 + 24) = &protocol witness table for MainActor;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v23 + v18, v11, v28);
  *(_QWORD *)(v23 + v19) = v27;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v23 + v21, v30, v29);
  *(_QWORD *)(v23 + v22) = v33;
  v24 = sub_100138D6C((uint64_t)v14, (uint64_t)&unk_1005DCDE0, v23);
  *(_QWORD *)&result = swift_release(v24).n128_u64[0];
  return result;
}

uint64_t sub_1002497D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7[18] = a6;
  v7[19] = a7;
  v7[16] = a4;
  v7[17] = a5;
  v8 = type metadata accessor for FMIPProductType(0);
  v7[20] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[21] = v9;
  v7[22] = swift_task_alloc((*(_QWORD *)(v9 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FMIPItemActionStatus(0);
  v7[23] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v7[24] = v11;
  v7[25] = swift_task_alloc((*(_QWORD *)(v11 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for MainActor(0);
  v7[26] = static MainActor.shared.getter(v12);
  v13 = dispatch thunk of Actor.unownedExecutor.getter(v12, &protocol witness table for MainActor);
  return swift_task_switch(sub_100249894, v13, v14);
}

uint64_t sub_100249894()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  uint64_t v18;
  void *v19;
  NSBundle v20;
  Swift::String v21;
  Swift::String_optional v22;
  Swift::String v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  unint64_t v28;
  const char *v29;
  void *v30;
  id v31;
  Swift::String v32;
  Swift::String v33;
  void *object;
  id v35;
  Swift::String v36;
  Swift::String v37;
  void *v38;
  NSString v39;
  NSString v40;
  id v41;
  id v42;
  Swift::String v43;
  Swift::String v44;
  void *v45;
  NSString v46;
  void *v47;
  id v48;
  void *Strong;
  void *v50;
  unint64_t v51;
  Swift::String_optional v52;
  Swift::String v53;
  unint64_t v54;
  void *v55;
  uint64_t v56;
  NSString v57;
  NSString v58;
  id v59;
  id v60;
  Swift::String v61;
  Swift::String v62;
  void *v63;
  NSString v64;
  id v65;
  void *v66;
  uint64_t v67;
  unint64_t v69;
  void (**aBlock)(uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  Swift::String v73;
  Swift::String v74;
  Swift::String v75;
  Swift::String v76;
  Swift::String v77;

  v1 = v0[25];
  v2 = v0[23];
  v3 = v0[24];
  v4 = v0[16];
  v5 = swift_release(v0[26]);
  (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v3 + 104))(v1, enum case for FMIPItemActionStatus.success(_:), v2, v5);
  v6 = sub_100008000(&qword_1005D4140, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItemActionStatus, (uint64_t)&protocol conformance descriptor for FMIPItemActionStatus);
  LOBYTE(v4) = dispatch thunk of static Equatable.== infix(_:_:)(v4, v1, v2, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  if ((v4 & 1) == 0)
  {
    v7 = v0[17];
    if (!v7)
    {
LABEL_14:
      v72 = v0[19];
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(0xE000000000000000);
      v30 = (void *)objc_opt_self(NSBundle);
      v31 = objc_msgSend(v30, "mainBundle");
      v74._countAndFlagsBits = 0xD00000000000001FLL;
      v74._object = (void *)0x80000001004B5B60;
      v32._countAndFlagsBits = 0x5F4552554C494146;
      v32._object = (void *)0xED0000454C544954;
      v33._countAndFlagsBits = 0;
      v33._object = (void *)0xE000000000000000;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v32, (Swift::String_optional)0, (NSBundle)v31, v33, v74)._object;

      _StringGuts.grow(_:)(20);
      v35 = objc_msgSend(v30, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
      v75._object = (void *)0x80000001004A8FE0;
      v36._countAndFlagsBits = 0x5F4552554C494146;
      v36._object = (void *)0xEF4547415353454DLL;
      v37._countAndFlagsBits = 0;
      v37._object = (void *)0xE000000000000000;
      v75._countAndFlagsBits = 0xD000000000000021;
      v38 = NSLocalizedString(_:tableName:bundle:value:comment:)(v36, (Swift::String_optional)0, (NSBundle)v35, v37, v75)._object;

      v39 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(object);
      v40 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v38);
      v41 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v39, v40, 1);

      _StringGuts.grow(_:)(20);
      v42 = objc_msgSend(v30, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
      v76._object = (void *)0x80000001004A5EE0;
      v43._countAndFlagsBits = 0x4F545455425F4B4FLL;
      v43._object = (void *)0xEF454C5449545F4ELL;
      v44._countAndFlagsBits = 0;
      v44._object = (void *)0xE000000000000000;
      v76._countAndFlagsBits = 0xD000000000000021;
      v45 = NSLocalizedString(_:tableName:bundle:value:comment:)(v43, (Swift::String_optional)0, (NSBundle)v42, v44, v76)._object;

      v46 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v45);
      v0[6] = State.rawValue.getter;
      v0[7] = 0;
      v0[2] = _NSConcreteStackBlock;
      v0[3] = 1107296256;
      v0[4] = sub_100008B40;
      v0[5] = &unk_100552C20;
      v47 = _Block_copy(v0 + 2);
      swift_release(v0[7]);
      v48 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v46, 0, v47);
      _Block_release(v47);

      objc_msgSend(v41, "addAction:", v48);
      Strong = (void *)swift_unknownObjectWeakLoadStrong(v72 + qword_1005DC8E8);
      if (Strong)
      {
        v50 = Strong;
        objc_msgSend(Strong, "presentViewController:animated:completion:", v41, 1, 0);

        goto LABEL_21;
      }

LABEL_20:
      goto LABEL_21;
    }
    swift_getErrorValue(v0[17], v0 + 14, v0 + 8);
    v8 = v0[9];
    v9 = v0[10];
    swift_errorRetain(v7);
    v10 = sub_10021EF24(v8, v9);
    v12 = v11;
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(SPBeaconSharingErrorDomain);
    if (v10 == v13 && v12 == v14)
    {
      swift_bridgeObjectRelease_n(v12, 2);
    }
    else
    {
      v16 = v14;
      v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v10, v12, v13, v14, 0);
      swift_bridgeObjectRelease(v16);
      swift_bridgeObjectRelease(v12);
      if ((v17 & 1) == 0)
      {
LABEL_13:
        swift_errorRelease(v7);
        goto LABEL_14;
      }
    }
    swift_getErrorValue(v7, v0 + 15, v0 + 11);
    if (sub_10021EE24(v0[12], v0[13]) == (id)15)
    {
      v18 = v0[22];
      aBlock = (void (**)(uint64_t, uint64_t))v0[21];
      v71 = v0[20];
      v19 = (void *)objc_opt_self(NSBundle);
      v20.super.isa = (Class)objc_msgSend(v19, "mainBundle");
      v21._countAndFlagsBits = 0xD00000000000001CLL;
      v73._object = (void *)0x80000001004A8F80;
      v21._object = (void *)0x80000001004A9130;
      v22.value._countAndFlagsBits = 0xD000000000000013;
      v22.value._object = (void *)0x80000001004A8F60;
      v23._countAndFlagsBits = 0;
      v23._object = (void *)0xE000000000000000;
      v73._countAndFlagsBits = 0xD000000000000018;
      v24 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, v22, v20, v23, v73)._object;

      v26 = FMIPItem.productType.getter(v25);
      LOBYTE(v20.super.isa) = FMIPProductType.isAirTag.getter(v26);
      aBlock[1](v18, v71);
      v27 = objc_msgSend(v19, "mainBundle");
      if (((uint64_t)v20.super.isa & 1) != 0)
      {
        v28 = 0xD00000000000002CLL;
        v69 = 0x80000001004A8F80;
        v29 = "SHARE_AIRTAG_STOP_SHARE_ERROR_SUBTITLE_OWNER";
      }
      else
      {
        v28 = 0xD00000000000002ALL;
        v69 = 0x80000001004A8F80;
        v29 = "SHARE_ITEM_STOP_SHARE_ERROR_SUBTITLE_OWNER";
      }
      v51 = (unint64_t)(v29 - 32) | 0x8000000000000000;
      v52.value._countAndFlagsBits = 0xD000000000000013;
      v52.value._object = (void *)0x80000001004A8F60;
      v53._countAndFlagsBits = 0;
      v53._object = (void *)0xE000000000000000;
      v54 = 0xD000000000000018;
      v55 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v28, v52, (NSBundle)v27, v53, *(Swift::String *)(&v69 + -8))._object;
      v56 = v0[19];

      v57 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v24);
      v58 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v55);
      v59 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v57, v58, 1);

      _StringGuts.grow(_:)(20);
      v60 = objc_msgSend(v19, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
      v77._countAndFlagsBits = 0xD000000000000021;
      v77._object = (void *)0x80000001004A5EE0;
      v61._countAndFlagsBits = 0x4F545455425F4B4FLL;
      v61._object = (void *)0xEF454C5449545F4ELL;
      v62._countAndFlagsBits = 0;
      v62._object = (void *)0xE000000000000000;
      v63 = NSLocalizedString(_:tableName:bundle:value:comment:)(v61, (Swift::String_optional)0, (NSBundle)v60, v62, v77)._object;

      v64 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v63);
      v65 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v64, 0, 0);

      objc_msgSend(v59, "addAction:", v65);
      v66 = (void *)swift_unknownObjectWeakLoadStrong(v56 + qword_1005DC8E8);
      if (!v66)
      {

        swift_errorRelease(v7);
        goto LABEL_21;
      }
      v41 = v66;
      objc_msgSend(v66, "presentViewController:animated:completion:", v59, 1, 0);

      swift_errorRelease(v7);
      goto LABEL_20;
    }
    goto LABEL_13;
  }
LABEL_21:
  v67 = v0[22];
  swift_task_dealloc(v0[25]);
  swift_task_dealloc(v67);
  return ((uint64_t (*)(void))v0[1])();
}

void sub_10024A074(uint64_t a1, char a2, void (*a3)(void), uint64_t a4, void *a5, uint64_t a6)
{
  void *Strong;
  void *v9;
  id v10;

  if ((a2 & 1) != 0)
  {
    a3();
  }
  else
  {
    objc_allocWithZone((Class)type metadata accessor for FMActivityIndicatingNavigationController());
    v10 = sub_1000A750C(a5, 2);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(a6 + qword_1005DC8E8);
    if (Strong)
    {
      v9 = Strong;
      objc_msgSend(Strong, "presentViewController:animated:completion:", v10, 1, 0);

    }
  }
}

void sub_10024A120()
{
  _swift_stdlib_reportUnimplementedInitializer("FindMy.FMBeaconSharingModuleView", 32, "init()", 6, 0);
  __break(1u);
}

uint64_t sub_10024A14C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + qword_1005DC8D8));
  swift_release(*(_QWORD *)(v0 + qword_1005DC8E0));
  return swift_unknownObjectWeakDestroy(v0 + qword_1005DC8E8);
}

id sub_10024A188()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMBeaconSharingModuleView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10024A1BC(uint64_t a1)
{
  swift_release(*(_QWORD *)(a1 + qword_1005DC8D8));
  swift_release(*(_QWORD *)(a1 + qword_1005DC8E0));
  return swift_unknownObjectWeakDestroy(a1 + qword_1005DC8E8);
}

uint64_t type metadata accessor for FMBeaconSharingModuleView(uint64_t a1)
{
  return sub_10001DC04(a1, (uint64_t *)&unk_1005DC918, (uint64_t)&nominal type descriptor for FMBeaconSharingModuleView);
}

uint64_t sub_10024A218(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[2] = "\b";
  return swift_initClassMetadata2(a1, 256, 3, v2, a1 + 312);
}

uint64_t sub_10024A268()
{
  return type metadata accessor for FMBeaconSharingModuleView(0);
}

char *sub_10024A270(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v9[(v6 + 16) & ~(unint64_t)v6];
    swift_retain(v9);
  }
  else
  {
    v7 = sub_100053F2C(&qword_1005DCB20);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
      if (swift_getEnumCaseMultiPayload(a2, v10) == 1)
      {
        v11 = *a2;
        *(_QWORD *)a1 = *a2;
        v12 = v11;
        v13 = a1;
        v14 = v10;
        v15 = 1;
      }
      else
      {
        v16 = type metadata accessor for FMFFriend(0);
        (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
        v13 = a1;
        v14 = v10;
        v15 = 0;
      }
      swift_storeEnumTagMultiPayload(v13, v14, v15);
      v17 = *(int *)(v7 + 48);
      v18 = &a1[v17];
      v19 = (char *)a2 + v17;
      v20 = sub_100053F2C(&qword_1005DCB28);
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
        v22 = type metadata accessor for FMBeaconSharingModuleShareState(0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
      }
      else
      {
        v23 = type metadata accessor for FMIPBeaconShareState(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v18, v19, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      }
      v24 = *(int *)(v7 + 64);
      v25 = &a1[v24];
      v26 = (char *)a2 + v24;
      v27 = type metadata accessor for UUID(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t type metadata accessor for FMBeaconSharingModuleRelationshipType(uint64_t a1)
{
  return sub_10001DC04(a1, qword_1005DCCA0, (uint64_t)&nominal type descriptor for FMBeaconSharingModuleRelationshipType);
}

uint64_t type metadata accessor for FMBeaconSharingModuleShareState(uint64_t a1)
{
  return sub_10001DC04(a1, (uint64_t *)&unk_1005DCC20, (uint64_t)&nominal type descriptor for FMBeaconSharingModuleShareState);
}

uint64_t sub_10024A480(id *a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;

  v2 = sub_100053F2C(&qword_1005DCB20);
  result = (*(uint64_t (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 2, v2);
  if (!(_DWORD)result)
  {
    v4 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
    if (swift_getEnumCaseMultiPayload(a1, v4) == 1)
    {

    }
    else
    {
      v5 = type metadata accessor for FMFFriend(0);
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
    }
    v6 = (char *)a1 + *(int *)(v2 + 48);
    v7 = sub_100053F2C(&qword_1005DCB28);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
    {
      v8 = type metadata accessor for FMIPBeaconShareState(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v6, v8);
    }
    v9 = (char *)a1 + *(int *)(v2 + 64);
    v10 = type metadata accessor for UUID(0);
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  }
  return result;
}

void **sub_10024A590(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void **v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v6 = sub_100053F2C(&qword_1005DCB20);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
    if (swift_getEnumCaseMultiPayload(a2, v8) == 1)
    {
      v9 = *a2;
      *a1 = *a2;
      v10 = v9;
      v11 = a1;
      v12 = v8;
      v13 = 1;
    }
    else
    {
      v14 = type metadata accessor for FMFFriend(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      v11 = a1;
      v12 = v8;
      v13 = 0;
    }
    swift_storeEnumTagMultiPayload(v11, v12, v13);
    v15 = *(int *)(v6 + 48);
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_100053F2C(&qword_1005DCB28);
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = type metadata accessor for FMBeaconSharingModuleShareState(0);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      v21 = type metadata accessor for FMIPBeaconShareState(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v16, v17, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    v22 = *(int *)(v6 + 64);
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
    (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void **sub_10024A754(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void **, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  void *v12;
  id v13;
  void **v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  void **v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(char *, uint64_t, uint64_t);
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v51;

  v6 = sub_100053F2C(&qword_1005DCB20);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1000051EC((uint64_t)a1, &qword_1005DCB20);
      goto LABEL_7;
    }
    if (a1 != a2)
    {
      sub_10004FCB8((uint64_t)a1, type metadata accessor for FMBeaconSharingModuleRelationshipType);
      v17 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
      if (swift_getEnumCaseMultiPayload(a2, v17) == 1)
      {
        v18 = *a2;
        *a1 = *a2;
        v19 = v18;
        v20 = a1;
        v21 = v17;
        v22 = 1;
      }
      else
      {
        v35 = type metadata accessor for FMFFriend(0);
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(a1, a2, v35);
        v20 = a1;
        v21 = v17;
        v22 = 0;
      }
      swift_storeEnumTagMultiPayload(v20, v21, v22);
    }
    v36 = *(int *)(v6 + 48);
    v37 = (char *)a1 + v36;
    v38 = (char *)a2 + v36;
    v39 = sub_100053F2C(&qword_1005DCB28);
    v40 = *(_QWORD *)(v39 - 8);
    v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48);
    v42 = v41(v37, 1, v39);
    v43 = v41(v38, 1, v39);
    if (v42)
    {
      if (!v43)
      {
        v44 = type metadata accessor for FMIPBeaconShareState(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v37, v38, v44);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
LABEL_24:
        v46 = *(int *)(v6 + 64);
        v47 = (char *)a1 + v46;
        v48 = (char *)a2 + v46;
        v49 = type metadata accessor for UUID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 24))(v47, v48, v49);
        return a1;
      }
    }
    else
    {
      if (!v43)
      {
        v51 = type metadata accessor for FMIPBeaconShareState(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 24))(v37, v38, v51);
        goto LABEL_24;
      }
      sub_1000051EC((uint64_t)v37, &qword_1005DCB28);
    }
    v45 = type metadata accessor for FMBeaconSharingModuleShareState(0);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_24;
  }
  if (v10)
  {
LABEL_7:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
  if (swift_getEnumCaseMultiPayload(a2, v11) == 1)
  {
    v12 = *a2;
    *a1 = *a2;
    v13 = v12;
    v14 = a1;
    v15 = v11;
    v16 = 1;
  }
  else
  {
    v23 = type metadata accessor for FMFFriend(0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(a1, a2, v23);
    v14 = a1;
    v15 = v11;
    v16 = 0;
  }
  swift_storeEnumTagMultiPayload(v14, v15, v16);
  v24 = *(int *)(v6 + 48);
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = sub_100053F2C(&qword_1005DCB28);
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    v29 = type metadata accessor for FMBeaconSharingModuleShareState(0);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v30 = type metadata accessor for FMIPBeaconShareState(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v25, v26, v30);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  v31 = *(int *)(v6 + 64);
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  v34 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

char *sub_10024AAE0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = sub_100053F2C(&qword_1005DCB20);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
    if (swift_getEnumCaseMultiPayload(a2, v8))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v9 = type metadata accessor for FMFFriend(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      swift_storeEnumTagMultiPayload(a1, v8, 0);
    }
    v10 = *(int *)(v6 + 48);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = sub_100053F2C(&qword_1005DCB28);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = type metadata accessor for FMBeaconSharingModuleShareState(0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v16 = type metadata accessor for FMIPBeaconShareState(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v11, v12, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    v17 = *(int *)(v6 + 64);
    v18 = &a1[v17];
    v19 = &a2[v17];
    v20 = type metadata accessor for UUID(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

char *sub_10024AC9C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v41;

  v6 = sub_100053F2C(&qword_1005DCB20);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 2, v6);
  v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1000051EC((uint64_t)a1, &qword_1005DCB20);
      goto LABEL_7;
    }
    if (a1 != a2)
    {
      sub_10004FCB8((uint64_t)a1, type metadata accessor for FMBeaconSharingModuleRelationshipType);
      v12 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
      if (swift_getEnumCaseMultiPayload(a2, v12))
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        v25 = type metadata accessor for FMFFriend(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(a1, a2, v25);
        swift_storeEnumTagMultiPayload(a1, v12, 0);
      }
    }
    v26 = *(int *)(v6 + 48);
    v27 = &a1[v26];
    v28 = &a2[v26];
    v29 = sub_100053F2C(&qword_1005DCB28);
    v30 = *(_QWORD *)(v29 - 8);
    v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
    v32 = v31(v27, 1, v29);
    v33 = v31(v28, 1, v29);
    if (v32)
    {
      if (!v33)
      {
        v34 = type metadata accessor for FMIPBeaconShareState(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v27, v28, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
LABEL_23:
        v36 = *(int *)(v6 + 64);
        v37 = &a1[v36];
        v38 = &a2[v36];
        v39 = type metadata accessor for UUID(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 40))(v37, v38, v39);
        return a1;
      }
    }
    else
    {
      if (!v33)
      {
        v41 = type metadata accessor for FMIPBeaconShareState(0);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 40))(v27, v28, v41);
        goto LABEL_23;
      }
      sub_1000051EC((uint64_t)v27, &qword_1005DCB28);
    }
    v35 = type metadata accessor for FMBeaconSharingModuleShareState(0);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_23;
  }
  if (v10)
  {
LABEL_7:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
  if (swift_getEnumCaseMultiPayload(a2, v11))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v13 = type metadata accessor for FMFFriend(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a1, a2, v13);
    swift_storeEnumTagMultiPayload(a1, v11, 0);
  }
  v14 = *(int *)(v6 + 48);
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = sub_100053F2C(&qword_1005DCB28);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    v19 = type metadata accessor for FMBeaconSharingModuleShareState(0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v20 = type metadata accessor for FMIPBeaconShareState(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v15, v16, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  v21 = *(int *)(v6 + 64);
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = type metadata accessor for UUID(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t sub_10024B018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10024B024);
}

uint64_t sub_10024B024(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_100053F2C(&qword_1005DCB20);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3)
    return v5 - 2;
  else
    return 0;
}

uint64_t sub_10024B074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10024B080);
}

uint64_t sub_10024B080(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 2);
  else
    v5 = 0;
  v6 = sub_100053F2C(&qword_1005DCB20);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_10024B0D8(uint64_t a1, uint64_t a2)
{
  return sub_10024B750(a1, a2, &qword_1005DCB20, 2);
}

uint64_t sub_10024B0E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10024B79C(a1, a2, a3, &qword_1005DCB20, 2);
}

uint64_t type metadata accessor for FMBeaconSharingModuleEntry(uint64_t a1)
{
  return sub_10001DC04(a1, (uint64_t *)&unk_1005DCBA0, (uint64_t)&nominal type descriptor for FMBeaconSharingModuleEntry);
}

uint64_t sub_10024B10C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _BYTE v10[32];

  v2 = type metadata accessor for FMBeaconSharingModuleRelationshipType(319);
  v3 = v2;
  if (v4 <= 0x3F)
  {
    v5 = *(_QWORD *)(v2 - 8);
    v3 = type metadata accessor for FMBeaconSharingModuleShareState(319);
    if (v6 <= 0x3F)
    {
      v7 = type metadata accessor for UUID(319);
      if (v8 > 0x3F)
      {
        return v7;
      }
      else
      {
        swift_getTupleTypeLayout3(v10, v5 + 64, *(_QWORD *)(v3 - 8) + 64, *(_QWORD *)(v7 - 8) + 64);
        swift_initEnumMetadataSinglePayload(a1, 256, v10, 2);
        return 0;
      }
    }
  }
  return v3;
}

uint64_t *sub_10024B1C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v9);
  }
  else
  {
    v7 = sub_100053F2C(&qword_1005DCB28);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = type metadata accessor for FMIPBeaconShareState(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_10024B29C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = sub_100053F2C(&qword_1005DCB28);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = type metadata accessor for FMIPBeaconShareState(0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

void *sub_10024B304(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_100053F2C(&qword_1005DCB28);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for FMIPBeaconShareState(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_10024B3B8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = sub_100053F2C(&qword_1005DCB28);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = type metadata accessor for FMIPBeaconShareState(0);
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(a1, a2, v13);
      return a1;
    }
    sub_1000051EC((uint64_t)a1, &qword_1005DCB28);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = type metadata accessor for FMIPBeaconShareState(0);
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *sub_10024B4C4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_100053F2C(&qword_1005DCB28);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = type metadata accessor for FMIPBeaconShareState(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_10024B578(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = sub_100053F2C(&qword_1005DCB28);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = type metadata accessor for FMIPBeaconShareState(0);
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(a1, a2, v13);
      return a1;
    }
    sub_1000051EC((uint64_t)a1, &qword_1005DCB28);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = type metadata accessor for FMIPBeaconShareState(0);
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_10024B684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10024B690);
}

uint64_t sub_10024B690(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_100053F2C(&qword_1005DCB28);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_10024B6E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10024B6EC);
}

uint64_t sub_10024B6EC(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_100053F2C(&qword_1005DCB28);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_10024B740(uint64_t a1, uint64_t a2)
{
  return sub_10024B750(a1, a2, &qword_1005DCB28, 1);
}

uint64_t sub_10024B750(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v6;

  v6 = sub_100053F2C(a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, a4, v6);
}

uint64_t sub_10024B78C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10024B79C(a1, a2, a3, &qword_1005DCB28, 1);
}

uint64_t sub_10024B79C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v8;

  v8 = sub_100053F2C(a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, a2, a5, v8);
}

uint64_t sub_10024B7E8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = type metadata accessor for FMIPBeaconShareState(319);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(result - 8) + 64, 1);
    return 0;
  }
  return result;
}

char *sub_10024B83C(char *a1, char **a2, uint64_t a3)
{
  int v5;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v12[(v5 + 16) & ~(unint64_t)v5];
    swift_retain(v12);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v7 = *a2;
      *(_QWORD *)a1 = *a2;
      v8 = v7;
      v9 = a1;
      v10 = a3;
      v11 = 1;
    }
    else
    {
      v13 = type metadata accessor for FMFFriend(0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v9 = a1;
      v10 = a3;
      v11 = 0;
    }
    swift_storeEnumTagMultiPayload(v9, v10, v11);
  }
  return a1;
}

void sub_10024B8F8(id *a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload(a1, a2) == 1)
  {

  }
  else
  {
    v3 = type metadata accessor for FMFFriend(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
}

void **sub_10024B948(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  id v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = *a2;
    *a1 = *a2;
    v7 = v6;
    v8 = a1;
    v9 = a3;
    v10 = 1;
  }
  else
  {
    v11 = type metadata accessor for FMFFriend(0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
    v8 = a1;
    v9 = a3;
    v10 = 0;
  }
  swift_storeEnumTagMultiPayload(v8, v9, v10);
  return a1;
}

void **sub_10024B9D8(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  id v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_10004FCB8((uint64_t)a1, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = *a2;
      *a1 = *a2;
      v7 = v6;
      v8 = a1;
      v9 = a3;
      v10 = 1;
    }
    else
    {
      v11 = type metadata accessor for FMFFriend(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      v8 = a1;
      v9 = a3;
      v10 = 0;
    }
    swift_storeEnumTagMultiPayload(v8, v9, v10);
  }
  return a1;
}

void *sub_10024BA80(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = type metadata accessor for FMFFriend(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

void *sub_10024BB08(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_10004FCB8((uint64_t)a1, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    if (swift_getEnumCaseMultiPayload(a2, a3))
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = type metadata accessor for FMFFriend(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t sub_10024BBA8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for FMFFriend(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_initEnumMetadataMultiPayload(a1, 256, 2, v4);
    return 0;
  }
  return result;
}

uint64_t destroy for FMBeaconSharingModuleViewModel(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  return swift_bridgeObjectRelease(a1[1]);
}

uint64_t _s6FindMy30FMBeaconSharingModuleViewModelVwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)((char *)a2 + 17);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  return a1;
}

uint64_t *assignWithCopy for FMBeaconSharingModuleViewModel(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *a2;
  v5 = *a1;
  *a1 = *a2;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  v6 = a2[1];
  v7 = a1[1];
  a1[1] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
  *((_BYTE *)a1 + 17) = *((_BYTE *)a2 + 17);
  *((_BYTE *)a1 + 18) = *((_BYTE *)a2 + 18);
  return a1;
}

__n128 initializeWithTake for FMBeaconSharingModuleViewModel(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FMBeaconSharingModuleViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_bridgeObjectRelease(*(_QWORD *)a1);
  v4 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease(v4);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMBeaconSharingModuleViewModel(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 19))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMBeaconSharingModuleViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 18) = 0;
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 19) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 19) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMBeaconSharingModuleViewModel()
{
  return &type metadata for FMBeaconSharingModuleViewModel;
}

uint64_t sub_10024BE00()
{
  return sub_100008000(&qword_1005DCCD8, type metadata accessor for FMBeaconSharingModuleRelationshipType, (uint64_t)&unk_1004894D8);
}

uint64_t sub_10024BE2C()
{
  return sub_100008000(&qword_1005DCCE0, type metadata accessor for FMBeaconSharingModuleShareState, (uint64_t)&unk_100489540);
}

uint64_t sub_10024BE58()
{
  return sub_100008000(&qword_1005DCCE8, type metadata accessor for FMBeaconSharingModuleEntry, (uint64_t)&unk_1004895A8);
}

uint64_t sub_10024BE84(uint64_t a1)
{
  uint64_t result;

  result = sub_100008000(&qword_1005DCD18, type metadata accessor for FMBeaconSharingModuleEntry, (uint64_t)&unk_100489568);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10024BEC0(uint64_t a1)
{
  uint64_t result;

  result = sub_100008000(&qword_1005DCD20, type metadata accessor for FMBeaconSharingModuleEntry, (uint64_t)&unk_1004895D0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10024BF00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc(dword_1005DCD2C);
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1000C7978;
  v3[2] = v2;
  return swift_task_switch(sub_10023C198, v2, 0);
}

double sub_10024BF60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  double result;

  v3 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v1 + 24) = a1;
  swift_bridgeObjectRetain(a1);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v3).n128_u64[0];
  if (*(_QWORD *)(a1 + 16))
  {
    swift_bridgeObjectRetain(a1);
    __asm { BR              X8 }
  }
  return result;
}

void sub_10024C1DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v34;
  char v35;
  unint64_t v36;
  uint64_t v37;
  _BOOL8 v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  char v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _BYTE v57[24];

  v3 = type metadata accessor for UUID(0);
  v51 = *(_QWORD *)(v3 - 8);
  v52 = v3;
  __chkstk_darwin(v3);
  v50 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FMBeaconSharingModuleEntry(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v55 = (uint64_t)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v54 = (uint64_t)&v48 - v10;
  __chkstk_darwin(v9);
  v12 = (char *)&v48 - v11;
  v13 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v1 + 24) = a1;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRelease(v13);
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
    return;
  v15 = (_QWORD *)(v1 + 16);
  v16 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v17 = *(_QWORD *)(v6 + 72);
  v48 = a1;
  swift_bridgeObjectRetain(a1);
  v49 = v12;
  v53 = v17;
  while (1)
  {
    sub_10004FC74(v16, (uint64_t)v12, type metadata accessor for FMBeaconSharingModuleEntry);
    v20 = v54;
    sub_10004FC74((uint64_t)v12, v54, type metadata accessor for FMBeaconSharingModuleEntry);
    v21 = sub_100053F2C(&qword_1005DCB20);
    v22 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v20, 2, v21);
    if (v22)
    {
      v23 = v22 == 1 ? 25933 : 0x6F73726550646441;
      v24 = v22 == 1 ? 0xE200000000000000 : 0xE90000000000006ELL;
    }
    else
    {
      v25 = v54;
      v26 = v54 + *(int *)(v21 + 48);
      v27 = v50;
      v28 = v51;
      v29 = v52;
      v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 32))(v50, v54 + *(int *)(v21 + 64), v52);
      v23 = UUID.uuidString.getter(v30);
      v24 = v31;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v27, v29);
      sub_10004FCB8(v26, type metadata accessor for FMBeaconSharingModuleShareState);
      v32 = v25;
      v12 = v49;
      sub_10004FCB8(v32, type metadata accessor for FMBeaconSharingModuleRelationshipType);
    }
    swift_beginAccess(v15, v57, 33, 0);
    sub_10004FC74((uint64_t)v12, v55, type metadata accessor for FMBeaconSharingModuleEntry);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v15);
    v56 = (_QWORD *)*v15;
    v34 = v56;
    *v15 = 0x8000000000000000;
    v36 = sub_10004C348(v23, v24);
    v37 = v34[2];
    v38 = (v35 & 1) == 0;
    v39 = v37 + v38;
    if (__OFADD__(v37, v38))
      break;
    v40 = v35;
    if (v34[3] >= v39)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v43 = v56;
        if ((v35 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_10017D0C0();
        v43 = v56;
        if ((v40 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_10017685C(v39, isUniquelyReferenced_nonNull_native);
      v41 = sub_10004C348(v23, v24);
      if ((v40 & 1) != (v42 & 1))
        goto LABEL_28;
      v36 = v41;
      v43 = v56;
      if ((v40 & 1) != 0)
      {
LABEL_3:
        v18 = v53;
        sub_10025241C(v55, v43[7] + v36 * v53);
        goto LABEL_4;
      }
    }
    v43[(v36 >> 6) + 8] |= 1 << v36;
    v44 = (uint64_t *)(v43[6] + 16 * v36);
    *v44 = v23;
    v44[1] = v24;
    v18 = v53;
    sub_100051774(v55, v43[7] + v36 * v53, type metadata accessor for FMBeaconSharingModuleEntry);
    v45 = v43[2];
    v46 = __OFADD__(v45, 1);
    v47 = v45 + 1;
    if (v46)
      goto LABEL_27;
    v43[2] = v47;
    swift_bridgeObjectRetain(v24);
LABEL_4:
    v19 = *v15;
    *v15 = v43;
    swift_bridgeObjectRelease(v24);
    swift_bridgeObjectRelease(v19);
    swift_endAccess(v57);
    sub_10004FCB8((uint64_t)v12, type metadata accessor for FMBeaconSharingModuleEntry);
    v16 += v18;
    if (!--v14)
    {
      swift_bridgeObjectRelease(v48);
      return;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

uint64_t sub_10024C5C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)(a3 + a2 - 16) + 8) + 32))(*(_QWORD *)(a3 + a2 - 24));
}

uint64_t sub_10024C5F8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  __n128 v11;
  _BYTE v14[24];

  v5 = sub_100053F2C(a3);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = swift_projectBox(a2);
  v10 = swift_beginAccess(v9, v14, 0, 0);
  v11.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16))(v8, v9, v5, v10);
  dispatch thunk of UITableViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v8, *(unsigned __int8 *)(a1 + qword_1005E4940), 0, 0, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10024C6D4(uint64_t *a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t), uint64_t (*a4)(_QWORD *))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[2];

  v7 = *(_QWORD *)(a2(0) - 8);
  v8 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v8 = a3(v8);
  v9 = *(_QWORD *)(v8 + 16);
  v11[0] = v8 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v11[1] = v9;
  result = a4(v11);
  *a1 = v8;
  return result;
}

void sub_10024C764(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void **v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void **v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  Swift::Int v60;
  uint64_t v61;
  uint64_t v62;
  Swift::Int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  Swift::Int v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int (*v81)(uint64_t, uint64_t);
  unsigned int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void **v99;
  void *v100;
  id v101;
  void *v102;
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  void **v110;
  int EnumCaseMultiPayload;
  void *v112;
  id v113;
  void *v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void (*v126)(uint64_t, uint64_t);
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t (*v149)(char *, uint64_t, uint64_t);
  int v150;
  uint64_t v151;
  uint64_t v152;
  void **v153;
  int v154;
  void *v155;
  id v156;
  void *v157;
  unint64_t v158;
  unint64_t v159;
  uint64_t v160;
  char *v161;
  void **v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  void *v166;
  id v167;
  uint64_t v168;
  void *v169;
  uint64_t v170;
  unint64_t v171;
  unint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  char v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  void (*v182)(uint64_t, uint64_t);
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;
  unint64_t v188;
  char *v189;
  char *v190;
  uint64_t v191;
  unint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  BOOL v203;
  unint64_t v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  BOOL v213;
  uint64_t v214;
  char v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  BOOL v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  unint64_t v231;
  char *v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  unint64_t v238;
  uint64_t v239;
  uint64_t v240;
  void **v241;
  void *v242;
  uint64_t v243;
  id v244;
  void *v245;
  uint64_t v246;
  unint64_t v247;
  unint64_t v248;
  uint64_t v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  unint64_t v253;
  void **v254;
  void *v255;
  id v256;
  void *v257;
  uint64_t v258;
  unint64_t v259;
  unint64_t v260;
  uint64_t v261;
  uint64_t (*v262)(char *, void **, uint64_t);
  char *v263;
  uint64_t v264;
  uint64_t v265;
  char *v266;
  uint64_t v267;
  uint64_t v268;
  unint64_t v269;
  void (*v270)(char *, uint64_t);
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  void (*v276)(uint64_t, uint64_t);
  uint64_t v277;
  unint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  char *v282;
  char *v283;
  char *v284;
  unint64_t v285;
  uint64_t v286;
  void **v287;
  void **v288;
  char *v289;
  _QWORD *v290;
  uint64_t v291;
  uint64_t v292;
  void **v293;
  void **v294;
  char *v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  Swift::Int v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  unint64_t v308;
  uint64_t v309;
  char *v310;
  uint64_t v311;
  void **v312;
  char *v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  char *v317;
  void **v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  char *v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  unsigned int (*v332)(uint64_t, uint64_t);
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t *v337;

  v315 = type metadata accessor for FMFFriend(0);
  v314 = *(_QWORD *)(v315 - 8);
  __chkstk_darwin(v315);
  v313 = (char *)&v286 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v325 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
  v4 = __chkstk_darwin(v325);
  v6 = (void **)((char *)&v286 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __chkstk_darwin(v4);
  v312 = (void **)((char *)&v286 - v8);
  v9 = __chkstk_darwin(v7);
  v329 = (uint64_t)&v286 - v10;
  v11 = __chkstk_darwin(v9);
  v322 = (uint64_t)&v286 - v12;
  v13 = __chkstk_darwin(v11);
  v294 = (void **)((char *)&v286 - v14);
  v15 = __chkstk_darwin(v13);
  v293 = (void **)((char *)&v286 - v16);
  v17 = __chkstk_darwin(v15);
  v300 = (uint64_t)&v286 - v18;
  v19 = __chkstk_darwin(v17);
  v297 = (uint64_t)&v286 - v20;
  v21 = __chkstk_darwin(v19);
  v23 = (char *)&v286 - v22;
  v24 = __chkstk_darwin(v21);
  v26 = (void **)((char *)&v286 - v25);
  v27 = __chkstk_darwin(v24);
  v29 = (char *)&v286 - v28;
  __chkstk_darwin(v27);
  v291 = (uint64_t)&v286 - v30;
  v327 = sub_100053F2C(&qword_1005DCD38);
  v31 = __chkstk_darwin(v327);
  v33 = (char *)&v286 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __chkstk_darwin(v31);
  v301 = (uint64_t)&v286 - v35;
  __chkstk_darwin(v34);
  v298 = (uint64_t)&v286 - v36;
  v316 = type metadata accessor for FMBeaconSharingModuleEntry(0);
  v309 = *(_QWORD *)(v316 - 8);
  v37 = __chkstk_darwin(v316);
  v304 = (uint64_t)&v286 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __chkstk_darwin(v37);
  v330 = (uint64_t)&v286 - v40;
  v41 = __chkstk_darwin(v39);
  v43 = (char *)&v286 - v42;
  v44 = __chkstk_darwin(v41);
  v334 = (uint64_t)&v286 - v45;
  v46 = __chkstk_darwin(v44);
  v333 = (uint64_t)&v286 - v47;
  v48 = __chkstk_darwin(v46);
  v50 = (char *)&v286 - v49;
  v51 = __chkstk_darwin(v48);
  v307 = (uint64_t)&v286 - v52;
  v53 = __chkstk_darwin(v51);
  v306 = (uint64_t)&v286 - v54;
  v55 = __chkstk_darwin(v53);
  v292 = (uint64_t)&v286 - v56;
  v57 = __chkstk_darwin(v55);
  v296 = (uint64_t)&v286 - v58;
  __chkstk_darwin(v57);
  v299 = (uint64_t)&v286 - v59;
  v337 = a1;
  v60 = a1[1];
  v302 = _minimumMergeRunLength(_:)(v60);
  if (v302 < v60)
  {
    if (v60 >= 0)
      v61 = v60;
    else
      v61 = v60 + 1;
    if (v60 < -1)
    {
LABEL_228:
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
      __break(1u);
      return;
    }
    v62 = (uint64_t)v23;
    v63 = v60;
    v295 = v50;
    v311 = v1;
    if (v60 < 2)
    {
      v68 = _swiftEmptyArrayStorage;
      v308 = (unint64_t)_swiftEmptyArrayStorage
           + ((*(unsigned __int8 *)(v309 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v309 + 80));
      if (v60 != 1)
      {
        v73 = _swiftEmptyArrayStorage[2];
        v310 = (char *)_swiftEmptyArrayStorage;
        if (v73 < 2)
          goto LABEL_197;
        goto LABEL_185;
      }
      v67 = 1;
      v289 = v29;
      v290 = _swiftEmptyArrayStorage;
      v287 = v26;
      v288 = (void **)v62;
    }
    else
    {
      v289 = v29;
      v287 = v26;
      v288 = (void **)v62;
      v64 = v61 >> 1;
      v65 = static Array._allocateBufferUninitialized(minimumCapacity:)(v61 >> 1, v316);
      *(_QWORD *)(v65 + 16) = v64;
      v66 = *(unsigned __int8 *)(v309 + 80);
      v290 = (_QWORD *)v65;
      v308 = v65 + ((v66 + 32) & ~v66);
      v67 = v63;
    }
    v69 = 0;
    v70 = (char *)_swiftEmptyArrayStorage;
    v317 = v33;
    v318 = v6;
    v71 = v301;
    v323 = v43;
    v72 = v302;
    while (1)
    {
      v331 = v67;
      v305 = v69;
      if (v69 + 1 >= v67)
      {
        v83 = v69 + 1;
        goto LABEL_71;
      }
      v74 = *v337;
      v75 = *(_QWORD *)(v309 + 72);
      v328 = v69 + 1;
      sub_10004FC74(v74 + v75 * (v69 + 1), v299, type metadata accessor for FMBeaconSharingModuleEntry);
      v320 = v74;
      v336 = v75;
      v76 = v74 + v75 * v69;
      v77 = v296;
      sub_10004FC74(v76, v296, type metadata accessor for FMBeaconSharingModuleEntry);
      v78 = v298 + *(int *)(v327 + 48);
      v79 = v298;
      sub_10004FC74(v299, v298, type metadata accessor for FMBeaconSharingModuleEntry);
      sub_10004FC74(v77, v78, type metadata accessor for FMBeaconSharingModuleEntry);
      v80 = sub_100053F2C(&qword_1005DCB20);
      v81 = *(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 48);
      v335 = v80;
      v332 = v81;
      v82 = v81(v79, 2);
      if (v82)
        break;
      v84 = v292;
      sub_10004FC74(v79, v292, type metadata accessor for FMBeaconSharingModuleEntry);
      v326 = v84 + *(int *)(v335 + 48);
      v85 = v84 + *(int *)(v335 + 64);
      if (v332(v78, 2))
      {
        v86 = type metadata accessor for UUID(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 8))(v85, v86);
        sub_10004FCB8(v326, type metadata accessor for FMBeaconSharingModuleShareState);
        sub_10004FCB8(v84, type metadata accessor for FMBeaconSharingModuleRelationshipType);
        sub_1000051EC(v298, &qword_1005DCD38);
LABEL_24:
        LODWORD(v326) = 0;
        goto LABEL_25;
      }
      v321 = v85;
      v239 = v291;
      sub_100051774(v84, v291, type metadata accessor for FMBeaconSharingModuleRelationshipType);
      v324 = v78;
      sub_100051774(v78, (uint64_t)v289, type metadata accessor for FMBeaconSharingModuleRelationshipType);
      v240 = v239;
      v241 = v287;
      sub_10004FC74(v240, (uint64_t)v287, type metadata accessor for FMBeaconSharingModuleRelationshipType);
      if (swift_getEnumCaseMultiPayload(v241, v325) == 1)
      {
        v242 = *v241;
        v243 = v326;
        if (qword_1005D1BD0 != -1)
          swift_once(&qword_1005D1BD0, sub_1000C1184);
        v244 = objc_msgSend((id)qword_1005F4DB8, "stringFromContact:", v242);
        if (v244)
        {
          v245 = v244;
          v246 = static String._unconditionallyBridgeFromObjectiveC(_:)(v244);
          v248 = v247;

        }
        else
        {

          v246 = 0;
          v248 = 0xE000000000000000;
        }
      }
      else
      {
        v249 = v314;
        v250 = v313;
        v251 = v315;
        v252 = (*(uint64_t (**)(char *, void **, uint64_t))(v314 + 32))(v313, v241, v315);
        v246 = FMFFriend.name.getter(v252);
        v248 = v253;
        (*(void (**)(char *, uint64_t))(v249 + 8))(v250, v251);
        v243 = v326;
      }
      v254 = v288;
      sub_10004FC74((uint64_t)v289, (uint64_t)v288, type metadata accessor for FMBeaconSharingModuleRelationshipType);
      if (swift_getEnumCaseMultiPayload(v254, v325) == 1)
      {
        v310 = v70;
        v255 = *v254;
        if (qword_1005D1BD0 != -1)
          swift_once(&qword_1005D1BD0, sub_1000C1184);
        v256 = objc_msgSend((id)qword_1005F4DB8, "stringFromContact:", v255);
        if (v256)
        {
          v257 = v256;
          v258 = static String._unconditionallyBridgeFromObjectiveC(_:)(v256);
          v260 = v259;

        }
        else
        {

          v258 = 0;
          v260 = 0xE000000000000000;
        }
        v70 = v310;
      }
      else
      {
        v261 = v314;
        v262 = *(uint64_t (**)(char *, void **, uint64_t))(v314 + 32);
        v263 = v313;
        v326 = v248;
        v264 = v243;
        v265 = v246;
        v266 = v70;
        v267 = v315;
        v268 = v262(v313, v254, v315);
        v258 = FMFFriend.name.getter(v268);
        v260 = v269;
        v270 = *(void (**)(char *, uint64_t))(v261 + 8);
        v43 = v323;
        v271 = v267;
        v70 = v266;
        v246 = v265;
        v243 = v264;
        v248 = v326;
        v270(v263, v271);
      }
      v272 = v324;
      if (v246 == v258 && v248 == v260)
      {
        LODWORD(v326) = 0;
        v260 = v248;
      }
      else
      {
        LODWORD(v326) = _stringCompareWithSmolCheck(_:_:expecting:)(v246, v248, v258, v260, 1);
      }
      swift_bridgeObjectRelease(v248);
      swift_bridgeObjectRelease(v260);
      v273 = v272 + *(int *)(v335 + 48);
      v274 = v272 + *(int *)(v335 + 64);
      sub_10004FCB8((uint64_t)v289, type metadata accessor for FMBeaconSharingModuleRelationshipType);
      sub_10004FCB8(v291, type metadata accessor for FMBeaconSharingModuleRelationshipType);
      v275 = type metadata accessor for UUID(0);
      v276 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v275 - 8) + 8);
      v276(v274, v275);
      sub_10004FCB8(v273, type metadata accessor for FMBeaconSharingModuleShareState);
      v276(v321, v275);
      sub_10004FCB8(v243, type metadata accessor for FMBeaconSharingModuleShareState);
      sub_10004FCB8(v298, type metadata accessor for FMBeaconSharingModuleEntry);
      v33 = v317;
      v6 = v318;
      v71 = v301;
LABEL_25:
      v72 = v302;
      sub_10004FCB8(v296, type metadata accessor for FMBeaconSharingModuleEntry);
      sub_10004FCB8(v299, type metadata accessor for FMBeaconSharingModuleEntry);
      v83 = v305 + 2;
      v67 = v331;
      if (v305 + 2 >= v331)
      {
LABEL_56:
        if ((v326 & 1) == 0)
          goto LABEL_71;
LABEL_57:
        if (v83 < v305)
          goto LABEL_221;
        if (v305 < v83)
        {
          v310 = v70;
          v127 = 0;
          v128 = v336 * (v83 - 1);
          v129 = v83 * v336;
          v130 = v305;
          v131 = v305 * v336;
          do
          {
            if (v130 != v83 + v127 - 1)
            {
              v134 = v320;
              if (!v320)
                goto LABEL_226;
              v135 = v83;
              v136 = v320 + v131;
              v335 = v320 + v128;
              sub_100051774(v320 + v131, v304, type metadata accessor for FMBeaconSharingModuleEntry);
              if (v131 < v128 || v136 >= v134 + v129)
              {
                v132 = v134 + v131;
                v133 = v335;
                swift_arrayInitWithTakeFrontToBack(v132, v335);
              }
              else
              {
                v133 = v335;
                if (v131 != v128)
                  swift_arrayInitWithTakeBackToFront(v136, v335);
              }
              sub_100051774(v304, v133, type metadata accessor for FMBeaconSharingModuleEntry);
              v83 = v135;
            }
            ++v130;
            --v127;
            v128 -= v336;
            v129 -= v336;
            v131 += v336;
          }
          while (v130 < v83 + v127);
          v33 = v317;
          v6 = v318;
          v70 = v310;
          v72 = v302;
          v67 = v331;
        }
        goto LABEL_71;
      }
      v324 = v336 * v328;
      v87 = v320;
      v321 = v336 * v83;
      v310 = v70;
      do
      {
        v328 = v83;
        v88 = v306;
        sub_10004FC74(v87 + v321, v306, type metadata accessor for FMBeaconSharingModuleEntry);
        v89 = v307;
        sub_10004FC74(v87 + v324, v307, type metadata accessor for FMBeaconSharingModuleEntry);
        v90 = v71 + *(int *)(v327 + 48);
        sub_10004FC74(v88, v71, type metadata accessor for FMBeaconSharingModuleEntry);
        sub_10004FC74(v89, v90, type metadata accessor for FMBeaconSharingModuleEntry);
        v91 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v332)(v71, 2, v335);
        if (v91)
        {
          if (v91 == 1)
          {
            sub_10004FCB8(v90, type metadata accessor for FMBeaconSharingModuleEntry);
            sub_10004FCB8(v71, type metadata accessor for FMBeaconSharingModuleEntry);
            v92 = 1;
          }
          else
          {
            sub_10004FCB8(v90, type metadata accessor for FMBeaconSharingModuleEntry);
            sub_10004FCB8(v71, type metadata accessor for FMBeaconSharingModuleEntry);
            v92 = 0;
          }
        }
        else
        {
          v93 = (uint64_t)v295;
          sub_10004FC74(v71, (uint64_t)v295, type metadata accessor for FMBeaconSharingModuleEntry);
          v94 = v93 + *(int *)(v335 + 48);
          v95 = v93 + *(int *)(v335 + 64);
          if (v332(v90, 2))
          {
            v96 = type metadata accessor for UUID(0);
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 8))(v95, v96);
            sub_10004FCB8(v94, type metadata accessor for FMBeaconSharingModuleShareState);
            sub_10004FCB8(v93, type metadata accessor for FMBeaconSharingModuleRelationshipType);
            sub_1000051EC(v71, &qword_1005DCD38);
            v92 = 0;
          }
          else
          {
            v97 = v297;
            sub_100051774(v93, v297, type metadata accessor for FMBeaconSharingModuleRelationshipType);
            sub_100051774(v90, v300, type metadata accessor for FMBeaconSharingModuleRelationshipType);
            v98 = v97;
            v99 = v293;
            sub_10004FC74(v98, (uint64_t)v293, type metadata accessor for FMBeaconSharingModuleRelationshipType);
            if (swift_getEnumCaseMultiPayload(v99, v325) == 1)
            {
              v100 = *v99;
              if (qword_1005D1BD0 != -1)
                swift_once(&qword_1005D1BD0, sub_1000C1184);
              v101 = objc_msgSend((id)qword_1005F4DB8, "stringFromContact:", v100);
              if (v101)
              {
                v102 = v101;
                v303 = static String._unconditionallyBridgeFromObjectiveC(_:)(v101);
                v104 = v103;

              }
              else
              {

                v303 = 0;
                v104 = 0xE000000000000000;
              }
            }
            else
            {
              v105 = v314;
              v106 = v313;
              v107 = v315;
              v108 = (*(uint64_t (**)(char *, void **, uint64_t))(v314 + 32))(v313, v99, v315);
              v303 = FMFFriend.name.getter(v108);
              v104 = v109;
              (*(void (**)(char *, uint64_t))(v105 + 8))(v106, v107);
            }
            v110 = v294;
            sub_10004FC74(v300, (uint64_t)v294, type metadata accessor for FMBeaconSharingModuleRelationshipType);
            EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v110, v325);
            v319 = v95;
            if (EnumCaseMultiPayload == 1)
            {
              v112 = *v110;
              if (qword_1005D1BD0 != -1)
                swift_once(&qword_1005D1BD0, sub_1000C1184);
              v113 = objc_msgSend((id)qword_1005F4DB8, "stringFromContact:", v112);
              if (v113)
              {
                v114 = v113;
                v115 = static String._unconditionallyBridgeFromObjectiveC(_:)(v113);
                v117 = v116;

              }
              else
              {

                v115 = 0;
                v117 = 0xE000000000000000;
              }
            }
            else
            {
              v118 = v314;
              v119 = v313;
              v120 = v315;
              v121 = (*(uint64_t (**)(char *, void **, uint64_t))(v314 + 32))(v313, v110, v315);
              v115 = FMFFriend.name.getter(v121);
              v117 = v122;
              (*(void (**)(char *, uint64_t))(v118 + 8))(v119, v120);
            }
            v70 = v310;
            if (v303 == v115 && v104 == v117)
            {
              v92 = 0;
              v117 = v104;
            }
            else
            {
              v92 = _stringCompareWithSmolCheck(_:_:expecting:)(v303, v104, v115, v117, 1);
            }
            swift_bridgeObjectRelease(v104);
            swift_bridgeObjectRelease(v117);
            v123 = v90 + *(int *)(v335 + 48);
            v124 = v90 + *(int *)(v335 + 64);
            sub_10004FCB8(v300, type metadata accessor for FMBeaconSharingModuleRelationshipType);
            sub_10004FCB8(v297, type metadata accessor for FMBeaconSharingModuleRelationshipType);
            v125 = type metadata accessor for UUID(0);
            v126 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v125 - 8) + 8);
            v126(v124, v125);
            sub_10004FCB8(v123, type metadata accessor for FMBeaconSharingModuleShareState);
            v126(v319, v125);
            sub_10004FCB8(v94, type metadata accessor for FMBeaconSharingModuleShareState);
            v71 = v301;
            sub_10004FCB8(v301, type metadata accessor for FMBeaconSharingModuleEntry);
            v33 = v317;
            v6 = v318;
          }
        }
        v83 = v328;
        sub_10004FCB8(v307, type metadata accessor for FMBeaconSharingModuleEntry);
        sub_10004FCB8(v306, type metadata accessor for FMBeaconSharingModuleEntry);
        if (((v326 ^ v92) & 1) != 0)
        {
          v43 = v323;
          v72 = v302;
          v67 = v331;
          goto LABEL_56;
        }
        ++v83;
        v87 += v336;
        v67 = v331;
      }
      while (v331 != v83);
      v83 = v331;
      v43 = v323;
      v72 = v302;
      if ((v326 & 1) != 0)
        goto LABEL_57;
LABEL_71:
      if (v83 >= v67)
        goto LABEL_115;
      if (__OFSUB__(v83, v305))
        goto LABEL_219;
      if (v83 - v305 >= v72)
      {
LABEL_115:
        v138 = v305;
      }
      else
      {
        v137 = v305 + v72;
        if (__OFADD__(v305, v72))
          goto LABEL_222;
        v138 = v305;
        v139 = v331;
        if (v137 < v331)
          v139 = v137;
        if (v139 < v305)
        {
LABEL_223:
          __break(1u);
LABEL_224:
          __break(1u);
LABEL_225:
          __break(1u);
LABEL_226:
          __break(1u);
LABEL_227:
          __break(1u);
          goto LABEL_228;
        }
        if (v83 != v139)
        {
          v310 = v70;
          v326 = *(_QWORD *)(v309 + 72);
          v335 = v83 * v326;
          v336 = v326 * (v83 - 1);
          v303 = v139;
          while (1)
          {
            v141 = 0;
            v142 = v305;
            v328 = v83;
            while (1)
            {
              v143 = *v337;
              v332 = (unsigned int (*)(uint64_t, uint64_t))(v335 + v141);
              v144 = v333;
              sub_10004FC74(v335 + v141 + v143, v333, type metadata accessor for FMBeaconSharingModuleEntry);
              v331 = v336 + v141;
              v145 = v336 + v141 + v143;
              v146 = v334;
              sub_10004FC74(v145, v334, type metadata accessor for FMBeaconSharingModuleEntry);
              v147 = (uint64_t)&v33[*(int *)(v327 + 48)];
              sub_10004FC74(v144, (uint64_t)v33, type metadata accessor for FMBeaconSharingModuleEntry);
              sub_10004FC74(v146, v147, type metadata accessor for FMBeaconSharingModuleEntry);
              v148 = sub_100053F2C(&qword_1005DCB20);
              v149 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v148 - 8) + 48);
              v150 = v149(v33, 2, v148);
              if (!v150)
                break;
              if (v150 != 1)
              {
                sub_10004FCB8(v147, type metadata accessor for FMBeaconSharingModuleEntry);
                sub_10004FCB8((uint64_t)v33, type metadata accessor for FMBeaconSharingModuleEntry);
LABEL_81:
                sub_10004FCB8(v334, type metadata accessor for FMBeaconSharingModuleEntry);
                sub_10004FCB8(v333, type metadata accessor for FMBeaconSharingModuleEntry);
                goto LABEL_82;
              }
              sub_10004FCB8(v147, type metadata accessor for FMBeaconSharingModuleEntry);
              sub_10004FCB8((uint64_t)v33, type metadata accessor for FMBeaconSharingModuleEntry);
              sub_10004FCB8(v334, type metadata accessor for FMBeaconSharingModuleEntry);
              sub_10004FCB8(v333, type metadata accessor for FMBeaconSharingModuleEntry);
LABEL_110:
              v183 = *v337;
              if (!*v337)
                goto LABEL_224;
              v184 = v183 + v335 + v141;
              v185 = v183 + v336 + v141;
              sub_100051774(v184, v330, type metadata accessor for FMBeaconSharingModuleEntry);
              v43 = v323;
              swift_arrayInitWithTakeFrontToBack(v184, v185);
              sub_100051774(v330, v185, type metadata accessor for FMBeaconSharingModuleEntry);
              v141 -= v326;
              ++v142;
              v140 = v328;
              if (v328 == v142)
                goto LABEL_83;
            }
            sub_10004FC74((uint64_t)v33, (uint64_t)v43, type metadata accessor for FMBeaconSharingModuleEntry);
            v151 = (uint64_t)&v43[*(int *)(v148 + 48)];
            v324 = (uint64_t)&v43[*(int *)(v148 + 64)];
            if (v149((char *)v147, 2, v148))
            {
              v186 = type metadata accessor for UUID(0);
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v186 - 8) + 8))(v324, v186);
              sub_10004FCB8(v151, type metadata accessor for FMBeaconSharingModuleShareState);
              sub_10004FCB8((uint64_t)v43, type metadata accessor for FMBeaconSharingModuleRelationshipType);
              sub_1000051EC((uint64_t)v33, &qword_1005DCD38);
              goto LABEL_81;
            }
            v321 = v151;
            v152 = v322;
            sub_100051774((uint64_t)v43, v322, type metadata accessor for FMBeaconSharingModuleRelationshipType);
            sub_100051774(v147, v329, type metadata accessor for FMBeaconSharingModuleRelationshipType);
            v153 = v312;
            sub_10004FC74(v152, (uint64_t)v312, type metadata accessor for FMBeaconSharingModuleRelationshipType);
            v154 = swift_getEnumCaseMultiPayload(v153, v325);
            v320 = v147;
            if (v154 == 1)
            {
              v155 = *v153;
              if (qword_1005D1BD0 != -1)
                swift_once(&qword_1005D1BD0, sub_1000C1184);
              v156 = objc_msgSend((id)qword_1005F4DB8, "stringFromContact:", v155);
              if (v156)
              {
                v157 = v156;
                v319 = static String._unconditionallyBridgeFromObjectiveC(_:)(v156);
                v159 = v158;

              }
              else
              {

                v319 = 0;
                v159 = 0xE000000000000000;
              }
            }
            else
            {
              v160 = v314;
              v161 = v313;
              v162 = v153;
              v163 = v315;
              v164 = (*(uint64_t (**)(char *, void **, uint64_t))(v314 + 32))(v313, v162, v315);
              v319 = FMFFriend.name.getter(v164);
              v159 = v165;
              (*(void (**)(char *, uint64_t))(v160 + 8))(v161, v163);
            }
            sub_10004FC74(v329, (uint64_t)v6, type metadata accessor for FMBeaconSharingModuleRelationshipType);
            if (swift_getEnumCaseMultiPayload(v6, v325) == 1)
            {
              v166 = *v6;
              if (qword_1005D1BD0 != -1)
                swift_once(&qword_1005D1BD0, sub_1000C1184);
              v167 = objc_msgSend((id)qword_1005F4DB8, "stringFromContact:", v166);
              v168 = v319;
              if (v167)
              {
                v169 = v167;
                v170 = static String._unconditionallyBridgeFromObjectiveC(_:)(v167);
                v172 = v171;

                if (v168 != v170)
                  goto LABEL_108;
              }
              else
              {

                v170 = 0;
                v172 = 0xE000000000000000;
                if (v168)
                  goto LABEL_108;
              }
            }
            else
            {
              v173 = v314;
              v174 = v313;
              v175 = v315;
              v176 = (*(uint64_t (**)(char *, void **, uint64_t))(v314 + 32))(v313, v6, v315);
              v170 = FMFFriend.name.getter(v176);
              v172 = v177;
              (*(void (**)(char *, uint64_t))(v173 + 8))(v174, v175);
              v168 = v319;
              if (v319 != v170)
                goto LABEL_108;
            }
            if (v159 == v172)
            {
              v178 = 0;
              v172 = v159;
              goto LABEL_109;
            }
LABEL_108:
            v178 = _stringCompareWithSmolCheck(_:_:expecting:)(v168, v159, v170, v172, 1);
LABEL_109:
            swift_bridgeObjectRelease(v159);
            swift_bridgeObjectRelease(v172);
            v179 = v320 + *(int *)(v148 + 48);
            v180 = v320 + *(int *)(v148 + 64);
            sub_10004FCB8(v329, type metadata accessor for FMBeaconSharingModuleRelationshipType);
            sub_10004FCB8(v322, type metadata accessor for FMBeaconSharingModuleRelationshipType);
            v181 = type metadata accessor for UUID(0);
            v182 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v181 - 8) + 8);
            v182(v180, v181);
            sub_10004FCB8(v179, type metadata accessor for FMBeaconSharingModuleShareState);
            v182(v324, v181);
            sub_10004FCB8(v321, type metadata accessor for FMBeaconSharingModuleShareState);
            v33 = v317;
            sub_10004FCB8((uint64_t)v317, type metadata accessor for FMBeaconSharingModuleEntry);
            sub_10004FCB8(v334, type metadata accessor for FMBeaconSharingModuleEntry);
            sub_10004FCB8(v333, type metadata accessor for FMBeaconSharingModuleEntry);
            v6 = v318;
            if ((v178 & 1) != 0)
              goto LABEL_110;
            v43 = v323;
LABEL_82:
            v140 = v328;
LABEL_83:
            v83 = v140 + 1;
            v336 += v326;
            v335 += v326;
            if (v83 == v303)
            {
              v83 = v303;
              v70 = v310;
              goto LABEL_115;
            }
          }
        }
      }
      if (v83 < v138)
        goto LABEL_214;
      if ((swift_isUniquelyReferenced_nonNull_native(v70) & 1) == 0)
        v70 = sub_10020C830(0, *((_QWORD *)v70 + 2) + 1, 1, v70);
      v188 = *((_QWORD *)v70 + 2);
      v187 = *((_QWORD *)v70 + 3);
      v73 = v188 + 1;
      v328 = v83;
      if (v188 >= v187 >> 1)
        v70 = sub_10020C830((char *)(v187 > 1), v188 + 1, 1, v70);
      *((_QWORD *)v70 + 2) = v73;
      v189 = v70 + 32;
      v190 = &v70[16 * v188 + 32];
      v191 = v328;
      *(_QWORD *)v190 = v138;
      *((_QWORD *)v190 + 1) = v191;
      v310 = v70;
      if (v188)
      {
        while (1)
        {
          v192 = v73 - 1;
          if (v73 >= 4)
          {
            v197 = &v189[16 * v73];
            v198 = *((_QWORD *)v197 - 8);
            v199 = *((_QWORD *)v197 - 7);
            v203 = __OFSUB__(v199, v198);
            v200 = v199 - v198;
            if (v203)
              goto LABEL_203;
            v202 = *((_QWORD *)v197 - 6);
            v201 = *((_QWORD *)v197 - 5);
            v203 = __OFSUB__(v201, v202);
            v195 = v201 - v202;
            v196 = v203;
            if (v203)
              goto LABEL_204;
            v204 = v73 - 2;
            v205 = &v189[16 * v73 - 32];
            v207 = *(_QWORD *)v205;
            v206 = *((_QWORD *)v205 + 1);
            v203 = __OFSUB__(v206, v207);
            v208 = v206 - v207;
            if (v203)
              goto LABEL_206;
            v203 = __OFADD__(v195, v208);
            v209 = v195 + v208;
            if (v203)
              goto LABEL_209;
            if (v209 >= v200)
            {
              v227 = &v189[16 * v192];
              v229 = *(_QWORD *)v227;
              v228 = *((_QWORD *)v227 + 1);
              v203 = __OFSUB__(v228, v229);
              v230 = v228 - v229;
              if (v203)
                goto LABEL_213;
              v220 = v195 < v230;
              goto LABEL_153;
            }
          }
          else
          {
            if (v73 != 3)
            {
              v221 = *((_QWORD *)v70 + 4);
              v222 = *((_QWORD *)v70 + 5);
              v203 = __OFSUB__(v222, v221);
              v214 = v222 - v221;
              v215 = v203;
              goto LABEL_147;
            }
            v194 = *((_QWORD *)v70 + 4);
            v193 = *((_QWORD *)v70 + 5);
            v203 = __OFSUB__(v193, v194);
            v195 = v193 - v194;
            v196 = v203;
          }
          if ((v196 & 1) != 0)
            goto LABEL_205;
          v204 = v73 - 2;
          v210 = &v189[16 * v73 - 32];
          v212 = *(_QWORD *)v210;
          v211 = *((_QWORD *)v210 + 1);
          v213 = __OFSUB__(v211, v212);
          v214 = v211 - v212;
          v215 = v213;
          if (v213)
            goto LABEL_208;
          v216 = &v189[16 * v192];
          v218 = *(_QWORD *)v216;
          v217 = *((_QWORD *)v216 + 1);
          v203 = __OFSUB__(v217, v218);
          v219 = v217 - v218;
          if (v203)
            goto LABEL_211;
          if (__OFADD__(v214, v219))
            goto LABEL_212;
          if (v214 + v219 >= v195)
          {
            v220 = v195 < v219;
LABEL_153:
            if (v220)
              v192 = v204;
            goto LABEL_155;
          }
LABEL_147:
          if ((v215 & 1) != 0)
            goto LABEL_207;
          v223 = &v189[16 * v192];
          v225 = *(_QWORD *)v223;
          v224 = *((_QWORD *)v223 + 1);
          v203 = __OFSUB__(v224, v225);
          v226 = v224 - v225;
          if (v203)
            goto LABEL_210;
          if (v226 < v214)
            goto LABEL_15;
LABEL_155:
          v231 = v192 - 1;
          if (v192 - 1 >= v73)
          {
            __break(1u);
LABEL_200:
            __break(1u);
LABEL_201:
            __break(1u);
LABEL_202:
            __break(1u);
LABEL_203:
            __break(1u);
LABEL_204:
            __break(1u);
LABEL_205:
            __break(1u);
LABEL_206:
            __break(1u);
LABEL_207:
            __break(1u);
LABEL_208:
            __break(1u);
LABEL_209:
            __break(1u);
LABEL_210:
            __break(1u);
LABEL_211:
            __break(1u);
LABEL_212:
            __break(1u);
LABEL_213:
            __break(1u);
LABEL_214:
            __break(1u);
LABEL_215:
            __break(1u);
LABEL_216:
            __break(1u);
LABEL_217:
            __break(1u);
LABEL_218:
            __break(1u);
LABEL_219:
            __break(1u);
LABEL_220:
            __break(1u);
LABEL_221:
            __break(1u);
LABEL_222:
            __break(1u);
            goto LABEL_223;
          }
          if (!*v337)
            goto LABEL_225;
          v232 = &v189[16 * v231];
          v233 = *(_QWORD *)v232;
          v234 = &v189[16 * v192];
          v235 = *((_QWORD *)v234 + 1);
          v236 = v311;
          sub_10024FA0C(*v337 + *(_QWORD *)(v309 + 72) * *(_QWORD *)v232, *v337 + *(_QWORD *)(v309 + 72) * *(_QWORD *)v234, *v337 + *(_QWORD *)(v309 + 72) * v235, v308);
          v311 = v236;
          if (v236)
          {
            v68 = v290;
            goto LABEL_197;
          }
          if (v235 < v233)
            goto LABEL_200;
          v237 = v310;
          if (v192 > *((_QWORD *)v310 + 2))
            goto LABEL_201;
          *(_QWORD *)v232 = v233;
          *(_QWORD *)&v189[16 * v231 + 8] = v235;
          v238 = *((_QWORD *)v237 + 2);
          if (v192 >= v238)
            goto LABEL_202;
          v70 = v237;
          v73 = v238 - 1;
          memmove(&v189[16 * v192], v234 + 16, 16 * (v238 - 1 - v192));
          *((_QWORD *)v70 + 2) = v238 - 1;
          v220 = v238 > 2;
          v33 = v317;
          v6 = v318;
          if (!v220)
            goto LABEL_15;
        }
      }
      v73 = 1;
LABEL_15:
      v67 = v337[1];
      v69 = v328;
      v71 = v301;
      v72 = v302;
      if (v328 >= v67)
      {
        v68 = v290;
        if (v73 < 2)
        {
LABEL_197:
          swift_bridgeObjectRelease(v310);
          v68[2] = 0;
          swift_bridgeObjectRelease(v68);
          return;
        }
LABEL_185:
        v277 = *v337;
        while (1)
        {
          v278 = v73 - 2;
          if (v73 < 2)
            goto LABEL_215;
          if (!v277)
            goto LABEL_227;
          v279 = *(_QWORD *)&v310[16 * v278 + 32];
          v280 = *(_QWORD *)&v310[16 * v73 + 24];
          v281 = v311;
          sub_10024FA0C(v277 + *(_QWORD *)(v309 + 72) * v279, v277 + *(_QWORD *)(v309 + 72) * *(_QWORD *)&v310[16 * v73 + 16], v277 + *(_QWORD *)(v309 + 72) * v280, v308);
          v311 = v281;
          if (v281)
            goto LABEL_197;
          if (v280 < v279)
            goto LABEL_216;
          if ((swift_isUniquelyReferenced_nonNull_native(v310) & 1) == 0)
            v310 = sub_10020CE70((uint64_t)v310);
          v282 = v310;
          if (v278 >= *((_QWORD *)v310 + 2))
            goto LABEL_217;
          v283 = v310 + 32;
          v284 = &v310[16 * v278 + 32];
          *(_QWORD *)v284 = v279;
          *((_QWORD *)v284 + 1) = v280;
          v285 = *((_QWORD *)v282 + 2);
          if (v73 > v285)
            goto LABEL_218;
          memmove(&v283[16 * v73 - 16], &v283[16 * v73], 16 * (v285 - v73));
          *((_QWORD *)v282 + 2) = v285 - 1;
          v73 = v285 - 1;
          if (v285 <= 2)
            goto LABEL_197;
        }
      }
    }
    if (v82 == 1)
    {
      sub_10004FCB8(v78, type metadata accessor for FMBeaconSharingModuleEntry);
      sub_10004FCB8(v79, type metadata accessor for FMBeaconSharingModuleEntry);
      LODWORD(v326) = 1;
      goto LABEL_25;
    }
    sub_10004FCB8(v78, type metadata accessor for FMBeaconSharingModuleEntry);
    sub_10004FCB8(v79, type metadata accessor for FMBeaconSharingModuleEntry);
    goto LABEL_24;
  }
  if (v60 < 0)
    goto LABEL_220;
  if (v60)
    sub_10024EEFC(0, v60, 1, v337);
}

void sub_10024E3A0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::Int v15;
  Swift::Int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  void (*v28)(void);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  Swift::Int v41;
  Swift::Int v42;
  Swift::Int v43;
  char *v44;
  uint64_t v45;
  uint64_t (*v46)(char *, uint64_t, uint64_t);
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  char *v57;
  uint64_t v58;
  Swift::Int v59;
  Swift::Int v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  Swift::Int v66;
  char *v67;
  uint64_t v68;
  Swift::Int v69;
  Swift::Int v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t (*v75)(char *, uint64_t, uint64_t);
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  void (*v82)(char *, uint64_t);
  char *v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, uint64_t);
  uint64_t v87;
  char *v88;
  char *v89;
  void (*v90)(char *, char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v92;
  unint64_t v93;
  char *v94;
  char *v95;
  Swift::Int v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  BOOL v108;
  unint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  BOOL v118;
  uint64_t v119;
  char v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  BOOL v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  unint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  unint64_t v149;
  char *v150;
  _QWORD *v151;
  _QWORD *v152;
  Swift::Int v153;
  char *v154;
  uint64_t v155;
  Swift::Int v156;
  uint64_t v157;
  char *v158;
  Swift::Int v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  void (*v164)(char *, uint64_t);
  uint64_t (*v165)(char *, uint64_t, uint64_t);
  char *v166;
  char *v167;
  char *v168;
  uint64_t v169;
  char *v170;
  Swift::Int v171;
  _QWORD *v172;
  uint64_t v173;
  char *v174;
  char *v175;
  void (*v176)(char *, uint64_t, uint64_t);
  uint64_t v177;

  v2 = v1;
  v169 = type metadata accessor for Date(0);
  v162 = *(_QWORD *)(v169 - 8);
  v4 = __chkstk_darwin(v169);
  v168 = (char *)&v152 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v167 = (char *)&v152 - v6;
  v7 = type metadata accessor for FMIPBeaconShare(0);
  v177 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v158 = (char *)&v152 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v174 = (char *)&v152 - v11;
  v12 = __chkstk_darwin(v10);
  v166 = (char *)&v152 - v13;
  __chkstk_darwin(v12);
  v170 = (char *)&v152 - v14;
  v15 = a1[1];
  v16 = _minimumMergeRunLength(_:)(v15);
  if (v16 >= v15)
  {
    if (v15 < 0)
      goto LABEL_140;
    if (v15)
      sub_10024F710(0, v15, 1, a1);
    return;
  }
  if (v15 >= 0)
    v17 = v15;
  else
    v17 = v15 + 1;
  if (v15 < -1)
    goto LABEL_148;
  v153 = v16;
  if (v15 < 2)
  {
    v21 = (char *)_swiftEmptyArrayStorage;
    v160 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v177 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v177 + 80));
    v152 = _swiftEmptyArrayStorage;
    if (v15 != 1)
    {
      v23 = _swiftEmptyArrayStorage[2];
LABEL_103:
      if (v23 >= 2)
      {
        v143 = *a1;
        do
        {
          v144 = v23 - 2;
          if (v23 < 2)
            goto LABEL_135;
          if (!v143)
            goto LABEL_147;
          v137 = v21;
          v145 = v21 + 32;
          v146 = *(_QWORD *)&v21[16 * v144 + 32];
          v147 = *(_QWORD *)&v21[16 * v23 + 24];
          sub_1002509DC(v143 + *(_QWORD *)(v177 + 72) * v146, v143 + *(_QWORD *)(v177 + 72) * *(_QWORD *)&v145[16 * v23 - 16], v143 + *(_QWORD *)(v177 + 72) * v147, v160);
          if (v2)
            goto LABEL_115;
          if (v147 < v146)
            goto LABEL_136;
          if ((swift_isUniquelyReferenced_nonNull_native(v137) & 1) == 0)
            v137 = sub_10020CE70((uint64_t)v137);
          if (v144 >= *((_QWORD *)v137 + 2))
            goto LABEL_137;
          v148 = &v137[16 * v144 + 32];
          *(_QWORD *)v148 = v146;
          *((_QWORD *)v148 + 1) = v147;
          v149 = *((_QWORD *)v137 + 2);
          if (v23 > v149)
            goto LABEL_138;
          v21 = v137;
          memmove(&v137[16 * v23 + 16], &v137[16 * v23 + 32], 16 * (v149 - v23));
          *((_QWORD *)v137 + 2) = v149 - 1;
          v23 = v149 - 1;
        }
        while (v149 > 2);
      }
      v150 = v21;
LABEL_117:
      swift_bridgeObjectRelease(v150);
      v151 = v152;
      v152[2] = 0;
      swift_bridgeObjectRelease(v151);
      return;
    }
  }
  else
  {
    v18 = v17 >> 1;
    v19 = static Array._allocateBufferUninitialized(minimumCapacity:)(v17 >> 1, v7);
    *(_QWORD *)(v19 + 16) = v18;
    v20 = *(unsigned __int8 *)(v177 + 80);
    v152 = (_QWORD *)v19;
    v160 = v19 + ((v20 + 32) & ~v20);
  }
  v22 = 0;
  v21 = (char *)_swiftEmptyArrayStorage;
  v172 = a1;
  v173 = v7;
  while (1)
  {
    v154 = v21;
    v24 = (uint64_t)v22;
    v25 = v22 + 1;
    v159 = (Swift::Int)v22;
    if ((uint64_t)(v22 + 1) >= v15)
    {
      v41 = (Swift::Int)(v22 + 1);
      v21 = v154;
    }
    else
    {
      v26 = *a1;
      v155 = v26;
      v175 = *(char **)(v177 + 72);
      v27 = v175;
      v28 = *(void (**)(void))(v177 + 16);
      v28();
      v29 = v26 + (_QWORD)v27 * v24;
      v30 = v166;
      v165 = (uint64_t (*)(char *, uint64_t, uint64_t))v28;
      v31 = ((uint64_t (*)(char *, uint64_t, uint64_t))v28)(v166, v29, v7);
      v32 = v167;
      v33 = FMIPBeaconShare.creationDate.getter(v31);
      v34 = v168;
      v35 = v30;
      FMIPBeaconShare.creationDate.getter(v33);
      LODWORD(v171) = static Date.< infix(_:_:)(v32, v34);
      v36 = *(void (**)(char *, uint64_t))(v162 + 8);
      v37 = v169;
      v36(v34, v169);
      v38 = v32;
      v39 = v155;
      v164 = v36;
      v36(v38, v37);
      v40 = *(void (**)(char *, uint64_t))(v177 + 8);
      v40(v35, v7);
      v163 = (char *)v40;
      v40(v170, v7);
      v41 = v159 + 2;
      if (v159 + 2 < v15)
      {
        v161 = (_QWORD)v175 * (_QWORD)v25;
        v156 = (_QWORD)v175 * v41;
        v157 = v2;
        while (1)
        {
          v42 = v15;
          v43 = v41;
          v44 = v170;
          v45 = v173;
          v46 = v165;
          v165(v170, v39 + v156, v173);
          v47 = v166;
          v48 = v46(v166, v39 + v161, v45);
          v49 = v167;
          v50 = FMIPBeaconShare.creationDate.getter(v48);
          v51 = v168;
          FMIPBeaconShare.creationDate.getter(v50);
          LODWORD(v176) = static Date.< infix(_:_:)(v49, v51);
          v52 = v51;
          v53 = v169;
          v54 = v164;
          v164(v52, v169);
          v54(v49, v53);
          v55 = (void (*)(char *, uint64_t))v163;
          ((void (*)(char *, uint64_t))v163)(v47, v45);
          v55(v44, v45);
          if (((v171 ^ v176) & 1) != 0)
            break;
          v41 = v43 + 1;
          v39 += (uint64_t)v175;
          v15 = v42;
          if (v42 == v41)
          {
            v41 = v42;
            v7 = v173;
            v2 = v157;
            goto LABEL_23;
          }
        }
        v7 = v173;
        v2 = v157;
        v41 = v43;
        v15 = v42;
      }
LABEL_23:
      a1 = v172;
      v21 = v154;
      v24 = v159;
      if ((v171 & 1) != 0)
      {
        if (v41 < v159)
          goto LABEL_141;
        if (v159 < v41)
        {
          v171 = v15;
          v56 = 0;
          v57 = v175;
          v58 = (_QWORD)v175 * (v41 - 1);
          v59 = v41 * (_QWORD)v175;
          v60 = v159;
          v61 = v159 * (_QWORD)v175;
          do
          {
            if (v60 != v41 + v56 - 1)
            {
              if (!v155)
                goto LABEL_146;
              v157 = v2;
              v63 = v155 + v61;
              v64 = (char *)(v155 + v58);
              v65 = v155;
              v176 = *(void (**)(char *, uint64_t, uint64_t))(v177 + 32);
              v176(v158, v155 + v61, v173);
              if (v61 < v58 || v63 >= v65 + v59)
              {
                v62 = v173;
                swift_arrayInitWithTakeFrontToBack(v63, v64);
              }
              else
              {
                v62 = v173;
                if (v61 != v58)
                  swift_arrayInitWithTakeBackToFront(v63, v64);
              }
              v176(v64, (uint64_t)v158, v62);
              v2 = v157;
              v57 = v175;
            }
            ++v60;
            --v56;
            v58 -= (uint64_t)v57;
            v59 -= (uint64_t)v57;
            v61 += (uint64_t)v57;
          }
          while (v60 < v41 + v56);
          a1 = v172;
          v7 = v173;
          v21 = v154;
          v24 = v159;
          v15 = v171;
        }
      }
    }
    if (v41 < v15)
    {
      if (__OFSUB__(v41, v24))
        goto LABEL_139;
      if (v41 - v24 < v153)
        break;
    }
LABEL_55:
    if (v41 < v24)
      goto LABEL_134;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v21);
    v171 = v41;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v21 = sub_10020C830(0, *((_QWORD *)v21 + 2) + 1, 1, v21);
    v93 = *((_QWORD *)v21 + 2);
    v92 = *((_QWORD *)v21 + 3);
    v23 = v93 + 1;
    if (v93 >= v92 >> 1)
      v21 = sub_10020C830((char *)(v92 > 1), v93 + 1, 1, v21);
    *((_QWORD *)v21 + 2) = v23;
    v94 = v21 + 32;
    v95 = &v21[16 * v93 + 32];
    v96 = v171;
    *(_QWORD *)v95 = v24;
    *((_QWORD *)v95 + 1) = v96;
    if (v93)
    {
      while (1)
      {
        v97 = v23 - 1;
        if (v23 >= 4)
        {
          v102 = &v94[16 * v23];
          v103 = *((_QWORD *)v102 - 8);
          v104 = *((_QWORD *)v102 - 7);
          v108 = __OFSUB__(v104, v103);
          v105 = v104 - v103;
          if (v108)
            goto LABEL_123;
          v107 = *((_QWORD *)v102 - 6);
          v106 = *((_QWORD *)v102 - 5);
          v108 = __OFSUB__(v106, v107);
          v100 = v106 - v107;
          v101 = v108;
          if (v108)
            goto LABEL_124;
          v109 = v23 - 2;
          v110 = &v94[16 * v23 - 32];
          v112 = *(_QWORD *)v110;
          v111 = *((_QWORD *)v110 + 1);
          v108 = __OFSUB__(v111, v112);
          v113 = v111 - v112;
          if (v108)
            goto LABEL_126;
          v108 = __OFADD__(v100, v113);
          v114 = v100 + v113;
          if (v108)
            goto LABEL_129;
          if (v114 >= v105)
          {
            v132 = &v94[16 * v97];
            v134 = *(_QWORD *)v132;
            v133 = *((_QWORD *)v132 + 1);
            v108 = __OFSUB__(v133, v134);
            v135 = v133 - v134;
            if (v108)
              goto LABEL_133;
            v125 = v100 < v135;
            goto LABEL_92;
          }
        }
        else
        {
          if (v23 != 3)
          {
            v126 = *((_QWORD *)v21 + 4);
            v127 = *((_QWORD *)v21 + 5);
            v108 = __OFSUB__(v127, v126);
            v119 = v127 - v126;
            v120 = v108;
            goto LABEL_86;
          }
          v99 = *((_QWORD *)v21 + 4);
          v98 = *((_QWORD *)v21 + 5);
          v108 = __OFSUB__(v98, v99);
          v100 = v98 - v99;
          v101 = v108;
        }
        if ((v101 & 1) != 0)
          goto LABEL_125;
        v109 = v23 - 2;
        v115 = &v94[16 * v23 - 32];
        v117 = *(_QWORD *)v115;
        v116 = *((_QWORD *)v115 + 1);
        v118 = __OFSUB__(v116, v117);
        v119 = v116 - v117;
        v120 = v118;
        if (v118)
          goto LABEL_128;
        v121 = &v94[16 * v97];
        v123 = *(_QWORD *)v121;
        v122 = *((_QWORD *)v121 + 1);
        v108 = __OFSUB__(v122, v123);
        v124 = v122 - v123;
        if (v108)
          goto LABEL_131;
        if (__OFADD__(v119, v124))
          goto LABEL_132;
        if (v119 + v124 >= v100)
        {
          v125 = v100 < v124;
LABEL_92:
          if (v125)
            v97 = v109;
          goto LABEL_94;
        }
LABEL_86:
        if ((v120 & 1) != 0)
          goto LABEL_127;
        v128 = &v94[16 * v97];
        v130 = *(_QWORD *)v128;
        v129 = *((_QWORD *)v128 + 1);
        v108 = __OFSUB__(v129, v130);
        v131 = v129 - v130;
        if (v108)
          goto LABEL_130;
        if (v131 < v119)
          goto LABEL_14;
LABEL_94:
        v136 = v97 - 1;
        if (v97 - 1 >= v23)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        if (!*v172)
          goto LABEL_145;
        v137 = v21;
        v138 = &v94[16 * v136];
        v139 = *(_QWORD *)v138;
        v140 = &v94[16 * v97];
        v141 = *((_QWORD *)v140 + 1);
        sub_1002509DC(*v172 + *(_QWORD *)(v177 + 72) * *(_QWORD *)v138, *v172 + *(_QWORD *)(v177 + 72) * *(_QWORD *)v140, *v172 + *(_QWORD *)(v177 + 72) * v141, v160);
        if (v2)
        {
LABEL_115:
          v150 = v137;
          goto LABEL_117;
        }
        if (v141 < v139)
          goto LABEL_120;
        if (v97 > *((_QWORD *)v137 + 2))
          goto LABEL_121;
        *(_QWORD *)v138 = v139;
        *(_QWORD *)&v94[16 * v136 + 8] = v141;
        v142 = *((_QWORD *)v137 + 2);
        if (v97 >= v142)
          goto LABEL_122;
        v21 = v137;
        v23 = v142 - 1;
        memmove(&v94[16 * v97], v140 + 16, 16 * (v142 - 1 - v97));
        *((_QWORD *)v137 + 2) = v142 - 1;
        v7 = v173;
        if (v142 <= 2)
          goto LABEL_14;
      }
    }
    v23 = 1;
LABEL_14:
    v22 = (char *)v171;
    a1 = v172;
    v15 = v172[1];
    if (v171 >= v15)
      goto LABEL_103;
  }
  if (__OFADD__(v24, v153))
    goto LABEL_142;
  if (v24 + v153 >= v15)
    v66 = v15;
  else
    v66 = v24 + v153;
  if (v66 >= v24)
  {
    if (v41 != v66)
    {
      v156 = v66;
      v157 = v2;
      v67 = *(char **)(v177 + 72);
      v161 = *(_QWORD *)(v177 + 16);
      v68 = (_QWORD)v67 * (v41 - 1);
      v163 = v67;
      v69 = v41 * (_QWORD)v67;
      do
      {
        v71 = 0;
        v171 = v41;
        v164 = (void (*)(char *, uint64_t))v69;
        v165 = (uint64_t (*)(char *, uint64_t, uint64_t))v68;
        while (1)
        {
          v72 = *a1;
          v175 = (char *)(v69 + v71);
          v176 = (void (*)(char *, uint64_t, uint64_t))v24;
          v73 = (char *)(v69 + v71 + v72);
          v74 = v170;
          v75 = (uint64_t (*)(char *, uint64_t, uint64_t))v161;
          ((void (*)(char *, char *, uint64_t))v161)(v170, v73, v7);
          v76 = v68 + v71 + v72;
          v77 = v166;
          v78 = v75(v166, v76, v7);
          v79 = v167;
          v80 = FMIPBeaconShare.creationDate.getter(v78);
          v81 = v168;
          FMIPBeaconShare.creationDate.getter(v80);
          LOBYTE(v72) = static Date.< infix(_:_:)(v79, v81);
          v82 = *(void (**)(char *, uint64_t))(v162 + 8);
          v83 = v81;
          v84 = v169;
          v82(v83, v169);
          v85 = v84;
          v7 = v173;
          v82(v79, v85);
          v86 = *(void (**)(char *, uint64_t))(v177 + 8);
          v86(v77, v7);
          v86(v74, v7);
          if ((v72 & 1) == 0)
            break;
          v87 = *a1;
          if (!*a1)
            goto LABEL_144;
          v69 = (Swift::Int)v164;
          v68 = (uint64_t)v165;
          v88 = (char *)v164 + v87 + v71;
          v89 = (char *)v165 + v87 + v71;
          v90 = *(void (**)(char *, char *, uint64_t))(v177 + 32);
          v90(v174, v88, v7);
          swift_arrayInitWithTakeFrontToBack(v88, v89);
          v90(v89, v174, v7);
          v71 -= (uint64_t)v163;
          v24 = (uint64_t)v176 + 1;
          v70 = v171;
          a1 = v172;
          if ((void (*)(char *, uint64_t, uint64_t))v171 == (void (*)(char *, uint64_t, uint64_t))((char *)v176 + 1))
            goto LABEL_48;
        }
        v70 = v171;
        v69 = (Swift::Int)v164;
        v68 = (uint64_t)v165;
LABEL_48:
        v41 = v70 + 1;
        v68 += (uint64_t)v163;
        v69 += (Swift::Int)v163;
        v24 = v159;
      }
      while (v41 != v156);
      v41 = v156;
      v2 = v157;
      v21 = v154;
    }
    goto LABEL_55;
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

uint64_t sub_10024EEFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(_BYTE *, uint64_t, uint64_t);
  int v35;
  _BYTE *v36;
  uint64_t v37;
  _BYTE *v38;
  _BYTE *v39;
  uint64_t v40;
  void **v41;
  int EnumCaseMultiPayload;
  void *v43;
  id v44;
  void **v45;
  void *v46;
  unint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  void **v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  void *v54;
  id v55;
  unint64_t v56;
  void *v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  void **v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE v76[16];
  uint64_t v77;
  uint64_t v78;
  void **v79;
  void **v80;
  _BYTE *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _BYTE *v85;
  _BYTE *v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  _BYTE *v91;
  uint64_t v92;
  _BYTE *v93;
  _BYTE *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _BYTE *v98;
  _BYTE *v99;
  _BYTE *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;

  v103 = a4;
  v78 = a1;
  v83 = type metadata accessor for FMFFriend(0);
  v82 = *(_QWORD *)(v83 - 8);
  __chkstk_darwin(v83);
  v81 = &v76[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v92 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
  v7 = __chkstk_darwin(v92);
  v80 = (void **)&v76[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __chkstk_darwin(v7);
  v79 = (void **)&v76[-v10];
  v11 = __chkstk_darwin(v9);
  v98 = &v76[-v12];
  __chkstk_darwin(v11);
  v91 = &v76[-v13];
  v95 = sub_100053F2C(&qword_1005DCD38);
  __chkstk_darwin(v95);
  v15 = &v76[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v84 = type metadata accessor for FMBeaconSharingModuleEntry(0);
  v16 = __chkstk_darwin(v84);
  v100 = &v76[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = __chkstk_darwin(v16);
  v86 = &v76[-v19];
  v20 = __chkstk_darwin(v18);
  v22 = &v76[-v21];
  result = __chkstk_darwin(v20);
  v26 = &v76[-v25];
  v77 = a2;
  if (a3 != a2)
  {
    v27 = *(_QWORD *)(v24 + 72);
    v28 = v27 * (a3 - 1);
    v96 = v27;
    v104 = v27 * a3;
    v99 = v15;
    v85 = v22;
    v94 = &v76[-v25];
LABEL_7:
    v29 = 0;
    v30 = v78;
    v87 = a3;
    v97 = v28;
    while (1)
    {
      v31 = *v103;
      v102 = v104 + v29;
      sub_10004FC74(v104 + v29 + v31, (uint64_t)v26, type metadata accessor for FMBeaconSharingModuleEntry);
      v101 = v28 + v29;
      sub_10004FC74(v28 + v29 + v31, (uint64_t)v22, type metadata accessor for FMBeaconSharingModuleEntry);
      v32 = (uint64_t)&v15[*(int *)(v95 + 48)];
      sub_10004FC74((uint64_t)v26, (uint64_t)v15, type metadata accessor for FMBeaconSharingModuleEntry);
      sub_10004FC74((uint64_t)v22, v32, type metadata accessor for FMBeaconSharingModuleEntry);
      v33 = sub_100053F2C(&qword_1005DCB20);
      v34 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48);
      v35 = v34(v15, 2, v33);
      if (v35)
      {
        if (v35 != 1)
        {
          sub_10004FCB8(v32, type metadata accessor for FMBeaconSharingModuleEntry);
          sub_10004FCB8((uint64_t)v15, type metadata accessor for FMBeaconSharingModuleEntry);
          v26 = v94;
LABEL_5:
          sub_10004FCB8((uint64_t)v22, type metadata accessor for FMBeaconSharingModuleEntry);
          result = sub_10004FCB8((uint64_t)v26, type metadata accessor for FMBeaconSharingModuleEntry);
          v28 = v97;
LABEL_6:
          ++a3;
          v28 += v96;
          v104 += v96;
          if (a3 == v77)
            return result;
          goto LABEL_7;
        }
        sub_10004FCB8(v32, type metadata accessor for FMBeaconSharingModuleEntry);
        sub_10004FCB8((uint64_t)v15, type metadata accessor for FMBeaconSharingModuleEntry);
        sub_10004FCB8((uint64_t)v22, type metadata accessor for FMBeaconSharingModuleEntry);
        v26 = v94;
        result = sub_10004FCB8((uint64_t)v94, type metadata accessor for FMBeaconSharingModuleEntry);
        v28 = v97;
      }
      else
      {
        v36 = v86;
        sub_10004FC74((uint64_t)v15, (uint64_t)v86, type metadata accessor for FMBeaconSharingModuleEntry);
        v37 = (uint64_t)&v36[*(int *)(v33 + 48)];
        v93 = &v36[*(int *)(v33 + 64)];
        if (v34((_BYTE *)v32, 2, v33))
        {
          v75 = type metadata accessor for UUID(0);
          (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v75 - 8) + 8))(v93, v75);
          sub_10004FCB8(v37, type metadata accessor for FMBeaconSharingModuleShareState);
          sub_10004FCB8((uint64_t)v36, type metadata accessor for FMBeaconSharingModuleRelationshipType);
          sub_1000051EC((uint64_t)v15, &qword_1005DCD38);
          v22 = v85;
          v26 = v94;
          goto LABEL_5;
        }
        v38 = v91;
        sub_100051774((uint64_t)v36, (uint64_t)v91, type metadata accessor for FMBeaconSharingModuleRelationshipType);
        v39 = v98;
        sub_100051774(v32, (uint64_t)v98, type metadata accessor for FMBeaconSharingModuleRelationshipType);
        v40 = (uint64_t)v38;
        v41 = v79;
        sub_10004FC74(v40, (uint64_t)v79, type metadata accessor for FMBeaconSharingModuleRelationshipType);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v41, v92);
        v90 = v37;
        if (EnumCaseMultiPayload == 1)
        {
          v43 = *v41;
          if (qword_1005D1BD0 != -1)
            swift_once(&qword_1005D1BD0, sub_1000C1184);
          v44 = objc_msgSend((id)qword_1005F4DB8, "stringFromContact:", v43);
          v45 = v80;
          if (v44)
          {
            v46 = v44;
            v88 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
            v89 = v47;

          }
          else
          {

            v88 = 0;
            v89 = 0xE000000000000000;
          }
        }
        else
        {
          v48 = v82;
          v49 = v81;
          v50 = v41;
          v51 = v83;
          v52 = (*(uint64_t (**)(_BYTE *, void **, uint64_t))(v82 + 32))(v81, v50, v83);
          v88 = FMFFriend.name.getter(v52);
          v89 = v53;
          v39 = v98;
          (*(void (**)(_BYTE *, uint64_t))(v48 + 8))(v49, v51);
          v45 = v80;
        }
        sub_10004FC74((uint64_t)v39, (uint64_t)v45, type metadata accessor for FMBeaconSharingModuleRelationshipType);
        if (swift_getEnumCaseMultiPayload(v45, v92) == 1)
        {
          v54 = *v45;
          if (qword_1005D1BD0 != -1)
            swift_once(&qword_1005D1BD0, sub_1000C1184);
          v55 = objc_msgSend((id)qword_1005F4DB8, "stringFromContact:", v54);
          v56 = v89;
          if (v55)
          {
            v57 = v55;
            v58 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
            v60 = v59;

          }
          else
          {

            v58 = 0;
            v60 = 0xE000000000000000;
          }
        }
        else
        {
          v61 = v82;
          v62 = v81;
          v63 = v45;
          v64 = v83;
          v65 = (*(uint64_t (**)(_BYTE *, void **, uint64_t))(v82 + 32))(v81, v63, v83);
          v58 = FMFFriend.name.getter(v65);
          v60 = v66;
          (*(void (**)(_BYTE *, uint64_t))(v61 + 8))(v62, v64);
          v56 = v89;
        }
        v22 = v85;
        if (v88 == v58 && v56 == v60)
        {
          v67 = 0;
          v60 = v56;
        }
        else
        {
          v67 = _stringCompareWithSmolCheck(_:_:expecting:)(v88, v56, v58, v60, 1);
        }
        swift_bridgeObjectRelease(v56);
        swift_bridgeObjectRelease(v60);
        v68 = v32 + *(int *)(v33 + 48);
        v69 = v32 + *(int *)(v33 + 64);
        sub_10004FCB8((uint64_t)v98, type metadata accessor for FMBeaconSharingModuleRelationshipType);
        sub_10004FCB8((uint64_t)v91, type metadata accessor for FMBeaconSharingModuleRelationshipType);
        v70 = type metadata accessor for UUID(0);
        v71 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 8);
        v71(v69, v70);
        sub_10004FCB8(v68, type metadata accessor for FMBeaconSharingModuleShareState);
        v71((uint64_t)v93, v70);
        sub_10004FCB8(v90, type metadata accessor for FMBeaconSharingModuleShareState);
        v15 = v99;
        sub_10004FCB8((uint64_t)v99, type metadata accessor for FMBeaconSharingModuleEntry);
        sub_10004FCB8((uint64_t)v22, type metadata accessor for FMBeaconSharingModuleEntry);
        v26 = v94;
        result = sub_10004FCB8((uint64_t)v94, type metadata accessor for FMBeaconSharingModuleEntry);
        a3 = v87;
        v28 = v97;
        if ((v67 & 1) == 0)
          goto LABEL_6;
      }
      v72 = *v103;
      if (!*v103)
      {
        __break(1u);
        return result;
      }
      v73 = v72 + v104 + v29;
      v74 = v72 + v28 + v29;
      sub_100051774(v73, (uint64_t)v100, type metadata accessor for FMBeaconSharingModuleEntry);
      swift_arrayInitWithTakeFrontToBack(v73, v74);
      result = sub_100051774((uint64_t)v100, v74, type metadata accessor for FMBeaconSharingModuleEntry);
      v29 -= v96;
      ++v30;
      v15 = v99;
      if (a3 == v30)
        goto LABEL_6;
    }
  }
  return result;
}

uint64_t sub_10024F710(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;

  v46 = a1;
  v7 = type metadata accessor for Date(0);
  v53 = *(_QWORD *)(v7 - 8);
  v54 = v7;
  v8 = __chkstk_darwin(v7);
  v52 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v51 = (char *)&v44 - v10;
  v11 = type metadata accessor for FMIPBeaconShare(0);
  v61 = *(_QWORD **)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v59 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v50 = (char *)&v44 - v15;
  result = __chkstk_darwin(v14);
  v49 = (char *)&v44 - v17;
  v58 = a3;
  v45 = a2;
  if (a3 != a2)
  {
    v18 = v61[9];
    v47 = (uint64_t (*)(char *, uint64_t, uint64_t))v61[2];
    v48 = v11;
    v19 = v18 * (v58 - 1);
    v55 = v18;
    v20 = v18 * v58;
LABEL_5:
    v21 = 0;
    v62 = v46;
    v56 = v20;
    v57 = v19;
    while (1)
    {
      v22 = *a4;
      v60 = v20 + v21;
      v23 = v20 + v21 + v22;
      v24 = v49;
      v25 = v47;
      v47(v49, v23, v11);
      v26 = v19 + v21 + v22;
      v27 = v50;
      v28 = v25(v50, v26, v11);
      v29 = v51;
      v30 = FMIPBeaconShare.creationDate.getter(v28);
      v31 = a4;
      v32 = v52;
      FMIPBeaconShare.creationDate.getter(v30);
      LOBYTE(v22) = static Date.< infix(_:_:)(v29, v32);
      v33 = *(void (**)(char *, uint64_t))(v53 + 8);
      v34 = v32;
      v35 = v54;
      v33(v34, v54);
      v36 = v35;
      a4 = v31;
      v11 = v48;
      v33(v29, v36);
      v37 = (void (*)(char *, uint64_t))v61[1];
      v38 = v27;
      v19 = v57;
      v37(v38, v11);
      v39 = v24;
      v20 = v56;
      result = ((uint64_t (*)(char *, uint64_t))v37)(v39, v11);
      if ((v22 & 1) == 0)
      {
LABEL_4:
        v19 += v55;
        v20 += v55;
        if (++v58 == v45)
          return result;
        goto LABEL_5;
      }
      v40 = *a4;
      if (!*a4)
        break;
      v41 = v40 + v20 + v21;
      v42 = v40 + v19 + v21;
      v43 = (void (*)(char *, uint64_t, uint64_t))v61[4];
      v43(v59, v41, v11);
      swift_arrayInitWithTakeFrontToBack(v41, v42);
      result = ((uint64_t (*)(uint64_t, char *, uint64_t))v43)(v42, v59, v11);
      v21 -= v55;
      if (v58 == ++v62)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10024FA0C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(char *, uint64_t, uint64_t);
  int v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void **v61;
  void *v62;
  id v63;
  void **v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  void **v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t);
  void *v74;
  id v75;
  uint64_t v76;
  void *v77;
  void *v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(uint64_t, uint64_t);
  unint64_t v90;
  uint64_t result;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (*v99)(char *, uint64_t, uint64_t);
  int v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void **v110;
  void *v111;
  id v112;
  void *v113;
  void *v114;
  uint64_t v115;
  uint64_t v116;
  void **v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void **v122;
  void *v123;
  id v124;
  void *v125;
  void *v126;
  unint64_t v127;
  unint64_t v128;
  void **v129;
  char *v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void (*v136)(uint64_t, uint64_t);
  unint64_t v137;
  unint64_t v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  uint64_t v142;
  void **v143;
  char *v144;
  void **v145;
  void **v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  unint64_t v165;
  unint64_t v166;
  unint64_t v167;

  v164 = a3;
  v153 = type metadata accessor for FMFFriend(0);
  v156 = *(_QWORD *)(v153 - 8);
  __chkstk_darwin(v153);
  v152 = (char *)&v142 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = type metadata accessor for FMBeaconSharingModuleRelationshipType(0);
  v8 = __chkstk_darwin(v157);
  v146 = (void **)((char *)&v142 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = __chkstk_darwin(v8);
  v145 = (void **)((char *)&v142 - v11);
  v12 = __chkstk_darwin(v10);
  v155 = (uint64_t)&v142 - v13;
  v14 = __chkstk_darwin(v12);
  v151 = (uint64_t)&v142 - v15;
  v16 = __chkstk_darwin(v14);
  v144 = (char *)&v142 - v17;
  v18 = __chkstk_darwin(v16);
  v143 = (void **)((char *)&v142 - v19);
  v20 = __chkstk_darwin(v18);
  v154 = (uint64_t)&v142 - v21;
  __chkstk_darwin(v20);
  v150 = (uint64_t)&v142 - v22;
  v162 = sub_100053F2C(&qword_1005DCD38);
  v23 = __chkstk_darwin(v162);
  v25 = (char *)&v142 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v27 = (char *)&v142 - v26;
  v159 = type metadata accessor for FMBeaconSharingModuleEntry(0);
  v28 = __chkstk_darwin(v159);
  v29 = __chkstk_darwin(v28);
  v161 = (unint64_t)&v142 - v30;
  v31 = __chkstk_darwin(v29);
  v160 = (uint64_t)&v142 - v32;
  v33 = __chkstk_darwin(v31);
  v34 = __chkstk_darwin(v33);
  v36 = (char *)&v142 - v35;
  __chkstk_darwin(v34);
  v40 = (char *)&v142 - v39;
  v163 = *(_QWORD *)(v41 + 72);
  if (!v163)
  {
    __break(1u);
LABEL_115:
    __break(1u);
LABEL_116:
    __break(1u);
    goto LABEL_117;
  }
  if (a2 - a1 == 0x8000000000000000 && v163 == -1)
    goto LABEL_115;
  v42 = v164 - a2;
  if (v164 - a2 == 0x8000000000000000 && v163 == -1)
    goto LABEL_116;
  v43 = (uint64_t)(a2 - a1) / v163;
  v167 = a1;
  v166 = a4;
  v44 = v42 / v163;
  if (v43 >= v42 / v163)
  {
    if (v44 < 0)
      goto LABEL_117;
    v46 = v44 * v163;
    v154 = v37;
    if (a4 < a2 || a2 + v46 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4, a2);
    }
    else if (a4 != a2)
    {
      swift_arrayInitWithTakeBackToFront(a4, a2);
    }
    v90 = a4 + v46;
    v165 = a4 + v46;
    v167 = a2;
    if (v46 < 1 || a1 >= a2)
    {
LABEL_71:
      sub_10020C928(&v167, &v166, (uint64_t *)&v165);
      return 1;
    }
    v93 = -v163;
    v158 = a1;
    v150 = -v163;
    v147 = a4;
    while (1)
    {
      v94 = v160;
      sub_10004FC74(v90 + v93, v160, type metadata accessor for FMBeaconSharingModuleEntry);
      v95 = a2 + v93;
      v96 = v161;
      sub_10004FC74(a2 + v93, v161, type metadata accessor for FMBeaconSharingModuleEntry);
      v97 = (uint64_t)&v25[*(int *)(v162 + 48)];
      sub_10004FC74(v94, (uint64_t)v25, type metadata accessor for FMBeaconSharingModuleEntry);
      sub_10004FC74(v96, v97, type metadata accessor for FMBeaconSharingModuleEntry);
      v98 = sub_100053F2C(&qword_1005DCB20);
      v99 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 48);
      v100 = v99(v25, 2, v98);
      if (v100)
      {
        if (v100 == 1)
        {
          sub_10004FCB8(v97, type metadata accessor for FMBeaconSharingModuleEntry);
          sub_10004FCB8((uint64_t)v25, type metadata accessor for FMBeaconSharingModuleEntry);
          v101 = 1;
        }
        else
        {
          sub_10004FCB8(v97, type metadata accessor for FMBeaconSharingModuleEntry);
          sub_10004FCB8((uint64_t)v25, type metadata accessor for FMBeaconSharingModuleEntry);
          v101 = 0;
        }
      }
      else
      {
        v102 = (uint64_t)v25;
        v103 = (uint64_t)v25;
        v104 = v154;
        sub_10004FC74(v102, v154, type metadata accessor for FMBeaconSharingModuleEntry);
        v105 = v104 + *(int *)(v98 + 48);
        v106 = v104 + *(int *)(v98 + 64);
        if (!v99((char *)v97, 2, v98))
        {
          v148 = (char *)v106;
          v149 = (char *)v105;
          v108 = v151;
          sub_100051774(v104, v151, type metadata accessor for FMBeaconSharingModuleRelationshipType);
          sub_100051774(v97, v155, type metadata accessor for FMBeaconSharingModuleRelationshipType);
          v109 = v108;
          v110 = v145;
          sub_10004FC74(v109, (uint64_t)v145, type metadata accessor for FMBeaconSharingModuleRelationshipType);
          if (swift_getEnumCaseMultiPayload(v110, v157) == 1)
          {
            v111 = *v110;
            v25 = (char *)v103;
            v93 = v150;
            a4 = v147;
            if (qword_1005D1BD0 != -1)
              swift_once(&qword_1005D1BD0, sub_1000C1184);
            v112 = objc_msgSend((id)qword_1005F4DB8, "stringFromContact:", v111, v142);
            v113 = v111;
            if (v112)
            {
              v114 = v112;
              v144 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v112);
              v163 = v115;

            }
            else
            {

              v144 = 0;
              v163 = 0xE000000000000000;
            }
          }
          else
          {
            v116 = v156;
            v117 = v110;
            v118 = v152;
            v119 = v153;
            v120 = (*(uint64_t (**)(char *, void **, uint64_t))(v156 + 32))(v152, v117, v153);
            v144 = (char *)FMFFriend.name.getter(v120);
            v163 = v121;
            (*(void (**)(char *, uint64_t))(v116 + 8))(v118, v119);
            v25 = (char *)v103;
            v93 = v150;
            a4 = v147;
          }
          v122 = v146;
          sub_10004FC74(v155, (uint64_t)v146, type metadata accessor for FMBeaconSharingModuleRelationshipType);
          if (swift_getEnumCaseMultiPayload(v122, v157) == 1)
          {
            v123 = *v122;
            if (qword_1005D1BD0 != -1)
              swift_once(&qword_1005D1BD0, sub_1000C1184);
            v124 = objc_msgSend((id)qword_1005F4DB8, "stringFromContact:", v123, v142);
            if (v124)
            {
              v125 = v124;
              v143 = (void **)static String._unconditionallyBridgeFromObjectiveC(_:)(v124);
              v126 = v123;
              v128 = v127;

              goto LABEL_91;
            }

            v133 = 0;
            v128 = 0xE000000000000000;
          }
          else
          {
            v129 = v122;
            v130 = v152;
            v131 = (*(uint64_t (**)(char *, void **, uint64_t))(v156 + 32))(v152, v129, v153);
            v143 = (void **)FMFFriend.name.getter(v131);
            v128 = v132;
            (*(void (**)(char *, uint64_t))(v156 + 8))(v130, v153);
LABEL_91:
            v133 = (uint64_t)v143;
          }
          if (v144 == (char *)v133 && v163 == v128)
          {
            v101 = 0;
            v128 = v163;
          }
          else
          {
            v101 = _stringCompareWithSmolCheck(_:_:expecting:)(v144, v163, v133, v128, 1);
          }
          swift_bridgeObjectRelease(v163);
          swift_bridgeObjectRelease(v128);
          v134 = v97 + *(int *)(v98 + 48);
          v163 = v97 + *(int *)(v98 + 64);
          sub_10004FCB8(v155, type metadata accessor for FMBeaconSharingModuleRelationshipType);
          sub_10004FCB8(v151, type metadata accessor for FMBeaconSharingModuleRelationshipType);
          v135 = type metadata accessor for UUID(0);
          v136 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v135 - 8) + 8);
          v136(v163, v135);
          sub_10004FCB8(v134, type metadata accessor for FMBeaconSharingModuleShareState);
          v136((uint64_t)v148, v135);
          sub_10004FCB8((uint64_t)v149, type metadata accessor for FMBeaconSharingModuleShareState);
          sub_10004FCB8((uint64_t)v25, type metadata accessor for FMBeaconSharingModuleEntry);
          goto LABEL_97;
        }
        v107 = type metadata accessor for UUID(0);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 8))(v106, v107);
        sub_10004FCB8(v105, type metadata accessor for FMBeaconSharingModuleShareState);
        sub_10004FCB8(v104, type metadata accessor for FMBeaconSharingModuleRelationshipType);
        sub_1000051EC(v103, &qword_1005DCD38);
        v101 = 0;
        v25 = (char *)v103;
        v93 = v150;
        a4 = v147;
      }
LABEL_97:
      v137 = v164;
      v138 = v164 + v93;
      sub_10004FCB8(v161, type metadata accessor for FMBeaconSharingModuleEntry);
      sub_10004FCB8(v160, type metadata accessor for FMBeaconSharingModuleEntry);
      if ((v101 & 1) != 0)
      {
        if (v137 < a2 || v138 >= a2)
        {
          swift_arrayInitWithTakeFrontToBack(v137 + v93, v95);
          v139 = v158;
        }
        else
        {
          v139 = v158;
          if (v137 != a2)
            swift_arrayInitWithTakeBackToFront(v138, v95);
        }
        v167 += v93;
      }
      else
      {
        v140 = v165;
        v141 = v165 + v93;
        v165 += v93;
        if (v137 < v140 || v138 >= v140)
        {
          swift_arrayInitWithTakeFrontToBack(v137 + v93, v141);
          v95 = a2;
          v139 = v158;
        }
        else
        {
          v139 = v158;
          if (v137 != v140)
            swift_arrayInitWithTakeBackToFront(v137 + v93, v141);
          v95 = a2;
        }
      }
      v90 = v165;
      if (v165 > a4)
      {
        a2 = v95;
        v164 = v138;
        if (v95 > v139)
          continue;
      }
      goto LABEL_71;
    }
  }
  if ((v43 & 0x8000000000000000) == 0)
  {
    v45 = v43 * v163;
    v160 = v38;
    if (a4 < a1 || a1 + v45 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4, a1);
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront(a4, a1);
    }
    v161 = a4 + v45;
    v165 = a4 + v45;
    if (v45 >= 1 && a2 < v164)
    {
      v148 = v40;
      v149 = v36;
      while (1)
      {
        sub_10004FC74(a2, (uint64_t)v40, type metadata accessor for FMBeaconSharingModuleEntry);
        sub_10004FC74(a4, (uint64_t)v36, type metadata accessor for FMBeaconSharingModuleEntry);
        v48 = (uint64_t)&v27[*(int *)(v162 + 48)];
        sub_10004FC74((uint64_t)v40, (uint64_t)v27, type metadata accessor for FMBeaconSharingModuleEntry);
        sub_10004FC74((uint64_t)v36, v48, type metadata accessor for FMBeaconSharingModuleEntry);
        v49 = sub_100053F2C(&qword_1005DCB20);
        v50 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 48);
        v51 = v50(v27, 2, v49);
        if (v51)
        {
          if (v51 != 1)
          {
            sub_10004FCB8(v48, type metadata accessor for FMBeaconSharingModuleEntry);
            sub_10004FCB8((uint64_t)v27, type metadata accessor for FMBeaconSharingModuleEntry);
            goto LABEL_33;
          }
          sub_10004FCB8(v48, type metadata accessor for FMBeaconSharingModuleEntry);
          sub_10004FCB8((uint64_t)v27, type metadata accessor for FMBeaconSharingModuleEntry);
          sub_10004FCB8((uint64_t)v36, type metadata accessor for FMBeaconSharingModuleEntry);
          sub_10004FCB8((uint64_t)v40, type metadata accessor for FMBeaconSharingModuleEntry);
        }
        else
        {
          v54 = v160;
          sub_10004FC74((uint64_t)v27, v160, type metadata accessor for FMBeaconSharingModuleEntry);
          v55 = v54 + *(int *)(v49 + 48);
          v56 = v54 + *(int *)(v49 + 64);
          if (v50((char *)v48, 2, v49))
          {
            v57 = type metadata accessor for UUID(0);
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v56, v57);
            sub_10004FCB8(v55, type metadata accessor for FMBeaconSharingModuleShareState);
            sub_10004FCB8(v54, type metadata accessor for FMBeaconSharingModuleRelationshipType);
            sub_1000051EC((uint64_t)v27, &qword_1005DCD38);
            v40 = v148;
            v36 = v149;
LABEL_33:
            sub_10004FCB8((uint64_t)v36, type metadata accessor for FMBeaconSharingModuleEntry);
            sub_10004FCB8((uint64_t)v40, type metadata accessor for FMBeaconSharingModuleEntry);
LABEL_34:
            v52 = v167;
            v58 = v166 + v163;
            if (v167 < v166 || v167 >= v58)
            {
              swift_arrayInitWithTakeFrontToBack(v167, v166);
            }
            else if (v167 != v166)
            {
              swift_arrayInitWithTakeBackToFront(v167, v166);
            }
            v166 = v58;
            v53 = a2;
            goto LABEL_47;
          }
          v155 = v56;
          v158 = v55;
          v59 = v150;
          sub_100051774(v54, v150, type metadata accessor for FMBeaconSharingModuleRelationshipType);
          sub_100051774(v48, v154, type metadata accessor for FMBeaconSharingModuleRelationshipType);
          v60 = v59;
          v61 = v143;
          sub_10004FC74(v60, (uint64_t)v143, type metadata accessor for FMBeaconSharingModuleRelationshipType);
          if (swift_getEnumCaseMultiPayload(v61, v157) == 1)
          {
            v62 = *v61;
            v40 = v148;
            if (qword_1005D1BD0 != -1)
              swift_once(&qword_1005D1BD0, sub_1000C1184);
            v63 = objc_msgSend((id)qword_1005F4DB8, "stringFromContact:", v62, v142);
            v64 = (void **)v144;
            if (v63)
            {
              v65 = v63;
              v147 = static String._unconditionallyBridgeFromObjectiveC(_:)(v63);
              v151 = v66;

            }
            else
            {

              v147 = 0;
              v151 = 0xE000000000000000;
            }
          }
          else
          {
            v67 = v156;
            v68 = v61;
            v69 = v152;
            v70 = v153;
            v71 = (*(uint64_t (**)(char *, void **, uint64_t))(v156 + 32))(v152, v68, v153);
            v147 = FMFFriend.name.getter(v71);
            v151 = v72;
            v73 = *(void (**)(char *, uint64_t))(v67 + 8);
            v64 = (void **)v144;
            v73(v69, v70);
            v40 = v148;
          }
          sub_10004FC74(v154, (uint64_t)v64, type metadata accessor for FMBeaconSharingModuleRelationshipType);
          if (swift_getEnumCaseMultiPayload(v64, v157) == 1)
          {
            v74 = *v64;
            if (qword_1005D1BD0 != -1)
              swift_once(&qword_1005D1BD0, sub_1000C1184);
            v75 = objc_msgSend((id)qword_1005F4DB8, "stringFromContact:", v74, v142);
            v76 = v151;
            if (v75)
            {
              v77 = v75;
              v146 = (void **)static String._unconditionallyBridgeFromObjectiveC(_:)(v75);
              v78 = v74;
              v80 = v79;

              v81 = (uint64_t)v146;
            }
            else
            {

              v81 = 0;
              v80 = 0xE000000000000000;
            }
          }
          else
          {
            v82 = v152;
            v83 = v153;
            v84 = (*(uint64_t (**)(char *, void **, uint64_t))(v156 + 32))(v152, v64, v153);
            v146 = (void **)FMFFriend.name.getter(v84);
            v80 = v85;
            (*(void (**)(char *, uint64_t))(v156 + 8))(v82, v83);
            v81 = (uint64_t)v146;
            v76 = v151;
          }
          if (v147 == v81 && v76 == v80)
          {
            LODWORD(v151) = 0;
            v80 = v76;
          }
          else
          {
            LODWORD(v151) = _stringCompareWithSmolCheck(_:_:expecting:)(v147, v76, v81, v80, 1);
          }
          swift_bridgeObjectRelease(v76);
          swift_bridgeObjectRelease(v80);
          v86 = v48 + *(int *)(v49 + 48);
          v87 = v48 + *(int *)(v49 + 64);
          sub_10004FCB8(v154, type metadata accessor for FMBeaconSharingModuleRelationshipType);
          sub_10004FCB8(v150, type metadata accessor for FMBeaconSharingModuleRelationshipType);
          v88 = type metadata accessor for UUID(0);
          v89 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 8);
          v89(v87, v88);
          sub_10004FCB8(v86, type metadata accessor for FMBeaconSharingModuleShareState);
          v89(v155, v88);
          sub_10004FCB8(v158, type metadata accessor for FMBeaconSharingModuleShareState);
          sub_10004FCB8((uint64_t)v27, type metadata accessor for FMBeaconSharingModuleEntry);
          v36 = v149;
          sub_10004FCB8((uint64_t)v149, type metadata accessor for FMBeaconSharingModuleEntry);
          sub_10004FCB8((uint64_t)v40, type metadata accessor for FMBeaconSharingModuleEntry);
          if ((v151 & 1) == 0)
            goto LABEL_34;
        }
        v52 = v167;
        v53 = a2 + v163;
        if (v167 < a2 || v167 >= v53)
        {
          swift_arrayInitWithTakeFrontToBack(v167, a2);
        }
        else if (v167 == a2)
        {
          v52 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront(v167, a2);
        }
LABEL_47:
        v167 = v52 + v163;
        a4 = v166;
        if (v166 < v161)
        {
          a2 = v53;
          if (v53 < v164)
            continue;
        }
        goto LABEL_71;
      }
    }
    goto LABEL_71;
  }
LABEL_117:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

