uint64_t sub_100406578(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  void *v48;
  id v49;
  double v50;
  double v51;
  char *v52;
  __n128 v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  void (*v62)(char *, _QWORD, uint64_t, __n128);
  uint64_t v63;
  char *v64;
  uint64_t v65;
  __n128 v66;
  __n128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(uint64_t, uint64_t, uint64_t);
  uint64_t v73;
  id v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  NSString v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t (*v101)(uint64_t, uint64_t);
  uint64_t v102;
  uint64_t v103;
  char v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  void *v108;
  double v109;
  double v110;
  double v111;
  double v112;
  uint64_t v113;
  void *v114;
  double v115;
  double v116;
  void *v117;
  void *v118;
  double v119;
  double v120;
  double v121;
  double v122;
  uint64_t v123;
  void *v124;
  double v125;
  double v126;
  uint64_t v127;
  uint64_t v128;
  id v129;
  uint64_t v130;
  uint64_t v132;
  char *v133;
  char *v134;
  char *v135;
  uint64_t v136;
  void *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  void *v152;

  v146 = a5;
  v147 = a4;
  v143 = a2;
  v149 = a1;
  v139 = type metadata accessor for FMIPItem(0);
  v148 = *(_QWORD *)(v139 - 8);
  __chkstk_darwin(v139);
  v135 = (char *)&v132 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = type metadata accessor for FMAnnotationIdentifier(0);
  __chkstk_darwin(v145);
  v144 = (uint64_t *)((char *)&v132 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  v9 = __chkstk_darwin(v8);
  v136 = (uint64_t)&v132 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v150 = (char *)&v132 - v12;
  __chkstk_darwin(v11);
  v138 = (uint64_t)&v132 - v13;
  v14 = sub_100053F2C(&qword_1005DB5F8);
  __chkstk_darwin(v14);
  v134 = (char *)&v132 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FMIPDevice(0);
  v140 = *(_QWORD *)(v16 - 8);
  v141 = v16;
  __chkstk_darwin(v16);
  v142 = (char *)&v132 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (_QWORD *)type metadata accessor for FMIPDeviceImageCacheRequest(0);
  v19 = *(v18 - 1);
  __chkstk_darwin(v18);
  v21 = (char *)&v132 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_100053F2C(&qword_1005D72D0);
  __chkstk_darwin(v22);
  v24 = (char *)&v132 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for FMIPItemGroup(0);
  v26 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v28 = (char *)&v132 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for FMIPDeviceImageSize(0);
  v30 = __chkstk_darwin(v29);
  v32 = (char *)&v132 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __chkstk_darwin(v30);
  v37 = (char *)&v132 - v34;
  if (a3)
  {
    v38 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v151 + 16) + 24) + 24);
    v39 = v35;
    v40 = v36;
    (*(void (**)(char *, _QWORD, uint64_t))(v36 + 104))((char *)&v132 - v34, enum case for FMIPDeviceImageSize.list(_:), v35);
    swift_retain(v38);
    v41 = v149;
    v137 = (void *)sub_100182A4C(a3, v149, (uint64_t)v37, 0, 0);
    v42 = swift_release(v38);
    (*(void (**)(char *, uint64_t, __n128))(v40 + 8))(v37, v39, v42);
  }
  else
  {
    v43 = v36;
    v133 = v21;
    v44 = v35;
    v137 = v18;
    FMIPDevice.itemGroup.getter(v33);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25) == 1)
    {
      sub_1000051EC((uint64_t)v24, &qword_1005D72D0);
      v45 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v151 + 16) + 24) + 24);
      (*(void (**)(char *, _QWORD, uint64_t))(v43 + 104))(v37, enum case for FMIPDeviceImageSize.list(_:), v44);
      v46 = v142;
      v47 = v149;
      (*(void (**)(char *, uint64_t, uint64_t))(v140 + 16))(v142, v149, v141);
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v32, v37, v44);
      v48 = (void *)objc_opt_self(UIScreen);
      swift_retain(v45);
      v49 = objc_msgSend(v48, "mainScreen");
      objc_msgSend(v49, "scale");
      v51 = v50;

      v52 = v133;
      FMIPDeviceImageCacheRequest.init(device:size:scale:)(v46, v32, v51);
      dispatch thunk of FMImageCache.cachedImage(for:completion:)(&v152, v52, 0, 0);
      (*(void (**)(char *, void *))(v19 + 8))(v52, v137);
      v53 = swift_release(v45);
      v137 = v152;
      (*(void (**)(char *, uint64_t, __n128))(v43 + 8))(v37, v44, v53);
      v55 = v143;
      v54 = v144;
      v41 = v47;
      goto LABEL_7;
    }
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v28, v24, v25);
    v56 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v151 + 16) + 24) + 24);
    v57 = swift_retain(v56);
    v58 = FMIPItemGroup.items.getter(v57);
    v59 = sub_1000CEC84(v58);
    v60 = swift_bridgeObjectRelease(v58);
    v61 = v43;
    v62 = *(void (**)(char *, _QWORD, uint64_t, __n128))(v43 + 104);
    v63 = v44;
    v62(v37, enum case for FMIPDeviceImageSize.list(_:), v44, v60);
    v64 = (char *)v59;
    v65 = v59;
    v41 = v149;
    v137 = (void *)sub_100182A4C(v64, v149, (uint64_t)v37, 0, 0);
    swift_release(v56);
    v66 = swift_bridgeObjectRelease(v65);
    (*(void (**)(char *, uint64_t, __n128))(v61 + 8))(v37, v63, v66);
    (*(void (**)(char *, uint64_t, __n128))(v26 + 8))(v28, v25, v67);
  }
  v55 = v143;
  v54 = v144;
LABEL_7:
  v68 = v138;
  v69 = v139;
  v70 = v148;
  v71 = (uint64_t)v150;
  sub_100007464(v55, v138, (uint64_t *)&unk_1005D3AA0);
  v72 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v70 + 48);
  v73 = v72(v68, 1, v69);
  if ((_DWORD)v73 == 1)
  {
    sub_1000051EC(v68, (uint64_t *)&unk_1005D3AA0);
    v74 = 0;
  }
  else
  {
    v75 = v134;
    FMIPItem.partInfo.getter(v73);
    v76 = (uint64_t)v75;
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v68, v69);
    v77 = type metadata accessor for FMIPPartInfo(0);
    v78 = *(_QWORD *)(v77 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v76, 1, v77) == 1)
    {
      sub_1000051EC(v76, &qword_1005DB5F8);
      v74 = 0;
    }
    else
    {
      FMIPPartInfo.symbol.getter();
      v80 = v79;
      (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v76, v77);
      if (v80)
      {
        swift_bridgeObjectRetain(v80);
        v81 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease(v80);
        v74 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v81);
        swift_bridgeObjectRelease(v80);

      }
      else
      {
        v74 = 0;
      }
      v70 = v148;
    }
    v71 = (uint64_t)v150;
  }
  sub_100007464(v55, v71, (uint64_t *)&unk_1005D3AA0);
  if (v72(v71, 1, v69) == 1)
  {
    v82 = sub_1000051EC(v71, (uint64_t *)&unk_1005D3AA0);
    *v54 = FMIPDevice.identifier.getter(v82);
    v54[1] = v83;
    swift_storeEnumTagMultiPayload(v54, v145, 2);
    v84 = sub_10040B80C(v41);
    v85 = v84;
    v87 = v86;
  }
  else
  {
    v88 = v55;
    v89 = v74;
    v90 = (uint64_t)v135;
    v91 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v70 + 32))(v135, v71, v69);
    v92 = v70;
    v93 = FMIPDevice.identifier.getter(v91);
    v95 = v94;
    v96 = FMIPItem.identifier.getter(v93);
    *v54 = v93;
    v54[1] = v95;
    v54[2] = v96;
    v54[3] = v97;
    swift_storeEnumTagMultiPayload(v54, v145, 4);
    v98 = sub_10040B2C0(v90, v41);
    v99 = v69;
    v87 = v100;
    v101 = *(uint64_t (**)(uint64_t, uint64_t))(v92 + 8);
    v85 = v98;
    v102 = v90;
    v74 = v89;
    v55 = v88;
    v84 = v101(v102, v99);
  }
  v103 = v146;
  if (*(_QWORD *)(v146 + 16)
    && (v84 = sub_100171DF0((uint64_t)v54), (v104 & 1) != 0)
    && (v105 = *(void **)(*(_QWORD *)(v103 + 56) + 8 * v84),
        v106 = type metadata accessor for FMDeviceAnnotation(0),
        (v84 = swift_dynamicCastClass(v105, v106)) != 0))
  {
    v107 = v84;
    v108 = (void *)FMIPLocation.location.getter(v105);
    objc_msgSend(v108, "coordinate");
    v110 = v109;
    v112 = v111;

    v114 = (void *)FMIPLocation.location.getter(v113);
    objc_msgSend(v114, "horizontalAccuracy");
    v116 = v115;

    v117 = v137;
    sub_100344F38(v41, v55, v137, v74, v85, v87, v110, v112, v116);

    sub_1000758D8(v85, v87);
  }
  else
  {
    v118 = (void *)FMIPLocation.location.getter(v84);
    objc_msgSend(v118, "coordinate");
    v120 = v119;
    v122 = v121;

    v124 = (void *)FMIPLocation.location.getter(v123);
    objc_msgSend(v124, "horizontalAccuracy");
    v126 = v125;

    v127 = (uint64_t)v142;
    (*(void (**)(char *, uint64_t, uint64_t))(v140 + 16))(v142, v41, v141);
    v128 = v136;
    sub_100007464(v55, v136, (uint64_t *)&unk_1005D3AA0);
    v129 = objc_allocWithZone((Class)type metadata accessor for FMDeviceAnnotation(0));
    v130 = v128;
    v117 = v137;
    v107 = sub_1003448E0(v127, v130, v137, (void (**)(char *, uint64_t, uint64_t))v74, v85, v87, v120, v122, v126);

  }
  sub_10004FCB8((uint64_t)v54, type metadata accessor for FMAnnotationIdentifier);
  return v107;
}

double sub_100406EC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  unint64_t v37;
  uint64_t (*v38)(char *, unint64_t, char *);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint64_t v56;
  uint8_t *v57;
  _QWORD *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, char *, char *);
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  void (*v82)(uint64_t, char *, char *);
  void *v83;
  void *v84;
  id v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(char *, char *);
  uint64_t v95;
  uint64_t v96;
  double result;
  uint64_t v98;
  void (*v99)(char *, char *, uint64_t);
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t aBlock;
  unint64_t v118[4];
  uint64_t v119;
  _QWORD *v120;
  char v121[32];

  v114 = a1;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v106 = *(_QWORD *)(v2 - 8);
  v107 = v2;
  __chkstk_darwin(v2);
  v105 = (char *)&v98 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = type metadata accessor for DispatchQoS(0);
  v103 = *(_QWORD *)(v104 - 8);
  __chkstk_darwin(v104);
  v102 = (char *)&v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100053F2C((uint64_t *)&unk_1005D3350);
  __chkstk_darwin(v5);
  v111 = (char *)&v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100053F2C(&qword_1005D3380);
  __chkstk_darwin(v7);
  v110 = (char *)&v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FMFFriend(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v108 = (char *)&v98 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v101 = (char *)&v98 - v14;
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v98 - v16;
  v18 = __chkstk_darwin(v15);
  v112 = (char *)&v98 - v19;
  v100 = v20;
  __chkstk_darwin(v18);
  v22 = (char *)&v98 - v21;
  v23 = type metadata accessor for FMSelectedSection(0);
  v24 = __chkstk_darwin(v23);
  v116 = (char *)&v98 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __chkstk_darwin(v24);
  v28 = (char *)&v98 - v27;
  __chkstk_darwin(v26);
  v30 = (char *)&v98 - v29;
  v31 = swift_allocObject(&unk_1005651B0, 24, 7);
  *(_QWORD *)(v31 + 16) = &_swiftEmptyDictionarySingleton;
  v113 = v1;
  v32 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v32, v121, 0, 0);
  sub_10004FC74(v32, (uint64_t)v30, type metadata accessor for FMSelectedSection);
  sub_10004FC74((uint64_t)v30, (uint64_t)v28, type metadata accessor for FMSelectedSection);
  v115 = v23;
  if (swift_getEnumCaseMultiPayload(v28, v23) != 2)
  {
    sub_10004FCB8((uint64_t)v28, type metadata accessor for FMSelectedSection);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v51 = type metadata accessor for Logger(0);
    sub_100056D88(v51, (uint64_t)qword_1005F5748);
    v52 = (uint64_t)v116;
    v53 = sub_10004FC74((uint64_t)v30, (uint64_t)v116, type metadata accessor for FMSelectedSection);
    v54 = Logger.logObject.getter(v53);
    v55 = static os_log_type_t.error.getter();
    v56 = v31;
    if (os_log_type_enabled(v54, v55))
    {
      v57 = (uint8_t *)swift_slowAlloc(12, -1);
      v58 = (_QWORD *)swift_slowAlloc(32, -1);
      *(_DWORD *)v57 = 136315138;
      v120 = v58;
      aBlock = 0;
      v118[0] = 0xE000000000000000;
      v109 = v30;
      _print_unlocked<A, B>(_:_:)(v52, &aBlock, v115, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v59 = v52;
      v60 = v118[0];
      aBlock = sub_100056DA0(aBlock, v118[0], (uint64_t *)&v120);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v118);
      swift_bridgeObjectRelease(v60);
      sub_10004FCB8(v59, type metadata accessor for FMSelectedSection);
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "FMMapViewDataSource: cannot fetch person value from selected section %s", v57, 0xCu);
      swift_arrayDestroy(v58, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v58, -1, -1);
      swift_slowDealloc(v57, -1, -1);

      v61 = (uint64_t)v109;
    }
    else
    {

      sub_10004FCB8(v52, type metadata accessor for FMSelectedSection);
      v61 = (uint64_t)v30;
    }
    sub_10004FCB8(v61, type metadata accessor for FMSelectedSection);
    goto LABEL_27;
  }
  v98 = v31;
  v99 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v99(v22, v28, v9);
  v33 = v114;
  v34 = *(_QWORD *)(v114 + 16);
  v35 = v10;
  v36 = (char *)v9;
  if (v34)
  {
    v116 = v22;
    v109 = v30;
    v37 = v114 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v115 = *(_QWORD *)(v10 + 72);
    v38 = *(uint64_t (**)(char *, unint64_t, char *))(v10 + 16);
    swift_bridgeObjectRetain(v114);
    while (1)
    {
      v39 = v35;
      v40 = v36;
      v41 = v38(v17, v37, v36);
      v42 = FMFFriend.identifier.getter(v41);
      v44 = v43;
      v46 = FMFFriend.identifier.getter(v42);
      v47 = v45;
      if (v42 == v46 && v44 == v45)
        break;
      v48 = _stringCompareWithSmolCheck(_:_:expecting:)(v42, v44, v46, v45, 0);
      swift_bridgeObjectRelease(v44);
      v49 = swift_bridgeObjectRelease(v47);
      if ((v48 & 1) != 0)
        goto LABEL_18;
      v35 = v39;
      v36 = v40;
      (*(void (**)(char *, char *, __n128))(v39 + 8))(v17, v40, v49);
      v37 += v115;
      if (!--v34)
      {
        v50 = 1;
        v30 = v109;
        v22 = v116;
        v33 = v114;
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRelease_n(v44, 2);
LABEL_18:
    v62 = (uint64_t)v110;
    v36 = v40;
    ((void (*)(char *, char *, char *, __n128))v99)(v110, v17, v40, v49);
    v50 = 0;
    v30 = v109;
    v35 = v39;
    v22 = v116;
    v33 = v114;
  }
  else
  {
    swift_bridgeObjectRetain(v114);
    v50 = 1;
LABEL_16:
    v62 = (uint64_t)v110;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, char *))(v35 + 56))(v62, v50, 1, v36);
  v63 = swift_bridgeObjectRelease(v33);
  v64 = (*(uint64_t (**)(uint64_t, uint64_t, char *, __n128))(v35 + 48))(v62, 1, v36, v63);
  v56 = v98;
  v65 = (uint64_t)v111;
  if (v64 == 1)
  {
    sub_1000051EC(v62, &qword_1005D3380);
LABEL_26:
    *(_BYTE *)(v113 + 58) = 0;
    sub_10003F4F8(v33);
    sub_10004FCB8((uint64_t)v30, type metadata accessor for FMSelectedSection);
    (*(void (**)(char *, char *))(v35 + 8))(v22, v36);
LABEL_27:
    v96 = v56;
    goto LABEL_28;
  }
  v66 = ((uint64_t (*)(char *, uint64_t, char *))v99)(v112, v62, v36);
  FMFFriend.location.getter(v66);
  v67 = type metadata accessor for FMFLocation(0);
  v68 = *(_QWORD *)(v67 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v65, 1, v67) == 1)
  {
    sub_1000051EC(v65, (uint64_t *)&unk_1005D3350);
LABEL_25:
    (*(void (**)(char *, char *))(v35 + 8))(v112, v36);
    goto LABEL_26;
  }
  v69 = FMFLocation.location.getter();
  (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v65, v67);
  v115 = v69;
  if (!v69)
    goto LABEL_25;
  v70 = v113;
  v111 = *(char **)(v113 + 88);
  v71 = *(void (**)(char *, char *, char *))(v35 + 16);
  v72 = v101;
  v71(v101, v112, v36);
  v71(v108, v22, v36);
  v73 = *(unsigned __int8 *)(v35 + 80);
  v114 = v35;
  v74 = (v73 + 24) & ~v73;
  v109 = v30;
  v110 = v36;
  v75 = (v100 + 7 + v74) & 0xFFFFFFFFFFFFFFF8;
  v116 = v22;
  v76 = (v75 + 15) & 0xFFFFFFFFFFFFFFF8;
  v77 = (v73 + v76 + 8) & ~v73;
  v78 = (v100 + 7 + v77) & 0xFFFFFFFFFFFFFFF8;
  v79 = swift_allocObject(&unk_1005654F8, v78 + 8, v73 | 7);
  *(_QWORD *)(v79 + 16) = v70;
  v80 = v79 + v74;
  v81 = v110;
  v82 = (void (*)(uint64_t, char *, char *))v99;
  v99((char *)v80, v72, (uint64_t)v110);
  v83 = (void *)v115;
  *(_QWORD *)(v79 + v75) = v115;
  *(_QWORD *)(v79 + v76) = v33;
  v82(v79 + v77, v108, v81);
  *(_QWORD *)(v79 + v78) = v56;
  v118[3] = (unint64_t)sub_100416290;
  v119 = v79;
  aBlock = (uint64_t)_NSConcreteStackBlock;
  v118[0] = 1107296256;
  v118[1] = (unint64_t)sub_100037DF8;
  v118[2] = (unint64_t)&unk_100565510;
  v84 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain(v33);
  swift_retain(v113);
  v85 = v83;
  v86 = swift_retain(v56);
  v87 = v102;
  static DispatchQoS.unspecified.getter(v86);
  v120 = _swiftEmptyArrayStorage;
  v88 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v89 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v90 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  v91 = v105;
  v92 = v89;
  v93 = v107;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v120, v92, v90, v107, v88);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v87, v91, v84);
  _Block_release(v84);

  (*(void (**)(char *, uint64_t))(v106 + 8))(v91, v93);
  (*(void (**)(char *, uint64_t))(v103 + 8))(v87, v104);
  v94 = *(void (**)(char *, char *))(v114 + 8);
  v94(v112, v81);
  sub_10004FCB8((uint64_t)v109, type metadata accessor for FMSelectedSection);
  v94(v116, v81);
  v95 = v119;
  swift_release(v56);
  v96 = v95;
LABEL_28:
  *(_QWORD *)&result = swift_release(v96).n128_u64[0];
  return result;
}

void sub_1004078A0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  id v36;
  uint64_t v37;
  void *v38;
  void *v39;
  double v40;
  double v41;
  double v42;
  id v43;
  double v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, uint64_t);
  uint64_t (*v50)(_QWORD, _QWORD, _QWORD);
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(_QWORD, _QWORD, _QWORD);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t (*v91)(uint64_t, uint64_t, uint64_t);
  int v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char v98;
  void (*v99)(char *, uint64_t);
  uint64_t v100;
  id v101;
  id v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _BYTE v118[32];

  v114 = a6;
  v110 = a5;
  v111 = a3;
  v107 = a4;
  v7 = type metadata accessor for FMFFriend(0);
  v115 = *(_QWORD *)(v7 - 8);
  v116 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for FMFLocationSource(0);
  v10 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v103 = (char *)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_100053F2C((uint64_t *)&unk_1005E4280);
  __chkstk_darwin(v105);
  v106 = (char *)&v100 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100053F2C((uint64_t *)&unk_1005D3350);
  v14 = __chkstk_darwin(v13);
  v109 = (char *)&v100 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v17 = (char *)&v100 - v16;
  v18 = sub_100053F2C(&qword_1005D47B8);
  v19 = __chkstk_darwin(v18);
  v104 = (uint64_t)&v100 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v19);
  v23 = (char *)&v100 - v22;
  __chkstk_darwin(v21);
  v113 = (uint64_t *)((char *)&v100 - v24);
  v25 = type metadata accessor for FMAnnotationIdentifier(0);
  v26 = __chkstk_darwin(v25);
  v28 = (uint64_t *)((char *)&v100 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29 = __chkstk_darwin(v26);
  v31 = (uint64_t *)((char *)&v100 - v30);
  *v31 = FMFFriend.identifier.getter(v29);
  v31[1] = v32;
  v112 = v25;
  swift_storeEnumTagMultiPayload(v31, v25, 0);
  v33 = *(_QWORD *)(a1 + 48);
  if (!*(_QWORD *)(v33 + 16))
    goto LABEL_7;
  swift_bridgeObjectRetain(*(_QWORD *)(a1 + 48));
  v34 = sub_100171DF0((uint64_t)v31);
  if ((v35 & 1) == 0)
  {
    swift_bridgeObjectRelease(v33);
LABEL_7:
    sub_10004FCB8((uint64_t)v31, type metadata accessor for FMAnnotationIdentifier);
LABEL_8:
    v52 = 0;
    v53 = v107;
    v54 = v116;
    goto LABEL_9;
  }
  v36 = *(id *)(*(_QWORD *)(v33 + 56) + 8 * v34);
  swift_bridgeObjectRelease(v33);
  sub_10004FCB8((uint64_t)v31, type metadata accessor for FMAnnotationIdentifier);
  v37 = type metadata accessor for FMPersonAnnotation(0);
  v38 = (void *)swift_dynamicCastClass(v36, v37);
  if (!v38)
  {

    goto LABEL_8;
  }
  v39 = v38;
  v102 = v36;
  objc_msgSend(v38, "coordinate");
  v41 = v40;
  objc_msgSend(v39, "coordinate");
  v101 = objc_msgSend(objc_allocWithZone((Class)CLLocation), "initWithLatitude:longitude:", v41, v42);
  v43 = objc_msgSend(v101, "distanceFromLocation:", v111);
  v45 = v44;
  FMFFriend.location.getter(v43);
  v46 = type metadata accessor for FMFLocation(0);
  v47 = *(_QWORD *)(v46 - 8);
  v48 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48))(v17, 1, v46);
  if ((_DWORD)v48 == 1)
  {
    sub_1000051EC((uint64_t)v17, (uint64_t *)&unk_1005D3350);
    v49 = *(void (**)(uint64_t (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, uint64_t))(v10 + 56);
    v50 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v113;
    v51 = 1;
  }
  else
  {
    v87 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v113;
    FMFLocation.locationSource.getter(v48);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v17, v46);
    v49 = *(void (**)(uint64_t (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, uint64_t))(v10 + 56);
    v50 = v87;
    v51 = 0;
  }
  v88 = v108;
  v49(v50, v51, 1, v108);
  v89 = (uint64_t)v106;
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v23, enum case for FMFLocationSource.secureLive(_:), v88);
  v49((uint64_t (*)(_QWORD, _QWORD, _QWORD))v23, 0, 1, v88);
  v90 = v89 + *(int *)(v105 + 48);
  sub_100007464((uint64_t)v113, v89, &qword_1005D47B8);
  sub_100007464((uint64_t)v23, v90, &qword_1005D47B8);
  v108 = v10;
  v91 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (v91(v89, 1, v88) == 1)
  {
    sub_1000051EC((uint64_t)v23, &qword_1005D47B8);
    sub_1000051EC((uint64_t)v113, &qword_1005D47B8);
    v92 = v91(v90, 1, v88);
    v93 = v102;
    if (v92 == 1)
    {
      sub_1000051EC(v89, &qword_1005D47B8);
      goto LABEL_32;
    }
    goto LABEL_30;
  }
  v94 = v104;
  sub_100007464(v89, v104, &qword_1005D47B8);
  if (v91(v90, 1, v88) == 1)
  {
    sub_1000051EC((uint64_t)v23, &qword_1005D47B8);
    sub_1000051EC((uint64_t)v113, &qword_1005D47B8);
    (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v94, v88);
    v93 = v102;
LABEL_30:
    sub_1000051EC(v89, (uint64_t *)&unk_1005E4280);
LABEL_36:

    v54 = v116;
LABEL_37:
    v52 = 0;
    goto LABEL_38;
  }
  v95 = v108;
  v96 = v103;
  (*(void (**)(char *, uint64_t, uint64_t))(v108 + 32))(v103, v90, v88);
  v97 = sub_100008000((unint64_t *)&unk_1005E4290, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocationSource, (uint64_t)&protocol conformance descriptor for FMFLocationSource);
  v98 = dispatch thunk of static Equatable.== infix(_:_:)(v94, v96, v88, v97);
  v99 = *(void (**)(char *, uint64_t))(v95 + 8);
  v99(v96, v88);
  sub_1000051EC((uint64_t)v23, &qword_1005D47B8);
  sub_1000051EC((uint64_t)v113, &qword_1005D47B8);
  v99((char *)v94, v88);
  sub_1000051EC(v89, &qword_1005D47B8);
  v93 = v102;
  if ((v98 & 1) == 0)
    goto LABEL_36;
LABEL_32:
  if (qword_1005D1F30 != -1)
    swift_once(&qword_1005D1F30, sub_10005F428);

  v54 = v116;
  if (v45 >= 50000.0)
    goto LABEL_37;
  v52 = 1;
LABEL_38:
  v53 = v107;
LABEL_9:
  v55 = (_QWORD *)(v114 + 16);
  *(_BYTE *)(a1 + 57) = v52;
  *(_BYTE *)(a1 + 58) = 1;
  v56 = *(_QWORD *)(v53 + 16);
  if (v56)
  {
    v57 = v53 + ((*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80));
    v58 = *(_QWORD *)(v115 + 72);
    v113 = *(_QWORD **)(v115 + 16);
    v114 = v58;
    swift_bridgeObjectRetain(v53);
    while (1)
    {
      v65 = ((uint64_t (*)(char *, uint64_t, uint64_t))v113)(v9, v57, v54);
      v66 = FMFFriend.identifier.getter(v65);
      v68 = v67;
      v70 = FMFFriend.identifier.getter(v66);
      v71 = v69;
      if (v66 == v70 && v68 == v69)
      {
        v59 = swift_bridgeObjectRelease_n(v68, 2);
      }
      else
      {
        v72 = _stringCompareWithSmolCheck(_:_:expecting:)(v66, v68, v70, v69, 0);
        swift_bridgeObjectRelease(v68);
        swift_bridgeObjectRelease(v71);
        if ((v72 & 1) == 0)
        {
          v73 = a1;
          v74 = (uint64_t)v109;
          FMFFriend.location.getter(v59);
          v75 = type metadata accessor for FMFLocation(0);
          v76 = *(_QWORD *)(v75 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75) == 1)
          {
            sub_1000051EC(v74, (uint64_t *)&unk_1005D3350);
            a1 = v73;
          }
          else
          {
            v77 = FMFLocation.location.getter();
            v78 = v74;
            v79 = (void *)v77;
            v80 = (*(uint64_t (**)(uint64_t, uint64_t))(v76 + 8))(v78, v75);
            a1 = v73;
            if (v79)
            {
              *v28 = FMFFriend.identifier.getter(v80);
              v28[1] = v81;
              swift_storeEnumTagMultiPayload(v28, v112, 0);
              v82 = *(_QWORD *)(v73 + 48);
              swift_bridgeObjectRetain(v82);
              v108 = sub_100408204((uint64_t)v9, v79, v82);
              swift_bridgeObjectRelease(v82);
              swift_beginAccess(v55, v118, 33, 0);
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v55);
              v117 = *v55;
              *v55 = 0x8000000000000000;
              sub_10017A884(v108, (uint64_t)v28, isUniquelyReferenced_nonNull_native);
              v84 = *v55;
              *v55 = v117;
              swift_bridgeObjectRelease(v84);
              sub_10004FCB8((uint64_t)v28, type metadata accessor for FMAnnotationIdentifier);
              swift_endAccess(v118);

            }
          }
          goto LABEL_13;
        }
      }
      *v28 = FMFFriend.identifier.getter(v59);
      v28[1] = v60;
      swift_storeEnumTagMultiPayload(v28, v112, 0);
      v61 = *(_QWORD *)(a1 + 48);
      swift_bridgeObjectRetain(v61);
      v62 = sub_100408204((uint64_t)v9, v111, v61);
      swift_bridgeObjectRelease(v61);
      swift_beginAccess(v55, v118, 33, 0);
      v63 = swift_isUniquelyReferenced_nonNull_native(*v55);
      v117 = *v55;
      *v55 = 0x8000000000000000;
      sub_10017A884(v62, (uint64_t)v28, v63);
      v64 = *v55;
      *v55 = v117;
      swift_bridgeObjectRelease(v64);
      sub_10004FCB8((uint64_t)v28, type metadata accessor for FMAnnotationIdentifier);
      swift_endAccess(v118);
LABEL_13:
      v54 = v116;
      (*(void (**)(char *, uint64_t))(v115 + 8))(v9, v116);
      v57 += v114;
      if (!--v56)
      {
        swift_bridgeObjectRelease(v107);
        break;
      }
    }
  }
  swift_beginAccess(v55, v118, 0, 0);
  v85 = *v55;
  v86 = swift_bridgeObjectRetain(v85);
  sub_100038120(v86, (uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(v85);
}

uint64_t sub_100408204(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v41;

  v7 = sub_100053F2C(&qword_1005D3380);
  __chkstk_darwin(v7);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FMAnnotationIdentifier(0);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v3 + 16) + 48) + 64);
  swift_retain(v13);
  v14 = sub_10005848C(a1, 0);
  swift_release(v13);
  *v12 = FMFFriend.identifier.getter(v15);
  v12[1] = v16;
  swift_storeEnumTagMultiPayload(v12, v10, 0);
  if (!*(_QWORD *)(a3 + 16) || (v17 = sub_100171DF0((uint64_t)v12), (v18 & 1) == 0))
  {
    sub_10004FCB8((uint64_t)v12, type metadata accessor for FMAnnotationIdentifier);
LABEL_6:
    objc_msgSend(a2, "coordinate");
    v32 = v31;
    v34 = v33;
    objc_msgSend(a2, "horizontalAccuracy");
    v36 = v35;
    v37 = type metadata accessor for FMFFriend(0);
    v38 = *(_QWORD *)(v37 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v9, a1, v37);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v9, 0, 1, v37);
    v39 = objc_allocWithZone((Class)type metadata accessor for FMPersonAnnotation(0));
    v22 = sub_1002CD584((uint64_t)v9, v14, 0, v32, v34, v36);

    return v22;
  }
  v19 = *(id *)(*(_QWORD *)(a3 + 56) + 8 * v17);
  sub_10004FCB8((uint64_t)v12, type metadata accessor for FMAnnotationIdentifier);
  v20 = type metadata accessor for FMPersonAnnotation(0);
  v21 = swift_dynamicCastClass(v19, v20);
  if (!v21)
  {

    goto LABEL_6;
  }
  v22 = v21;
  objc_msgSend(a2, "coordinate");
  v24 = v23;
  v26 = v25;
  objc_msgSend(a2, "horizontalAccuracy");
  v28 = v27;
  v29 = type metadata accessor for FMFFriend(0);
  v30 = *(_QWORD *)(v29 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v9, a1, v29);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v9, 0, 1, v29);
  sub_1002CC2F8((uint64_t)v9, v14, 0, v24, v26, v28);

  sub_1000051EC((uint64_t)v9, &qword_1005D3380);
  return v22;
}

double sub_1004084B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  char *v31;
  uint8_t *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  double result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  void **aBlock;
  uint64_t v46;
  uint64_t (*v47)(uint64_t);
  void *v48;
  void *v49;
  uint64_t v50;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v42 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for DispatchQoS(0);
  v43 = *(_QWORD *)(v41 - 8);
  __chkstk_darwin(v41);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = swift_allocObject(&unk_1005651B0, 24, 7);
  *(_QWORD *)(v9 + 16) = &_swiftEmptyDictionarySingleton;
  v10 = swift_allocObject(&unk_100565408, 24, 7);
  *(_QWORD *)(v10 + 16) = &_swiftEmptyDictionarySingleton;
  v11 = objc_msgSend(*(id *)(v1 + 40), "traitCollection");
  v12 = objc_msgSend(v11, "userInterfaceStyle");

  v13 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 24);
  v14 = swift_retain(v13);
  LOBYTE(v11) = FMIPManager.isInitialized.getter(v14);
  swift_release(v13);
  if ((v11 & 1) != 0)
  {
    v15 = swift_allocObject(&unk_100565458, 56, 7);
    *(_QWORD *)(v15 + 16) = a1;
    *(_QWORD *)(v15 + 24) = v2;
    *(_BYTE *)(v15 + 32) = v12 == (id)2;
    *(_QWORD *)(v15 + 40) = v9;
    *(_QWORD *)(v15 + 48) = v10;
    v49 = sub_1004161A4;
    v50 = v15;
    aBlock = _NSConcreteStackBlock;
    v46 = 1107296256;
    v47 = sub_100037DF8;
    v48 = &unk_100565470;
    v16 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain(a1);
    swift_retain(v2);
    swift_retain(v9);
    v17 = swift_retain(v10);
    static DispatchQoS.unspecified.getter(v17);
    v44 = _swiftEmptyArrayStorage;
    v18 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v19 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
    v20 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v44, v19, v20, v4, v18);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v6, v16);
    _Block_release(v16);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v6, v4);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v8, v41);
    v21 = v50;
    swift_release(v9);
    v22 = v10;
  }
  else
  {
    v39 = v10;
    v40 = v9;
    v23 = v8;
    v24 = v4;
    v26 = v41;
    v25 = v42;
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v27 = type metadata accessor for Logger(0);
    v28 = sub_100056D88(v27, (uint64_t)qword_1005F5748);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.error.getter();
    v31 = v23;
    if (os_log_type_enabled(v29, v30))
    {
      v32 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "FMMapViewDataSource: devicesProvider is not initialized hidding items", v32, 2u);
      swift_slowDealloc(v32, -1, -1);
    }

    v49 = sub_100415BE8;
    v50 = v2;
    aBlock = _NSConcreteStackBlock;
    v46 = 1107296256;
    v47 = sub_100037DF8;
    v48 = &unk_100565420;
    v33 = _Block_copy(&aBlock);
    v34 = swift_retain(v2);
    static DispatchQoS.unspecified.getter(v34);
    v44 = _swiftEmptyArrayStorage;
    v35 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v36 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
    v37 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v44, v36, v37, v24, v35);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v31, v6, v33);
    _Block_release(v33);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v24);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v31, v26);
    v21 = v50;
    swift_release(v40);
    v22 = v39;
  }
  swift_release(v22);
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

void sub_100408968(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char v41;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v43;
  _QWORD *v44;
  void (*v45)(_QWORD *);
  _QWORD *v46;
  char *v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  _QWORD *v54;
  char *v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(uint64_t);
  _QWORD *v65;
  uint64_t v66;
  uint64_t *v67;
  _QWORD *v68;
  id v69;
  char v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  BOOL v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(uint64_t);
  uint64_t v85;
  uint64_t v86;
  objc_class *v87;
  id v88;
  uint64_t v89;
  void *v90;
  void *v91;
  unint64_t v92;
  char v93;
  id v94;
  uint64_t v95;
  void *v96;
  char *v97;
  uint64_t v98;
  void *v99;
  id v100;
  char *v101;
  const void *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  int v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t (*v124)(char *, uint64_t, uint64_t, __n128);
  uint64_t v125;
  uint64_t *v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t aBlock[5];
  uint64_t v132;
  uint64_t v133;
  _QWORD v134[2];

  v128 = a2;
  v119 = type metadata accessor for DispatchQoS(0);
  v118 = *(_QWORD *)(v119 - 8);
  __chkstk_darwin(v119);
  v117 = (char *)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = type metadata accessor for DispatchWorkItemFlags(0);
  v115 = *(_QWORD *)(v116 - 8);
  __chkstk_darwin(v116);
  v114 = (char *)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = type metadata accessor for FMAnnotationIdentifier(0);
  v11 = __chkstk_darwin(v130);
  v120 = (char *)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v126 = (uint64_t *)((char *)&v109 - v13);
  v14 = sub_100053F2C((uint64_t *)&unk_1005D6700);
  __chkstk_darwin(v14);
  v16 = (char *)&v109 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = type metadata accessor for FMIPLocation(0);
  v122 = *(_QWORD *)(v111 - 8);
  __chkstk_darwin(v111);
  v121 = (char *)&v109 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = type metadata accessor for FMIPItem(0);
  __chkstk_darwin(v123);
  v20 = (char *)&v109 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = (_QWORD *)(a4 + 16);
  v21 = (_QWORD *)(a5 + 16);
  v22 = *(_QWORD *)(a1 + 16);
  if (v22)
  {
    v110 = v21;
    v23 = a1 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    v24 = *(_QWORD *)(v18 + 72);
    v129 = v18;
    v124 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v18 + 16);
    v125 = v24;
    v109 = a1;
    v25 = swift_bridgeObjectRetain(a1);
    v112 = a3 & 1;
    v26 = v111;
    v27 = v122;
    v28 = (uint64_t)v121;
    v29 = v123;
    v113 = v16;
    do
    {
      v30 = v124(v20, v23, v29, v25);
      FMIPItem.groupIdentifier.getter(v30);
      v32 = v31;
      v33 = swift_bridgeObjectRelease(v31);
      if (v32)
      {
        (*(void (**)(char *, uint64_t))(v129 + 8))(v20, v29);
      }
      else
      {
        FMIPItem.location.getter(v33);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v16, 1, v26) == 1)
        {
          v29 = v123;
          (*(void (**)(char *, uint64_t))(v129 + 8))(v20, v123);
          sub_1000051EC((uint64_t)v16, (uint64_t *)&unk_1005D6700);
        }
        else
        {
          (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v28, v16, v26);
          v34 = *(_QWORD *)(v128 + 48);
          swift_bridgeObjectRetain(v34);
          v35 = (char *)sub_10040A908((uint64_t)v20, v28, v34, v112);
          swift_bridgeObjectRelease(v34);
          v37 = *(_QWORD *)&v35[OBJC_IVAR____TtC6FindMy12FMAnnotation_fmClusterIdentifier + 8];
          if (v37)
          {
            v38 = *(_QWORD *)&v35[OBJC_IVAR____TtC6FindMy12FMAnnotation_fmClusterIdentifier];
            v39 = v110;
            swift_beginAccess(v110, aBlock, 32, 0);
            v40 = *(_QWORD *)(*v39 + 16);
            sub_1000758C4(v38, v37);
            if (!v40 || (sub_100171E48(v38, v37), (v41 & 1) == 0))
            {
              swift_endAccess(aBlock);
              swift_beginAccess(v39, aBlock, 33, 0);
              sub_1000758C4(v38, v37);
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v39);
              v134[0] = *v39;
              *v39 = 0x8000000000000000;
              sub_10017A724((uint64_t)_swiftEmptyArrayStorage, v38, v37, isUniquelyReferenced_nonNull_native);
              v43 = *v39;
              *v39 = v134[0];
              swift_bridgeObjectRelease(v43);
              sub_1000758D8(v38, v37);
            }
            swift_endAccess(aBlock);
            swift_beginAccess(v39, v134, 33, 0);
            sub_1000758C4(v38, v37);
            v45 = sub_1003FED8C(aBlock, v38, v37);
            if (*v44)
            {
              v46 = v44;
              v47 = v35;
              specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v47);
              v49 = *(_QWORD *)((*v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
              v48 = *(_QWORD *)((*v46 & 0xFFFFFFFFFFFFFF8) + 0x18);
              if (v49 >= v48 >> 1)
                specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v48 > 1, v49 + 1, 1);
              v50 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v49, v47);
              specialized Array._endMutation()(v50);
              ((void (*)(uint64_t *, _QWORD))v45)(aBlock, 0);
              swift_endAccess(v134);
              sub_1000758D8(v38, v37);

              sub_1000758D8(v38, v37);
            }
            else
            {
              ((void (*)(uint64_t *, _QWORD))v45)(aBlock, 0);
              swift_endAccess(v134);
              sub_1000758D8(v38, v37);
              sub_1000758D8(v38, v37);

            }
            v27 = v122;
            v28 = (uint64_t)v121;
            v26 = v111;
            (*(void (**)(char *, uint64_t))(v122 + 8))(v121, v111);
          }
          else
          {
            v51 = FMIPItem.identifier.getter(v36);
            v52 = v126;
            *v126 = v51;
            v52[1] = v53;
            swift_storeEnumTagMultiPayload(v52, v130, 1);
            v54 = v127;
            swift_beginAccess(v127, aBlock, 33, 0);
            v55 = v35;
            v56 = swift_isUniquelyReferenced_nonNull_native(*v54);
            v134[0] = *v54;
            *v54 = 0x8000000000000000;
            sub_10017A884((uint64_t)v55, (uint64_t)v52, v56);
            v57 = *v54;
            *v54 = v134[0];
            swift_bridgeObjectRelease(v57);
            sub_10004FCB8((uint64_t)v52, type metadata accessor for FMAnnotationIdentifier);
            swift_endAccess(aBlock);

            v27 = v122;
            v28 = (uint64_t)v121;
            (*(void (**)(char *, uint64_t))(v122 + 8))(v121, v26);
          }
          v29 = v123;
          (*(void (**)(char *, uint64_t))(v129 + 8))(v20, v123);
          v16 = v113;
        }
      }
      v23 += v125;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease(v109);
    v21 = v110;
  }
  swift_beginAccess(v21, v134, 0, 0);
  v58 = *v21;
  v59 = *(_QWORD *)(*v21 + 64);
  v123 = *v21 + 64;
  v60 = 1 << *(_BYTE *)(v58 + 32);
  v61 = -1;
  if (v60 < 64)
    v61 = ~(-1 << v60);
  v62 = v61 & v59;
  v124 = (uint64_t (*)(char *, uint64_t, uint64_t, __n128))((unint64_t)(v60 + 63) >> 6);
  v125 = v58;
  swift_bridgeObjectRetain(v58);
  v63 = 0;
  v64 = type metadata accessor for FMAnnotationIdentifier;
  v65 = v120;
  while (v62)
  {
    v72 = __clz(__rbit64(v62));
    v62 &= v62 - 1;
    v129 = v63;
    v73 = v72 | (v63 << 6);
LABEL_39:
    v78 = *(_QWORD *)(v125 + 56);
    v79 = (uint64_t *)(*(_QWORD *)(v125 + 48) + 16 * v73);
    v81 = *v79;
    v80 = v79[1];
    v82 = *(_QWORD *)(v78 + 8 * v73);
    if (v82 < 0 || (v82 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain_n(*(_QWORD *)(v78 + 8 * v73), 2);
      sub_1000758C4(v81, v80);
      v83 = (uint64_t)sub_1003EFB10(v82);
      swift_bridgeObjectRelease(v82);
    }
    else
    {
      v83 = v82 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(*(_QWORD *)(v78 + 8 * v73), 2);
      sub_1000758C4(v81, v80);
    }
    v84 = v64;
    aBlock[0] = v83;
    sub_10040FC80(aBlock);
    sub_1000758D8(v81, v80);
    swift_bridgeObjectRelease(v82);
    v85 = aBlock[0];
    v86 = *(_QWORD *)(v128 + 48);
    v87 = (objc_class *)type metadata accessor for FMClusterAnnotation();
    v88 = objc_allocWithZone(v87);
    swift_bridgeObjectRetain(v86);
    v89 = swift_retain(v85);
    sub_100353488(v89);
    v91 = v90;
    *(&v109 - 2) = __chkstk_darwin(v90);
    OS_dispatch_queue.sync<A>(execute:)(v65, sub_1003540D8, &v109 - 4, v130);
    if (*(_QWORD *)(v86 + 16) && (v92 = sub_100171DF0((uint64_t)v65), (v93 & 1) != 0))
    {
      v94 = *(id *)(*(_QWORD *)(v86 + 56) + 8 * v92);
      sub_10004FCB8((uint64_t)v65, v64);
      v95 = swift_dynamicCastClass(v94, v87);
      if (v95)
      {
        v96 = (void *)v95;
        v121 = *(char **)(v95 + OBJC_IVAR____TtC6FindMy19FMClusterAnnotation_updateQueue);
        v97 = v114;
        static DispatchWorkItemFlags.barrier.getter(v95);
        v98 = swift_allocObject(&unk_1005654A8, 32, 7);
        *(_QWORD *)(v98 + 16) = v85;
        *(_QWORD *)(v98 + 24) = v96;
        aBlock[4] = (uint64_t)sub_100353E54;
        v132 = v98;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_100037DF8;
        aBlock[3] = (uint64_t)&unk_1005654C0;
        v99 = _Block_copy(aBlock);
        swift_retain(v85);
        v100 = v94;
        v122 = v62;
        v101 = v117;
        static DispatchQoS.unspecified.getter(v100);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v101, v97, v99);
        v102 = v99;
        v64 = v84;
        _Block_release(v102);
        v103 = v101;
        v62 = v122;
        (*(void (**)(char *, uint64_t))(v118 + 8))(v103, v119);
        v104 = v97;
        v65 = v120;
        (*(void (**)(char *, uint64_t))(v115 + 8))(v104, v116);
        v105 = v132;
        swift_bridgeObjectRelease(v86);
        swift_release(v85);

        swift_release(v105);
        v91 = v96;
      }
      else
      {
        swift_bridgeObjectRelease(v86);
        swift_release(v85);

      }
    }
    else
    {
      sub_10004FCB8((uint64_t)v65, v64);
      swift_bridgeObjectRelease(v86);
      swift_release(v85);
    }
    __chkstk_darwin(v66);
    *(&v109 - 2) = (uint64_t)v91;
    v67 = v126;
    OS_dispatch_queue.sync<A>(execute:)(v126, sub_1003540D8, &v109 - 4, v130);
    v68 = v127;
    swift_beginAccess(v127, aBlock, 33, 0);
    v69 = v91;
    v70 = swift_isUniquelyReferenced_nonNull_native(*v68);
    v133 = *v68;
    *v68 = 0x8000000000000000;
    sub_10017A884((uint64_t)v69, (uint64_t)v67, v70);
    v71 = *v68;
    *v68 = v133;
    swift_bridgeObjectRelease(v71);
    sub_10004FCB8((uint64_t)v67, v64);
    swift_endAccess(aBlock);

    v63 = v129;
  }
  v74 = __OFADD__(v63, 1);
  v75 = v63 + 1;
  if (v74)
  {
    __break(1u);
    goto LABEL_54;
  }
  if (v75 >= (uint64_t)v124)
    goto LABEL_52;
  v76 = *(_QWORD *)(v123 + 8 * v75);
  if (v76)
  {
LABEL_38:
    v62 = (v76 - 1) & v76;
    v129 = v75;
    v73 = __clz(__rbit64(v76)) + (v75 << 6);
    goto LABEL_39;
  }
  v77 = v75 + 1;
  if (v75 + 1 >= (uint64_t)v124)
    goto LABEL_52;
  v76 = *(_QWORD *)(v123 + 8 * v77);
  if (v76)
    goto LABEL_37;
  v77 = v75 + 2;
  if (v75 + 2 >= (uint64_t)v124)
    goto LABEL_52;
  v76 = *(_QWORD *)(v123 + 8 * v77);
  if (v76)
    goto LABEL_37;
  v77 = v75 + 3;
  if (v75 + 3 >= (uint64_t)v124)
  {
LABEL_52:
    swift_release(v125);
    v106 = v127;
    swift_beginAccess(v127, aBlock, 0, 0);
    v107 = *v106;
    swift_bridgeObjectRetain(v107);
    sub_100038120(v108, (uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease(v107);
    return;
  }
  v76 = *(_QWORD *)(v123 + 8 * v77);
  if (v76)
  {
LABEL_37:
    v75 = v77;
    goto LABEL_38;
  }
  while (1)
  {
    v75 = v77 + 1;
    if (__OFADD__(v77, 1))
      break;
    if (v75 >= (uint64_t)v124)
      goto LABEL_52;
    v76 = *(_QWORD *)(v123 + 8 * v75);
    ++v77;
    if (v76)
      goto LABEL_38;
  }
LABEL_54:
  __break(1u);
  swift_release(aBlock[0]);
  __break(1u);
}

double sub_1004094FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  _QWORD *v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t (*v40)(char *, unint64_t, uint64_t, __n128);
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  double result;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  __n128 v84;
  char *v85;
  uint64_t v86;
  char *v87;
  __n128 v88;
  void (*v89)(char *, char *, uint64_t, __n128);
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(uint64_t, char *, uint64_t);
  uint64_t v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  void (*v114)(char *, uint64_t);
  uint64_t v115;
  uint64_t v116;
  id v117;
  uint64_t v118;
  void (*v119)(char *, char *, uint64_t);
  char *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  char *v135;
  uint64_t v136;
  char *v137;
  _QWORD *v138;
  uint64_t v139;
  char *v140;
  _QWORD *v141;
  _QWORD aBlock[5];
  uint64_t v143;
  char v144[8];

  v139 = a1;
  v130 = type metadata accessor for DispatchWorkItemFlags(0);
  v129 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  v128 = (char *)&v115 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = type metadata accessor for DispatchQoS(0);
  v126 = *(_QWORD *)(v127 - 8);
  __chkstk_darwin(v127);
  v125 = (char *)&v115 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100053F2C((uint64_t *)&unk_1005D53A0);
  __chkstk_darwin(v4);
  v123 = (char *)&v115 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = type metadata accessor for UUID(0);
  v124 = *(_QWORD *)(v132 - 8);
  __chkstk_darwin(v132);
  v122 = (char *)&v115 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100053F2C((uint64_t *)&unk_1005D6700);
  __chkstk_darwin(v7);
  v135 = (char *)&v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  __chkstk_darwin(v9);
  v134 = (char *)&v115 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = type metadata accessor for FMIPItem(0);
  v138 = *(_QWORD **)(v136 - 8);
  v11 = v138[8];
  v12 = __chkstk_darwin(v136);
  v131 = (char *)&v115 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v12);
  v133 = (char *)&v115 - v14;
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v115 - v16;
  v18 = __chkstk_darwin(v15);
  v137 = (char *)&v115 - v19;
  __chkstk_darwin(v18);
  v21 = (char *)&v115 - v20;
  v22 = type metadata accessor for FMSelectedSection(0);
  v23 = __chkstk_darwin(v22);
  v25 = (char *)&v115 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v27 = (char *)&v115 - v26;
  v28 = *(_QWORD *)(v1 + 16);
  v29 = *(_QWORD *)(v28 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v29, v144, 0, 0);
  sub_10004FC74(v29, (uint64_t)v27, type metadata accessor for FMSelectedSection);
  v30 = objc_msgSend(*(id *)(v1 + 40), "traitCollection");
  v31 = objc_msgSend(v30, "userInterfaceStyle");

  sub_10004FC74((uint64_t)v27, (uint64_t)v25, type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload(v25, v22) - 3 >= 2)
  {
    sub_10004FCB8((uint64_t)v27, type metadata accessor for FMSelectedSection);
    sub_10004FCB8((uint64_t)v25, type metadata accessor for FMSelectedSection);
    return result;
  }
  v116 = v28;
  v117 = v31;
  v118 = v11;
  v120 = v27;
  v121 = v1;
  v32 = v138;
  v33 = (void (*)(char *, char *, uint64_t))v138[4];
  v34 = v136;
  v33(v21, v25, v136);
  v35 = v139;
  v36 = *(_QWORD *)(v139 + 16);
  v140 = v21;
  if (v36)
  {
    v119 = v33;
    v37 = v139 + ((*((unsigned __int8 *)v32 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v32 + 80));
    v38 = v32[9];
    v39 = v32;
    v40 = (uint64_t (*)(char *, unint64_t, uint64_t, __n128))v32[2];
    v41 = swift_bridgeObjectRetain(v139);
    while (1)
    {
      v42 = v34;
      v43 = v40(v17, v37, v34, v41);
      v44 = FMIPItem.identifier.getter(v43);
      v46 = v45;
      v48 = FMIPItem.identifier.getter(v44);
      v49 = v47;
      if (v44 == v48 && v46 == v47)
        break;
      v50 = _stringCompareWithSmolCheck(_:_:expecting:)(v44, v46, v48, v47, 0);
      swift_bridgeObjectRelease(v46);
      v51 = swift_bridgeObjectRelease(v49);
      v34 = v42;
      if ((v50 & 1) != 0)
        goto LABEL_13;
      ((void (*)(char *, uint64_t, __n128))v39[1])(v17, v42, v51);
      v37 += v38;
      if (!--v36)
      {
        v52 = 1;
        v53 = v121;
        v35 = v139;
        v21 = v140;
        v32 = v39;
        v54 = v137;
        v33 = v119;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease_n(v46, 2);
    v34 = v42;
LABEL_13:
    v56 = (uint64_t)v134;
    v33 = v119;
    ((void (*)(char *, char *, uint64_t, __n128))v119)(v134, v17, v34, v51);
    v52 = 0;
    v53 = v121;
    v35 = v139;
    v21 = v140;
    v32 = v39;
    v54 = v137;
    v57 = (uint64_t)v135;
  }
  else
  {
    swift_bridgeObjectRetain(v139);
    v52 = 1;
    v53 = v121;
    v54 = v137;
LABEL_11:
    v56 = (uint64_t)v134;
    v57 = (uint64_t)v135;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v32[7])(v56, v52, 1, v34);
  v58 = swift_bridgeObjectRelease(v35);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v32[6])(v56, 1, v34, v58) == 1)
  {
    v59 = v34;
    sub_1000051EC(v56, (uint64_t *)&unk_1005D3AA0);
LABEL_18:
    *(_BYTE *)(v53 + 58) = 0;
    sub_1004084B4(v35);
    sub_10004FCB8((uint64_t)v120, type metadata accessor for FMSelectedSection);
    ((void (*)(char *, uint64_t))v32[1])(v21, v59);
    return result;
  }
  v60.n128_f64[0] = ((double (*)(char *, uint64_t, uint64_t))v33)(v54, v56, v34);
  v61 = v34;
  FMIPItem.location.getter(v60);
  v62 = type metadata accessor for FMIPLocation(0);
  v63 = v33;
  v64 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 48))(v57, 1, v62);
  sub_1000051EC(v57, (uint64_t *)&unk_1005D6700);
  if (v64 == 1)
  {
    v59 = v34;
    ((void (*)(char *, uint64_t))v32[1])(v54, v34);
    v21 = v140;
    goto LABEL_18;
  }
  v119 = v63;
  *(_BYTE *)(v53 + 58) = 1;
  v65 = v116;
  v66 = *(_QWORD *)(v116 + 48);
  v67 = swift_retain(v66);
  v68 = FMIPItem.identifier.getter(v67);
  v70 = v69;
  v71 = (uint64_t)v123;
  UUID.init(uuidString:)(v68, v69, v72);
  v73 = swift_bridgeObjectRelease(v70);
  v74 = v124;
  v75 = v132;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v124 + 48))(v71, 1, v132, v73) == 1)
  {
    sub_1000051EC(v71, (uint64_t *)&unk_1005D53A0);
    v76 = (char *)_swiftEmptyArrayStorage;
  }
  else
  {
    v77 = v122;
    v78 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v74 + 32))(v122, v71, v75);
    v79 = v74;
    v80 = *(_QWORD *)(*(_QWORD *)(v65 + 24) + 64);
    __chkstk_darwin(v78);
    *(&v115 - 2) = (uint64_t)v77;
    swift_bridgeObjectRetain(v80);
    v81 = sub_1003DBDB4(sub_1000D0498, (uint64_t)(&v115 - 4), v80);
    swift_retain(v66);
    v82 = sub_1000CD14C(v81, v66);
    swift_bridgeObjectRelease(v81);
    swift_release(v66);
    v83 = sub_1000CD3A8((uint64_t)v82);
    swift_bridgeObjectRelease(v82);
    v76 = (char *)sub_1003EF2B8(v83);
    v84 = swift_bridgeObjectRelease(v83);
    (*(void (**)(char *, uint64_t, __n128))(v79 + 8))(v77, v132, v84);
  }
  v85 = v131;
  v86 = v118;
  v87 = v133;
  v134 = v76;
  LODWORD(v135) = v117 == (id)2;
  v88 = swift_release(v66);
  v136 = *(_QWORD *)(v53 + 88);
  v89 = (void (*)(char *, char *, uint64_t, __n128))v138[2];
  v90 = v138;
  v89(v87, v54, v61, v88);
  ((void (*)(char *, char *, uint64_t))v89)(v85, v140, v61);
  v91 = *((unsigned __int8 *)v90 + 80);
  v92 = (v91 + 16) & ~v91;
  v93 = v86 + v92 + 7;
  v94 = v86;
  v95 = v53;
  v96 = v93 & 0xFFFFFFFFFFFFFFF8;
  v97 = ((v93 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v98 = (v97 + 15) & 0xFFFFFFFFFFFFFFF8;
  v99 = (v91 + v98 + 8) & ~v91;
  v100 = v99 + v94;
  v101 = swift_allocObject(&unk_1005653B8, v99 + v94 + 1, v91 | 7);
  v102 = v101 + v92;
  v103 = (void (*)(uint64_t, char *, uint64_t))v119;
  v119((char *)v102, v133, v61);
  *(_QWORD *)(v101 + v96) = v134;
  *(_QWORD *)(v101 + v97) = v95;
  v104 = v101 + v99;
  v105 = v139;
  *(_QWORD *)(v101 + v98) = v139;
  v103(v104, v85, v61);
  *(_BYTE *)(v101 + v100) = (_BYTE)v135;
  aBlock[4] = sub_1004160F8;
  v143 = v101;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_1005653D0;
  v106 = _Block_copy(aBlock);
  swift_bridgeObjectRetain(v105);
  v107 = swift_retain(v95);
  v108 = v125;
  static DispatchQoS.unspecified.getter(v107);
  v141 = _swiftEmptyArrayStorage;
  v109 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v110 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v111 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  v112 = v128;
  v113 = v130;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v141, v110, v111, v130, v109);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v108, v112, v106);
  _Block_release(v106);
  (*(void (**)(char *, uint64_t))(v129 + 8))(v112, v113);
  (*(void (**)(char *, uint64_t))(v126 + 8))(v108, v127);
  v114 = (void (*)(char *, uint64_t))v138[1];
  v114(v137, v61);
  sub_10004FCB8((uint64_t)v120, type metadata accessor for FMSelectedSection);
  v114(v140, v61);
  *(_QWORD *)&result = swift_release(v143).n128_u64[0];
  return result;
}

void sub_100409F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  __n128 v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  __n128 v50;
  double v51;
  id v52;
  double v53;
  double v54;
  double v55;
  double v56;
  id v57;
  double v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  _QWORD *v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  char v97;
  uint64_t v98;
  void (*v99)(uint64_t, uint64_t);
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  void *v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  char *v121;
  id v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t (*v136)(char *, uint64_t, uint64_t);
  uint64_t v137;
  uint64_t (*v138)(char *, uint64_t, uint64_t, __n128);
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  void *v142;
  char *v143;
  void *v144;

  v128 = a6;
  v135 = a5;
  v118 = a4;
  v8 = type metadata accessor for FMIPLocation(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v117 = (char *)&v116 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v123 = (char *)&v116 - v12;
  v129 = type metadata accessor for FMIPItem(0);
  v13 = *(_QWORD *)(v129 - 8);
  __chkstk_darwin(v129);
  v15 = (char *)&v116 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = type metadata accessor for FMAnnotationIdentifier(0);
  __chkstk_darwin(v134);
  v133 = (uint64_t *)((char *)&v116 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = sub_100053F2C(&qword_1005E3AB0);
  __chkstk_darwin(v17);
  v119 = (char *)&v116 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = type metadata accessor for FMIPRangingParameters(0);
  v125 = *(_QWORD *)(v126 - 8);
  __chkstk_darwin(v126);
  v124 = (char *)&v116 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100053F2C((uint64_t *)&unk_1005D3350);
  __chkstk_darwin(v20);
  v22 = (char *)&v116 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = type metadata accessor for FMFFriend(0);
  v141 = *(_QWORD **)(v127 - 8);
  __chkstk_darwin(v127);
  v143 = (char *)&v116 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100053F2C((uint64_t *)&unk_1005D6700);
  v25 = __chkstk_darwin(v24);
  v120 = (char *)&v116 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v25);
  v132 = (char *)&v116 - v28;
  __chkstk_darwin(v27);
  v30 = (char *)&v116 - v29;
  FMIPItem.location.getter(v31);
  v136 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  v32 = v136(v30, 1, v8);
  v137 = v8;
  v130 = v13;
  v131 = v9;
  v140 = a3;
  if ((_DWORD)v32 == 1)
  {
    sub_1000051EC((uint64_t)v30, (uint64_t *)&unk_1005D6700);
    v142 = &_swiftEmptyDictionarySingleton;
    goto LABEL_19;
  }
  v33 = (void *)FMIPLocation.location.getter(v32);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v30, v8);
  v34 = *(_QWORD *)(a2 + 16);
  if (v34)
  {
    v122 = v33;
    v35 = a2 + ((*((unsigned __int8 *)v141 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v141 + 80));
    v36 = v141[9];
    v138 = (uint64_t (*)(char *, uint64_t, uint64_t, __n128))v141[2];
    v139 = v36;
    v116 = a2;
    v37 = swift_bridgeObjectRetain(a2);
    v142 = &_swiftEmptyDictionarySingleton;
    v38 = (uint64_t)v119;
    v39 = v127;
    v121 = v22;
    while (1)
    {
      v40 = v138(v143, v35, v39, v37);
      FMFFriend.location.getter(v40);
      v41 = type metadata accessor for FMFLocation(0);
      v42 = *(_QWORD *)(v41 - 8);
      v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48))(v22, 1, v41);
      if ((_DWORD)v43 == 1)
      {
        sub_1000051EC((uint64_t)v22, (uint64_t *)&unk_1005D3350);
      }
      else
      {
        v44 = (void *)FMFLocation.location.getter(v43);
        (*(void (**)(char *, uint64_t))(v42 + 8))(v22, v41);
        if (v44)
        {
          v45 = *(_QWORD *)(*(_QWORD *)(v140 + 16) + 24);
          v46 = swift_retain(v45);
          FMIPManager.rangingParameters.getter(v46);
          v47 = v125;
          v48 = v126;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v125 + 48))(v38, 1, v126) == 1)
          {
            v49 = v124;
            FMIPRangingParameters.init()();
            sub_1000051EC(v38, &qword_1005E3AB0);
          }
          else
          {
            v49 = v124;
            (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v124, v38, v48);
          }
          v22 = v121;
          v50 = swift_release(v45);
          v51 = FMIPRangingParameters.inBTRangeDistanceInMeters.getter(v50);
          (*(void (**)(char *, uint64_t))(v47 + 8))(v49, v48);
          v52 = v122;
          objc_msgSend(v44, "distanceFromLocation:", v122);
          v54 = v53;
          objc_msgSend(v44, "horizontalAccuracy");
          v56 = v55;
          v57 = objc_msgSend(v52, "horizontalAccuracy");
          if (v54 / sqrt(v51 * v51 + v56 * v56 + v58 * v58) >= 1.5)
          {
            v39 = v127;
            ((void (*)(char *, uint64_t))v141[1])(v143, v127);

          }
          else
          {
            v59 = (uint64_t)v143;
            v60 = FMFFriend.identifier.getter(v57);
            v61 = (uint64_t)v133;
            *v133 = v60;
            *(_QWORD *)(v61 + 8) = v62;
            swift_storeEnumTagMultiPayload(v61, v134, 0);
            v63 = *(_QWORD *)(v140 + 48);
            swift_bridgeObjectRetain(v63);
            v64 = sub_100408204(v59, v44, v63);
            swift_bridgeObjectRelease(v63);
            v65 = v142;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v142);
            v144 = v65;
            sub_10017A884(v64, v61, isUniquelyReferenced_nonNull_native);
            v142 = v144;
            swift_bridgeObjectRelease(0x8000000000000000);
            v38 = (uint64_t)v119;
            sub_10004FCB8(v61, type metadata accessor for FMAnnotationIdentifier);

            v39 = v127;
            ((void (*)(char *, uint64_t))v141[1])(v143, v127);
          }
          goto LABEL_7;
        }
      }
      ((void (*)(char *, uint64_t))v141[1])(v143, v39);
LABEL_7:
      v35 += v139;
      if (!--v34)
      {

        swift_bridgeObjectRelease(v116);
        goto LABEL_18;
      }
    }
  }

  v142 = &_swiftEmptyDictionarySingleton;
LABEL_18:
  v13 = v130;
LABEL_19:
  v67 = *(_QWORD *)(v118 + 16);
  v68 = v129;
  v69 = v132;
  if (v67)
  {
    v70 = v118 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v71 = *(char **)(v13 + 72);
    v72 = *(_QWORD **)(v13 + 16);
    v73 = swift_bridgeObjectRetain(v118);
    v143 = v71;
    v141 = v72;
    while (1)
    {
      v74 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v72)(v15, v70, v68, v73);
      FMIPItem.groupIdentifier.getter(v74);
      v76 = v75;
      swift_bridgeObjectRelease(v75);
      if (!v76)
        break;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v68);
LABEL_22:
      v70 += (uint64_t)v71;
      if (!--v67)
      {
        swift_bridgeObjectRelease(v118);
        goto LABEL_38;
      }
    }
    v78 = FMIPItem.identifier.getter(v77);
    v80 = v79;
    v82 = FMIPItem.identifier.getter(v78);
    v83 = v81;
    if (v78 == v82 && v80 == v81)
    {
      swift_bridgeObjectRelease_n(v80, 2);
    }
    else
    {
      v85 = _stringCompareWithSmolCheck(_:_:expecting:)(v78, v80, v82, v81, 0);
      swift_bridgeObjectRelease(v80);
      v84 = swift_bridgeObjectRelease(v83);
      if ((v85 & 1) == 0)
      {
        v101 = v120;
        FMIPItem.location.getter(v84);
        v102 = v137;
        if (v136(v101, 1, v137) == 1)
        {
          (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v68);
          v87 = (uint64_t)v101;
          goto LABEL_33;
        }
        v103 = (uint64_t)v117;
        (*(void (**)(char *, char *, uint64_t))(v131 + 32))(v117, v101, v102);
        v104 = *(_QWORD *)(v140 + 48);
        swift_bridgeObjectRetain(v104);
        v105 = (void *)sub_10040A908((uint64_t)v15, v103, v104, v128 & 1);
        swift_bridgeObjectRelease(v104);
        v107 = FMIPItem.identifier.getter(v106);
        v108 = (uint64_t)v133;
        *v133 = v107;
        *(_QWORD *)(v108 + 8) = v109;
        swift_storeEnumTagMultiPayload(v108, v134, 1);
        v110 = v105;
        v111 = v142;
        v112 = swift_isUniquelyReferenced_nonNull_native(v142);
        v144 = v111;
        sub_10017A884((uint64_t)v110, v108, v112);
        v142 = v144;
        swift_bridgeObjectRelease(0x8000000000000000);
        v113 = v108;
        v69 = v132;
        sub_10004FCB8(v113, type metadata accessor for FMAnnotationIdentifier);

        v114 = v103;
        v13 = v130;
        (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v114, v102);
LABEL_35:
        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v68);
        goto LABEL_36;
      }
    }
    FMIPItem.location.getter(v84);
    v86 = v137;
    if (v136(v69, 1, v137) == 1)
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v68);
      v87 = (uint64_t)v69;
LABEL_33:
      sub_1000051EC(v87, (uint64_t *)&unk_1005D6700);
LABEL_36:
      v71 = v143;
      v72 = v141;
      goto LABEL_22;
    }
    v88 = v131;
    v89 = (uint64_t)v123;
    v90 = (*(uint64_t (**)(char *, char *, uint64_t))(v131 + 32))(v123, v69, v86);
    v91 = FMIPItem.identifier.getter(v90);
    v92 = (uint64_t)v133;
    *v133 = v91;
    *(_QWORD *)(v92 + 8) = v93;
    swift_storeEnumTagMultiPayload(v92, v134, 1);
    v94 = *(_QWORD *)(v140 + 48);
    swift_bridgeObjectRetain(v94);
    v95 = sub_10040A908((uint64_t)v15, v89, v94, v128 & 1);
    swift_bridgeObjectRelease(v94);
    v96 = v142;
    v97 = swift_isUniquelyReferenced_nonNull_native(v142);
    v144 = v96;
    sub_10017A884(v95, v92, v97);
    v142 = v144;
    swift_bridgeObjectRelease(0x8000000000000000);
    v98 = v92;
    v69 = v132;
    sub_10004FCB8(v98, type metadata accessor for FMAnnotationIdentifier);
    v99 = *(void (**)(uint64_t, uint64_t))(v88 + 8);
    v100 = v89;
    v68 = v129;
    v13 = v130;
    v99(v100, v86);
    goto LABEL_35;
  }
LABEL_38:
  v115 = v142;
  sub_100038120((uint64_t)v142, (uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease(v115);
}

uint64_t sub_10040A908(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  double v35;
  double v36;
  double v37;
  double v38;
  uint64_t v39;
  void *v40;
  double v41;
  double v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  void *v47;
  double v48;
  double v49;
  double v50;
  double v51;
  uint64_t v52;
  void *v53;
  double v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  void *v70;

  v68 = a4;
  v69 = a3;
  v66 = a2;
  v6 = type metadata accessor for FMIPItem(0);
  v63 = *(_QWORD *)(v6 - 8);
  v64 = v6;
  __chkstk_darwin(v6);
  v65 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FMAnnotationIdentifier(0);
  __chkstk_darwin(v8);
  v10 = (uint64_t *)((char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = type metadata accessor for FMIPItemImageCacheRequest(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FMIPItemImageSize(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = v4;
  v19 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 16) + 24) + 40);
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v18, enum case for FMIPItemImageSize.infobox(_:), v15);
  swift_retain(v19);
  sub_100188734((uint64_t)v18, v68, (uint64_t)v14);
  dispatch thunk of FMImageCache.cachedImage(for:completion:)(&v70, v14, 0, 0);
  v20 = *(void (**)(char *, uint64_t))(v12 + 8);
  v21 = a1;
  v20(v14, v11);
  v22 = swift_release(v19);
  v23 = v15;
  v24 = v69;
  v25 = v70;
  v26 = (*(uint64_t (**)(char *, uint64_t, __n128))(v16 + 8))(v18, v23, v22);
  *v10 = FMIPItem.identifier.getter(v26);
  v10[1] = v27;
  swift_storeEnumTagMultiPayload(v10, v8, 1);
  if (!*(_QWORD *)(v24 + 16) || (v28 = sub_100171DF0((uint64_t)v10), (v29 & 1) == 0))
  {
    v46 = sub_10004FCB8((uint64_t)v10, type metadata accessor for FMAnnotationIdentifier);
LABEL_6:
    v47 = (void *)FMIPLocation.location.getter(v46);
    objc_msgSend(v47, "coordinate");
    v49 = v48;
    v51 = v50;

    v53 = (void *)FMIPLocation.location.getter(v52);
    objc_msgSend(v53, "horizontalAccuracy");
    v55 = v54;

    v56 = (uint64_t)v65;
    (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v65, a1, v64);
    v57 = sub_10040AC94(a1);
    v59 = v58;
    v60 = objc_allocWithZone((Class)type metadata accessor for FMItemAnnotation(0));
    sub_100151298(v56, v25, v57, v59, v49, v51, v55);
    v33 = v61;
    goto LABEL_7;
  }
  v30 = *(id *)(*(_QWORD *)(v24 + 56) + 8 * v28);
  sub_10004FCB8((uint64_t)v10, type metadata accessor for FMAnnotationIdentifier);
  v31 = type metadata accessor for FMItemAnnotation(0);
  v32 = swift_dynamicCastClass(v30, v31);
  if (!v32)
  {

    goto LABEL_6;
  }
  v33 = v32;
  v34 = (void *)FMIPLocation.location.getter(v32);
  objc_msgSend(v34, "coordinate");
  v36 = v35;
  v38 = v37;

  v40 = (void *)FMIPLocation.location.getter(v39);
  objc_msgSend(v40, "horizontalAccuracy");
  v42 = v41;

  v43 = sub_10040AC94(a1);
  v45 = v44;
  sub_1001515E0(v21, v25, v43, v44, v36, v38, v42);
  sub_1000758D8(v43, v45);
LABEL_7:

  return v33;
}

uint64_t sub_10040AC94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _BYTE *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  __n128 v36;
  uint64_t v37;
  int v38;
  int v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t (*v45)(char *, unint64_t, uint64_t);
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  void (*v63)(_BYTE *, uint64_t);
  _BYTE v64[4];
  int v65;
  _BYTE *v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  _BYTE *v71;
  _BYTE *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(char *, unint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _BYTE *v80;
  uint64_t v81;
  _BYTE *v82;
  char v83[32];

  v81 = a1;
  v2 = type metadata accessor for FMIPItemState(0);
  v68 = *(_QWORD *)(v2 - 8);
  v69 = v2;
  v3 = __chkstk_darwin(v2);
  v67 = &v64[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  v66 = &v64[-v5];
  v6 = type metadata accessor for FMIPItem(0);
  v73 = *(_QWORD *)(v6 - 8);
  v74 = v6;
  __chkstk_darwin(v6);
  v72 = &v64[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v78 = type metadata accessor for FMIPSafeLocationType(0);
  v76 = *(_QWORD *)(v78 - 8);
  __chkstk_darwin(v78);
  v75 = (uint64_t (*)(char *, unint64_t, uint64_t))&v64[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_100053F2C((uint64_t *)&unk_1005E2270);
  __chkstk_darwin(v9);
  v80 = &v64[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v79 = type metadata accessor for FMIPSafeLocation(0);
  v77 = *(_QWORD *)(v79 - 8);
  __chkstk_darwin(v79);
  v71 = &v64[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = sub_100053F2C((uint64_t *)&unk_1005D6700);
  v13 = __chkstk_darwin(v12);
  v15 = &v64[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  v17 = &v64[-v16];
  v18 = type metadata accessor for FMIPLocation(0);
  v19 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v82 = &v64[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = type metadata accessor for FMSelectedSection(0);
  v22 = __chkstk_darwin(v21);
  v24 = &v64[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v22);
  v26 = &v64[-v25];
  v70 = *(unsigned __int8 *)(v1 + 56);
  v27 = *(_QWORD **)(v1 + 16);
  v28 = v27[7] + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v28, v83, 0, 0);
  sub_10004FC74(v28, (uint64_t)v26, type metadata accessor for FMSelectedSection);
  sub_10004FC74((uint64_t)v26, (uint64_t)v24, type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload(v24, v21) == 5)
  {
    v29 = (_QWORD *)*v24;
    v30 = sub_1000758D8(v24[1], v24[2]);
    v31 = v81;
    v32 = FMIPItem.identifier.getter(v30);
    v34 = v33;
    v35 = sub_10006BA18(v32, v33, v29);
    swift_bridgeObjectRelease(v34);
    sub_10004FCB8((uint64_t)v26, type metadata accessor for FMSelectedSection);
    v36 = swift_bridgeObjectRelease(v29);
  }
  else
  {
    sub_10004FCB8((uint64_t)v26, type metadata accessor for FMSelectedSection);
    sub_10004FCB8((uint64_t)v24, type metadata accessor for FMSelectedSection);
    v35 = 0;
    v31 = v81;
  }
  v37 = v27[5];
  v38 = *(unsigned __int8 *)(v37 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_isLocationAuthorized);
  LODWORD(v81) = *(unsigned __int8 *)(v37 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_limitedPrecision);
  FMIPItem.location.getter(v36);
  v39 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18);
  v40 = v82;
  if (v39 == 1)
  {
    sub_1000051EC((uint64_t)v17, (uint64_t *)&unk_1005D6700);
    if ((v35 & 1) != 0)
      return 0;
LABEL_9:
    if (((v38 ^ 1 | v81) & 1) != 0)
    {
      v51 = v72;
      v50 = v73;
      v52 = v74;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v73 + 16))(v72, v31, v74);
    }
    else
    {
      v51 = v72;
      v50 = v73;
      v52 = v74;
      v55 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v73 + 16))(v72, v31, v74);
      if (v70 != 1)
      {
        v57 = v66;
        v58 = FMIPItem.state.getter(v55);
        v59 = v67;
        static FMIPItemState.isBTConnected.getter(v58);
        v60 = sub_100008000((unint64_t *)&qword_1005E2280, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItemState, (uint64_t)&protocol conformance descriptor for FMIPItemState);
        v61 = v69;
        v62 = dispatch thunk of SetAlgebra.isSuperset(of:)(v59, v69, v60);
        v63 = *(void (**)(_BYTE *, uint64_t))(v68 + 8);
        v63(v59, v61);
        v63(v57, v61);
        (*(void (**)(_BYTE *, uint64_t))(v50 + 8))(v51, v52);
        if ((v62 & 1) != 0)
          return 0;
        return 0;
      }
    }
    (*(void (**)(_BYTE *, uint64_t))(v50 + 8))(v51, v52);
    return 0;
  }
  v65 = v38;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v19 + 32))(v82, v17, v18);
  v42 = v27[3];
  v43 = v40;
  v45 = v75;
  v44 = v76;
  v46 = v78;
  (*(void (**)(uint64_t (*)(char *, unint64_t, uint64_t), _QWORD, uint64_t))(v76 + 104))(v75, enum case for FMIPSafeLocationType.home(_:), v78);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v19 + 16))(v15, v43, v18);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v15, 0, 1, v18);
  swift_retain(v42);
  v47 = v80;
  sub_1000BD948(v45, (uint64_t)v15, (uint64_t)v80);
  swift_release(v42);
  sub_1000051EC((uint64_t)v15, (uint64_t *)&unk_1005D6700);
  (*(void (**)(uint64_t (*)(char *, unint64_t, uint64_t), uint64_t))(v44 + 8))(v45, v46);
  v48 = v77;
  v49 = v79;
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v77 + 48))(v47, 1, v79) != 1)
  {
    v53 = v71;
    v54 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v48 + 32))(v71, v47, v49);
    v41 = FMIPSafeLocation.identifier.getter(v54);
    (*(void (**)(_BYTE *, uint64_t))(v48 + 8))(v53, v49);
    (*(void (**)(_BYTE *, uint64_t))(v19 + 8))(v82, v18);
    return v41;
  }
  (*(void (**)(_BYTE *, uint64_t))(v19 + 8))(v82, v18);
  sub_1000051EC((uint64_t)v47, (uint64_t *)&unk_1005E2270);
  v38 = v65;
  if ((v35 & 1) == 0)
    goto LABEL_9;
  return 0;
}

uint64_t sub_10040B2C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  __n128 v33;
  int v34;
  int v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(char *, unint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  char *v53;
  uint64_t v54;
  uint64_t v55;
  _DWORD v57[2];
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t (*v65)(char *, unint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char v72[24];

  v59 = a2;
  v3 = type metadata accessor for FMIPDeviceState(0);
  v62 = *(_QWORD *)(v3 - 8);
  v63 = v3;
  v4 = __chkstk_darwin(v3);
  v61 = (char *)v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v60 = (char *)v57 - v6;
  v68 = type metadata accessor for FMIPSafeLocationType(0);
  v66 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v65 = (uint64_t (*)(char *, unint64_t, uint64_t))((char *)v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_100053F2C((uint64_t *)&unk_1005E2270);
  __chkstk_darwin(v8);
  v70 = (uint64_t)v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = type metadata accessor for FMIPSafeLocation(0);
  v67 = *(_QWORD *)(v69 - 8);
  __chkstk_darwin(v69);
  v58 = (char *)v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100053F2C((uint64_t *)&unk_1005D6700);
  v12 = __chkstk_darwin(v11);
  v64 = (char *)v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v15 = (char *)v57 - v14;
  v16 = type metadata accessor for FMIPLocation(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v71 = (char *)v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for FMSelectedSection(0);
  v20 = __chkstk_darwin(v19);
  v22 = (_QWORD *)((char *)v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v20);
  v24 = (char *)v57 - v23;
  v25 = *(_QWORD **)(v2 + 16);
  v26 = v25[7] + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v26, v72, 0, 0);
  sub_10004FC74(v26, (uint64_t)v24, type metadata accessor for FMSelectedSection);
  sub_10004FC74((uint64_t)v24, (uint64_t)v22, type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload(v22, v19) == 5)
  {
    v27 = (_QWORD *)*v22;
    v28 = sub_1000758D8(v22[1], v22[2]);
    v29 = FMIPItem.identifier.getter(v28);
    v31 = v30;
    v32 = sub_10006BA18(v29, v30, v27);
    swift_bridgeObjectRelease(v31);
    sub_10004FCB8((uint64_t)v24, type metadata accessor for FMSelectedSection);
    v33 = swift_bridgeObjectRelease(v27);
  }
  else
  {
    sub_10004FCB8((uint64_t)v24, type metadata accessor for FMSelectedSection);
    sub_10004FCB8((uint64_t)v22, type metadata accessor for FMSelectedSection);
    v32 = 0;
  }
  v34 = *(unsigned __int8 *)(v25[5] + OBJC_IVAR____TtC6FindMy18FMLocationProvider_limitedPrecision);
  FMIPItem.location.getter(v33);
  v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  v36 = v71;
  if (v35 != 1)
  {
    v57[1] = v34;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v71, v15, v16);
    v39 = v25[3];
    v41 = v65;
    v40 = v66;
    v42 = v68;
    (*(void (**)(uint64_t (*)(char *, unint64_t, uint64_t), _QWORD, uint64_t))(v66 + 104))(v65, enum case for FMIPSafeLocationType.home(_:), v68);
    v43 = (uint64_t)v64;
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v64, v36, v16);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v43, 0, 1, v16);
    swift_retain(v39);
    v44 = v70;
    sub_1000BD948(v41, v43, v70);
    swift_release(v39);
    sub_1000051EC(v43, (uint64_t *)&unk_1005D6700);
    (*(void (**)(uint64_t (*)(char *, unint64_t, uint64_t), uint64_t))(v40 + 8))(v41, v42);
    v45 = v67;
    v46 = v69;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v44, 1, v69) != 1)
    {
      v53 = v58;
      v54 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 32))(v58, v44, v46);
      v55 = v45;
      v38 = FMIPSafeLocation.identifier.getter(v54);
      (*(void (**)(char *, uint64_t))(v55 + 8))(v53, v46);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v36, v16);
      return v38;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v36, v16);
    v37 = sub_1000051EC(v44, (uint64_t *)&unk_1005E2270);
    if ((v32 & 1) != 0)
      return 0;
LABEL_9:
    v47 = v60;
    v48 = FMIPDevice.state.getter(v37);
    v49 = v61;
    static FMIPDeviceState.isThisDevice.getter(v48);
    v50 = sub_100008000((unint64_t *)&qword_1005D4158, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPDeviceState, (uint64_t)&protocol conformance descriptor for FMIPDeviceState);
    v51 = v63;
    dispatch thunk of SetAlgebra.isSuperset(of:)(v49, v63, v50);
    v52 = *(void (**)(char *, uint64_t))(v62 + 8);
    v52(v49, v51);
    v52(v47, v51);
    return 0;
  }
  v37 = sub_1000051EC((uint64_t)v15, (uint64_t *)&unk_1005D6700);
  if ((v32 & 1) == 0)
    goto LABEL_9;
  return 0;
}

uint64_t sub_10040B80C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, unint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  uint64_t v40;
  char *v42;
  int v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;

  v3 = type metadata accessor for FMIPDeviceState(0);
  v47 = *(_QWORD *)(v3 - 8);
  v48 = v3;
  v4 = __chkstk_darwin(v3);
  v46 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v45 = (char *)&v42 - v6;
  v51 = type metadata accessor for FMIPSafeLocationType(0);
  v49 = *(_QWORD *)(v51 - 8);
  __chkstk_darwin(v51);
  v8 = (uint64_t (*)(char *, unint64_t, uint64_t))((char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_100053F2C((uint64_t *)&unk_1005E2270);
  __chkstk_darwin(v9);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for FMIPSafeLocation(0);
  v50 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v42 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100053F2C((uint64_t *)&unk_1005D6700);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v42 - v17;
  v19 = type metadata accessor for FMIPLocation(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_10040F6FC();
  v23 = *(_QWORD *)(v1 + 16);
  v43 = *(unsigned __int8 *)(*(_QWORD *)(v23 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_limitedPrecision);
  v44 = a1;
  FMIPDevice.bestLocation.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    v24 = (uint64_t *)&unk_1005D6700;
    v25 = (uint64_t)v18;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
    v26 = *(_QWORD *)(v23 + 24);
    v27 = v49;
    v28 = v51;
    (*(void (**)(uint64_t (*)(char *, unint64_t, uint64_t), _QWORD, uint64_t))(v49 + 104))(v8, enum case for FMIPSafeLocationType.home(_:), v51);
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v16, v22, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v16, 0, 1, v19);
    swift_retain(v26);
    sub_1000BD948(v8, (uint64_t)v16, (uint64_t)v11);
    swift_release(v26);
    sub_1000051EC((uint64_t)v16, (uint64_t *)&unk_1005D6700);
    (*(void (**)(uint64_t (*)(char *, unint64_t, uint64_t), uint64_t))(v27 + 8))(v8, v28);
    v29 = v50;
    v30 = v52;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v11, 1, v52) != 1)
    {
      v39 = v42;
      v40 = (*(uint64_t (**)(char *, char *, uint64_t))(v29 + 32))(v42, v11, v30);
      v32 = FMIPSafeLocation.identifier.getter(v40);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v39, v30);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
      return v32;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    v24 = (uint64_t *)&unk_1005E2270;
    v25 = (uint64_t)v11;
  }
  v31 = sub_1000051EC(v25, v24);
  if ((v53 & 1) == 0)
  {
    v33 = v45;
    v34 = FMIPDevice.state.getter(v31);
    v35 = v46;
    static FMIPDeviceState.isThisDevice.getter(v34);
    v36 = sub_100008000((unint64_t *)&qword_1005D4158, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPDeviceState, (uint64_t)&protocol conformance descriptor for FMIPDeviceState);
    v37 = v48;
    dispatch thunk of SetAlgebra.isSuperset(of:)(v35, v48, v36);
    v38 = *(void (**)(char *, uint64_t))(v47 + 8);
    v38(v35, v37);
    v38(v33, v37);
  }
  return 0;
}

double sub_10040BC24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double result;
  uint64_t v18;
  _QWORD *v19;
  _QWORD aBlock[5];
  uint64_t v21;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(v1 + 88);
  v11 = swift_allocObject(&unk_1005652F0, 32, 7);
  *(_QWORD *)(v11 + 16) = v1;
  *(_QWORD *)(v11 + 24) = a1;
  aBlock[4] = sub_100415DAC;
  v21 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_100565308;
  v12 = _Block_copy(aBlock);
  swift_retain(v1);
  swift_bridgeObjectRetain(a1);
  static DispatchQoS.unspecified.getter(v13);
  v19 = _swiftEmptyArrayStorage;
  v14 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v15 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v16 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v19, v15, v16, v3, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

double sub_10040BE1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  double result;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v4 = sub_100053F2C(&qword_1005E41D8);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100053F2C(&qword_1005E41E0);
  v29 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 24)
                  + OBJC_IVAR____TtC6FindMy17FMDevicesProvider_unknownItemsDetectedNearYou);
  swift_bridgeObjectRetain(v11);
  v13 = sub_1001E4520(v12);
  swift_bridgeObjectRelease(v11);
  v14 = sub_1000CEF8C((uint64_t)v13);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRetain(a2);
  v16 = sub_100414F54(v15, v14);
  swift_bridgeObjectRelease(a2);
  swift_bridgeObjectRelease(v14);
  swift_retain(a1);
  v17 = sub_100414858((uint64_t)v16, a1);
  swift_bridgeObjectRelease(v16);
  swift_release(a1);
  if (v17[2])
  {
    v30 = v17;
    v18 = sub_100053F2C(&qword_1005E41E8);
    v19 = sub_100053F2C(&qword_1005E41F0);
    v20 = sub_10003F774(&qword_1005E41F8, &qword_1005E41E8, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v21 = sub_10003F774(&qword_1005E4200, &qword_1005E41F0, (uint64_t)&protocol conformance descriptor for [A]);
    Publishers.MergeMany.init<A>(_:)(&v30, v18, v19, v20, v21);
    v22 = sub_10003F774(&qword_1005E4208, &qword_1005E41D8, (uint64_t)&protocol conformance descriptor for Publishers.MergeMany<A>);
    Publisher.collect()(v4, v22);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v23 = sub_10003F774((unint64_t *)&unk_1005E4210, &qword_1005E41E0, (uint64_t)&protocol conformance descriptor for Publishers.Collect<A>);
    swift_retain(a1);
    v24 = Publisher<>.sink(receiveValue:)(sub_100415DB4, a1, v8, v23);
    v25 = swift_release(a1);
    (*(void (**)(char *, uint64_t, __n128))(v29 + 8))(v10, v8, v25);
    v26 = *(_QWORD *)(a1 + 96);
    *(_QWORD *)(a1 + 96) = v24;
    *(_QWORD *)&result = swift_release(v26).n128_u64[0];
  }
  else
  {
    swift_bridgeObjectRelease(v17);
    v28 = sub_10011E2A8((uint64_t)_swiftEmptyArrayStorage);
    sub_100038120(v28, (uint64_t)_swiftEmptyArrayStorage);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v28).n128_u64[0];
  }
  return result;
}

double sub_10040C0DC(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  _QWORD aBlock[5];
  uint64_t v42;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Date(0);
  v34 = *(_QWORD *)(v12 - 8);
  v35 = v12;
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  Date.init()(v13);
  v39 = v15;
  if (v16 < 0 || (v16 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain(v16);
    v17 = (uint64_t)sub_1003EFB34(v30);
    swift_bridgeObjectRelease(v16);
  }
  else
  {
    v17 = v16 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v16);
  }
  aBlock[0] = v17;
  sub_10040FCF8((uint64_t (*)(void **, void **))sub_100415DBC);
  v18 = aBlock[0];
  v37 = v8;
  v38 = v5;
  v36 = v9;
  if ((aBlock[0] & 0x8000000000000000) != 0 || (aBlock[0] & 0x4000000000000000) != 0)
  {
    v31 = type metadata accessor for FMAnnotation();
    swift_bridgeObjectRetain(v18);
    v20 = _bridgeCocoaArray<A>(_:)(v32, v31);
    swift_release(v18);
  }
  else
  {
    swift_bridgeObjectRetain(aBlock[0]);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v19);
    type metadata accessor for FMAnnotation();
    v20 = v18;
  }
  swift_release(v18);
  v21 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain(v21);
  v22 = sub_100415DD8(v20, v21);
  swift_bridgeObjectRelease(v20);
  swift_bridgeObjectRelease(v21);
  v23 = swift_allocObject(&unk_100565340, 32, 7);
  *(_QWORD *)(v23 + 16) = a2;
  *(_QWORD *)(v23 + 24) = v22;
  aBlock[4] = sub_100415F2C;
  v42 = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_100565358;
  v24 = _Block_copy(aBlock);
  swift_retain(a2);
  v25 = v22;
  static DispatchQoS.unspecified.getter(v25);
  v40 = _swiftEmptyArrayStorage;
  v26 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v27 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v28 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v40, v27, v28, v4, v26);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v24);
  _Block_release(v24);

  (*(void (**)(char *, uint64_t))(v38 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v37);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v35);
  *(_QWORD *)&result = swift_release(v42).n128_u64[0];
  return result;
}

uint64_t sub_10040C414(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double (*v41)(char *, uint64_t, uint64_t);
  __n128 v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t, uint64_t);
  __n128 v50;
  uint64_t (*v51)(char *, uint64_t, uint64_t, __n128);
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v55;
  uint64_t v56;
  void *v57;
  id v58;
  char *v59;
  char *v60;
  unsigned int v61;
  void (*v62)(uint64_t, char *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  void *v79;
  id v80;
  char *v81;
  void (*v82)(char *, uint64_t, uint64_t);
  unsigned int (*v83)(uint64_t, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t (*v88)(char *, uint64_t, uint64_t);
  uint64_t v89;
  void (*v90)(char *, uint64_t);
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  void (*v98)(uint64_t, uint64_t);
  void (*v100)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v101)(char *, uint64_t, uint64_t);
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t (*v113)(uint64_t, uint64_t, uint64_t, __n128);
  void (*v114)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(char *, uint64_t);
  double (*v122)(char *, uint64_t, uint64_t);
  uint64_t v123;
  char v124[24];
  char v125[32];
  uint64_t v126;

  v123 = a3;
  v118 = type metadata accessor for UUID(0);
  v112 = *(_QWORD *)(v118 - 8);
  v5 = __chkstk_darwin(v118);
  v117 = (char *)&v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v111 = (char *)&v100 - v7;
  v8 = type metadata accessor for FMIPUnknownItem(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v116 = (char *)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v115 = (char *)&v100 - v13;
  v14 = __chkstk_darwin(v12);
  v104 = (char *)&v100 - v15;
  __chkstk_darwin(v14);
  v17 = (char *)&v100 - v16;
  v18 = sub_100053F2C((uint64_t *)&unk_1005D6700);
  v19 = __chkstk_darwin(v18);
  v106 = (char *)&v100 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v22 = (char *)&v100 - v21;
  v23 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  v24 = __chkstk_darwin(v23);
  v109 = (char *)&v100 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v27 = (char *)&v100 - v26;
  v28 = type metadata accessor for Date(0);
  v126 = *(_QWORD *)(v28 - 8);
  v29 = __chkstk_darwin(v28);
  v108 = (char *)&v100 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __chkstk_darwin(v29);
  v110 = (char *)&v100 - v32;
  v33 = __chkstk_darwin(v31);
  v35 = (char *)&v100 - v34;
  v36 = __chkstk_darwin(v33);
  v105 = (char *)&v100 - v37;
  __chkstk_darwin(v36);
  v119 = (uint64_t)&v100 - v38;
  v39 = *a1;
  v102 = *a2;
  v40 = v39 + OBJC_IVAR____TtC6FindMy23FMUnknownItemAnnotation_item;
  swift_beginAccess(v39 + OBJC_IVAR____TtC6FindMy23FMUnknownItemAnnotation_item, v125, 0, 0);
  v41 = *(double (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v107 = v40;
  v122 = v41;
  v42.n128_f64[0] = v41(v17, v40, v8);
  v43 = FMIPUnknownItem.locations.getter(v42);
  v44 = *(void (**)(char *, uint64_t))(v9 + 8);
  v120 = v8;
  v121 = v44;
  v44(v17, v8);
  v45 = *(_QWORD *)(v43 + 16);
  v46 = type metadata accessor for FMIPLocation(0);
  v47 = *(_QWORD *)(v46 - 8);
  if (v45)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v47 + 16))(v22, v43 + ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80)), v46);
    v48 = 0;
  }
  else
  {
    v48 = 1;
  }
  v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56);
  v49(v22, v48, 1, v46);
  v50 = swift_bridgeObjectRelease(v43);
  v51 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v47 + 48);
  v52 = v51(v22, 1, v46, v50);
  v113 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))v51;
  v114 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v49;
  if ((_DWORD)v52 == 1)
  {
    sub_1000051EC((uint64_t)v22, (uint64_t *)&unk_1005D6700);
    v53 = v126;
    v54 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v126 + 56);
    v55 = v27;
    v56 = 1;
  }
  else
  {
    v57 = (void *)FMIPLocation.location.getter(v52);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v22, v46);
    v58 = objc_msgSend(v57, "timestamp");

    v59 = v105;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v58);

    v53 = v126;
    (*(void (**)(char *, char *, uint64_t))(v126 + 32))(v27, v59, v28);
    v54 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56);
    v55 = v27;
    v56 = 0;
  }
  v100 = v54;
  v54((uint64_t)v55, v56, 1, v28);
  v60 = v104;
  v104 = *(char **)(v53 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v104)(v35, v123, v28);
  v101 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
  v61 = v101(v27, 1, v28);
  v103 = v28;
  if (v61 == 1)
  {
    v62 = *(void (**)(uint64_t, char *, uint64_t))(v53 + 32);
    v62(v119, v35, v28);
    sub_1000051EC((uint64_t)v27, (uint64_t *)&unk_1005D3320);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v53 + 8))(v35, v28);
    v62 = *(void (**)(uint64_t, char *, uint64_t))(v53 + 32);
    v62(v119, v27, v28);
  }
  v63 = (uint64_t)v109;
  v64 = (uint64_t)v106;
  v65 = v102 + OBJC_IVAR____TtC6FindMy23FMUnknownItemAnnotation_item;
  swift_beginAccess(v102 + OBJC_IVAR____TtC6FindMy23FMUnknownItemAnnotation_item, v124, 0, 0);
  v66 = v65;
  v67 = v120;
  v68.n128_f64[0] = v122(v60, v65, v120);
  v69 = FMIPUnknownItem.locations.getter(v68);
  v121(v60, v67);
  if (*(_QWORD *)(v69 + 16))
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v47 + 16))(v64, v69 + ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80)), v46);
    v70 = 0;
  }
  else
  {
    v70 = 1;
  }
  v71 = v113;
  v114(v64, v70, 1, v46);
  v72 = swift_bridgeObjectRelease(v69);
  v73 = v71(v64, 1, v46, v72);
  if ((_DWORD)v73 == 1)
  {
    sub_1000051EC(v64, (uint64_t *)&unk_1005D6700);
    v74 = 1;
    v75 = v110;
    v76 = (uint64_t)v111;
    v77 = v108;
    v78 = v103;
  }
  else
  {
    v79 = (void *)FMIPLocation.location.getter(v73);
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v64, v46);
    v80 = objc_msgSend(v79, "timestamp");

    v81 = v105;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v80);

    v78 = v103;
    v62(v63, v81, v103);
    v74 = 0;
    v75 = v110;
    v76 = (uint64_t)v111;
    v77 = v108;
  }
  v82 = (void (*)(char *, uint64_t, uint64_t))v104;
  v83 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v101;
  v100(v63, v74, 1, v78);
  v82(v77, v123, v78);
  if (v83(v63, 1, v78) == 1)
  {
    v62((uint64_t)v75, v77, v78);
    sub_1000051EC(v63, (uint64_t *)&unk_1005D3320);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v126 + 8))(v77, v78);
    v62((uint64_t)v75, (char *)v63, v78);
  }
  v84 = v112;
  v85 = (uint64_t)v75;
  v86 = v115;
  v87 = v120;
  v88 = (uint64_t (*)(char *, uint64_t, uint64_t))v122;
  v89 = ((uint64_t (*)(char *, uint64_t, uint64_t))v122)(v115, v107, v120);
  FMIPUnknownItem.identifier.getter(v89);
  v90 = v121;
  v121(v86, v87);
  v91 = v116;
  v92 = v88(v116, v66, v87);
  v93 = (uint64_t)v117;
  FMIPUnknownItem.identifier.getter(v92);
  v90(v91, v87);
  v94 = v119;
  LOBYTE(v91) = sub_1003FEE44(v119, v76, v85, v93);
  v95 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
  v96 = v93;
  v97 = v118;
  v95(v96, v118);
  v95(v76, v97);
  v98 = *(void (**)(uint64_t, uint64_t))(v126 + 8);
  v98(v85, v78);
  v98(v94, v78);
  return v91 & 1;
}

double sub_10040CC04(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  double result;
  _QWORD v16[4];

  v3 = sub_100053F2C((uint64_t *)&unk_1005E4240);
  v4 = sub_100053F2C(&qword_1005D6BC0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 72);
  v7 = *(unsigned __int8 *)(v5 + 80);
  v8 = (v7 + 32) & ~v7;
  v9 = swift_allocObject(v3, v8 + v6, v7 | 7);
  *(_OWORD *)(v9 + 16) = xmmword_100481740;
  v10 = (_QWORD *)(v9 + v8);
  v11 = *(int *)(v4 + 48);
  v16[2] = a2;
  v12 = type metadata accessor for FMAnnotationIdentifier(0);
  OS_dispatch_queue.sync<A>(execute:)(v10, sub_100353E10, v16, v12);
  *(_QWORD *)((char *)v10 + v11) = a2;
  v13 = a2;
  v14 = sub_10011E2A8(v9);
  sub_100038120(v14, (uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v14).n128_u64[0];
  return result;
}

double sub_10040CD00(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  _QWORD *v57;
  unint64_t v58;
  double result;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t aBlock;
  unint64_t v80[4];
  uint64_t v81;
  _QWORD *v82;
  char v83[32];

  v66 = a1;
  v65 = *v1;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v71 = *(_QWORD *)(v2 - 8);
  v72 = v2;
  __chkstk_darwin(v2);
  v70 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v68 = *(_QWORD *)(v4 - 8);
  v69 = v4;
  __chkstk_darwin(v4);
  v67 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FMIPUnknownItem(0);
  v75 = *(_QWORD *)(v6 - 8);
  v76 = v6;
  v7 = *(_QWORD *)(v75 + 64);
  v8 = __chkstk_darwin(v6);
  __chkstk_darwin(v8);
  v73 = (char *)&v60 - v9;
  v10 = type metadata accessor for FMSelectedSection(0);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v60 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v60 - v17;
  v77 = swift_allocObject(&unk_100565188, 24, 7);
  *(_QWORD *)(v77 + 16) = _swiftEmptyArrayStorage;
  v19 = swift_allocObject(&unk_1005651B0, 24, 7);
  *(_QWORD *)(v19 + 16) = &_swiftEmptyDictionarySingleton;
  v74 = swift_allocObject(&unk_1005651D8, 24, 7);
  *(_QWORD *)(v74 + 16) = _swiftEmptyArrayStorage;
  v20 = *(_QWORD *)(v1[2] + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v20, v83, 0, 0);
  sub_10004FC74(v20, (uint64_t)v18, type metadata accessor for FMSelectedSection);
  v78 = v18;
  sub_10004FC74((uint64_t)v18, (uint64_t)v16, type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload(v16, v10) == 8)
  {
    v21 = v75;
    v63 = v1;
    v62 = *(void (**)(char *, char *, uint64_t))(v75 + 32);
    v22 = v73;
    v23 = v76;
    v62(v73, v16, v76);
    v64 = v1[11];
    v24 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    v25 = v23;
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v24, v22, v23);
    v26 = *(unsigned __int8 *)(v21 + 80);
    v27 = (v26 + 24) & ~v26;
    v28 = (v7 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
    v29 = (v28 + 15) & 0xFFFFFFFFFFFFFFF8;
    v30 = (v29 + 15) & 0xFFFFFFFFFFFFFFF8;
    v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
    v61 = v19;
    v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
    v33 = swift_allocObject(&unk_100565200, v32 + 8, v26 | 7);
    v34 = v66;
    *(_QWORD *)(v33 + 16) = v66;
    v62((char *)(v33 + v27), v24, v25);
    v35 = v77;
    *(_QWORD *)(v33 + v28) = v77;
    v36 = v61;
    *(_QWORD *)(v33 + v29) = v61;
    v37 = v63;
    *(_QWORD *)(v33 + v30) = v63;
    v38 = v74;
    *(_QWORD *)(v33 + v31) = v74;
    *(_QWORD *)(v33 + v32) = v65;
    v80[3] = (unint64_t)sub_100415CF4;
    v81 = v33;
    aBlock = (uint64_t)_NSConcreteStackBlock;
    v80[0] = 1107296256;
    v80[1] = (unint64_t)sub_100037DF8;
    v80[2] = (unint64_t)&unk_100565218;
    v39 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain(v34);
    v40 = v35;
    swift_retain(v35);
    swift_retain(v36);
    swift_retain(v37);
    v41 = v38;
    v42 = swift_retain(v38);
    v43 = v67;
    static DispatchQoS.unspecified.getter(v42);
    v82 = _swiftEmptyArrayStorage;
    v44 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v45 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
    v46 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
    v47 = v70;
    v48 = v72;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v82, v45, v46, v72, v44);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v43, v47, v39);
    _Block_release(v39);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v47, v48);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v43, v69);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v73, v76);
    sub_10004FCB8((uint64_t)v78, type metadata accessor for FMSelectedSection);
    v49 = v81;
    swift_release(v40);
    swift_release(v36);
    swift_release(v41);
    v50 = v49;
  }
  else
  {
    v51 = (uint64_t)v78;
    sub_10004FCB8((uint64_t)v16, type metadata accessor for FMSelectedSection);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v52 = type metadata accessor for Logger(0);
    sub_100056D88(v52, (uint64_t)qword_1005F5748);
    v53 = sub_10004FC74(v51, (uint64_t)v13, type metadata accessor for FMSelectedSection);
    v54 = Logger.logObject.getter(v53);
    v55 = static os_log_type_t.error.getter(v54);
    if (os_log_type_enabled(v54, v55))
    {
      v56 = (uint8_t *)swift_slowAlloc(12, -1);
      v57 = (_QWORD *)swift_slowAlloc(32, -1);
      *(_DWORD *)v56 = 136315138;
      v82 = v57;
      aBlock = 0;
      v80[0] = 0xE000000000000000;
      _print_unlocked<A, B>(_:_:)(v13, &aBlock, v10, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v58 = v80[0];
      aBlock = sub_100056DA0(aBlock, v80[0], (uint64_t *)&v82);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v80);
      swift_bridgeObjectRelease(v58);
      sub_10004FCB8((uint64_t)v13, type metadata accessor for FMSelectedSection);
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "FMMapViewDataSource: cannot fetch unknown item value from selected section %s", v56, 0xCu);
      swift_arrayDestroy(v57, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v57, -1, -1);
      swift_slowDealloc(v56, -1, -1);

      sub_10004FCB8((uint64_t)v78, type metadata accessor for FMSelectedSection);
    }
    else
    {

      sub_10004FCB8((uint64_t)v13, type metadata accessor for FMSelectedSection);
      sub_10004FCB8(v51, type metadata accessor for FMSelectedSection);
    }
    swift_release(v77);
    swift_release(v19);
    v50 = v74;
  }
  *(_QWORD *)&result = swift_release(v50).n128_u64[0];
  return result;
}

void sub_10040D3F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char v38;
  void (*v39)(char *, uint64_t);
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  uint64_t v49;
  os_log_type_t v50;
  _BOOL4 v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  __n128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  __n128 v73;
  void (*v74)(uint64_t, uint64_t, __n128);
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t (*v86)(char *, unint64_t, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  SEL *v98;
  id v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  id v107;
  void *v108;
  double v109;
  id v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  void *v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  unint64_t v122;
  id v123;
  uint64_t v124;
  uint64_t v125;
  double *v126;
  id v127;
  void *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  uint64_t v135;
  double *v136;
  uint64_t v137;
  uint64_t v138;
  double *v139;
  double v140;
  uint64_t v141;
  double v142;
  double v143;
  double v144;
  __double2 v145;
  __double2 v146;
  long double v147;
  double v148;
  double v149;
  double v150;
  uint64_t v151;
  _QWORD *v152;
  _QWORD *v153;
  uint64_t v154;
  double *v155;
  double v156;
  double v157;
  id v158;
  char *v159;
  id v160;
  Class isa;
  id v162;
  id v163;
  unint64_t v164;
  unint64_t v165;
  uint64_t v166;
  _QWORD *v167;
  uint64_t v168;
  uint64_t v169;
  _QWORD *v170;
  uint64_t v171;
  unint64_t v172;
  id v173;
  unint64_t v174;
  _QWORD *v175;
  _QWORD *v176;
  unint64_t v177;
  BOOL v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  unint64_t v184;
  _QWORD *v185;
  id v186;
  id v187;
  unint64_t v188;
  unint64_t v189;
  uint64_t v190;
  unint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  id v197;
  void *v198;
  uint64_t v199;
  __n128 v200;
  Swift::String v201;
  unint64_t v202;
  __n128 v203;
  Swift::String v204;
  id v205;
  char *v206;
  double v207;
  __n128 v208;
  unint64_t v209;
  uint64_t v210;
  unint64_t v211;
  char v212;
  id v213;
  char *v214;
  uint64_t v215;
  id v216;
  id v217;
  char *v218;
  id v219;
  id v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  char *v226;
  char *v227;
  char *v228;
  uint64_t v229;
  objc_class *v230;
  _QWORD *v231;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v233;
  char v234;
  unint64_t v235;
  uint64_t v236;
  _BOOL8 v237;
  uint64_t v238;
  char v239;
  unint64_t v240;
  char v241;
  _QWORD *v242;
  uint64_t v243;
  BOOL v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  void *v251;
  uint64_t v252;
  uint64_t *v253;
  uint64_t v254;
  unint64_t v255;
  unint64_t v256;
  uint64_t v257;
  uint64_t *v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  char *v264;
  uint64_t v265;
  char *v266;
  uint64_t v267;
  _QWORD *v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  __n128 v273;
  uint64_t v274;
  uint64_t v275;
  char *v276;
  uint64_t v277;
  uint64_t v278;
  char *v279;
  uint64_t v280;
  uint64_t v281;
  char *v282;
  __n128 v283;
  __n128 v284;
  char *v285;
  uint64_t v286;
  _QWORD *v287;
  uint64_t v288;
  unint64_t v289;
  uint64_t *v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  void (*v297)(uint64_t, uint64_t, __n128);
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  char *v302;
  uint64_t v303;
  uint64_t v304;
  char *v305;
  uint64_t v306;
  uint64_t (*v307)(uint64_t, uint64_t, uint64_t);
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  __int128 v311;
  uint64_t v312;
  _QWORD *v313;
  void *v314;
  uint64_t v315;
  _QWORD *v316;
  uint64_t v317;
  id v318;
  unint64_t v319;
  unint64_t v320;
  _QWORD *v321;
  char *v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  _QWORD *v326;
  objc_super v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  unint64_t v331;

  v315 = a5;
  v304 = a2;
  v312 = type metadata accessor for FMAnnotationIdentifier(0);
  v308 = *(_QWORD *)(v312 - 8);
  v10 = __chkstk_darwin(v312);
  v325 = (uint64_t)&v275 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v316 = (uint64_t *)((char *)&v275 - v12);
  v324 = type metadata accessor for Date(0);
  v323 = *(_QWORD *)(v324 - 8);
  __chkstk_darwin(v324);
  v322 = (char *)&v275 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FMIPLocation(0);
  v292 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v16 = (char *)&v275 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v278 = sub_100053F2C(&qword_1005E41D8);
  v277 = *(_QWORD *)(v278 - 8);
  __chkstk_darwin(v278);
  v276 = (char *)&v275 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v281 = sub_100053F2C(&qword_1005E41E0);
  v280 = *(_QWORD *)(v281 - 8);
  __chkstk_darwin(v281);
  v279 = (char *)&v275 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for UUID(0);
  v303 = *(_QWORD *)(v19 - 8);
  v20 = __chkstk_darwin(v19);
  v302 = (char *)&v275 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v305 = (char *)&v275 - v22;
  v23 = type metadata accessor for FMIPUnknownItem(0);
  v24 = __chkstk_darwin(v23);
  v25 = __chkstk_darwin(v24);
  __chkstk_darwin(v25);
  v309 = (uint64_t)&v275 - v29;
  v290 = (uint64_t *)(a6 + 16);
  v301 = *(_QWORD *)(a1 + 16);
  if (!v301)
    goto LABEL_148;
  v291 = v28;
  v286 = v27;
  v287 = (_QWORD *)(a3 + 16);
  v321 = (_QWORD *)(a4 + 16);
  v299 = a1 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
  v298 = *(_QWORD *)(v26 + 72);
  v300 = v26;
  v307 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 16);
  v275 = a1;
  v30 = swift_bridgeObjectRetain(a1);
  v31 = 0;
  v317 = 0;
  v30.n128_u64[0] = 136315138;
  v283 = v30;
  v282 = (char *)&type metadata for Any + 8;
  v30.n128_u64[0] = 134217984;
  v284 = v30;
  v311 = xmmword_100481B00;
  v296 = a3;
  v294 = a4;
  v288 = v14;
  v285 = v16;
  v295 = v19;
  v306 = v23;
  while (1)
  {
    v310 = v31;
    v32 = v309;
    v33 = v307(v309, v299 + v298 * v31, v23);
    v34 = v23;
    v35 = v305;
    v36 = FMIPUnknownItem.identifier.getter(v33);
    v37 = v302;
    FMIPUnknownItem.identifier.getter(v36);
    v38 = static UUID.== infix(_:_:)(v35, v37);
    v39 = *(void (**)(char *, uint64_t))(v303 + 8);
    v39(v37, v19);
    v39(v35, v19);
    if ((v38 & 1) != 0)
      break;
    (*(void (**)(uint64_t, uint64_t))(v300 + 8))(v32, v34);
    v23 = v34;
LABEL_4:
    v31 = v310 + 1;
    if (v310 + 1 == v301)
    {
      swift_bridgeObjectRelease(v275);
LABEL_148:
      v258 = v290;
      swift_beginAccess(v290, &v330, 0, 0);
      v329 = *v258;
      swift_bridgeObjectRetain(v329);
      v259 = sub_100053F2C(&qword_1005E41E8);
      v260 = a4;
      v261 = sub_100053F2C(&qword_1005E41F0);
      v262 = sub_10003F774(&qword_1005E41F8, &qword_1005E41E8, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
      v263 = sub_10003F774(&qword_1005E4200, &qword_1005E41F0, (uint64_t)&protocol conformance descriptor for [A]);
      v264 = v276;
      Publishers.MergeMany.init<A>(_:)(&v329, v259, v261, v262, v263);
      v265 = sub_10003F774(&qword_1005E4208, &qword_1005E41D8, (uint64_t)&protocol conformance descriptor for Publishers.MergeMany<A>);
      v266 = v279;
      v267 = v278;
      Publisher.collect()(v278, v265);
      (*(void (**)(char *, uint64_t))(v277 + 8))(v264, v267);
      v268 = (_QWORD *)swift_allocObject(&unk_100565250, 40, 7);
      v269 = v315;
      v268[2] = v260;
      v268[3] = v269;
      v268[4] = a3;
      v270 = sub_10003F774((unint64_t *)&unk_1005E4210, &qword_1005E41E0, (uint64_t)&protocol conformance descriptor for Publishers.Collect<A>);
      swift_retain(v260);
      swift_retain(v269);
      swift_retain(a3);
      v271 = v281;
      v272 = Publisher<>.sink(receiveValue:)(sub_100415D74, v268, v281, v270);
      v273 = swift_release(v268);
      (*(void (**)(char *, uint64_t, __n128))(v280 + 8))(v266, v271, v273);
      v274 = *(_QWORD *)(v269 + 96);
      *(_QWORD *)(v269 + 96) = v272;
      swift_release(v274);
      return;
    }
  }
  v41 = FMIPUnknownItem.locations.getter(v40);
  v42 = *(_QWORD *)(v41 + 16);
  swift_bridgeObjectRelease(v41);
  if (!v42)
  {
    v23 = v306;
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v58 = type metadata accessor for Logger(0);
    sub_100056D88(v58, (uint64_t)qword_1005F5748);
    v59 = v286;
    v60 = v309;
    v61 = v307(v286, v309, v23);
    v62 = Logger.logObject.getter(v61);
    v63 = static os_log_type_t.default.getter(v62);
    if (os_log_type_enabled(v62, v63))
    {
      v64 = swift_slowAlloc(12, -1);
      v65 = swift_slowAlloc(32, -1);
      v320 = v65;
      v330 = v65;
      *(_DWORD *)v64 = v283.n128_u32[0];
      v66 = v305;
      FMIPUnknownItem.identifier.getter(v65);
      v67 = sub_100008000((unint64_t *)&qword_1005DA7C0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v68 = dispatch thunk of CustomStringConvertible.description.getter(v19, v67);
      v69 = v16;
      v71 = v70;
      v39(v66, v19);
      *(_QWORD *)(v64 + 4) = sub_100056DA0(v68, v71, &v330);
      v72 = v71;
      v16 = v69;
      v73 = swift_bridgeObjectRelease(v72);
      v74 = *(void (**)(uint64_t, uint64_t, __n128))(v300 + 8);
      v74(v59, v306, v73);
      _os_log_impl((void *)&_mh_execute_header, v62, v63, "FMMapViewDataSource: No locations provided for %s", (uint8_t *)v64, 0xCu);
      v75 = v320;
      swift_arrayDestroy(v320, 1, v282);
      swift_slowDealloc(v75, -1, -1);
      v76 = v64;
      v23 = v306;
      swift_slowDealloc(v76, -1, -1);

      v77 = v309;
    }
    else
    {

      v74 = *(void (**)(uint64_t, uint64_t, __n128))(v300 + 8);
      ((void (*)(uint64_t, uint64_t))v74)(v59, v23);
      v77 = v60;
    }
    ((void (*)(uint64_t, uint64_t))v74)(v77, v23);
    a4 = v294;
    a3 = v296;
    goto LABEL_4;
  }
  v43 = v16;
  v44 = v306;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v45 = type metadata accessor for Logger(0);
  sub_100056D88(v45, (uint64_t)qword_1005F5748);
  v46 = v291;
  v47 = v307(v291, v32, v44);
  v48 = Logger.logObject.getter(v47);
  v49 = v44;
  v50 = static os_log_type_t.default.getter(v48);
  v51 = os_log_type_enabled(v48, v50);
  v52 = v292;
  if (v51)
  {
    v53 = swift_slowAlloc(12, -1);
    v54 = v284;
    *(_DWORD *)v53 = v284.n128_u32[0];
    v55 = FMIPUnknownItem.locations.getter(v54);
    v56 = *(_QWORD *)(v55 + 16);
    v57 = swift_bridgeObjectRelease(v55);
    v297 = *(void (**)(uint64_t, uint64_t, __n128))(v300 + 8);
    v297(v46, v49, v57);
    *(_QWORD *)(v53 + 4) = v56;
    _os_log_impl((void *)&_mh_execute_header, v48, v50, "FMMapViewDataSource: computing %ld location tracks", (uint8_t *)v53, 0xCu);
    swift_slowDealloc(v53, -1, -1);
  }
  else
  {
    v297 = *(void (**)(uint64_t, uint64_t, __n128))(v300 + 8);
    ((void (*)(uint64_t, uint64_t))v297)(v46, v44);
  }

  v79 = FMIPUnknownItem.locations.getter(v78);
  v80 = v79;
  v81 = *(_QWORD *)(v79 + 16);
  v16 = v43;
  if (v81)
  {
    v330 = (uint64_t)_swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v81);
    v82 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
    v320 = v80;
    v83 = v80 + v82;
    v84 = v43;
    v85 = *(_QWORD *)(v52 + 72);
    v86 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v52 + 16);
    v87 = v288;
    do
    {
      v88 = v86(v84, v83, v87);
      v89 = FMIPLocation.location.getter(v88);
      v90 = (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v84, v87);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v90);
      v91 = *(_QWORD *)(v330 + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v91);
      v92 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v91, v89);
      specialized ContiguousArray._endMutation()(v92);
      v83 += v85;
      --v81;
    }
    while (v81);
    v93 = v330;
    swift_bridgeObjectRelease(v320);
    v16 = v84;
    v19 = v295;
    a3 = v296;
  }
  else
  {
    swift_bridgeObjectRelease(v79);
    v93 = (uint64_t)_swiftEmptyArrayStorage;
    v19 = v295;
  }
  v23 = v306;
  if (v93 < 0 || (v93 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain(v93);
    v94 = (uint64_t)sub_1003EFC7C(v246);
    swift_bridgeObjectRelease(v93);
  }
  else
  {
    v94 = v93 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v93);
  }
  v330 = v94;
  v95 = v317;
  sub_10040FD8C(&v330);
  if (v95)
    goto LABEL_161;
  v317 = 0;
  swift_bridgeObjectRelease(v93);
  v96 = v330;
  v329 = (uint64_t)_swiftEmptyArrayStorage;
  if ((v330 & 0x8000000000000000) == 0 && (v330 & 0x4000000000000000) == 0)
  {
    v97 = *(_QWORD *)(v330 + 16);
    swift_retain(v330);
    if (v97)
      goto LABEL_28;
    goto LABEL_137;
  }
  v247 = swift_retain(v330);
  v97 = _CocoaArrayWrapper.endIndex.getter(v247);
  if (!v97)
  {
LABEL_137:
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    swift_release_n(v96, 2);
    ((void (*)(uint64_t, uint64_t))v297)(v309, v23);
    a4 = v294;
    goto LABEL_4;
  }
LABEL_28:
  v319 = v96 & 0xC000000000000001;
  if ((v96 & 0xC000000000000001) != 0)
  {
    v99 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v96);
    v100 = v96;
    swift_release(v96);
    v98 = (SEL *)&unk_1005AA000;
    v101 = v97 - 1;
    if (v97 < 1)
      goto LABEL_158;
LABEL_31:
    v293 = v101;
    v289 = v100 + 32;
    v320 = v100;
    swift_retain(v100);
    v102 = 0;
    v103 = _swiftEmptyArrayStorage;
    do
    {
      if (v319)
        v107 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v102, v320);
      else
        v107 = *(id *)(v320 + 8 * v102 + 32);
      v108 = v107;
      objc_msgSend(v107, v98[178], v99);
      if (v109 >= 25.0)
      {
        v114 = v99;
        v115 = v329;
        if ((swift_isUniquelyReferenced_nonNull_native(v103) & 1) == 0)
          v103 = sub_100070DBC(0, v103[2] + 1, 1, v103);
        v117 = v103[2];
        v116 = v103[3];
        if (v117 >= v116 >> 1)
          v103 = sub_100070DBC((_QWORD *)(v116 > 1), v117 + 1, 1, v103);
        v103[2] = v117 + 1;
        v103[v117 + 4] = v115;
        v104 = sub_100053F2C(&qword_1005D2F10);
        v105 = swift_allocObject(v104, 40, 7);
        *(_OWORD *)(v105 + 16) = v311;
        *(_QWORD *)(v105 + 32) = v108;
        v330 = v105;
        specialized Array._endMutation()(v105);
        v106 = v330;
        v99 = v108;

        v329 = v106;
      }
      else
      {
        v110 = v108;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v110);
        v112 = *(_QWORD *)((v329 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v111 = *(_QWORD *)((v329 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v112 >= v111 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v111 > 1, v112 + 1, 1);
        v113 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v112, v110);
        specialized Array._endMutation()(v113);

      }
      ++v102;
    }
    while (v97 != v102);
    swift_release(v320);
    v328 = (uint64_t)_swiftEmptyArrayStorage;
    v314 = (void *)v103[2];
    if (v314)
    {
      v313 = v103 + 4;
      swift_bridgeObjectRetain(v103);
      v118 = 0;
      while (1)
      {
        if (v118 >= v103[2])
        {
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
          goto LABEL_158;
        }
        v119 = v313[v118];
        v120 = (unint64_t)v119 >> 62;
        if ((unint64_t)v119 >> 62)
        {
          if (v119 < 0)
            v137 = v313[v118];
          else
            v137 = v119 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain_n(v119, 2);
          v121 = _CocoaArrayWrapper.endIndex.getter(v137);
          swift_bridgeObjectRelease(v119);
          if (!v121)
          {
LABEL_47:
            swift_bridgeObjectRelease(v119);
            goto LABEL_48;
          }
        }
        else
        {
          v121 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain(v119);
          if (!v121)
            goto LABEL_47;
        }
        v122 = v121 - 1;
        if (__OFSUB__(v121, 1))
          goto LABEL_152;
        v318 = v99;
        if ((v119 & 0xC000000000000001) != 0)
        {
          v123 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v122, v119);
          if (!v120)
            goto LABEL_57;
        }
        else
        {
          if ((v122 & 0x8000000000000000) != 0)
            goto LABEL_153;
          if (v122 >= *(_QWORD *)((v119 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_154;
          v123 = *(id *)(v119 + 8 * v122 + 32);
          if (!v120)
          {
LABEL_57:
            v124 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (v124)
              goto LABEL_58;
            goto LABEL_77;
          }
        }
        if (v119 < 0)
          v138 = v119;
        else
          v138 = v119 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v119);
        v124 = _CocoaArrayWrapper.endIndex.getter(v138);
        swift_bridgeObjectRelease(v119);
        if (v124)
        {
LABEL_58:
          v330 = (uint64_t)_swiftEmptyArrayStorage;
          sub_1001121AC(0, v124 & ~(v124 >> 63), 0);
          if (v124 < 0)
            goto LABEL_156;
          v125 = 0;
          v126 = (double *)v330;
          do
          {
            if ((v119 & 0xC000000000000001) != 0)
              v127 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v125, v119);
            else
              v127 = *(id *)(v119 + 8 * v125 + 32);
            v128 = v127;
            objc_msgSend(v127, "coordinate");
            v130 = v129;
            v132 = v131;

            v330 = (uint64_t)v126;
            v134 = *((_QWORD *)v126 + 2);
            v133 = *((_QWORD *)v126 + 3);
            v135 = v134 + 1;
            if (v134 >= v133 >> 1)
            {
              sub_1001121AC(v133 > 1, v134 + 1, 1);
              v126 = (double *)v330;
            }
            ++v125;
            *((_QWORD *)v126 + 2) = v135;
            v136 = &v126[2 * v134];
            *((_QWORD *)v136 + 4) = v130;
            *((_QWORD *)v136 + 5) = v132;
          }
          while (v124 != v125);
          goto LABEL_78;
        }
LABEL_77:
        v126 = (double *)_swiftEmptyArrayStorage;
        v135 = _swiftEmptyArrayStorage[2];
LABEL_78:
        if ((unint64_t)v135 > 1)
        {
          v139 = v126 + 5;
          v140 = 0.0;
          v141 = v135;
          v142 = 0.0;
          v143 = 0.0;
          do
          {
            v144 = *v139 * 3.14159265 / 180.0;
            v145 = __sincos_stret(*(v139 - 1) * 3.14159265 / 180.0);
            v146 = __sincos_stret(v144);
            v143 = v143 + v145.__cosval * v146.__cosval;
            v142 = v142 + v145.__cosval * v146.__sinval;
            v140 = v140 + v145.__sinval;
            v139 += 2;
            --v141;
          }
          while (v141);
          swift_bridgeObjectRelease(v126);
          v147 = v140 / (double)v135;
          v148 = atan2(v142 / (double)v135, v143 / (double)v135);
          v149 = atan2(v147, sqrt(v143 / (double)v135 * (v143 / (double)v135) + v142 / (double)v135 * (v142 / (double)v135)))* 180.0/ 3.14159265;
          v150 = v148 * 180.0 / 3.14159265;
LABEL_84:
          v151 = v317;
          v152 = sub_1003FEABC(v119);
          v153 = v152;
          v317 = v151;
          v154 = v152[2];
          if (v154)
          {
            v155 = (double *)(v152 + 4);
            v156 = 0.0;
            v99 = v318;
            do
            {
              v157 = *v155++;
              v156 = v156 + v157;
              --v154;
            }
            while (v154);
          }
          else
          {
            v156 = 0.0;
            v99 = v318;
          }
          swift_bridgeObjectRelease(v119);
          swift_bridgeObjectRelease(v153);
          v158 = objc_msgSend(v123, "timestamp");
          v159 = v322;
          static Date._unconditionallyBridgeFromObjectiveC(_:)(v158);

          v160 = objc_allocWithZone((Class)CLLocation);
          isa = Date._bridgeToObjectiveC()().super.isa;
          v162 = objc_msgSend(v160, "initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:", isa, v149, v150, v156 / (double)v124, 12.5, 12.5);

          (*(void (**)(char *, uint64_t))(v323 + 8))(v159, v324);
          v163 = v162;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v163);
          v165 = *(_QWORD *)((v328 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v164 = *(_QWORD *)((v328 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v165 >= v164 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v164 > 1, v165 + 1, 1);
          v166 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v165, v163);
          specialized Array._endMutation()(v166);

          goto LABEL_48;
        }
        if (v135)
        {
          v149 = v126[4];
          v150 = v126[5];
          swift_bridgeObjectRelease(v126);
          goto LABEL_84;
        }

        swift_bridgeObjectRelease(v119);
        swift_bridgeObjectRelease(v126);
        v99 = v318;
LABEL_48:
        if ((void *)++v118 == v314)
        {
          v318 = v99;
          swift_bridgeObjectRelease(v103);
          v167 = (_QWORD *)v328;
          goto LABEL_97;
        }
      }
    }
    v318 = v99;
    v167 = _swiftEmptyArrayStorage;
LABEL_97:
    swift_bridgeObjectRetain(v167);
    v168 = v317;
    v170 = sub_1003FE960(v169);
    v317 = v168;
    swift_bridgeObjectRelease(v167);
    v171 = v329;
    swift_bridgeObjectRelease(v103);
    swift_bridgeObjectRelease(v171);
    if (v319)
    {
      v172 = v320;
      v173 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v293, v320);
      v174 = swift_release(v172).n128_u64[0];
      v175 = v316;
      v176 = v287;
    }
    else
    {
      v177 = v320;
      v175 = v316;
      v176 = v287;
      if (v293 >= *(_QWORD *)(v320 + 16))
        goto LABEL_159;
      v173 = *(id *)(v289 + 8 * v293);
      v174 = swift_release(v177).n128_u64[0];
    }
    v178 = v170[2] >= 2uLL;
    v314 = v173;
    if (v178)
    {
      objc_msgSend(v173, "coordinate", *(double *)&v174);
      v180 = v179;
      v182 = v181;
      if ((swift_isUniquelyReferenced_nonNull_native(v170) & 1) == 0)
        v170 = sub_100070CB0(0, v170[2] + 1, 1, v170);
      v184 = v170[2];
      v183 = v170[3];
      if (v184 >= v183 >> 1)
        v170 = sub_100070CB0((_QWORD *)(v183 > 1), v184 + 1, 1, v170);
      v170[2] = v184 + 1;
      v185 = &v170[2 * v184 + 4];
      *v185 = v180;
      v185[1] = v182;
      v186 = objc_msgSend((id)objc_opt_self(MKPolyline), "polylineWithCoordinates:count:", v170 + 4, v184 + 1);
      swift_bridgeObjectRelease(v170);
      swift_beginAccess(v176, &v330, 33, 0);
      v187 = v186;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v187);
      v189 = *(_QWORD *)((*v176 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v188 = *(_QWORD *)((*v176 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v189 >= v188 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v188 > 1, v189 + 1, 1);
      v190 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v189, v187);
      specialized Array._endMutation()(v190);
      swift_endAccess(&v330);

      v175 = v316;
    }
    else
    {
      swift_bridgeObjectRelease(v170);
    }
    v191 = v328;
    if (!((unint64_t)v328 >> 62))
    {
      v192 = *(_QWORD *)((v328 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v192)
        goto LABEL_112;
      goto LABEL_144;
    }
    if (v328 < 0)
      v248 = v328;
    else
      v248 = v328 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v328);
    v192 = _CocoaArrayWrapper.endIndex.getter(v248);
    swift_bridgeObjectRelease(v191);
    if (!v192)
    {
LABEL_144:
      swift_bridgeObjectRelease(v191);
      v249 = *(_QWORD *)(v315 + 48);
      swift_bridgeObjectRetain(v249);
      v250 = v309;
      v251 = v314;
      v252 = sub_100414588(v309, v314, v249);
      swift_bridgeObjectRelease(v249);
      v253 = v290;
      swift_beginAccess(v290, &v330, 33, 0);
      v254 = swift_retain(v252);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v254);
      v256 = *(_QWORD *)(*v253 + 16);
      v255 = *(_QWORD *)(*v253 + 24);
      if (v256 >= v255 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v255 > 1, v256 + 1, 1);
      v257 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v256, v252);
      specialized Array._endMutation()(v257);
      swift_endAccess(&v330);

      swift_release(v252);
      v23 = v306;
      ((void (*)(uint64_t, uint64_t))v297)(v250, v306);
      a3 = v296;
      a4 = v294;
      v16 = v285;
      v19 = v295;
      goto LABEL_4;
    }
LABEL_112:
    v320 = v191 & 0xC000000000000001;
    v193 = 4;
    v319 = v191;
    while (1)
    {
      if (v320)
        v197 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v193 - 4, v191);
      else
        v197 = *(id *)(v191 + 8 * v193);
      v198 = v197;
      v199 = v193 - 3;
      if (__OFADD__(v193 - 4, 1))
        goto LABEL_150;
      v330 = 0;
      v331 = 0xE000000000000000;
      objc_msgSend(v197, "coordinate");
      Double.write<A>(to:)(&v330, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v200);
      v201._countAndFlagsBits = 45;
      v201._object = (void *)0xE100000000000000;
      String.append(_:)(v201);
      objc_msgSend(v198, "coordinate");
      v203.n128_u64[0] = v202;
      Double.write<A>(to:)(&v330, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v203);
      v204._countAndFlagsBits = 45;
      v204._object = (void *)0xE100000000000000;
      String.append(_:)(v204);
      v205 = objc_msgSend(v198, "timestamp");
      v206 = v322;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v205);

      v207 = Date.timeIntervalSinceReferenceDate.getter();
      v208 = ((__n128 (*)(char *, uint64_t))*(_QWORD *)(v323 + 8))(v206, v324);
      v208.n128_f64[0] = v207;
      Double.write<A>(to:)(&v330, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v208);
      v209 = v331;
      *v175 = v330;
      v175[1] = v209;
      swift_storeEnumTagMultiPayload(v175, v312, 3);
      sub_10004FC74((uint64_t)v175, v325, type metadata accessor for FMAnnotationIdentifier);
      v210 = *(_QWORD *)(v315 + 48);
      if (*(_QWORD *)(v210 + 16))
      {
        swift_bridgeObjectRetain(*(_QWORD *)(v315 + 48));
        v211 = sub_100171DF0((uint64_t)v175);
        if ((v212 & 1) != 0)
        {
          v213 = *(id *)(*(_QWORD *)(v210 + 56) + 8 * v211);
          swift_bridgeObjectRelease(v210);
          goto LABEL_124;
        }
        swift_bridgeObjectRelease(v210);
      }
      v214 = (char *)objc_allocWithZone((Class)type metadata accessor for FMTrackAnnotation(0));
      v215 = OBJC_IVAR____TtC6FindMy17FMTrackAnnotation_noImage;
      v216 = objc_allocWithZone((Class)UIImage);
      v217 = v198;
      v218 = v214;
      *(_QWORD *)&v214[v215] = objc_msgSend(v216, "init");
      *(_QWORD *)&v218[OBJC_IVAR____TtC6FindMy17FMTrackAnnotation_location] = v217;
      v219 = v217;
      v220 = objc_msgSend(v219, "timestamp");
      v221 = v322;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v220);

      (*(void (**)(char *, char *, uint64_t))(v323 + 32))(&v218[OBJC_IVAR____TtC6FindMy17FMTrackAnnotation_timestamp], v221, v324);
      objc_msgSend(v219, "coordinate");
      v223 = v222;
      v225 = v224;
      objc_msgSend(v219, "horizontalAccuracy");
      v226 = &v218[OBJC_IVAR____TtC6FindMy12FMAnnotation_title];
      *(_QWORD *)v226 = 0;
      *((_QWORD *)v226 + 1) = 0;
      *(_QWORD *)&v218[OBJC_IVAR____TtC6FindMy12FMAnnotation_badgeImage] = 0;
      *(_QWORD *)&v218[OBJC_IVAR____TtC6FindMy12FMAnnotation_stewieBadgeImage] = 0;
      v227 = &v218[OBJC_IVAR____TtC6FindMy12FMAnnotation_fmClusterIdentifier];
      *(_QWORD *)v227 = 0;
      *((_QWORD *)v227 + 1) = 0;
      v228 = &v218[OBJC_IVAR____TtC6FindMy12FMAnnotation_coordinate];
      *(_QWORD *)v228 = v223;
      *((_QWORD *)v228 + 1) = v225;
      *(_QWORD *)&v218[OBJC_IVAR____TtC6FindMy12FMAnnotation_horizontalAccuracy] = v229;
      v218[OBJC_IVAR____TtC6FindMy12FMAnnotation_isWithYou] = 0;
      v218[OBJC_IVAR____TtC6FindMy12FMAnnotation_isInaccurate] = 0;
      v218[OBJC_IVAR____TtC6FindMy12FMAnnotation_isLive] = 0;
      v230 = (objc_class *)type metadata accessor for FMAnnotation();
      v327.receiver = v218;
      v327.super_class = v230;
      v213 = objc_msgSendSuper2(&v327, "init");

LABEL_124:
      v231 = v321;
      swift_beginAccess(v321, &v330, 33, 0);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v231);
      v326 = (_QWORD *)*v231;
      v233 = v326;
      *v231 = 0x8000000000000000;
      v235 = sub_100171DF0(v325);
      v236 = v233[2];
      v237 = (v234 & 1) == 0;
      v238 = v236 + v237;
      if (__OFADD__(v236, v237))
        goto LABEL_151;
      v239 = v234;
      if (v233[3] >= v238)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v242 = v326;
          if ((v234 & 1) != 0)
            goto LABEL_113;
        }
        else
        {
          sub_10017DA58();
          v242 = v326;
          if ((v239 & 1) != 0)
            goto LABEL_113;
        }
      }
      else
      {
        sub_100177950(v238, isUniquelyReferenced_nonNull_native);
        v240 = sub_100171DF0(v325);
        if ((v239 & 1) != (v241 & 1))
          goto LABEL_160;
        v235 = v240;
        v242 = v326;
        if ((v239 & 1) != 0)
        {
LABEL_113:
          v194 = v242[7];
          v195 = 8 * v235;

          *(_QWORD *)(v194 + v195) = v213;
          goto LABEL_114;
        }
      }
      v242[(v235 >> 6) + 8] |= 1 << v235;
      sub_10004FC74(v325, v242[6] + *(_QWORD *)(v308 + 72) * v235, type metadata accessor for FMAnnotationIdentifier);
      *(_QWORD *)(v242[7] + 8 * v235) = v213;
      v243 = v242[2];
      v244 = __OFADD__(v243, 1);
      v245 = v243 + 1;
      if (v244)
        goto LABEL_155;
      v242[2] = v245;
LABEL_114:
      v196 = *v321;
      *v321 = v242;
      swift_bridgeObjectRelease(v196);
      sub_10004FCB8(v325, type metadata accessor for FMAnnotationIdentifier);
      swift_endAccess(&v330);

      v175 = v316;
      sub_10004FCB8((uint64_t)v316, type metadata accessor for FMAnnotationIdentifier);
      ++v193;
      v191 = v319;
      if (v199 == v192)
        goto LABEL_144;
    }
  }
  v98 = (SEL *)&unk_1005AA000;
  if (!*(_QWORD *)(v96 + 16))
    goto LABEL_157;
  v99 = *(id *)(v96 + 32);
  v100 = v96;
  swift_release(v96);
  v101 = v97 - 1;
  if (v97 >= 1)
    goto LABEL_31;
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v312);
  __break(1u);
LABEL_161:
  swift_release(v330);
  __break(1u);
}

void sub_10040EEE8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t isUniquelyReferenced_nonNull_native;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  _QWORD *v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  _QWORD aBlock[5];
  _QWORD *v61;
  _QWORD v62[3];

  v50 = a3;
  v51 = a4;
  v54 = a2;
  v59 = type metadata accessor for FMAnnotationIdentifier(0);
  v55 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v6 = (uint64_t *)((char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = (_QWORD *)type metadata accessor for DispatchWorkItemFlags(0);
  v8 = *(v7 - 1);
  __chkstk_darwin(v7);
  v10 = (uint64_t)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)type metadata accessor for DispatchQoS(0);
  v53 = *(v11 - 1);
  __chkstk_darwin(v11);
  v52 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  if ((unint64_t)*a1 >> 62)
  {
LABEL_25:
    if (v13 < 0)
      v34 = v13;
    else
      v34 = v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v13, 2);
    v14 = _CocoaArrayWrapper.endIndex.getter(v34);
    swift_bridgeObjectRelease(v13);
    if (v14)
      goto LABEL_3;
  }
  else
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v13);
    if (v14)
    {
LABEL_3:
      v46 = v11;
      v47 = v10;
      v48 = v8;
      v49 = v7;
      v11 = (_QWORD *)(v54 + 16);
      v57 = v14;
      v58 = v13 & 0xC000000000000001;
      v10 = 4;
      v56 = v13;
      while (1)
      {
        if (v58)
          v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v10 - 4, v13);
        else
          v18 = *(id *)(v13 + 8 * v10);
        v19 = v18;
        v20 = v10 - 3;
        if (__OFADD__(v10 - 4, 1))
        {
          __break(1u);
LABEL_23:
          __break(1u);
LABEL_24:
          __break(1u);
          goto LABEL_25;
        }
        __chkstk_darwin(v18);
        *(&v45 - 2) = (uint64_t)v19;
        OS_dispatch_queue.sync<A>(execute:)(v6, sub_1002FF534, &v45 - 4, v59);
        swift_beginAccess(v11, aBlock, 33, 0);
        v7 = v19;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v11);
        v62[0] = *v11;
        v13 = v62[0];
        *v11 = 0x8000000000000000;
        v8 = (uint64_t)v6;
        v23 = sub_100171DF0((uint64_t)v6);
        v24 = *(_QWORD *)(v13 + 16);
        v25 = (v22 & 1) == 0;
        v26 = v24 + v25;
        if (__OFADD__(v24, v25))
          goto LABEL_23;
        v27 = v22;
        if (*(_QWORD *)(v13 + 24) >= v26)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v30 = (_QWORD *)v62[0];
            if ((v22 & 1) != 0)
              goto LABEL_4;
          }
          else
          {
            v13 = (uint64_t)v62;
            sub_10017DA58();
            v30 = (_QWORD *)v62[0];
            if ((v27 & 1) != 0)
              goto LABEL_4;
          }
        }
        else
        {
          sub_100177950(v26, isUniquelyReferenced_nonNull_native);
          v13 = v62[0];
          v28 = sub_100171DF0(v8);
          if ((v27 & 1) != (v29 & 1))
          {
            KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v59);
            __break(1u);
            return;
          }
          v23 = v28;
          v30 = (_QWORD *)v62[0];
          if ((v27 & 1) != 0)
          {
LABEL_4:
            v15 = v30[7];
            v16 = 8 * v23;

            *(_QWORD *)(v15 + v16) = v7;
            v6 = (_QWORD *)v8;
            goto LABEL_5;
          }
        }
        v30[(v23 >> 6) + 8] |= 1 << v23;
        v6 = (_QWORD *)v8;
        sub_10004FC74(v8, v30[6] + *(_QWORD *)(v55 + 72) * v23, type metadata accessor for FMAnnotationIdentifier);
        *(_QWORD *)(v30[7] + 8 * v23) = v7;
        v31 = v30[2];
        v32 = __OFADD__(v31, 1);
        v33 = v31 + 1;
        if (v32)
          goto LABEL_24;
        v30[2] = v33;
LABEL_5:
        v17 = *v11;
        *v11 = v30;
        swift_bridgeObjectRelease(v17);
        sub_10004FCB8((uint64_t)v6, type metadata accessor for FMAnnotationIdentifier);
        swift_endAccess(aBlock);

        ++v10;
        v13 = v56;
        if (v20 == v57)
        {
          swift_bridgeObjectRelease(v56);
          v8 = v48;
          v7 = v49;
          v10 = v47;
          v11 = v46;
          goto LABEL_30;
        }
      }
    }
  }
  swift_bridgeObjectRelease(v13);
LABEL_30:
  v35 = v50;
  v36 = (_QWORD *)swift_allocObject(&unk_1005652A0, 40, 7);
  v37 = v54;
  v36[2] = v35;
  v36[3] = v37;
  v38 = v51;
  v36[4] = v51;
  aBlock[4] = sub_100415D94;
  v61 = v36;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_1005652B8;
  v39 = _Block_copy(aBlock);
  swift_retain(v35);
  swift_retain(v37);
  v40 = swift_retain(v38);
  v41 = v52;
  static DispatchQoS.unspecified.getter(v40);
  v62[0] = _swiftEmptyArrayStorage;
  v42 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v43 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v44 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v62, v43, v44, v7, v42);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v41, v10, v39);
  _Block_release(v39);
  (*(void (**)(uint64_t, _QWORD *))(v8 + 8))(v10, v7);
  (*(void (**)(char *, _QWORD *))(v53 + 8))(v41, v11);
  swift_release(v61);
}

double sub_10040F3E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  uint64_t v9;
  _BYTE v10[24];

  v5 = a3 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  v6 = *(_QWORD *)(a2 + 16);
  swift_beginAccess(v5, &v9, 0, 0);
  v7 = *(_QWORD *)(a3 + 16);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  sub_100038120(v6, v7);
  swift_bridgeObjectRelease(v6);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v7).n128_u64[0];
  return result;
}

void sub_10040F484(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  unint64_t v18;
  char v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;

  v39 = a5;
  v9 = type metadata accessor for FMIPUnknownItem(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FMAnnotationIdentifier(0);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a1;
  FMIPUnknownItem.identifier.getter(v14);
  swift_storeEnumTagMultiPayload(v16, v13, 5);
  if (!*(_QWORD *)(a2 + 16) || (v18 = sub_100171DF0((uint64_t)v16), (v19 & 1) == 0))
  {
    sub_10004FCB8((uint64_t)v16, type metadata accessor for FMAnnotationIdentifier);
LABEL_6:
    objc_msgSend(a4, "coordinate");
    v30 = v29;
    v32 = v31;
    objc_msgSend(a4, "horizontalAccuracy");
    v34 = v33;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
    v35 = objc_allocWithZone((Class)type metadata accessor for FMUnknownItemAnnotation(0));
    v36 = v17;
    sub_1002FEDC8((uint64_t)v12, v17, 0, 3, v30, v32, v34);
    v23 = v37;

    goto LABEL_7;
  }
  v20 = *(id *)(*(_QWORD *)(a2 + 56) + 8 * v18);
  sub_10004FCB8((uint64_t)v16, type metadata accessor for FMAnnotationIdentifier);
  v21 = type metadata accessor for FMUnknownItemAnnotation(0);
  v22 = swift_dynamicCastClass(v20, v21);
  if (!v22)
  {

    goto LABEL_6;
  }
  v23 = v22;
  objc_msgSend(a4, "coordinate");
  v25 = v24;
  v27 = v26;
  objc_msgSend(a4, "horizontalAccuracy");
  sub_1002FF110(a3, v17, 0, 3uLL, v25, v27, v28);
LABEL_7:
  *v39 = v23;
}

double sub_10040F6B8()
{
  unint64_t v0;
  double result;

  v0 = sub_10011E2A8((uint64_t)_swiftEmptyArrayStorage);
  sub_100038120(v0, (uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v0).n128_u64[0];
  return result;
}

uint64_t sub_10040F6FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _BYTE v16[24];

  v1 = type metadata accessor for FMSelectedSection(0);
  v2 = __chkstk_darwin(v1);
  v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v2);
  v6 = &v16[-v5 - 8];
  v7 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v7, v16, 0, 0);
  sub_10004FC74(v7, (uint64_t)v6, type metadata accessor for FMSelectedSection);
  sub_10004FC74((uint64_t)v6, (uint64_t)v4, type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload(v4, v1) != 6)
  {
    sub_10004FCB8((uint64_t)v6, type metadata accessor for FMSelectedSection);
    sub_10004FCB8((uint64_t)v4, type metadata accessor for FMSelectedSection);
LABEL_6:
    v13 = 0;
    return v13 & 1;
  }
  v8 = (_QWORD *)*v4;
  v9 = sub_1000758D8(v4[1], v4[2]);
  v10 = FMIPDevice.baIdentifier.getter(v9);
  if (!v11)
  {
    sub_10004FCB8((uint64_t)v6, type metadata accessor for FMSelectedSection);
    swift_bridgeObjectRelease(v8);
    goto LABEL_6;
  }
  v12 = v11;
  v13 = sub_10006BA18(v10, v11, v8);
  sub_10004FCB8((uint64_t)v6, type metadata accessor for FMSelectedSection);
  swift_bridgeObjectRelease(v8);
  swift_bridgeObjectRelease(v12);
  return v13 & 1;
}

uint64_t sub_10040F87C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  sub_10005E190(v0 + 24);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_release(*(_QWORD *)(v0 + 64));
  swift_release(*(_QWORD *)(v0 + 72));
  swift_release(*(_QWORD *)(v0 + 80));

  swift_release(*(_QWORD *)(v0 + 96));
  return v0;
}

uint64_t sub_10040F8D8()
{
  uint64_t v0;

  sub_10040F87C();
  return swift_deallocClassInstance(v0, 104, 7);
}

uint64_t storeEnumTagSinglePayload for FMMapViewAnimation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_10040F944 + 4 * byte_1004907B8[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_10040F978 + 4 * byte_1004907B3[v4]))();
}

uint64_t sub_10040F978(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10040F980(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10040F988);
  return result;
}

uint64_t sub_10040F994(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10040F99CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10040F9A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10040F9A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMMapViewAnimation()
{
  return &type metadata for FMMapViewAnimation;
}

uint64_t storeEnumTagSinglePayload for FMMapViewMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_10040FA10 + 4 * byte_1004907C2[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_10040FA44 + 4 * byte_1004907BD[v4]))();
}

uint64_t sub_10040FA44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10040FA4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10040FA54);
  return result;
}

uint64_t sub_10040FA60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10040FA68);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_10040FA6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10040FA74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMMapViewMode()
{
  return &type metadata for FMMapViewMode;
}

unint64_t sub_10040FA94()
{
  unint64_t result;

  result = qword_1005E41C8;
  if (!qword_1005E41C8)
  {
    result = swift_getWitnessTable(&unk_1004908E4, &type metadata for FMMapViewMode);
    atomic_store(result, (unint64_t *)&qword_1005E41C8);
  }
  return result;
}

unint64_t sub_10040FADC()
{
  unint64_t result;

  result = qword_1005E41D0;
  if (!qword_1005E41D0)
  {
    result = swift_getWitnessTable(&unk_10049094C, &type metadata for FMMapViewAnimation);
    atomic_store(result, (unint64_t *)&qword_1005E41D0);
  }
  return result;
}

uint64_t sub_10040FB20(uint64_t a1, uint64_t a2)
{
  return sub_10003F1C8(a2, "FMMapViewDataSource: didUpdate %ld devices", (uint64_t)&unk_100565048, (uint64_t)sub_100415B2C, (uint64_t)&unk_100565060);
}

uint64_t sub_10040FB5C(uint64_t a1, uint64_t a2)
{
  return sub_10003F1C8(a2, "FMMapViewDataSource: didUpdate %ld unknownItems", (uint64_t)&unk_100564FF8, (uint64_t)sub_100415B18, (uint64_t)&unk_100565010);
}

uint64_t sub_10040FB94(uint64_t a1, uint64_t a2)
{
  return sub_10003F1C8(a2, "FMMapViewDataSource: didUpdate %ld items", (uint64_t)&unk_100564FA8, (uint64_t)sub_100415B04, (uint64_t)&unk_100564FC0);
}

uint64_t sub_10040FBCC(uint64_t a1, uint64_t a2)
{
  return sub_100415740(a2);
}

uint64_t sub_10040FBDC(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1004152D4(a2, a3);
}

void sub_10040FBE8(uint64_t (*a1)(char *, char *), uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v5;

  type metadata accessor for FMIPUnknownItem(0);
  v5 = (_QWORD *)*v2;
  if ((swift_isUniquelyReferenced_nonNull_native(*v2) & 1) == 0)
    v5 = (_QWORD *)sub_10020CF60(v5);
  sub_10040FE04(a1, a2);
  *v2 = v5;
}

uint64_t sub_10040FC80(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_10005B30C(v2);
    *a1 = v2;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v7[0] = v2 + 32;
  v7[1] = v4;
  sub_100410998(v7);
  return specialized ContiguousArray._endMutation()(v5);
}

uint64_t sub_10040FCF8(uint64_t (*a1)(void **, void **))
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;

  v2 = v1;
  v4 = *v1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v4);
  *v2 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    *v2 = sub_10005B308(v4);
  sub_1004113D8(a1);
  return specialized ContiguousArray._endMutation()(v6);
}

uint64_t sub_10040FD8C(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_10005B308(v2);
    *a1 = v2;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v7[0] = v2 + 32;
  v7[1] = v4;
  sub_100411B9C(v7);
  return specialized ContiguousArray._endMutation()(v5);
}

void sub_10040FE04(uint64_t (*a1)(char *, char *), uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  Swift::Int v26;
  Swift::Int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  Swift::Int v34;
  char *v35;
  uint64_t v36;
  Swift::Int v37;
  uint64_t v38;
  Swift::Int v39;
  void (*v40)(char *, uint64_t, uint64_t);
  Swift::Int v41;
  char *v42;
  _QWORD *v43;
  uint64_t v44;
  char *v45;
  void (*v46)(char *, uint64_t);
  Swift::Int v47;
  uint64_t v48;
  Swift::Int v49;
  char *v50;
  char *v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  Swift::Int v56;
  Swift::Int v57;
  uint64_t v58;
  uint64_t v59;
  Swift::Int v60;
  uint64_t v61;
  Swift::Int v62;
  unint64_t v63;
  Swift::Int v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  char *v68;
  char *v69;
  Swift::Int v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  BOOL v82;
  unint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  uint64_t v93;
  char v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  BOOL v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  unint64_t v116;
  char *v117;
  uint64_t v118;
  Swift::Int v119;
  uint64_t v120;
  uint64_t v121;
  Swift::Int v122;
  char *v123;
  void (*v124)(char *, uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char v129;
  char v130;
  void (*v131)(char *, uint64_t);
  uint64_t v132;
  uint64_t v133;
  char *v134;
  void (*v135)(char *, uint64_t, uint64_t);
  char *v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  unint64_t v142;
  void (*v143)(char *, uint64_t);
  void (*v144)(char *, uint64_t);
  _QWORD *v145;
  uint64_t v146;
  Swift::Int v147;
  Swift::Int v148;
  char *v149;
  Swift::Int v150;
  char *v151;
  _QWORD *v152;
  char *v153;
  char *v154;
  char *v155;
  uint64_t v156;
  Swift::Int v157;
  Swift::Int v158;
  char *v159;
  char *v160;
  char *v161;
  Swift::Int v162;
  Swift::Int v163;
  char *v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t *v168;
  uint64_t (*v169)(char *, char *);
  uint64_t v170;
  _QWORD *v171;

  v169 = a1;
  v170 = a2;
  v3 = type metadata accessor for FMIPUnknownItem(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v161 = (char *)&v146 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v164 = (char *)&v146 - v8;
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v146 - v10;
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v146 - v13;
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v146 - v16;
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v146 - v19;
  v21 = __chkstk_darwin(v18);
  v23 = (char *)&v146 - v22;
  __chkstk_darwin(v21);
  v25 = (char *)&v146 - v24;
  v168 = v2;
  v26 = v2[1];
  v27 = _minimumMergeRunLength(_:)(v26);
  if (v27 >= v26)
  {
    if (v26 < 0)
      goto LABEL_147;
    if (v26)
      sub_100412488(0, v26, 1, v169, v170);
  }
  else
  {
    v150 = v27;
    if (v26 >= 0)
      v28 = v26;
    else
      v28 = v26 + 1;
    if (v26 > -2)
    {
      v171 = (_QWORD *)v4;
      v151 = v25;
      if (v26 < 2)
      {
        v31 = (_QWORD *)v4;
        v33 = _swiftEmptyArrayStorage;
        v165 = (unint64_t)_swiftEmptyArrayStorage
             + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
        if (v26 != 1)
        {
          v67 = _swiftEmptyArrayStorage[2];
          v35 = (char *)_swiftEmptyArrayStorage;
          v36 = v166;
          goto LABEL_110;
        }
        v149 = v23;
        v154 = v20;
        v155 = v17;
        v159 = v14;
        v160 = v11;
        v152 = _swiftEmptyArrayStorage;
      }
      else
      {
        v149 = v23;
        v154 = v20;
        v155 = v17;
        v159 = v14;
        v160 = v11;
        v29 = v28 >> 1;
        v30 = static Array._allocateBufferUninitialized(minimumCapacity:)(v28 >> 1, v3);
        v31 = (_QWORD *)v4;
        *(_QWORD *)(v30 + 16) = v29;
        v32 = *(unsigned __int8 *)(v4 + 80);
        v152 = (_QWORD *)v30;
        v165 = v30 + ((v32 + 32) & ~v32);
      }
      v34 = 0;
      v35 = (char *)_swiftEmptyArrayStorage;
      v167 = v3;
      v36 = v166;
      while (1)
      {
        v37 = v34;
        if (v34 + 1 >= v26)
        {
          v47 = v34 + 1;
        }
        else
        {
          v162 = v26;
          v38 = *v168;
          v39 = v31[9];
          v158 = v34 + 1;
          v40 = (void (*)(char *, uint64_t, uint64_t))v31[2];
          v41 = v34;
          v42 = v151;
          v43 = v31;
          v40(v151, v38 + v39 * (v34 + 1), v3);
          v156 = v38;
          v163 = v39;
          v44 = v38 + v39 * v41;
          v45 = v149;
          v40(v149, v44, v3);
          LODWORD(v166) = v169(v42, v45);
          if (v36)
          {
            v144 = (void (*)(char *, uint64_t))v43[1];
            v144(v45, v3);
            v144(v42, v3);
            goto LABEL_124;
          }
          v153 = v35;
          v46 = (void (*)(char *, uint64_t))v43[1];
          v46(v45, v3);
          v46(v42, v3);
          v47 = v41 + 2;
          v26 = v162;
          v37 = v41;
          if (v41 + 2 < v162)
          {
            v148 = v41;
            v48 = v156;
            v157 = v163 * v47;
            v158 *= v163;
            while (1)
            {
              v49 = v47;
              v50 = v154;
              v40(v154, v48 + v157, v3);
              v51 = v155;
              v40(v155, v48 + v158, v3);
              v52 = v3;
              v53 = v169(v50, v51);
              v46(v51, v52);
              v46(v50, v52);
              if (((v166 ^ v53) & 1) != 0)
                break;
              v47 = v49 + 1;
              v26 = v162;
              v48 += v163;
              v3 = v167;
              if (v162 == v49 + 1)
              {
                v47 = v162;
                v37 = v148;
                goto LABEL_23;
              }
            }
            v3 = v167;
            v47 = v49;
            v37 = v148;
            v26 = v162;
          }
LABEL_23:
          v35 = v153;
          v31 = v171;
          if ((v166 & 1) != 0)
          {
            if (v47 < v37)
              goto LABEL_151;
            if (v37 < v47)
            {
              v54 = 0;
              v55 = v163 * (v47 - 1);
              v56 = v47 * v163;
              v57 = v37;
              v148 = v37;
              v58 = v37 * v163;
              do
              {
                if (v57 != v47 + v54 - 1)
                {
                  v166 = v36;
                  v61 = v156;
                  if (!v156)
                    goto LABEL_154;
                  v62 = v47;
                  v63 = v156 + v58;
                  v158 = v156 + v55;
                  v157 = v31[4];
                  ((void (*)(char *, uint64_t, uint64_t))v157)(v161, v156 + v58, v167);
                  if (v58 < v55 || v63 >= v61 + v56)
                  {
                    v59 = v61 + v58;
                    v60 = v158;
                    v3 = v167;
                    swift_arrayInitWithTakeFrontToBack(v59, v158);
                  }
                  else
                  {
                    v3 = v167;
                    v60 = v158;
                    if (v58 != v55)
                      swift_arrayInitWithTakeBackToFront(v63, v158);
                  }
                  ((void (*)(Swift::Int, char *, uint64_t))v157)(v60, v161, v3);
                  v31 = v171;
                  v36 = v166;
                  v47 = v62;
                }
                ++v57;
                --v54;
                v55 -= v163;
                v56 -= v163;
                v58 += v163;
              }
              while (v57 < v47 + v54);
              v35 = v153;
              v37 = v148;
              v26 = v162;
            }
          }
        }
        if (v47 >= v26)
          goto LABEL_46;
        if (__OFSUB__(v47, v37))
          goto LABEL_148;
        if (v47 - v37 >= v150)
        {
LABEL_46:
          if (v47 < v37)
            goto LABEL_146;
          goto LABEL_47;
        }
        if (__OFADD__(v37, v150))
          goto LABEL_149;
        v64 = v37 + v150 >= v26 ? v26 : v37 + v150;
        if (v64 < v37)
          break;
        if (v47 == v64)
          goto LABEL_46;
        v166 = v36;
        v153 = v35;
        v117 = (char *)v31[2];
        v156 = v31[9];
        v157 = (Swift::Int)v117;
        v118 = v156 * (v47 - 1);
        v119 = v47 * v156;
        v148 = v37;
        v147 = v64;
        do
        {
          v162 = v47;
          v120 = 0;
          v158 = v119;
          while (1)
          {
            v163 = v37;
            v121 = *v168;
            v122 = v119 + v120 + *v168;
            v123 = v159;
            v124 = (void (*)(char *, uint64_t, uint64_t))v157;
            ((void (*)(char *, Swift::Int, uint64_t))v157)(v159, v122, v3);
            v125 = v118;
            v126 = v118 + v120 + v121;
            v127 = v160;
            v124(v160, v126, v3);
            v128 = v166;
            v129 = v169(v123, v127);
            v166 = v128;
            if (v128)
            {
              v143 = (void (*)(char *, uint64_t))v171[1];
              v143(v127, v3);
              v143(v123, v3);
              swift_bridgeObjectRelease(v153);
              goto LABEL_126;
            }
            v130 = v129;
            v131 = (void (*)(char *, uint64_t))v171[1];
            v131(v127, v3);
            v131(v123, v3);
            if ((v130 & 1) == 0)
              break;
            v132 = *v168;
            if (!*v168)
              goto LABEL_153;
            v118 = v125;
            v119 = v158;
            v133 = v132 + v158 + v120;
            v134 = (char *)(v132 + v125 + v120);
            v135 = (void (*)(char *, uint64_t, uint64_t))v171[4];
            v135(v164, v133, v167);
            swift_arrayInitWithTakeFrontToBack(v133, v134);
            v3 = v167;
            v135(v134, (uint64_t)v164, v167);
            v120 -= v156;
            v37 = v163 + 1;
            if (v162 == v163 + 1)
              goto LABEL_104;
          }
          v118 = v125;
          v119 = v158;
LABEL_104:
          v47 = v162 + 1;
          v118 += v156;
          v119 += v156;
          v37 = v148;
        }
        while (v162 + 1 != v147);
        v47 = v147;
        v35 = v153;
        v36 = v166;
        if (v147 < v148)
          goto LABEL_146;
LABEL_47:
        if ((swift_isUniquelyReferenced_nonNull_native(v35) & 1) == 0)
          v35 = sub_10020C830(0, *((_QWORD *)v35 + 2) + 1, 1, v35);
        v66 = *((_QWORD *)v35 + 2);
        v65 = *((_QWORD *)v35 + 3);
        v67 = v66 + 1;
        v162 = v47;
        if (v66 >= v65 >> 1)
          v35 = sub_10020C830((char *)(v65 > 1), v66 + 1, 1, v35);
        *((_QWORD *)v35 + 2) = v67;
        v68 = v35 + 32;
        v69 = &v35[16 * v66 + 32];
        v70 = v162;
        *(_QWORD *)v69 = v37;
        *((_QWORD *)v69 + 1) = v70;
        if (v66)
        {
LABEL_52:
          v71 = v67 - 1;
          if (v67 >= 4)
          {
            v76 = &v68[16 * v67];
            v77 = *((_QWORD *)v76 - 8);
            v78 = *((_QWORD *)v76 - 7);
            v82 = __OFSUB__(v78, v77);
            v79 = v78 - v77;
            if (v82)
              goto LABEL_131;
            v81 = *((_QWORD *)v76 - 6);
            v80 = *((_QWORD *)v76 - 5);
            v82 = __OFSUB__(v80, v81);
            v74 = v80 - v81;
            v75 = v82;
            if (v82)
              goto LABEL_132;
            v83 = v67 - 2;
            v84 = &v68[16 * v67 - 32];
            v86 = *(_QWORD *)v84;
            v85 = *((_QWORD *)v84 + 1);
            v82 = __OFSUB__(v85, v86);
            v87 = v85 - v86;
            if (v82)
              goto LABEL_134;
            v82 = __OFADD__(v74, v87);
            v88 = v74 + v87;
            if (v82)
              goto LABEL_137;
            if (v88 >= v79)
            {
              v106 = &v68[16 * v71];
              v108 = *(_QWORD *)v106;
              v107 = *((_QWORD *)v106 + 1);
              v82 = __OFSUB__(v107, v108);
              v109 = v107 - v108;
              if (v82)
                goto LABEL_141;
              v99 = v74 < v109;
            }
            else
            {
LABEL_65:
              if ((v75 & 1) != 0)
                goto LABEL_133;
              v83 = v67 - 2;
              v89 = &v68[16 * v67 - 32];
              v91 = *(_QWORD *)v89;
              v90 = *((_QWORD *)v89 + 1);
              v92 = __OFSUB__(v90, v91);
              v93 = v90 - v91;
              v94 = v92;
              if (v92)
                goto LABEL_136;
              v95 = &v68[16 * v71];
              v97 = *(_QWORD *)v95;
              v96 = *((_QWORD *)v95 + 1);
              v82 = __OFSUB__(v96, v97);
              v98 = v96 - v97;
              if (v82)
                goto LABEL_139;
              if (__OFADD__(v93, v98))
                goto LABEL_140;
              if (v93 + v98 < v74)
                goto LABEL_77;
              v99 = v74 < v98;
            }
            if (v99)
              v71 = v83;
          }
          else
          {
            if (v67 == 3)
            {
              v73 = *((_QWORD *)v35 + 4);
              v72 = *((_QWORD *)v35 + 5);
              v82 = __OFSUB__(v72, v73);
              v74 = v72 - v73;
              v75 = v82;
              goto LABEL_65;
            }
            v100 = *((_QWORD *)v35 + 4);
            v101 = *((_QWORD *)v35 + 5);
            v82 = __OFSUB__(v101, v100);
            v93 = v101 - v100;
            v94 = v82;
LABEL_77:
            if ((v94 & 1) != 0)
              goto LABEL_135;
            v102 = &v68[16 * v71];
            v104 = *(_QWORD *)v102;
            v103 = *((_QWORD *)v102 + 1);
            v82 = __OFSUB__(v103, v104);
            v105 = v103 - v104;
            if (v82)
              goto LABEL_138;
            if (v105 < v93)
              goto LABEL_94;
          }
          v110 = v71 - 1;
          if (v71 - 1 >= v67)
          {
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
            break;
          }
          if (!*v168)
            goto LABEL_152;
          v111 = v35;
          v112 = &v68[16 * v110];
          v113 = *(_QWORD *)v112;
          v114 = &v68[16 * v71];
          v115 = *((_QWORD *)v114 + 1);
          sub_1004129FC(*v168 + v171[9] * *(_QWORD *)v112, *v168 + v171[9] * *(_QWORD *)v114, *v168 + v171[9] * v115, v165, (uint64_t (*)(_QWORD, _QWORD))v169, v170);
          if (v36)
          {
            v136 = v111;
            goto LABEL_125;
          }
          if (v115 < v113)
            goto LABEL_128;
          if (v71 > *((_QWORD *)v111 + 2))
            goto LABEL_129;
          *(_QWORD *)v112 = v113;
          *(_QWORD *)&v68[16 * v110 + 8] = v115;
          v116 = *((_QWORD *)v111 + 2);
          if (v71 >= v116)
            goto LABEL_130;
          v35 = v111;
          v67 = v116 - 1;
          memmove(&v68[16 * v71], v114 + 16, 16 * (v116 - 1 - v71));
          *((_QWORD *)v35 + 2) = v116 - 1;
          if (v116 <= 2)
            goto LABEL_94;
          goto LABEL_52;
        }
        v67 = 1;
LABEL_94:
        v3 = v167;
        v26 = v168[1];
        v34 = v162;
        v31 = v171;
        if (v162 >= v26)
        {
          v33 = v152;
LABEL_110:
          v152 = v33;
          if (v67 >= 2)
          {
            v137 = *v168;
            do
            {
              v138 = v67 - 2;
              if (v67 < 2)
                goto LABEL_142;
              if (!v137)
                goto LABEL_155;
              v139 = *(_QWORD *)&v35[16 * v138 + 32];
              v140 = *(_QWORD *)&v35[16 * v67 + 24];
              sub_1004129FC(v137 + v171[9] * v139, v137 + v171[9] * *(_QWORD *)&v35[16 * v67 + 16], v137 + v171[9] * v140, v165, (uint64_t (*)(_QWORD, _QWORD))v169, v170);
              if (v36)
                break;
              if (v140 < v139)
                goto LABEL_143;
              if ((swift_isUniquelyReferenced_nonNull_native(v35) & 1) == 0)
                v35 = sub_10020CE70((uint64_t)v35);
              if (v138 >= *((_QWORD *)v35 + 2))
                goto LABEL_144;
              v141 = &v35[16 * v138 + 32];
              *(_QWORD *)v141 = v139;
              *((_QWORD *)v141 + 1) = v140;
              v142 = *((_QWORD *)v35 + 2);
              if (v67 > v142)
                goto LABEL_145;
              memmove(&v35[16 * v67 + 16], &v35[16 * v67 + 32], 16 * (v142 - v67));
              *((_QWORD *)v35 + 2) = v142 - 1;
              v67 = v142 - 1;
            }
            while (v142 > 2);
          }
LABEL_124:
          v136 = v35;
LABEL_125:
          swift_bridgeObjectRelease(v136);
LABEL_126:
          v145 = v152;
          v152[2] = 0;
          swift_bridgeObjectRelease(v145);
          return;
        }
      }
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
    }
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
  }
}

void sub_100410998(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;
  Swift::Int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char *v25;
  id v26;
  void *v27;
  char *v29;
  Swift::Int v30;
  uint64_t v31;
  unint64_t v32;
  Swift::Int v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  Swift::Int v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char *v44;
  char *v45;
  void **v46;
  void *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  Swift::Int v57;
  int v58;
  id v59;
  char *v60;
  uint64_t *v61;
  Swift::Int v62;
  Swift::Int v63;
  uint64_t *v64;
  uint64_t v65;
  Swift::Int v66;
  uint64_t v67;
  char *v68;
  id v69;
  Swift::Int v70;
  char *v71;
  Swift::Int v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  void *v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  char *v82;
  id v83;
  void *v84;
  unint64_t v85;
  unint64_t v86;
  char *v87;
  char *v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  BOOL v100;
  unint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  BOOL v110;
  uint64_t v111;
  char v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  BOOL v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  unint64_t v133;
  char *v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t *v142;
  uint64_t v143;
  uint64_t v144;
  Swift::Int v145;
  uint64_t v146;
  uint64_t v147;
  Swift::Int v148;
  char *v149;
  Swift::Int v150;
  Swift::Int v151;
  uint64_t v152;
  uint64_t v153;
  void **v154;
  uint64_t v155;
  uint64_t v156;
  int v157;
  Swift::Int v158;
  Swift::Int v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;

  v2 = v1;
  v4 = a1[1];
  v5 = _minimumMergeRunLength(_:)(v4);
  v151 = v4;
  if (v5 >= v4)
  {
    if (v4 < 0)
      goto LABEL_179;
    if ((unint64_t)v4 < 2)
      return;
    v10 = *a1;
    v11 = -1;
    v12 = 1;
    v160 = *a1;
    while (1)
    {
      v155 = v12;
      v15 = *(char **)(v160 + 8 * v12);
      v156 = v11;
      v152 = v10;
      while (1)
      {
        v16 = *(_QWORD *)&v15[OBJC_IVAR____TtC6FindMy12FMAnnotation_title + 8];
        if (v16)
        {
          v17 = *(_QWORD *)&v15[OBJC_IVAR____TtC6FindMy12FMAnnotation_title];
          v18 = *(_QWORD *)&v15[OBJC_IVAR____TtC6FindMy12FMAnnotation_title + 8];
        }
        else
        {
          v17 = 0;
          v18 = 0xE000000000000000;
        }
        v19 = *(void **)v10;
        v20 = (uint64_t *)(*(_QWORD *)v10 + OBJC_IVAR____TtC6FindMy12FMAnnotation_title);
        v21 = v20[1];
        if (!v21)
          break;
        v22 = *v20;
        v23 = v20[1];
        if (v17 == *v20)
          goto LABEL_21;
LABEL_22:
        v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v18, v22, v23, 1);
        swift_bridgeObjectRetain(v21);
        v25 = v15;
        v26 = v19;
        swift_bridgeObjectRetain(v16);

        swift_bridgeObjectRelease(v23);
        swift_bridgeObjectRelease(v18);
        if ((v24 & 1) != 0)
        {
          if (!v160)
            goto LABEL_183;
          v27 = *(void **)v10;
          v15 = *(char **)(v10 + 8);
          *(_QWORD *)v10 = v15;
          *(_QWORD *)(v10 + 8) = v27;
          v10 -= 8;
          if (!__CFADD__(v11++, 1))
            continue;
        }
        goto LABEL_12;
      }
      v22 = 0;
      v23 = 0xE000000000000000;
      if (v17)
        goto LABEL_22;
LABEL_21:
      if (v18 != v23)
        goto LABEL_22;
      swift_bridgeObjectRetain(v20[1]);
      v13 = v15;
      v14 = v19;
      swift_bridgeObjectRetain(v16);

      swift_bridgeObjectRelease_n(v18, 2);
LABEL_12:
      v12 = v155 + 1;
      v10 = v152 + 8;
      v11 = v156 - 1;
      if (v155 + 1 == v151)
        return;
    }
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_188;
  v145 = v5;
  v142 = a1;
  if (v4 < 2)
  {
    v29 = (char *)_swiftEmptyArrayStorage;
    v162 = (uint64_t)_swiftEmptyArrayStorage;
    v154 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      v32 = _swiftEmptyArrayStorage[2];
LABEL_145:
      if (v32 >= 2)
      {
        v135 = *v142;
        do
        {
          v136 = v32 - 2;
          if (v32 < 2)
            goto LABEL_174;
          if (!v135)
            goto LABEL_187;
          v137 = *(_QWORD *)&v29[16 * v136 + 32];
          v138 = *(_QWORD *)&v29[16 * v32 + 24];
          sub_100412FA0((void **)(v135 + 8 * v137), (void **)(v135 + 8 * *(_QWORD *)&v29[16 * v32 + 16]), v135 + 8 * v138, v154);
          if (v2)
            break;
          if (v138 < v137)
            goto LABEL_175;
          if ((swift_isUniquelyReferenced_nonNull_native(v29) & 1) == 0)
            v29 = sub_10020CE70((uint64_t)v29);
          if (v136 >= *((_QWORD *)v29 + 2))
            goto LABEL_176;
          v139 = &v29[16 * v136 + 32];
          *(_QWORD *)v139 = v137;
          *((_QWORD *)v139 + 1) = v138;
          v140 = *((_QWORD *)v29 + 2);
          if (v32 > v140)
            goto LABEL_177;
          memmove(&v29[16 * v32 + 16], &v29[16 * v32 + 32], 16 * (v140 - v32));
          *((_QWORD *)v29 + 2) = v140 - 1;
          v32 = v140 - 1;
        }
        while (v140 > 2);
      }
LABEL_156:
      swift_bridgeObjectRelease(v29);
      *(_QWORD *)((v162 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()(v141);
      swift_bridgeObjectRelease(v162);
      return;
    }
  }
  else
  {
    v7 = v6 >> 1;
    v8 = type metadata accessor for FMAnnotation();
    v9 = static Array._allocateBufferUninitialized(minimumCapacity:)(v7, v8);
    *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
    v154 = (void **)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    v162 = v9;
  }
  v30 = 0;
  v31 = *a1;
  v143 = *a1 - 8;
  v144 = *a1 + 16;
  v29 = (char *)_swiftEmptyArrayStorage;
  v161 = *a1;
LABEL_31:
  v33 = v30 + 1;
  v149 = v29;
  v150 = v30;
  if (v30 + 1 >= v4)
  {
    v38 = v30;
    goto LABEL_69;
  }
  v146 = v2;
  v34 = *(char **)(v31 + 8 * v33);
  v35 = *(_QWORD *)&v34[OBJC_IVAR____TtC6FindMy12FMAnnotation_title + 8];
  if (v35)
  {
    v36 = *(_QWORD *)&v34[OBJC_IVAR____TtC6FindMy12FMAnnotation_title];
    v37 = *(_QWORD *)&v34[OBJC_IVAR____TtC6FindMy12FMAnnotation_title + 8];
  }
  else
  {
    v36 = 0;
    v37 = 0xE000000000000000;
  }
  v39 = *(char **)(v31 + 8 * v30);
  v40 = &v39[OBJC_IVAR____TtC6FindMy12FMAnnotation_title];
  v41 = *(_QWORD *)&v39[OBJC_IVAR____TtC6FindMy12FMAnnotation_title + 8];
  if (v41)
  {
    v42 = *(_QWORD *)v40;
    v43 = *((_QWORD *)v40 + 1);
    if (v36 != *(_QWORD *)v40)
      goto LABEL_42;
  }
  else
  {
    v42 = 0;
    v43 = 0xE000000000000000;
    if (v36)
    {
LABEL_42:
      v157 = _stringCompareWithSmolCheck(_:_:expecting:)(v36, v37, v42, v43, 1);
      goto LABEL_43;
    }
  }
  if (v37 != v43)
    goto LABEL_42;
  v157 = 0;
LABEL_43:
  swift_bridgeObjectRetain(v41);
  v44 = v34;
  v45 = v39;
  swift_bridgeObjectRetain(v35);

  swift_bridgeObjectRelease(v43);
  swift_bridgeObjectRelease(v37);
  v38 = v150;
  v4 = v151;
  v33 = v150 + 2;
  if (v150 + 2 >= v151)
  {
    v29 = v149;
    v31 = v161;
  }
  else
  {
    v46 = (void **)(v144 + 8 * v150);
    while (1)
    {
      v47 = *v46;
      v48 = (uint64_t *)((char *)*v46 + OBJC_IVAR____TtC6FindMy12FMAnnotation_title);
      v49 = v48[1];
      if (v49)
      {
        v50 = *v48;
        v51 = v48[1];
      }
      else
      {
        v50 = 0;
        v51 = 0xE000000000000000;
      }
      v52 = (char *)*(v46 - 1);
      v53 = &v52[OBJC_IVAR____TtC6FindMy12FMAnnotation_title];
      v54 = *(_QWORD *)&v52[OBJC_IVAR____TtC6FindMy12FMAnnotation_title + 8];
      if (v54)
      {
        v55 = *(_QWORD *)v53;
        v56 = *((_QWORD *)v53 + 1);
      }
      else
      {
        v55 = 0;
        v56 = 0xE000000000000000;
      }
      v57 = v33;
      if (v50 == v55 && v51 == v56)
        v58 = 0;
      else
        v58 = _stringCompareWithSmolCheck(_:_:expecting:)(v50, v51, v55, v56, 1);
      swift_bridgeObjectRetain(v54);
      v59 = v47;
      v60 = v52;
      swift_bridgeObjectRetain(v49);

      swift_bridgeObjectRelease(v56);
      swift_bridgeObjectRelease(v51);
      if (((v157 ^ v58) & 1) != 0)
        break;
      v33 = v57 + 1;
      ++v46;
      v4 = v151;
      v29 = v149;
      v31 = v161;
      if (v151 == v57 + 1)
      {
        v33 = v151;
        goto LABEL_60;
      }
    }
    v4 = v151;
    v29 = v149;
    v31 = v161;
    v33 = v57;
LABEL_60:
    v38 = v150;
  }
  v2 = v146;
  if ((v157 & 1) != 0)
  {
    if (v33 < v38)
      goto LABEL_180;
    if (v38 < v33)
    {
      v61 = (uint64_t *)(v143 + 8 * v33);
      v62 = v33;
      v63 = v38;
      v64 = (uint64_t *)(v31 + 8 * v38);
      do
      {
        if (v63 != --v62)
        {
          if (!v31)
            goto LABEL_186;
          v65 = *v64;
          *v64 = *v61;
          *v61 = v65;
        }
        ++v63;
        --v61;
        ++v64;
      }
      while (v63 < v62);
    }
  }
LABEL_69:
  if (v33 >= v4)
    goto LABEL_96;
  if (__OFSUB__(v33, v38))
    goto LABEL_178;
  if (v33 - v38 >= v145)
    goto LABEL_96;
  if (__OFADD__(v38, v145))
    goto LABEL_181;
  if (v38 + v145 >= v4)
    v66 = v4;
  else
    v66 = v38 + v145;
  if (v66 >= v38)
  {
    if (v33 == v66)
      goto LABEL_96;
    v147 = v2;
    v148 = v66;
    v67 = v143 + 8 * v33;
LABEL_82:
    v158 = v33;
    v71 = *(char **)(v31 + 8 * v33);
    v72 = v38;
    v153 = v67;
    while (1)
    {
      v73 = *(_QWORD *)&v71[OBJC_IVAR____TtC6FindMy12FMAnnotation_title + 8];
      if (v73)
      {
        v74 = *(_QWORD *)&v71[OBJC_IVAR____TtC6FindMy12FMAnnotation_title];
        v75 = *(_QWORD *)&v71[OBJC_IVAR____TtC6FindMy12FMAnnotation_title + 8];
      }
      else
      {
        v74 = 0;
        v75 = 0xE000000000000000;
      }
      v76 = *(void **)v67;
      v77 = (uint64_t *)(*(_QWORD *)v67 + OBJC_IVAR____TtC6FindMy12FMAnnotation_title);
      v78 = v77[1];
      if (v78)
      {
        v79 = *v77;
        v80 = v77[1];
        if (v74 != *v77)
          goto LABEL_91;
      }
      else
      {
        v79 = 0;
        v80 = 0xE000000000000000;
        if (v74)
          goto LABEL_91;
      }
      if (v75 == v80)
      {
        swift_bridgeObjectRetain(v77[1]);
        v68 = v71;
        v69 = v76;
        swift_bridgeObjectRetain(v73);

        swift_bridgeObjectRelease_n(v75, 2);
LABEL_80:
        v70 = v158;
        v31 = v161;
LABEL_81:
        v33 = v70 + 1;
        v67 = v153 + 8;
        v38 = v150;
        if (v33 != v148)
          goto LABEL_82;
        v33 = v148;
        v2 = v147;
        v29 = v149;
LABEL_96:
        if (v33 < v38)
          goto LABEL_173;
        if ((swift_isUniquelyReferenced_nonNull_native(v29) & 1) == 0)
          v29 = sub_10020C830(0, *((_QWORD *)v29 + 2) + 1, 1, v29);
        v86 = *((_QWORD *)v29 + 2);
        v85 = *((_QWORD *)v29 + 3);
        v32 = v86 + 1;
        v31 = v161;
        if (v86 >= v85 >> 1)
        {
          v134 = sub_10020C830((char *)(v85 > 1), v86 + 1, 1, v29);
          v31 = v161;
          v29 = v134;
        }
        *((_QWORD *)v29 + 2) = v32;
        v87 = v29 + 32;
        v88 = &v29[16 * v86 + 32];
        *(_QWORD *)v88 = v38;
        *((_QWORD *)v88 + 1) = v33;
        v159 = v33;
        if (v86)
        {
LABEL_102:
          v89 = v32 - 1;
          if (v32 >= 4)
          {
            v94 = &v87[16 * v32];
            v95 = *((_QWORD *)v94 - 8);
            v96 = *((_QWORD *)v94 - 7);
            v100 = __OFSUB__(v96, v95);
            v97 = v96 - v95;
            if (v100)
              goto LABEL_162;
            v99 = *((_QWORD *)v94 - 6);
            v98 = *((_QWORD *)v94 - 5);
            v100 = __OFSUB__(v98, v99);
            v92 = v98 - v99;
            v93 = v100;
            if (v100)
              goto LABEL_163;
            v101 = v32 - 2;
            v102 = &v87[16 * v32 - 32];
            v104 = *(_QWORD *)v102;
            v103 = *((_QWORD *)v102 + 1);
            v100 = __OFSUB__(v103, v104);
            v105 = v103 - v104;
            if (v100)
              goto LABEL_165;
            v100 = __OFADD__(v92, v105);
            v106 = v92 + v105;
            if (v100)
              goto LABEL_168;
            if (v106 >= v97)
            {
              v124 = &v87[16 * v89];
              v126 = *(_QWORD *)v124;
              v125 = *((_QWORD *)v124 + 1);
              v100 = __OFSUB__(v125, v126);
              v127 = v125 - v126;
              if (v100)
                goto LABEL_172;
              v117 = v92 < v127;
            }
            else
            {
LABEL_115:
              if ((v93 & 1) != 0)
                goto LABEL_164;
              v101 = v32 - 2;
              v107 = &v87[16 * v32 - 32];
              v109 = *(_QWORD *)v107;
              v108 = *((_QWORD *)v107 + 1);
              v110 = __OFSUB__(v108, v109);
              v111 = v108 - v109;
              v112 = v110;
              if (v110)
                goto LABEL_167;
              v113 = &v87[16 * v89];
              v115 = *(_QWORD *)v113;
              v114 = *((_QWORD *)v113 + 1);
              v100 = __OFSUB__(v114, v115);
              v116 = v114 - v115;
              if (v100)
                goto LABEL_170;
              if (__OFADD__(v111, v116))
                goto LABEL_171;
              if (v111 + v116 < v92)
                goto LABEL_127;
              v117 = v92 < v116;
            }
            if (v117)
              v89 = v101;
          }
          else
          {
            if (v32 == 3)
            {
              v91 = *((_QWORD *)v29 + 4);
              v90 = *((_QWORD *)v29 + 5);
              v100 = __OFSUB__(v90, v91);
              v92 = v90 - v91;
              v93 = v100;
              goto LABEL_115;
            }
            v118 = *((_QWORD *)v29 + 4);
            v119 = *((_QWORD *)v29 + 5);
            v100 = __OFSUB__(v119, v118);
            v111 = v119 - v118;
            v112 = v100;
LABEL_127:
            if ((v112 & 1) != 0)
              goto LABEL_166;
            v120 = &v87[16 * v89];
            v122 = *(_QWORD *)v120;
            v121 = *((_QWORD *)v120 + 1);
            v100 = __OFSUB__(v121, v122);
            v123 = v121 - v122;
            if (v100)
              goto LABEL_169;
            if (v123 < v111)
              goto LABEL_30;
          }
          v128 = v89 - 1;
          if (v89 - 1 >= v32)
          {
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
LABEL_171:
            __break(1u);
LABEL_172:
            __break(1u);
LABEL_173:
            __break(1u);
LABEL_174:
            __break(1u);
LABEL_175:
            __break(1u);
LABEL_176:
            __break(1u);
LABEL_177:
            __break(1u);
LABEL_178:
            __break(1u);
LABEL_179:
            __break(1u);
LABEL_180:
            __break(1u);
LABEL_181:
            __break(1u);
            break;
          }
          if (!v31)
            goto LABEL_185;
          v129 = &v87[16 * v128];
          v130 = *(_QWORD *)v129;
          v131 = &v87[16 * v89];
          v132 = *((_QWORD *)v131 + 1);
          sub_100412FA0((void **)(v31 + 8 * *(_QWORD *)v129), (void **)(v31 + 8 * *(_QWORD *)v131), v31 + 8 * v132, v154);
          if (v2)
            goto LABEL_156;
          if (v132 < v130)
            goto LABEL_159;
          if (v89 > *((_QWORD *)v29 + 2))
            goto LABEL_160;
          *(_QWORD *)v129 = v130;
          *(_QWORD *)&v87[16 * v128 + 8] = v132;
          v133 = *((_QWORD *)v29 + 2);
          if (v89 >= v133)
            goto LABEL_161;
          v32 = v133 - 1;
          memmove(&v87[16 * v89], v131 + 16, 16 * (v133 - 1 - v89));
          *((_QWORD *)v29 + 2) = v133 - 1;
          v31 = v161;
          if (v133 <= 2)
            goto LABEL_30;
          goto LABEL_102;
        }
        v32 = 1;
LABEL_30:
        v30 = v159;
        v4 = v151;
        if (v159 >= v151)
          goto LABEL_145;
        goto LABEL_31;
      }
LABEL_91:
      v81 = _stringCompareWithSmolCheck(_:_:expecting:)(v74, v75, v79, v80, 1);
      swift_bridgeObjectRetain(v78);
      v82 = v71;
      v83 = v76;
      swift_bridgeObjectRetain(v73);

      swift_bridgeObjectRelease(v80);
      swift_bridgeObjectRelease(v75);
      if ((v81 & 1) == 0)
        goto LABEL_80;
      v70 = v158;
      v31 = v161;
      if (!v161)
        goto LABEL_184;
      v84 = *(void **)v67;
      v71 = *(char **)(v67 + 8);
      *(_QWORD *)v67 = v71;
      *(_QWORD *)(v67 + 8) = v84;
      v67 -= 8;
      if (v158 == ++v72)
        goto LABEL_81;
    }
  }
  __break(1u);
LABEL_183:
  __break(1u);
LABEL_184:
  __break(1u);
LABEL_185:
  __break(1u);
LABEL_186:
  __break(1u);
LABEL_187:
  __break(1u);
LABEL_188:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

void sub_1004113D8(uint64_t (*a1)(void **, void **))
{
  uint64_t *v1;
  uint64_t v2;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  Swift::Int v10;
  uint64_t v11;
  Swift::Int v12;
  char *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  int v18;
  int v19;
  void **v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  int v25;
  uint64_t *v26;
  Swift::Int v27;
  Swift::Int v28;
  uint64_t *v29;
  uint64_t v30;
  Swift::Int v31;
  char *v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  char *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  unint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  char v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  unint64_t v85;
  void **v86;
  void *v87;
  Swift::Int v88;
  void **v89;
  void **v90;
  void *v91;
  id v92;
  id v93;
  char v94;
  char v95;
  void *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  unint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  Swift::Int v113;
  Swift::Int v114;
  Swift::Int v115;
  Swift::Int v116;
  Swift::Int v117;
  Swift::Int v118;
  id *v119;
  uint64_t v120;
  void *v122;
  void *v123;
  uint64_t v124;

  v3 = v1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_145;
    if (v3)
      sub_100412734(0, v3, 1, a1);
    return;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 <= -2)
    goto LABEL_154;
  v115 = v4;
  v111 = v1;
  if (v3 < 2)
  {
    v9 = (char *)_swiftEmptyArrayStorage;
    v124 = (uint64_t)_swiftEmptyArrayStorage;
    v119 = (id *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      v35 = _swiftEmptyArrayStorage[2];
LABEL_105:
      if (v35 >= 2)
      {
        v99 = *v111;
        do
        {
          v100 = v35 - 2;
          if (v35 < 2)
            goto LABEL_140;
          if (!v99)
            goto LABEL_153;
          v101 = (uint64_t)v9;
          v102 = *(_QWORD *)&v9[16 * v100 + 32];
          v103 = *(_QWORD *)&v9[16 * v35 + 24];
          sub_1004133FC((id *)(v99 + 8 * v102), (id *)(v99 + 8 * *(_QWORD *)&v9[16 * v35 + 16]), v99 + 8 * v103, v119, a1);
          if (v2)
          {
            v98 = v101;
            goto LABEL_122;
          }
          if (v103 < v102)
            goto LABEL_141;
          if ((swift_isUniquelyReferenced_nonNull_native(v101) & 1) != 0)
            v104 = (char *)v101;
          else
            v104 = sub_10020CE70(v101);
          if (v100 >= *((_QWORD *)v104 + 2))
            goto LABEL_142;
          v105 = &v104[16 * v100 + 32];
          *(_QWORD *)v105 = v102;
          *((_QWORD *)v105 + 1) = v103;
          v106 = *((_QWORD *)v104 + 2);
          if (v35 > v106)
            goto LABEL_143;
          v107 = v104;
          memmove(&v104[16 * v35 + 16], &v104[16 * v35 + 32], 16 * (v106 - v35));
          v9 = v107;
          *((_QWORD *)v107 + 2) = v106 - 1;
          v35 = v106 - 1;
        }
        while (v106 > 2);
      }
      v98 = (uint64_t)v9;
LABEL_122:
      swift_bridgeObjectRelease(v98);
      goto LABEL_123;
    }
  }
  else
  {
    v6 = v5 >> 1;
    v7 = type metadata accessor for FMUnknownItemAnnotation(0);
    v8 = static Array._allocateBufferUninitialized(minimumCapacity:)(v6, v7);
    *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    v119 = (id *)((v8 & 0xFFFFFFFFFFFFFF8) + 32);
    v124 = v8;
  }
  v10 = 0;
  v11 = *v1;
  v112 = *v1 + 16;
  v110 = *v1 - 8;
  v9 = (char *)_swiftEmptyArrayStorage;
  v116 = v3;
  v120 = *v1;
LABEL_13:
  v12 = v10++;
  if (v10 < v3)
  {
    v13 = v9;
    v14 = *(void **)(v11 + 8 * v10);
    v122 = *(void **)(v11 + 8 * v12);
    v15 = v122;
    v123 = v14;
    v16 = v14;
    v17 = v15;
    v18 = a1(&v123, &v122);
    if (v2)
    {
      swift_bridgeObjectRelease(v13);

      goto LABEL_123;
    }
    v19 = v18;

    v10 = v12 + 2;
    if (v12 + 2 < v3)
    {
      v113 = v12;
      v20 = (void **)(v112 + 8 * v12);
      while (1)
      {
        v21 = *v20;
        v122 = *(v20 - 1);
        v22 = v122;
        v123 = v21;
        v23 = v21;
        v24 = v22;
        v25 = a1(&v123, &v122);

        if (((v19 ^ v25) & 1) != 0)
          break;
        ++v10;
        ++v20;
        v3 = v116;
        if (v116 == v10)
        {
          v10 = v116;
          goto LABEL_21;
        }
      }
      v3 = v116;
LABEL_21:
      v12 = v113;
    }
    v9 = v13;
    v11 = v120;
    if ((v19 & 1) != 0)
    {
      if (v10 < v12)
        goto LABEL_149;
      if (v12 < v10)
      {
        v26 = (uint64_t *)(v110 + 8 * v10);
        v27 = v10;
        v28 = v12;
        v29 = (uint64_t *)(v120 + 8 * v12);
        do
        {
          if (v28 != --v27)
          {
            if (!v120)
              goto LABEL_152;
            v30 = *v29;
            *v29 = *v26;
            *v26 = v30;
          }
          ++v28;
          --v26;
          ++v29;
        }
        while (v28 < v27);
      }
    }
  }
  if (v10 >= v3)
    goto LABEL_40;
  if (__OFSUB__(v10, v12))
    goto LABEL_146;
  if (v10 - v12 >= v115)
  {
LABEL_40:
    if (v10 < v12)
      goto LABEL_144;
    goto LABEL_41;
  }
  if (__OFADD__(v12, v115))
    goto LABEL_147;
  if (v12 + v115 >= v3)
    v31 = v3;
  else
    v31 = v12 + v115;
  if (v31 >= v12)
  {
    if (v10 == v31)
      goto LABEL_40;
    v109 = v9;
    v86 = (void **)(v110 + 8 * v10);
    v114 = v12;
    v118 = v31;
    while (1)
    {
      v87 = *(void **)(v11 + 8 * v10);
      v88 = v12;
      v89 = v86;
      v90 = v86;
      while (1)
      {
        v122 = *v90;
        v91 = v122;
        v123 = v87;
        v92 = v87;
        v93 = v91;
        v94 = a1(&v123, &v122);
        if (v2)
        {
          swift_bridgeObjectRelease(v109);

LABEL_123:
          *(_QWORD *)((v124 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
          specialized Array._endMutation()(v108);
          swift_bridgeObjectRelease(v124);
          return;
        }
        v95 = v94;

        if ((v95 & 1) == 0)
          break;
        v11 = v120;
        if (!v120)
          goto LABEL_151;
        v96 = *v90;
        v87 = v90[1];
        *v90 = v87;
        v90[1] = v96;
        --v90;
        if (v10 == ++v88)
          goto LABEL_99;
      }
      v11 = v120;
LABEL_99:
      ++v10;
      v86 = v89 + 1;
      v12 = v114;
      if (v10 == v118)
      {
        v10 = v118;
        v9 = v109;
        if (v118 < v114)
          goto LABEL_144;
LABEL_41:
        v32 = v9;
        if ((swift_isUniquelyReferenced_nonNull_native(v9) & 1) != 0)
          v9 = v32;
        else
          v9 = sub_10020C830(0, *((_QWORD *)v32 + 2) + 1, 1, v32);
        v34 = *((_QWORD *)v9 + 2);
        v33 = *((_QWORD *)v9 + 3);
        v35 = v34 + 1;
        v11 = v120;
        if (v34 >= v33 >> 1)
        {
          v97 = sub_10020C830((char *)(v33 > 1), v34 + 1, 1, v9);
          v11 = v120;
          v9 = v97;
        }
        *((_QWORD *)v9 + 2) = v35;
        v36 = v9 + 32;
        v37 = &v9[16 * v34 + 32];
        *(_QWORD *)v37 = v12;
        *((_QWORD *)v37 + 1) = v10;
        if (v34)
        {
          v117 = v10;
          while (1)
          {
            v38 = v35 - 1;
            if (v35 >= 4)
            {
              v43 = &v36[16 * v35];
              v44 = *((_QWORD *)v43 - 8);
              v45 = *((_QWORD *)v43 - 7);
              v49 = __OFSUB__(v45, v44);
              v46 = v45 - v44;
              if (v49)
                goto LABEL_129;
              v48 = *((_QWORD *)v43 - 6);
              v47 = *((_QWORD *)v43 - 5);
              v49 = __OFSUB__(v47, v48);
              v41 = v47 - v48;
              v42 = v49;
              if (v49)
                goto LABEL_130;
              v50 = v35 - 2;
              v51 = &v36[16 * v35 - 32];
              v53 = *(_QWORD *)v51;
              v52 = *((_QWORD *)v51 + 1);
              v49 = __OFSUB__(v52, v53);
              v54 = v52 - v53;
              if (v49)
                goto LABEL_132;
              v49 = __OFADD__(v41, v54);
              v55 = v41 + v54;
              if (v49)
                goto LABEL_135;
              if (v55 >= v46)
              {
                v73 = &v36[16 * v38];
                v75 = *(_QWORD *)v73;
                v74 = *((_QWORD *)v73 + 1);
                v49 = __OFSUB__(v74, v75);
                v76 = v74 - v75;
                if (v49)
                  goto LABEL_139;
                v66 = v41 < v76;
                goto LABEL_78;
              }
            }
            else
            {
              if (v35 != 3)
              {
                v67 = *((_QWORD *)v9 + 4);
                v68 = *((_QWORD *)v9 + 5);
                v49 = __OFSUB__(v68, v67);
                v60 = v68 - v67;
                v61 = v49;
                goto LABEL_72;
              }
              v40 = *((_QWORD *)v9 + 4);
              v39 = *((_QWORD *)v9 + 5);
              v49 = __OFSUB__(v39, v40);
              v41 = v39 - v40;
              v42 = v49;
            }
            if ((v42 & 1) != 0)
              goto LABEL_131;
            v50 = v35 - 2;
            v56 = &v36[16 * v35 - 32];
            v58 = *(_QWORD *)v56;
            v57 = *((_QWORD *)v56 + 1);
            v59 = __OFSUB__(v57, v58);
            v60 = v57 - v58;
            v61 = v59;
            if (v59)
              goto LABEL_134;
            v62 = &v36[16 * v38];
            v64 = *(_QWORD *)v62;
            v63 = *((_QWORD *)v62 + 1);
            v49 = __OFSUB__(v63, v64);
            v65 = v63 - v64;
            if (v49)
              goto LABEL_137;
            if (__OFADD__(v60, v65))
              goto LABEL_138;
            if (v60 + v65 >= v41)
            {
              v66 = v41 < v65;
LABEL_78:
              if (v66)
                v38 = v50;
              goto LABEL_80;
            }
LABEL_72:
            if ((v61 & 1) != 0)
              goto LABEL_133;
            v69 = &v36[16 * v38];
            v71 = *(_QWORD *)v69;
            v70 = *((_QWORD *)v69 + 1);
            v49 = __OFSUB__(v70, v71);
            v72 = v70 - v71;
            if (v49)
              goto LABEL_136;
            if (v72 < v60)
              goto LABEL_89;
LABEL_80:
            v77 = v38 - 1;
            if (v38 - 1 >= v35)
            {
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
              goto LABEL_148;
            }
            if (!v11)
              goto LABEL_150;
            v78 = v9;
            v79 = &v36[16 * v77];
            v80 = *(_QWORD *)v79;
            v81 = v36;
            v82 = v38;
            v83 = &v36[16 * v38];
            v84 = *((_QWORD *)v83 + 1);
            sub_1004133FC((id *)(v11 + 8 * *(_QWORD *)v79), (id *)(v11 + 8 * *(_QWORD *)v83), v11 + 8 * v84, v119, a1);
            if (v2)
            {
              v98 = (uint64_t)v78;
              goto LABEL_122;
            }
            if (v84 < v80)
              goto LABEL_126;
            if (v82 > *((_QWORD *)v78 + 2))
              goto LABEL_127;
            *(_QWORD *)v79 = v80;
            *(_QWORD *)&v81[16 * v77 + 8] = v84;
            v85 = *((_QWORD *)v78 + 2);
            if (v82 >= v85)
              goto LABEL_128;
            v35 = v85 - 1;
            memmove(v83, v83 + 16, 16 * (v85 - 1 - v82));
            v36 = v81;
            v9 = v78;
            *((_QWORD *)v78 + 2) = v85 - 1;
            v11 = v120;
            v10 = v117;
            if (v85 <= 2)
              goto LABEL_89;
          }
        }
        v35 = 1;
LABEL_89:
        v3 = v116;
        if (v10 >= v116)
          goto LABEL_105;
        goto LABEL_13;
      }
    }
  }
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

void sub_100411B9C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  Swift::Int v6;
  Swift::Int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  Swift::Int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  Swift::Int v17;
  char *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  char *v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  id *v28;
  Swift::Int v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t *v38;
  Swift::Int v39;
  Swift::Int v40;
  uint64_t *v41;
  uint64_t v42;
  Swift::Int v43;
  uint64_t v44;
  Swift::Int v45;
  void *v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  id v51;
  char *v52;
  void (*v53)(char *, uint64_t);
  char *v54;
  uint64_t v55;
  void *v56;
  char *v57;
  unint64_t v58;
  unint64_t v59;
  char *v60;
  char *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  unint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  BOOL v83;
  uint64_t v84;
  char v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  Swift::Int v124;
  Swift::Int v125;
  Swift::Int v126;
  Swift::Int v127;
  Swift::Int v128;
  id *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;

  v133 = type metadata accessor for Date(0);
  v131 = *(_QWORD *)(v133 - 8);
  v2 = __chkstk_darwin(v133);
  v132 = (char *)&v119 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v5 = (char *)&v119 - v4;
  v6 = a1[1];
  v7 = _minimumMergeRunLength(_:)(v6);
  if (v7 >= v6)
  {
    if (v6 < 0)
      goto LABEL_135;
    if (v6)
      sub_100412834(0, v6, 1, a1);
    return;
  }
  if (v6 >= 0)
    v8 = v6;
  else
    v8 = v6 + 1;
  if (v6 < -1)
    goto LABEL_143;
  v124 = v7;
  v121 = a1;
  if (v6 < 2)
  {
    v12 = (char *)_swiftEmptyArrayStorage;
    v135 = (uint64_t)_swiftEmptyArrayStorage;
    v129 = (id *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v6 != 1)
    {
      v16 = _swiftEmptyArrayStorage[2];
LABEL_101:
      v111 = v130;
      if (v16 >= 2)
      {
        v112 = *v121;
        do
        {
          v113 = v16 - 2;
          if (v16 < 2)
            goto LABEL_130;
          if (!v112)
            goto LABEL_142;
          v102 = v12;
          v114 = *(_QWORD *)&v12[16 * v113 + 32];
          v115 = *(_QWORD *)&v12[16 * v16 + 24];
          sub_100413760((void **)(v112 + 8 * v114), (id *)(v112 + 8 * *(_QWORD *)&v12[16 * v16 + 16]), (id *)(v112 + 8 * v115), v129);
          if (v111)
            goto LABEL_98;
          if (v115 < v114)
            goto LABEL_131;
          if ((swift_isUniquelyReferenced_nonNull_native(v102) & 1) == 0)
            v102 = sub_10020CE70((uint64_t)v102);
          if (v113 >= *((_QWORD *)v102 + 2))
            goto LABEL_132;
          v116 = &v102[16 * v113 + 32];
          *(_QWORD *)v116 = v114;
          *((_QWORD *)v116 + 1) = v115;
          v117 = *((_QWORD *)v102 + 2);
          if (v16 > v117)
            goto LABEL_133;
          memmove(&v102[16 * v16 + 16], &v102[16 * v16 + 32], 16 * (v117 - v16));
          v12 = v102;
          *((_QWORD *)v102 + 2) = v117 - 1;
          v16 = v117 - 1;
        }
        while (v117 > 2);
      }
      v110 = v12;
LABEL_113:
      swift_bridgeObjectRelease(v110);
      *(_QWORD *)((v135 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()(v118);
      swift_bridgeObjectRelease(v135);
      return;
    }
  }
  else
  {
    v9 = v8 >> 1;
    v10 = sub_100006C5C(0, (unint64_t *)&unk_1005DF4B0, CLLocation_ptr);
    v11 = static Array._allocateBufferUninitialized(minimumCapacity:)(v9, v10);
    *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) = v9;
    v129 = (id *)((v11 & 0xFFFFFFFFFFFFFF8) + 32);
    v135 = v11;
  }
  v13 = 0;
  v14 = *a1;
  v15 = *a1 + 16;
  v122 = *a1 - 8;
  v123 = v15;
  v12 = (char *)_swiftEmptyArrayStorage;
  v127 = v6;
  v134 = v14;
  while (1)
  {
    v17 = v13 + 1;
    v126 = v13;
    if (v13 + 1 < v6)
    {
      v18 = v12;
      v19 = *(void **)(v14 + 8 * v13);
      v20 = *(id *)(v14 + 8 * v17);
      v21 = v19;
      v22 = objc_msgSend(v20, "timestamp");
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v22);

      v23 = objc_msgSend(v21, "timestamp");
      v24 = v132;
      static Date._unconditionallyBridgeFromObjectiveC(_:)(v23);

      LODWORD(v128) = static Date.< infix(_:_:)(v5, v24);
      v25 = *(void (**)(char *, uint64_t))(v131 + 8);
      v26 = v24;
      v27 = v133;
      v25(v26, v133);
      v25(v5, v27);

      v6 = v127;
      v17 = v13 + 2;
      if (v13 + 2 < v6)
      {
        v28 = (id *)(v123 + 8 * v13);
        while (1)
        {
          v29 = v17;
          v30 = *(v28 - 1);
          v31 = *v28;
          v32 = v30;
          v33 = objc_msgSend(v31, "timestamp");
          static Date._unconditionallyBridgeFromObjectiveC(_:)(v33);

          v34 = objc_msgSend(v32, "timestamp");
          v35 = v132;
          static Date._unconditionallyBridgeFromObjectiveC(_:)(v34);

          LODWORD(v34) = static Date.< infix(_:_:)(v5, v35);
          v36 = v35;
          v37 = v133;
          v25(v36, v133);
          v25(v5, v37);

          if (((v128 ^ v34) & 1) != 0)
            break;
          v17 = v29 + 1;
          ++v28;
          v6 = v127;
          if (v127 == v29 + 1)
          {
            v17 = v127;
            goto LABEL_22;
          }
        }
        v6 = v127;
        v17 = v29;
LABEL_22:
        v13 = v126;
      }
      v12 = v18;
      v14 = v134;
      if ((v128 & 1) != 0)
      {
        if (v17 < v13)
          goto LABEL_136;
        if (v13 < v17)
        {
          v38 = (uint64_t *)(v122 + 8 * v17);
          v39 = v17;
          v40 = v13;
          v41 = (uint64_t *)(v134 + 8 * v13);
          do
          {
            if (v40 != --v39)
            {
              if (!v14)
                goto LABEL_141;
              v42 = *v41;
              *v41 = *v38;
              *v38 = v42;
            }
            ++v40;
            --v38;
            ++v41;
          }
          while (v40 < v39);
        }
      }
    }
    if (v17 < v6)
    {
      if (__OFSUB__(v17, v13))
        goto LABEL_134;
      if (v17 - v13 < v124)
        break;
    }
LABEL_50:
    if (v17 < v13)
      goto LABEL_129;
    v57 = v12;
    if ((swift_isUniquelyReferenced_nonNull_native(v12) & 1) != 0)
      v12 = v57;
    else
      v12 = sub_10020C830(0, *((_QWORD *)v57 + 2) + 1, 1, v57);
    v59 = *((_QWORD *)v12 + 2);
    v58 = *((_QWORD *)v12 + 3);
    v16 = v59 + 1;
    v14 = v134;
    if (v59 >= v58 >> 1)
    {
      v109 = sub_10020C830((char *)(v58 > 1), v59 + 1, 1, v12);
      v14 = v134;
      v12 = v109;
    }
    *((_QWORD *)v12 + 2) = v16;
    v60 = v12 + 32;
    v61 = &v12[16 * v59 + 32];
    *(_QWORD *)v61 = v13;
    *((_QWORD *)v61 + 1) = v17;
    v128 = v17;
    if (v59)
    {
      while (1)
      {
        v62 = v16 - 1;
        if (v16 >= 4)
        {
          v67 = &v60[16 * v16];
          v68 = *((_QWORD *)v67 - 8);
          v69 = *((_QWORD *)v67 - 7);
          v73 = __OFSUB__(v69, v68);
          v70 = v69 - v68;
          if (v73)
            goto LABEL_118;
          v72 = *((_QWORD *)v67 - 6);
          v71 = *((_QWORD *)v67 - 5);
          v73 = __OFSUB__(v71, v72);
          v65 = v71 - v72;
          v66 = v73;
          if (v73)
            goto LABEL_119;
          v74 = v16 - 2;
          v75 = &v60[16 * v16 - 32];
          v77 = *(_QWORD *)v75;
          v76 = *((_QWORD *)v75 + 1);
          v73 = __OFSUB__(v76, v77);
          v78 = v76 - v77;
          if (v73)
            goto LABEL_121;
          v73 = __OFADD__(v65, v78);
          v79 = v65 + v78;
          if (v73)
            goto LABEL_124;
          if (v79 >= v70)
          {
            v97 = &v60[16 * v62];
            v99 = *(_QWORD *)v97;
            v98 = *((_QWORD *)v97 + 1);
            v73 = __OFSUB__(v98, v99);
            v100 = v98 - v99;
            if (v73)
              goto LABEL_128;
            v90 = v65 < v100;
            goto LABEL_87;
          }
        }
        else
        {
          if (v16 != 3)
          {
            v91 = *((_QWORD *)v12 + 4);
            v92 = *((_QWORD *)v12 + 5);
            v73 = __OFSUB__(v92, v91);
            v84 = v92 - v91;
            v85 = v73;
            goto LABEL_81;
          }
          v64 = *((_QWORD *)v12 + 4);
          v63 = *((_QWORD *)v12 + 5);
          v73 = __OFSUB__(v63, v64);
          v65 = v63 - v64;
          v66 = v73;
        }
        if ((v66 & 1) != 0)
          goto LABEL_120;
        v74 = v16 - 2;
        v80 = &v60[16 * v16 - 32];
        v82 = *(_QWORD *)v80;
        v81 = *((_QWORD *)v80 + 1);
        v83 = __OFSUB__(v81, v82);
        v84 = v81 - v82;
        v85 = v83;
        if (v83)
          goto LABEL_123;
        v86 = &v60[16 * v62];
        v88 = *(_QWORD *)v86;
        v87 = *((_QWORD *)v86 + 1);
        v73 = __OFSUB__(v87, v88);
        v89 = v87 - v88;
        if (v73)
          goto LABEL_126;
        if (__OFADD__(v84, v89))
          goto LABEL_127;
        if (v84 + v89 >= v65)
        {
          v90 = v65 < v89;
LABEL_87:
          if (v90)
            v62 = v74;
          goto LABEL_89;
        }
LABEL_81:
        if ((v85 & 1) != 0)
          goto LABEL_122;
        v93 = &v60[16 * v62];
        v95 = *(_QWORD *)v93;
        v94 = *((_QWORD *)v93 + 1);
        v73 = __OFSUB__(v94, v95);
        v96 = v94 - v95;
        if (v73)
          goto LABEL_125;
        if (v96 < v84)
          goto LABEL_14;
LABEL_89:
        v101 = v62 - 1;
        if (v62 - 1 >= v16)
        {
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
          goto LABEL_138;
        }
        if (!v14)
          goto LABEL_140;
        v102 = v12;
        v103 = &v60[16 * v101];
        v104 = *(_QWORD *)v103;
        v105 = &v60[16 * v62];
        v106 = *((_QWORD *)v105 + 1);
        v107 = v130;
        sub_100413760((void **)(v14 + 8 * *(_QWORD *)v103), (id *)(v14 + 8 * *(_QWORD *)v105), (id *)(v14 + 8 * v106), v129);
        v130 = v107;
        if (v107)
        {
LABEL_98:
          v110 = v102;
          goto LABEL_113;
        }
        if (v106 < v104)
          goto LABEL_115;
        if (v62 > *((_QWORD *)v102 + 2))
          goto LABEL_116;
        *(_QWORD *)v103 = v104;
        *(_QWORD *)&v60[16 * v101 + 8] = v106;
        v108 = *((_QWORD *)v102 + 2);
        if (v62 >= v108)
          goto LABEL_117;
        v16 = v108 - 1;
        memmove(&v60[16 * v62], v105 + 16, 16 * (v108 - 1 - v62));
        v12 = v102;
        *((_QWORD *)v102 + 2) = v108 - 1;
        v14 = v134;
        if (v108 <= 2)
          goto LABEL_14;
      }
    }
    v16 = 1;
LABEL_14:
    v6 = v127;
    v13 = v128;
    if (v128 >= v127)
      goto LABEL_101;
  }
  if (__OFADD__(v13, v124))
    goto LABEL_137;
  if (v13 + v124 >= v6)
    v43 = v6;
  else
    v43 = v13 + v124;
  if (v43 >= v13)
  {
    if (v17 != v43)
    {
      v120 = v12;
      v44 = v122 + 8 * v17;
      v125 = v43;
      do
      {
        v45 = v17;
        v46 = *(void **)(v14 + 8 * v17);
        v128 = v44;
        while (1)
        {
          v47 = *(void **)v44;
          v48 = v46;
          v49 = v47;
          v50 = objc_msgSend(v48, "timestamp");
          static Date._unconditionallyBridgeFromObjectiveC(_:)(v50);

          v51 = objc_msgSend(v49, "timestamp");
          v52 = v132;
          static Date._unconditionallyBridgeFromObjectiveC(_:)(v51);

          LOBYTE(v51) = static Date.< infix(_:_:)(v5, v52);
          v53 = *(void (**)(char *, uint64_t))(v131 + 8);
          v54 = v52;
          v55 = v133;
          v53(v54, v133);
          v53(v5, v55);

          if ((v51 & 1) == 0)
            break;
          v14 = v134;
          if (!v134)
            goto LABEL_139;
          v56 = *(void **)v44;
          v46 = *(void **)(v44 + 8);
          *(_QWORD *)v44 = v46;
          *(_QWORD *)(v44 + 8) = v56;
          v44 -= 8;
          if (v45 == ++v13)
            goto LABEL_43;
        }
        v14 = v134;
LABEL_43:
        v17 = v45 + 1;
        v44 = v128 + 8;
        v13 = v126;
      }
      while (v45 + 1 != v125);
      v17 = v125;
      v12 = v120;
    }
    goto LABEL_50;
  }
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

uint64_t sub_100412488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, char *), uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  char v28;
  char v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t (*v44)(char *, char *);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v44 = a4;
  v45 = a5;
  v8 = type metadata accessor for FMIPUnknownItem(0);
  v9 = __chkstk_darwin(v8);
  v47 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v42 = (char *)&v36 - v12;
  result = __chkstk_darwin(v11);
  v16 = (char *)&v36 - v14;
  v38 = a2;
  if (a3 != a2)
  {
    v17 = *(_QWORD *)(v15 + 72);
    v48 = v15;
    v18 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    v40 = v17;
    v41 = v18;
    v50 = v17 * a3;
    v51 = v17 * (a3 - 1);
    v19 = v42;
    v37 = a1;
    v39 = (char *)&v36 - v14;
    while (2)
    {
      v20 = 0;
      v21 = a1;
      v22 = v52;
      v43 = a3;
      while (1)
      {
        v46 = v21;
        v24 = *v49;
        v25 = v8;
        v26 = v8;
        v27 = v41;
        v41(v16, v50 + v20 + *v49, v25);
        v27(v19, v51 + v20 + v24, v26);
        v28 = v44(v16, v19);
        v52 = v22;
        if (v22)
        {
          v35 = *(void (**)(char *, uint64_t))(v48 + 8);
          v35(v19, v26);
          return ((uint64_t (*)(char *, uint64_t))v35)(v16, v26);
        }
        v29 = v28;
        v30 = *(void (**)(char *, uint64_t))(v48 + 8);
        v30(v19, v26);
        result = ((uint64_t (*)(char *, uint64_t))v30)(v16, v26);
        v8 = v26;
        if ((v29 & 1) == 0)
          break;
        v22 = v52;
        v31 = *v49;
        if (!*v49)
        {
          __break(1u);
          return result;
        }
        v32 = v31 + v50 + v20;
        v33 = v31 + v51 + v20;
        v34 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 32);
        v34(v47, v32, v26);
        swift_arrayInitWithTakeFrontToBack(v32, v33);
        result = ((uint64_t (*)(uint64_t, char *, uint64_t))v34)(v33, v47, v26);
        v16 = v39;
        v20 -= v40;
        v21 = v46 + 1;
        v19 = v42;
        v23 = v43;
        if (v43 == v46 + 1)
          goto LABEL_10;
      }
      v23 = v43;
      v16 = v39;
      v22 = v52;
LABEL_10:
      v52 = v22;
      a3 = v23 + 1;
      v51 += v40;
      v50 += v40;
      a1 = v37;
      if (a3 != v38)
        continue;
      break;
    }
  }
  return result;
}

void sub_100412734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void **, void **))
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void **v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  char v14;
  void *v15;
  void **v18;
  void *v20;
  void *v21;

  if (a3 != a2)
  {
    v6 = a3;
    v7 = a1;
    v8 = *v4;
    v9 = (void **)(*v4 + 8 * a3 - 8);
LABEL_4:
    v10 = *(void **)(v8 + 8 * v6);
    v18 = v9;
    while (1)
    {
      v21 = v10;
      v20 = *v9;
      v11 = v20;
      v12 = v10;
      v13 = v11;
      v14 = a4(&v21, &v20);

      if (v5)
        break;
      if ((v14 & 1) != 0)
      {
        if (!v8)
        {
          __break(1u);
          return;
        }
        v15 = *v9;
        v10 = v9[1];
        *v9 = v10;
        v9[1] = v15;
        --v9;
        if (v6 != ++v7)
          continue;
      }
      ++v6;
      v9 = v18 + 1;
      v7 = a1;
      if (v6 != a2)
        goto LABEL_4;
      return;
    }
  }
}

void sub_100412834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v28 = a1;
  v7 = type metadata accessor for Date(0);
  v31 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  v8 = __chkstk_darwin(v7);
  v30 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)&v26 - v10;
  v27 = a2;
  if (a3 != a2)
  {
    v33 = *a4;
    v12 = v33 + 8 * a3 - 8;
LABEL_5:
    v13 = *(void **)(v33 + 8 * a3);
    v14 = v28;
    v29 = v12;
    while (1)
    {
      v15 = *(void **)v12;
      v16 = v13;
      v17 = v15;
      v18 = objc_msgSend(v16, "timestamp");
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      v19 = objc_msgSend(v17, "timestamp");
      v20 = v30;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      LOBYTE(v19) = static Date.< infix(_:_:)(v11, v20);
      v21 = a3;
      v22 = *(void (**)(char *, uint64_t))(v31 + 8);
      v23 = v20;
      v24 = v32;
      v22(v23, v32);
      v22(v11, v24);
      a3 = v21;

      if ((v19 & 1) == 0)
      {
LABEL_4:
        a3 = v21 + 1;
        v12 = v29 + 8;
        if (v21 + 1 == v27)
          return;
        goto LABEL_5;
      }
      if (!v33)
        break;
      v25 = *(void **)v12;
      v13 = *(void **)(v12 + 8);
      *(_QWORD *)v12 = v13;
      *(_QWORD *)(v12 + 8) = v25;
      v12 -= 8;
      if (v21 == ++v14)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_1004129FC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t (*a5)(_QWORD, _QWORD), uint64_t a6)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v31;
  void (*v32)(char *, unint64_t, uint64_t);
  char v33;
  char v34;
  void (*v35)(char *, uint64_t);
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v41;
  void (*v42)(_QWORD, unint64_t, uint64_t);
  unint64_t v43;
  void (*v44)(_QWORD, unint64_t, uint64_t);
  uint64_t v45;
  unint64_t v46;
  void (*v47)(_QWORD, _QWORD, _QWORD);
  char v48;
  char v49;
  uint64_t v50;
  unint64_t v51;
  void (*v52)(_QWORD, _QWORD);
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  void (*v57)(char *, uint64_t);
  void (*v58)(_QWORD, _QWORD);
  uint64_t result;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  void (*v63)(_QWORD, unint64_t, uint64_t);
  uint64_t v64;
  void (*v65)(_QWORD, _QWORD, _QWORD);
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(_QWORD, _QWORD);
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;

  v7 = v6;
  v69 = a6;
  v70 = a5;
  v12 = type metadata accessor for FMIPUnknownItem(0);
  v13 = __chkstk_darwin(v12);
  v14 = __chkstk_darwin(v13);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v60 - v16;
  __chkstk_darwin(v15);
  v21 = (char *)&v60 - v20;
  v71 = v22;
  v23 = *(_QWORD *)(v22 + 72);
  if (!v23)
  {
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (a2 - a1 == 0x8000000000000000 && v23 == -1)
    goto LABEL_68;
  v24 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v23 == -1)
    goto LABEL_69;
  v25 = (uint64_t)(a2 - a1) / v23;
  v74 = a1;
  v73 = a4;
  v26 = v24 / v23;
  if (v25 >= v24 / v23)
  {
    if ((v26 & 0x8000000000000000) == 0)
    {
      v28 = a3;
      v29 = v26 * v23;
      v64 = v19;
      v65 = v18;
      if (a4 < a2 || a2 + v29 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4, a2);
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4, a2);
      }
      v39 = a4 + v29;
      v72 = a4 + v29;
      v74 = a2;
      if (v29 >= 1 && a1 < a2)
      {
        v41 = -v23;
        v42 = *(void (**)(_QWORD, unint64_t, uint64_t))(v71 + 16);
        v62 = a1;
        v63 = v42;
        v60 = v41;
        v61 = a4;
        v66 = v12;
        while (1)
        {
          v43 = v7;
          v44 = v63;
          v45 = v64;
          v63(v64, v39 + v41, v12);
          v67 = a2;
          v46 = a2 + v41;
          v47 = v65;
          v44(v65, a2 + v41, v12);
          v48 = v70(v45, v47);
          v68 = v43;
          if (v43)
            break;
          v49 = v48;
          v50 = v12;
          v51 = v28 + v41;
          v52 = *(void (**)(_QWORD, _QWORD))(v71 + 8);
          v52(v47, v50);
          v52(v45, v50);
          if ((v49 & 1) != 0)
          {
            if (v28 < v67 || v28 + v41 >= v67)
            {
              v51 = v28 + v41;
              swift_arrayInitWithTakeFrontToBack(v28 + v41, v46);
              v7 = v68;
            }
            else
            {
              v7 = v68;
              v51 = v28 + v41;
              if (v28 != v67)
                swift_arrayInitWithTakeBackToFront(v28 + v41, v46);
            }
            v41 = v60;
            v55 = v61;
            v74 += v60;
            v56 = v62;
          }
          else
          {
            v53 = v72;
            v54 = v72 + v41;
            v72 += v41;
            if (v28 < v53 || v51 >= v53)
            {
              swift_arrayInitWithTakeFrontToBack(v28 + v41, v54);
              v46 = v67;
              v7 = v68;
            }
            else
            {
              v7 = v68;
              if (v28 != v53)
                swift_arrayInitWithTakeBackToFront(v28 + v41, v54);
              v46 = v67;
            }
            v55 = v61;
            v56 = v62;
            v41 = v60;
          }
          v39 = v72;
          if (v72 > v55)
          {
            a2 = v46;
            v28 = v51;
            v12 = v66;
            if (v46 > v56)
              continue;
          }
          goto LABEL_66;
        }
        v58 = *(void (**)(_QWORD, _QWORD))(v71 + 8);
        v58(v47, v12);
        v58(v45, v12);
      }
      goto LABEL_66;
    }
  }
  else
  {
    v68 = a3;
    if ((v25 & 0x8000000000000000) == 0)
    {
      v27 = v25 * v23;
      if (a4 < a1 || a1 + v27 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4, a1);
      }
      else if (a4 != a1)
      {
        swift_arrayInitWithTakeBackToFront(a4, a1);
      }
      v67 = a4 + v27;
      v72 = a4 + v27;
      if (v27 >= 1 && a2 < v68)
      {
        v65 = *(void (**)(_QWORD, _QWORD, _QWORD))(v71 + 16);
        while (1)
        {
          v31 = v23;
          v32 = (void (*)(char *, unint64_t, uint64_t))v65;
          v65(v21, a2, v12);
          v32(v17, a4, v12);
          v33 = v70(v21, v17);
          if (v6)
            break;
          v34 = v33;
          v35 = *(void (**)(char *, uint64_t))(v71 + 8);
          v35(v17, v12);
          v35(v21, v12);
          v36 = v74;
          if ((v34 & 1) != 0)
          {
            v23 = v31;
            v37 = a2 + v31;
            if (v74 < a2 || v74 >= v37)
            {
              swift_arrayInitWithTakeFrontToBack(v74, a2);
            }
            else if (v74 == a2)
            {
              v36 = a2;
            }
            else
            {
              swift_arrayInitWithTakeBackToFront(v74, a2);
            }
          }
          else
          {
            v23 = v31;
            v38 = v73 + v31;
            if (v74 < v73 || v74 >= v38)
            {
              swift_arrayInitWithTakeFrontToBack(v74, v73);
            }
            else if (v74 != v73)
            {
              swift_arrayInitWithTakeBackToFront(v74, v73);
            }
            v73 = v38;
            v37 = a2;
          }
          v74 = v36 + v23;
          a4 = v73;
          if (v73 < v67)
          {
            a2 = v37;
            if (v37 < v68)
              continue;
          }
          goto LABEL_66;
        }
        v57 = *(void (**)(char *, uint64_t))(v71 + 8);
        v57(v17, v12);
        v57(v21, v12);
      }
LABEL_66:
      sub_10020CD34(&v74, &v73, (uint64_t *)&v72);
      return 1;
    }
  }
LABEL_70:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100412FA0(void **__src, void **a2, unint64_t a3, void **a4)
{
  void **v4;
  void **v5;
  int64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  void *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  id v24;
  char v25;
  id v26;
  id v27;
  void **v28;
  void **v29;
  char *v30;
  void **v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  void **v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  void **v42;
  char *v43;
  char *v44;
  uint64_t result;
  char *v47;
  char *v48;
  char v49;
  unint64_t v51;
  void **v52;
  void **v53;
  void **v54;
  void **v55;
  char *v56;
  void **v57;
  void **v58;

  v4 = a2;
  v5 = __src;
  v6 = (char *)a2 - (char *)__src;
  v7 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v7 = (char *)a2 - (char *)__src;
  v8 = v7 >> 3;
  v9 = a3 - (_QWORD)a2;
  v10 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v10 = a3 - (_QWORD)a2;
  v11 = v10 >> 3;
  v58 = __src;
  v57 = a4;
  if (v8 >= v10 >> 3)
  {
    if (v9 >= -7)
    {
      if (a4 != a2 || &a2[v11] <= a4)
        memmove(a4, a2, 8 * v11);
      v30 = (char *)&a4[v11];
      v56 = v30;
      v58 = v4;
      if (v5 < v4 && v9 >= 8)
      {
        v31 = (void **)(a3 - 8);
        v53 = v5;
        do
        {
          v32 = (char *)*((_QWORD *)v30 - 1);
          v33 = *(_QWORD *)&v32[OBJC_IVAR____TtC6FindMy12FMAnnotation_title + 8];
          v51 = (unint64_t)v30;
          v47 = v30 - 8;
          if (v33)
          {
            v34 = *(_QWORD *)&v32[OBJC_IVAR____TtC6FindMy12FMAnnotation_title];
            v35 = *(_QWORD *)&v32[OBJC_IVAR____TtC6FindMy12FMAnnotation_title + 8];
          }
          else
          {
            v34 = 0;
            v35 = 0xE000000000000000;
          }
          v37 = v4 - 1;
          v36 = (char *)*(v4 - 1);
          v38 = &v36[OBJC_IVAR____TtC6FindMy12FMAnnotation_title];
          v39 = *(_QWORD *)&v36[OBJC_IVAR____TtC6FindMy12FMAnnotation_title + 8];
          if (v39)
          {
            v40 = *(_QWORD *)v38;
            v41 = *((_QWORD *)v38 + 1);
          }
          else
          {
            v40 = 0;
            v41 = 0xE000000000000000;
          }
          v55 = v4;
          if (v34 == v40 && v35 == v41)
            v49 = 0;
          else
            v49 = _stringCompareWithSmolCheck(_:_:expecting:)(v34, v35, v40, v41, 1);
          v42 = v31 + 1;
          swift_bridgeObjectRetain(v39);
          v43 = v32;
          v44 = v36;
          swift_bridgeObjectRetain(v33);

          swift_bridgeObjectRelease(v41);
          swift_bridgeObjectRelease(v35);
          if ((v49 & 1) != 0)
          {
            v30 = (char *)v51;
            if (v42 != v55 || v31 >= v55)
              *v31 = *v37;
            v58 = v37;
          }
          else
          {
            v30 = v47;
            v56 = v47;
            if ((unint64_t)v42 < v51 || (unint64_t)v31 >= v51)
            {
              *v31 = *(void **)v47;
              v37 = v55;
            }
            else
            {
              v37 = v55;
              if (v42 != (void **)v51)
                *v31 = *(void **)v47;
            }
          }
          if (v37 <= v53)
            break;
          --v31;
          v4 = v37;
        }
        while (v30 > (char *)a4);
      }
LABEL_62:
      sub_10020CC20(&v58, &v57, &v56);
      return 1;
    }
  }
  else if (v6 >= -7)
  {
    if (a4 != __src || &__src[v8] <= a4)
      memmove(a4, __src, 8 * v8);
    v48 = (char *)&a4[v8];
    v56 = v48;
    if ((unint64_t)v4 < a3 && v6 >= 8)
    {
      v12 = a4;
      while (1)
      {
        v13 = *v4;
        v14 = (uint64_t *)((char *)*v4 + OBJC_IVAR____TtC6FindMy12FMAnnotation_title);
        v15 = v14[1];
        v54 = v4;
        if (v15)
        {
          v16 = *v14;
          v17 = v14[1];
        }
        else
        {
          v16 = 0;
          v17 = 0xE000000000000000;
        }
        v18 = *v12;
        v19 = (uint64_t *)((char *)*v12 + OBJC_IVAR____TtC6FindMy12FMAnnotation_title);
        v20 = v19[1];
        if (v20)
        {
          v21 = *v19;
          v22 = v19[1];
        }
        else
        {
          v21 = 0;
          v22 = 0xE000000000000000;
        }
        v52 = v5;
        if (v16 == v21 && v17 == v22)
        {
          swift_bridgeObjectRetain(v20);
          v23 = v13;
          v24 = v18;
          swift_bridgeObjectRetain(v15);

          swift_bridgeObjectRelease_n(v17, 2);
        }
        else
        {
          v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, v21, v22, 1);
          swift_bridgeObjectRetain(v20);
          v26 = v13;
          v27 = v18;
          swift_bridgeObjectRetain(v15);

          swift_bridgeObjectRelease(v22);
          swift_bridgeObjectRelease(v17);
          if ((v25 & 1) != 0)
          {
            v28 = v52;
            v29 = v54 + 1;
            if (v52 < v54 || v52 >= v29 || v52 != v54)
              *v52 = *v54;
            goto LABEL_30;
          }
        }
        v28 = v52;
        if (v52 != v12)
          *v52 = *v12;
        v57 = ++v12;
        v29 = v54;
LABEL_30:
        v5 = v28 + 1;
        if (v12 < (void **)v48)
        {
          v4 = v29;
          if ((unint64_t)v29 < a3)
            continue;
        }
        v58 = v5;
        goto LABEL_62;
      }
    }
    goto LABEL_62;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1004133FC(id *__src, id *a2, unint64_t a3, id *a4, uint64_t (*a5)(id *, void **))
{
  uint64_t v5;
  uint64_t v6;
  id *v7;
  id *v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void **v15;
  char *v16;
  id *v17;
  void *v18;
  id v19;
  id v20;
  char v21;
  char v22;
  id *v23;
  id *v24;
  char *v25;
  id *v26;
  id *v27;
  unint64_t v28;
  char *v29;
  void *v30;
  id v31;
  id v32;
  char v33;
  char v34;
  id *v35;
  unint64_t v36;
  char *v37;
  uint64_t result;
  id *v39;
  id *v42;
  void *v44;
  id v45;
  char *v46;
  void **v47;
  id *v48;

  v6 = v5;
  v7 = a2;
  v8 = __src;
  v9 = (char *)a2 - (char *)__src;
  v10 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v10 = (char *)a2 - (char *)__src;
  v11 = v10 >> 3;
  v12 = a3 - (_QWORD)a2;
  v13 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v13 = a3 - (_QWORD)a2;
  v14 = v13 >> 3;
  v48 = __src;
  v47 = a4;
  if (v11 >= v13 >> 3)
  {
    if (v12 <= -8)
      goto LABEL_50;
    if (a4 != a2 || &a2[v14] <= a4)
      memmove(a4, a2, 8 * v14);
    v25 = (char *)&a4[v14];
    v46 = v25;
    v48 = v7;
    if (v8 >= v7 || v12 < 8)
    {
LABEL_49:
      sub_10020CC20(&v48, &v47, &v46);
      return 1;
    }
    v26 = (id *)(a3 - 8);
    v27 = v7;
    v39 = v8;
    while (1)
    {
      v42 = v7;
      v28 = (unint64_t)v25;
      v29 = v25 - 8;
      v45 = (id)*((_QWORD *)v25 - 1);
      v30 = *--v27;
      v44 = v30;
      v31 = v45;
      v32 = v30;
      v33 = a5(&v45, &v44);
      if (v6)
      {

        goto LABEL_49;
      }
      v34 = v33;
      v35 = v26 + 1;

      if ((v34 & 1) != 0)
      {
        v25 = (char *)v28;
        if (v35 != v42 || v26 >= v42)
          *v26 = *v27;
        v48 = v27;
      }
      else
      {
        v46 = v29;
        if ((unint64_t)v35 >= v28 && (unint64_t)v26 < v28)
        {
          v36 = (unint64_t)v39;
          if (v35 != (id *)v28)
            *v26 = *(id *)v29;
          v37 = (char *)a4;
          v27 = v42;
          v25 = v29;
          v6 = 0;
          goto LABEL_44;
        }
        *v26 = *(id *)v29;
        v27 = v42;
        v25 = v29;
      }
      v6 = 0;
      v36 = (unint64_t)v39;
      v37 = (char *)a4;
LABEL_44:
      if ((unint64_t)v27 > v36)
      {
        --v26;
        v7 = v27;
        if (v25 > v37)
          continue;
      }
      goto LABEL_49;
    }
  }
  if (v9 > -8)
  {
    v15 = a4;
    if (a4 != __src || &__src[v11] <= a4)
      memmove(a4, __src, 8 * v11);
    v16 = (char *)&a4[v11];
    v46 = v16;
    if ((unint64_t)v7 < a3 && v9 >= 8)
    {
      while (1)
      {
        v17 = v8;
        v45 = *v7;
        v44 = *v15;
        v18 = v44;
        v19 = v45;
        v20 = v18;
        v21 = a5(&v45, &v44);
        if (v5)
          break;
        v22 = v21;

        if ((v22 & 1) != 0)
        {
          v23 = v7 + 1;
          v24 = v17;
          if (v17 < v7 || v17 >= v23 || v17 != v7)
            *v17 = *v7;
        }
        else
        {
          v24 = v17;
          if (v17 != v15)
            *v17 = *v15;
          v47 = ++v15;
          v23 = v7;
        }
        v8 = v24 + 1;
        v48 = v8;
        if (v15 < (void **)v16)
        {
          v7 = v23;
          if ((unint64_t)v23 < a3)
            continue;
        }
        goto LABEL_49;
      }

    }
    goto LABEL_49;
  }
LABEL_50:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100413760(void **a1, id *a2, id *a3, id *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void **v17;
  char *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  char *v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  id *v28;
  id *v29;
  unint64_t v30;
  id *v31;
  id *v32;
  unint64_t v33;
  id *v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  char *v39;
  id v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  uint64_t v44;
  id *v45;
  uint64_t result;
  uint64_t v47;
  void **v48;
  id *v49;
  unint64_t v50;
  void **v51;
  id *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  void **v58;
  id *v59;

  v8 = type metadata accessor for Date(0);
  v55 = *(_QWORD *)(v8 - 8);
  v56 = v8;
  v9 = __chkstk_darwin(v8);
  v54 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v52 = a3;
  v53 = (char *)&v47 - v11;
  v12 = (char *)a2 - (char *)a1;
  v13 = (char *)a2 - (char *)a1 + 7;
  if ((char *)a2 - (char *)a1 >= 0)
    v13 = (char *)a2 - (char *)a1;
  v14 = v13 >> 3;
  v15 = (char *)a3 - (char *)a2;
  v16 = v15 / 8;
  v59 = a1;
  v49 = a4;
  v58 = a4;
  if (v13 >> 3 >= v15 / 8)
  {
    if (v15 < -7)
      goto LABEL_43;
    v29 = v49;
    if (v49 != a2 || &a2[v16] <= v49)
      memmove(v49, a2, 8 * v16);
    v30 = (unint64_t)&v29[v16];
    v57 = (_QWORD *)v30;
    v59 = a2;
    if (v15 < 8 || a1 >= a2)
      goto LABEL_42;
    v31 = v52 - 1;
    v32 = a2;
    v48 = a1;
    while (1)
    {
      v52 = a2;
      v50 = v30;
      v51 = v31 + 1;
      v34 = (id *)(v30 - 8);
      v35 = *--v32;
      v36 = *(id *)(v30 - 8);
      v37 = v35;
      v38 = objc_msgSend(v36, "timestamp");
      v39 = v53;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      v40 = objc_msgSend(v37, "timestamp");
      v41 = v54;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      LOBYTE(v40) = static Date.< infix(_:_:)(v39, v41);
      v42 = *(void (**)(char *, uint64_t))(v55 + 8);
      v43 = v41;
      v44 = v56;
      v42(v43, v56);
      v42(v39, v44);

      if ((v40 & 1) != 0)
        break;
      v57 = v34;
      v32 = v52;
      if ((unint64_t)v51 < v50 || (unint64_t)v31 >= v50)
      {
        *v31 = *v34;
        v30 = (unint64_t)v34;
        goto LABEL_30;
      }
      v33 = (unint64_t)v48;
      v45 = v49;
      if (v51 != (void **)v50)
        *v31 = *v34;
      v30 = (unint64_t)v34;
      if (v34 <= v45)
        goto LABEL_42;
LABEL_31:
      --v31;
      a2 = v32;
      if ((unint64_t)v32 <= v33)
        goto LABEL_42;
    }
    v30 = v50;
    if (v51 != v52 || v31 >= v52)
      *v31 = *v32;
    v59 = v32;
LABEL_30:
    v33 = (unint64_t)v48;
    if (v30 <= (unint64_t)v49)
      goto LABEL_42;
    goto LABEL_31;
  }
  if (v12 >= -7)
  {
    v17 = v49;
    if (v49 != a1 || &a1[v14] <= v49)
      memmove(v49, a1, 8 * v14);
    v51 = &v17[v14];
    v57 = v51;
    if (v12 >= 8 && a2 < v52)
    {
      v18 = v53;
      do
      {
        v19 = *v17;
        v20 = *a2;
        v21 = v19;
        v22 = objc_msgSend(v20, "timestamp");
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        v23 = objc_msgSend(v21, "timestamp");
        v24 = v54;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        LOBYTE(v23) = static Date.< infix(_:_:)(v18, v24);
        v25 = *(void (**)(char *, uint64_t))(v55 + 8);
        v26 = v24;
        v27 = v56;
        v25(v26, v56);
        v25(v18, v27);

        if ((v23 & 1) != 0)
        {
          v28 = a2 + 1;
          if (a1 < a2 || a1 >= v28 || a1 != a2)
            *a1 = *a2;
        }
        else
        {
          if (a1 != v17)
            *a1 = *v17;
          v58 = ++v17;
          v28 = a2;
        }
        v59 = ++a1;
        if (v17 >= v51)
          break;
        a2 = v28;
      }
      while (v28 < v52);
    }
LABEL_42:
    sub_10020CC20(&v59, &v58, &v57);
    return 1;
  }
LABEL_43:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void (*sub_100413BC8(_QWORD *a1, unsigned __int8 a2))(uint64_t)
{
  _QWORD *v2;
  _QWORD *v5;
  char isUniquelyReferenced_nonNull_native;

  v5 = malloc(0x50uLL);
  *a1 = v5;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v5[8] = sub_1004143F8(v5);
  v5[9] = sub_100413EC8((uint64_t)(v5 + 4), a2, isUniquelyReferenced_nonNull_native);
  return sub_100413C44;
}

void (*sub_100413C48(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  _QWORD *v3;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;

  v7 = malloc(0x58uLL);
  *a1 = v7;
  v7[8] = a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  swift_bridgeObjectRetain(a3);
  v7[9] = sub_100414424(v7);
  v7[10] = sub_100413FEC(v7 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_100413CD8;
}

void sub_100413CD8(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);
  uint64_t v3;

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 80))(*(_QWORD *)a1 + 32, 0);
  swift_bridgeObjectRelease(v3);
  v2(v1, 0);
  free(v1);
}

void (*sub_100413D28(_QWORD *a1, unsigned __int8 a2))(uint64_t)
{
  _QWORD *v2;
  _QWORD *v5;
  char isUniquelyReferenced_nonNull_native;

  v5 = malloc(0x50uLL);
  *a1 = v5;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v2);
  v5[8] = sub_100414424(v5);
  v5[9] = sub_100414124((uint64_t)(v5 + 4), a2, isUniquelyReferenced_nonNull_native);
  return sub_100413C44;
}

void sub_100413DA4(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 72))(*(_QWORD *)a1 + 32, 0);
  v2(v1, 0);
  free(v1);
}

void (*sub_100413DE0(_QWORD *a1, uint64_t a2, unint64_t a3))(uint64_t a1)
{
  _QWORD *v3;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;

  v7 = malloc(0x60uLL);
  *a1 = v7;
  v7[8] = a2;
  v7[9] = a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
  sub_1000758C4(a2, a3);
  v7[10] = sub_100414424(v7);
  v7[11] = sub_100414280(v7 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_100413E74;
}

void sub_100413E74(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);
  unint64_t v3;
  uint64_t v4;

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 64);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 88))(*(_QWORD *)a1 + 32, 0);
  sub_1000758D8(v4, v3);
  v2(v1, 0);
  free(v1);
}

uint64_t (*sub_100413EC8(uint64_t a1, unsigned __int8 a2, char a3))(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t (*result)(uint64_t, uint64_t);

  v4 = v3;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 24) = a2;
  v8 = *v3;
  v10 = sub_1001717C0(a2);
  *(_BYTE *)(a1 + 25) = v9 & 1;
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = *(_QWORD *)(v8 + 24);
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      *(_QWORD *)(a1 + 16) = v10;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v16 = *(_QWORD *)(*(_QWORD *)(*v4 + 56) + 8 * v10);
LABEL_12:
        *(_QWORD *)a1 = v16;
        return sub_100413FD8;
      }
LABEL_11:
      v16 = 0;
      goto LABEL_12;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_10017B0E8();
      goto LABEL_7;
    }
    sub_100173254(v13, a3 & 1);
    v17 = sub_1001717C0(a2);
    if ((v14 & 1) == (v18 & 1))
    {
      v10 = v17;
      *(_QWORD *)(a1 + 16) = v17;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (uint64_t (*)(uint64_t, uint64_t))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for FMItemsListSection);
  __break(1u);
  return result;
}

uint64_t sub_100413FD8(uint64_t a1, uint64_t a2)
{
  return sub_100414234(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_10017A9F8, (uint64_t (*)(_QWORD, _QWORD))sub_100177CCC);
}

void (*sub_100413FEC(_QWORD *a1, uint64_t a2, uint64_t a3, char a4))(_QWORD *a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t *v5;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  void (*result)(_QWORD *, uint64_t);

  v5 = v4;
  v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[2] = a3;
  v10[3] = v5;
  v10[1] = a2;
  v11 = *v5;
  v13 = sub_10004C348(a2, a3);
  *((_BYTE *)v10 + 40) = v12 & 1;
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = *(_QWORD *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v13;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v19 = *(_QWORD *)(*(_QWORD *)(*v5 + 56) + 8 * v13);
LABEL_12:
        *v10 = v19;
        return sub_100414118;
      }
LABEL_11:
      v19 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_10017B0F4();
      goto LABEL_7;
    }
    sub_100173524(v16, a4 & 1);
    v20 = sub_10004C348(a2, a3);
    if ((v17 & 1) == (v21 & 1))
    {
      v13 = v20;
      v10[4] = v20;
      if ((v17 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(_QWORD *, uint64_t))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
  return result;
}

void sub_100414118(_QWORD *a1, uint64_t a2)
{
  sub_1004143B8(a1, a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100414444);
}

uint64_t (*sub_100414124(uint64_t a1, unsigned __int8 a2, char a3))(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t (*result)(uint64_t, uint64_t);

  v4 = v3;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 24) = a2;
  v8 = *v3;
  v10 = sub_1001717C0(a2);
  *(_BYTE *)(a1 + 25) = v9 & 1;
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = *(_QWORD *)(v8 + 24);
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      *(_QWORD *)(a1 + 16) = v10;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v16 = *(_QWORD *)(*(_QWORD *)(*v4 + 56) + 8 * v10);
LABEL_12:
        *(_QWORD *)a1 = v16;
        return sub_100413FD8;
      }
LABEL_11:
      v16 = 0;
      goto LABEL_12;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_10017CF1C();
      goto LABEL_7;
    }
    sub_10017658C(v13, a3 & 1);
    v17 = sub_1001717C0(a2);
    if ((v14 & 1) == (v18 & 1))
    {
      v10 = v17;
      *(_QWORD *)(a1 + 16) = v17;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (uint64_t (*)(uint64_t, uint64_t))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for FMUnknownItemsListDataSource.Section);
  __break(1u);
  return result;
}

uint64_t sub_100414234(uint64_t result, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD), uint64_t (*a4)(_QWORD, _QWORD))
{
  if (*(_QWORD *)result)
  {
    if ((*(_BYTE *)(result + 25) & 1) != 0)
      *(_QWORD *)(*(_QWORD *)(**(_QWORD **)(result + 8) + 56) + 8 * *(_QWORD *)(result + 16)) = *(_QWORD *)result;
    else
      return a3(*(_QWORD *)(result + 16), *(unsigned __int8 *)(result + 24));
  }
  else if ((*(_BYTE *)(result + 25) & 1) != 0)
  {
    return a4(*(_QWORD *)(result + 16), **(_QWORD **)(result + 8));
  }
  return result;
}

void (*sub_100414280(_QWORD *a1, uint64_t a2, unint64_t a3, char a4))(_QWORD *a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t *v5;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  void (*result)(_QWORD *, uint64_t);

  v5 = v4;
  v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[2] = a3;
  v10[3] = v5;
  v10[1] = a2;
  v11 = *v5;
  v13 = sub_100171E48(a2, a3);
  *((_BYTE *)v10 + 40) = v12 & 1;
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = *(_QWORD *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v13;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v19 = *(_QWORD *)(*(_QWORD *)(*v5 + 56) + 8 * v13);
LABEL_12:
        *v10 = v19;
        return sub_1004143AC;
      }
LABEL_11:
      v19 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_10017D8A4();
      goto LABEL_7;
    }
    sub_1001775E4(v16, a4 & 1);
    v20 = sub_100171E48(a2, a3);
    if ((v17 & 1) == (v21 & 1))
    {
      v13 = v20;
      v10[4] = v20;
      if ((v17 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(_QWORD *, uint64_t))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for FMAnnotationClusterIdentifier);
  __break(1u);
  return result;
}

void sub_1004143AC(_QWORD *a1, uint64_t a2)
{
  sub_1004143B8(a1, a2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1004144E0);
}

void sub_1004143B8(_QWORD *a1, uint64_t a2, void (*a3)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v3;

  v3 = (_QWORD *)*a1;
  a3(*a1, *(unsigned __int8 *)(*a1 + 40), *(_QWORD *)(*a1 + 24), *(_QWORD *)(*a1 + 32), *(_QWORD *)(*a1 + 8), *(_QWORD *)(*a1 + 16));
  swift_bridgeObjectRelease(*v3);
  free(v3);
}

uint64_t (*sub_1004143F8(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_100414418;
}

uint64_t sub_100414418(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

uint64_t (*sub_100414424(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_100416638;
}

double sub_100414444(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  double result;

  v8 = *a1;
  if (*a1)
  {
    if ((a2 & 1) != 0)
    {
      *(_QWORD *)(*(_QWORD *)(*a3 + 56) + 8 * a4) = v8;
    }
    else
    {
      sub_10017A9FC(a4, a5, a6, v8, (_QWORD *)*a3);
      swift_bridgeObjectRetain(a6);
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy(*(_QWORD *)(*a3 + 48) + 16 * a4, 1, &type metadata for String);
    sub_100177E84(a4, *a3);
  }
  *(_QWORD *)&result = swift_bridgeObjectRetain(v8).n128_u64[0];
  return result;
}

uint64_t sub_1004144E0(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  _QWORD *v10;

  v8 = *a1;
  if (*a1)
  {
    v10 = (_QWORD *)*a3;
    if ((a2 & 1) != 0)
    {
      *(_QWORD *)(v10[7] + 8 * a4) = v8;
    }
    else
    {
      sub_10017A9FC(a4, a5, a6, v8, v10);
      sub_1000758C4(a5, a6);
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy(*(_QWORD *)(*a3 + 48) + 16 * a4, 1, &type metadata for FMAnnotationClusterIdentifier);
    sub_1001790B8(a4, *a3);
  }
  return swift_bridgeObjectRetain(v8);
}

uint64_t sub_100414588(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[2];

  v35 = a3;
  v36 = a2;
  v34 = a1;
  v5 = type metadata accessor for FMIPUnknownItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_100053F2C(&qword_1005DA778);
  v39 = *(_QWORD *)(v37 - 8);
  __chkstk_darwin(v37);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_100053F2C((uint64_t *)&unk_1005E4220);
  v40 = *(_QWORD *)(v38 - 8);
  __chkstk_darwin(v38);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(*(_QWORD *)(v3 + 16) + 64);
  swift_retain(v13);
  v14 = sub_10016E4C8(a1, 4u);
  swift_release(v13);
  v41[1] = v14;
  v15 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  v41[0] = v15;
  v16 = sub_100053F2C(&qword_1005D6DC0);
  v17 = sub_10003F774((unint64_t *)&unk_1005D7E70, &qword_1005D6DC0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publisher.replaceError(with:)(v41, v16, v17);
  swift_release(v14);

  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v34, v5);
  v18 = *(unsigned __int8 *)(v6 + 80);
  v19 = (v18 + 24) & ~v18;
  v20 = (v7 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject(&unk_100565278, v20 + 8, v18 | 7);
  v22 = v35;
  *(_QWORD *)(v21 + 16) = v35;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v21 + v19, v8, v5);
  v23 = v36;
  *(_QWORD *)(v21 + v20) = v36;
  v24 = type metadata accessor for FMUnknownItemAnnotation(0);
  v25 = sub_10003F774(&qword_1005DA798, &qword_1005DA778, (uint64_t)&protocol conformance descriptor for Publishers.ReplaceError<A>);
  swift_bridgeObjectRetain(v22);
  v26 = v23;
  v27 = v37;
  Publisher.map<A>(_:)(sub_100415D84, v21, v37, v24, v25);
  v28 = swift_release(v21);
  (*(void (**)(char *, uint64_t, __n128))(v39 + 8))(v10, v27, v28);
  v29 = sub_10003F774((unint64_t *)&unk_1005E4230, (uint64_t *)&unk_1005E4220, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v30 = v38;
  v31 = Publisher.eraseToAnyPublisher()(v38, v29);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v12, v30);
  return v31;
}

_QWORD *sub_100414858(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD v50[2];
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  _QWORD v68[3];
  _QWORD *v69;

  v66 = a2;
  v65 = type metadata accessor for FMIPUnknownItem(0);
  v4 = *(_QWORD *)(v65 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v65);
  v64 = (char *)v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100053F2C(&qword_1005DA778);
  v62 = *(_QWORD *)(v6 - 8);
  v63 = v6;
  __chkstk_darwin(v6);
  v61 = (char *)v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100053F2C((uint64_t *)&unk_1005E4220);
  v59 = *(_QWORD *)(v8 - 8);
  v60 = v8;
  __chkstk_darwin(v8);
  v58 = (char *)v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100053F2C((uint64_t *)&unk_1005D6700);
  __chkstk_darwin(v10);
  v11 = a1;
  v13 = (char *)v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = _swiftEmptyArrayStorage;
  v69 = _swiftEmptyArrayStorage;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v50[0] = v11;
    v50[1] = v2;
    v16 = *(unsigned __int8 *)(v4 + 80);
    v17 = v11 + ((v16 + 32) & ~v16);
    v18 = *(_QWORD *)(v4 + 72);
    v53 = v16 | 7;
    v54 = (v16 + 24) & ~v16;
    v52 = (v5 + v54 + 7) & 0xFFFFFFFFFFFFFFF8;
    v51 = v52 + 8;
    v19 = swift_bridgeObjectRetain(v11);
    v56 = v13;
    v57 = v4;
    v55 = v18;
    do
    {
      v20 = FMIPUnknownItem.locations.getter(v19);
      v21 = *(_QWORD *)(v20 + 16);
      if (v21)
      {
        v22 = v21 - 1;
        v23 = type metadata accessor for FMIPLocation(0);
        v24 = *(_QWORD *)(v23 - 8);
        (*(void (**)(char *, unint64_t, uint64_t))(v24 + 16))(v13, v20+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(_QWORD *)(v24 + 72) * v22, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v13, 0, 1, v23);
      }
      else
      {
        v23 = type metadata accessor for FMIPLocation(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v13, 1, 1, v23);
      }
      swift_bridgeObjectRelease(v20);
      type metadata accessor for FMIPLocation(0);
      v25 = *(_QWORD *)(v23 - 8);
      v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v13, 1, v23);
      if ((_DWORD)v26 == 1)
      {
        sub_1000051EC((uint64_t)v13, (uint64_t *)&unk_1005D6700);
      }
      else
      {
        v67 = (id)FMIPLocation.location.getter(v26);
        (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v23);
        v27 = *(_QWORD *)(v66 + 48);
        v28 = *(_QWORD *)(*(_QWORD *)(v66 + 16) + 64);
        swift_bridgeObjectRetain(v27);
        swift_retain(v28);
        v29 = sub_10016E4C8(v17, 4u);
        swift_release(v28);
        v68[1] = v29;
        v30 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
        v68[0] = v30;
        v31 = sub_100053F2C(&qword_1005D6DC0);
        v32 = sub_10003F774((unint64_t *)&unk_1005D7E70, &qword_1005D6DC0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
        v33 = v61;
        Publisher.replaceError(with:)(v68, v31, v32);
        swift_release(v29);

        v35 = v64;
        v34 = v65;
        (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v64, v17, v65);
        v36 = swift_allocObject(&unk_100565390, v51, v53);
        *(_QWORD *)(v36 + 16) = v27;
        (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v36 + v54, v35, v34);
        v37 = v67;
        *(_QWORD *)(v36 + v52) = v67;
        v38 = type metadata accessor for FMUnknownItemAnnotation(0);
        v39 = sub_10003F774(&qword_1005DA798, &qword_1005DA778, (uint64_t)&protocol conformance descriptor for Publishers.ReplaceError<A>);
        swift_bridgeObjectRetain(v27);
        v67 = v37;
        v40 = v58;
        v41 = v63;
        Publisher.map<A>(_:)(sub_100415D84, v36, v63, v38, v39);
        v42 = swift_release(v36);
        (*(void (**)(char *, uint64_t, __n128))(v62 + 8))(v33, v41, v42);
        v43 = sub_10003F774((unint64_t *)&unk_1005E4230, (uint64_t *)&unk_1005E4220, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
        v44 = v60;
        v45 = Publisher.eraseToAnyPublisher()(v60, v43);
        (*(void (**)(char *, uint64_t))(v59 + 8))(v40, v44);
        swift_bridgeObjectRelease(v27);

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v46);
        v48 = v69[2];
        v47 = v69[3];
        if (v48 >= v47 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v47 > 1, v48 + 1, 1);
        v49 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v48, v45);
        specialized Array._endMutation()(v49);
        v13 = v56;
        v4 = v57;
        v18 = v55;
      }
      v17 += v18;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease(v50[0]);
    return v69;
  }
  return result;
}

_QWORD *sub_100414D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  char v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t, __n128);
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  _QWORD *v38;

  v33 = type metadata accessor for FMIPDevice(0);
  v7 = __chkstk_darwin(v33);
  v37 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)v31 - v10;
  result = _swiftEmptyArrayStorage;
  v38 = _swiftEmptyArrayStorage;
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v14 = *(unsigned __int8 *)(v9 + 80);
    v15 = *(_QWORD *)(v9 + 72);
    v31[1] = v3;
    v32 = (v14 + 32) & ~v14;
    v16 = a1 + v32;
    v35 = v15;
    v36 = v9;
    v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v17 = v33;
    for (i = v34(v11, a1 + v32, v33); ; i = v34(v11, v16, v17))
    {
      v20 = FMIPDevice.identifier.getter(i);
      v22 = v21;
      if (v20 == a2 && v21 == a3)
      {
        v23 = swift_bridgeObjectRelease(a3);
      }
      else
      {
        v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v21, a2, a3, 0);
        v23 = swift_bridgeObjectRelease(v22);
        if ((v24 & 1) == 0)
        {
          (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v17);
          v19 = v35;
          goto LABEL_4;
        }
      }
      v25 = a3;
      v26 = *(void (**)(char *, char *, uint64_t, __n128))(v36 + 32);
      v26(v37, v11, v17, v23);
      v27 = v38;
      if ((swift_isUniquelyReferenced_nonNull_native(v38) & 1) == 0)
      {
        sub_100111D20(0, v27[2] + 1, 1);
        v27 = v38;
      }
      v29 = v27[2];
      v28 = v27[3];
      if (v29 >= v28 >> 1)
      {
        sub_100111D20(v28 > 1, v29 + 1, 1);
        v27 = v38;
      }
      v27[2] = v29 + 1;
      v19 = v35;
      v30 = (uint64_t)v27 + v32 + v29 * v35;
      v17 = v33;
      ((void (*)(uint64_t, char *, uint64_t))v26)(v30, v37, v33);
      v38 = v27;
      a3 = v25;
LABEL_4:
      v16 += v19;
      if (!--v13)
        return v38;
    }
  }
  return result;
}

char *sub_100414F54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *result;
  uint64_t v17;
  unint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, unint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD v36[2];
  unint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  char *v50;
  char *v51;

  v5 = type metadata accessor for UUID(0);
  v49 = *(_QWORD **)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v50 = (char *)v36 - v9;
  v10 = type metadata accessor for FMIPUnknownItem(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v39 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v15 = (char *)v36 - v14;
  result = (char *)_swiftEmptyArrayStorage;
  v51 = (char *)_swiftEmptyArrayStorage;
  v45 = *(_QWORD *)(a1 + 16);
  if (v45)
  {
    v17 = 0;
    v18 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v46 = *(_QWORD *)(v11 + 72);
    v36[1] = v2;
    v37 = v18;
    v44 = a1 + v18;
    v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v42 = v10;
    v43 = v19;
    v48 = a2 + 56;
    v40 = (char *)v36 - v14;
    v41 = v11;
    do
    {
      v47 = v17;
      v20 = v43(v15, v44 + v46 * v17, v10);
      FMIPUnknownItem.identifier.getter(v20);
      if (*(_QWORD *)(a2 + 16)
        && (v21 = *(_QWORD *)(a2 + 40),
            v22 = sub_100008000((unint64_t *)&unk_1005E4270, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID), v23 = dispatch thunk of Hashable._rawHashValue(seed:)(v21, v5, v22), v24 = -1 << *(_BYTE *)(a2 + 32), v25 = v23 & ~v24, ((*(_QWORD *)(v48 + ((v25 >> 3) & 0xFFFFFFFFFFFFF8)) >> v25) & 1) != 0))
      {
        v26 = ~v24;
        v27 = v49[9];
        v28 = (void (*)(char *, unint64_t, uint64_t))v49[2];
        while (1)
        {
          v29 = a2;
          v28(v8, *(_QWORD *)(a2 + 48) + v27 * v25, v5);
          v30 = sub_100008000((unint64_t *)&unk_1005E2220, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
          v31 = dispatch thunk of static Equatable.== infix(_:_:)(v8, v50, v5, v30);
          v32 = (void (*)(char *, uint64_t))v49[1];
          v32(v8, v5);
          if ((v31 & 1) != 0)
            break;
          v25 = (v25 + 1) & v26;
          a2 = v29;
          if (((*(_QWORD *)(v48 + ((v25 >> 3) & 0xFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
            goto LABEL_3;
        }
        v32(v50, v5);
        v15 = v40;
        v10 = v42;
        v38 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
        v38(v39, v40, v42);
        v33 = v51;
        if ((swift_isUniquelyReferenced_nonNull_native(v51) & 1) == 0)
        {
          sub_100111DD0(0, *((_QWORD *)v33 + 2) + 1, 1);
          v33 = v51;
        }
        a2 = v29;
        v35 = *((_QWORD *)v33 + 2);
        v34 = *((_QWORD *)v33 + 3);
        if (v35 >= v34 >> 1)
        {
          sub_100111DD0(v34 > 1, v35 + 1, 1);
          v33 = v51;
        }
        *((_QWORD *)v33 + 2) = v35 + 1;
        v38(&v33[v37 + v35 * v46], v39, v10);
        v51 = v33;
      }
      else
      {
LABEL_3:
        ((void (*)(char *, uint64_t))v49[1])(v50, v5);
        v15 = v40;
        v10 = v42;
        (*(void (**)(char *, uint64_t))(v41 + 8))(v40, v42);
      }
      v17 = v47 + 1;
    }
    while (v47 + 1 != v45);
    return v51;
  }
  return result;
}

uint64_t sub_1004152D4(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  __n128 v26;
  os_log_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v42;
  _QWORD *v43;
  os_log_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t aBlock[5];
  uint64_t v55;

  v3 = v2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v52 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v51 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v49 = *(_QWORD *)(v8 - 8);
  v50 = v8;
  __chkstk_darwin(v8);
  v48 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FMFFriend(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v14 = type metadata accessor for Logger(0);
  sub_100056D88(v14, (uint64_t)qword_1005F5748);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
  v15 = a1;
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc(22, -1);
    v47 = v6;
    v19 = v18;
    v43 = (_QWORD *)swift_slowAlloc(8, -1);
    v46 = swift_slowAlloc(32, -1);
    v53 = (uint64_t)v15;
    aBlock[0] = v46;
    *(_DWORD *)v19 = 138412546;
    v45 = v10;
    v20 = v15;
    v44 = v16;
    v21 = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, aBlock);
    v22 = v43;
    *v43 = v15;

    *(_WORD *)(v19 + 12) = 2080;
    v23 = FMFFriend.debugDescription.getter();
    v25 = v24;
    v53 = sub_100056DA0(v23, v24, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v53, aBlock);
    v26 = swift_bridgeObjectRelease(v25);
    (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v13, v45, v26);
    v27 = v44;
    _os_log_impl((void *)&_mh_execute_header, v44, v17, "FMMapViewDataSource: didUpdate image %@ person %s", (uint8_t *)v19, 0x16u);
    v28 = sub_100053F2C((uint64_t *)&unk_1005D9680);
    swift_arrayDestroy(v22, 1, v28);
    swift_slowDealloc(v22, -1, -1);
    v29 = v46;
    swift_arrayDestroy(v46, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v29, -1, -1);
    v30 = v19;
    v6 = v47;
    swift_slowDealloc(v30, -1, -1);

  }
  else
  {

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  v31 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v32 = (void *)static OS_dispatch_queue.main.getter(v31);
  aBlock[4] = (uint64_t)sub_100415B34;
  v55 = v3;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100037DF8;
  aBlock[3] = (uint64_t)&unk_100565088;
  v33 = _Block_copy(aBlock);
  v34 = v55;
  swift_retain(v3);
  swift_release(v34);
  v35 = v48;
  static DispatchQoS.unspecified.getter(v36);
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  v37 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v38 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v39 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  v40 = v51;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v38, v39, v6, v37);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v35, v40, v33);
  _Block_release(v33);

  (*(void (**)(char *, uint64_t))(v52 + 8))(v40, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v35, v50);
}

uint64_t sub_100415740(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t aBlock[5];
  uint64_t v43;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v38 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v40 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v39 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v9 = type metadata accessor for Logger(0);
  sub_100056D88(v9, (uint64_t)qword_1005F5748);
  v10 = swift_bridgeObjectRetain_n(a1, 2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(12, -1);
    v37 = v4;
    v14 = (uint8_t *)v13;
    v15 = swift_slowAlloc(32, -1);
    v35 = v7;
    v16 = v15;
    aBlock[0] = v15;
    *(_DWORD *)v14 = 136315138;
    v36 = v6;
    v17 = type metadata accessor for FMIPUnknownItem(0);
    swift_bridgeObjectRetain(a1);
    v19 = Array.description.getter(v18, v17);
    v21 = v20;
    swift_bridgeObjectRelease(a1);
    v41 = sub_100056DA0(v19, v21, aBlock);
    v6 = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, aBlock);
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v21);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "FMMapViewDataSource: didDetect unknownItems %s", v14, 0xCu);
    swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
    v22 = v16;
    v7 = v35;
    swift_slowDealloc(v22, -1, -1);
    v23 = v14;
    v4 = v37;
    swift_slowDealloc(v23, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a1, 2);
  }
  v24 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v25 = (void *)static OS_dispatch_queue.main.getter(v24);
  aBlock[4] = (uint64_t)sub_100415AF0;
  v43 = v2;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100037DF8;
  aBlock[3] = (uint64_t)&unk_100564F70;
  v26 = _Block_copy(aBlock);
  v27 = v43;
  swift_retain(v2);
  swift_release(v27);
  v28 = v39;
  static DispatchQoS.unspecified.getter(v29);
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  v30 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v31 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v32 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v31, v32, v4, v30);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v28, v6, v26);
  _Block_release(v26);

  (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v28, v7);
}

uint64_t sub_100415AF0()
{
  uint64_t v0;

  return sub_100400A28(v0);
}

uint64_t sub_100415AF8()
{
  return sub_10000915C((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_100415B04()
{
  uint64_t v0;

  return sub_1003FF4B0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100415B0C()
{
  return sub_10000915C((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_100415B18()
{
  uint64_t v0;

  return sub_1003FF62C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_100415B20()
{
  return sub_10000915C((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_100415B2C()
{
  uint64_t v0;

  return sub_1003FF024(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

double sub_100415B34()
{
  uint64_t v0;

  return sub_100400B94(v0);
}

uint64_t sub_100415B3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(sub_100053F2C((uint64_t *)&unk_1005D3350) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  v5 = type metadata accessor for FMFLocation(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  return swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100415BDC()
{
  return sub_10000915C((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

double sub_100415BE8()
{
  return sub_10040F6B8();
}

uint64_t sub_100415C00()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100415C24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v1 = type metadata accessor for FMIPUnknownItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  swift_release(*(_QWORD *)(v0 + v7));
  swift_release(*(_QWORD *)(v0 + v8));
  swift_release(*(_QWORD *)(v0 + v9));
  return swift_deallocObject(v0, ((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

void sub_100415CF4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for FMIPUnknownItem(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_10040D3F8(*(_QWORD *)(v0 + 16), v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_100415D68()
{
  return sub_100416308((void (*)(_QWORD))&_swift_release);
}

void sub_100415D74(uint64_t *a1)
{
  uint64_t *v1;

  sub_10040EEE8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100415D88()
{
  return sub_100416308((void (*)(_QWORD))&_swift_release);
}

double sub_100415D94()
{
  uint64_t *v0;

  return sub_10040F3E4(v0[2], v0[3], v0[4]);
}

uint64_t sub_100415DA0()
{
  return sub_10000915C((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

double sub_100415DAC()
{
  uint64_t v0;

  return sub_10040BE1C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

double sub_100415DB4(uint64_t *a1)
{
  uint64_t v1;

  return sub_10040C0DC(a1, v1);
}

uint64_t sub_100415DBC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_10040C414(a1, a2, *(_QWORD *)(v2 + 16)) & 1;
}

void *sub_100415DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  objc_class *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  unint64_t v12;
  char v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[16];
  void *v19;

  v4 = type metadata accessor for FMAnnotationIdentifier(0);
  __chkstk_darwin(v4);
  v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = (objc_class *)type metadata accessor for FMClusterAnnotation();
  v8 = objc_allocWithZone(v7);
  swift_bridgeObjectRetain(a1);
  sub_100353488(v9);
  v11 = v10;
  v19 = v10;
  OS_dispatch_queue.sync<A>(execute:)(v6, sub_1003540D8, v18, v4);
  if (*(_QWORD *)(a2 + 16) && (v12 = sub_100171DF0((uint64_t)v6), (v13 & 1) != 0))
  {
    v14 = *(id *)(*(_QWORD *)(a2 + 56) + 8 * v12);
    sub_10004FCB8((uint64_t)v6, type metadata accessor for FMAnnotationIdentifier);
    v15 = swift_dynamicCastClass(v14, v7);
    if (v15)
    {
      v16 = v15;
      sub_1003537C8(a1);

      return (void *)v16;
    }
    else
    {

    }
  }
  else
  {
    sub_10004FCB8((uint64_t)v6, type metadata accessor for FMAnnotationIdentifier);
  }
  return v11;
}

uint64_t sub_100415F20()
{
  return sub_1003B9050((void (*)(_QWORD))&_swift_release);
}

double sub_100415F2C()
{
  uint64_t v0;

  return sub_10040CC04(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_100415F38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for FMIPUnknownItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v6 + 8, v5);
}

void sub_100415FC8(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for FMIPUnknownItem(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  sub_10040F484(a1, *(_QWORD *)(v2 + 16), v2 + v6, *(void **)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_10041602C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);

  v1 = type metadata accessor for FMIPItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v3 + v9 + 8) & ~v3;
  v11 = v5 + v10 + 1;
  v12 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v12(v0 + v4, v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v7));
  swift_release(*(_QWORD *)(v0 + v8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v9));
  v12(v0 + v10, v1);
  return swift_deallocObject(v0, v11, v6);
}

void sub_1004160F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(type metadata accessor for FMIPItem(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  v5 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_100409F24(v0 + v3, *(_QWORD *)(v0 + v5), *(_QWORD *)(v0 + v6), *(_QWORD *)(v0 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), v0 + ((v2 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v2), *(unsigned __int8 *)(v0 + ((v2 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v2) + v4));
}

uint64_t sub_100416168()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[5]);
  swift_release(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

void sub_1004161A4()
{
  uint64_t v0;

  sub_100408968(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_1004161B4()
{
  return sub_1003B9050((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1004161C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void (*v11)(uint64_t, uint64_t);

  v1 = type metadata accessor for FMFFriend(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = *(_QWORD *)(v2 + 64) + 7;
  v7 = (v6 + v4) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v3 + v8 + 8) & ~v3;
  v10 = (v6 + v9) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  v11 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v11(v0 + v4, v1);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v8));
  v11(v0 + v9, v1);
  swift_release(*(_QWORD *)(v0 + v10));
  return swift_deallocObject(v0, v10 + 8, v5);
}

void sub_100416290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(type metadata accessor for FMFFriend(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 24) & ~v2;
  v4 = *(_QWORD *)(v1 + 64) + 7;
  v5 = (v4 + v3) & 0xFFFFFFFFFFFFFFF8;
  sub_1004078A0(*(_QWORD *)(v0 + 16), v0 + v3, *(void **)(v0 + v5), *(_QWORD *)(v0 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), v0 + ((v2 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v2), *(_QWORD *)(v0 + ((v4 + ((v2 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v2)) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1004162FC()
{
  return sub_100416308((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_100416308(void (*a1)(_QWORD))
{
  _QWORD *v1;

  a1(v1[2]);
  swift_release(v1[3]);
  swift_release(v1[4]);
  return swift_deallocObject(v1, 40, 7);
}

uint64_t sub_100416340()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = type metadata accessor for FMIPDevice(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  swift_release(*(_QWORD *)(v0 + v7));
  swift_release(*(_QWORD *)(v0 + v8));
  return swift_deallocObject(v0, v8 + 8, v5);
}

void sub_1004163F8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for FMIPDevice(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_100404480(*(_QWORD *)(v0 + 16), v0 + v2, *(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100416454()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void (*v10)(uint64_t, uint64_t);

  v1 = type metadata accessor for FMIPDevice(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = (v5 + v3 + v4) & ~v3;
  v8 = (v5 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v0 + v4, v1);
  v10(v0 + v7, v1);
  swift_release(*(_QWORD *)(v0 + v8));
  swift_release(*(_QWORD *)(v0 + v9));
  return swift_deallocObject(v0, v9 + 8, v6);
}

double sub_100416504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for FMIPDevice(0) - 8);
  v2 = *(unsigned __int8 *)(v1 + 80);
  v3 = (v2 + 16) & ~v2;
  v4 = *(_QWORD *)(v1 + 64);
  return sub_100402E3C(v0 + v3, v0 + ((v4 + v2 + v3) & ~v2), *(_QWORD *)(v0 + ((v4 + ((v4 + v2 + v3) & ~v2) + 7) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((((v4 + ((v4 + v2 + v3) & ~v2) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100416560()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_release(v0[3]);
  swift_release(v0[4]);
  swift_release(v0[5]);
  return swift_deallocObject(v0, 48, 7);
}

void sub_10041659C()
{
  uint64_t *v0;

  sub_100400E78(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1004165A8()
{
  return sub_1003B9050((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_1004165B4()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_release(v0[3]);
  swift_bridgeObjectRelease(v0[4]);
  swift_bridgeObjectRelease(v0[5]);
  swift_bridgeObjectRelease(v0[6]);
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1004165F8()
{
  return sub_10000915C((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100416604()
{
  uint64_t v0;

  return sub_10040082C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10041660C()
{
  return sub_10000915C((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_100416618()
{
  uint64_t v0;

  return sub_100400248(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100416620()
{
  return sub_10000915C((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10041662C()
{
  uint64_t v0;

  return sub_1003FFC1C(*(_QWORD *)(v0 + 16));
}

id sub_100416700()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  char **v5;
  id v6;
  id v7;
  id v8;
  id v9;
  double v10;
  double v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  double v19;
  id v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  void *v30;

  v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_contentView];
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = objc_msgSend(v2, "userInterfaceStyle");
  v4 = (void *)objc_opt_self(UIColor);
  v5 = &selRef_tertiarySystemFillColor;
  if (v3 != (id)2)
    v5 = &selRef_whiteColor;
  v6 = objc_msgSend(v4, *v5);

  objc_msgSend(v1, "setBackgroundColor:", v6);
  v7 = objc_msgSend(v1, "layer");
  objc_msgSend(v7, "setShouldRasterize:", 1);

  v8 = objc_msgSend(v1, "layer");
  v9 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v9, "scale");
  v11 = v10;

  objc_msgSend(v8, "setRasterizationScale:", v11);
  v12 = objc_msgSend(v1, "layer");
  objc_msgSend(v12, "setCornerRadius:", _UISheetCornerRadius);

  v13 = objc_msgSend(v1, "layer");
  objc_msgSend(v13, "setMasksToBounds:", 0);

  v14 = objc_msgSend(v1, "layer");
  v15 = (void *)objc_opt_self(UIColor);
  v16 = objc_msgSend(v15, "blackColor");
  v17 = objc_msgSend(v16, "CGColor");

  objc_msgSend(v14, "setShadowColor:", v17);
  v18 = objc_msgSend(v1, "layer");
  LODWORD(v19) = 1031127695;
  objc_msgSend(v18, "setShadowOpacity:", v19);

  v20 = objc_msgSend(v1, "layer");
  objc_msgSend(v20, "setShadowRadius:", 16.0);

  v21 = objc_msgSend(v1, "layer");
  objc_msgSend(v21, "setShadowOffset:", 0.0, 0.0);

  v30 = *(void **)&v0[OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_contentStackView];
  objc_msgSend(v30, "setAxis:", 1);
  v22 = *(void **)&v0[OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_sectionLabel];
  v23 = (void *)objc_opt_self(UIFont);
  v24 = objc_msgSend(v23, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  objc_msgSend(v22, "setFont:", v24);

  objc_msgSend(v22, "setNumberOfLines:", 0);
  v25 = objc_msgSend(v15, "secondaryLabelColor");
  objc_msgSend(v22, "setTextColor:", v25);

  objc_msgSend(v22, "setAdjustsFontForContentSizeCategory:", 1);
  v26 = *(void **)&v0[OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_footerLabel];
  v27 = objc_msgSend(v23, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  objc_msgSend(v26, "setFont:", v27);

  objc_msgSend(v26, "setNumberOfLines:", 0);
  v28 = objc_msgSend(v15, "secondaryLabelColor");
  objc_msgSend(v26, "setTextColor:", v28);

  objc_msgSend(v26, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v0, "addSubview:", v22);
  objc_msgSend(v0, "addSubview:", v26);
  objc_msgSend(v0, "addSubview:", v1);
  return objc_msgSend(v0, "addSubview:", v30);
}

void sub_100416BA4()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  Class isa;
  uint64_t v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  Class v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  Class v52;
  uint64_t v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  id v64;
  id v65;
  Class v66;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_sectionLabel];
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_contentView];
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_contentStackView];
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v65 = *(id *)&v0[OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_footerLabel];
  objc_msgSend(v65, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = (void *)objc_opt_self(NSLayoutConstraint);
  v6 = sub_100053F2C(&qword_1005D2F10);
  v7 = swift_allocObject(v6, 56, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1004820C0;
  v8 = objc_msgSend(v2, "topAnchor");
  v9 = objc_msgSend(v1, "topAnchor");
  if (qword_1005D2090 != -1)
    swift_once(&qword_1005D2090, sub_100417424);
  v10 = objc_msgSend(v8, "constraintEqualToAnchor:constant:", v9, *((double *)&xmmword_1005F6080 + 1));

  *(_QWORD *)(v7 + 32) = v10;
  v11 = objc_msgSend(v2, "leadingAnchor");
  v12 = objc_msgSend(v1, "leadingAnchor");
  v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

  *(_QWORD *)(v7 + 40) = v13;
  v14 = objc_msgSend(v2, "trailingAnchor");
  v15 = objc_msgSend(v1, "trailingAnchor");
  if (qword_1005D20B8 != -1)
    swift_once(&qword_1005D20B8, sub_10005E610);
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v16 = objc_msgSend(v14, "constraintEqualToAnchor:constant:", v15, -*(double *)&qword_1005F5978);

  *(_QWORD *)(v7 + 48) = v16;
  specialized Array._endMutation()(v17);
  v18 = v7;
  sub_100048C64();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v5, "activateConstraints:", isa, swift_bridgeObjectRelease(v18).n128_f64[0]);

  v20 = swift_allocObject(v6, 64, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100481720;
  v21 = objc_msgSend(v3, "topAnchor");
  v22 = objc_msgSend(v4, "topAnchor");
  v23 = v5;
  v64 = v5;
  v24 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

  *(_QWORD *)(v20 + 32) = v24;
  v25 = objc_msgSend(v3, "leadingAnchor");
  v26 = objc_msgSend(v4, "leadingAnchor");
  v27 = objc_msgSend(v25, "constraintEqualToAnchor:constant:", v26, -*(double *)&qword_1005F5978);

  *(_QWORD *)(v20 + 40) = v27;
  v28 = objc_msgSend(v3, "trailingAnchor");
  v29 = objc_msgSend(v4, "trailingAnchor");
  v30 = objc_msgSend(v28, "constraintEqualToAnchor:constant:", v29, *(double *)&qword_1005F5978);

  *(_QWORD *)(v20 + 48) = v30;
  v31 = objc_msgSend(v3, "bottomAnchor");
  v32 = objc_msgSend(v4, "bottomAnchor");
  v33 = objc_msgSend(v31, "constraintEqualToAnchor:", v32);

  *(_QWORD *)(v20 + 56) = v33;
  specialized Array._endMutation()(v34);
  v35 = v20;
  v36 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v23, "activateConstraints:", v36, swift_bridgeObjectRelease(v35).n128_f64[0]);

  v37 = swift_allocObject(v6, 64, 7);
  *(_OWORD *)(v37 + 16) = xmmword_100481720;
  v38 = objc_msgSend(v4, "topAnchor");
  v39 = objc_msgSend(v2, "bottomAnchor");
  v40 = objc_msgSend(v38, "constraintEqualToAnchor:constant:", v39, *(double *)&qword_1005F6090);

  *(_QWORD *)(v37 + 32) = v40;
  v41 = objc_msgSend(v4, "leadingAnchor");
  v42 = objc_msgSend(v1, "leadingAnchor");
  v43 = objc_msgSend(v41, "constraintEqualToAnchor:constant:", v42, *(double *)&qword_1005F5978);

  *(_QWORD *)(v37 + 40) = v43;
  v44 = objc_msgSend(v4, "trailingAnchor");
  v45 = objc_msgSend(v1, "trailingAnchor");
  v46 = objc_msgSend(v44, "constraintEqualToAnchor:constant:", v45, -*(double *)&qword_1005F5978);

  *(_QWORD *)(v37 + 48) = v46;
  v47 = objc_msgSend(v4, "bottomAnchor");
  v48 = objc_msgSend(v65, "topAnchor");
  v49 = objc_msgSend(v47, "constraintEqualToAnchor:constant:", v48, -*(double *)&qword_1005F6098);

  *(_QWORD *)(v37 + 56) = v49;
  specialized Array._endMutation()(v50);
  v51 = v37;
  v52 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v64, "activateConstraints:", v52, swift_bridgeObjectRelease(v51).n128_f64[0]);

  v53 = swift_allocObject(v6, 56, 7);
  *(_OWORD *)(v53 + 16) = xmmword_1004820C0;
  v54 = objc_msgSend(v65, "leadingAnchor");
  v55 = objc_msgSend(v1, "leadingAnchor");
  v56 = objc_msgSend(v54, "constraintEqualToAnchor:", v55);

  *(_QWORD *)(v53 + 32) = v56;
  v57 = objc_msgSend(v65, "trailingAnchor");
  v58 = objc_msgSend(v1, "trailingAnchor");
  v59 = objc_msgSend(v57, "constraintEqualToAnchor:constant:", v58, -*(double *)&qword_1005F5978);

  *(_QWORD *)(v53 + 40) = v59;
  v60 = objc_msgSend(v65, "bottomAnchor");
  v61 = objc_msgSend(v1, "bottomAnchor");
  v62 = objc_msgSend(v60, "constraintEqualToAnchor:", v61);

  *(_QWORD *)(v53 + 48) = v62;
  specialized Array._endMutation()(v63);
  v66 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v64, "activateConstraints:", v66, swift_bridgeObjectRelease(v53).n128_f64[0]);

}

double sub_100417424()
{
  double result;

  result = 2.0;
  xmmword_1005F6080 = xmmword_1004884E0;
  *(_OWORD *)&qword_1005F6090 = xmmword_1004909C0;
  return result;
}

_QWORD *sub_100417444()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void (*v8)(void);
  _QWORD *v9;
  objc_super v11;

  v1 = OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_sectionLabel;
  v2 = objc_allocWithZone((Class)UILabel);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, "init");
  v4 = OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_footerLabel;
  *(_QWORD *)&v3[v4] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v5 = OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_contentStackView;
  *(_QWORD *)&v3[v5] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v6 = OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_contentView;
  *(_QWORD *)&v3[v6] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");

  v11.receiver = v3;
  v11.super_class = (Class)type metadata accessor for FMSectionPlatterGroupView();
  v7 = objc_msgSendSuper2(&v11, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v8 = *(void (**)(void))((swift_isaMask & *v7) + 0x70);
  v9 = v7;
  v8();
  sub_100416BA4();

  (*(void (**)(void))((swift_isaMask & *v9) + 0x80))();
  return v9;
}

void sub_1004175B8(uint64_t a1)
{
  char *v1;
  void *v3;
  id v4;
  id v5;
  void *v6;
  char **v7;
  id v8;
  objc_super v9;

  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for FMSectionPlatterGroupView();
  objc_msgSendSuper2(&v9, "traitCollectionDidChange:", a1);
  v3 = *(void **)&v1[OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_contentView];
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v4 = objc_msgSend(v1, "traitCollection");
  v5 = objc_msgSend(v4, "userInterfaceStyle");
  v6 = (void *)objc_opt_self(UIColor);
  v7 = &selRef_tertiarySystemFillColor;
  if (v5 != (id)2)
    v7 = &selRef_whiteColor;
  v8 = objc_msgSend(v6, *v7);

  objc_msgSend(v3, "setBackgroundColor:", v8);
}

id sub_100417738()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMSectionPlatterGroupView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMSectionPlatterGroupView()
{
  return objc_opt_self(_TtC6FindMy25FMSectionPlatterGroupView);
}

void sub_1004177E0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_sectionLabel;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v2 = OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_footerLabel;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v3 = OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_contentStackView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v4 = OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_contentView;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMSectionPlatterGroupView.swift", 38, 2, 42, 0);
  __break(1u);
}

void sub_1004178C4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[19];

  v4[0] = "\b";
  v4[1] = "\b";
  v4[2] = "\b";
  v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[6] = &unk_100490A48;
  v4[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
  sub_10041E644(319);
  if (v3 <= 0x3F)
  {
    v4[8] = *(_QWORD *)(v2 - 8) + 64;
    v4[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[10] = &unk_100490A60;
    v4[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[12] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[13] = &unk_100490A60;
    v4[14] = &unk_100490A60;
    v4[15] = &unk_100490A60;
    v4[16] = &unk_100490A60;
    v4[17] = &unk_100490A60;
    v4[18] = &unk_100490A78;
    swift_initClassMetadata2(a1, 0, 19, v4, a1 + 128);
  }
}

char *sub_10041797C(uint64_t a1, char a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return sub_100417E5C(a1, a2);
}

double sub_1004179BC()
{
  double result;

  result = 8.0;
  xmmword_1005F60A0 = xmmword_1004875D0;
  return result;
}

uint64_t sub_1004179D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + qword_1005E4360);
  *(_QWORD *)(v1 + qword_1005E4360) = a1;
  return swift_release(v2);
}

uint64_t sub_1004179E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + qword_1005E4370;
  swift_beginAccess(v3, v5, 0, 0);
  return sub_100007464(v3, a1, &qword_1005E4440);
}

uint64_t sub_100417A40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[24];

  v3 = v1 + qword_1005E4370;
  swift_beginAccess(v3, v5, 33, 0);
  sub_100099CDC(a1, v3, &qword_1005E4440);
  return swift_endAccess(v5);
}

uint64_t (*sub_100417AA0(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  swift_beginAccess(v1 + qword_1005E4370, a1, 33, 0);
  return j__swift_endAccess;
}

uint64_t sub_100417AE4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_1005E4380);
}

id sub_100417AF4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;

  if ((*(_BYTE *)(v0 + qword_1005E4390) & 1) != 0)
  {
    v1 = &qword_1005E4340;
  }
  else
  {
    if ((sub_10041C92C() & 1) == 0)
    {
      v2 = &qword_1005E4348;
      return *(id *)(v0 + *v2);
    }
    v1 = &qword_1005E4338;
  }
  v0 = *(_QWORD *)(v0 + *v1);
  v2 = &OBJC_IVAR____TtC6FindMy15FMEmptyListView_scrollView;
  return *(id *)(v0 + *v2);
}

uint64_t sub_100417B5C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_1005E4390);
}

void sub_100417B6C(char a1)
{
  _QWORD *v1;

  *((_BYTE *)v1 + qword_1005E4390) = a1;
  sub_10041CD9C(*(_QWORD *)((char *)v1 + qword_1005E4330), *(_QWORD *)((swift_isaMask & *v1) + 0x78));
}

uint64_t sub_100417BA0(uint64_t result)
{
  _QWORD *v1;

  if (*((_BYTE *)v1 + qword_1005E4398) != (result & 1))
    return sub_10041CD9C(*(_QWORD *)((char *)v1 + qword_1005E4330), *(_QWORD *)((swift_isaMask & *v1) + 0x78));
  return result;
}

uint64_t sub_100417BE4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_1005E4398);
}

uint64_t sub_100417BF4(char a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(v1 + qword_1005E4398);
  *(_BYTE *)(v1 + qword_1005E4398) = a1;
  return sub_100417BA0(v2);
}

uint64_t sub_100417C0C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_1005F60B8);
}

uint64_t sub_100417C1C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_1005F60C0);
}

void sub_100417C2C(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + qword_1005F60C0) = a1;
  sub_10041D764();
}

uint64_t sub_100417C3C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_1005F60C8);
}

void sub_100417C4C(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + qword_1005F60C8) = a1;
  sub_10041D764();
}

void sub_100417C5C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)((char *)v2 + qword_1005F60D0);
  v4 = *(_QWORD *)((char *)v2 + qword_1005F60D0 + 8);
  *v3 = a1;
  v3[1] = a2;
  swift_bridgeObjectRelease(v4);
  sub_10041CD9C(*(_QWORD *)((char *)v2 + qword_1005E4330), *(_QWORD *)((swift_isaMask & *v2) + 0x78));
}

uint64_t sub_100417CAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[24];
  _BYTE v13[24];

  v1 = type metadata accessor for FMSelectedSection(0);
  v2 = __chkstk_darwin(v1);
  v4 = (uint64_t *)&v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  v6 = (uint64_t *)&v12[-v5];
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator);
  v8 = *(_QWORD *)(v7 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v8, v13, 0, 0);
  sub_10004FC74(v8, (uint64_t)v6, type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload(v6, v1) == 5)
  {
    v9 = *v6;
    sub_1000758D8(v6[1], v6[2]);
  }
  else
  {
    sub_10004FCB8((uint64_t)v6, type metadata accessor for FMSelectedSection);
    v10 = *(_QWORD *)(v7 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
    swift_beginAccess(v10, v12, 0, 0);
    sub_10004FC74(v10, (uint64_t)v4, type metadata accessor for FMSelectedSection);
    if (swift_getEnumCaseMultiPayload(v4, v1) == 6)
    {
      v9 = *v4;
      sub_1000758D8(v4[1], v4[2]);
    }
    else
    {
      sub_10004FCB8((uint64_t)v4, type metadata accessor for FMSelectedSection);
      return 0;
    }
  }
  return v9;
}

double sub_100417E2C()
{
  uint64_t v0;
  CGRect v2;

  objc_msgSend(*(id *)(v0 + qword_1005E4388), "frame");
  return fabs(CGRectGetMinY(v2));
}

char *sub_100417E5C(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v5;
  uint64_t v6;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  objc_class *ObjCClassFromMetadata;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, id, uint64_t, uint64_t);
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, _UNKNOWN **, uint64_t, uint64_t);
  char *v31;
  _QWORD *v32;
  void (*v33)(char *, _UNKNOWN **);
  char *v34;
  _QWORD *v35;
  objc_super v37;

  v5 = (_QWORD *)(swift_isaMask & *v2);
  v6 = qword_1005E4350;
  v7 = objc_allocWithZone((Class)UILabel);
  v8 = v2;
  *(_QWORD *)((char *)v2 + v6) = objc_msgSend(v7, "init");
  v9 = qword_1005E4358;
  *(_QWORD *)((char *)v8 + v9) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMLoadingView()), "init");
  *(_QWORD *)((char *)v8 + qword_1005E4360) = 0;
  v10 = qword_1005E4368;
  v11 = objc_allocWithZone((Class)type metadata accessor for FMExtendedPlatterInfoView(0));
  *(_QWORD *)((char *)v8 + v10) = sub_1002C114C(1, 0);
  v12 = (char *)v8 + qword_1005E4370;
  v13 = type metadata accessor for FMIPSeparationEvent(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = qword_1005E4378;
  *(_QWORD *)((char *)v8 + v14) = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v15 = qword_1005F60B0;
  *(_QWORD *)((char *)v8 + v15) = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
  v16 = qword_1005E4388;
  *(_QWORD *)((char *)v8 + v16) = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *((_BYTE *)v8 + qword_1005E4390) = 0;
  *((_BYTE *)v8 + qword_1005E4398) = 0;
  *((_BYTE *)v8 + qword_1005F60B8) = 0;
  *((_BYTE *)v8 + qword_1005F60C0) = 0;
  *((_BYTE *)v8 + qword_1005F60C8) = 0;
  v17 = (_QWORD *)((char *)v8 + qword_1005F60D0);
  v18 = type metadata accessor for FMTableView(0);
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v18);
  *v17 = 0;
  v17[1] = 0;
  v20 = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)((char *)v8 + qword_1005E4348) = v20;
  v21 = v5[12];
  v22 = v5[15];
  v23 = *(uint64_t (**)(uint64_t, id, uint64_t, uint64_t))(v22 + 96);
  swift_retain(a1);
  *(_QWORD *)((char *)v8 + qword_1005E4330) = v23(a1, v20, v21, v22);
  *((_BYTE *)v8 + qword_1005E4380) = a2;
  v24 = *(uint64_t (**)(uint64_t))(v5[13] + 256);
  v25 = swift_retain(a1);
  *(_QWORD *)((char *)v8 + qword_1005E4338) = v24(v25);
  v26 = *(uint64_t (**)(uint64_t))(v5[14] + 256);
  v27 = swift_retain(a1);
  *(_QWORD *)((char *)v8 + qword_1005E4340) = v26(v27);

  *(_QWORD *)((char *)v8 + OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator) = a1;
  v37.receiver = v8;
  v37.super_class = (Class)type metadata accessor for FMMediatedViewController();
  swift_retain(a1);
  v28 = (char *)objc_msgSendSuper2(&v37, "initWithNibName:bundle:", 0, 0);
  v29 = *(_QWORD *)&v28[qword_1005E4330];
  v30 = *(void (**)(char *, _UNKNOWN **, uint64_t, uint64_t))(v22 + 80);
  v31 = v28;
  swift_unknownObjectRetain(v29);
  v30(v28, &off_1005659E8, v21, v22);
  swift_unknownObjectRelease(v29);
  v32 = *(_QWORD **)&v31[qword_1005E4340];
  v33 = *(void (**)(char *, _UNKNOWN **))((swift_isaMask & *v32) + 0x170);
  v34 = v31;
  v35 = v32;
  v33(v28, &off_100565998);

  swift_release(a1);
  return v34;
}

void sub_1004181C4(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_10041EA84();
}

id sub_1004181E8()
{
  _QWORD *v0;
  __int128 v1;
  objc_class *v2;
  void *v3;
  _OWORD v5[2];
  objc_super v6;

  v1 = *(_OWORD *)((swift_isaMask & *v0) + 0x70);
  v5[0] = *(_OWORD *)((swift_isaMask & *v0) + 0x60);
  v5[1] = v1;
  v2 = (objc_class *)type metadata accessor for FMSeparatedListViewController(0, (uint64_t)v5);
  v6.receiver = v0;
  v6.super_class = v2;
  objc_msgSendSuper2(&v6, "viewDidLoad");
  sub_100418E14();
  sub_10041B360();
  sub_1004196AC();
  objc_msgSend(*(id *)((char *)v0 + qword_1005F60B0), "setHidden:", (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator) + 16)+ OBJC_IVAR____TtC6FindMy19FMConditionProvider_accountsAreSignedIn) & 1) == 0);
  v3 = *(void **)((char *)v0 + qword_1005E4348);
  objc_msgSend(v3, "setDataSource:", *(_QWORD *)((char *)v0 + qword_1005E4330));
  objc_msgSend(v3, "setDelegate:", v0);
  return objc_msgSend(v3, "setSectionHeaderTopPadding:", 0.0);
}

void sub_1004182E8(void *a1)
{
  id v1;

  v1 = a1;
  sub_1004181E8();

}

uint64_t sub_100418320(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  objc_class *v20;
  void *v21;
  id v22;
  void *v23;
  void (*v24)(char *, char *, uint64_t);
  Class isa;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char **v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  objc_super v38;

  v2 = v1;
  v4 = swift_isaMask & *(_QWORD *)v1;
  v5 = sub_100053F2C(&qword_1005E4440);
  __chkstk_darwin(v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100053F2C(&qword_1005D33C0);
  __chkstk_darwin(v8);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for IndexPath(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v34 - v16;
  v18 = *(_QWORD *)(v4 + 112);
  v19 = *(_QWORD *)(v4 + 120);
  v34 = *(_OWORD *)(v4 + 96);
  v35 = v34;
  v36 = v18;
  v37 = v19;
  v20 = (objc_class *)type metadata accessor for FMSeparatedListViewController(0, (uint64_t)&v35);
  v38.receiver = v2;
  v38.super_class = v20;
  objc_msgSendSuper2(&v38, "viewWillAppear:", a1 & 1);
  v21 = *(void **)&v2[qword_1005E4348];
  v22 = objc_msgSend(v21, "indexPathForSelectedRow");
  if (v22)
  {
    v23 = v22;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v22);

    v24 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v24(v10, v15, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
    {
      v24(v17, v10, v11);
      isa = IndexPath._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v21, "deselectRowAtIndexPath:animated:", isa, 1);

      objc_msgSend(v21, "setContentOffset:animated:", 0, 0.0, 0.0);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
      goto LABEL_6;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
  }
  sub_1000051EC((uint64_t)v10, &qword_1005D33C0);
LABEL_6:
  v26 = *(_QWORD *)&v2[qword_1005E4330];
  v27 = v34;
  if (((*(uint64_t (**)(_QWORD, uint64_t))(v19 + 56))(v34, v19) & 1) != 0)
  {
    v28 = *(char **)&v2[qword_1005E4358];
    objc_msgSend(v28, "setUserInteractionEnabled:", 0);
    objc_msgSend(v28, "setHidden:", 1);
    v29 = &selRef_stopAnimating;
  }
  else
  {
    if (((*(uint64_t (**)(void))((swift_isaMask & **(_QWORD **)&v2[qword_1005E4340]) + 0x180))() & 1) != 0)
      goto LABEL_11;
    v28 = *(char **)&v2[qword_1005E4358];
    objc_msgSend(v28, "setUserInteractionEnabled:", 1);
    objc_msgSend(v28, "setHidden:", 0);
    v29 = &selRef_startAnimating;
  }
  objc_msgSend(*(id *)&v28[OBJC_IVAR____TtC6FindMy13FMLoadingView_activityIndicator], *v29);
LABEL_11:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 40))(1, v27, v19);
  sub_10002F478();
  sub_100418BCC();
  sub_10041CD9C(v26, v19);
  v30 = sub_100417CAC();
  if (v30)
  {
    v31 = *(_QWORD *)(v30 + 16);
    swift_bridgeObjectRelease(v30);
  }
  else
  {
    v31 = 0;
  }
  FMIPSeparationEvent.init(itemOrDeviceCount:addSafeLocationTapped:addToAllTapped:homeRemoved:)(v31, 0, 0, 0);
  v32 = type metadata accessor for FMIPSeparationEvent(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v7, 0, 1, v32);
  return sub_100417A40((uint64_t)v7);
}

void sub_1004186FC(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_100418320(a3);

}

uint64_t sub_10041873C(char a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  objc_class *v14;
  uint64_t v15;
  uint64_t v17;
  __n128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  objc_super v23;

  v2 = v1;
  v4 = swift_isaMask & *v2;
  v5 = sub_100053F2C(&qword_1005E4440);
  __chkstk_darwin(v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FMIPSeparationEvent(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v4 + 112);
  v13 = *(_QWORD *)(v4 + 120);
  v19 = *(_OWORD *)(v4 + 96);
  v20 = v19;
  v21 = v12;
  v22 = v13;
  v14 = (objc_class *)type metadata accessor for FMSeparatedListViewController(0, (uint64_t)&v20);
  v23.receiver = v2;
  v23.super_class = v14;
  objc_msgSendSuper2(&v23, "viewWillDisappear:", a1 & 1);
  (*(void (**)(_QWORD, _QWORD, uint64_t))(v13 + 40))(0, v19, v13);
  sub_100279BC4();
  sub_100418C6C();
  v15 = (uint64_t)v2 + qword_1005E4370;
  swift_beginAccess((char *)v2 + qword_1005E4370, &v20, 0, 0);
  sub_100007464(v15, (uint64_t)v7, &qword_1005E4440);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_1000051EC((uint64_t)v7, &qword_1005E4440);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  v17 = *(_QWORD *)(*(_QWORD *)((char *)v2 + OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator) + 24);
  swift_retain(v17);
  FMIPManager.enqueue(separationEvent:)(v11);
  v18 = swift_release(v17);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v18);
}

void sub_100418924(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_10041873C(a3);

}

void sub_100418964(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  __int128 v4;
  objc_class *v5;
  id v6;
  id v7;
  double left;
  double top;
  double right;
  double bottom;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  id v17;
  void *v18;
  _OWORD v19[2];
  objc_super v20;

  v2 = v1;
  v4 = *(_OWORD *)((swift_isaMask & *v2) + 0x70);
  v19[0] = *(_OWORD *)((swift_isaMask & *v2) + 0x60);
  v19[1] = v4;
  v5 = (objc_class *)type metadata accessor for FMSeparatedListViewController(0, (uint64_t)v19);
  v20.receiver = v2;
  v20.super_class = v5;
  objc_msgSendSuper2(&v20, "traitCollectionDidChange:", a1);
  v6 = objc_msgSend(v2, "traitCollection");
  v7 = objc_msgSend(v6, "horizontalSizeClass");

  if ((unint64_t)v7 >= 2)
  {
    if (v7 == (id)2)
    {
      if (qword_1005D1DC8 != -1)
        swift_once(&qword_1005D1DC8, sub_10005F330);
      right = *(double *)&qword_1005F5648;
      bottom = 0.0;
      left = *(double *)&qword_1005F5648;
      top = 0.0;
    }
    else
    {
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      top = UIEdgeInsetsZero.top;
      left = UIEdgeInsetsZero.left;
      bottom = UIEdgeInsetsZero.bottom;
      right = UIEdgeInsetsZero.right;
      v12 = type metadata accessor for Logger(0);
      v13 = sub_100056D88(v12, (uint64_t)qword_1005F5748);
      v14 = Logger.logObject.getter(v13);
      v15 = static os_log_type_t.default.getter(v14);
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v16 = 0;
        _os_log_impl((void *)&_mh_execute_header, v14, v15, "FMListViewController: unhandled trait collection size class", v16, 2u);
        swift_slowDealloc(v16, -1, -1);
      }

    }
  }
  else
  {
    top = UIEdgeInsetsZero.top;
    left = UIEdgeInsetsZero.left;
    bottom = UIEdgeInsetsZero.bottom;
    right = UIEdgeInsetsZero.right;
  }
  v17 = objc_msgSend(v2, "view");
  if (v17)
  {
    v18 = v17;
    objc_msgSend(v17, "setLayoutMargins:", top, left, bottom, right);

  }
  else
  {
    __break(1u);
  }
}

void sub_100418B74(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;

  v5 = a3;
  v6 = a1;
  sub_100418964((uint64_t)a3);

}

double sub_100418BCC()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  _OWORD v8[2];

  v1 = swift_isaMask & *v0;
  v2 = *(id *)(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator) + 16);
  v3 = *(_OWORD *)(v1 + 112);
  v8[0] = *(_OWORD *)(v1 + 96);
  v8[1] = v3;
  v4 = type metadata accessor for FMSeparatedListViewController(0, (uint64_t)v8);
  v5 = sub_10002F580((uint64_t)v0, (uint64_t)v2, v4, (uint64_t)&off_100565918);

  v6 = *(_QWORD *)((char *)v0 + qword_1005E4360);
  *(_QWORD *)((char *)v0 + qword_1005E4360) = v5;
  *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  return result;
}

void sub_100418C6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];

  v1 = *(_QWORD *)(v0 + qword_1005E4360);
  if (v1)
  {
    v2 = v0;
    v3 = *(char **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator) + 16);
    v4 = (uint64_t *)&v3[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions];
    swift_beginAccess(&v3[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions], v12, 33, 0);
    swift_retain(v1);
    v5 = v3;
    v6 = sub_10005D558(v4, v1);
    v7 = v6;
    v8 = *v4;
    if ((unint64_t)*v4 >> 62)
    {
      if (v8 < 0)
        v11 = *v4;
      else
        v11 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*v4);
      v9 = _CocoaArrayWrapper.endIndex.getter(v11);
      swift_bridgeObjectRelease(v8);
      if (v9 >= v7)
        goto LABEL_4;
    }
    else
    {
      v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v9 >= v6)
      {
LABEL_4:
        sub_10005D32C(v7, v9);
        swift_endAccess(v12);

        v10 = *(_QWORD *)(v2 + qword_1005E4360);
        *(_QWORD *)(v2 + qword_1005E4360) = 0;
        swift_release(v1);
        swift_release(v10);
        return;
      }
    }
    __break(1u);
  }
}

uint64_t sub_100418D98()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)((swift_isaMask & *v0) + 0x78) + 144))(*(_QWORD *)((swift_isaMask & *v0) + 0x60));
}

void sub_100418DE0(void *a1)
{
  id v1;

  v1 = a1;
  sub_100418D98();

}

void sub_100418E14()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  NSString v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  NSString v21;
  double v22;
  void *v23;
  uint64_t v24;
  id v25;
  void *v26;
  void *v27;
  char *v28;
  id v29;
  Swift::String v30;
  Swift::String_optional v31;
  Swift::String v32;
  Swift::String v33;
  Swift::String *v34;
  uint64_t v35;
  unint64_t v36;
  void *v37;
  void *object;
  NSString v39;
  char *v40;
  id v41;
  Swift::String v42;
  Swift::String_optional v43;
  Swift::String v44;
  Swift::String v45;
  Swift::String *v46;
  uint64_t v47;
  unint64_t v48;
  void *v49;
  void *v50;
  NSString v51;
  _BYTE *v52;
  _BYTE *v53;
  void *v54;
  id v55;
  id v56;
  void *v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  void *v62;
  id v63;
  void *v64;
  id v65;
  void *v66;
  id v67;
  void *v68;
  id v69;
  void *v70;
  id v71;
  void *v72;
  id v73;
  void *v74;
  void *v75;
  id v76;
  void *v77;
  id v78;
  Swift::String v79;
  Swift::String v80;

  v1 = v0;
  v2 = swift_isaMask & *(_QWORD *)v0;
  v3 = sub_100053F2C((uint64_t *)&unk_1005E4430);
  __chkstk_darwin(v3);
  v5 = (char *)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = *(id *)&v1[qword_1005E4338];
  objc_msgSend(v76, "setHidden:", 1);
  v6 = *(void **)&v1[qword_1005F60B0];
  LODWORD(v7) = 1148846080;
  objc_msgSend(v6, "setContentHuggingPriority:forAxis:", 0, v7);
  v8 = *(_QWORD *)(v2 + 120);
  v9 = *(_QWORD *)(v2 + 96);
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v9, v8);
  if (v10)
  {
    v12 = v10;
    v13 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v11 = swift_bridgeObjectRelease(v12).n128_u64[0];
  }
  else
  {
    v13 = 0;
  }
  objc_msgSend(v6, "setTitle:forState:", v13, 0, v11);

  v75 = v6;
  objc_msgSend(v6, "addTarget:action:forControlEvents:", v1, "handleAction", 64);
  v14 = *(void **)&v1[qword_1005E4350];
  v15 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleTitle2);
  v16 = (void *)sub_10003CEE8(0x8000);

  v17 = (void *)sub_10003CEE8(2);
  objc_msgSend(v14, "setFont:", v17);

  objc_msgSend(v14, "setNumberOfLines:", 1);
  v78 = (id)objc_opt_self(UIColor);
  v18 = objc_msgSend(v78, "labelColor");
  objc_msgSend(v14, "setTextColor:", v18);

  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v9, v8);
  v20 = v19;
  v21 = String._bridgeToObjectiveC()();
  objc_msgSend(v14, "setText:", v21, swift_bridgeObjectRelease(v20).n128_f64[0]);

  objc_msgSend(v14, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v14, "setAccessibilityTraits:", UIAccessibilityTraitHeader);
  LODWORD(v22) = 1148846080;
  v77 = v14;
  objc_msgSend(v14, "setContentCompressionResistancePriority:forAxis:", 1, v22);
  objc_msgSend(*(id *)&v1[qword_1005E4368], "setUserInteractionEnabled:", 1);
  v23 = *(void **)&v1[qword_1005E4368];
  v24 = type metadata accessor for FMPlatterIcon(0);
  swift_storeEnumTagMultiPayload(v5, v24, 13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v5, 0, 1, v24);
  v25 = v23;
  sub_1002C0C88((uint64_t)v5);

  v26 = *(void **)&v1[qword_1005E4368];
  v27 = (void *)objc_opt_self(NSBundle);
  v28 = v26;
  v29 = objc_msgSend(v27, "mainBundle");
  v30._countAndFlagsBits = 0xD000000000000024;
  v79._object = (void *)0x80000001004A91F0;
  v30._object = (void *)0x80000001004B1F10;
  v31.value._countAndFlagsBits = 0xD000000000000016;
  v31.value._object = (void *)0x80000001004A91D0;
  v32._countAndFlagsBits = 0;
  v32._object = (void *)0xE000000000000000;
  v79._countAndFlagsBits = 0xD00000000000001BLL;
  v33 = NSLocalizedString(_:tableName:bundle:value:comment:)(v30, v31, (NSBundle)v29, v32, v79);

  v34 = (Swift::String *)&v28[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionTitle];
  v35 = *(_QWORD *)&v28[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionTitle + 8];
  *v34 = v33;
  v36 = swift_bridgeObjectRelease(v35).n128_u64[0];
  v37 = *(void **)&v28[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionLabel];
  object = v34->_object;
  if (object)
  {
    swift_bridgeObjectRetain(v34->_object);
    v39 = String._bridgeToObjectiveC()();
    v36 = swift_bridgeObjectRelease(object).n128_u64[0];
  }
  else
  {
    v39 = 0;
  }
  objc_msgSend(v37, "setText:", v39, *(double *)&v36);

  v40 = (char *)*(id *)&v1[qword_1005E4368];
  v41 = objc_msgSend(v27, "mainBundle");
  v42._countAndFlagsBits = 0xD000000000000020;
  v80._object = (void *)0x80000001004A91F0;
  v42._object = (void *)0x80000001004B1F40;
  v43.value._countAndFlagsBits = 0xD000000000000016;
  v43.value._object = (void *)0x80000001004A91D0;
  v44._countAndFlagsBits = 0;
  v44._object = (void *)0xE000000000000000;
  v80._countAndFlagsBits = 0xD00000000000001BLL;
  v45 = NSLocalizedString(_:tableName:bundle:value:comment:)(v42, v43, (NSBundle)v41, v44, v80);

  v46 = (Swift::String *)&v40[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitle];
  v47 = *(_QWORD *)&v40[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitle + 8];
  *v46 = v45;
  v48 = swift_bridgeObjectRelease(v47).n128_u64[0];
  v49 = *(void **)&v40[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitleLabel];
  v50 = v46->_object;
  if (v50)
  {
    swift_bridgeObjectRetain(v46->_object);
    v51 = String._bridgeToObjectiveC()();
    v48 = swift_bridgeObjectRelease(v50).n128_u64[0];
  }
  else
  {
    v51 = 0;
  }
  objc_msgSend(v49, "setText:", v51, *(double *)&v48);

  v52 = *(_BYTE **)&v1[qword_1005E4368];
  v52[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_collapsed] = 0;
  v53 = v52;
  sub_1002C0DEC();

  objc_msgSend(*(id *)&v1[qword_1005E4378], "setAxis:", 1);
  objc_msgSend(*(id *)&v1[qword_1005E4378], "setAlignment:", 0);
  objc_msgSend(*(id *)&v1[qword_1005E4378], "setDistribution:", 3);
  objc_msgSend(*(id *)&v1[qword_1005E4378], "insertArrangedSubview:atIndex:", *(_QWORD *)&v1[qword_1005E4368], 0);
  v54 = *(void **)&v1[qword_1005E4348];
  v55 = v78;
  v56 = objc_msgSend(v78, "clearColor");
  objc_msgSend(v54, "setBackgroundColor:", v56);

  objc_msgSend(v54, "setSeparatorStyle:", 0);
  objc_msgSend(v54, "setRowHeight:", UITableViewAutomaticDimension);
  if (qword_1005D1DC8 != -1)
    swift_once(&qword_1005D1DC8, sub_10005F330);
  objc_msgSend(v54, "setEstimatedRowHeight:", *((double *)&xmmword_1005F5620 + 1));
  objc_msgSend(v54, "setContentInset:", 0.0, 0.0, *(double *)&qword_1005F5630, 0.0);
  v57 = *(void **)&v1[qword_1005E4388];
  v58 = objc_msgSend(v55, "quaternaryLabelColor");
  objc_msgSend(v57, "setBackgroundColor:", v58);

  v59 = objc_msgSend(v1, "view");
  if (!v59)
  {
    __break(1u);
    goto LABEL_22;
  }
  v60 = v59;
  objc_msgSend(v59, "addSubview:", *(_QWORD *)&v1[qword_1005E4378]);

  v61 = objc_msgSend(v1, "view");
  if (!v61)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v62 = v61;
  objc_msgSend(v61, "addSubview:", v54);

  v63 = objc_msgSend(v1, "view");
  if (!v63)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v64 = v63;
  objc_msgSend(v63, "addSubview:", v77);

  v65 = objc_msgSend(v1, "view");
  if (!v65)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v66 = v65;
  objc_msgSend(v65, "addSubview:", v57);

  v67 = objc_msgSend(v1, "view");
  if (!v67)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v68 = v67;
  objc_msgSend(v67, "addSubview:", v76);

  v69 = objc_msgSend(v1, "view");
  if (!v69)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v70 = v69;
  objc_msgSend(v69, "addSubview:", *(_QWORD *)&v1[qword_1005E4358]);

  v71 = objc_msgSend(v1, "view");
  if (!v71)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v72 = v71;
  objc_msgSend(v71, "addSubview:", v75);

  v73 = objc_msgSend(v1, "view");
  if (v73)
  {
    v74 = v73;
    objc_msgSend(v73, "addSubview:", *(_QWORD *)&v1[qword_1005E4340]);

    return;
  }
LABEL_28:
  __break(1u);
}

void sub_1004196AC()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  _OWORD v7[2];
  uint64_t v8;

  v1 = swift_isaMask & *v0;
  v2 = objc_allocWithZone((Class)UITapGestureRecognizer);
  v3 = *(_OWORD *)(v1 + 112);
  v7[0] = *(_OWORD *)(v1 + 96);
  v7[1] = v3;
  v4 = type metadata accessor for FMSeparatedListViewController(0, (uint64_t)v7);
  v5 = _bridgeAnythingToObjectiveC<A>(_:)(&v8, v4);
  v6 = objc_msgSend(v2, "initWithTarget:action:", v5, "handleSeparation");
  objc_msgSend(*(id *)((char *)v0 + qword_1005E4368), "addGestureRecognizer:", v6, swift_unknownObjectRelease(v5).n128_f64[0]);

}

void sub_10041976C()
{
  char *v0;
  char *v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  void *v11;
  id v12;
  Swift::String v13;
  Swift::String_optional v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  Swift::String v26;
  Swift::String_optional v27;
  Swift::String v28;
  void *object;
  uint64_t v30;
  char *v31;
  NSString v32;
  void *v33;
  void *v34;
  id v35;
  Swift::String v36;
  Swift::String_optional v37;
  Swift::String v38;
  void *v39;
  NSString v40;
  NSString v41;
  id v42;
  uint64_t v43;
  void *v44;
  id v45;
  Swift::String v46;
  Swift::String_optional v47;
  Swift::String v48;
  Swift::String v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSString v55;
  void *v56;
  id v57;
  id v58;
  Swift::String v59;
  Swift::String v60;
  void *v61;
  NSString v62;
  void *v63;
  id v64;
  id v65;
  id v66;
  id v67;
  char *v68;
  void **aBlock;
  unint64_t v70;
  void (*v71)(uint64_t, void *);
  void *v72;
  uint64_t (*v73)();
  uint64_t v74;
  Swift::String v75;
  Swift::String v76;
  Swift::String v77;
  Swift::String v78;
  Swift::String v79;

  v1 = v0;
  v2 = sub_100417AA0((uint64_t)&aBlock);
  v4 = v3;
  v5 = type metadata accessor for FMIPSeparationEvent(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
    FMIPSeparationEvent.addSafeLocationTapped.setter(1);
  ((void (*)(void ***, _QWORD))v2)(&aBlock, 0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100056D88(v6, (uint64_t)qword_1005F5748);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "FMItemDetailContentViewController: Left Behind Button Toggled", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  v11 = (void *)objc_opt_self(NSBundle);
  v12 = objc_msgSend(v11, "mainBundle");
  v13._countAndFlagsBits = 0xD00000000000002ALL;
  v75._object = (void *)0x80000001004A91F0;
  v13._object = (void *)0x80000001004B2240;
  v14.value._countAndFlagsBits = 0xD000000000000016;
  v14.value._object = (void *)0x80000001004A91D0;
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  v75._countAndFlagsBits = 0xD00000000000001BLL;
  v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, v14, (NSBundle)v12, v15, v75);

  v67 = (id)sub_100053F2C((uint64_t *)&unk_1005D33E0);
  v17 = swift_allocObject(v67, 72, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100481740;
  v18 = *(_QWORD *)&v1[qword_1005F60D0];
  v19 = *(_QWORD *)&v1[qword_1005F60D0 + 8];
  *(_QWORD *)(v17 + 56) = &type metadata for String;
  *(_QWORD *)(v17 + 64) = sub_100071E88();
  if (v19)
    v20 = v18;
  else
    v20 = 0;
  v21 = 0xE000000000000000;
  if (v19)
    v21 = v19;
  *(_QWORD *)(v17 + 32) = v20;
  *(_QWORD *)(v17 + 40) = v21;
  swift_bridgeObjectRetain(v19);
  String.init(format:_:)(v16._countAndFlagsBits, v16._object, v17);
  v23 = v22;
  v24 = v11;
  v25 = objc_msgSend(v11, "mainBundle", swift_bridgeObjectRelease(v16._object).n128_f64[0]);
  v26._countAndFlagsBits = 0xD00000000000002DLL;
  v76._object = (void *)0x80000001004A91F0;
  v26._object = (void *)0x80000001004B2270;
  v27.value._countAndFlagsBits = 0xD000000000000016;
  v27.value._object = (void *)0x80000001004A91D0;
  v28._countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  v76._countAndFlagsBits = 0xD00000000000001BLL;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, v27, (NSBundle)v25, v28, v76)._object;

  v30 = swift_allocObject(&unk_100565A80, 24, 7);
  *(_QWORD *)(v30 + 16) = v1;
  v31 = v1;
  v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v73 = (uint64_t (*)())sub_10041E9AC;
  v74 = v30;
  aBlock = _NSConcreteStackBlock;
  v70 = 1107296256;
  v71 = sub_100008B40;
  v72 = &unk_100565A98;
  v33 = _Block_copy(&aBlock);
  swift_release(v74);
  v65 = (id)objc_opt_self(UIAlertAction);
  v66 = objc_msgSend(v65, "actionWithTitle:style:handler:", v32, 0, v33);
  _Block_release(v33);

  v34 = v24;
  v35 = objc_msgSend(v24, "mainBundle");
  v36._countAndFlagsBits = 0xD000000000000030;
  v77._object = (void *)0x80000001004A91F0;
  v36._object = (void *)0x80000001004B22A0;
  v37.value._countAndFlagsBits = 0xD000000000000016;
  v37.value._object = (void *)0x80000001004A91D0;
  v38._countAndFlagsBits = 0;
  v38._object = (void *)0xE000000000000000;
  v77._countAndFlagsBits = 0xD00000000000001BLL;
  v39 = NSLocalizedString(_:tableName:bundle:value:comment:)(v36, v37, (NSBundle)v35, v38, v77)._object;

  v40 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v23);
  v41 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v39);
  v42 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v40, v41, 1);

  objc_msgSend(v42, "addAction:", v66);
  if (v31[qword_1005E4380])
    v43 = 0xD000000000000035;
  else
    v43 = 0xD000000000000033;
  if (v31[qword_1005E4380])
    v44 = (void *)0x80000001004C5FD0;
  else
    v44 = (void *)0x80000001004C5F90;
  v45 = objc_msgSend(v34, "mainBundle");
  v78._object = (void *)0x80000001004A91F0;
  v46._countAndFlagsBits = v43;
  v46._object = v44;
  v47.value._countAndFlagsBits = 0xD000000000000016;
  v47.value._object = (void *)0x80000001004A91D0;
  v48._countAndFlagsBits = 0;
  v48._object = (void *)0xE000000000000000;
  v78._countAndFlagsBits = 0xD00000000000001BLL;
  v49 = NSLocalizedString(_:tableName:bundle:value:comment:)(v46, v47, (NSBundle)v45, v48, v78);
  swift_bridgeObjectRelease(v44);

  v50 = swift_allocObject(v67, 72, 7);
  *(_OWORD *)(v50 + 16) = xmmword_100481740;
  v51 = objc_msgSend(*(id *)&v31[qword_1005E4330], "tableView:numberOfRowsInSection:", *(_QWORD *)&v31[qword_1005E4348], 0);
  *(_QWORD *)(v50 + 56) = &type metadata for Int;
  *(_QWORD *)(v50 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v50 + 32) = v51;
  String.init(format:_:)(v49._countAndFlagsBits, v49._object, v50);
  v53 = v52;
  swift_bridgeObjectRelease(v49._object);
  v54 = swift_allocObject(&unk_100565AD0, 24, 7);
  *(_QWORD *)(v54 + 16) = v31;
  v68 = v31;
  v55 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v53);
  v73 = (uint64_t (*)())sub_10041E9D8;
  v74 = v54;
  aBlock = _NSConcreteStackBlock;
  v70 = 1107296256;
  v71 = sub_100008B40;
  v72 = &unk_100565AE8;
  v56 = _Block_copy(&aBlock);
  v57 = objc_msgSend(v65, "actionWithTitle:style:handler:", v55, 0, v56, swift_release(v74).n128_f64[0]);
  _Block_release(v56);

  objc_msgSend(v42, "addAction:", v57);
  aBlock = 0;
  v70 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v58 = objc_msgSend(v34, "mainBundle", swift_bridgeObjectRelease(v70).n128_f64[0]);
  v59._countAndFlagsBits = 0xD000000000000013;
  v79._countAndFlagsBits = 0xD000000000000025;
  v79._object = (void *)0x80000001004A73C0;
  v59._object = (void *)0x80000001004A73A0;
  v60._countAndFlagsBits = 0;
  v60._object = (void *)0xE000000000000000;
  v61 = NSLocalizedString(_:tableName:bundle:value:comment:)(v59, (Swift::String_optional)0, (NSBundle)v58, v60, v79)._object;

  v62 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v61);
  v73 = State.rawValue.getter;
  v74 = 0;
  aBlock = _NSConcreteStackBlock;
  v70 = 1107296256;
  v71 = sub_100008B40;
  v72 = &unk_100565B10;
  v63 = _Block_copy(&aBlock);
  v64 = objc_msgSend(v65, "actionWithTitle:style:handler:", v62, 1, v63, swift_release(v74).n128_f64[0]);
  _Block_release(v63);

  objc_msgSend(v42, "addAction:", v64);
  objc_msgSend(v68, "presentViewController:animated:completion:", v42, 1, 0);

}

uint64_t sub_100419F40(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD aBlock[5];
  uint64_t v23;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v12 = (void *)static OS_dispatch_queue.main.getter(v11);
  v13 = swift_allocObject(&unk_100565C10, 24, 7);
  *(_QWORD *)(v13 + 16) = a2;
  aBlock[4] = sub_10041EA1C;
  v23 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_100565C28;
  v14 = _Block_copy(aBlock);
  v15 = v23;
  v16 = a2;
  swift_release(v15);
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = _swiftEmptyArrayStorage;
  v18 = sub_100056580();
  v19 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v20 = sub_1000555E4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v3, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_10041A118(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  void *v41;
  uint64_t (*v42)(_QWORD);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  __n128 v48;
  uint64_t v49;
  char *v50;
  void *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  _BYTE v55[40];
  char v56[24];

  v2 = sub_100053F2C((uint64_t *)&unk_1005E2270);
  __chkstk_darwin(v2);
  v52 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FMIPSafeLocation(0);
  v5 = *(_QWORD *)(v4 - 8);
  v53 = v4;
  v54 = v5;
  __chkstk_darwin(v4);
  v50 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100053F2C((uint64_t *)&unk_1005D53A0);
  __chkstk_darwin(v7);
  v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FMPendingActionInfo(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UUID(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = a1;
  v17 = *(_QWORD *)&a1[OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator];
  v18 = *(_QWORD *)(v17 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_pendingActionInfo;
  swift_beginAccess(v18, v56, 0, 0);
  sub_10004FC74(v18, (uint64_t)v12, type metadata accessor for FMPendingActionInfo);
  sub_100007464((uint64_t)&v12[*(int *)(v10 + 24)], (uint64_t)v9, (uint64_t *)&unk_1005D53A0);
  sub_10004FCB8((uint64_t)v12, type metadata accessor for FMPendingActionInfo);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13) == 1)
  {
    v19 = (uint64_t *)&unk_1005D53A0;
    v20 = (uint64_t)v9;
LABEL_8:
    sub_1000051EC(v20, v19);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v35 = type metadata accessor for Logger(0);
    v36 = sub_100056D88(v35, (uint64_t)qword_1005F5748);
    v37 = Logger.logObject.getter(v36);
    v38 = static os_log_type_t.default.getter(v37);
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v39 = 0;
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "FMItemDetailContentViewController: No pending safe location", v39, 2u);
      swift_slowDealloc(v39, -1, -1);
    }

    return;
  }
  v21 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v49 = v13;
  v21(v16, v9, v13);
  v22 = *(_QWORD *)(v17 + 24);
  v23 = swift_retain(v22);
  v24 = UUID.uuidString.getter(v23);
  v26 = v25;
  v27 = FMIPManager.safeLocations.getter(v24);
  swift_bridgeObjectRetain(v26);
  v28 = sub_10041E75C(v27, v24, v26);
  swift_bridgeObjectRelease(v27);
  v29 = swift_bridgeObjectRelease(v26);
  if (v28[2])
  {
    v31 = v53;
    v30 = v54;
    v32 = v52;
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v54 + 16))(v52, (unint64_t)v28+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80)), v53, v29);
    v33 = 0;
  }
  else
  {
    v33 = 1;
    v31 = v53;
    v30 = v54;
    v32 = v52;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v32, v33, 1, v31);
  swift_bridgeObjectRelease(v26);
  swift_bridgeObjectRelease(v28);
  v34 = swift_release(v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v30 + 48))(v32, 1, v31, v34) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v49);
    v19 = (uint64_t *)&unk_1005E2270;
    v20 = (uint64_t)v32;
    goto LABEL_8;
  }
  v40 = (uint64_t)v50;
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v50, v32, v31);
  v41 = v51;
  v42 = sub_100417AA0((uint64_t)v55);
  v44 = v43;
  v45 = type metadata accessor for FMIPSeparationEvent(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 48))(v44, 1, v45))
    FMIPSeparationEvent.addToAllTapped.setter(1);
  ((void (*)(_BYTE *, _QWORD))v42)(v55, 0);
  v46 = swift_allocObject(&unk_100565C60, 24, 7);
  *(_QWORD *)(v46 + 16) = v41;
  v47 = v41;
  sub_10041DE8C(v40, 1, (uint64_t)sub_10041EA24, v46);
  v48 = swift_release(v46);
  (*(void (**)(uint64_t, uint64_t, __n128))(v54 + 8))(v40, v31, v48);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v49);
}

void sub_10041A5BC(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v21 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v11 = (void *)static OS_dispatch_queue.main.getter(v10);
  v12 = swift_allocObject(&unk_100565B48, 24, 7);
  *(_QWORD *)(v12 + 16) = a2;
  aBlock[4] = sub_10041E9E0;
  v23 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_100565B60;
  v13 = _Block_copy(aBlock);
  v14 = v23;
  v15 = a2;
  swift_release(v14);
  static DispatchQoS.unspecified.getter(v16);
  aBlock[0] = _swiftEmptyArrayStorage;
  v17 = sub_100056580();
  v18 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v19 = sub_1000555E4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v18, v19, v3, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v15[qword_1005F60C8] = 1;
  sub_10041D764();
}

void sub_10041A7B8(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  __n128 v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  __n128 v42;
  uint64_t v43;
  char *v44;
  void *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char v49[24];

  v2 = sub_100053F2C((uint64_t *)&unk_1005E2270);
  __chkstk_darwin(v2);
  v46 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FMIPSafeLocation(0);
  v47 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  __chkstk_darwin(v4);
  v44 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100053F2C((uint64_t *)&unk_1005D53A0);
  __chkstk_darwin(v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FMPendingActionInfo(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for UUID(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = a1;
  v16 = *(_QWORD *)&a1[OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator];
  v17 = *(_QWORD *)(v16 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_pendingActionInfo;
  swift_beginAccess(v17, v49, 0, 0);
  sub_10004FC74(v17, (uint64_t)v11, type metadata accessor for FMPendingActionInfo);
  sub_100007464((uint64_t)&v11[*(int *)(v9 + 24)], (uint64_t)v8, (uint64_t *)&unk_1005D53A0);
  sub_10004FCB8((uint64_t)v11, type metadata accessor for FMPendingActionInfo);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12) == 1)
  {
    v18 = (uint64_t *)&unk_1005D53A0;
    v19 = (uint64_t)v8;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v8, v12);
    v20 = *(_QWORD *)(v16 + 24);
    v21 = swift_retain(v20);
    v22 = UUID.uuidString.getter(v21);
    v24 = v23;
    v25 = FMIPManager.safeLocations.getter(v22);
    swift_bridgeObjectRetain(v24);
    v26 = sub_10041E75C(v25, v22, v24);
    swift_bridgeObjectRelease(v25);
    v27 = swift_bridgeObjectRelease(v24);
    if (v26[2])
    {
      v28 = v46;
      v29 = v47;
      v30 = v48;
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v47 + 16))(v46, (unint64_t)v26+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80)), v48, v27);
      v31 = 0;
    }
    else
    {
      v31 = 1;
      v29 = v47;
      v30 = v48;
      v28 = v46;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v28, v31, 1, v30);
    swift_bridgeObjectRelease(v24);
    swift_bridgeObjectRelease(v26);
    v32 = swift_release(v20);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v29 + 48))(v28, 1, v30, v32) != 1)
    {
      v38 = (uint64_t)v44;
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v44, v28, v30);
      v39 = swift_allocObject(&unk_100565B98, 24, 7);
      v40 = v45;
      *(_QWORD *)(v39 + 16) = v45;
      v41 = v40;
      sub_10041DE8C(v38, 0, (uint64_t)sub_10041E9E8, v39);
      v42 = swift_release(v39);
      (*(void (**)(uint64_t, uint64_t, __n128))(v29 + 8))(v38, v30, v42);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      return;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v18 = (uint64_t *)&unk_1005E2270;
    v19 = (uint64_t)v28;
  }
  sub_1000051EC(v19, v18);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v33 = type metadata accessor for Logger(0);
  v34 = sub_100056D88(v33, (uint64_t)qword_1005F5748);
  v35 = Logger.logObject.getter(v34);
  v36 = static os_log_type_t.default.getter(v35);
  if (os_log_type_enabled(v35, v36))
  {
    v37 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v37 = 0;
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "FMItemDetailContentViewController: No pending safe location", v37, 2u);
    swift_slowDealloc(v37, -1, -1);
  }

}

uint64_t sub_10041AC08(char a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void *v26;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[5];
  uint64_t v36;

  v34 = a5;
  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    v17 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
    v33 = static OS_dispatch_queue.main.getter(v17);
    v18 = swift_allocObject(a3, 24, 7);
    *(_QWORD *)(v18 + 16) = a2;
    aBlock[4] = a4;
    v36 = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100037DF8;
    aBlock[3] = v34;
    v19 = _Block_copy(aBlock);
    v20 = v36;
    v21 = a2;
    swift_release(v20);
    static DispatchQoS.unspecified.getter(v22);
    aBlock[0] = _swiftEmptyArrayStorage;
    v23 = sub_100056580();
    v24 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
    v25 = sub_1000555E4();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v24, v25, v9, v23);
    v26 = (void *)v33;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v16, v12, v19);
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  else
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v28 = type metadata accessor for Logger(0);
    v29 = sub_100056D88(v28, (uint64_t)qword_1005F5748);
    v30 = Logger.logObject.getter(v29);
    v31 = static os_log_type_t.default.getter(v30);
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "FMSeparatedListViewController: Add Safe Location failed", v32, 2u);
      swift_slowDealloc(v32, -1, -1);
    }

    return sub_10041AED4();
  }
}

void sub_10041AEA0(void *a1)
{
  id v1;

  v1 = a1;
  sub_10041976C();

}

uint64_t sub_10041AED4()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD aBlock[5];
  uint64_t v22;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v11 = (void *)static OS_dispatch_queue.main.getter(v10);
  v12 = swift_allocObject(&unk_100565A30, 24, 7);
  *(_QWORD *)(v12 + 16) = v0;
  aBlock[4] = sub_10041E9A4;
  v22 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_100565A48;
  v13 = _Block_copy(aBlock);
  v14 = v22;
  v15 = v1;
  swift_release(v14);
  static DispatchQoS.unspecified.getter(v16);
  aBlock[0] = _swiftEmptyArrayStorage;
  v17 = sub_100056580();
  v18 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v19 = sub_1000555E4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v18, v19, v2, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_10041B0AC(void *a1)
{
  void *v1;
  id v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  void *object;
  id v7;
  Swift::String v8;
  Swift::String_optional v9;
  Swift::String v10;
  void *v11;
  id v12;
  Swift::String v13;
  Swift::String v14;
  void *v15;
  NSString v16;
  NSString v17;
  id v18;
  NSString v19;
  id v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;

  v1 = (void *)objc_opt_self(NSBundle);
  v2 = objc_msgSend(v1, "mainBundle");
  v3._countAndFlagsBits = 0xD00000000000001ELL;
  v22._object = (void *)0x80000001004A91F0;
  v3._object = (void *)0x80000001004B2320;
  v4.value._countAndFlagsBits = 0xD000000000000016;
  v4.value._object = (void *)0x80000001004A91D0;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v22._countAndFlagsBits = 0xD00000000000001BLL;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v22)._object;

  v7 = objc_msgSend(v1, "mainBundle");
  v8._countAndFlagsBits = 0xD00000000000002ALL;
  v23._object = (void *)0x80000001004A91F0;
  v8._object = (void *)0x80000001004B2340;
  v9.value._countAndFlagsBits = 0xD000000000000016;
  v9.value._object = (void *)0x80000001004A91D0;
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v23._countAndFlagsBits = 0xD00000000000001BLL;
  v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v23)._object;

  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v12 = objc_msgSend(v1, "mainBundle");
  v24._countAndFlagsBits = 0xD000000000000021;
  v24._object = (void *)0x80000001004A5EE0;
  v13._countAndFlagsBits = 0x4F545455425F4B4FLL;
  v13._object = (void *)0xEF454C5449545F4ELL;
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v24)._object;

  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  v18 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v16, v17, 1);

  v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v15);
  v21 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v19, 0, 0);

  objc_msgSend(v18, "addAction:", v21);
  objc_msgSend(a1, "presentViewController:animated:completion:", v18, 1, 0);

}

void sub_10041B360()
{
  char *v0;
  char *v1;
  double v2;
  double v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  Class isa;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  Class v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  id v52;
  id v53;
  double v54;
  double v55;
  id v56;
  uint64_t v57;
  Class v58;
  uint64_t v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  void *v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  void *v71;
  id v72;
  id v73;
  id v74;
  uint64_t v75;
  Class v76;
  uint64_t v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  void *v83;
  id v84;
  id v85;
  id v86;
  id v87;
  void *v88;
  id v89;
  id v90;
  id v91;
  id v92;
  void *v93;
  id v94;
  id v95;
  uint64_t v96;
  Class v97;
  uint64_t v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  void *v104;
  id v105;
  id v106;
  id v107;
  id v108;
  void *v109;
  id v110;
  id v111;
  id v112;
  id v113;
  void *v114;
  id v115;
  id v116;
  id v117;
  uint64_t v118;
  Class v119;
  id v120;
  id v121;
  id v122;
  double v123;
  uint64_t v124;
  id v125;
  id v126;
  id v127;
  id v128;
  id v129;
  void *v130;
  id v131;
  id v132;
  uint64_t v133;
  id v134;
  Class v135;
  uint64_t v136;
  id v137;
  id v138;
  id v139;
  id v140;
  id v141;
  void *v142;
  id v143;
  id v144;
  id v145;
  id v146;
  void *v147;
  id v148;
  id v149;
  id v150;
  id v151;
  void *v152;
  id v153;
  id v154;
  id v155;
  uint64_t v156;
  uint64_t v157;
  Class v158;
  id v159;
  id v160;
  id v161;
  id v162;
  id v163;
  id v164;
  uint64_t v165;
  id v166;

  v1 = v0;
  if (qword_1005D1DC8 != -1)
    swift_once(&qword_1005D1DC8, sub_10005F330);
  v2 = *(double *)&qword_1005F5638;
  v3 = unk_1005F5640;
  v162 = *(id *)&v0[qword_1005E4338];
  objc_msgSend(v162, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = *(void **)&v0[qword_1005E4348];
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v163 = *(id *)&v0[qword_1005E4388];
  objc_msgSend(v163, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = *(void **)&v0[qword_1005E4350];
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v6 = *(void **)&v0[qword_1005F60B0];
  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v161 = *(id *)&v0[qword_1005E4358];
  objc_msgSend(v161, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v7 = *(void **)&v0[qword_1005E4340];
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(*(id *)&v0[qword_1005E4378], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v165 = sub_100053F2C(&qword_1005D2F10);
  v8 = swift_allocObject(v165, 48, 7);
  *(_OWORD *)(v8 + 16) = xmmword_1004820B0;
  v9 = objc_msgSend(v5, "topAnchor");
  v10 = objc_msgSend(v1, "view");
  if (!v10)
  {
    __break(1u);
    goto LABEL_26;
  }
  v11 = v10;
  v164 = v6;
  v160 = v7;
  v12 = objc_msgSend(v10, "topAnchor");

  v13 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v12, v3);
  *(_QWORD *)(v8 + 32) = v13;
  v14 = objc_msgSend(v5, "leadingAnchor");
  v15 = objc_msgSend(v1, "view");
  if (!v15)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v16 = v15;
  v17 = (void *)objc_opt_self(NSLayoutConstraint);
  v18 = objc_msgSend(v16, "layoutMarginsGuide");

  v19 = objc_msgSend(v18, "leadingAnchor");
  v20 = objc_msgSend(v14, "constraintEqualToAnchor:constant:", v19, 0.0);

  *(_QWORD *)(v8 + 40) = v20;
  specialized Array._endMutation()(v21);
  sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v166 = v17;
  objc_msgSend(v17, "activateConstraints:", isa, swift_bridgeObjectRelease(v8).n128_f64[0]);

  v23 = swift_allocObject(v165, 56, 7);
  *(_OWORD *)(v23 + 16) = xmmword_1004820C0;
  v24 = objc_msgSend(v164, "leadingAnchor");
  v25 = objc_msgSend(v5, "trailingAnchor");
  v26 = objc_msgSend(v24, "constraintEqualToAnchor:constant:", v25, v2);

  *(_QWORD *)(v23 + 32) = v26;
  v27 = objc_msgSend(v164, "centerYAnchor");
  v28 = objc_msgSend(v5, "centerYAnchor");
  v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

  *(_QWORD *)(v23 + 40) = v29;
  v30 = objc_msgSend(v164, "trailingAnchor");
  v31 = objc_msgSend(v1, "view");
  if (!v31)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v32 = v31;
  v33 = objc_msgSend(v31, "layoutMarginsGuide");

  v34 = objc_msgSend(v33, "trailingAnchor");
  v35 = objc_msgSend(v30, "constraintEqualToAnchor:constant:", v34, 0.0);

  *(_QWORD *)(v23 + 48) = v35;
  specialized Array._endMutation()(v36);
  v37 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v166, "activateConstraints:", v37, swift_bridgeObjectRelease(v23).n128_f64[0]);

  v38 = objc_msgSend(v163, "topAnchor");
  v39 = objc_msgSend(v5, "bottomAnchor");
  v40 = objc_msgSend(v38, "constraintEqualToAnchor:constant:", v39, v2);

  v41 = swift_allocObject(v165, 64, 7);
  *(_OWORD *)(v41 + 16) = xmmword_100481720;
  *(_QWORD *)(v41 + 32) = v40;
  v159 = v40;
  v42 = objc_msgSend(v163, "leadingAnchor");
  v43 = objc_msgSend(v1, "view");
  if (!v43)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v44 = v43;
  v45 = objc_msgSend(v43, "leadingAnchor");

  v46 = objc_msgSend(v42, "constraintEqualToAnchor:", v45);
  *(_QWORD *)(v41 + 40) = v46;
  v47 = objc_msgSend(v163, "trailingAnchor");
  v48 = objc_msgSend(v1, "view");
  if (!v48)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v49 = v48;
  v50 = objc_msgSend(v48, "trailingAnchor");

  v51 = objc_msgSend(v47, "constraintEqualToAnchor:", v50);
  *(_QWORD *)(v41 + 48) = v51;
  v52 = objc_msgSend(v163, "heightAnchor");
  v53 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v53, "scale");
  v55 = v54;

  v56 = objc_msgSend(v52, "constraintEqualToConstant:", 1.0 / v55);
  *(_QWORD *)(v41 + 56) = v56;
  specialized Array._endMutation()(v57);
  v58 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v166, "activateConstraints:", v58, swift_bridgeObjectRelease(v41).n128_f64[0]);

  v59 = swift_allocObject(v165, 56, 7);
  *(_OWORD *)(v59 + 16) = xmmword_1004820C0;
  v60 = objc_msgSend(*(id *)&v1[qword_1005E4378], "topAnchor");
  v61 = objc_msgSend(v163, "bottomAnchor");
  if (qword_1005D2098 != -1)
    swift_once(&qword_1005D2098, sub_1004179BC);
  v62 = objc_msgSend(v60, "constraintEqualToAnchor:constant:", v61, *(double *)&xmmword_1005F60A0);

  *(_QWORD *)(v59 + 32) = v62;
  v63 = objc_msgSend(*(id *)&v1[qword_1005E4378], "leadingAnchor");
  v64 = objc_msgSend(v1, "view");
  if (!v64)
    goto LABEL_30;
  v65 = v64;
  v66 = objc_msgSend(v64, "layoutMarginsGuide");

  v67 = objc_msgSend(v66, "leadingAnchor");
  v68 = objc_msgSend(v63, "constraintEqualToAnchor:constant:", v67, *((double *)&xmmword_1005F60A0 + 1));

  *(_QWORD *)(v59 + 40) = v68;
  v69 = objc_msgSend(*(id *)&v1[qword_1005E4378], "trailingAnchor");
  v70 = objc_msgSend(v1, "view");
  if (!v70)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v71 = v70;
  v72 = objc_msgSend(v70, "layoutMarginsGuide");

  v73 = objc_msgSend(v72, "trailingAnchor");
  v74 = objc_msgSend(v69, "constraintEqualToAnchor:constant:", v73, -*((double *)&xmmword_1005F60A0 + 1));

  *(_QWORD *)(v59 + 48) = v74;
  specialized Array._endMutation()(v75);
  v76 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v166, "activateConstraints:", v76, swift_bridgeObjectRelease(v59).n128_f64[0]);

  v77 = swift_allocObject(v165, 64, 7);
  *(_OWORD *)(v77 + 16) = xmmword_100481720;
  v78 = objc_msgSend(v4, "topAnchor");
  v79 = objc_msgSend(*(id *)&v1[qword_1005E4378], "bottomAnchor");
  v80 = objc_msgSend(v78, "constraintEqualToAnchor:", v79);

  *(_QWORD *)(v77 + 32) = v80;
  v81 = objc_msgSend(v4, "leadingAnchor");
  v82 = objc_msgSend(v1, "view");
  if (!v82)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v83 = v82;
  v84 = objc_msgSend(v82, "leadingAnchor");

  v85 = objc_msgSend(v81, "constraintEqualToAnchor:", v84);
  *(_QWORD *)(v77 + 40) = v85;
  v86 = objc_msgSend(v4, "trailingAnchor");
  v87 = objc_msgSend(v1, "view");
  if (!v87)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v88 = v87;
  v89 = objc_msgSend(v87, "trailingAnchor");

  v90 = objc_msgSend(v86, "constraintEqualToAnchor:", v89);
  *(_QWORD *)(v77 + 48) = v90;
  v91 = objc_msgSend(v4, "bottomAnchor");
  v92 = objc_msgSend(v1, "view");
  if (!v92)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v93 = v92;
  v94 = objc_msgSend(v92, "bottomAnchor");

  v95 = objc_msgSend(v91, "constraintEqualToAnchor:", v94);
  *(_QWORD *)(v77 + 56) = v95;
  specialized Array._endMutation()(v96);
  v97 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v166, "activateConstraints:", v97, swift_bridgeObjectRelease(v77).n128_f64[0]);

  v98 = swift_allocObject(v165, 64, 7);
  *(_OWORD *)(v98 + 16) = xmmword_100481720;
  v99 = objc_msgSend(v162, "topAnchor");
  v100 = objc_msgSend(v163, "bottomAnchor");
  v101 = objc_msgSend(v99, "constraintEqualToAnchor:", v100);

  *(_QWORD *)(v98 + 32) = v101;
  v102 = objc_msgSend(v162, "leadingAnchor");
  v103 = objc_msgSend(v1, "view");
  if (!v103)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v104 = v103;
  v105 = objc_msgSend(v103, "leadingAnchor");

  v106 = objc_msgSend(v102, "constraintEqualToAnchor:", v105);
  *(_QWORD *)(v98 + 40) = v106;
  v107 = objc_msgSend(v162, "trailingAnchor");
  v108 = objc_msgSend(v1, "view");
  if (!v108)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v109 = v108;
  v110 = objc_msgSend(v108, "trailingAnchor");

  v111 = objc_msgSend(v107, "constraintEqualToAnchor:", v110);
  *(_QWORD *)(v98 + 48) = v111;
  v112 = objc_msgSend(v162, "bottomAnchor");
  v113 = objc_msgSend(v1, "view");
  if (!v113)
  {
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v114 = v113;
  v115 = objc_msgSend(v113, "safeAreaLayoutGuide");

  v116 = objc_msgSend(v115, "bottomAnchor");
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v117 = objc_msgSend(v112, "constraintEqualToAnchor:constant:", v116, -*((double *)&xmmword_1005F5940 + 1));

  *(_QWORD *)(v98 + 56) = v117;
  specialized Array._endMutation()(v118);
  v119 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v166, "activateConstraints:", v119, swift_bridgeObjectRelease(v98).n128_f64[0]);

  v120 = objc_msgSend(v161, "centerYAnchor");
  v121 = objc_msgSend(v4, "centerYAnchor");
  v122 = objc_msgSend(v120, "constraintEqualToAnchor:constant:", v121, -*((double *)&xmmword_1005F5940 + 1));

  LODWORD(v123) = 1144750080;
  objc_msgSend(v122, "setPriority:", v123);
  v124 = swift_allocObject(v165, 56, 7);
  *(_OWORD *)(v124 + 16) = xmmword_1004820C0;
  v125 = objc_msgSend(v161, "topAnchor");
  v126 = objc_msgSend(v4, "topAnchor");
  v127 = objc_msgSend(v125, "constraintGreaterThanOrEqualToAnchor:", v126);

  *(_QWORD *)(v124 + 32) = v127;
  v128 = objc_msgSend(v161, "centerXAnchor");
  v129 = objc_msgSend(v1, "view");
  if (!v129)
    goto LABEL_38;
  v130 = v129;
  v131 = objc_msgSend(v129, "centerXAnchor");

  v132 = objc_msgSend(v128, "constraintEqualToAnchor:", v131);
  *(_QWORD *)(v124 + 40) = v132;
  *(_QWORD *)(v124 + 48) = v122;
  specialized Array._endMutation()(v133);
  v134 = v122;
  v135 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v166, "activateConstraints:", v135, swift_bridgeObjectRelease(v124).n128_f64[0]);

  v136 = swift_allocObject(v165, 64, 7);
  *(_OWORD *)(v136 + 16) = xmmword_100481720;
  v137 = objc_msgSend(v160, "topAnchor");
  v138 = objc_msgSend(v163, "bottomAnchor");
  v139 = objc_msgSend(v137, "constraintEqualToAnchor:", v138);

  *(_QWORD *)(v136 + 32) = v139;
  v140 = objc_msgSend(v160, "leadingAnchor");
  v141 = objc_msgSend(v1, "view");
  if (!v141)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v142 = v141;
  v143 = objc_msgSend(v141, "leadingAnchor");

  v144 = objc_msgSend(v140, "constraintEqualToAnchor:", v143);
  *(_QWORD *)(v136 + 40) = v144;
  v145 = objc_msgSend(v160, "trailingAnchor");
  v146 = objc_msgSend(v1, "view");
  if (!v146)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v147 = v146;
  v148 = objc_msgSend(v146, "trailingAnchor");

  v149 = objc_msgSend(v145, "constraintEqualToAnchor:", v148);
  *(_QWORD *)(v136 + 48) = v149;
  v150 = objc_msgSend(v160, "bottomAnchor");
  v151 = objc_msgSend(v1, "view");
  if (v151)
  {
    v152 = v151;
    v153 = objc_msgSend(v151, "safeAreaLayoutGuide");

    v154 = objc_msgSend(v153, "bottomAnchor");
    v155 = objc_msgSend(v150, "constraintEqualToAnchor:constant:", v154, -*((double *)&xmmword_1005F5940 + 1));

    *(_QWORD *)(v136 + 56) = v155;
    specialized Array._endMutation()(v156);
    v157 = v136;
    v158 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v166, "activateConstraints:", v158, swift_bridgeObjectRelease(v157).n128_f64[0]);

    return;
  }
LABEL_41:
  __break(1u);
}

uint64_t sub_10041C630(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_100279EDC(a1, a2, a3, a4, (void (*)(char *))sub_10041EC50);
}

uint64_t sub_10041C63C(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v15;

  v7 = sub_100053F2C(&qword_1005D33C0);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4)
  {
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
    v10 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 0, 1, v10);
  }
  else
  {
    v11 = type metadata accessor for IndexPath(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 1, 1, v11);
  }
  v12 = a3;
  v13 = a1;
  sub_100418D98();

  return sub_1000051EC((uint64_t)v9, &qword_1005D33C0);
}

id sub_10041C728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return 0;
}

uint64_t sub_10041C7A8(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  uint64_t v14;

  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v11 = a3;
  v12 = a1;
  LOBYTE(a1) = sub_10041ED8C((uint64_t)v10);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return a1 & 1;
}

uint64_t sub_10041C85C(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_100279EDC(a1, a2, a3, a4, (void (*)(char *))sub_10041EDA8);
}

id sub_10041C868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return 0;
}

void sub_10041C8E8(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_10027AEEC(v4);

}

uint64_t sub_10041C92C()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  if (*(_BYTE *)(v0 + qword_1005E4398) != 1)
    return 0;
  v1 = *(void **)(v0 + qword_1005E4348);
  v2 = objc_msgSend(v1, "dataSource");
  if (v2)
  {
    v3 = v2;
    if (qword_1005D1DE8 != -1)
      goto LABEL_24;
    while (1)
    {
      v4 = type metadata accessor for Logger(0);
      sub_100056D88(v4, (uint64_t)qword_1005F5748);
      v5 = swift_unknownObjectRetain_n(v3, 2);
      v6 = Logger.logObject.getter(v5);
      v7 = static os_log_type_t.default.getter(v6);
      if (os_log_type_enabled(v6, v7))
      {
        v8 = (uint8_t *)swift_slowAlloc(12, -1);
        v9 = swift_slowAlloc(32, -1);
        v20 = (uint64_t)v3;
        v21 = v9;
        *(_DWORD *)v8 = 136315138;
        swift_unknownObjectRetain(v3);
        v10 = sub_100053F2C(&qword_1005DD938);
        v11 = String.init<A>(describing:)(&v20, v10);
        v13 = v12;
        v20 = sub_100056DA0(v11, v12, &v21);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21);
        swift_unknownObjectRelease_n(v3, 2);
        swift_bridgeObjectRelease(v13);
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMListViewController: data source %s", v8, 0xCu);
        swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v9, -1, -1);
        swift_slowDealloc(v8, -1, -1);

      }
      else
      {

        swift_unknownObjectRelease_n(v3, 2);
      }
      if ((objc_msgSend(v3, "respondsToSelector:", "numberOfSectionsInTableView:") & 1) != 0)
      {
        result = (uint64_t)objc_msgSend(v3, "numberOfSectionsInTableView:", v1);
        if (result < 0)
        {
          __break(1u);
          return result;
        }
        v16 = result;
        if (!result)
        {
          v14 = 1;
LABEL_21:
          swift_unknownObjectRelease(v3);
          return v14;
        }
      }
      else
      {
        v16 = 1;
      }
      v17 = 0;
      while (v16 != v17)
      {
        v18 = (uint64_t)objc_msgSend(v3, "tableView:numberOfRowsInSection:", v1, v17);
        v14 = v18 < 1;
        if (v18 > 0 || v16 - 1 == v17++)
          goto LABEL_21;
      }
      __break(1u);
LABEL_24:
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    }
  }
  return 1;
}

void sub_10041CBCC(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  Class isa;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  Class v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  double v24;
  uint64_t v25;

  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void **)(v2 + qword_1005E4348);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v10 = objc_msgSend(v8, "cellForRowAtIndexPath:", isa);

  if (v10)
  {
    v12 = sub_100053F2C(&qword_1005DD930);
    v13 = swift_dynamicCastClass(v10, v12);
    if (v13)
    {
      v14 = *(void **)(v13 + qword_1005DA280);
      v15 = 0.0;
      if ((a2 & 1) != 0)
        v15 = 1.0;
      objc_msgSend(v14, "setAlpha:", v15);
    }

  }
  v16 = IndexPath.row.getter(v11);
  v17 = v16 - 1;
  if (__OFSUB__(v16, 1))
  {
    __break(1u);
    return;
  }
  v18 = IndexPath.section.getter(v16);
  IndexPath.init(row:section:)(v17, v18);
  v19 = IndexPath._bridgeToObjectiveC()().super.isa;
  v20 = objc_msgSend(v8, "cellForRowAtIndexPath:", v19);

  if (!v20)
    goto LABEL_14;
  v21 = sub_100053F2C(&qword_1005DD930);
  v22 = swift_dynamicCastClass(v20, v21);
  if (!v22)
  {

LABEL_14:
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return;
  }
  v23 = *(void **)(v22 + qword_1005DA280);
  v24 = 0.0;
  if ((a2 & 1) != 0)
    v24 = 1.0;
  objc_msgSend(v23, "setAlpha:", v24);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

}

void sub_10041CD9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t ObjectType;
  char *v16;
  void *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  os_log_type_t v21;
  uint8_t *v22;
  char *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  _BOOL4 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  NSObject *v38;
  int v39;
  uint64_t v40;

  v3 = v2;
  v6 = sub_100053F2C((uint64_t *)&unk_1005D2A40);
  __chkstk_darwin(v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v2 + qword_1005E4390) != 1 || *(_BYTE *)(v2 + qword_1005F60B8) == 1)
  {
    v9 = sub_10041C92C();
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v10 = type metadata accessor for Logger(0);
    v11 = sub_100056D88(v10, (uint64_t)qword_1005F5748);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.default.getter(v12);
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v14 = 67109120;
      v39 = v9 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "FMListViewController: data source empty? %{BOOL}d", v14, 8u);
      swift_slowDealloc(v14, -1, -1);
    }

    ObjectType = swift_getObjectType(a1);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 56))(ObjectType, a2) & 1) != 0)
    {
      v16 = *(char **)(v3 + qword_1005E4358);
      objc_msgSend(v16, "setUserInteractionEnabled:", 0);
      objc_msgSend(v16, "setHidden:", 1);
      objc_msgSend(*(id *)&v16[OBJC_IVAR____TtC6FindMy13FMLoadingView_activityIndicator], "stopAnimating");
      if ((v9 & 1) != 0)
      {
        sub_10041D30C();
        *(_BYTE *)(v3 + qword_1005F60C0) = 0;
        sub_10041D764();
        objc_msgSend(*(id *)(v3 + qword_1005F60B0), "setHidden:", 1);
LABEL_30:
        v37 = *(unsigned __int8 *)(v3 + qword_1005E4398);
        *(_BYTE *)(v3 + qword_1005E4398) = 1;
        sub_100417BA0(v37);
        return;
      }
    }
    else
    {
      if ((v9 & 1) != 0)
      {
        v17 = *(void **)(v3 + qword_1005E4338);
        objc_msgSend(v17, "setUserInteractionEnabled:", 0);
        objc_msgSend(v17, "setHidden:", 1);
        objc_msgSend(*(id *)(v3 + qword_1005E4348), "setHidden:", 0);
        v18 = *(char **)(v3 + qword_1005E4358);
        objc_msgSend(v18, "setUserInteractionEnabled:", 1);
        objc_msgSend(v18, "setHidden:", 0);
        objc_msgSend(*(id *)&v18[OBJC_IVAR____TtC6FindMy13FMLoadingView_activityIndicator], "startAnimating");
        *(_BYTE *)(v3 + qword_1005F60C0) = 0;
        sub_10041D764();
        goto LABEL_30;
      }
      v23 = *(char **)(v3 + qword_1005E4358);
      objc_msgSend(v23, "setUserInteractionEnabled:", 0);
      objc_msgSend(v23, "setHidden:", 1);
      objc_msgSend(*(id *)&v23[OBJC_IVAR____TtC6FindMy13FMLoadingView_activityIndicator], "stopAnimating");
    }
    v24 = *(void **)(v3 + qword_1005E4338);
    objc_msgSend(v24, "setUserInteractionEnabled:", 0);
    objc_msgSend(v24, "setHidden:", 1);
    objc_msgSend(*(id *)(v3 + qword_1005E4348), "setHidden:", 0);
    *(_BYTE *)(v3 + qword_1005F60C0) = 1;
    sub_10041D764();
    (*(void (**)(uint64_t, uint64_t))(a2 + 24))(ObjectType, a2);
    v26 = v25;
    v27 = v25 != 0;
    swift_bridgeObjectRelease(v25);
    v28 = *(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator) + 48);
    v29 = swift_retain(v28);
    dispatch thunk of FMFManager.myInfo.getter(v29);
    swift_release(v28);
    v30 = type metadata accessor for FMFMyInfo(0);
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v8, 1, v30) == 1)
    {
      sub_1000051EC((uint64_t)v8, (uint64_t *)&unk_1005D2A40);
    }
    else
    {
      v32 = FMFMyInfo.meDeviceId.getter();
      v34 = v33;
      (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v30);
      if (v34)
      {
        swift_bridgeObjectRelease(v34);
        v35 = HIBYTE(v34) & 0xF;
        if ((v34 & 0x2000000000000000) == 0)
          v35 = v32 & 0xFFFFFFFFFFFFLL;
        if (v26)
          v36 = v35 == 0;
        else
          v36 = 1;
        v27 = !v36;
      }
    }
    objc_msgSend(*(id *)(v3 + qword_1005F60B0), "setHidden:", !v27);
    goto LABEL_30;
  }
  *(_BYTE *)(v2 + qword_1005F60C0) = 0;
  sub_10041D764();
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v19 = type metadata accessor for Logger(0);
  v20 = sub_100056D88(v19, (uint64_t)qword_1005F5748);
  v38 = Logger.logObject.getter(v20);
  v21 = static os_log_type_t.default.getter(v38);
  if (os_log_type_enabled(v38, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v38, v21, "FMListViewController: Not refreshing view state because terminal view is showing", v22, 2u);
    swift_slowDealloc(v22, -1, -1);
  }

}

id sub_10041D30C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + qword_1005E4338);
  objc_msgSend(v1, "setUserInteractionEnabled:", 1);
  objc_msgSend(v1, "setHidden:", 0);
  objc_msgSend(v1, "setNeedsLayout");
  objc_msgSend(v1, "layoutIfNeeded");
  return objc_msgSend(*(id *)(v0 + qword_1005E4348), "setHidden:", 1);
}

id sub_10041D394()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + qword_1005E4338);
  objc_msgSend(v1, "setUserInteractionEnabled:", 0);
  objc_msgSend(v1, "setHidden:", 1);
  return objc_msgSend(*(id *)(v0 + qword_1005E4348), "setHidden:", 0);
}

id sub_10041D3FC()
{
  return sub_10041D424(1, 0, (SEL *)&selRef_startAnimating);
}

id sub_10041D410()
{
  return sub_10041D424(0, 1, (SEL *)&selRef_stopAnimating);
}

id sub_10041D424(char a1, char a2, SEL *a3)
{
  uint64_t v3;
  char *v6;

  v6 = *(char **)(v3 + qword_1005E4358);
  objc_msgSend(v6, "setUserInteractionEnabled:", a1 & 1);
  objc_msgSend(v6, "setHidden:", a2 & 1);
  return objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC6FindMy13FMLoadingView_activityIndicator], *a3);
}

void sub_10041D490()
{
  _QWORD *v0;
  __int128 v1;
  objc_class *v2;
  id v3;
  id v4;
  void *v5;
  double v6;
  double v7;
  _OWORD v8[2];
  objc_super v9;

  v1 = *(_OWORD *)((swift_isaMask & *v0) + 0x70);
  v8[0] = *(_OWORD *)((swift_isaMask & *v0) + 0x60);
  v8[1] = v1;
  v2 = (objc_class *)type metadata accessor for FMSeparatedListViewController(0, (uint64_t)v8);
  v9.receiver = v0;
  v9.super_class = v2;
  objc_msgSendSuper2(&v9, "viewDidLayoutSubviews");
  v3 = *(id *)((char *)v0 + qword_1005E4378);
  v4 = objc_msgSend(v0, "view");
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, "layoutMargins");
    v7 = v6;

    objc_msgSend(v3, "setSpacing:", v7);
    sub_100035B8C();
  }
  else
  {
    __break(1u);
  }
}

void sub_10041D570(void *a1)
{
  id v1;

  v1 = a1;
  sub_10041D490();

}

uint64_t sub_10041D5A4()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)((swift_isaMask & *v0) + 0x78) + 112))(*(_QWORD *)((swift_isaMask & *v0) + 0x60));
}

void sub_10041D5EC(void *a1)
{
  id v1;

  v1 = a1;
  sub_10041D5A4();

}

void sub_10041D620(char a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  uint64_t v5;
  double v6;
  id v7;
  void *v8;
  uint64_t v9;
  double v10;
  id v11;

  v2 = v1;
  v4 = *(void **)(v1 + qword_1005E4338);
  v5 = type metadata accessor for FMNoItemView();
  if (swift_dynamicCastClass(v4, v5))
  {
    v6 = dbl_100490AF8[a1];
    v7 = v4;
    sub_1003BAF44(0, v6);

  }
  v8 = *(void **)(v2 + qword_1005E4340);
  v9 = type metadata accessor for FMItemTerminalView();
  if (swift_dynamicCastClass(v8, v9))
  {
    v10 = dbl_100490AF8[a1];
    v11 = v8;
    sub_100169BAC(0, v10);

  }
}

id sub_10041D71C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + qword_1005F60B0), "setHidden:", (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator) + 16)+ OBJC_IVAR____TtC6FindMy19FMConditionProvider_accountsAreSignedIn) & 1) == 0);
}

void sub_10041D764()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  Swift::String v11;
  Swift::String_optional v12;
  Swift::String v13;
  Swift::String v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSString v19;
  void *v20;
  uint64_t v21;
  id v22;
  char *v23;
  id v24;
  id v25;
  Swift::String v26;
  Swift::String_optional v27;
  Swift::String v28;
  Swift::String v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  unint64_t v36;
  void *v37;
  uint64_t v38;
  NSString v39;
  _BYTE *v40;
  void *v41;
  void *v42;
  id v43;
  id v44;
  Swift::String v45;
  Swift::String_optional v46;
  Swift::String v47;
  Swift::String v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSString v53;
  char *v54;
  id v55;
  Swift::String v56;
  Swift::String_optional v57;
  Swift::String v58;
  Swift::String v59;
  Swift::String *v60;
  uint64_t v61;
  unint64_t v62;
  void *v63;
  void *object;
  NSString v65;
  _BYTE *v66;
  _BYTE *v67;
  id v68;
  void *v69;
  id v70;
  void *v71;
  __int128 v72;
  uint64_t v73;
  id v74;
  void *v75;
  void *v76;
  uint64_t v77;
  _BYTE *v78;
  Swift::String v79;
  Swift::String v80;
  Swift::String v81;
  Swift::String v82;

  v1 = v0;
  v2 = sub_100053F2C((uint64_t *)&unk_1005E4430);
  __chkstk_darwin(v2);
  v4 = (char *)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v1[qword_1005F60C0] != 1 || (v5 = *(_QWORD *)&v1[qword_1005F60D0 + 8]) == 0)
  {
    v40 = *(_BYTE **)&v1[qword_1005E4368];
    v40[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_collapsed] = 1;
    v78 = v40;
    sub_1002C0DEC();

    return;
  }
  v78 = *(_BYTE **)&v1[qword_1005F60D0];
  v6 = *(char **)&v1[qword_1005E4368];
  if (v1[qword_1005F60C8] == 1)
  {
    v7 = *(void **)&v6[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_label];
    v8 = (void *)objc_opt_self(NSBundle);
    v74 = v8;
    swift_bridgeObjectRetain(v5);
    v9 = v7;
    v10 = objc_msgSend(v8, "mainBundle");
    v79._countAndFlagsBits = 0xD00000000000001BLL;
    v77 = 0xD00000000000001BLL;
    v11._countAndFlagsBits = 0xD000000000000023;
    v79._object = (void *)0x80000001004A91F0;
    v11._object = (void *)0x80000001004B2620;
    v12.value._countAndFlagsBits = 0xD000000000000016;
    v12.value._object = (void *)0x80000001004A91D0;
    v13._countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, v12, (NSBundle)v10, v13, v79);

    v73 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
    v15 = swift_allocObject(v73, 72, 7);
    v72 = xmmword_100481740;
    *(_OWORD *)(v15 + 16) = xmmword_100481740;
    *(_QWORD *)(v15 + 56) = &type metadata for String;
    v16 = sub_100071E88();
    *(_QWORD *)(v15 + 64) = v16;
    *(_QWORD *)(v15 + 32) = v78;
    *(_QWORD *)(v15 + 40) = v5;
    swift_bridgeObjectRetain(v5);
    String.init(format:_:)(v14._countAndFlagsBits, v14._object, v15);
    v18 = v17;
    swift_bridgeObjectRelease(v14._object);
    v19 = String._bridgeToObjectiveC()();
    objc_msgSend(v9, "setText:", v19, swift_bridgeObjectRelease(v18).n128_f64[0]);

    v20 = *(void **)&v1[qword_1005E4368];
    v21 = type metadata accessor for FMPlatterIcon(0);
    swift_storeEnumTagMultiPayload(v4, v21, 23);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v4, 0, 1, v21);
    v22 = v20;
    sub_1002C0C88((uint64_t)v4);

    v23 = (char *)*(id *)&v1[qword_1005E4368];
    v24 = v74;
    v25 = objc_msgSend(v74, "mainBundle");
    v26._countAndFlagsBits = 0xD000000000000026;
    v75 = (void *)0x80000001004A91F0;
    v80._object = (void *)0x80000001004A91F0;
    v26._object = (void *)0x80000001004B2650;
    v27.value._countAndFlagsBits = 0xD000000000000016;
    v76 = (void *)0x80000001004A91D0;
    v27.value._object = (void *)0x80000001004A91D0;
    v28._countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    v80._countAndFlagsBits = v77;
    v29 = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, v27, (NSBundle)v25, v28, v80);

    v30 = swift_allocObject(v73, 72, 7);
    *(_OWORD *)(v30 + 16) = v72;
    *(_QWORD *)(v30 + 56) = &type metadata for String;
    *(_QWORD *)(v30 + 64) = v16;
    *(_QWORD *)(v30 + 32) = v78;
    *(_QWORD *)(v30 + 40) = v5;
    v31 = String.init(format:_:)(v29._countAndFlagsBits, v29._object, v30);
    v33 = v32;
    swift_bridgeObjectRelease(v29._object);
    v34 = (uint64_t *)&v23[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitle];
    v35 = *(_QWORD *)&v23[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitle + 8];
    *v34 = v31;
    v34[1] = v33;
    v36 = swift_bridgeObjectRelease(v35).n128_u64[0];
    v37 = *(void **)&v23[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitleLabel];
    v38 = v34[1];
    if (v38)
    {
      swift_bridgeObjectRetain(v34[1]);
      v39 = String._bridgeToObjectiveC()();
      v36 = swift_bridgeObjectRelease(v38).n128_u64[0];
    }
    else
    {
      v39 = 0;
    }
    objc_msgSend(v37, "setText:", v39, *(double *)&v36);

    v54 = (char *)*(id *)&v1[qword_1005E4368];
    v55 = objc_msgSend(v24, "mainBundle");
    v56._countAndFlagsBits = 0xD00000000000002ALL;
    v82._object = v75;
    v56._object = (void *)0x80000001004B2680;
    v57.value._countAndFlagsBits = 0xD000000000000016;
    v57.value._object = v76;
    v82._countAndFlagsBits = v77;
    v58._countAndFlagsBits = 0;
    v58._object = (void *)0xE000000000000000;
    v59 = NSLocalizedString(_:tableName:bundle:value:comment:)(v56, v57, (NSBundle)v55, v58, v82);

    v60 = (Swift::String *)&v54[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionTitle];
    v61 = *(_QWORD *)&v54[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionTitle + 8];
    *v60 = v59;
    v62 = swift_bridgeObjectRelease(v61).n128_u64[0];
    v63 = *(void **)&v54[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionLabel];
    object = v60->_object;
    if (object)
    {
      swift_bridgeObjectRetain(v60->_object);
      v65 = String._bridgeToObjectiveC()();
      v62 = swift_bridgeObjectRelease(object).n128_u64[0];
    }
    else
    {
      v65 = 0;
    }
    objc_msgSend(v63, "setText:", v65, *(double *)&v62);

  }
  else
  {
    objc_msgSend(v6, "setUserInteractionEnabled:", 1, swift_bridgeObjectRetain(v5).n128_f64[0]);
    v41 = *(void **)(*(_QWORD *)&v1[qword_1005E4368] + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_label);
    v42 = (void *)objc_opt_self(NSBundle);
    v43 = v41;
    v44 = objc_msgSend(v42, "mainBundle");
    v81._countAndFlagsBits = 0xD00000000000001BLL;
    v45._countAndFlagsBits = 0xD00000000000001DLL;
    v81._object = (void *)0x80000001004A91F0;
    v45._object = (void *)0x80000001004B2600;
    v46.value._object = (void *)0x80000001004A91D0;
    v46.value._countAndFlagsBits = 0xD000000000000016;
    v47._countAndFlagsBits = 0;
    v47._object = (void *)0xE000000000000000;
    v48 = NSLocalizedString(_:tableName:bundle:value:comment:)(v45, v46, (NSBundle)v44, v47, v81);

    v49 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
    v50 = swift_allocObject(v49, 72, 7);
    *(_OWORD *)(v50 + 16) = xmmword_100481740;
    *(_QWORD *)(v50 + 56) = &type metadata for String;
    *(_QWORD *)(v50 + 64) = sub_100071E88();
    *(_QWORD *)(v50 + 32) = v78;
    *(_QWORD *)(v50 + 40) = v5;
    String.init(format:_:)(v48._countAndFlagsBits, v48._object, v50);
    v52 = v51;
    swift_bridgeObjectRelease(v48._object);
    v53 = String._bridgeToObjectiveC()();
    objc_msgSend(v43, "setText:", v53, swift_bridgeObjectRelease(v52).n128_f64[0]);

  }
  v66 = *(_BYTE **)&v1[qword_1005E4368];
  v66[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_collapsed] = 0;
  v67 = v66;
  sub_1002C0DEC();

  v68 = objc_msgSend(v1, "view");
  if (v68)
  {
    v69 = v68;
    objc_msgSend(v68, "setNeedsLayout");

    v70 = objc_msgSend(v1, "view");
    if (v70)
    {
      v71 = v70;
      objc_msgSend(v70, "layoutIfNeeded");

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

double sub_10041DE8C(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint8_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double result;
  uint8_t *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55[3];

  LODWORD(v6) = a2;
  v8 = type metadata accessor for FMIPSafeLocation(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v53 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v13 = (char *)&v46 - v12;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v14 = type metadata accessor for Logger(0);
  sub_100056D88(v14, (uint64_t)qword_1005F5748);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v16 = v15(v13, a1, v8);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter(v17);
  v19 = os_log_type_enabled(v17, v18);
  v51 = (void (*)(char *, uint64_t, uint64_t))v15;
  if (v19)
  {
    v50 = a4;
    v20 = swift_slowAlloc(12, -1);
    v47 = (int)v6;
    v6 = (uint8_t *)v20;
    v21 = swift_slowAlloc(32, -1);
    v49 = a3;
    v22 = v21;
    v55[0] = v21;
    v48 = a1;
    *(_DWORD *)v6 = 136315138;
    v46 = v6 + 4;
    v23 = v53;
    v15(v53, (uint64_t)v13, v8);
    v24 = String.init<A>(describing:)(v23, v8);
    v26 = v25;
    v54 = sub_100056DA0(v24, v25, v55);
    a1 = v48;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, v55);
    v27 = v26;
    a4 = v50;
    v28 = swift_bridgeObjectRelease(v27);
    (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v13, v8, v28);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "FMItemNotificationsViewController: Add Safe Location %s", v6, 0xCu);
    swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
    v29 = v22;
    a3 = v49;
    swift_slowDealloc(v29, -1, -1);
    v30 = v6;
    LOBYTE(v6) = v47;
    swift_slowDealloc(v30, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
  }

  v31 = *(_QWORD *)(v52 + OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator);
  v32 = *(_QWORD *)(v31 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_pendingActionInfo;
  swift_beginAccess(v32, v55, 0, 0);
  v33 = type metadata accessor for FMPendingActionInfo(0);
  if ((v6 & 1) != 0)
  {
    v34 = v53;
    v51(v53, a1, v8);
    v35 = type metadata accessor for FMIPAssignSafeLocationToAllSupportedBeaconsAction(0);
    swift_allocObject(v35, *(unsigned int *)(v35 + 48), *(unsigned __int16 *)(v35 + 52));
    v36 = FMIPAssignSafeLocationToAllSupportedBeaconsAction.init(location:)(v34);
  }
  else
  {
    v37 = *(_QWORD *)(v32 + *(int *)(v33 + 32));
    if (v37)
      v38 = *(_QWORD **)(v32 + *(int *)(v33 + 32));
    else
      v38 = _swiftEmptyArrayStorage;
    v39 = v53;
    v51(v53, a1, v8);
    v40 = type metadata accessor for FMIPAssignMultipleSafeLocationsItemAction(0);
    swift_allocObject(v40, *(unsigned int *)(v40 + 48), *(unsigned __int16 *)(v40 + 52));
    v41 = swift_bridgeObjectRetain(v37);
    v36 = FMIPAssignMultipleSafeLocationsItemAction.init(beaconUUIDs:location:)(v38, v39, v41);
  }
  v42 = v36;
  v43 = *(_QWORD *)(*(_QWORD *)(v31 + 24) + 32);
  v44 = swift_allocObject(&unk_100565A08, 32, 7);
  *(_QWORD *)(v44 + 16) = a3;
  *(_QWORD *)(v44 + 24) = a4;
  swift_retain(v43);
  swift_retain(a4);
  sub_1000B1B20(v42, (uint64_t)sub_10041E99C, v44);
  swift_release(v42);
  swift_release(v43);
  *(_QWORD *)&result = swift_release(v44).n128_u64[0];
  return result;
}

uint64_t sub_10041E22C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(BOOL))
{
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v7 = type metadata accessor for Logger(0);
  sub_100056D88(v7, (uint64_t)qword_1005F5748);
  swift_errorRetain(a1);
  v8 = swift_errorRetain(a1);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    v18 = a1;
    v19 = v12;
    *(_DWORD *)v11 = 136315138;
    swift_errorRetain(a1);
    v13 = sub_100053F2C(&qword_1005D7E40);
    v14 = String.init<A>(describing:)(&v18, v13);
    v16 = v15;
    v18 = sub_100056DA0(v14, v15, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19);
    swift_bridgeObjectRelease(v16);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "FMSeparatedListViewController: Add Safe Location completed with error: %s", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }

  return a5(a1 == 0);
}

double sub_10041E408()
{
  uint64_t v0;
  double result;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + qword_1005E4330));

  swift_release(*(_QWORD *)(v0 + qword_1005E4360));
  sub_1000051EC(v0 + qword_1005E4370, &qword_1005E4440);

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_1005F60D0 + 8)).n128_u64[0];
  return result;
}

id sub_10041E4F0()
{
  _QWORD *v0;
  __int128 v1;
  objc_class *v2;
  _OWORD v4[2];
  objc_super v5;

  v1 = *(_OWORD *)((swift_isaMask & *v0) + 0x70);
  v4[0] = *(_OWORD *)((swift_isaMask & *v0) + 0x60);
  v4[1] = v1;
  v2 = (objc_class *)type metadata accessor for FMSeparatedListViewController(0, (uint64_t)v4);
  v5.receiver = v0;
  v5.super_class = v2;
  return objc_msgSendSuper2(&v5, "dealloc");
}

double sub_10041E544(uint64_t a1)
{
  double result;

  swift_unknownObjectRelease(*(_QWORD *)(a1 + qword_1005E4330));

  swift_release(*(_QWORD *)(a1 + qword_1005E4360));
  sub_1000051EC(a1 + qword_1005E4370, &qword_1005E4440);

  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_1005F60D0 + 8)).n128_u64[0];
  return result;
}

uint64_t type metadata accessor for FMSeparatedListViewController(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for FMSeparatedListViewController);
}

void sub_10041E644(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1005E4420)
  {
    v2 = type metadata accessor for FMIPSeparationEvent(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1005E4420);
  }
}

void sub_10041E6A8(uint64_t a1, char a2)
{
  sub_10041E6B4(a2);
}

void sub_10041E6B4(char a1)
{
  _QWORD *v1;

  if ((a1 & 1) != 0)
  {
    objc_msgSend(*(id *)((char *)v1 + qword_1005E4338), "setHidden:", 1);
    objc_msgSend(*(id *)((char *)v1 + qword_1005E4348), "setHidden:", 1);
    objc_msgSend(*(id *)((char *)v1 + qword_1005E4358), "setHidden:", 1);
  }
  *((_BYTE *)v1 + qword_1005E4390) = a1 & 1;
  sub_10041CD9C(*(_QWORD *)((char *)v1 + qword_1005E4330), *(_QWORD *)((swift_isaMask & *v1) + 0x78));
}

_QWORD *sub_10041E75C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  char v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t, __n128);
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  _QWORD *v38;

  v33 = type metadata accessor for FMIPSafeLocation(0);
  v7 = __chkstk_darwin(v33);
  v37 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)v31 - v10;
  result = _swiftEmptyArrayStorage;
  v38 = _swiftEmptyArrayStorage;
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v14 = *(unsigned __int8 *)(v9 + 80);
    v15 = *(_QWORD *)(v9 + 72);
    v31[1] = v3;
    v32 = (v14 + 32) & ~v14;
    v16 = a1 + v32;
    v35 = v15;
    v36 = v9;
    v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v17 = v33;
    for (i = v34(v11, a1 + v32, v33); ; i = v34(v11, v16, v17))
    {
      v20 = FMIPSafeLocation.identifier.getter(i);
      v22 = v21;
      if (v20 == a2 && v21 == a3)
      {
        v23 = swift_bridgeObjectRelease(a3);
      }
      else
      {
        v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v20, v21, a2, a3, 0);
        v23 = swift_bridgeObjectRelease(v22);
        if ((v24 & 1) == 0)
        {
          (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v17);
          v19 = v35;
          goto LABEL_4;
        }
      }
      v25 = a3;
      v26 = *(void (**)(char *, char *, uint64_t, __n128))(v36 + 32);
      v26(v37, v11, v17, v23);
      v27 = v38;
      if ((swift_isUniquelyReferenced_nonNull_native(v38) & 1) == 0)
      {
        sub_100111DA4(0, v27[2] + 1, 1);
        v27 = v38;
      }
      v29 = v27[2];
      v28 = v27[3];
      if (v29 >= v28 >> 1)
      {
        sub_100111DA4(v28 > 1, v29 + 1, 1);
        v27 = v38;
      }
      v27[2] = v29 + 1;
      v19 = v35;
      v30 = (uint64_t)v27 + v32 + v29 * v35;
      v17 = v33;
      ((void (*)(uint64_t, char *, uint64_t))v26)(v30, v37, v33);
      v38 = v27;
      a3 = v25;
LABEL_4:
      v16 += v19;
      if (!--v13)
        return v38;
    }
  }
  return result;
}

uint64_t sub_10041E978()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10041E99C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_10041E22C(a1, a2, a3, a4, *(uint64_t (**)(BOOL))(v4 + 16));
}

void sub_10041E9A4()
{
  uint64_t v0;

  sub_10041B0AC(*(void **)(v0 + 16));
}

uint64_t sub_10041E9AC(uint64_t a1)
{
  uint64_t v1;

  return sub_100419F40(a1, *(void **)(v1 + 16));
}

uint64_t sub_10041E9B4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10041E9D8(uint64_t a1)
{
  uint64_t v1;

  sub_10041A5BC(a1, *(void **)(v1 + 16));
}

void sub_10041E9E0()
{
  uint64_t v0;

  sub_10041A7B8(*(char **)(v0 + 16));
}

uint64_t sub_10041E9E8(char a1)
{
  uint64_t v1;

  return sub_10041AC08(a1, *(void **)(v1 + 16), (uint64_t)&unk_100565BC0, (uint64_t)sub_10041EA18, (uint64_t)&unk_100565BD8);
}

void sub_10041EA1C()
{
  uint64_t v0;

  sub_10041A118(*(char **)(v0 + 16));
}

uint64_t sub_10041EA24(char a1)
{
  uint64_t v1;

  return sub_10041AC08(a1, *(void **)(v1 + 16), (uint64_t)&unk_100565C88, (uint64_t)sub_10041EA18, (uint64_t)&unk_100565CA0);
}

void sub_10041EA54()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + qword_1005F60C8) = 1;
  sub_10041D764();
}

void sub_10041EA84()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v1 = v0;
  v2 = qword_1005E4350;
  *(_QWORD *)&v1[v2] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v3 = qword_1005E4358;
  *(_QWORD *)&v1[v3] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMLoadingView()), "init");
  *(_QWORD *)&v1[qword_1005E4360] = 0;
  v4 = qword_1005E4368;
  v5 = objc_allocWithZone((Class)type metadata accessor for FMExtendedPlatterInfoView(0));
  *(_QWORD *)&v1[v4] = sub_1002C114C(1, 0);
  v6 = &v1[qword_1005E4370];
  v7 = type metadata accessor for FMIPSeparationEvent(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = qword_1005E4378;
  *(_QWORD *)&v1[v8] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v9 = qword_1005F60B0;
  *(_QWORD *)&v1[v9] = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
  v10 = qword_1005E4388;
  *(_QWORD *)&v1[v10] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v1[qword_1005E4390] = 0;
  v1[qword_1005E4398] = 0;
  v1[qword_1005F60B8] = 0;
  v1[qword_1005F60C0] = 0;
  v1[qword_1005F60C8] = 0;
  v11 = &v1[qword_1005F60D0];
  *v11 = 0;
  v11[1] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMSeparatedListViewController.swift", 42, 2, 131, 0);
  __break(1u);
}

uint64_t sub_10041EC50(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v13[24];

  v3 = swift_isaMask & *v1;
  v4 = sub_100053F2C(&qword_1005D33C0);
  __chkstk_darwin(v4);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = *(_QWORD *)((char *)v1 + qword_1005E4348);
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v6, a1, v8);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  v10 = v7 + OBJC_IVAR____TtC6FindMy11FMTableView_newIndexPath;
  swift_beginAccess(v7 + OBJC_IVAR____TtC6FindMy11FMTableView_newIndexPath, v13, 33, 0);
  sub_100099CDC((uint64_t)v6, v10, &qword_1005D33C0);
  swift_endAccess(v13);
  sub_10041CBCC(a1, 0);
  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 + 120) + 104))(a1, *(_QWORD *)(v3 + 96));
}

uint64_t sub_10041ED8C(uint64_t a1)
{
  sub_10041CBCC(a1, 0);
  return 1;
}

void sub_10041EDA8(uint64_t a1)
{
  sub_10041CBCC(a1, 1);
}

void sub_10041EE70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[24];

  v1 = v0;
  v2 = 0;
  v3 = OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_selectionSubscription;
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_selectionSubscription);
  if (v4)
  {
    v5 = *(uint64_t **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_mediator) + 56);
    swift_beginAccess(v5 + 2, v18, 33, 0);
    swift_retain(v4);
    swift_retain(v5);
    v6 = sub_100334CE8(v5 + 2, v4);
    v7 = v6;
    v8 = v5[2];
    if ((unint64_t)v8 >> 62)
    {
      if (v8 < 0)
        v16 = v5[2];
      else
        v16 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v5[2]);
      v9 = _CocoaArrayWrapper.endIndex.getter(v16);
      swift_bridgeObjectRelease(v8);
      if (v9 >= v7)
        goto LABEL_4;
    }
    else
    {
      v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v9 >= v6)
      {
LABEL_4:
        sub_100200704(v7, v9);
        swift_endAccess(v18);
        swift_release(v5);
        v10 = *(_QWORD *)(v0 + v3);
        *(_QWORD *)(v1 + v3) = 0;
        swift_release(v4);
        swift_release(v10);
        goto LABEL_5;
      }
    }
    __break(1u);
    goto LABEL_15;
  }
LABEL_5:
  v8 = OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_conditionsSubscription;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_conditionsSubscription);
  if (!v4)
    return;
  v11 = *(char **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_mediator) + 16);
  v12 = (uint64_t *)&v11[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions];
  swift_beginAccess(&v11[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions], v18, 33, 0);
  swift_retain(v4);
  v5 = v11;
  v13 = sub_10005D558(v12, v4);
  v2 = v13;
  v9 = *v12;
  if ((unint64_t)*v12 >> 62)
  {
LABEL_15:
    if (v9 < 0)
      v17 = v9;
    else
      v17 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v14 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease(v9);
    if (v14 >= v2)
      goto LABEL_8;
LABEL_19:
    __break(1u);
    return;
  }
  v14 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v14 < v13)
    goto LABEL_19;
LABEL_8:
  sub_10005D32C(v2, v14);
  swift_endAccess(v18);

  v15 = *(_QWORD *)(v1 + v8);
  *(_QWORD *)(v1 + v8) = 0;
  swift_release(v4);
  swift_release(v15);
}

uint64_t sub_10041F074(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  objc_class *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  __n128 v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint8_t *v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  void *v79;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t aBlock[5];
  uint64_t v89;
  char v90[24];
  objc_super v91;

  v2 = v1;
  v4 = type metadata accessor for FMFFriend(0);
  v83 = *(_QWORD *)(v4 - 8);
  v84 = v4;
  __chkstk_darwin(v4);
  v82 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = type metadata accessor for FMSelectedSection(0);
  v6 = __chkstk_darwin(v85);
  v8 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v81 - v10;
  v12 = __chkstk_darwin(v9);
  v14 = (void (*)(char *, char *, uint64_t))((char *)&v81 - v13);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v81 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v81 - v18;
  v20 = (objc_class *)type metadata accessor for FMPersonDetailCardViewController();
  v91.receiver = v2;
  v91.super_class = v20;
  objc_msgSendSuper2(&v91, "viewWillAppear:", a1 & 1);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v21 = type metadata accessor for Logger(0);
  v22 = sub_100056D88(v21, (uint64_t)qword_1005F5748);
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.default.getter(v23);
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v25 = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "FMPersonDetailCardViewController: viewWillAppear", v25, 2u);
    swift_slowDealloc(v25, -1, -1);
  }

  v26 = OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_mediator;
  v27 = *(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_mediator] + 56)
      + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v27, v90, 0, 0);
  sub_100024F3C(v27, (uint64_t)v19);
  sub_100024F3C((uint64_t)v19, (uint64_t)v17);
  LODWORD(v27) = swift_getEnumCaseMultiPayload(v17, v85);
  sub_100024F00((uint64_t)v17);
  if ((_DWORD)v27 == 2)
  {
    v28 = *(_QWORD *)&v2[v26];
    v29 = objc_allocWithZone((Class)type metadata accessor for FMPersonDetailContentViewController(0));
    v30 = swift_retain(v28);
    v31 = sub_10010935C(v30);
    swift_release(v28);
    v81 = v31;
    sub_100041CA0(v31, v2);
    v32 = *(_QWORD *)(*(_QWORD *)&v2[v26] + 56);
    v33 = v32 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
    swift_beginAccess(v32 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, aBlock, 0, 0);
    sub_100024F3C(v33, (uint64_t)v14);
    v34 = swift_retain(v32);
    sub_10041FD88(v34, v14);
    swift_release(v32);
    sub_100024F00((uint64_t)v14);
    v35 = *(void **)(*(_QWORD *)&v2[v26] + 16);
    v36 = type metadata accessor for FMConditionSubscription(0);
    v37 = swift_allocObject(v36, *(unsigned int *)(v36 + 48), *(unsigned __int16 *)(v36 + 52));
    v38 = v37 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber;
    *(_QWORD *)(v38 + 8) = 0;
    swift_unknownObjectWeakInit(v38);
    v39 = v35;
    v40 = v2;
    UUID.init()(v40);
    v41 = v37 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber;
    *(_QWORD *)(v41 + 8) = &off_100565D28;
    swift_unknownObjectWeakAssign(v41, v40);

    v42 = &v39[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions];
    swift_beginAccess(&v39[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions], &v86, 33, 0);
    v43 = swift_retain(v37);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v43);
    v45 = *(_QWORD *)((*(_QWORD *)v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v44 = *(_QWORD *)((*(_QWORD *)v42 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v45 >= v44 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v44 > 1, v45 + 1, 1);
    v46 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v45, v37);
    specialized Array._endMutation()(v46);
    swift_endAccess(&v86);

    v47 = *(_QWORD *)&v40[OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_conditionsSubscription];
    *(_QWORD *)&v40[OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_conditionsSubscription] = v37;
    swift_release(v47);
    v48 = *(_QWORD *)(*(_QWORD *)&v2[v26] + 56);
    v49 = type metadata accessor for FMSelectionSubscription(0);
    v50 = swift_allocObject(v49, *(unsigned int *)(v49 + 48), *(unsigned __int16 *)(v49 + 52));
    v51 = v50 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
    *(_QWORD *)(v51 + 8) = 0;
    swift_unknownObjectWeakInit(v51);
    v52 = v40;
    v53 = swift_retain(v48);
    UUID.init()(v53);
    v54 = v50 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
    *(_QWORD *)(v54 + 8) = &off_100565D00;
    swift_unknownObjectWeakAssign(v54, v52);

    swift_beginAccess(v48 + 16, &v86, 33, 0);
    v55 = swift_retain(v50);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v55);
    v57 = *(_QWORD *)((*(_QWORD *)(v48 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
    v56 = *(_QWORD *)((*(_QWORD *)(v48 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v57 >= v56 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v56 > 1, v57 + 1, 1);
    v58 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v57, v50);
    specialized Array._endMutation()(v58);
    swift_endAccess(&v86);
    swift_release(v48);
    v59 = *(_QWORD *)&v52[OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_selectionSubscription];
    *(_QWORD *)&v52[OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_selectionSubscription] = v50;
    swift_release(v59);
    v60 = *(_QWORD *)(*(_QWORD *)&v2[v26] + 56)
        + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
    swift_beginAccess(v60, &v86, 0, 0);
    sub_100024F3C(v60, (uint64_t)v11);
    if (swift_getEnumCaseMultiPayload(v11, v85) == 2)
    {
      v62 = v82;
      v61 = v83;
      v63 = v84;
      v64 = (*(uint64_t (**)(char *, char *, uint64_t))(v83 + 32))(v82, v11, v84);
      v65 = FMFFriend.identifier.getter(v64);
      v66 = (uint64_t *)&v52[OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_selectedPersonIdentifier];
      v67 = *(_QWORD *)&v52[OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_selectedPersonIdentifier + 8];
      *v66 = v65;
      v66[1] = v68;

      v69 = swift_bridgeObjectRelease(v67);
      (*(void (**)(char *, uint64_t, __n128))(v61 + 8))(v62, v63, v69);
    }
    else
    {
      sub_100024F00((uint64_t)v19);

      v19 = v11;
    }
  }
  else
  {
    v70 = sub_100024F3C((uint64_t)v19, (uint64_t)v8);
    v71 = Logger.logObject.getter(v70);
    v72 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v71, v72))
    {
      v73 = (uint8_t *)swift_slowAlloc(12, -1);
      v74 = swift_slowAlloc(32, -1);
      aBlock[0] = v74;
      *(_DWORD *)v73 = 136315138;
      sub_100024F3C((uint64_t)v8, (uint64_t)v14);
      v75 = String.init<A>(describing:)(v14, v85);
      v77 = v76;
      v86 = sub_100056DA0(v75, v76, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v86, &v87);
      swift_bridgeObjectRelease(v77);
      sub_100024F00((uint64_t)v8);
      _os_log_impl((void *)&_mh_execute_header, v71, v72, "FMPersonDetailCardViewController: Cannot be setup without a selected person. Selection: %s", v73, 0xCu);
      swift_arrayDestroy(v74, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v74, -1, -1);
      swift_slowDealloc(v73, -1, -1);
    }
    else
    {
      sub_100024F00((uint64_t)v8);
    }

    v78 = swift_allocObject(&unk_100565DD0, 32, 7);
    *(_QWORD *)(v78 + 16) = 0;
    *(_QWORD *)(v78 + 24) = 0;
    aBlock[4] = (uint64_t)sub_100066830;
    v89 = v78;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100037DF8;
    aBlock[3] = (uint64_t)&unk_100565DE8;
    v79 = _Block_copy(aBlock);
    objc_msgSend(v2, "dismissViewControllerAnimated:completion:", 1, v79, swift_release(v89).n128_f64[0]);
    _Block_release(v79);
  }
  return sub_100024F00((uint64_t)v19);
}

uint64_t sub_10041F82C(char a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  objc_class *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t EnumCaseMultiPayload;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  const char *v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint8_t *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  _BYTE v51[24];
  uint64_t v52;
  uint64_t v53;
  uint64_t v54[3];
  objc_super v55;

  v3 = type metadata accessor for FMSelectedSection(0);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&v46 - v8;
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v46 - v11;
  __chkstk_darwin(v10);
  v14 = (char *)&v46 - v13;
  v15 = (objc_class *)type metadata accessor for FMPersonDetailCardViewController();
  v55.receiver = v1;
  v55.super_class = v15;
  objc_msgSendSuper2(&v55, "viewWillDisappear:", a1 & 1);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v16 = type metadata accessor for Logger(0);
  v17 = sub_100056D88(v16, (uint64_t)qword_1005F5748);
  v18 = v1;
  v50 = v17;
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(12, -1);
    v49 = v14;
    v22 = (uint8_t *)v21;
    v23 = swift_slowAlloc(32, -1);
    v54[0] = v23;
    v47 = v3;
    v48 = v9;
    *(_DWORD *)v22 = 136315138;
    v46 = v22 + 4;
    v24 = v12;
    v25 = v6;
    v26 = *(_QWORD *)&v18[OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_selectedPersonIdentifier];
    v27 = *(_QWORD *)&v18[OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_selectedPersonIdentifier + 8];
    swift_bridgeObjectRetain(v27);
    v28 = v26;
    v6 = v25;
    v12 = v24;
    v52 = sub_100056DA0(v28, v27, v54);
    v3 = v47;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53);

    v29 = v27;
    v9 = v48;
    swift_bridgeObjectRelease(v29);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "FMPersonDetailCardViewController: viewWillDisappear %s", v22, 0xCu);
    swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    v30 = v22;
    v14 = v49;
    swift_slowDealloc(v30, -1, -1);

  }
  else
  {

  }
  sub_10041EE70();
  v31 = *(_QWORD *)&v18[OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_mediator];
  v32 = *(_QWORD *)(v31 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v32, v54, 0, 0);
  sub_100024F3C(v32, (uint64_t)v14);
  sub_100024F3C((uint64_t)v14, (uint64_t)v12);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v12, v3);
  switch((int)EnumCaseMultiPayload)
  {
    case 0:
      v34 = sub_100053F2C(&qword_1005DE9B0);
      sub_1000051EC((uint64_t)&v12[*(int *)(v34 + 48)], (uint64_t *)&unk_1005D3AA0);
      v35 = type metadata accessor for FMIPDevice(0);
      EnumCaseMultiPayload = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v12, v35);
      goto LABEL_10;
    case 3:
      EnumCaseMultiPayload = sub_100024F00((uint64_t)v12);
      goto LABEL_10;
    case 8:
      v42 = Logger.logObject.getter(EnumCaseMultiPayload);
      v43 = static os_log_type_t.default.getter(v42);
      if (os_log_type_enabled(v42, v43))
      {
        v44 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v44 = 0;
        _os_log_impl((void *)&_mh_execute_header, v42, v43, "FMPersonDetailCardViewController: ignore current selection", v44, 2u);
        swift_slowDealloc(v44, -1, -1);
      }

      goto LABEL_15;
    case 15:
LABEL_10:
      v38 = Logger.logObject.getter(EnumCaseMultiPayload);
      v39 = static os_log_type_t.default.getter(v38);
      if (!os_log_type_enabled(v38, v39))
        goto LABEL_19;
      v40 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v40 = 0;
      v41 = "FMPersonDetailCardViewController: ignore current selection";
      break;
    case 18:
      v38 = Logger.logObject.getter(EnumCaseMultiPayload);
      v39 = static os_log_type_t.default.getter(v38);
      if (!os_log_type_enabled(v38, v39))
        goto LABEL_19;
      v40 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v40 = 0;
      v41 = "FMItemDetailCardViewController: ranging ignores current selection";
      break;
    default:
      v36 = *(_QWORD *)(v31 + 56);
      swift_storeEnumTagMultiPayload(v9, v3, 14);
      v37 = v36 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
      swift_beginAccess(v36 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, &v52, 0, 0);
      sub_100024F3C(v37, (uint64_t)v6);
      swift_beginAccess(v37, v51, 33, 0);
      swift_retain(v36);
      sub_100009DF8((uint64_t)v9, v37);
      swift_endAccess(v51);
      sub_10004C8A4((uint64_t)v6);
      sub_100024F00((uint64_t)v9);
      sub_100024F00((uint64_t)v6);
      swift_release(v36);
LABEL_15:
      sub_100024F00((uint64_t)v14);
      v14 = v12;
      return sub_100024F00((uint64_t)v14);
  }
  _os_log_impl((void *)&_mh_execute_header, v38, v39, v41, v40, 2u);
  swift_slowDealloc(v40, -1, -1);
LABEL_19:

  return sub_100024F00((uint64_t)v14);
}

void sub_10041FD88(uint64_t a1, void (*a2)(char *, char *, uint64_t))
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  __n128 v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t);
  char v78[24];
  _BYTE v79[24];
  char v80[24];

  v3 = v2;
  v77 = a2;
  v74 = a1;
  v4 = sub_100053F2C(&qword_1005D3380);
  __chkstk_darwin(v4);
  v73 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FMFFriend(0);
  v75 = *(_QWORD *)(v6 - 8);
  v76 = v6;
  v7 = __chkstk_darwin(v6);
  v72 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v71 - v9;
  v11 = type metadata accessor for FMSelectedSection(0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v71 - v16;
  v18 = __chkstk_darwin(v15);
  v20 = (char *)&v71 - v19;
  __chkstk_darwin(v18);
  v22 = (char *)&v71 - v21;
  v23 = OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_mediator;
  v24 = *(_QWORD *)(*(_QWORD *)&v3[OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_mediator] + 56)
      + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v24, v80, 0, 0);
  sub_100024F3C(v24, (uint64_t)v22);
  LODWORD(v24) = swift_getEnumCaseMultiPayload(v22, v11);
  sub_100024F00((uint64_t)v22);
  v25 = v3;
  v26 = *(_QWORD *)&v3[v23];
  v27 = *(_QWORD *)(v26 + 56);
  if ((_DWORD)v24 == 8)
  {
    v28 = v27 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection;
    swift_beginAccess(v27 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection, v79, 0, 0);
    sub_100024F3C(v28, (uint64_t)v20);
    v29 = objc_allocWithZone((Class)type metadata accessor for FMUTCardViewController(0));
    v30 = swift_retain(v26);
    v31 = sub_100348DD0(v30, (uint64_t)v20);
    objc_msgSend(v3, "presentCard:completion:", v31, 0, swift_release(v26).n128_f64[0]);
LABEL_3:

    return;
  }
  v33 = v76;
  v32 = (uint64_t)v77;
  v71 = v23;
  v34 = v25;
  v35 = v75;
  v36 = v27 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v27 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, v79, 0, 0);
  sub_100024F3C(v36, (uint64_t)v20);
  swift_storeEnumTagMultiPayload(v17, v11, 18);
  sub_100024F80((uint64_t)v20, (uint64_t)v17);
  LOBYTE(v36) = v37;
  sub_100024F00((uint64_t)v17);
  sub_100024F00((uint64_t)v20);
  if ((v36 & 1) == 0)
  {
    swift_storeEnumTagMultiPayload(v20, v11, 15);
    sub_100024F80(v32, (uint64_t)v20);
    v39 = v38;
    sub_100024F00((uint64_t)v20);
    if ((v39 & 1) != 0)
    {
      v40 = *(_QWORD *)&v34[v71];
      v41 = v74 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection;
      swift_beginAccess(v74 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection, v78, 0, 0);
      sub_100024F3C(v41, (uint64_t)v20);
      objc_allocWithZone((Class)type metadata accessor for FMChooseMapSheetController(0));
      v42 = swift_retain(v40);
      v31 = sub_10016AC8C(v42, (uint64_t)v20);
      objc_msgSend(v34, "presentViewController:animated:completion:", v31, 1, 0);
      goto LABEL_3;
    }
    v43 = v14;
    sub_100024F3C(v32, (uint64_t)v14);
    if (swift_getEnumCaseMultiPayload(v14, v11) != 2)
    {
      sub_100024F00((uint64_t)v14);
      sub_1001FDE20();
      return;
    }
    v44 = v35;
    v45 = *(uint64_t (**)(char *, char *, uint64_t))(v35 + 32);
    v46 = (uint64_t)v10;
    v47 = v45(v10, v43, v33);
    v48 = FMFFriend.identifier.getter(v47);
    v50 = v49;
    v51 = (uint64_t *)&v34[OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_selectedPersonIdentifier];
    v52 = *(_QWORD *)&v34[OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_selectedPersonIdentifier];
    v53 = *(_QWORD *)&v34[OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_selectedPersonIdentifier + 8];
    if (v48 != v52 || v49 != v53)
    {
      v54 = _stringCompareWithSmolCheck(_:_:expecting:)(v48, v49, v52, v53, 0);
      v55 = swift_bridgeObjectRelease(v50);
      if ((v54 & 1) != 0)
      {
LABEL_17:
        (*(void (**)(uint64_t, uint64_t, __n128))(v44 + 8))(v46, v33, v55);
        return;
      }
      v77 = (void (*)(char *, char *, uint64_t))v45;
      v56 = v71;
      v57 = *(_QWORD *)(*(_QWORD *)&v34[v71] + 48);
      v58 = *v51;
      v59 = v51[1];
      swift_retain(v57);
      swift_bridgeObjectRetain(v59);
      v60 = v73;
      v61 = v58;
      v62 = v56;
      sub_10009AF28(v61, v59, v73);
      swift_release(v57);
      v44 = v35;
      v63 = swift_bridgeObjectRelease(v59);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v35 + 48))(v60, 1, v33, v63) == 1)
      {
        sub_1000051EC((uint64_t)v60, &qword_1005D3380);
      }
      else
      {
        v64 = (uint64_t)v72;
        v77(v72, v60, v33);
        v65 = *(_QWORD *)(*(_QWORD *)&v34[v62] + 48);
        swift_retain(v65);
        sub_10009BCFC(v64);
        v66 = swift_release(v65);
        (*(void (**)(uint64_t, uint64_t, __n128))(v44 + 8))(v64, v33, v66);
      }
      v67 = *(_QWORD *)(*(_QWORD *)&v34[v62] + 48);
      swift_retain(v67);
      sub_10009BAEC(v46);
      swift_release(v67);
      v69 = FMFFriend.identifier.getter(v68);
      v50 = v51[1];
      *v51 = v69;
      v51[1] = v70;
    }
    v55 = swift_bridgeObjectRelease(v50);
    goto LABEL_17;
  }
}

uint64_t sub_1004202E0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_mediator));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_conditionsSubscription));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_selectionSubscription));
  return swift_bridgeObjectRelease(*(_QWORD *)(v0
                                             + OBJC_IVAR____TtC6FindMy32FMPersonDetailCardViewController_selectedPersonIdentifier
                                             + 8));
}

id sub_100420330()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPersonDetailCardViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMPersonDetailCardViewController()
{
  return objc_opt_self(_TtC6FindMy32FMPersonDetailCardViewController);
}

void sub_1004203E4(void *a1, char *a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  void **v17;
  void *v18;
  id v19;
  void *v20;
  _QWORD *v21;
  uint64_t ObjectType;
  void (*v23)(uint64_t, uint64_t, _QWORD *);
  uint64_t v24;
  id v25;
  double v26;
  double v27;
  double v28;
  id v29;

  v4 = objc_msgSend(a1, "view");
  if (v4)
  {
    v29 = v4;
    sub_1000428F0();
    objc_msgSend(a2, "addChildViewController:", a1);
    v5 = *(_QWORD *)&a2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardContainer];
    v6 = OBJC_IVAR____TtC6FindMy19FMCardContainerView_bluredBackground;
    v7 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v5
                                                               + OBJC_IVAR____TtC6FindMy19FMCardContainerView_bluredBackground), "contentView"));
    objc_msgSend(v7, "bounds");
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v15 = v14;

    objc_msgSend(v29, "setFrame:", v9, v11, v13, v15);
    objc_msgSend(v29, "setAutoresizingMask:", 18);
    objc_msgSend(v29, "setPreservesSuperviewLayoutMargins:", 1);
    v16 = objc_msgSend(*(id *)(v5 + v6), "contentView");
    objc_msgSend(v16, "addSubview:", v29);

    objc_msgSend(a1, "didMoveToParentViewController:", a2);
    v17 = (void **)&a2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController];
    v18 = *(void **)&a2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController];
    *v17 = a1;
    v17[1] = &off_1005545A8;
    v19 = a1;

    v20 = *v17;
    if (*v17)
    {
      v21 = v17[1];
      ObjectType = swift_getObjectType(v20);
      v23 = (void (*)(uint64_t, uint64_t, _QWORD *))v21[4];
      v24 = a2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent];
      v25 = v20;
      v23(v24, ObjectType, v21);

      v19 = v25;
    }

    objc_msgSend(v29, "layoutIfNeeded");
    sub_1000421B0();
    sub_100041F18(0, v26);
    sub_1000421B0();
    v28 = 0.64 - v27;
    if (v28 <= 0.0)
      v28 = 0.0;
    objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_darkenerBackground], "setAlpha:", v28 * *(double *)&a2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration]);

  }
}

uint64_t sub_10042065C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_100420688()
{
  double result;

  result = 18.0;
  xmmword_1005F60E0 = xmmword_10048A690;
  *(_OWORD *)algn_1005F60F0 = xmmword_10048A6A0;
  return result;
}

char *sub_1004206A8(uint64_t a1, char a2)
{
  char *v2;
  char v4;
  char *v5;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  objc_class *v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  char *v23;
  id v24;
  id v25;
  objc_super v27;

  v4 = a2 & 1;
  v5 = &v2[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_delegate];
  *((_QWORD *)v5 + 1) = 0;
  swift_unknownObjectWeakInit(v5);
  v6 = OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_scrollView;
  v7 = objc_allocWithZone((Class)UIScrollView);
  v8 = v2;
  *(_QWORD *)&v2[v6] = objc_msgSend(v7, "init");
  v9 = OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_scrollContentView;
  *(_QWORD *)&v8[v9] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v10 = OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_titleLabel;
  *(_QWORD *)&v8[v10] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v11 = OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_subtitleLabel;
  *(_QWORD *)&v8[v11] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v12 = OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_actionButton;
  v13 = (void *)objc_opt_self(UIColor);
  v14 = objc_msgSend(v13, "systemBlueColor");
  v15 = (objc_class *)type metadata accessor for FMSingleLinePlatterButton();
  v16 = objc_allocWithZone(v15);
  v17 = sub_1000472FC(v14, 1, 0, 1);

  *(_QWORD *)&v8[v12] = v17;
  v18 = OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_secondaryActionButton;
  v19 = objc_msgSend(v13, "clearColor");
  v20 = objc_allocWithZone(v15);
  v21 = sub_1000472FC(v19, 1, 0, 1);

  *(_QWORD *)&v8[v18] = v21;
  v22 = OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_informativeImage;
  *(_QWORD *)&v8[v22] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  *(_QWORD *)&v8[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_heightConstraint] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_mediator] = a1;
  v8[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_type] = v4;
  swift_retain(a1);

  v27.receiver = v8;
  v27.super_class = (Class)type metadata accessor for FMSeparationWelcomeScreenViewController();
  v23 = (char *)objc_msgSendSuper2(&v27, "initWithNibName:bundle:", 0, 0);
  sub_100420984();
  sub_10042126C();
  v24 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v23, "nextAction");
  objc_msgSend(*(id *)&v23[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_actionButton], "addGestureRecognizer:", v24);
  v25 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v23, "secondaryAction");
  objc_msgSend(*(id *)&v23[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_secondaryActionButton], "addGestureRecognizer:", v25);

  swift_release(a1);
  return v23;
}

void sub_100420984()
{
  char *v0;
  char *v1;
  void *v2;
  char v3;
  id v4;
  unint64_t v5;
  unint64_t v6;
  const char *v7;
  unint64_t v8;
  Swift::String_optional v9;
  Swift::String v10;
  void *object;
  NSString v12;
  void *v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  const char *v17;
  unint64_t v18;
  Swift::String_optional v19;
  Swift::String v20;
  void *v21;
  NSString v22;
  id v23;
  void *v24;
  char *v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  char *v33;
  void *v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  void *v40;
  id v41;
  id v42;
  Swift::String_optional v43;
  Swift::String v44;
  Swift::String v45;
  void *v46;
  NSString v47;
  id v48;
  id v49;
  void *v50;
  id v51;
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  unint64_t v58;
  unint64_t v59;
  const char *v60;
  unint64_t v61;
  Swift::String_optional v62;
  Swift::String v63;
  void *v64;
  NSString v65;
  id v66;
  id v67;
  void *v68;
  id v69;
  id v70;
  void *v71;
  id v72;
  void *v73;
  id v74;
  void *v75;
  id v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  id v83;
  void *v84;
  char v85;
  id v86;
  id v87;
  Swift::String v88;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_titleLabel];
  v3 = v0[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_type];
  v4 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v5 = 0xD00000000000001BLL;
  if ((v3 & 1) != 0)
  {
    v6 = 0xD000000000000022;
    v77 = 0x80000001004A91F0;
    v7 = "ITEM_DETAIL_TRUSTED_LOCATION_TITLE";
  }
  else
  {
    v6 = 0xD000000000000023;
    v77 = 0x80000001004A91F0;
    v7 = "ITEM_DETAIL_NOTIFY_WHEN_LEFT_BEHIND";
  }
  v8 = (unint64_t)(v7 - 32) | 0x8000000000000000;
  v9.value._object = (void *)0x80000001004A91D0;
  v9.value._countAndFlagsBits = 0xD000000000000016;
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v6, v9, (NSBundle)v4, v10, *(Swift::String *)&v5)._object;

  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setText:", v12, swift_bridgeObjectRelease(object).n128_f64[0]);

  v13 = *(void **)&v1[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_subtitleLabel];
  v14 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v15 = 0xD00000000000001BLL;
  if ((v3 & 1) != 0)
  {
    v16 = 0xD00000000000003FLL;
    v78 = 0x80000001004A91F0;
    v17 = "ITEM_NOTIFICATIONS_SEPARATION_WELCOME_SAFE_LOCATION_DESCRIPTION";
  }
  else
  {
    v16 = 0xD000000000000031;
    v78 = 0x80000001004A91F0;
    v17 = "ITEM_NOTIFICATIONS_SEPARATION_WELCOME_DESCRIPTION";
  }
  v18 = (unint64_t)(v17 - 32) | 0x8000000000000000;
  v19.value._object = (void *)0x80000001004A91D0;
  v19.value._countAndFlagsBits = 0xD000000000000016;
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  v21 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v16, v19, (NSBundle)v14, v20, *(Swift::String *)&v15)._object;
  v85 = v3;

  v22 = String._bridgeToObjectiveC()();
  objc_msgSend(v13, "setText:", v22, swift_bridgeObjectRelease(v21).n128_f64[0]);

  v23 = objc_msgSend(v1, "view");
  if (!v23)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v24 = v23;
  v25 = v1;
  v26 = (void *)objc_opt_self(UIColor);
  v27 = objc_msgSend(v26, "systemBackgroundColor");
  objc_msgSend(v24, "setBackgroundColor:", v27);

  v83 = *(id *)&v25[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_scrollView];
  objc_msgSend(v83, "setPreservesSuperviewLayoutMargins:", 1);
  v82 = *(id *)&v25[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_scrollContentView];
  objc_msgSend(v82, "setPreservesSuperviewLayoutMargins:", 1);
  objc_msgSend(v2, "setAdjustsFontForContentSizeCategory:", 1);
  v86 = (id)objc_opt_self(UIFont);
  v28 = objc_msgSend(v86, "preferredFontForTextStyle:", UIFontTextStyleTitle1);
  v29 = (void *)sub_10003CEE8(2);

  objc_msgSend(v2, "setFont:", v29);
  objc_msgSend(v2, "setNumberOfLines:", 0);
  v30 = objc_msgSend(v26, "labelColor");
  objc_msgSend(v2, "setTextColor:", v30);

  objc_msgSend(v2, "setTextAlignment:", 1);
  objc_msgSend(v13, "setAdjustsFontForContentSizeCategory:", 1);
  v31 = objc_msgSend(v86, "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v13, "setFont:", v31);

  objc_msgSend(v13, "setNumberOfLines:", 0);
  v32 = objc_msgSend(v26, "labelColor");
  objc_msgSend(v13, "setTextColor:", v32);

  v84 = v13;
  objc_msgSend(v13, "setTextAlignment:", 1);
  v81 = OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_informativeImage;
  v33 = v25;
  v34 = *(void **)&v25[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_informativeImage];
  sub_100006C5C(0, (unint64_t *)&qword_1005DDF90, UIImage_ptr);
  v35 = v34;
  v36 = sub_100342F84(0x63496D6574496F4ELL, 0xEA00000000006E6FLL, 6778480, 0xE300000000000000);
  objc_msgSend(v35, "setImage:", v36);

  v37 = *(_QWORD *)&v25[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_actionButton];
  v38 = OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label;
  v39 = *(void **)(v37 + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label);
  v40 = (void *)objc_opt_self(NSBundle);
  v41 = v39;
  v42 = objc_msgSend(v40, "mainBundle");
  v43.value._countAndFlagsBits = 0xD000000000000013;
  v88._countAndFlagsBits = 0xD000000000000018;
  v44._countAndFlagsBits = 0xD00000000000001DLL;
  v88._object = (void *)0x80000001004A5660;
  v44._object = (void *)0x80000001004C61B0;
  v43.value._object = (void *)0x80000001004A5640;
  v45._countAndFlagsBits = 0;
  v45._object = (void *)0xE000000000000000;
  v46 = NSLocalizedString(_:tableName:bundle:value:comment:)(v44, v43, (NSBundle)v42, v45, v88)._object;

  v47 = String._bridgeToObjectiveC()();
  objc_msgSend(v41, "setText:", v47, swift_bridgeObjectRelease(v46).n128_f64[0]);

  v48 = *(id *)(v37 + v38);
  v49 = objc_msgSend(v26, "systemWhiteColor");
  objc_msgSend(v48, "setTextColor:", v49);

  v80 = v37;
  v50 = *(void **)(v37 + v38);
  objc_msgSend(v50, "setTextAlignment:", 1);
  v51 = v50;
  v52 = objc_msgSend(v86, "preferredFontForTextStyle:", UIFontTextStyleBody);
  v53 = (void *)sub_10003CEE8(2);

  objc_msgSend(v51, "setFont:", v53);
  v54 = *(_QWORD *)&v33[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_secondaryActionButton];
  v55 = OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label;
  v56 = *(id *)(v54 + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label);
  v57 = objc_msgSend(v40, "mainBundle");
  v58 = 0xD00000000000001BLL;
  if ((v85 & 1) != 0)
  {
    v59 = 0xD00000000000003ALL;
    v79 = 0x80000001004A91F0;
    v60 = "ITEM_NOTIFICATIONS_EDIT_SEPARATION_SAFE_LOCATION_EDIT_HOME";
  }
  else
  {
    v59 = 0xD000000000000032;
    v79 = 0x80000001004A91F0;
    v60 = "ITEM_NOTIFICATIONS_SEPARATION_NOTIFICATION_NOT_NOW";
  }
  v61 = (unint64_t)(v60 - 32) | 0x8000000000000000;
  v62.value._object = (void *)0x80000001004A91D0;
  v62.value._countAndFlagsBits = 0xD000000000000016;
  v63._countAndFlagsBits = 0;
  v63._object = (void *)0xE000000000000000;
  v64 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v59, v62, (NSBundle)v57, v63, *(Swift::String *)&v58)._object;

  v65 = String._bridgeToObjectiveC()();
  objc_msgSend(v56, "setText:", v65, swift_bridgeObjectRelease(v64).n128_f64[0]);

  v66 = *(id *)(v54 + v55);
  v67 = objc_msgSend(v26, "systemBlueColor");
  objc_msgSend(v66, "setTextColor:", v67);

  v68 = *(void **)(v54 + v55);
  objc_msgSend(v68, "setTextAlignment:", 1);
  v69 = v68;
  v70 = objc_msgSend(v86, "preferredFontForTextStyle:", UIFontTextStyleBody);
  v71 = (void *)sub_10003CEE8(2);

  objc_msgSend(v69, "setFont:", v71);
  objc_msgSend(v82, "addSubview:", v84);
  objc_msgSend(v82, "addSubview:", v2);
  objc_msgSend(v82, "addSubview:", *(_QWORD *)&v33[v81]);
  objc_msgSend(v83, "addSubview:", v82);
  v72 = objc_msgSend(v33, "view");
  if (!v72)
    goto LABEL_16;
  v73 = v72;
  objc_msgSend(v72, "addSubview:", v83);

  v74 = objc_msgSend(v33, "view");
  if (!v74)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v75 = v74;
  objc_msgSend(v74, "addSubview:", v80);

  v76 = objc_msgSend(v33, "view");
  if (v76)
  {
    v87 = v76;
    objc_msgSend(v76, "addSubview:", v54);

    return;
  }
LABEL_18:
  __break(1u);
}

void sub_10042126C()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  double v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  Class isa;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  uint64_t v50;
  Class v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  Class v61;
  uint64_t v62;
  id v63;
  id v64;
  double v65;
  void *v66;
  id v67;
  double v68;
  CGFloat v69;
  double v70;
  CGFloat v71;
  double v72;
  CGFloat v73;
  double v74;
  CGFloat v75;
  double v76;
  id v77;
  id v78;
  id v79;
  double v80;
  id v81;
  id v82;
  id v83;
  double v84;
  id v85;
  uint64_t v86;
  Class v87;
  uint64_t v88;
  id v89;
  id v90;
  double v91;
  id v92;
  double v93;
  CGFloat v94;
  double v95;
  CGFloat v96;
  double v97;
  CGFloat v98;
  double v99;
  CGFloat v100;
  double v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  uint64_t v113;
  Class v114;
  uint64_t v115;
  id v116;
  id v117;
  void *v118;
  id v119;
  id v120;
  id v121;
  id v122;
  void *v123;
  id v124;
  id v125;
  id v126;
  id v127;
  id v128;
  id v129;
  id v130;
  id v131;
  uint64_t v132;
  Class v133;
  uint64_t v134;
  id v135;
  id v136;
  void *v137;
  id v138;
  id v139;
  id v140;
  id v141;
  void *v142;
  id v143;
  id v144;
  id v145;
  id v146;
  void *v147;
  id v148;
  id v149;
  id v150;
  id v151;
  id v152;
  void *v153;
  id v154;
  id v155;
  id v156;
  uint64_t v157;
  id v158;
  id v159;
  void *v160;
  double v161;
  id v162;
  id v163;
  void *v164;
  uint64_t v165;
  id v166;
  Class v167;
  CGRect v168;
  CGRect v169;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_actionButton];
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_secondaryActionButton];
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v164 = *(void **)&v0[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_titleLabel];
  objc_msgSend(v164, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_subtitleLabel];
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = *(void **)&v0[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_scrollView];
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v6 = *(void **)&v0[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_scrollContentView];
  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v7 = *(double *)&qword_1005F5978;
  v8 = objc_msgSend(v0, "view");
  if (!v8)
  {
    __break(1u);
    goto LABEL_23;
  }
  v9 = v8;
  v162 = v6;
  v163 = v4;
  v10 = objc_msgSend(v8, "heightAnchor");

  v11 = objc_msgSend(v10, "constraintGreaterThanOrEqualToConstant:", 480.0);
  v12 = *(void **)&v1[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_heightConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_heightConstraint] = v11;
  v158 = v11;

  v165 = sub_100053F2C(&qword_1005D2F10);
  v13 = swift_allocObject(v165, 56, 7);
  *(_OWORD *)(v13 + 16) = xmmword_1004820C0;
  v14 = objc_msgSend(v5, "topAnchor");
  v15 = objc_msgSend(v1, "view");
  if (!v15)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v16 = v15;
  v17 = objc_msgSend(v15, "topAnchor");

  v18 = objc_msgSend(v14, "constraintEqualToAnchor:", v17);
  *(_QWORD *)(v13 + 32) = v18;
  v19 = objc_msgSend(v5, "leadingAnchor");
  v20 = objc_msgSend(v1, "view");
  if (!v20)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v21 = v20;
  v160 = v3;
  v22 = objc_msgSend(v20, "safeAreaLayoutGuide");

  v23 = objc_msgSend(v22, "leadingAnchor");
  v24 = objc_msgSend(v19, "constraintEqualToAnchor:", v23);

  *(_QWORD *)(v13 + 40) = v24;
  v25 = objc_msgSend(v5, "trailingAnchor");
  v26 = objc_msgSend(v1, "view");
  if (!v26)
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v27 = v26;
  v166 = (id)objc_opt_self(NSLayoutConstraint);
  v28 = objc_msgSend(v27, "safeAreaLayoutGuide");

  v29 = objc_msgSend(v28, "trailingAnchor");
  v30 = objc_msgSend(v25, "constraintEqualToAnchor:", v29);

  *(_QWORD *)(v13 + 48) = v30;
  specialized Array._endMutation()(v31);
  sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v166, "activateConstraints:", isa, swift_bridgeObjectRelease(v13).n128_f64[0]);

  v33 = swift_allocObject(v165, 72, 7);
  *(_OWORD *)(v33 + 16) = xmmword_1004820D0;
  v34 = objc_msgSend(v162, "topAnchor");
  v35 = objc_msgSend(v5, "topAnchor");
  v36 = objc_msgSend(v34, "constraintEqualToAnchor:", v35);

  *(_QWORD *)(v33 + 32) = v36;
  v37 = objc_msgSend(v162, "bottomAnchor");
  v38 = objc_msgSend(v5, "bottomAnchor");
  v39 = objc_msgSend(v37, "constraintEqualToAnchor:", v38);

  *(_QWORD *)(v33 + 40) = v39;
  v40 = objc_msgSend(v162, "leadingAnchor");
  v41 = objc_msgSend(v5, "safeAreaLayoutGuide");
  v42 = objc_msgSend(v41, "leadingAnchor");

  v43 = objc_msgSend(v40, "constraintEqualToAnchor:", v42);
  *(_QWORD *)(v33 + 48) = v43;
  v44 = objc_msgSend(v162, "trailingAnchor");
  v159 = v5;
  v45 = objc_msgSend(v5, "safeAreaLayoutGuide");
  v46 = objc_msgSend(v45, "trailingAnchor");

  v47 = objc_msgSend(v44, "constraintEqualToAnchor:", v46);
  *(_QWORD *)(v33 + 56) = v47;
  v48 = objc_msgSend(v162, "heightAnchor");
  v49 = objc_msgSend(v48, "constraintGreaterThanOrEqualToConstant:", 480.0);

  *(_QWORD *)(v33 + 64) = v49;
  specialized Array._endMutation()(v50);
  v51 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v166, "activateConstraints:", v51, swift_bridgeObjectRelease(v33).n128_f64[0]);

  v52 = OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_informativeImage;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_informativeImage], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v53 = swift_allocObject(v165, 48, 7);
  *(_OWORD *)(v53 + 16) = xmmword_1004820B0;
  v54 = objc_msgSend(*(id *)&v1[v52], "centerXAnchor");
  v55 = objc_msgSend(v162, "centerXAnchor");
  v56 = objc_msgSend(v54, "constraintEqualToAnchor:", v55);

  *(_QWORD *)(v53 + 32) = v56;
  v57 = objc_msgSend(*(id *)&v1[v52], "topAnchor");
  v58 = objc_msgSend(v164, "bottomAnchor");
  v59 = objc_msgSend(v57, "constraintEqualToAnchor:constant:", v58, 40.0);

  *(_QWORD *)(v53 + 40) = v59;
  specialized Array._endMutation()(v60);
  v61 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v166, "activateConstraints:", v61, swift_bridgeObjectRelease(v53).n128_f64[0]);

  v62 = swift_allocObject(v165, 56, 7);
  *(_OWORD *)(v62 + 16) = xmmword_1004820C0;
  v63 = objc_msgSend(v164, "topAnchor");
  v64 = objc_msgSend(v162, "topAnchor");
  if (qword_1005D20A0 != -1)
    swift_once(&qword_1005D20A0, sub_100420688);
  v65 = *(double *)&xmmword_1005F60E0;
  v66 = (void *)objc_opt_self(UIScreen);
  v67 = objc_msgSend(v66, "mainScreen");
  objc_msgSend(v67, "nativeBounds");
  v69 = v68;
  v71 = v70;
  v73 = v72;
  v75 = v74;

  v168.origin.x = v69;
  v168.origin.y = v71;
  v168.size.width = v73;
  v168.size.height = v75;
  if (CGRectGetHeight(v168) > 1136.0)
    v76 = v65;
  else
    v76 = v65 * 0.625;
  v77 = objc_msgSend(v63, "constraintEqualToAnchor:constant:", v64, v76 * 3.0);

  *(_QWORD *)(v62 + 32) = v77;
  v78 = objc_msgSend(v164, "leadingAnchor");
  v79 = objc_msgSend(v162, "leadingAnchor");
  v80 = v7 + v7;
  v81 = objc_msgSend(v78, "constraintEqualToAnchor:constant:", v79, v7 + v7);

  *(_QWORD *)(v62 + 40) = v81;
  v82 = objc_msgSend(v164, "trailingAnchor");
  v83 = objc_msgSend(v162, "trailingAnchor");
  v161 = v7;
  v84 = v7 * -2.0;
  v85 = objc_msgSend(v82, "constraintEqualToAnchor:constant:", v83, v7 * -2.0);

  *(_QWORD *)(v62 + 48) = v85;
  specialized Array._endMutation()(v86);
  v87 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v166, "activateConstraints:", v87, swift_bridgeObjectRelease(v62).n128_f64[0]);

  v88 = swift_allocObject(v165, 64, 7);
  *(_OWORD *)(v88 + 16) = xmmword_100481720;
  v89 = objc_msgSend(v163, "topAnchor");
  v90 = objc_msgSend(*(id *)&v1[v52], "bottomAnchor");
  v91 = *(double *)&xmmword_1005F60E0;
  v92 = objc_msgSend(v66, "mainScreen");
  objc_msgSend(v92, "nativeBounds");
  v94 = v93;
  v96 = v95;
  v98 = v97;
  v100 = v99;

  v169.origin.x = v94;
  v169.origin.y = v96;
  v169.size.width = v98;
  v169.size.height = v100;
  if (CGRectGetHeight(v169) > 1136.0)
    v101 = v91;
  else
    v101 = v91 * 0.625;
  v102 = objc_msgSend(v89, "constraintEqualToAnchor:constant:", v90, v101);

  *(_QWORD *)(v88 + 32) = v102;
  v103 = objc_msgSend(v163, "leadingAnchor");
  v104 = objc_msgSend(v162, "leadingAnchor");
  v105 = objc_msgSend(v103, "constraintEqualToAnchor:constant:", v104, v80);

  *(_QWORD *)(v88 + 40) = v105;
  v106 = objc_msgSend(v163, "trailingAnchor");
  v107 = objc_msgSend(v162, "trailingAnchor");
  v108 = objc_msgSend(v106, "constraintEqualToAnchor:constant:", v107, v84);

  *(_QWORD *)(v88 + 48) = v108;
  v109 = objc_msgSend(v163, "bottomAnchor");
  v110 = objc_msgSend(v162, "layoutMarginsGuide");
  v111 = objc_msgSend(v110, "bottomAnchor");

  v112 = objc_msgSend(v109, "constraintLessThanOrEqualToAnchor:", v111);
  *(_QWORD *)(v88 + 56) = v112;
  specialized Array._endMutation()(v113);
  v114 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v166, "activateConstraints:", v114, swift_bridgeObjectRelease(v88).n128_f64[0]);

  v115 = swift_allocObject(v165, 64, 7);
  *(_OWORD *)(v115 + 16) = xmmword_100481720;
  v116 = objc_msgSend(v2, "leadingAnchor");
  v117 = objc_msgSend(v1, "view");
  if (!v117)
    goto LABEL_26;
  v118 = v117;
  v119 = objc_msgSend(v117, "leadingAnchor");

  v120 = objc_msgSend(v116, "constraintEqualToAnchor:constant:", v119, v80);
  *(_QWORD *)(v115 + 32) = v120;
  v121 = objc_msgSend(v2, "trailingAnchor");
  v122 = objc_msgSend(v1, "view");
  if (!v122)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v123 = v122;
  v124 = objc_msgSend(v122, "trailingAnchor");

  v125 = objc_msgSend(v121, "constraintEqualToAnchor:constant:", v124, v84);
  *(_QWORD *)(v115 + 40) = v125;
  v126 = objc_msgSend(v2, "bottomAnchor");
  v127 = objc_msgSend(v160, "topAnchor");
  v128 = objc_msgSend(v126, "constraintEqualToAnchor:", v127);

  *(_QWORD *)(v115 + 48) = v128;
  v129 = objc_msgSend(v2, "topAnchor");
  v130 = objc_msgSend(v159, "bottomAnchor");
  v131 = objc_msgSend(v129, "constraintEqualToAnchor:constant:", v130, v161);

  *(_QWORD *)(v115 + 56) = v131;
  specialized Array._endMutation()(v132);
  v133 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v166, "activateConstraints:", v133, swift_bridgeObjectRelease(v115).n128_f64[0]);

  v134 = swift_allocObject(v165, 64, 7);
  *(_OWORD *)(v134 + 16) = xmmword_100481720;
  v135 = objc_msgSend(v160, "leadingAnchor");
  v136 = objc_msgSend(v1, "view");
  if (!v136)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v137 = v136;
  v138 = objc_msgSend(v136, "leadingAnchor");

  v139 = objc_msgSend(v135, "constraintEqualToAnchor:constant:", v138, v80);
  *(_QWORD *)(v134 + 32) = v139;
  v140 = objc_msgSend(v160, "trailingAnchor");
  v141 = objc_msgSend(v1, "view");
  if (!v141)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v142 = v141;
  v143 = objc_msgSend(v141, "trailingAnchor");

  v144 = objc_msgSend(v140, "constraintEqualToAnchor:constant:", v143, v84);
  *(_QWORD *)(v134 + 40) = v144;
  v145 = objc_msgSend(v160, "bottomAnchor");
  v146 = objc_msgSend(v1, "view");
  if (!v146)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v147 = v146;
  v148 = objc_msgSend(v146, "safeAreaLayoutGuide");

  v149 = objc_msgSend(v148, "bottomAnchor");
  v150 = objc_msgSend(v145, "constraintEqualToAnchor:", v149);

  *(_QWORD *)(v134 + 48) = v150;
  v151 = objc_msgSend(v160, "bottomAnchor");
  v152 = objc_msgSend(v1, "view");
  if (v152)
  {
    v153 = v152;
    v154 = objc_msgSend(v152, "safeAreaLayoutGuide");

    v155 = objc_msgSend(v154, "bottomAnchor");
    v156 = objc_msgSend(v151, "constraintEqualToAnchor:constant:", v155, -v161);

    *(_QWORD *)(v134 + 56) = v156;
    specialized Array._endMutation()(v157);
    v167 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v166, "activateConstraints:", v167, swift_bridgeObjectRelease(v134).n128_f64[0]);

    return;
  }
LABEL_31:
  __break(1u);
}

id sub_1004223DC()
{
  char *v0;
  id result;
  void *v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double Height;
  void *v12;
  double v13;
  double v14;
  void *v15;
  double v16;
  double v17;
  double v18;
  objc_super v19;
  CGRect v20;

  v19.receiver = v0;
  v19.super_class = (Class)type metadata accessor for FMSeparationWelcomeScreenViewController();
  objc_msgSendSuper2(&v19, "viewDidLayoutSubviews");
  result = objc_msgSend(v0, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  v2 = result;
  objc_msgSend(result, "frame");
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;

  v20.origin.x = v4;
  v20.origin.y = v6;
  v20.size.width = v8;
  v20.size.height = v10;
  Height = CGRectGetHeight(v20);
  result = objc_msgSend(v0, "view");
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v12 = result;
  objc_msgSend(result, "safeAreaInsets");
  v14 = v13;

  result = objc_msgSend(v0, "view");
  if (result)
  {
    v15 = result;
    v16 = Height - v14;
    objc_msgSend(result, "safeAreaInsets");
    v18 = v17;

    return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_heightConstraint], "setConstant:", v16 - v18);
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_100422540()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  char *v7;
  uint64_t Strong;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  id v14;

  v1 = v0;
  if ((v0[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_type] & 1) != 0)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v2 = type metadata accessor for Logger(0);
    v3 = sub_100056D88(v2, (uint64_t)qword_1005F5748);
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.default.getter(v4);
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMSeparationWelcomeScreenViewController:  User confirmed notify when found enablement", v6, 2u);
      swift_slowDealloc(v6, -1, -1);
    }

    v7 = &v1[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_delegate];
    Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_delegate]);
    if (Strong)
    {
      v10 = Strong;
      v11 = *((_QWORD *)v7 + 1);
      ObjectType = swift_getObjectType(Strong);
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(ObjectType, v11);
      *(_QWORD *)&v9 = swift_unknownObjectRelease(v10).n128_u64[0];
    }
    objc_msgSend(v1, "dismissViewControllerAnimated:completion:", 1, 0, v9);
  }
  else
  {
    v14 = objc_msgSend(v0, "parentViewController");
    if (v14)
    {
      v13 = objc_opt_self(UIPageViewController);
      if (swift_dynamicCastObjCClass(v14, v13))
        sub_10010D178(1, 0, 0);

    }
  }
}

void sub_100422724()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  NSString *v5;
  id v6;
  id v7;
  Swift::String v8;
  Swift::String v9;
  void *object;
  uint64_t v11;
  id v12;
  NSString v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  os_log_type_t v21;
  uint8_t *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  NSObject *v31;
  _QWORD v32[4];
  Swift::String v33;

  v1 = v0;
  if ((*((_BYTE *)v0 + OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_type) & 1) != 0)
  {
    v2 = sub_1003C1750();
    if (v2)
    {
      v3 = v2;
      v4 = (void *)objc_opt_self(CNContactViewController);
      v5 = CNContactPostalAddressesKey;
      v6 = objc_msgSend(v4, "viewControllerForContact:", v3);
      objc_msgSend(v6, "setDisplayMode:", 1);
      objc_msgSend(v6, "setAllowsEditing:", 1);
      objc_msgSend(v6, "highlightPropertyWithKey:identifier:", v5, 0);

      v32[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(0xE000000000000000);
      v7 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v33._object = (void *)0x80000001004A6F70;
      v8._countAndFlagsBits = 0x425F4C45434E4143;
      v8._object = (void *)0xED00004E4F545455;
      v9._countAndFlagsBits = 0;
      v9._object = (void *)0xE000000000000000;
      v33._countAndFlagsBits = 0xD00000000000001FLL;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v33)._object;

      v11 = type metadata accessor for FMSeparationWelcomeScreenViewController();
      v32[3] = v11;
      v32[0] = v1;
      v12 = v1;
      v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(object);
      if (v11)
      {
        v14 = sub_100029550(v32, v11);
        v15 = *(_QWORD *)(v11 - 8);
        __chkstk_darwin(v14);
        v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v15 + 16))(v17);
        v18 = _bridgeAnythingToObjectiveC<A>(_:)(v17, v11);
        (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v11);
        sub_100029574(v32);
      }
      else
      {
        v18 = 0;
      }
      v23 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithTitle:style:target:action:", v13, 0, v18, "dismissPresentedVCWithSender:");

      swift_unknownObjectRelease(v18);
      v24 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v6);
      objc_msgSend(v24, "setModalPresentationStyle:", 2);
      v25 = objc_msgSend(v6, "navigationItem");
      objc_msgSend(v25, "setLeftBarButtonItem:animated:", v23, 1);

      v26 = objc_msgSend(v6, "view");
      if (v26)
      {
        v27 = v26;
        v28 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
        objc_msgSend(v27, "setBackgroundColor:", v28);

        v29 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), "init");
        objc_msgSend(v6, "setContactStore:", v29);

        objc_msgSend(v12, "presentViewController:animated:completion:", v24, 1, 0);
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v19 = type metadata accessor for Logger(0);
      v20 = sub_100056D88(v19, (uint64_t)qword_1005F5748);
      v31 = Logger.logObject.getter(v20);
      v21 = static os_log_type_t.default.getter(v31);
      if (os_log_type_enabled(v31, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v22 = 0;
        _os_log_impl((void *)&_mh_execute_header, v31, v21, "FMTrustedLocationDetailView: No me contact fetched. Check access.", v22, 2u);
        swift_slowDealloc(v22, -1, -1);
      }

    }
  }
  else
  {
    objc_msgSend(v0, "dismissViewControllerAnimated:completion:", 1, 0);
  }
}

id sub_100422D20()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMSeparationWelcomeScreenViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMSeparationWelcomeScreenViewController()
{
  return objc_opt_self(_TtC6FindMy39FMSeparationWelcomeScreenViewController);
}

uint64_t storeEnumTagSinglePayload for FMSeparationWelcomeScreenType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100422E74 + 4 * byte_100490B95[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100422EA8 + 4 * byte_100490B90[v4]))();
}

uint64_t sub_100422EA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100422EB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100422EB8);
  return result;
}

uint64_t sub_100422EC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100422ECCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100422ED0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100422ED8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMSeparationWelcomeScreenType()
{
  return &type metadata for FMSeparationWelcomeScreenType;
}

unint64_t sub_100422EF8()
{
  unint64_t result;

  result = qword_1005E4510;
  if (!qword_1005E4510)
  {
    result = swift_getWitnessTable(&unk_100490C70, &type metadata for FMSeparationWelcomeScreenType);
    atomic_store(result, (unint64_t *)&qword_1005E4510);
  }
  return result;
}

void sub_100422F3C()
{
  char *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  objc_class *v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_delegate];
  *((_QWORD *)v2 + 1) = 0;
  swift_unknownObjectWeakInit(v2);
  v3 = OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_scrollView;
  *(_QWORD *)&v1[v3] = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "init");
  v4 = OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_scrollContentView;
  *(_QWORD *)&v1[v4] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v5 = OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_titleLabel;
  *(_QWORD *)&v1[v5] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v6 = OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_subtitleLabel;
  *(_QWORD *)&v1[v6] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v7 = OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_actionButton;
  v8 = (void *)objc_opt_self(UIColor);
  v9 = objc_msgSend(v8, "systemBlueColor");
  v10 = (objc_class *)type metadata accessor for FMSingleLinePlatterButton();
  v11 = objc_allocWithZone(v10);
  v12 = sub_1000472FC(v9, 1, 0, 1);

  *(_QWORD *)&v1[v7] = v12;
  v13 = OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_secondaryActionButton;
  v14 = objc_msgSend(v8, "clearColor");
  v15 = objc_allocWithZone(v10);
  v16 = sub_1000472FC(v14, 1, 0, 1);

  *(_QWORD *)&v1[v13] = v16;
  v17 = OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_informativeImage;
  *(_QWORD *)&v1[v17] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_heightConstraint] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMSeparationWelcomeScreenViewController.swift", 52, 2, 68, 0);
  __break(1u);
}

void sub_100423124()
{
  char *v0;
  char *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  int64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _BYTE v87[24];

  v1 = v0;
  if (v0[OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_updatesEnabled] != 1)
  {
    v63 = 0;
    v64 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceSubscription];
    if (!v64)
      goto LABEL_17;
    v65 = *(uint64_t **)(*((_QWORD *)v0 + 2) + 24);
    swift_beginAccess(v65 + 2, v87, 33, 0);
    swift_retain(v64);
    swift_retain(v65);
    v66 = sub_1001138E0(v65 + 2, v64);
    v67 = v66;
    v68 = v65[2];
    if ((unint64_t)v68 >> 62)
    {
      if (v68 < 0)
        v82 = v65[2];
      else
        v82 = v68 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v65[2]);
      v69 = _CocoaArrayWrapper.endIndex.getter(v82);
      swift_bridgeObjectRelease(v68);
      if (v69 >= v67)
        goto LABEL_16;
    }
    else
    {
      v69 = *(_QWORD *)((v68 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v69 >= v66)
      {
LABEL_16:
        sub_1002006EC(v67, v69);
        swift_endAccess(v87);
        swift_release(v64);
        swift_release(v65);
LABEL_17:
        v64 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_etaSubscription];
        if (!v64)
          goto LABEL_21;
        v65 = *(uint64_t **)(*((_QWORD *)v0 + 2) + 32);
        swift_beginAccess(v65 + 2, v87, 33, 0);
        swift_retain(v64);
        swift_retain(v65);
        v70 = sub_100335778(v65 + 2, v64);
        v67 = v70;
        v68 = v65[2];
        if (!((unint64_t)v68 >> 62))
        {
          v71 = *(_QWORD *)((v68 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v71 >= v70)
          {
LABEL_20:
            sub_10020185C(v67, v71);
            swift_endAccess(v87);
            swift_release(v64);
            swift_release(v65);
LABEL_21:
            v64 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_locationSubscription];
            if (!v64)
              goto LABEL_25;
            v72 = *(char **)(*((_QWORD *)v0 + 2) + 40);
            v73 = (uint64_t *)&v72[OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions];
            swift_beginAccess(&v72[OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions], v87, 33, 0);
            swift_retain(v64);
            v65 = v72;
            v74 = sub_10033579C(v73, v64);
            v67 = v74;
            v68 = *v73;
            if (!((unint64_t)*v73 >> 62))
            {
              v75 = *(_QWORD *)((v68 & 0xFFFFFFFFFFFFF8) + 0x10);
              if (v75 >= v74)
              {
LABEL_24:
                sub_1002006F8(v67, v75);
                swift_endAccess(v87);
                swift_release(v64);

LABEL_25:
                v64 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectionSubscription];
                if (!v64)
                  goto LABEL_29;
                v65 = *(uint64_t **)(*((_QWORD *)v1 + 2) + 56);
                swift_beginAccess(v65 + 2, v87, 33, 0);
                swift_retain(v64);
                swift_retain(v65);
                v76 = sub_100334CE8(v65 + 2, v64);
                v67 = v76;
                v68 = v65[2];
                if (!((unint64_t)v68 >> 62))
                {
                  v77 = *(_QWORD *)((v68 & 0xFFFFFFFFFFFFF8) + 0x10);
                  if (v77 >= v76)
                  {
LABEL_28:
                    sub_100200704(v67, v77);
                    swift_endAccess(v87);
                    swift_release(v64);
                    swift_release(v65);
LABEL_29:
                    v64 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_conditionSubscription];
                    if (!v64)
                      return;
                    v78 = *(char **)(*((_QWORD *)v1 + 2) + 16);
                    v79 = (uint64_t *)&v78[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions];
                    swift_beginAccess(&v78[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions], v87, 33, 0);
                    swift_retain(v64);
                    v1 = v78;
                    v80 = sub_10005D558(v79, v64);
                    v63 = v80;
                    v67 = *v79;
                    if (!((unint64_t)*v79 >> 62))
                    {
                      v81 = *(_QWORD *)((v67 & 0xFFFFFFFFFFFFF8) + 0x10);
                      if (v81 >= v80)
                      {
LABEL_32:
                        sub_10005D32C(v63, v81);
                        swift_endAccess(v87);
                        swift_release(v64);

                        return;
                      }
LABEL_58:
                      __break(1u);
                      return;
                    }
LABEL_54:
                    if (v67 < 0)
                      v86 = v67;
                    else
                      v86 = v67 & 0xFFFFFFFFFFFFFF8;
                    swift_bridgeObjectRetain(v67);
                    v81 = _CocoaArrayWrapper.endIndex.getter(v86);
                    swift_bridgeObjectRelease(v67);
                    if (v81 >= v63)
                      goto LABEL_32;
                    goto LABEL_58;
                  }
LABEL_53:
                  __break(1u);
                  goto LABEL_54;
                }
LABEL_49:
                if (v68 < 0)
                  v85 = v68;
                else
                  v85 = v68 & 0xFFFFFFFFFFFFFF8;
                swift_bridgeObjectRetain(v68);
                v77 = _CocoaArrayWrapper.endIndex.getter(v85);
                swift_bridgeObjectRelease(v68);
                if (v77 >= v67)
                  goto LABEL_28;
                goto LABEL_53;
              }
LABEL_48:
              __break(1u);
              goto LABEL_49;
            }
LABEL_44:
            if (v68 < 0)
              v84 = v68;
            else
              v84 = v68 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v68);
            v75 = _CocoaArrayWrapper.endIndex.getter(v84);
            swift_bridgeObjectRelease(v68);
            if (v75 >= v67)
              goto LABEL_24;
            goto LABEL_48;
          }
LABEL_43:
          __break(1u);
          goto LABEL_44;
        }
LABEL_39:
        if (v68 < 0)
          v83 = v68;
        else
          v83 = v68 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v68);
        v71 = _CocoaArrayWrapper.endIndex.getter(v83);
        swift_bridgeObjectRelease(v68);
        if (v71 >= v67)
          goto LABEL_20;
        goto LABEL_43;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
  v2 = (_QWORD *)*((_QWORD *)v0 + 2);
  v3 = v2[3];
  v4 = type metadata accessor for FMDevicesSubscription(0);
  v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v6 = v5 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
  *(_QWORD *)(v6 + 8) = 0;
  swift_unknownObjectWeakInit(v6);
  swift_retain(v3);
  v7 = swift_retain(v0);
  UUID.init()(v7);
  v8 = v5 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
  *(_QWORD *)(v8 + 8) = &off_100566040;
  swift_unknownObjectWeakAssign(v8, v0);
  swift_release(v0);
  swift_beginAccess(v3 + 16, v87, 33, 0);
  v9 = swift_retain(v5);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v9);
  v11 = *(_QWORD *)((*(_QWORD *)(v3 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v10 = *(_QWORD *)((*(_QWORD *)(v3 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v11 >= v10 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v10 > 1, v11 + 1, 1);
  v12 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v5);
  specialized Array._endMutation()(v12);
  swift_endAccess(v87);
  swift_release(v3);
  v13 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceSubscription];
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceSubscription] = v5;
  swift_release(v13);
  v14 = v2[4];
  v15 = type metadata accessor for FMETASubscription(0);
  v16 = swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  v17 = v16 + OBJC_IVAR____TtC6FindMy17FMETASubscription_subscriber;
  *(_QWORD *)(v17 + 8) = 0;
  swift_unknownObjectWeakInit(v17);
  swift_retain(v0);
  v18 = swift_retain(v14);
  UUID.init()(v18);
  v19 = v16 + OBJC_IVAR____TtC6FindMy17FMETASubscription_subscriber;
  *(_QWORD *)(v19 + 8) = &off_100566030;
  swift_unknownObjectWeakAssign(v19, v0);
  swift_release(v0);
  swift_beginAccess(v14 + 16, v87, 33, 0);
  v20 = swift_retain(v16);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
  v22 = *(_QWORD *)((*(_QWORD *)(v14 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v21 = *(_QWORD *)((*(_QWORD *)(v14 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v22 >= v21 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
  v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v16);
  specialized Array._endMutation()(v23);
  swift_endAccess(v87);
  swift_release(v14);
  v24 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_etaSubscription];
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_etaSubscription] = v16;
  swift_release(v24);
  v25 = (void *)v2[5];
  v26 = type metadata accessor for FMLocationSubscription(0);
  v27 = swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
  v28 = v27 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber;
  *(_QWORD *)(v28 + 8) = 0;
  swift_unknownObjectWeakInit(v28);
  swift_retain(v0);
  v29 = v25;
  UUID.init()(v29);
  v30 = v27 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber;
  *(_QWORD *)(v30 + 8) = &off_100565FF0;
  swift_unknownObjectWeakAssign(v30, v0);
  swift_release(v0);
  v31 = &v29[OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions];
  swift_beginAccess(&v29[OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions], v87, 33, 0);
  v32 = swift_retain(v27);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v32);
  v34 = *(_QWORD *)((*(_QWORD *)v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v33 = *(_QWORD *)((*(_QWORD *)v31 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v34 >= v33 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v33 > 1, v34 + 1, 1);
  v35 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v34, v27);
  specialized Array._endMutation()(v35);
  swift_endAccess(v87);

  v36 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_locationSubscription];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_locationSubscription] = v27;
  swift_release(v36);
  v37 = v2[7];
  v38 = type metadata accessor for FMSelectionSubscription(0);
  v39 = swift_allocObject(v38, *(unsigned int *)(v38 + 48), *(unsigned __int16 *)(v38 + 52));
  v40 = v39 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
  *(_QWORD *)(v40 + 8) = 0;
  swift_unknownObjectWeakInit(v40);
  swift_retain(v1);
  v41 = swift_retain(v37);
  UUID.init()(v41);
  v42 = v39 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
  *(_QWORD *)(v42 + 8) = &off_100565FC8;
  swift_unknownObjectWeakAssign(v42, v1);
  swift_release(v1);
  swift_beginAccess(v37 + 16, v87, 33, 0);
  v43 = swift_retain(v39);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v43);
  v45 = *(_QWORD *)((*(_QWORD *)(v37 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v44 = *(_QWORD *)((*(_QWORD *)(v37 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v45 >= v44 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v44 > 1, v45 + 1, 1);
  v46 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v45, v39);
  specialized Array._endMutation()(v46);
  swift_endAccess(v87);
  swift_release(v37);
  v47 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectionSubscription];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectionSubscription] = v39;
  swift_release(v47);
  v48 = (void *)v2[2];
  v49 = type metadata accessor for FMConditionSubscription(0);
  v50 = swift_allocObject(v49, *(unsigned int *)(v49 + 48), *(unsigned __int16 *)(v49 + 52));
  v51 = v50 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber;
  *(_QWORD *)(v51 + 8) = 0;
  swift_unknownObjectWeakInit(v51);
  swift_retain(v1);
  v52 = v48;
  UUID.init()(v52);
  v53 = v50 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber;
  *(_QWORD *)(v53 + 8) = &off_100565F48;
  swift_unknownObjectWeakAssign(v53, v1);
  swift_release(v1);
  v54 = &v52[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions];
  swift_beginAccess(&v52[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions], v87, 33, 0);
  v55 = swift_retain(v50);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v55);
  v57 = *(_QWORD *)((*(_QWORD *)v54 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v56 = *(_QWORD *)((*(_QWORD *)v54 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v57 >= v56 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v56 > 1, v57 + 1, 1);
  v58 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v57, v50);
  specialized Array._endMutation()(v58);
  swift_endAccess(v87);

  v59 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_conditionSubscription];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_conditionSubscription] = v50;
  swift_release(v59);
  v60 = v2[3];
  v61 = swift_retain(v60);
  v62 = FMIPManager.devices.getter(v61);
  swift_release(v60);
  sub_1004244A4(v62);
  swift_bridgeObjectRelease(v62);
}

uint64_t sub_100423AD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  _BYTE v17[24];

  v2 = v1;
  v4 = type metadata accessor for FMDeviceDetailViewModel(0);
  __chkstk_darwin(v4);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = v1 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
  swift_beginAccess(v7, v17, 33, 0);
  sub_1000DF900(a1, v7, type metadata accessor for FMDeviceDetailViewModel);
  swift_endAccess(v17);
  Strong = swift_unknownObjectWeakLoadStrong(v2 + 24);
  if (Strong)
  {
    v9 = Strong;
    sub_10004FC74(v7, (uint64_t)v6, type metadata accessor for FMDeviceDetailViewModel);
    if (*(_BYTE *)(v2 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_updatesEnabled) == 1)
    {
      sub_10019D3D0((uint64_t)v6);
      v10 = v9 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_delegate;
      v11 = swift_unknownObjectWeakLoadStrong(v9 + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_delegate);
      if (v11)
      {
        v12 = v11;
        v13 = *(_QWORD *)(v10 + 8);
        ObjectType = swift_getObjectType(v11);
        (*(void (**)(uint64_t, _BYTE *, uint64_t, uint64_t))(v13 + 8))(v2, v6, ObjectType, v13);
        swift_unknownObjectRelease(v9);
        v9 = v12;
      }
    }
    swift_unknownObjectRelease(v9);
    sub_10004FCB8((uint64_t)v6, type metadata accessor for FMDeviceDetailViewModel);
  }
  return sub_10004FCB8(a1, type metadata accessor for FMDeviceDetailViewModel);
}

uint64_t sub_100423C34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  void (*v43)(uint64_t, char *, uint64_t);
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t result;
  Swift::String v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  _QWORD *v60;
  uint64_t v61;
  unint64_t v62;
  _QWORD v63[3];

  v2 = v1;
  v55 = a1;
  v3 = type metadata accessor for FMDeviceDetailViewModel(0);
  __chkstk_darwin(v3);
  v60 = (uint64_t *)((char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for FMIPDevice(0);
  v57 = *(_QWORD *)(v5 - 8);
  v58 = v5;
  v6 = __chkstk_darwin(v5);
  v59 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v56 = (char *)&v50 - v8;
  v54 = type metadata accessor for FMSelectedSection(0);
  v9 = __chkstk_darwin(v54);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v53 = (char *)&v50 - v12;
  v13 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v51 = *(_QWORD *)(v13 - 8);
  v52 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v16);
  v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v19);
  v21 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + 32) = 0;
  swift_unknownObjectWeakInit(v1 + 24);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceSubscription) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_etaSubscription) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_locationSubscription) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectionSubscription) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_conditionSubscription) = 0;
  v22 = OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_itemAger;
  v23 = type metadata accessor for FMItemAger();
  swift_allocObject(v23, 40, 7);
  *(_QWORD *)(v1 + v22) = sub_1000465C0();
  v50 = OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_updateQueue;
  sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  static DispatchQoS.userInitiated.getter();
  v63[0] = _swiftEmptyArrayStorage;
  v24 = sub_100008000((unint64_t *)&unk_1005D3970, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v25 = sub_100053F2C((uint64_t *)&unk_1005D20F0);
  v26 = sub_10003F734((unint64_t *)&unk_1005D3980, (uint64_t *)&unk_1005D20F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(v63, v25, v26, v16, v24);
  (*(void (**)(char *, _QWORD, uint64_t))(v51 + 104))(v15, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v52);
  v27 = v21;
  v28 = v15;
  v29 = v54;
  v30 = v55;
  v31 = (uint64_t)v53;
  v32 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000027, 0x80000001004C6340, v27, v18, v28, 0);
  *(_QWORD *)(v1 + v50) = v32;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_updatesEnabled) = 0;
  v33 = *(_QWORD *)(v30 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v33, v63, 0, 0);
  sub_10004FC74(v33, v31, type metadata accessor for FMSelectedSection);
  sub_10004FC74(v31, (uint64_t)v11, type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload(v11, v29))
  {
    sub_10004FCB8((uint64_t)v11, type metadata accessor for FMSelectedSection);
    v61 = 0;
    v62 = 0xE000000000000000;
    _StringGuts.grow(_:)(88);
    v49._countAndFlagsBits = 0xD000000000000056;
    v49._object = (void *)0x80000001004C63A0;
    String.append(_:)(v49);
    _print_unlocked<A, B>(_:_:)(v31, &v61, v29, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v61, v62, "FindMy/FMDeviceDetailDataSource.swift", 37, 2, 92, 0);
    __break(1u);
  }
  else
  {
    v34 = (uint64_t)&v11[*(int *)(sub_100053F2C(&qword_1005DE9B0) + 48)];
    v36 = v56;
    v35 = v57;
    v37 = v58;
    (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v56, v11, v58);
    sub_1000051EC(v34, (uint64_t *)&unk_1005D3AA0);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v38 = type metadata accessor for Logger(0);
    v39 = sub_100056D88(v38, (uint64_t)qword_1005F5748);
    v40 = Logger.logObject.getter(v39);
    v41 = static os_log_type_t.default.getter(v40);
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v42 = 0;
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "FMDeviceDetailDataSource: initialized", v42, 2u);
      swift_slowDealloc(v42, -1, -1);
    }

    v43 = *(void (**)(uint64_t, char *, uint64_t))(v35 + 16);
    v43(v2 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice, v36, v37);
    *(_QWORD *)(v2 + 16) = v30;
    v44 = (uint64_t)v59;
    v43((uint64_t)v59, v36, v37);
    v45 = (_QWORD *)swift_retain(v30);
    v46 = v60;
    sub_1003E80BC(v45, v44, 0, 0, 0.0, 0.0, v60);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v37);
    sub_10004FCB8(v31, type metadata accessor for FMSelectedSection);
    sub_1004261A0((uint64_t)v46, v2 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel);
    v47 = *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_itemAger);
    *(_QWORD *)(v47 + 24) = &off_100566020;
    swift_unknownObjectWeakAssign(v47 + 16, v2);
    return v2;
  }
  return result;
}

uint64_t sub_100424240(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = sub_100053F2C(&qword_1005D2C20);
  v4 = type metadata accessor for FMIPDevice(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = swift_allocObject(v3, v7 + *(_QWORD *)(v5 + 72), v6 | 7);
  *(_OWORD *)(v8 + 16) = xmmword_100481740;
  v9 = v8 + v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v9, a2, v4);
  sub_1004244A4(v8);
  swift_setDeallocating(v8);
  swift_arrayDestroy(v9, *(_QWORD *)(v8 + 16), v4);
  return swift_deallocClassInstance(v8, 32, 7);
}

double sub_100424304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  double result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[24];

  v6 = type metadata accessor for FMIPDevice(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = a3 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
  v11 = swift_beginAccess(a3 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice, v23, 0, 0);
  v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16))(v9, v10, v6, v11);
  v13 = FMIPDevice.identifier.getter(v12);
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v13 == a1 && v15 == a2)
  {
    swift_bridgeObjectRelease(a2);
    goto LABEL_8;
  }
  v17 = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, v13, v15, 0);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v15).n128_u64[0];
  if ((v17 & 1) != 0)
  {
LABEL_8:
    v19 = *(_QWORD *)(*(_QWORD *)(a3 + 16) + 24);
    v20 = swift_retain(v19);
    v21 = FMIPManager.devices.getter(v20);
    swift_release(v19);
    sub_1004244A4(v21);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v21).n128_u64[0];
  }
  return result;
}

double sub_10042444C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 24);
  v2 = swift_retain(v1);
  v3 = FMIPManager.devices.getter(v2);
  swift_release(v1);
  sub_1004244A4(v3);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v3).n128_u64[0];
  return result;
}

void sub_1004244A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  char *v32;
  uint64_t (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void (*v45)(char *, uint64_t);
  char v46;
  __n128 v47;
  uint64_t v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  void (**v57)(char *, char *, uint64_t);
  void (*v58)(char *, char *, uint64_t);
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t (*v62)(char *, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t (*v77)(char *, uint64_t, uint64_t);
  void *v78;
  id v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  __n128 v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t (*v115)(char *, uint64_t, uint64_t);
  uint64_t v116;
  char *v117;
  char *v118;
  _QWORD aBlock[5];
  uint64_t v120;
  _QWORD v121[3];
  char v122[16];

  v2 = v1;
  v4 = type metadata accessor for FMSelectedSection(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v98 - v8;
  v10 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  __chkstk_darwin(v10);
  v112 = (uint64_t)&v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchWorkItemFlags(0);
  v110 = *(_QWORD *)(v12 - 8);
  v111 = v12;
  __chkstk_darwin(v12);
  v109 = (char *)&v98 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for DispatchQoS(0);
  v107 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v106 = (char *)&v98 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v15);
  v17 = (char *)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for FMIPDevice(0);
  v19 = *(char **)(v18 - 8);
  v20 = *((_QWORD *)v19 + 8);
  v21 = __chkstk_darwin(v18);
  v105 = (char *)&v98 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v21);
  v117 = (char *)&v98 - v23;
  v24 = __chkstk_darwin(v22);
  v118 = (char *)&v98 - v25;
  __chkstk_darwin(v24);
  v113 = (char *)&v98 - v26;
  v27 = *(_QWORD *)(a1 + 16);
  if (v27)
  {
    v98 = v17;
    v99 = v20;
    v101 = v4;
    v102 = v9;
    v103 = v7;
    v28 = a1 + ((v19[80] + 32) & ~(unint64_t)v19[80]);
    v104 = v2;
    v29 = v2 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
    v100 = a1;
    swift_bridgeObjectRetain(a1);
    v116 = v29;
    v30 = swift_beginAccess(v29, v122, 0, 0);
    v31 = (uint64_t (*)(char *, uint64_t, uint64_t))*((_QWORD *)v19 + 2);
    v114 = *((_QWORD *)v19 + 9);
    v115 = v31;
    v32 = v118;
    while (1)
    {
      v33 = v115;
      v34 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v115)(v32, v28, v18, v30);
      v35 = v18;
      v36 = FMIPDevice.identifier.getter(v34);
      v38 = v37;
      v39 = v117;
      v40 = v33(v117, v116, v18);
      v41 = FMIPDevice.identifier.getter(v40);
      v43 = v42;
      v44 = v19;
      v45 = (void (*)(char *, uint64_t))*((_QWORD *)v19 + 1);
      v45(v39, v35);
      if (v36 == v41 && v38 == v43)
        break;
      v46 = _stringCompareWithSmolCheck(_:_:expecting:)(v36, v38, v41, v43, 0);
      swift_bridgeObjectRelease(v43);
      v47 = swift_bridgeObjectRelease(v38);
      if ((v46 & 1) != 0)
        goto LABEL_10;
      v32 = v118;
      v18 = v35;
      ((void (*)(char *, uint64_t, __n128))v45)(v118, v35, v47);
      v28 += v114;
      --v27;
      v19 = v44;
      if (!v27)
      {
        v48 = 1;
        v2 = v104;
        v7 = v103;
        v9 = v102;
        v4 = v101;
        a1 = v100;
        v20 = v99;
        v17 = v98;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease_n(v38, 2);
LABEL_10:
    v19 = v44;
    v17 = v98;
    v18 = v35;
    (*((void (**)(char *, char *, uint64_t, __n128))v44 + 4))(v98, v118, v35, v47);
    v48 = 0;
    v2 = v104;
    v7 = v103;
    v9 = v102;
    v4 = v101;
    a1 = v100;
    v20 = v99;
  }
  else
  {
    swift_bridgeObjectRetain(a1);
    v48 = 1;
  }
LABEL_11:
  (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v19 + 7))(v17, v48, 1, v18);
  v49 = swift_bridgeObjectRelease(a1);
  if ((*((unsigned int (**)(char *, uint64_t, uint64_t, __n128))v19 + 6))(v17, 1, v18, v49) == 1)
  {
    sub_1000051EC((uint64_t)v17, &qword_1005D6710);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v50 = type metadata accessor for Logger(0);
    v51 = sub_100056D88(v50, (uint64_t)qword_1005F5748);
    v52 = Logger.logObject.getter(v51);
    v53 = static os_log_type_t.default.getter(v52);
    if (os_log_type_enabled(v52, v53))
    {
      v54 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v54 = 0;
      _os_log_impl((void *)&_mh_execute_header, v52, v53, "FMDeviceDetailDataSource: device doesn't exist anymore. Going back to list", v54, 2u);
      swift_slowDealloc(v54, -1, -1);
    }

    v55 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 56);
    swift_storeEnumTagMultiPayload(v9, v4, 11);
    v56 = v55 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
    swift_beginAccess(v55 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, aBlock, 0, 0);
    sub_10004FC74(v56, (uint64_t)v7, type metadata accessor for FMSelectedSection);
    swift_beginAccess(v56, v121, 33, 0);
    swift_retain(v55);
    sub_1000DF900((uint64_t)v9, v56, type metadata accessor for FMSelectedSection);
    swift_endAccess(v121);
    sub_10004C8A4((uint64_t)v7);
    sub_10004FCB8((uint64_t)v9, type metadata accessor for FMSelectedSection);
    sub_10004FCB8((uint64_t)v7, type metadata accessor for FMSelectedSection);
    swift_release(v55);
  }
  else
  {
    v57 = (void (**)(char *, char *, uint64_t))v19;
    v58 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v19 + 4);
    v59 = v113;
    v58(v113, v17, v18);
    v60 = v18;
    v61 = sub_100425294();
    v115 = v62;
    v116 = v61;
    v114 = v63;
    v64 = v2;
    v66 = v65;
    v67 = *(void **)(*(_QWORD *)(*(_QWORD *)(v64 + 16) + 40)
                   + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
    v117 = *(char **)(v64 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_updateQueue);
    v68 = v105;
    v57[2](v105, v59, v60);
    v118 = (char *)v57;
    v69 = *((unsigned __int8 *)v57 + 80);
    v70 = (v69 + 24) & ~v69;
    v71 = (v20 + v70 + 7) & 0xFFFFFFFFFFFFFFF8;
    v72 = (v71 + 15) & 0xFFFFFFFFFFFFFFF8;
    v73 = swift_allocObject(&unk_100566270, v72 + 32, v69 | 7);
    *(_QWORD *)(v73 + 16) = v64;
    v74 = v73 + v70;
    v75 = v60;
    v58((char *)v74, v68, v60);
    *(_QWORD *)(v73 + v71) = v67;
    v76 = (uint64_t *)(v73 + v72);
    v77 = v115;
    *v76 = v116;
    v76[1] = (uint64_t)v77;
    v76[2] = v114;
    v76[3] = v66;
    aBlock[4] = sub_100427274;
    v120 = v73;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100037DF8;
    aBlock[3] = &unk_100566288;
    v78 = _Block_copy(aBlock);
    v79 = v67;
    v80 = swift_retain(v64);
    v81 = v106;
    static DispatchQoS.unspecified.getter(v80);
    v121[0] = _swiftEmptyArrayStorage;
    v82 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v83 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
    v84 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
    v85 = v109;
    v86 = v111;
    dispatch thunk of SetAlgebra.init<A>(_:)(v121, v83, v84, v111, v82);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v81, v85, v78);
    _Block_release(v78);
    (*(void (**)(char *, uint64_t))(v110 + 8))(v85, v86);
    (*(void (**)(char *, uint64_t))(v107 + 8))(v81, v108);
    swift_release(v120);
    v87 = v64 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel;
    swift_beginAccess(v64 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel, aBlock, 0, 0);
    v88 = type metadata accessor for FMDeviceDetailViewModel(0);
    v89 = v112;
    sub_1000E5B2C(v87 + *(int *)(v88 + 36), v112);
    v90 = type metadata accessor for FMIPItem(0);
    v91 = *(_QWORD *)(v90 - 8);
    v92 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v89, 1, v90);
    if ((_DWORD)v92 == 1)
    {
      sub_1000051EC(v89, (uint64_t *)&unk_1005D3AA0);
      v93 = 0;
      v94 = 0;
    }
    else
    {
      v93 = FMIPItem.identifier.getter(v92);
      v94 = v95;
      (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v89, v90);
    }
    v96 = v113;
    static FMIPAnalytics.sendDeviceEvent(device:primaryPartIdentifier:)(v113, v93, v94);

    v97 = swift_bridgeObjectRelease(v94);
    (*((void (**)(char *, uint64_t, __n128))v118 + 1))(v96, v75, v97);
  }
}

uint64_t sub_100424D94(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void *v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  double v56;
  double v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD aBlock[5];
  uint64_t v68;

  v56 = *(double *)&a6;
  v57 = *(double *)&a7;
  v50 = a5;
  v55 = a4;
  v53 = a2;
  v63 = type metadata accessor for DispatchWorkItemFlags(0);
  v66 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v62 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v64 = *(_QWORD *)(v11 - 8);
  v65 = v11;
  __chkstk_darwin(v11);
  v61 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FMIPDevice(0);
  v14 = *(_QWORD *)(v13 - 8);
  v51 = v13;
  v60 = *(_QWORD *)(v14 + 64);
  __chkstk_darwin(v13);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for FMDeviceDetailViewModel(0);
  v58 = *(_QWORD *)(v17 - 8);
  v18 = *(_QWORD *)(v58 + 64);
  v19 = __chkstk_darwin(v17);
  v54 = (uint64_t)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v21 = (void **)((char *)&v50 - v20);
  v22 = *(_QWORD **)(a1 + 16);
  v52 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v52(v16, a2, v13);
  v23 = v50;
  swift_bridgeObjectRetain(v50);
  swift_retain(v22);
  v24 = a3;
  v25 = (uint64_t)v21;
  sub_1003E80BC(v22, (uint64_t)v16, a3, v23, v56, v57, v21);
  v26 = sub_100053F2C(&qword_1005D55E8);
  v27 = swift_allocObject(v26, 72, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100481740;
  *(_QWORD *)(v27 + 56) = v17;
  *(_QWORD *)(v27 + 64) = &off_100561BC8;
  v28 = sub_10003D370((_QWORD *)(v27 + 32));
  v59 = v25;
  sub_10004FC74(v25, (uint64_t)v28, type metadata accessor for FMDeviceDetailViewModel);
  sub_100054D40(v27);
  swift_bridgeObjectRelease(v27);
  v29 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v30 = (void *)static OS_dispatch_queue.main.getter(v29);
  v31 = v25;
  v32 = v54;
  sub_10004FC74(v31, v54, type metadata accessor for FMDeviceDetailViewModel);
  v33 = v51;
  v52(v16, v53, v51);
  v34 = *(unsigned __int8 *)(v58 + 80);
  v35 = (v34 + 24) & ~v34;
  v36 = *(unsigned __int8 *)(v14 + 80);
  v37 = (v18 + v36 + v35) & ~v36;
  v38 = swift_allocObject(&unk_1005662C0, v37 + v60, v34 | v36 | 7);
  *(_QWORD *)(v38 + 16) = a1;
  sub_1004261A0(v32, v38 + v35);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v38 + v37, v16, v33);
  aBlock[4] = sub_1004274C8;
  v68 = v38;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_1005662D8;
  v39 = _Block_copy(aBlock);
  v40 = v68;
  swift_retain(a1);
  swift_release(v40);
  v41 = v61;
  static DispatchQoS.unspecified.getter(v42);
  aBlock[0] = _swiftEmptyArrayStorage;
  v43 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v44 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v45 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  v46 = v62;
  v47 = v44;
  v48 = v63;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v47, v45, v63, v43);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v41, v46, v39);
  _Block_release(v39);

  (*(void (**)(char *, uint64_t))(v66 + 8))(v46, v48);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v41, v65);
  return sub_10004FCB8(v59, type metadata accessor for FMDeviceDetailViewModel);
}

uint64_t sub_1004251C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  _BYTE v14[24];

  v6 = type metadata accessor for FMDeviceDetailViewModel(0);
  __chkstk_darwin(v6);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10004FC74(a2, (uint64_t)v8, v9);
  sub_100423AD0((uint64_t)v8);
  v10 = a1 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
  swift_beginAccess(a1 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice, v14, 33, 0);
  v11 = type metadata accessor for FMIPDevice(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v10, a3, v11);
  return swift_endAccess(v14);
}

uint64_t sub_100425294()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v1 = sub_100053F2C((uint64_t *)&unk_1005D6700);
  __chkstk_darwin(v1);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + 16);
  v5 = *(void **)(*(_QWORD *)(v4 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
  if (v5)
  {
    v6 = v5;
    FMIPDevice.bestLocation.getter(v6);
    v7 = type metadata accessor for FMIPLocation(0);
    v8 = *(_QWORD *)(v7 - 8);
    v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v3, 1, v7);
    if ((_DWORD)v9 != 1)
    {
      v11 = (void *)FMIPLocation.location.getter(v9);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v3, v7);
      v12 = *(_QWORD *)(v4 + 32);
      v13 = swift_retain(v12);
      v14 = FMIPDevice.identifier.getter(v13);
      v16 = v15;
      sub_1001E257C(v6, v11, v14, v15);
      v10 = v17;

      swift_release(v12);
      swift_bridgeObjectRelease(v16);
      return v10;
    }

    sub_1000051EC((uint64_t)v3, (uint64_t *)&unk_1005D6700);
  }
  return 0;
}

uint64_t sub_10042540C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release(*(_QWORD *)(v0 + 16));
  sub_10005E190(v0 + 24);
  v1 = v0 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
  v2 = type metadata accessor for FMIPDevice(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceSubscription));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_etaSubscription));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_locationSubscription));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectionSubscription));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_conditionSubscription));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_itemAger));

  sub_10004FCB8(v0 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_deviceViewModel, type metadata accessor for FMDeviceDetailViewModel);
  return v0;
}

uint64_t sub_1004254E8()
{
  uint64_t v0;

  sub_10042540C();
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10042550C()
{
  return type metadata accessor for FMDeviceDetailDataSource(0);
}

uint64_t type metadata accessor for FMDeviceDetailDataSource(uint64_t a1)
{
  uint64_t result;

  result = qword_1005E4578;
  if (!qword_1005E4578)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMDeviceDetailDataSource);
  return result;
}

uint64_t sub_100425550(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[12];

  v5[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  v5[1] = &unk_100490D20;
  result = type metadata accessor for FMIPDevice(319);
  if (v3 <= 0x3F)
  {
    v5[2] = *(_QWORD *)(result - 8) + 64;
    v5[3] = &unk_100490D38;
    v5[4] = &unk_100490D38;
    v5[5] = &unk_100490D38;
    v5[6] = &unk_100490D38;
    v5[7] = &unk_100490D38;
    v5[8] = (char *)&value witness table for Builtin.NativeObject + 64;
    v5[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v5[10] = &unk_100490D50;
    result = type metadata accessor for FMDeviceDetailViewModel(319);
    if (v4 <= 0x3F)
    {
      v5[11] = *(_QWORD *)(result - 8) + 64;
      return swift_updateClassMetadata2(a1, 256, 12, v5, a1 + 80);
    }
  }
  return result;
}

uint64_t sub_100425618(uint64_t a1, uint64_t a2)
{
  return sub_100425A58(a2);
}

uint64_t sub_100425620(uint64_t a1, uint64_t a2)
{
  return sub_100425D68(a2);
}

uint64_t sub_100425628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100426534(a4, a5);
}

uint64_t sub_100425634(uint64_t a1, uint64_t a2)
{
  return sub_1004262D8(a2);
}

uint64_t sub_10042563C(uint64_t a1, uint64_t a2)
{
  return sub_100426E28(a2);
}

void sub_100425644(uint64_t a1, uint64_t a2)
{
  sub_10042565C(a2);
}

uint64_t sub_10042564C(uint64_t a1, char a2)
{
  return sub_100426790(a2);
}

uint64_t sub_100425654(uint64_t a1, char a2)
{
  return sub_100426ADC(a2);
}

void sub_10042565C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint8_t *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;

  v2 = type metadata accessor for FMIPDevice(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FMSelectedSection(0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v38 - v10;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v12 = type metadata accessor for Logger(0);
  v13 = sub_100056D88(v12, (uint64_t)qword_1005F5748);
  v14 = sub_10004FC74(a1, (uint64_t)v11, type metadata accessor for FMSelectedSection);
  v43 = v13;
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v40 = v5;
    v17 = swift_slowAlloc(12, -1);
    v41 = v2;
    v18 = (uint8_t *)v17;
    v19 = swift_slowAlloc(32, -1);
    v39 = a1;
    v20 = v19;
    *(_DWORD *)v18 = 136315138;
    v44 = v19;
    v45 = 0;
    v38 = v18 + 4;
    v46 = 0xE000000000000000;
    _print_unlocked<A, B>(_:_:)(v11, &v45, v6, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v21 = v3;
    v22 = v46;
    v45 = sub_100056DA0(v45, v46, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46);
    v23 = v22;
    v3 = v21;
    v5 = v40;
    swift_bridgeObjectRelease(v23);
    sub_10004FCB8((uint64_t)v11, type metadata accessor for FMSelectedSection);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "FMDeviceDetailDataSource: didUpdate selectedSection %s", v18, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    v24 = v20;
    a1 = v39;
    swift_slowDealloc(v24, -1, -1);
    v25 = v18;
    v2 = v41;
    swift_slowDealloc(v25, -1, -1);
  }
  else
  {
    sub_10004FCB8((uint64_t)v11, type metadata accessor for FMSelectedSection);
  }

  sub_10004FC74(a1, (uint64_t)v9, type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload(v9, v6))
  {
    v26 = sub_10004FCB8((uint64_t)v9, type metadata accessor for FMSelectedSection);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.default.getter(v27);
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "FMDeviceDetailDataSource: not updating selection...", v29, 2u);
      swift_slowDealloc(v29, -1, -1);
    }

  }
  else
  {
    v30 = (uint64_t)&v9[*(int *)(sub_100053F2C(&qword_1005DE9B0) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
    sub_1000051EC(v30, (uint64_t *)&unk_1005D3AA0);
    v31 = v42;
    v32 = v42 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
    v33 = swift_beginAccess(v42 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice, &v45, 33, 0);
    (*(void (**)(uint64_t, char *, uint64_t, __n128))(v3 + 24))(v32, v5, v2, v33);
    swift_endAccess(&v45);
    v34 = *(_QWORD *)(*(_QWORD *)(v31 + 16) + 24);
    v35 = swift_retain(v34);
    v36 = FMIPManager.devices.getter(v35);
    swift_release(v34);
    sub_1004244A4(v36);
    v37 = swift_bridgeObjectRelease(v36);
    (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v37);
  }
}

uint64_t sub_100425A58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  void **aBlock;
  _QWORD v29[4];
  uint64_t v30;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v27 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v11 = type metadata accessor for Logger(0);
  sub_100056D88(v11, (uint64_t)qword_1005F5748);
  swift_bridgeObjectRetain(a1);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v15 = 134217984;
    aBlock = *(void ***)(a1 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v29);
    swift_bridgeObjectRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "FMDeviceDetailDataSource: didUpdate %ld devices", v15, 0xCu);
    swift_slowDealloc(v15, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease(a1);
  }
  v16 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v17 = (void *)static OS_dispatch_queue.main.getter(v16);
  v18 = swift_allocObject(&unk_100566158, 32, 7);
  *(_QWORD *)(v18 + 16) = v2;
  *(_QWORD *)(v18 + 24) = a1;
  v29[3] = sub_1004262B4;
  v30 = v18;
  aBlock = _NSConcreteStackBlock;
  v29[0] = 1107296256;
  v29[1] = sub_100037DF8;
  v29[2] = &unk_100566170;
  v19 = _Block_copy(&aBlock);
  v20 = v30;
  swift_bridgeObjectRetain(a1);
  swift_retain(v2);
  swift_release(v20);
  static DispatchQoS.unspecified.getter(v21);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v22 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v23 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v24 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v23, v24, v4, v22);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v10, v8);
}

uint64_t sub_100425D68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  void *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t aBlock[5];
  uint64_t v58;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v55 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v53 = *(_QWORD *)(v7 - 8);
  v54 = v7;
  __chkstk_darwin(v7);
  v52 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FMIPDevice(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v50 = v12;
  v51 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v14 = (char *)&v45 - v13;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v15 = type metadata accessor for Logger(0);
  sub_100056D88(v15, (uint64_t)qword_1005F5748);
  v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v16 = v49(v14, a1, v9);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter(v17);
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc(12, -1);
    v45 = a1;
    v20 = (uint8_t *)v19;
    v21 = swift_slowAlloc(32, -1);
    v46 = v1;
    v22 = v21;
    aBlock[0] = v21;
    v47 = v5;
    v48 = v4;
    *(_DWORD *)v20 = 136315138;
    v24 = FMIPDevice.debugDescription.getter(v21, v23);
    v26 = v25;
    v56 = sub_100056DA0(v24, v25, aBlock);
    v5 = v47;
    v4 = v48;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, aBlock);
    v27 = swift_bridgeObjectRelease(v26);
    (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v14, v9, v27);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "FMDeviceDetailDataSource: didUpdate %s device", v20, 0xCu);
    swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
    v28 = v22;
    v2 = v46;
    swift_slowDealloc(v28, -1, -1);
    v29 = v20;
    a1 = v45;
    swift_slowDealloc(v29, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
  }

  v30 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v31 = (void *)static OS_dispatch_queue.main.getter(v30);
  v32 = v51;
  v49(v51, a1, v9);
  v33 = *(unsigned __int8 *)(v10 + 80);
  v34 = (v33 + 24) & ~v33;
  v35 = swift_allocObject(&unk_100566108, v34 + v50, v33 | 7);
  *(_QWORD *)(v35 + 16) = v2;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v35 + v34, v32, v9);
  aBlock[4] = (uint64_t)sub_100426258;
  v58 = v35;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100037DF8;
  aBlock[3] = (uint64_t)&unk_100566120;
  v36 = _Block_copy(aBlock);
  v37 = v58;
  swift_retain(v2);
  swift_release(v37);
  v38 = v52;
  static DispatchQoS.unspecified.getter(v39);
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  v40 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v41 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v42 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  v43 = v55;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v41, v42, v4, v40);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v38, v43, v36);
  _Block_release(v36);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v43, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v38, v54);
}

uint64_t sub_1004261A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMDeviceDetailViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004261E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for FMIPDevice(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100426258()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMIPDevice(0) - 8) + 80);
  return sub_100424240(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_100426288()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1004262B4()
{
  uint64_t v0;

  sub_1004244A4(*(_QWORD *)(v0 + 24));
}

uint64_t sub_1004262D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  Class *v9;
  Class isa;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  Class v22;
  uint64_t v23;

  v2 = v1;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v4 = type metadata accessor for Logger(0);
  sub_100056D88(v4, (uint64_t)qword_1005F5748);
  swift_bridgeObjectRetain(a1);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (Class *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    sub_100053F2C((uint64_t *)&unk_1005D6750);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v22 = isa;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v22, &v23);
    *v9 = isa;
    swift_bridgeObjectRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMDeviceDetailDataSource: itemsDidAge %@", v8, 0xCu);
    v11 = sub_100053F2C((uint64_t *)&unk_1005D9680);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease(a1);
  }
  v12 = sub_100053F2C(&qword_1005D2C20);
  v13 = type metadata accessor for FMIPDevice(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = (v15 + 32) & ~v15;
  v17 = swift_allocObject(v12, v16 + *(_QWORD *)(v14 + 72), v15 | 7);
  *(_OWORD *)(v17 + 16) = xmmword_100481740;
  v18 = v17 + v16;
  v19 = v2 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice;
  v20 = swift_beginAccess(v2 + OBJC_IVAR____TtC6FindMy24FMDeviceDetailDataSource_selectedDevice, &v22, 0, 0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v14 + 16))(v18, v19, v13, v20);
  sub_1004244A4(v17);
  swift_setDeallocating(v17);
  swift_arrayDestroy(v18, *(_QWORD *)(v17 + 16), v13);
  return swift_deallocClassInstance(v17, 32, 7);
}

uint64_t sub_100426534(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  _QWORD *v14;
  void *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[5];
  _QWORD *v25;

  v3 = v2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v23 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v13 = (void *)static OS_dispatch_queue.main.getter(v12);
  v14 = (_QWORD *)swift_allocObject(&unk_1005661A8, 40, 7);
  v14[2] = a1;
  v14[3] = a2;
  v14[4] = v2;
  aBlock[4] = sub_100426784;
  v25 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_1005661C0;
  v15 = _Block_copy(aBlock);
  v16 = v25;
  swift_bridgeObjectRetain(a2);
  swift_retain(v3);
  swift_release(v16);
  static DispatchQoS.unspecified.getter(v17);
  aBlock[0] = _swiftEmptyArrayStorage;
  v18 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v19 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v20 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v19, v20, v6, v18);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v22);
}

uint64_t sub_100426758()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_100426784()
{
  uint64_t *v0;

  return sub_100424304(v0[2], v0[3], v0[4]);
}

uint64_t sub_100426790(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t aBlock[5];
  uint64_t v39;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v35 = *(_QWORD *)(v8 - 8);
  v36 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v11 = type metadata accessor for Logger(0);
  v12 = sub_100056D88(v11, (uint64_t)qword_1005F5748);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc(12, -1);
    v33 = v2;
    v16 = (uint8_t *)v15;
    v17 = swift_slowAlloc(32, -1);
    v34 = v5;
    v18 = v17;
    *(_DWORD *)v16 = 136315138;
    aBlock[0] = v17;
    if ((a1 & 1) != 0)
      v19 = 28239;
    else
      v19 = 6710863;
    if ((a1 & 1) != 0)
      v20 = 0xE200000000000000;
    else
      v20 = 0xE300000000000000;
    v37 = sub_100056DA0(v19, v20, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, aBlock);
    swift_bridgeObjectRelease(v20);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "FMDeviceDetailDataSource: Airplane Mode is %s", v16, 0xCu);
    swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
    v21 = v18;
    v5 = v34;
    swift_slowDealloc(v21, -1, -1);
    v22 = v16;
    v2 = v33;
    swift_slowDealloc(v22, -1, -1);
  }

  v23 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v24 = (void *)static OS_dispatch_queue.main.getter(v23);
  aBlock[4] = (uint64_t)sub_1004271B8;
  v39 = v2;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100037DF8;
  aBlock[3] = (uint64_t)&unk_100566238;
  v25 = _Block_copy(aBlock);
  v26 = v39;
  swift_retain(v2);
  swift_release(v26);
  static DispatchQoS.unspecified.getter(v27);
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  v28 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v29 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v30 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v29, v30, v4, v28);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v10, v36);
}

uint64_t sub_100426ADC(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t aBlock[5];
  uint64_t v39;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v35 = *(_QWORD *)(v8 - 8);
  v36 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v11 = type metadata accessor for Logger(0);
  v12 = sub_100056D88(v11, (uint64_t)qword_1005F5748);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc(12, -1);
    v33 = v2;
    v16 = (uint8_t *)v15;
    v17 = swift_slowAlloc(32, -1);
    v34 = v5;
    v18 = v17;
    *(_DWORD *)v16 = 136315138;
    aBlock[0] = v17;
    if ((a1 & 1) != 0)
      v19 = 6710863;
    else
      v19 = 28239;
    if ((a1 & 1) != 0)
      v20 = 0xE300000000000000;
    else
      v20 = 0xE200000000000000;
    v37 = sub_100056DA0(v19, v20, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, aBlock);
    swift_bridgeObjectRelease(v20);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "FMDeviceDetailDataSource: BT is %s", v16, 0xCu);
    swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
    v21 = v18;
    v5 = v34;
    swift_slowDealloc(v21, -1, -1);
    v22 = v16;
    v2 = v33;
    swift_slowDealloc(v22, -1, -1);
  }

  v23 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v24 = (void *)static OS_dispatch_queue.main.getter(v23);
  aBlock[4] = (uint64_t)sub_1004271B8;
  v39 = v2;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100037DF8;
  aBlock[3] = (uint64_t)&unk_100566210;
  v25 = _Block_copy(aBlock);
  v26 = v39;
  swift_retain(v2);
  swift_release(v26);
  static DispatchQoS.unspecified.getter(v27);
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  v28 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v29 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v30 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v29, v30, v4, v28);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v10, v36);
}

uint64_t sub_100426E28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  Class isa;
  uint64_t v20;
  _QWORD *v21;
  uint8_t *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void **aBlock;
  _QWORD v40[4];
  uint64_t v41;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v38 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v37 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v10 = type metadata accessor for Logger(0);
  sub_100056D88(v10, (uint64_t)qword_1005F5748);
  swift_bridgeObjectRetain(a1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc(12, -1);
    v35 = v2;
    v15 = (uint8_t *)v14;
    v16 = swift_slowAlloc(8, -1);
    v36 = v8;
    v17 = (_QWORD *)v16;
    *(_DWORD *)v15 = 138412290;
    v34 = v7;
    sub_100006C5C(0, (unint64_t *)&unk_1005DF4B0, CLLocation_ptr);
    v18 = a1;
    isa = Array._bridgeToObjectiveC()().super.isa;
    aBlock = (void **)isa;
    v7 = v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v40);
    *v17 = isa;
    swift_bridgeObjectRelease(v18);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "FMDeviceDetailDataSource: didUpdate location %@", v15, 0xCu);
    v20 = sub_100053F2C((uint64_t *)&unk_1005D9680);
    swift_arrayDestroy(v17, 1, v20);
    v21 = v17;
    v8 = v36;
    swift_slowDealloc(v21, -1, -1);
    v22 = v15;
    v2 = v35;
    swift_slowDealloc(v22, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease(a1);
  }
  v23 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v24 = (void *)static OS_dispatch_queue.main.getter(v23);
  v40[3] = sub_1004271B8;
  v41 = v2;
  aBlock = _NSConcreteStackBlock;
  v40[0] = 1107296256;
  v40[1] = sub_100037DF8;
  v40[2] = &unk_1005661E8;
  v25 = _Block_copy(&aBlock);
  v26 = v41;
  swift_retain(v2);
  swift_release(v26);
  v27 = v37;
  static DispatchQoS.unspecified.getter(v28);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v29 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v30 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v31 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v30, v31, v4, v29);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v27, v7, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v27, v8);
}

double sub_1004271B8()
{
  uint64_t v0;

  return sub_10042444C(v0);
}

uint64_t sub_1004271D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for FMIPDevice(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v7 + 8));
  return swift_deallocObject(v0, v7 + 32, v5);
}

uint64_t sub_100427274()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for FMIPDevice(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_100424D94(*(_QWORD *)(v0 + 16), v0 + v2, *(void **)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 16), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 24));
}

uint64_t sub_1004272CC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = (int *)type metadata accessor for FMDeviceDetailViewModel(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v21 = *(_QWORD *)(v2 + 64);
  v22 = type metadata accessor for FMIPDevice(0);
  v4 = *(_QWORD *)(v22 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v20 = *(_QWORD *)(v4 + 64);
  swift_release(*(_QWORD *)(v0 + 16));
  v6 = (_QWORD *)(v0 + ((v3 + 24) & ~v3));
  swift_bridgeObjectRelease(v6[1]);
  swift_bridgeObjectRelease(v6[3]);
  swift_bridgeObjectRelease(v6[4]);
  swift_bridgeObjectRelease(v6[6]);
  v7 = (char *)v6 + v1[9];
  v8 = type metadata accessor for FMIPItem(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v6 + v1[12]));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v6 + v1[14] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v6 + v1[16] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v6 + v1[17] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)v6 + v1[18] + 8));
  v10 = (char *)v6 + v1[19];
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(char *, uint64_t))(v12 + 8);
  v13(v10, v11);
  v14 = (char *)v6 + v1[21];
  v15 = type metadata accessor for FMIPBatteryStatus(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
  v16 = (char *)v6 + v1[33];
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v16, 1, v11))
    v13(v16, v11);
  v17 = (((v3 + 24) & ~v3) + v21 + v5) & ~v5;
  v18 = swift_bridgeObjectRelease(*(_QWORD *)((char *)v6 + v1[38]));
  (*(void (**)(uint64_t, uint64_t, __n128))(v4 + 8))(v0 + v17, v22, v18);
  return swift_deallocObject(v0, v17 + v20, v3 | v5 | 7);
}

uint64_t sub_1004274C8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for FMDeviceDetailViewModel(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMIPDevice(0) - 8) + 80);
  return sub_1004251C4(*(_QWORD *)(v0 + 16), v0 + v2, v0 + ((v2 + v3 + v4) & ~v4));
}

id sub_100427624()
{
  return sub_1000E0A1C(type metadata accessor for FMSafeAreaInsetsPropagatingTableView);
}

uint64_t type metadata accessor for FMSafeAreaInsetsPropagatingTableView()
{
  return objc_opt_self(_TtC6FindMy36FMSafeAreaInsetsPropagatingTableView);
}

void *sub_100427650()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy32FMUnknownItemsListViewController_tableView);
  v2 = v1;
  return v1;
}

char *sub_10042767C(uint64_t a1, char a2)
{
  char *v2;
  char v4;
  char *v5;
  id v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  char *v14;
  _OWORD v16[7];
  uint64_t v17;

  v4 = a2 & 1;
  v5 = &v2[OBJC_IVAR____TtC6FindMy32FMUnknownItemsListViewController_delegate];
  *((_QWORD *)v5 + 1) = 0;
  swift_unknownObjectWeakInit(v5);
  v6 = objc_allocWithZone((Class)type metadata accessor for FMSafeAreaInsetsPropagatingTableView());
  v7 = v2;
  v8 = objc_msgSend(v6, "initWithFrame:style:", 0, 0.0, 0.0, 0.0, 0.0);
  v9 = objc_allocWithZone((Class)type metadata accessor for FMUnknownItemsListDataSource(0));
  swift_retain(a1);
  v10 = v8;
  v11 = sub_1001E6A80(a1, v10, v4);
  *(_QWORD *)&v7[OBJC_IVAR____TtC6FindMy32FMUnknownItemsListViewController_tableView] = v10;
  *(_QWORD *)&v7[OBJC_IVAR____TtC6FindMy32FMUnknownItemsListViewController_dataSource] = v11;
  v12 = v10;
  v13 = v11;

  if (qword_1005D1D28 != -1)
    swift_once(&qword_1005D1D28, sub_1002286DC);
  v16[4] = xmmword_1005F5400;
  v16[5] = unk_1005F5410;
  v16[6] = xmmword_1005F5420;
  v17 = qword_1005F5430;
  v16[0] = xmmword_1005F53C0;
  v16[1] = *(_OWORD *)algn_1005F53D0;
  v16[2] = xmmword_1005F53E0;
  v16[3] = unk_1005F53F0;
  v14 = sub_100225878(a1, (uint64_t)v16);

  return v14;
}

id sub_1004278A4(char a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  objc_class *v10;
  uint64_t v12;
  uint64_t v13;
  objc_super v14;

  v2 = v1;
  if (qword_1005D2070 != -1)
    swift_once(&qword_1005D2070, sub_1003CB89C);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100056D88(v4, (uint64_t)qword_1005F6010);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v13 = v9;
    *(_DWORD *)v8 = 136315138;
    v12 = sub_100056DA0(0xD000000000000011, 0x80000001004C6470, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMUnknownItemsListDataSource: %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }

  v10 = (objc_class *)type metadata accessor for FMUnknownItemsListViewController();
  v14.receiver = v2;
  v14.super_class = v10;
  return objc_msgSendSuper2(&v14, "viewDidAppear:", a1 & 1);
}

void sub_100427A78(char a1)
{
  void *v1;
  void *v2;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  _QWORD v9[5];
  uint64_t v10;
  objc_super v11;

  v2 = v1;
  v11.receiver = v2;
  v11.super_class = (Class)type metadata accessor for FMUnknownItemsListViewController();
  objc_msgSendSuper2(&v11, "viewWillAppear:", a1 & 1);
  sub_1001E7714();
  v4 = (void *)objc_opt_self(UIView);
  v5 = swift_allocObject(&unk_100566348, 24, 7);
  *(_QWORD *)(v5 + 16) = v2;
  v9[4] = sub_100428370;
  v10 = v5;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_100037DF8;
  v9[3] = &unk_100566360;
  v6 = _Block_copy(v9);
  v7 = v10;
  v8 = v2;
  swift_release(v7);
  objc_msgSend(v4, "animateWithDuration:delay:options:animations:completion:", 4, v6, 0, 0.35, 0.1);
  _Block_release(v6);
}

id sub_100427B88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id result;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t, __n128);
  __n128 v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t, __n128);
  Class isa;
  uint64_t v20;
  id v21;

  v2 = type metadata accessor for IndexPath(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100053F2C(&qword_1005D33C0);
  __chkstk_darwin(v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(id *)(a1 + OBJC_IVAR____TtC6FindMy32FMUnknownItemsListViewController_tableView);
  result = objc_msgSend(v21, "indexPathsForSelectedRows");
  if (result)
  {
    v10 = result;
    v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(result, v2);

    v12 = *(_QWORD *)(v11 + 16);
    v20 = v11;
    if (v12)
    {
      v13 = v11 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
      v14 = *(_QWORD *)(v3 + 72);
      v15 = v11;
      v16 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v3 + 16);
      v17 = swift_bridgeObjectRetain(v15);
      while (1)
      {
        v16(v8, v13, v2, v17);
        v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v3 + 56);
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v18)(v8, 0, 1, v2);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
          break;
        (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v21, "deselectRowAtIndexPath:animated:", isa, 1, v20);

        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        v13 += v14;
        if (!--v12)
          goto LABEL_8;
      }
    }
    else
    {
      v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v3 + 56);
      v17 = swift_bridgeObjectRetain(v11);
LABEL_8:
      v18(v8, 1, 1, v2, v17);
    }
    return (id)swift_bridgeObjectRelease_n(v20, 2);
  }
  return result;
}

void sub_100427E1C()
{
  char *v0;
  void *v1;
  id v2;
  Swift::String_optional v3;
  Swift::String v4;
  Swift::String v5;
  void *object;
  NSString v7;
  id v8;
  id v9;
  Swift::String v10;

  sub_100225BE4();
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_batteryIndicatorView], "setHidden:", 1);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryBackground], "setAlpha:", 1.0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primarySeperator], "setAlpha:", 1.0);
  v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryLabel];
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v3.value._countAndFlagsBits = 0xD000000000000013;
  v10._object = (void *)0x80000001004A5660;
  v4._object = (void *)0x80000001004B6A80;
  v3.value._object = (void *)0x80000001004A5640;
  v4._countAndFlagsBits = 0xD000000000000018;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v10._countAndFlagsBits = 0xD000000000000018;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v3, (NSBundle)v2, v5, v10)._object;

  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setText:", v7, swift_bridgeObjectRelease(object).n128_f64[0]);

  v8 = objc_msgSend(v0, "view");
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, "insertSubview:above:", *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy32FMUnknownItemsListViewController_tableView], *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollView]);

  }
  else
  {
    __break(1u);
  }
}

void sub_100427FCC()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  Class isa;

  sub_10022659C();
  v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy32FMUnknownItemsListViewController_tableView];
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = sub_100053F2C(&qword_1005D2F10);
  v3 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100481720;
  v4 = objc_msgSend(v1, "topAnchor");
  v5 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primarySeperator], "bottomAnchor");
  v6 = objc_msgSend(v4, "constraintEqualToAnchor:", v5);

  *(_QWORD *)(v3 + 32) = v6;
  v7 = objc_msgSend(v1, "bottomAnchor");
  v8 = objc_msgSend(v0, "view");
  if (!v8)
  {
    __break(1u);
    goto LABEL_6;
  }
  v9 = v8;
  v10 = objc_msgSend(v8, "bottomAnchor");

  v11 = objc_msgSend(v7, "constraintGreaterThanOrEqualToAnchor:", v10);
  *(_QWORD *)(v3 + 40) = v11;
  v12 = objc_msgSend(v1, "leadingAnchor");
  v13 = objc_msgSend(v0, "view");
  if (!v13)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v14 = v13;
  v15 = objc_msgSend(v13, "leadingAnchor");

  v16 = objc_msgSend(v12, "constraintEqualToAnchor:", v15);
  *(_QWORD *)(v3 + 48) = v16;
  v17 = objc_msgSend(v1, "trailingAnchor");
  v18 = objc_msgSend(v0, "view");
  if (v18)
  {
    v19 = v18;
    v20 = (void *)objc_opt_self(NSLayoutConstraint);
    v21 = objc_msgSend(v19, "trailingAnchor");

    v22 = objc_msgSend(v17, "constraintEqualToAnchor:", v21);
    *(_QWORD *)(v3 + 56) = v22;
    specialized Array._endMutation()(v23);
    sub_100048C64();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v20, "activateConstraints:", isa, swift_bridgeObjectRelease(v3).n128_f64[0]);

    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_10042829C()
{
  uint64_t v0;

  return sub_10005E190(v0 + OBJC_IVAR____TtC6FindMy32FMUnknownItemsListViewController_delegate);
}

id sub_1004282D8()
{
  return sub_1000E0A1C(type metadata accessor for FMUnknownItemsListViewController);
}

uint64_t type metadata accessor for FMUnknownItemsListViewController()
{
  return objc_opt_self(_TtC6FindMy32FMUnknownItemsListViewController);
}

uint64_t sub_10042834C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100428370()
{
  uint64_t v0;

  return sub_100427B88(*(_QWORD *)(v0 + 16));
}

id sub_100428464()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMItemAnnotationView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100428498@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;

  v3 = sub_100053F2C((uint64_t *)&unk_1005E4890);
  v4 = *(_QWORD *)(v3 - 8);
  result = __chkstk_darwin(v3);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v8 = v1[1];
  v10 = *(_QWORD *)(*v1 + 16);
  if (v8 == v10)
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, 1, 1, v3);
  if (v8 >= v10)
  {
    __break(1u);
  }
  else
  {
    v11 = type metadata accessor for FMIPSafeLocation(0);
    v12 = *(_QWORD *)(v11 - 8);
    v13 = v9
        + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))
        + *(_QWORD *)(v12 + 72) * v8;
    v1[1] = v8 + 1;
    v14 = &v7[*(int *)(v3 + 48)];
    v15 = v1[2];
    result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v12 + 16))(v14, v13, v11);
    if (!__OFADD__(v15, 1))
    {
      v1[2] = v15 + 1;
      v16 = (char *)a1 + *(int *)(v3 + 48);
      *a1 = v15;
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v14, v11);
      return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v3);
    }
  }
  __break(1u);
  return result;
}

void sub_100428614()
{
  uint64_t v0;
  double v1;
  void *v2;
  id v3;
  Swift::String v4;
  Swift::String_optional v5;
  Swift::String v6;
  void *object;
  NSString v8;
  Swift::String v9;

  sub_100416700();
  v2 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_sectionLabel);
  if (*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_safeLocations) + 16))
  {
    v3 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v9._countAndFlagsBits = 0xD00000000000001BLL;
    v4._countAndFlagsBits = 0xD000000000000024;
    v9._object = (void *)0x80000001004A91F0;
    v4._object = (void *)0x80000001004C5B60;
    v5.value._object = (void *)0x80000001004A91D0;
    v5.value._countAndFlagsBits = 0xD000000000000016;
    v6._countAndFlagsBits = 0;
    v6._object = (void *)0xE000000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v3, v6, v9)._object;

    v8 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v1 = swift_bridgeObjectRelease(object).n128_u64[0];
  }
  else
  {
    v8 = 0;
  }
  objc_msgSend(v2, "setText:", v8, v1);

}

void sub_100428728(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  double v13;
  void *v14;
  uint64_t v15;
  id v16;
  Swift::String v17;
  Swift::String_optional v18;
  Swift::String v19;
  void *object;
  NSString v21;
  SEL *v22;
  char *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  _BYTE *v34;
  _BYTE *v35;
  uint64_t v36;
  id v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  id v45;
  double v46;
  NSString v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  id v54;
  double v55;
  NSString v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  _BOOL8 v64;
  id v65;
  char *v66;
  uint64_t v67;
  void *v68;
  void (*v69)(char *, uint64_t);
  double v70;
  double v71;
  double v72;
  double v73;
  __n128 v74;
  Swift::String v75;
  __n128 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  id v83;
  uint64_t v84;
  void *v85;
  id v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  void *v90;
  id v91;
  _BYTE *v92;
  char *v93;
  id v94;
  char *v95;
  _BYTE *v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  void (*v108)(char *, char *, uint64_t);
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  _QWORD *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  char v121[24];
  _QWORD v122[4];
  Swift::String v123;

  v2 = v1;
  v118 = type metadata accessor for FMIPLocation(0);
  v113 = *(_QWORD *)(v118 - 8);
  __chkstk_darwin(v118);
  v117 = (char *)&v104 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FMIPSafeLocation(0);
  v114 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100053F2C(&qword_1005E4888);
  v9 = __chkstk_darwin(v8);
  v116 = (uint64_t *)((char *)&v104 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  v12 = (uint64_t *)((char *)&v104 - v11);
  v105 = OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_safeLocations;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_numSafeLocations] = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_safeLocations] + 16);
  sub_100429454();
  v14 = *(void **)&v1[OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_sectionLabel];
  v106 = a1;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v16 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v123._countAndFlagsBits = 0xD00000000000001BLL;
    v17._countAndFlagsBits = 0xD000000000000024;
    v123._object = (void *)0x80000001004A91F0;
    v17._object = (void *)0x80000001004C5B60;
    v18.value._object = (void *)0x80000001004A91D0;
    v18.value._countAndFlagsBits = 0xD000000000000016;
    v19._countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, v18, (NSBundle)v16, v19, v123)._object;

    v21 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v13 = swift_bridgeObjectRelease(object).n128_u64[0];
  }
  else
  {
    v21 = 0;
  }
  v22 = (SEL *)&unk_1005AA000;
  objc_msgSend(v14, "setText:", v21, v13);

  v122[1] = 0;
  v122[2] = 0;
  v122[0] = v106;
  v23 = &v2[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_snapshotMemoryCache];
  v107 = OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_mapSnapshotter;
  v115 = &v2[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_locationsRow];
  swift_bridgeObjectRetain(v106);
  v112 = v23;
  swift_beginAccess(v23, v121, 0, 0);
  v24 = v116;
  sub_100428498(v116);
  sub_10042B5F8((uint64_t)v24, (uint64_t)v12);
  v25 = sub_100053F2C((uint64_t *)&unk_1005E4890);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v12, 1, v25) != 1)
  {
    v109 = v15 - 1;
    v108 = *(void (**)(char *, char *, uint64_t))(v114 + 32);
    v110 = v12;
    v111 = v5;
    while (1)
    {
      v36 = *v12;
      v108(v7, (char *)v12 + *(int *)(v25 + 48), v5);
      v37 = objc_allocWithZone((Class)type metadata accessor for FMDeletableRowView());
      v38 = sub_1002814C8(0, 1);
      v39 = sub_1002C41C0();
      v40 = (uint64_t *)&v38[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title];
      v41 = *(_QWORD *)&v38[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title + 8];
      *v40 = v39;
      v40[1] = v42;
      swift_bridgeObjectRelease(v41);
      v43 = *(void **)&v38[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_titleLabel];
      v44 = v40[1];
      v45 = v43;
      if (v44)
      {
        swift_bridgeObjectRetain(v44);
        v47 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v46 = swift_bridgeObjectRelease(v44).n128_u64[0];
      }
      else
      {
        v47 = 0;
      }
      objc_msgSend(v43, v22[275], v47, v46);

      v48 = sub_1002C46C4();
      v49 = (uint64_t *)&v38[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_subtitle];
      v50 = *(_QWORD *)&v38[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_subtitle + 8];
      *v49 = v48;
      v49[1] = v51;
      swift_bridgeObjectRelease(v50);
      v52 = *(void **)&v38[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_secondaryLabel];
      v53 = v49[1];
      v54 = v52;
      if (v53)
      {
        swift_bridgeObjectRetain(v53);
        v56 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v55 = swift_bridgeObjectRelease(v53).n128_u64[0];
      }
      else
      {
        v56 = 0;
      }
      objc_msgSend(v52, v22[275], v56, v55);

      v58 = FMIPSafeLocation.identifier.getter(v57);
      v59 = (uint64_t *)&v38[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_identifier];
      v60 = *(_QWORD *)&v38[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_identifier + 8];
      *v59 = v58;
      v59[1] = v61;
      swift_bridgeObjectRelease(v60);
      v62 = OBJC_IVAR____TtC6FindMy18FMDeletableRowView_imageView;
      objc_msgSend(*(id *)&v38[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_imageView], "_setContinuousCornerRadius:", 4.0);
      objc_msgSend(*(id *)&v38[v62], "setContentMode:", 0);
      v63 = objc_msgSend(*(id *)&v38[v62], "layer");
      objc_msgSend(v63, "setMasksToBounds:", 1);

      v64 = v36 != v109;
      v38[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_separated] = v36 == v109;
      v65 = objc_msgSend(*(id *)&v38[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_separator], "setHidden:", v64);
      v66 = v117;
      v67 = FMIPSafeLocation.location.getter(v65);
      v68 = (void *)FMIPLocation.location.getter(v67);
      v69 = *(void (**)(char *, uint64_t))(v113 + 8);
      v69(v66, v118);
      objc_msgSend(v68, "coordinate");
      v71 = round(v70 * 10000.0) / 10000.0;
      objc_msgSend(v68, "coordinate");
      v73 = round(v72 * 10000.0) / 10000.0;
      v119 = 0;
      v120 = 0xE000000000000000;
      v74.n128_f64[0] = v71;
      Double.write<A>(to:)(&v119, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v74);
      v75._countAndFlagsBits = 45;
      v75._object = (void *)0xE100000000000000;
      String.append(_:)(v75);
      v76.n128_f64[0] = v73;
      Double.write<A>(to:)(&v119, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v76);

      v79 = v119;
      v78 = v120;
      v80 = *(_QWORD *)v112;
      if (!*(_QWORD *)(*(_QWORD *)v112 + 16))
        goto LABEL_29;
      swift_bridgeObjectRetain(v120);
      swift_bridgeObjectRetain(v80);
      v81 = sub_10004C348(v79, v78);
      if ((v82 & 1) == 0)
        break;
      v83 = *(id *)(*(_QWORD *)(v80 + 56) + 8 * v81);
      swift_bridgeObjectRelease_n(v78, 2);
      swift_bridgeObjectRelease(v80);
      v84 = OBJC_IVAR____TtC6FindMy18FMDeletableRowView_image;
      v85 = *(void **)&v38[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_image];
      *(_QWORD *)&v38[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_image] = v83;
      v86 = v83;

      objc_msgSend(*(id *)&v38[v62], "setImage:", *(_QWORD *)&v38[v84]);
      objc_msgSend(v38, "setNeedsLayout");

LABEL_30:
      v94 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v2, "locationRowTapWithSender:");
      objc_msgSend(v38, "addGestureRecognizer:", v94);
      v95 = v115;
      swift_beginAccess(v115, &v119, 33, 0);
      v96 = v38;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v96);
      v98 = *(_QWORD *)((*(_QWORD *)v95 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v97 = *(_QWORD *)((*(_QWORD *)v95 & 0xFFFFFFFFFFFFFF8) + 0x18);
      v12 = v110;
      v5 = v111;
      if (v98 >= v97 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v97 > 1, v98 + 1, 1);
      v99 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v98, v96);
      specialized Array._endMutation()(v99);
      swift_endAccess(&v119);

      (*(void (**)(char *, uint64_t))(v114 + 8))(v7, v5);
      v100 = v116;
      sub_100428498(v116);
      sub_10042B5F8((uint64_t)v100, (uint64_t)v12);
      v25 = sub_100053F2C((uint64_t *)&unk_1005E4890);
      v22 = (SEL *)&unk_1005AA000;
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v12, 1, v25) == 1)
        goto LABEL_5;
    }
    swift_bridgeObjectRelease(v78);
    swift_bridgeObjectRelease(v80);
LABEL_29:
    v87 = *(_QWORD *)&v2[v107];
    v88 = v117;
    v89 = FMIPSafeLocation.location.getter(v77);
    v90 = (void *)FMIPLocation.location.getter(v89);
    v69(v88, v118);
    v91 = objc_msgSend(v2, "traitCollection");
    swift_bridgeObjectRetain(v78);
    v92 = v38;
    v93 = v2;
    sub_1000F1ADC(v90, v91, 0, v87, v92, v93, v79, v78, 50.0, 50.0);

    swift_bridgeObjectRelease_n(v78, 2);
    goto LABEL_30;
  }
LABEL_5:
  swift_bridgeObjectRelease(v122[0]);
  v26 = (uint64_t *)v115;
  swift_beginAccess(v115, v122, 0, 0);
  v27 = *v26;
  if (v27 < 0 || (v27 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n(v27, 2);
    v28 = (uint64_t)sub_1003EFA94(v27);
    swift_bridgeObjectRelease(v27);
  }
  else
  {
    v28 = v27 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v27, 2);
  }
  v119 = v28;
  sub_10042A4AC(&v119);
  swift_bridgeObjectRelease(v27);
  v29 = v119;
  if ((v119 & 0x8000000000000000) == 0 && (v119 & 0x4000000000000000) == 0)
  {
    v30 = *(_QWORD *)(v119 + 16);
    swift_retain(v119);
    if (v30)
      goto LABEL_11;
LABEL_36:
    swift_release_n(v29, 2);
    v102 = *(_QWORD *)&v2[v105];
    v103 = v106;
    *(_QWORD *)&v2[v105] = v106;
    swift_bridgeObjectRetain(v103);
    swift_bridgeObjectRelease(v102);
    return;
  }
  v101 = swift_retain(v119);
  v30 = _CocoaArrayWrapper.endIndex.getter(v101);
  if (!v30)
    goto LABEL_36;
LABEL_11:
  if (__OFSUB__(v30, 1))
  {
    __break(1u);
  }
  else
  {
    v31 = v30 - 1;
    if (v30 >= 1)
    {
      v32 = 0;
      v33 = *(void **)&v2[OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_contentStackView];
      do
      {
        if ((v29 & 0xC000000000000001) != 0)
          v34 = (_BYTE *)specialized _ArrayBuffer._getElementSlowPath(_:)(v32, v29);
        else
          v34 = *(id *)(v29 + 8 * v32 + 32);
        v35 = v34;
        objc_msgSend(v33, "addArrangedSubview:", v34);
        v35[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_separated] = v31 != v32;
        objc_msgSend(*(id *)&v35[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_separator], "setHidden:", v31 == v32);

        ++v32;
      }
      while (v30 != v32);
      goto LABEL_36;
    }
  }
  __break(1u);
  swift_release(v119);
  __break(1u);
}

uint64_t sub_100429138(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  void *v17;
  _QWORD *v18;
  void *v19;
  _QWORD *v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD aBlock[5];
  _QWORD *v34;

  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v32 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v30 = *(_QWORD *)(v13 - 8);
  v31 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1000555A8();
  v17 = (void *)static OS_dispatch_queue.main.getter(v16);
  v18 = (_QWORD *)swift_allocObject(&unk_1005663F8, 56, 7);
  v18[2] = a2;
  v18[3] = a1;
  v18[4] = a3;
  v18[5] = a4;
  v18[6] = a5;
  aBlock[4] = sub_10042B67C;
  v34 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_100566410;
  v19 = _Block_copy(aBlock);
  v20 = v34;
  v21 = a2;
  v22 = a1;
  v23 = a3;
  swift_bridgeObjectRetain(a5);
  swift_release(v20);
  static DispatchQoS.unspecified.getter(v24);
  aBlock[0] = _swiftEmptyArrayStorage;
  v25 = sub_100056580();
  v26 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v27 = sub_1000555E4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v26, v27, v10, v25);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v12, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v15, v31);
}

uint64_t sub_100429330(char *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  void *v10;
  id v11;
  _QWORD *v12;
  id v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v17;
  _BYTE v18[24];

  v9 = OBJC_IVAR____TtC6FindMy18FMDeletableRowView_image;
  v10 = *(void **)&a1[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_image];
  *(_QWORD *)&a1[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_image] = a2;
  v11 = a2;

  objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_imageView], "setImage:", *(_QWORD *)&a1[v9]);
  objc_msgSend(a1, "setNeedsLayout");

  v12 = (_QWORD *)(a3 + OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_snapshotMemoryCache);
  swift_beginAccess(a3 + OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_snapshotMemoryCache, v18, 33, 0);
  v13 = v11;
  swift_bridgeObjectRetain(a5);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v12);
  v17 = *v12;
  *v12 = 0x8000000000000000;
  sub_100179798((uint64_t)v13, a4, a5, isUniquelyReferenced_nonNull_native);
  v15 = *v12;
  *v12 = v17;
  swift_bridgeObjectRelease(a5);
  swift_bridgeObjectRelease(v15);
  return swift_endAccess(v18);
}

uint64_t sub_100429454()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_locationsRow);
  swift_beginAccess(v0 + OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_locationsRow, v11, 1, 0);
  v2 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n(*v1, 2);
    if (v3)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease_n(v2, 2);
    v10 = *v1;
    *v1 = (uint64_t)&_swiftEmptyArrayStorage;
    return swift_bridgeObjectRelease(v10);
  }
  if (v2 < 0)
    v9 = *v1;
  else
    v9 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(*v1, 2);
  result = _CocoaArrayWrapper.endIndex.getter(v9);
  v3 = result;
  if (!result)
    goto LABEL_13;
LABEL_3:
  if (v3 >= 1)
  {
    v5 = 0;
    v6 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_contentStackView);
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2);
      else
        v7 = *(id *)(v2 + 8 * v5 + 32);
      v8 = v7;
      ++v5;
      objc_msgSend(v7, "removeFromSuperview");
      objc_msgSend(v6, "removeArrangedSubview:", v8);

    }
    while (v3 != v5);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

void sub_10042959C(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  void *v26;
  id v27;
  Swift::String v28;
  Swift::String_optional v29;
  Swift::String v30;
  Swift::String v31;
  id v32;
  Swift::String v33;
  Swift::String_optional v34;
  Swift::String v35;
  void *object;
  id v37;
  Swift::String v38;
  Swift::String v39;
  void *v40;
  NSString v41;
  NSString v42;
  id v43;
  NSString v44;
  char *v45;
  char *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  id v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(char *, uint64_t, id, __n128);
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  __n128 v70;
  uint64_t v71;
  __n128 v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  __n128 v76;
  __n128 v77;
  uint64_t v78;
  void (*v79)(uint64_t, char *, id);
  uint64_t v80;
  uint64_t v81;
  id v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  id v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  id v101;
  uint64_t v102;
  unint64_t v103;
  Swift::String v104;
  Swift::String v105;
  Swift::String v106;

  v2 = v1;
  v4 = sub_100053F2C((uint64_t *)&unk_1005E2270);
  __chkstk_darwin(v4);
  v6 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FMIPSafeLocation(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = __chkstk_darwin(v7);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v92 - v12;
  v14 = (void *)__chkstk_darwin(v11);
  v17 = (char *)&v92 - v16;
  if (*(uint64_t *)&v1[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_numSafeLocations] <= 19)
  {
    v96 = v15;
    v97 = v6;
    v101 = v14;
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v18 = type metadata accessor for Logger(0);
    v19 = sub_100056D88(v18, (uint64_t)qword_1005F5748);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.default.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "FMSafeLocationSuggestionView: Row tapped", v22, 2u);
      swift_slowDealloc(v22, -1, -1);
    }

    v23 = *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_groupBeaconUUIDs];
    if (v23 && *(_QWORD *)(v23 + 16))
    {
      v24 = swift_bridgeObjectRetain(*(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_groupBeaconUUIDs]).n128_u64[0];
      v25 = v101;
    }
    else
    {
      v49 = sub_100053F2C((uint64_t *)&unk_1005D2A90);
      v23 = swift_allocObject(v49, 48, 7);
      *(_OWORD *)(v23 + 16) = xmmword_100481740;
      v50 = *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_beaconUUID + 8];
      if (v50)
      {
        v51 = *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_beaconUUID];
        v52 = *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_beaconUUID + 8];
      }
      else
      {
        v51 = 0;
        v52 = 0xE000000000000000;
      }
      v25 = v101;
      *(_QWORD *)(v23 + 32) = v51;
      *(_QWORD *)(v23 + 40) = v52;
      v24 = swift_bridgeObjectRetain(v50).n128_u64[0];
    }
    v53 = objc_msgSend(a1, "view", *(double *)&v24);
    if (v53)
    {
      v54 = v53;
      v55 = type metadata accessor for FMDeletableRowView();
      v56 = swift_dynamicCastClass(v54, v55);
      if (v56)
      {
        v57 = *(_QWORD *)(v56 + OBJC_IVAR____TtC6FindMy18FMDeletableRowView_identifier + 8);
        if (v57)
        {
          v94 = v17;
          v95 = v54;
          v58 = *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_safeLocations];
          v59 = *(_QWORD *)(v58 + 16);
          if (v59)
          {
            v99 = v8;
            v100 = v2;
            v60 = *(_QWORD *)(v56 + OBJC_IVAR____TtC6FindMy18FMDeletableRowView_identifier);
            v61 = v58;
            v62 = v58 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
            v98 = *(_QWORD *)(v8 + 72);
            v63 = *(uint64_t (**)(char *, uint64_t, id, __n128))(v8 + 16);
            v93 = v61;
            swift_bridgeObjectRetain_n(v61, 2);
            v64 = swift_bridgeObjectRetain(v57);
            while (1)
            {
              v65 = v63(v13, v62, v25, v64);
              v66 = FMIPSafeLocation.identifier.getter(v65);
              v68 = v67;
              if (v66 == v60 && v57 == v67)
              {
                swift_bridgeObjectRelease(v93);
                goto LABEL_34;
              }
              v69 = _stringCompareWithSmolCheck(_:_:expecting:)(v66, v67, v60, v57, 0);
              v70 = swift_bridgeObjectRelease(v68);
              if ((v69 & 1) != 0)
                break;
              v25 = v101;
              (*(void (**)(char *, id, __n128))(v99 + 8))(v13, v101, v70);
              v62 += v98;
              if (!--v59)
              {
                v71 = v93;
                v72 = swift_bridgeObjectRelease(v93);
                v73 = 1;
                v8 = v99;
                v2 = v100;
                v74 = v94;
                goto LABEL_31;
              }
            }
            v68 = v93;
LABEL_34:
            v74 = v94;
            v76 = swift_bridgeObjectRelease(v68);
            v8 = v99;
            v75 = (uint64_t)v97;
            v25 = v101;
            (*(void (**)(char *, char *, id, __n128))(v99 + 32))(v97, v13, v101, v76);
            v73 = 0;
            v2 = v100;
            v71 = v93;
          }
          else
          {
            swift_bridgeObjectRetain(v57);
            v72 = swift_bridgeObjectRetain(v58);
            v73 = 1;
            v74 = v94;
            v71 = v58;
LABEL_31:
            v75 = (uint64_t)v97;
          }
          (*(void (**)(uint64_t, uint64_t, uint64_t, id, __n128))(v8 + 56))(v75, v73, 1, v25, v72);
          swift_bridgeObjectRelease(v57);
          v77 = swift_bridgeObjectRelease(v71);
          if ((*(unsigned int (**)(uint64_t, uint64_t, id, __n128))(v8 + 48))(v75, 1, v25, v77) == 1)
          {

            swift_bridgeObjectRelease(v23);
            sub_10042B4DC(v75);
          }
          else
          {
            v78 = v8;
            v101 = *(id *)(v8 + 32);
            ((void (*)(char *, uint64_t, id))v101)(v74, v75, v25);
            v79 = *(void (**)(uint64_t, char *, id))(v8 + 16);
            v80 = v96;
            v79(v96, v74, v25);
            v81 = type metadata accessor for FMIPAssignMultipleSafeLocationsItemAction(0);
            swift_allocObject(v81, *(unsigned int *)(v81 + 48), *(unsigned __int16 *)(v81 + 52));
            v82 = v25;
            v84 = FMIPAssignMultipleSafeLocationsItemAction.init(beaconUUIDs:location:)(v23, v80, v83);
            v85 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_mediator]
                                        + 24)
                            + 32);
            v79(v80, v74, v82);
            v86 = *(unsigned __int8 *)(v78 + 80);
            v87 = v74;
            v88 = v2;
            v89 = (v86 + 24) & ~v86;
            v90 = swift_allocObject(&unk_1005663D0, v89 + v9, v86 | 7);
            *(_QWORD *)(v90 + 16) = v88;
            ((void (*)(uint64_t, uint64_t, id))v101)(v90 + v89, v80, v82);
            swift_retain(v85);
            v91 = v88;
            sub_1000B1B20(v84, (uint64_t)sub_10042B590, v90);
            swift_release(v84);
            swift_release(v85);
            swift_release(v90);

            (*(void (**)(char *, id))(v78 + 8))(v87, v82);
          }
          return;
        }
      }

    }
    swift_bridgeObjectRelease(v23);
    return;
  }
  v26 = (void *)objc_opt_self(NSBundle);
  v27 = objc_msgSend(v26, "mainBundle");
  v104._object = (void *)0x80000001004A91F0;
  v28._object = (void *)0x80000001004BC330;
  v28._countAndFlagsBits = 0xD000000000000021;
  v29.value._countAndFlagsBits = 0xD000000000000016;
  v29.value._object = (void *)0x80000001004A91D0;
  v30._countAndFlagsBits = 0;
  v30._object = (void *)0xE000000000000000;
  v104._countAndFlagsBits = 0xD00000000000001BLL;
  v31 = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, v29, (NSBundle)v27, v30, v104);
  v100 = v2;

  v32 = objc_msgSend(v26, "mainBundle");
  v33._countAndFlagsBits = 0xD000000000000024;
  v105._object = (void *)0x80000001004A91F0;
  v33._object = (void *)0x80000001004BC360;
  v34.value._countAndFlagsBits = 0xD000000000000016;
  v34.value._object = (void *)0x80000001004A91D0;
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  v105._countAndFlagsBits = 0xD00000000000001BLL;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v33, v34, (NSBundle)v32, v35, v105)._object;

  v102 = 0;
  v103 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v37 = objc_msgSend(v26, "mainBundle", swift_bridgeObjectRelease(v103).n128_f64[0]);
  v106._object = (void *)0x80000001004A5EE0;
  v38._countAndFlagsBits = 0x4F545455425F4B4FLL;
  v38._object = (void *)0xEF454C5449545F4ELL;
  v39._countAndFlagsBits = 0;
  v39._object = (void *)0xE000000000000000;
  v106._countAndFlagsBits = 0xD000000000000021;
  v40 = NSLocalizedString(_:tableName:bundle:value:comment:)(v38, (Swift::String_optional)0, (NSBundle)v37, v39, v106)._object;

  v41 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v31._object);
  v42 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v43 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v41, v42, 1);

  v44 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v40);
  v101 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v44, 0, 0);

  objc_msgSend(v43, "addAction:", v101);
  v45 = v100;
  while (1)
  {
    v46 = v45;
    v45 = (char *)objc_msgSend(v45, "nextResponder");

    if (!v45)
      break;
    v47 = objc_opt_self(UIViewController);
    v48 = (void *)swift_dynamicCastObjCClass(v45, v47);
    if (v48)
    {
      objc_msgSend(v48, "presentViewController:animated:completion:", v43, 1, 0);

      break;
    }
  }

}

void sub_100429E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6)
{
  void *v6;
  id v7;
  Swift::String v8;
  Swift::String_optional v9;
  Swift::String v10;
  void *object;
  id v12;
  Swift::String v13;
  Swift::String_optional v14;
  Swift::String v15;
  void *v16;
  id v17;
  Swift::String v18;
  Swift::String v19;
  void *v20;
  NSString v21;
  NSString v22;
  id v23;
  NSString v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void *v28;
  uint64_t Strong;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  NSObject *oslog;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  Swift::String v46;
  Swift::String v47;
  Swift::String v48;

  if (a1)
  {
    v6 = (void *)objc_opt_self(NSBundle);
    v7 = objc_msgSend(v6, "mainBundle");
    v8._countAndFlagsBits = 0xD00000000000001ELL;
    v46._object = (void *)0x80000001004A91F0;
    v8._object = (void *)0x80000001004B2320;
    v9.value._countAndFlagsBits = 0xD000000000000016;
    v9.value._object = (void *)0x80000001004A91D0;
    v10._countAndFlagsBits = 0;
    v10._object = (void *)0xE000000000000000;
    v46._countAndFlagsBits = 0xD00000000000001BLL;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v46)._object;

    v12 = objc_msgSend(v6, "mainBundle");
    v13._countAndFlagsBits = 0xD00000000000002ALL;
    v47._object = (void *)0x80000001004A91F0;
    v13._object = (void *)0x80000001004B2340;
    v14.value._countAndFlagsBits = 0xD000000000000016;
    v14.value._object = (void *)0x80000001004A91D0;
    v15._countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    v47._countAndFlagsBits = 0xD00000000000001BLL;
    v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, v14, (NSBundle)v12, v15, v47)._object;

    v43 = 0;
    _StringGuts.grow(_:)(20);
    v17 = objc_msgSend(v6, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
    v48._countAndFlagsBits = 0xD000000000000021;
    v48._object = (void *)0x80000001004A5EE0;
    v18._countAndFlagsBits = 0x4F545455425F4B4FLL;
    v18._object = (void *)0xEF454C5449545F4ELL;
    v19._countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v48)._object;

    v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v16);
    v23 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v21, v22, 1);

    v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v20);
    oslog = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v24, 0, 0);

    objc_msgSend(v23, "addAction:", oslog);
    v25 = a5;
    while (1)
    {
      v26 = v25;
      v25 = (char *)objc_msgSend(v25, "nextResponder");

      if (!v25)
        break;
      v27 = objc_opt_self(UIViewController);
      v28 = (void *)swift_dynamicCastObjCClass(v25, v27);
      if (v28)
      {
        objc_msgSend(v28, "presentViewController:animated:completion:", v23, 1, 0);

        break;
      }
    }

  }
  else
  {
    Strong = swift_unknownObjectWeakLoadStrong(&a5[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_delegate]);
    if (Strong)
    {
      v31 = Strong;
      sub_1003FBE04(a6);
      swift_unknownObjectRelease(v31);
    }
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v32 = type metadata accessor for Logger(0);
    v33 = sub_100056D88(v32, (uint64_t)qword_1005F5748);
    oslog = Logger.logObject.getter(v33);
    v34 = static os_log_type_t.default.getter(oslog);
    if (os_log_type_enabled(oslog, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc(12, -1);
      v36 = swift_slowAlloc(32, -1);
      v43 = v36;
      *(_DWORD *)v35 = 136315138;
      v44 = 0;
      v37 = sub_100053F2C(&qword_1005D7E40);
      v38 = String.init<A>(describing:)(&v44, v37);
      v40 = v39;
      v44 = sub_100056DA0(v38, v39, &v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45);
      swift_bridgeObjectRelease(v40);
      _os_log_impl((void *)&_mh_execute_header, oslog, v34, "FMSafeLocationSuggestionsView: Assign Safe Location completed with error: %s", v35, 0xCu);
      swift_arrayDestroy(v36, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v36, -1, -1);
      swift_slowDealloc(v35, -1, -1);

      return;
    }
  }

}

double sub_10042A330()
{
  uint64_t v0;
  double result;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_locationsRow));
  sub_10005E190(v0 + OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_delegate);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_safeLocations));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_snapshotMemoryCache));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_mapSnapshotter));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_mediator));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_beaconUUID + 8));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0
                                                           + OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_groupBeaconUUIDs)).n128_u64[0];
  return result;
}

id sub_10042A3C0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMSafeLocationSuggestionsView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMSafeLocationSuggestionsView()
{
  return objc_opt_self(_TtC6FindMy29FMSafeLocationSuggestionsView);
}

uint64_t sub_10042A4AC(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_10005B308(v2);
    *a1 = v2;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v7[0] = v2 + 32;
  v7[1] = v4;
  sub_10042A524(v7);
  return specialized ContiguousArray._endMutation()(v5);
}

void sub_10042A524(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;
  Swift::Int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char *v25;
  id v26;
  void *v27;
  char *v29;
  Swift::Int v30;
  uint64_t v31;
  unint64_t v32;
  Swift::Int v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  Swift::Int v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char *v44;
  char *v45;
  void **v46;
  void *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  Swift::Int v57;
  int v58;
  id v59;
  char *v60;
  uint64_t *v61;
  Swift::Int v62;
  Swift::Int v63;
  uint64_t *v64;
  uint64_t v65;
  Swift::Int v66;
  uint64_t v67;
  char *v68;
  id v69;
  Swift::Int v70;
  char *v71;
  Swift::Int v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  void *v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  char *v82;
  id v83;
  void *v84;
  unint64_t v85;
  unint64_t v86;
  char *v87;
  char *v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  BOOL v100;
  unint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  BOOL v110;
  uint64_t v111;
  char v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  BOOL v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  unint64_t v133;
  char *v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t *v142;
  uint64_t v143;
  uint64_t v144;
  Swift::Int v145;
  uint64_t v146;
  uint64_t v147;
  Swift::Int v148;
  char *v149;
  Swift::Int v150;
  Swift::Int v151;
  uint64_t v152;
  uint64_t v153;
  void **v154;
  uint64_t v155;
  uint64_t v156;
  int v157;
  Swift::Int v158;
  Swift::Int v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;

  v2 = v1;
  v4 = a1[1];
  v5 = _minimumMergeRunLength(_:)(v4);
  v151 = v4;
  if (v5 >= v4)
  {
    if (v4 < 0)
      goto LABEL_179;
    if ((unint64_t)v4 < 2)
      return;
    v10 = *a1;
    v11 = -1;
    v12 = 1;
    v160 = *a1;
    while (1)
    {
      v155 = v12;
      v15 = *(char **)(v160 + 8 * v12);
      v156 = v11;
      v152 = v10;
      while (1)
      {
        v16 = *(_QWORD *)&v15[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title + 8];
        if (v16)
        {
          v17 = *(_QWORD *)&v15[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title];
          v18 = *(_QWORD *)&v15[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title + 8];
        }
        else
        {
          v17 = 0;
          v18 = 0xE000000000000000;
        }
        v19 = *(void **)v10;
        v20 = (uint64_t *)(*(_QWORD *)v10 + OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title);
        v21 = v20[1];
        if (!v21)
          break;
        v22 = *v20;
        v23 = v20[1];
        if (v17 == *v20)
          goto LABEL_21;
LABEL_22:
        v24 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v18, v22, v23, 1);
        swift_bridgeObjectRetain(v21);
        v25 = v15;
        v26 = v19;
        swift_bridgeObjectRetain(v16);

        swift_bridgeObjectRelease(v23);
        swift_bridgeObjectRelease(v18);
        if ((v24 & 1) != 0)
        {
          if (!v160)
            goto LABEL_183;
          v27 = *(void **)v10;
          v15 = *(char **)(v10 + 8);
          *(_QWORD *)v10 = v15;
          *(_QWORD *)(v10 + 8) = v27;
          v10 -= 8;
          if (!__CFADD__(v11++, 1))
            continue;
        }
        goto LABEL_12;
      }
      v22 = 0;
      v23 = 0xE000000000000000;
      if (v17)
        goto LABEL_22;
LABEL_21:
      if (v18 != v23)
        goto LABEL_22;
      swift_bridgeObjectRetain(v20[1]);
      v13 = v15;
      v14 = v19;
      swift_bridgeObjectRetain(v16);

      swift_bridgeObjectRelease_n(v18, 2);
LABEL_12:
      v12 = v155 + 1;
      v10 = v152 + 8;
      v11 = v156 - 1;
      if (v155 + 1 == v151)
        return;
    }
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_188;
  v145 = v5;
  v142 = a1;
  if (v4 < 2)
  {
    v29 = (char *)_swiftEmptyArrayStorage;
    v162 = (uint64_t)_swiftEmptyArrayStorage;
    v154 = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      v32 = _swiftEmptyArrayStorage[2];
LABEL_145:
      if (v32 >= 2)
      {
        v135 = *v142;
        do
        {
          v136 = v32 - 2;
          if (v32 < 2)
            goto LABEL_174;
          if (!v135)
            goto LABEL_187;
          v137 = *(_QWORD *)&v29[16 * v136 + 32];
          v138 = *(_QWORD *)&v29[16 * v32 + 24];
          sub_10042AF64((void **)(v135 + 8 * v137), (void **)(v135 + 8 * *(_QWORD *)&v29[16 * v32 + 16]), v135 + 8 * v138, v154);
          if (v2)
            break;
          if (v138 < v137)
            goto LABEL_175;
          if ((swift_isUniquelyReferenced_nonNull_native(v29) & 1) == 0)
            v29 = sub_10020CE70((uint64_t)v29);
          if (v136 >= *((_QWORD *)v29 + 2))
            goto LABEL_176;
          v139 = &v29[16 * v136 + 32];
          *(_QWORD *)v139 = v137;
          *((_QWORD *)v139 + 1) = v138;
          v140 = *((_QWORD *)v29 + 2);
          if (v32 > v140)
            goto LABEL_177;
          memmove(&v29[16 * v32 + 16], &v29[16 * v32 + 32], 16 * (v140 - v32));
          *((_QWORD *)v29 + 2) = v140 - 1;
          v32 = v140 - 1;
        }
        while (v140 > 2);
      }
LABEL_156:
      swift_bridgeObjectRelease(v29);
      *(_QWORD *)((v162 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()(v141);
      swift_bridgeObjectRelease(v162);
      return;
    }
  }
  else
  {
    v7 = v6 >> 1;
    v8 = type metadata accessor for FMDeletableRowView();
    v9 = static Array._allocateBufferUninitialized(minimumCapacity:)(v7, v8);
    *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
    v154 = (void **)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    v162 = v9;
  }
  v30 = 0;
  v31 = *a1;
  v143 = *a1 - 8;
  v144 = *a1 + 16;
  v29 = (char *)_swiftEmptyArrayStorage;
  v161 = *a1;
LABEL_31:
  v33 = v30 + 1;
  v149 = v29;
  v150 = v30;
  if (v30 + 1 >= v4)
  {
    v38 = v30;
    goto LABEL_69;
  }
  v146 = v2;
  v34 = *(char **)(v31 + 8 * v33);
  v35 = *(_QWORD *)&v34[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title + 8];
  if (v35)
  {
    v36 = *(_QWORD *)&v34[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title];
    v37 = *(_QWORD *)&v34[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title + 8];
  }
  else
  {
    v36 = 0;
    v37 = 0xE000000000000000;
  }
  v39 = *(char **)(v31 + 8 * v30);
  v40 = &v39[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title];
  v41 = *(_QWORD *)&v39[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title + 8];
  if (v41)
  {
    v42 = *(_QWORD *)v40;
    v43 = *((_QWORD *)v40 + 1);
    if (v36 != *(_QWORD *)v40)
      goto LABEL_42;
  }
  else
  {
    v42 = 0;
    v43 = 0xE000000000000000;
    if (v36)
    {
LABEL_42:
      v157 = _stringCompareWithSmolCheck(_:_:expecting:)(v36, v37, v42, v43, 1);
      goto LABEL_43;
    }
  }
  if (v37 != v43)
    goto LABEL_42;
  v157 = 0;
LABEL_43:
  swift_bridgeObjectRetain(v41);
  v44 = v34;
  v45 = v39;
  swift_bridgeObjectRetain(v35);

  swift_bridgeObjectRelease(v43);
  swift_bridgeObjectRelease(v37);
  v38 = v150;
  v4 = v151;
  v33 = v150 + 2;
  if (v150 + 2 >= v151)
  {
    v29 = v149;
    v31 = v161;
  }
  else
  {
    v46 = (void **)(v144 + 8 * v150);
    while (1)
    {
      v47 = *v46;
      v48 = (uint64_t *)((char *)*v46 + OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title);
      v49 = v48[1];
      if (v49)
      {
        v50 = *v48;
        v51 = v48[1];
      }
      else
      {
        v50 = 0;
        v51 = 0xE000000000000000;
      }
      v52 = (char *)*(v46 - 1);
      v53 = &v52[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title];
      v54 = *(_QWORD *)&v52[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title + 8];
      if (v54)
      {
        v55 = *(_QWORD *)v53;
        v56 = *((_QWORD *)v53 + 1);
      }
      else
      {
        v55 = 0;
        v56 = 0xE000000000000000;
      }
      v57 = v33;
      if (v50 == v55 && v51 == v56)
        v58 = 0;
      else
        v58 = _stringCompareWithSmolCheck(_:_:expecting:)(v50, v51, v55, v56, 1);
      swift_bridgeObjectRetain(v54);
      v59 = v47;
      v60 = v52;
      swift_bridgeObjectRetain(v49);

      swift_bridgeObjectRelease(v56);
      swift_bridgeObjectRelease(v51);
      if (((v157 ^ v58) & 1) != 0)
        break;
      v33 = v57 + 1;
      ++v46;
      v4 = v151;
      v29 = v149;
      v31 = v161;
      if (v151 == v57 + 1)
      {
        v33 = v151;
        goto LABEL_60;
      }
    }
    v4 = v151;
    v29 = v149;
    v31 = v161;
    v33 = v57;
LABEL_60:
    v38 = v150;
  }
  v2 = v146;
  if ((v157 & 1) != 0)
  {
    if (v33 < v38)
      goto LABEL_180;
    if (v38 < v33)
    {
      v61 = (uint64_t *)(v143 + 8 * v33);
      v62 = v33;
      v63 = v38;
      v64 = (uint64_t *)(v31 + 8 * v38);
      do
      {
        if (v63 != --v62)
        {
          if (!v31)
            goto LABEL_186;
          v65 = *v64;
          *v64 = *v61;
          *v61 = v65;
        }
        ++v63;
        --v61;
        ++v64;
      }
      while (v63 < v62);
    }
  }
LABEL_69:
  if (v33 >= v4)
    goto LABEL_96;
  if (__OFSUB__(v33, v38))
    goto LABEL_178;
  if (v33 - v38 >= v145)
    goto LABEL_96;
  if (__OFADD__(v38, v145))
    goto LABEL_181;
  if (v38 + v145 >= v4)
    v66 = v4;
  else
    v66 = v38 + v145;
  if (v66 >= v38)
  {
    if (v33 == v66)
      goto LABEL_96;
    v147 = v2;
    v148 = v66;
    v67 = v143 + 8 * v33;
LABEL_82:
    v158 = v33;
    v71 = *(char **)(v31 + 8 * v33);
    v72 = v38;
    v153 = v67;
    while (1)
    {
      v73 = *(_QWORD *)&v71[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title + 8];
      if (v73)
      {
        v74 = *(_QWORD *)&v71[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title];
        v75 = *(_QWORD *)&v71[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title + 8];
      }
      else
      {
        v74 = 0;
        v75 = 0xE000000000000000;
      }
      v76 = *(void **)v67;
      v77 = (uint64_t *)(*(_QWORD *)v67 + OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title);
      v78 = v77[1];
      if (v78)
      {
        v79 = *v77;
        v80 = v77[1];
        if (v74 != *v77)
          goto LABEL_91;
      }
      else
      {
        v79 = 0;
        v80 = 0xE000000000000000;
        if (v74)
          goto LABEL_91;
      }
      if (v75 == v80)
      {
        swift_bridgeObjectRetain(v77[1]);
        v68 = v71;
        v69 = v76;
        swift_bridgeObjectRetain(v73);

        swift_bridgeObjectRelease_n(v75, 2);
LABEL_80:
        v70 = v158;
        v31 = v161;
LABEL_81:
        v33 = v70 + 1;
        v67 = v153 + 8;
        v38 = v150;
        if (v33 != v148)
          goto LABEL_82;
        v33 = v148;
        v2 = v147;
        v29 = v149;
LABEL_96:
        if (v33 < v38)
          goto LABEL_173;
        if ((swift_isUniquelyReferenced_nonNull_native(v29) & 1) == 0)
          v29 = sub_10020C830(0, *((_QWORD *)v29 + 2) + 1, 1, v29);
        v86 = *((_QWORD *)v29 + 2);
        v85 = *((_QWORD *)v29 + 3);
        v32 = v86 + 1;
        v31 = v161;
        if (v86 >= v85 >> 1)
        {
          v134 = sub_10020C830((char *)(v85 > 1), v86 + 1, 1, v29);
          v31 = v161;
          v29 = v134;
        }
        *((_QWORD *)v29 + 2) = v32;
        v87 = v29 + 32;
        v88 = &v29[16 * v86 + 32];
        *(_QWORD *)v88 = v38;
        *((_QWORD *)v88 + 1) = v33;
        v159 = v33;
        if (v86)
        {
LABEL_102:
          v89 = v32 - 1;
          if (v32 >= 4)
          {
            v94 = &v87[16 * v32];
            v95 = *((_QWORD *)v94 - 8);
            v96 = *((_QWORD *)v94 - 7);
            v100 = __OFSUB__(v96, v95);
            v97 = v96 - v95;
            if (v100)
              goto LABEL_162;
            v99 = *((_QWORD *)v94 - 6);
            v98 = *((_QWORD *)v94 - 5);
            v100 = __OFSUB__(v98, v99);
            v92 = v98 - v99;
            v93 = v100;
            if (v100)
              goto LABEL_163;
            v101 = v32 - 2;
            v102 = &v87[16 * v32 - 32];
            v104 = *(_QWORD *)v102;
            v103 = *((_QWORD *)v102 + 1);
            v100 = __OFSUB__(v103, v104);
            v105 = v103 - v104;
            if (v100)
              goto LABEL_165;
            v100 = __OFADD__(v92, v105);
            v106 = v92 + v105;
            if (v100)
              goto LABEL_168;
            if (v106 >= v97)
            {
              v124 = &v87[16 * v89];
              v126 = *(_QWORD *)v124;
              v125 = *((_QWORD *)v124 + 1);
              v100 = __OFSUB__(v125, v126);
              v127 = v125 - v126;
              if (v100)
                goto LABEL_172;
              v117 = v92 < v127;
            }
            else
            {
LABEL_115:
              if ((v93 & 1) != 0)
                goto LABEL_164;
              v101 = v32 - 2;
              v107 = &v87[16 * v32 - 32];
              v109 = *(_QWORD *)v107;
              v108 = *((_QWORD *)v107 + 1);
              v110 = __OFSUB__(v108, v109);
              v111 = v108 - v109;
              v112 = v110;
              if (v110)
                goto LABEL_167;
              v113 = &v87[16 * v89];
              v115 = *(_QWORD *)v113;
              v114 = *((_QWORD *)v113 + 1);
              v100 = __OFSUB__(v114, v115);
              v116 = v114 - v115;
              if (v100)
                goto LABEL_170;
              if (__OFADD__(v111, v116))
                goto LABEL_171;
              if (v111 + v116 < v92)
                goto LABEL_127;
              v117 = v92 < v116;
            }
            if (v117)
              v89 = v101;
          }
          else
          {
            if (v32 == 3)
            {
              v91 = *((_QWORD *)v29 + 4);
              v90 = *((_QWORD *)v29 + 5);
              v100 = __OFSUB__(v90, v91);
              v92 = v90 - v91;
              v93 = v100;
              goto LABEL_115;
            }
            v118 = *((_QWORD *)v29 + 4);
            v119 = *((_QWORD *)v29 + 5);
            v100 = __OFSUB__(v119, v118);
            v111 = v119 - v118;
            v112 = v100;
LABEL_127:
            if ((v112 & 1) != 0)
              goto LABEL_166;
            v120 = &v87[16 * v89];
            v122 = *(_QWORD *)v120;
            v121 = *((_QWORD *)v120 + 1);
            v100 = __OFSUB__(v121, v122);
            v123 = v121 - v122;
            if (v100)
              goto LABEL_169;
            if (v123 < v111)
              goto LABEL_30;
          }
          v128 = v89 - 1;
          if (v89 - 1 >= v32)
          {
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
LABEL_171:
            __break(1u);
LABEL_172:
            __break(1u);
LABEL_173:
            __break(1u);
LABEL_174:
            __break(1u);
LABEL_175:
            __break(1u);
LABEL_176:
            __break(1u);
LABEL_177:
            __break(1u);
LABEL_178:
            __break(1u);
LABEL_179:
            __break(1u);
LABEL_180:
            __break(1u);
LABEL_181:
            __break(1u);
            break;
          }
          if (!v31)
            goto LABEL_185;
          v129 = &v87[16 * v128];
          v130 = *(_QWORD *)v129;
          v131 = &v87[16 * v89];
          v132 = *((_QWORD *)v131 + 1);
          sub_10042AF64((void **)(v31 + 8 * *(_QWORD *)v129), (void **)(v31 + 8 * *(_QWORD *)v131), v31 + 8 * v132, v154);
          if (v2)
            goto LABEL_156;
          if (v132 < v130)
            goto LABEL_159;
          if (v89 > *((_QWORD *)v29 + 2))
            goto LABEL_160;
          *(_QWORD *)v129 = v130;
          *(_QWORD *)&v87[16 * v128 + 8] = v132;
          v133 = *((_QWORD *)v29 + 2);
          if (v89 >= v133)
            goto LABEL_161;
          v32 = v133 - 1;
          memmove(&v87[16 * v89], v131 + 16, 16 * (v133 - 1 - v89));
          *((_QWORD *)v29 + 2) = v133 - 1;
          v31 = v161;
          if (v133 <= 2)
            goto LABEL_30;
          goto LABEL_102;
        }
        v32 = 1;
LABEL_30:
        v30 = v159;
        v4 = v151;
        if (v159 >= v151)
          goto LABEL_145;
        goto LABEL_31;
      }
LABEL_91:
      v81 = _stringCompareWithSmolCheck(_:_:expecting:)(v74, v75, v79, v80, 1);
      swift_bridgeObjectRetain(v78);
      v82 = v71;
      v83 = v76;
      swift_bridgeObjectRetain(v73);

      swift_bridgeObjectRelease(v80);
      swift_bridgeObjectRelease(v75);
      if ((v81 & 1) == 0)
        goto LABEL_80;
      v70 = v158;
      v31 = v161;
      if (!v161)
        goto LABEL_184;
      v84 = *(void **)v67;
      v71 = *(char **)(v67 + 8);
      *(_QWORD *)v67 = v71;
      *(_QWORD *)(v67 + 8) = v84;
      v67 -= 8;
      if (v158 == ++v72)
        goto LABEL_81;
    }
  }
  __break(1u);
LABEL_183:
  __break(1u);
LABEL_184:
  __break(1u);
LABEL_185:
  __break(1u);
LABEL_186:
  __break(1u);
LABEL_187:
  __break(1u);
LABEL_188:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

uint64_t sub_10042AF64(void **__src, void **a2, unint64_t a3, void **a4)
{
  void **v4;
  void **v5;
  int64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  void *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  id v24;
  char v25;
  id v26;
  id v27;
  void **v28;
  void **v29;
  char *v30;
  void **v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  void **v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  void **v42;
  char *v43;
  char *v44;
  uint64_t result;
  char *v47;
  char *v48;
  char v49;
  unint64_t v51;
  void **v52;
  void **v53;
  void **v54;
  void **v55;
  char *v56;
  void **v57;
  void **v58;

  v4 = a2;
  v5 = __src;
  v6 = (char *)a2 - (char *)__src;
  v7 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v7 = (char *)a2 - (char *)__src;
  v8 = v7 >> 3;
  v9 = a3 - (_QWORD)a2;
  v10 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v10 = a3 - (_QWORD)a2;
  v11 = v10 >> 3;
  v58 = __src;
  v57 = a4;
  if (v8 >= v10 >> 3)
  {
    if (v9 >= -7)
    {
      if (a4 != a2 || &a2[v11] <= a4)
        memmove(a4, a2, 8 * v11);
      v30 = (char *)&a4[v11];
      v56 = v30;
      v58 = v4;
      if (v5 < v4 && v9 >= 8)
      {
        v31 = (void **)(a3 - 8);
        v53 = v5;
        do
        {
          v32 = (char *)*((_QWORD *)v30 - 1);
          v33 = *(_QWORD *)&v32[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title + 8];
          v51 = (unint64_t)v30;
          v47 = v30 - 8;
          if (v33)
          {
            v34 = *(_QWORD *)&v32[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title];
            v35 = *(_QWORD *)&v32[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title + 8];
          }
          else
          {
            v34 = 0;
            v35 = 0xE000000000000000;
          }
          v37 = v4 - 1;
          v36 = (char *)*(v4 - 1);
          v38 = &v36[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title];
          v39 = *(_QWORD *)&v36[OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title + 8];
          if (v39)
          {
            v40 = *(_QWORD *)v38;
            v41 = *((_QWORD *)v38 + 1);
          }
          else
          {
            v40 = 0;
            v41 = 0xE000000000000000;
          }
          v55 = v4;
          if (v34 == v40 && v35 == v41)
            v49 = 0;
          else
            v49 = _stringCompareWithSmolCheck(_:_:expecting:)(v34, v35, v40, v41, 1);
          v42 = v31 + 1;
          swift_bridgeObjectRetain(v39);
          v43 = v32;
          v44 = v36;
          swift_bridgeObjectRetain(v33);

          swift_bridgeObjectRelease(v41);
          swift_bridgeObjectRelease(v35);
          if ((v49 & 1) != 0)
          {
            v30 = (char *)v51;
            if (v42 != v55 || v31 >= v55)
              *v31 = *v37;
            v58 = v37;
          }
          else
          {
            v30 = v47;
            v56 = v47;
            if ((unint64_t)v42 < v51 || (unint64_t)v31 >= v51)
            {
              *v31 = *(void **)v47;
              v37 = v55;
            }
            else
            {
              v37 = v55;
              if (v42 != (void **)v51)
                *v31 = *(void **)v47;
            }
          }
          if (v37 <= v53)
            break;
          --v31;
          v4 = v37;
        }
        while (v30 > (char *)a4);
      }
LABEL_62:
      sub_10020CC20(&v58, &v57, &v56);
      return 1;
    }
  }
  else if (v6 >= -7)
  {
    if (a4 != __src || &__src[v8] <= a4)
      memmove(a4, __src, 8 * v8);
    v48 = (char *)&a4[v8];
    v56 = v48;
    if ((unint64_t)v4 < a3 && v6 >= 8)
    {
      v12 = a4;
      while (1)
      {
        v13 = *v4;
        v14 = (uint64_t *)((char *)*v4 + OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title);
        v15 = v14[1];
        v54 = v4;
        if (v15)
        {
          v16 = *v14;
          v17 = v14[1];
        }
        else
        {
          v16 = 0;
          v17 = 0xE000000000000000;
        }
        v18 = *v12;
        v19 = (uint64_t *)((char *)*v12 + OBJC_IVAR____TtC6FindMy18FMDeletableRowView_title);
        v20 = v19[1];
        if (v20)
        {
          v21 = *v19;
          v22 = v19[1];
        }
        else
        {
          v21 = 0;
          v22 = 0xE000000000000000;
        }
        v52 = v5;
        if (v16 == v21 && v17 == v22)
        {
          swift_bridgeObjectRetain(v20);
          v23 = v13;
          v24 = v18;
          swift_bridgeObjectRetain(v15);

          swift_bridgeObjectRelease_n(v17, 2);
        }
        else
        {
          v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, v21, v22, 1);
          swift_bridgeObjectRetain(v20);
          v26 = v13;
          v27 = v18;
          swift_bridgeObjectRetain(v15);

          swift_bridgeObjectRelease(v22);
          swift_bridgeObjectRelease(v17);
          if ((v25 & 1) != 0)
          {
            v28 = v52;
            v29 = v54 + 1;
            if (v52 < v54 || v52 >= v29 || v52 != v54)
              *v52 = *v54;
            goto LABEL_30;
          }
        }
        v28 = v52;
        if (v52 != v12)
          *v52 = *v12;
        v57 = ++v12;
        v29 = v54;
LABEL_30:
        v5 = v28 + 1;
        if (v12 < (void **)v48)
        {
          v4 = v29;
          if ((unint64_t)v29 < a3)
            continue;
        }
        v58 = v5;
        goto LABEL_62;
      }
    }
    goto LABEL_62;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

id sub_10042B3C0(uint64_t a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  objc_super v9;

  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_maxNumberSafeLocations] = 20;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_locationsRow] = _swiftEmptyArrayStorage;
  v3 = &v1[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_delegate];
  *((_QWORD *)v3 + 1) = 0;
  swift_unknownObjectWeakInit(v3);
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_safeLocations] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_snapshotMemoryCache] = &_swiftEmptyDictionarySingleton;
  v4 = OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_mapSnapshotter;
  v5 = type metadata accessor for FMMapSnapshotter();
  swift_allocObject(v5, 32, 7);
  v6 = v1;
  *(_QWORD *)&v1[v4] = sub_1000EFEC0();
  v7 = &v6[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_beaconUUID];
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_groupBeaconUUIDs] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_numSafeLocations] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_mediator] = a1;
  swift_retain(a1);

  v9.receiver = v6;
  v9.super_class = (Class)type metadata accessor for FMSafeLocationSuggestionsView();
  return objc_msgSendSuper2(&v9, "init");
}

uint64_t sub_10042B4DC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100053F2C((uint64_t *)&unk_1005E2270);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10042B51C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for FMIPSafeLocation(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_10042B590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;

  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMIPSafeLocation(0) - 8) + 80);
  sub_100429E08(a1, a2, a3, a4, *(char **)(v4 + 16), v4 + ((v9 + 24) & ~v9));
}

uint64_t sub_10042B5F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C(&qword_1005E4888);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10042B640()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10042B67C()
{
  uint64_t v0;

  return sub_100429330(*(char **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

void sub_10042B68C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;

  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_maxNumberSafeLocations] = 20;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_locationsRow] = _swiftEmptyArrayStorage;
  v1 = &v0[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_delegate];
  *((_QWORD *)v1 + 1) = 0;
  swift_unknownObjectWeakInit(v1);
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_safeLocations] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_snapshotMemoryCache] = &_swiftEmptyDictionarySingleton;
  v2 = OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_mapSnapshotter;
  v3 = type metadata accessor for FMMapSnapshotter();
  swift_allocObject(v3, 32, 7);
  *(_QWORD *)&v0[v2] = sub_1000EFEC0();
  v4 = &v0[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_beaconUUID];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_groupBeaconUUIDs] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_numSafeLocations] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMSafeLocationSuggestionsView.swift", 42, 2, 44, 0);
  __break(1u);
}

uint64_t sub_10042B7A0(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  Swift::Int v27;
  uint64_t result;
  Swift::Int v29;
  void (*v30)(_BYTE *, _QWORD);
  void (*v31)(char *);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *);
  uint64_t v48;
  char *v49;
  Swift::Int v50;
  uint64_t v51;
  _BYTE v52[32];
  uint64_t v53;

  v39 = a5;
  v40 = a8;
  v47 = a1;
  v48 = a2;
  v38 = *(_QWORD *)(a5 - 8);
  __chkstk_darwin(a1);
  v49 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(v13 + 8));
  v15 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v16 = __chkstk_darwin(AssociatedTypeWitness);
  v18 = (char *)&v38 - v17;
  __chkstk_darwin(v16);
  v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = swift_getAssociatedTypeWitness(0, a6);
  v41 = *(_QWORD *)(v21 - 8);
  v42 = v21;
  __chkstk_darwin(v21);
  v23 = (char *)&v38 - v22;
  v24 = dispatch thunk of Collection.count.getter(a3, a6);
  if (!v24)
    return static Array._allocateUninitialized(_:)(0, a4);
  v45 = AssociatedTypeWitness;
  v25 = v8;
  v26 = a4;
  v27 = v24;
  v53 = ContiguousArray.init()(v26);
  v43 = type metadata accessor for ContiguousArray(0, v26);
  ContiguousArray.reserveCapacity(_:)(v27);
  v46 = v25;
  result = dispatch thunk of Collection.startIndex.getter(a3, a6);
  if ((v27 & 0x8000000000000000) == 0)
  {
    v29 = v27;
    v44 = v20;
    while (v29)
    {
      v50 = v29;
      v30 = (void (*)(_BYTE *, _QWORD))dispatch thunk of Collection.subscript.read(v52, v23, a3, a6);
      v31 = *(void (**)(char *))(v15 + 16);
      v32 = v15;
      v33 = v45;
      v31(v18);
      v30(v52, 0);
      v34 = v23;
      v35 = v18;
      v36 = v44;
      v37 = v51;
      v47(v35, v49);
      if (v37)
      {
        (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v33);
        (*(void (**)(char *, uint64_t))(v41 + 8))(v34, v42);
        swift_release(v53);
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v38 + 32))(v40, v49, v39);
      }
      v51 = 0;
      (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v33);
      ContiguousArray.append(_:)(v36, v43);
      result = dispatch thunk of Collection.formIndex(after:)(v34, a3, a6);
      v29 = v50 - 1;
      v15 = v32;
      v18 = v35;
      v23 = v34;
      if (v50 == 1)
      {
        (*(void (**)(char *, uint64_t))(v41 + 8))(v34, v42);
        return v53;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10042BA90()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_1005E4940);
}

uint64_t sub_10042BAA0(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + qword_1005E4940) = result;
  return result;
}

void sub_10042BAB0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  id v3;
  id v4;
  double v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  double v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t ObjCClassFromMetadata;
  NSString v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  char *v34;
  _QWORD v35[5];
  uint64_t v36;

  v1 = v0;
  v2 = swift_isaMask & *(_QWORD *)v0;
  v3 = objc_msgSend(v0, "layer");
  objc_msgSend(v3, "setCornerCurve:", kCACornerCurveContinuous);

  v4 = objc_msgSend(v0, "layer");
  v5 = _UISheetCornerRadius;
  objc_msgSend(v4, "setCornerRadius:", _UISheetCornerRadius);

  v6 = objc_msgSend(v0, "layer");
  objc_msgSend(v6, "setMasksToBounds:", 0);

  v7 = objc_msgSend(v0, "layer");
  v8 = (void *)objc_opt_self(UIColor);
  v9 = objc_msgSend(v8, "blackColor");
  v10 = objc_msgSend(v9, "CGColor");

  objc_msgSend(v7, "setShadowColor:", v10);
  v11 = objc_msgSend(v0, "layer");
  LODWORD(v12) = 1031127695;
  objc_msgSend(v11, "setShadowOpacity:", v12);

  v13 = objc_msgSend(v0, "layer");
  objc_msgSend(v13, "setShadowRadius:", 16.0);

  v14 = objc_msgSend(v0, "layer");
  objc_msgSend(v14, "setShadowOffset:", 0.0, 0.0);

  objc_msgSend(v0, "setAxis:", 1);
  objc_msgSend(v0, "setDistribution:", 0);
  objc_msgSend(v0, "setAlignment:", 0);
  objc_msgSend(v1, "addArrangedSubview:", *(_QWORD *)&v1[qword_1005E4938]);
  v15 = *(void **)&v0[qword_1005E4930];
  objc_msgSend(v1, "addArrangedSubview:", *(_QWORD *)&v1[qword_1005E4930]);
  objc_msgSend(v15, "setDelegate:", v0);
  objc_msgSend(v15, "setDataSource:", *(_QWORD *)&v0[qword_1005E4928]);
  v16 = objc_msgSend(v8, "clearColor");
  objc_msgSend(v15, "setBackgroundColor:", v16);

  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v17 = sub_100006C5C(0, &qword_1005E27C0, UITableViewCell_ptr);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v17);
  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v15, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v19, swift_bridgeObjectRelease(0x80000001004C6790).n128_f64[0]);

  objc_msgSend(v15, "setSectionHeaderTopPadding:", 0.0);
  objc_msgSend(v15, "setScrollEnabled:", 0);
  objc_msgSend(v15, "setContentInsetAdjustmentBehavior:", 2);
  objc_msgSend(v15, "setFrame:", CGRectInfinite.origin.x, CGRectInfinite.origin.y, CGRectInfinite.size.width, CGRectInfinite.size.height);
  v20 = objc_msgSend(objc_allocWithZone((Class)UIView), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v15, "setTableFooterView:", v20);

  v21 = objc_msgSend(v15, "layer");
  objc_msgSend(v21, "setCornerCurve:", kCACornerCurveContinuous);

  v22 = objc_msgSend(v15, "layer");
  objc_msgSend(v22, "setCornerRadius:", v5);

  v23 = objc_msgSend(v15, "layer");
  objc_msgSend(v23, "setMasksToBounds:", 1);

  dispatch thunk of UITableViewDiffableDataSource.defaultRowAnimation.setter(0);
  v24 = *(_QWORD *)&v1[qword_1005E4920];
  v25 = swift_allocObject(&unk_100566910, 24, 7);
  swift_unknownObjectWeakInit(v25 + 16);
  v26 = swift_allocObject(&unk_100566938, 48, 7);
  *(_OWORD *)(v26 + 16) = *(_OWORD *)(v2 + 80);
  *(_QWORD *)(v26 + 32) = *(_QWORD *)(v2 + 96);
  *(_QWORD *)(v26 + 40) = v25;
  v28 = *(_QWORD *)(v24 + 32);
  v27 = *(_QWORD *)(v24 + 40);
  *(_QWORD *)(v24 + 32) = sub_10042FF10;
  *(_QWORD *)(v24 + 40) = v26;
  sub_1000327F0(v28, v27);
  v29 = (void *)objc_opt_self(UIView);
  v30 = swift_allocObject(&unk_100566960, 24, 7);
  *(_QWORD *)(v30 + 16) = v1;
  v31 = swift_allocObject(&unk_100566988, 32, 7);
  *(_QWORD *)(v31 + 16) = sub_10042FF1C;
  *(_QWORD *)(v31 + 24) = v30;
  v35[4] = sub_1001D60BC;
  v36 = v31;
  v35[0] = _NSConcreteStackBlock;
  v35[1] = 1107296256;
  v35[2] = sub_100021E38;
  v35[3] = &unk_1005669A0;
  v32 = _Block_copy(v35);
  v33 = v36;
  v34 = v1;
  swift_retain(v31);
  objc_msgSend(v29, "performWithoutAnimation:", v32, swift_release(v33).n128_f64[0]);
  _Block_release(v32);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation(v31, "", 130, 317, 40, 1);
  swift_release(v30);
  swift_release(v31);
  if ((v1 & 1) != 0)
    __break(1u);
}

void sub_10042C0A8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t *, uint64_t, uint64_t);
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  NSString v11;
  double v12;
  double v13;
  uint64_t v14;
  void *v15;
  NSString v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[6];
  _QWORD v30[6];
  _QWORD v31[5];
  char v32;
  id v33[6];
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v2 = v1;
  v4 = type metadata accessor for FMModernPlatterView.FMModernPlatterViewHeaderConfiguration(255, *(_QWORD *)((swift_isaMask & *v1) + 0x50), *(_QWORD *)((swift_isaMask & *v1) + 0x58), *(_QWORD *)((swift_isaMask & *v1) + 0x60));
  v5 = type metadata accessor for Optional(0, v4);
  v6 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32);
  v6(v29, a1, v5);
  v7 = v29[0];
  v8 = *(char **)((char *)v1 + qword_1005E4938);
  v6(&v36, a1, v5);
  v27 = v7;
  if (v36)
  {
    v9 = v37;
    v10 = *(void **)&v8[OBJC_IVAR____TtC6FindMy25FMModernPlatterHeaderView_titleLabel];
    swift_bridgeObjectRetain(v37);
    v11 = String._bridgeToObjectiveC()();
  }
  else
  {
    v11 = 0;
    v9 = 0;
    v10 = *(void **)&v8[OBJC_IVAR____TtC6FindMy25FMModernPlatterHeaderView_titleLabel];
  }
  objc_msgSend(v10, "setText:", v11, v27);

  if (v9)
    *(_QWORD *)&v12 = swift_bridgeObjectRelease(v9).n128_u64[0];
  objc_msgSend(v10, "setHidden:", v9 == 0, v12);
  v6(v34, a1, v5);
  if (v34[0])
  {
    v14 = v35;
    v15 = *(void **)&v8[OBJC_IVAR____TtC6FindMy25FMModernPlatterHeaderView_subtitleLabel];
    if (v35)
    {
      swift_bridgeObjectRetain(v35);
      v16 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v13 = swift_bridgeObjectRelease(v14).n128_u64[0];
    }
    else
    {
      v16 = 0;
    }
  }
  else
  {
    v16 = 0;
    v15 = *(void **)&v8[OBJC_IVAR____TtC6FindMy25FMModernPlatterHeaderView_subtitleLabel];
  }
  objc_msgSend(v15, "setText:", v16, v13);

  v17 = objc_msgSend(v15, "text");
  v18 = v17;
  if (v17)

  objc_msgSend(v15, "setHidden:", v18 == 0);
  v6((uint64_t *)v33, a1, v5);
  v19 = v33[0];
  if (v33[0])
    v20 = v33[0];
  v21 = *(void **)&v8[OBJC_IVAR____TtC6FindMy25FMModernPlatterHeaderView_iconView];
  objc_msgSend(v21, "setImage:", v19);
  objc_msgSend(v21, "setHidden:", v19 == 0);

  v6(v31, a1, v5);
  sub_1001462C4((v31[0] != 0) & v32);
  objc_msgSend(v8, "setHidden:", v28 == 0);
  v22 = *(void **)((char *)v2 + qword_1005E4930);
  objc_msgSend(v22, "reloadData");
  v6(v30, a1, v5);
  v23 = v30[0];
  v24 = objc_msgSend(v22, "layer");
  v25 = v24;
  if (v23)
    v26 = 12;
  else
    v26 = 15;
  objc_msgSend(v24, "setMaskedCorners:", v26);

}

void sub_10042C3A0(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t WitnessTable;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  Swift::OpaquePointer v26;
  uint64_t v27;
  uint64_t KeyPath;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  Swift::Bool IsNativeType;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  Swift::OpaquePointer v53;
  __n128 v54;
  void (*v55)(char *, uint64_t, __n128);
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  double v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  _QWORD *v65;
  void *v66;
  _QWORD *v67;
  _BYTE *v68;
  id v69;
  _QWORD *v70;
  void *v71;
  _QWORD *v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  void (*v91)(uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  char v94[16];
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void **aBlock;
  uint64_t v102;
  void *v103;
  void *v104;
  void (*v105)();
  _QWORD *v106;
  uint64_t v107;
  _QWORD v108[4];
  unsigned __int8 v109;

  v3 = (_QWORD *)(swift_isaMask & *v1);
  v5 = v3[10];
  v4 = v3[11];
  v6 = *(_QWORD *)(v4 + 8);
  v81 = v4;
  v80 = v6;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v6);
  v92 = *(_QWORD *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  v90 = (char *)&v74 - v8;
  v84 = type metadata accessor for Optional(0, v5);
  v83 = *(_QWORD *)(v84 - 8);
  v9 = __chkstk_darwin(v84);
  v89 = (char *)&v74 - v10;
  v11 = *(_QWORD *)(v5 - 8);
  v12 = __chkstk_darwin(v9);
  v85 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v79 = (char *)&v74 - v15;
  v74 = v16;
  __chkstk_darwin(v14);
  v18 = (char *)&v74 - v17;
  v19 = v3[12];
  v20 = type metadata accessor for FMModernPlatterView.Section(255, v5, v4, v19);
  WitnessTable = swift_getWitnessTable(&unk_1004910F8, v20);
  v108[0] = v20;
  v108[1] = AssociatedTypeWitness;
  v93 = AssociatedTypeWitness;
  v108[2] = WitnessTable;
  v108[3] = v19;
  v78 = type metadata accessor for NSDiffableDataSourceSnapshot(0, v108);
  v75 = swift_allocBox(v78);
  v23 = v22;
  NSDiffableDataSourceSnapshot.init()(v20, AssociatedTypeWitness, WitnessTable, v19);
  v24 = type metadata accessor for _ContiguousArrayStorage(0, v20);
  v25 = swift_allocObject(v24, 33, 7);
  v26._rawValue = (void *)static Array._adoptStorage(_:count:)(v25, 1);
  type metadata accessor for Array(0, v20);
  NSDiffableDataSourceSnapshot.appendSections(_:)(v26);
  swift_bridgeObjectRelease(v26._rawValue);
  v108[0] = a1;
  v98 = v5;
  v27 = v81;
  v99 = v81;
  v100 = v19;
  KeyPath = swift_getKeyPath(&unk_100491160);
  v95 = v27;
  v96 = v19;
  v97 = KeyPath;
  v29 = type metadata accessor for Array(0, v5);
  v30 = swift_getWitnessTable(&protocol conformance descriptor for [A], v29);
  v31 = v79;
  v32 = v80;
  v34 = sub_10042B7A0((void (*)(char *, char *))sub_10042FD40, (uint64_t)v94, v29, v93, (uint64_t)&type metadata for Never, v30, (uint64_t)&protocol witness table for Never, v33);
  swift_release(KeyPath);
  LOBYTE(v108[0]) = 0;
  v77 = v23;
  NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v34, v108, v78);
  swift_bridgeObjectRelease(v34);
  swift_bridgeObjectRetain(a1);
  if (Array.endIndex.getter(v35, v5))
  {
    v36 = 0;
    v91 = *(void (**)(uint64_t, uint64_t))(v32 + 32);
    v88 = *(_QWORD *)&v76[qword_1005E4920];
    v87 = a1;
    v82 = v11;
    v86 = v18;
    do
    {
      IsNativeType = Array._hoistableIsNativeTypeChecked()();
      Array._checkSubscript(_:wasNativeTypeChecked:)(v36, IsNativeType, a1, v5);
      if (IsNativeType)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v18, a1+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v36, v5);
        v38 = v36 + 1;
        if (__OFADD__(v36, 1))
          goto LABEL_18;
      }
      else
      {
        v56 = _ArrayBuffer._getElementSlowPath(_:)(v36, a1, v5);
        if (v74 != 8)
        {
          __break(1u);
          return;
        }
        v57 = v56;
        aBlock = (void **)v56;
        (*(void (**)(char *, void ***, uint64_t))(v11 + 16))(v18, &aBlock, v5);
        swift_unknownObjectRelease(v57);
        v38 = v36 + 1;
        if (__OFADD__(v36, 1))
        {
LABEL_18:
          __break(1u);
          break;
        }
      }
      v39 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v39(v31, v18, v5);
      v40 = (uint64_t)v90;
      v91(v5, v32);
      v41 = v32;
      v42 = v31;
      v43 = v89;
      sub_10042DE50(v40);
      v44 = v43;
      (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v40, v93);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v43, 1, v5) == 1)
      {
        (*(void (**)(char *, uint64_t))(v11 + 8))(v42, v5);
        (*(void (**)(char *, uint64_t))(v83 + 8))(v43, v84);
      }
      else
      {
        v45 = v85;
        v39(v85, v44, v5);
        if ((dispatch thunk of static Equatable.== infix(_:_:)(v45, v42, v5, *(_QWORD *)(*(_QWORD *)(v41 + 8) + 8)) & 1) == 0)
        {
          (*(void (**)(uint64_t *__return_ptr, uint64_t))(v81 + 16))(&v107, v5);
          sub_10025351C((uint64_t)&v107);
          sub_1000C90F4((uint64_t)&v107, (uint64_t)v108);
          v47 = v92;
          v48 = v41;
          v49 = v109;
          v50 = v93;
          v51 = sub_10042F96C(v93, v93);
          v52 = swift_allocObject(v51, ((*(unsigned __int8 *)(v47 + 80) + (unint64_t)*(unsigned int *)(v51 + 48)) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(_QWORD *)(v47 + 72), *(unsigned __int8 *)(v47 + 80) | (unint64_t)*(unsigned __int16 *)(v51 + 52));
          v53._rawValue = (void *)static Array._adoptStorage(_:count:)(v52, 1);
          v91(v5, v48);
          type metadata accessor for Array(0, v50);
          if (v49 == 2)
            NSDiffableDataSourceSnapshot.reloadItems(_:)(v53);
          else
            NSDiffableDataSourceSnapshot.reconfigureItems(_:)(v53);
          v18 = v86;
          v11 = v82;
          v54 = swift_bridgeObjectRelease(v53._rawValue);
          v55 = *(void (**)(char *, uint64_t, __n128))(v11 + 8);
          v55(v85, v5, v54);
          v31 = v79;
          ((void (*)(char *, uint64_t))v55)(v79, v5);
          v32 = v80;
          a1 = v87;
          goto LABEL_5;
        }
        v11 = v82;
        v46 = *(void (**)(char *, uint64_t))(v82 + 8);
        v46(v45, v5);
        v46(v42, v5);
      }
      v18 = v86;
      a1 = v87;
      v31 = v42;
      v32 = v41;
LABEL_5:
      ++v36;
    }
    while (v38 != Array.endIndex.getter(a1, v5));
  }
  swift_bridgeObjectRelease(a1);
  v58 = v76;
  sub_10042DB24(a1);
  if (v58[qword_1005E4940])
    v59 = 0.3;
  else
    v59 = 0.0;
  v60 = *(void **)&v58[qword_1005E4930];
  v61 = swift_allocObject(&unk_100566820, 32, 7);
  v62 = v75;
  *(_QWORD *)(v61 + 16) = v58;
  *(_QWORD *)(v61 + 24) = v62;
  v63 = swift_allocObject(&unk_100566848, 24, 7);
  *(_QWORD *)(v63 + 16) = v58;
  v64 = (void *)objc_opt_self(UIView);
  v65 = (_QWORD *)swift_allocObject(&unk_100566870, 40, 7);
  v65[2] = v60;
  v65[3] = sub_10042FD94;
  v65[4] = v61;
  v105 = sub_10042FDF4;
  v106 = v65;
  aBlock = _NSConcreteStackBlock;
  v102 = 1107296256;
  v103 = sub_100037DF8;
  v104 = &unk_100566888;
  v66 = _Block_copy(&aBlock);
  v67 = v106;
  v68 = v58;
  swift_retain(v62);
  v69 = v60;
  swift_retain(v61);
  swift_release(v67);
  v70 = (_QWORD *)swift_allocObject(&unk_1005668C0, 40, 7);
  v70[2] = sub_10042FDC0;
  v70[3] = v63;
  v70[4] = v69;
  v105 = sub_10042FE7C;
  v106 = v70;
  aBlock = _NSConcreteStackBlock;
  v102 = 1107296256;
  v103 = sub_10005D218;
  v104 = &unk_1005668D8;
  v71 = _Block_copy(&aBlock);
  v72 = v106;
  v73 = v69;
  swift_retain(v63);
  swift_release(v72);
  objc_msgSend(v64, "animateWithDuration:delay:options:animations:completion:", 4, v66, v71, v59, 0.0);
  _Block_release(v71);
  _Block_release(v66);
  swift_release(v62);
  swift_release(v61);
  swift_release(v63);
}

void sub_10042CC90(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD v6[7];
  _BYTE v7[56];

  v2 = swift_isaMask & *v1;
  v3 = *(_QWORD *)(v2 + 0x50);
  __chkstk_darwin(a1);
  v5 = (char *)v6 - v4;
  sub_10042DDF0();
  (*(void (**)(char *))((swift_isaMask & *v1) + 0xF0))(v5);
  (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)(v2 + 88) + 16))(v6, v3);
  sub_1000C90F4((uint64_t)v6, (uint64_t)v7);
  __asm { BR              X10 }
}

uint64_t sub_10042CD70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_10025351C(v3 - 192);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

void sub_10042CE8C()
{
  char *v0;
  double v1;
  double v2;
  uint64_t v3;
  void *v4;
  double v5;
  void *v6;
  double v7;
  id v8;

  objc_msgSend(v0, "contentSize");
  v2 = UIRoundToViewScale(v0, v1);
  v3 = OBJC_IVAR____TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView_heightConstraint;
  v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView_heightConstraint];
  if (v4)
    objc_msgSend(v4, "constant");
  else
    v5 = 0.0;
  if (vabdd_f64(v2, UIRoundToViewScale(v0, v5)) > 0.009
    && !*(_QWORD *)&v0[OBJC_IVAR____TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView_resizeBlockCount])
  {
    v6 = *(void **)&v0[v3];
    if (v6)
    {
      v8 = v6;
      objc_msgSend(v0, "contentSize");
      objc_msgSend(v8, "setConstant:", v7);

    }
  }
}

char *sub_10042CF78()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  char *v7;
  NSString v8;
  objc_super v10;

  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView_heightConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView_resizeBlockCount] = 0;
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for FMModernPlatterTableView();
  v1 = (char *)objc_msgSendSuper2(&v10, "initWithFrame:style:", 0, 0.0, 0.0, 0.0, 0.0);
  v2 = objc_msgSend(v1, "heightAnchor");
  v3 = objc_msgSend(v2, "constraintEqualToConstant:", 0.0);

  v4 = OBJC_IVAR____TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView_heightConstraint;
  v5 = *(void **)&v1[OBJC_IVAR____TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView_heightConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView_heightConstraint] = v3;

  v6 = *(void **)&v1[v4];
  if (v6)
    objc_msgSend(v6, "setActive:", 1);
  v7 = v1;
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "setAccessibilityIdentifier:", v8);

  return v7;
}

void sub_10042D13C(uint64_t a1, void (*a2)(void))
{
  uint64_t v2;
  BOOL v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a1
                 + OBJC_IVAR____TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView_resizeBlockCount);
  v3 = __OFADD__(v2, 1);
  v4 = v2 + 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a1
              + OBJC_IVAR____TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView_resizeBlockCount) = v4;
    a2();
    sub_10042D1CC();
  }
}

void sub_10042D184(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  a2();
  v5 = *(_QWORD *)(a4
                 + OBJC_IVAR____TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView_resizeBlockCount);
  v6 = __OFSUB__(v5, 1);
  v7 = v5 - 1;
  if (v6)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a4
              + OBJC_IVAR____TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView_resizeBlockCount) = v7;
    sub_10042D1CC();
  }
}

void sub_10042D1CC()
{
  char *v0;
  double v1;
  double v2;
  uint64_t v3;
  void *v4;
  double v5;
  void *v6;
  id v7;
  double v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;

  objc_msgSend(v0, "contentSize");
  v2 = UIRoundToViewScale(v0, v1);
  v3 = OBJC_IVAR____TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView_heightConstraint;
  v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView_heightConstraint];
  if (v4)
    objc_msgSend(v4, "constant");
  else
    v5 = 0.0;
  if (vabdd_f64(v2, UIRoundToViewScale(v0, v5)) > 0.009)
  {
    objc_msgSend(v0, "setNeedsLayout");
    objc_msgSend(v0, "layoutIfNeeded");
    v6 = *(void **)&v0[v3];
    if (v6)
    {
      v7 = v6;
      objc_msgSend(v0, "contentSize");
      objc_msgSend(v7, "setConstant:", v8);

    }
    v9 = objc_msgSend(v0, "superview");
    if (v9)
    {
      v10 = v9;
      while (1)
      {
        v11 = objc_opt_self(UIScrollView);
        v12 = (id)swift_dynamicCastObjCClass(v10, v11);
        if (v12)
          break;
        v13 = objc_msgSend(v10, "superview");

        v10 = v13;
        if (!v13)
          goto LABEL_11;
      }
    }
    else
    {
LABEL_11:
      v12 = objc_msgSend(v0, "superview");
    }
    v14 = v12;
    objc_msgSend(v12, "setNeedsLayout");
    objc_msgSend(v14, "layoutIfNeeded");

  }
}

id sub_10042D39C()
{
  return sub_1002844A0(0, type metadata accessor for FMModernPlatterTableView);
}

uint64_t type metadata accessor for FMModernPlatterTableView()
{
  return objc_opt_self(_TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView);
}

char *sub_10042D3DC(uint64_t a1, uint64_t a2, char a3)
{
  char *v3;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  id v10;
  id v11;
  char *v12;
  uint64_t v13;
  id v14;
  NSString v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t inited;
  NSString *v32;
  unint64_t v33;
  id v34;
  id v35;
  id v36;
  id v37;
  NSString v38;
  id v39;
  double height;
  char *v41;
  uint64_t v43;
  objc_super v44;

  v6 = OBJC_IVAR____TtC6FindMy33FMModernPlatterAccessoryLabelView_label;
  v7 = objc_allocWithZone((Class)UILabel);
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, "init");
  v9 = OBJC_IVAR____TtC6FindMy33FMModernPlatterAccessoryLabelView_chevron;
  v10 = sub_1003434F4();
  v11 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v10);

  *(_QWORD *)&v8[v9] = v11;
  v44.receiver = v8;
  v44.super_class = (Class)type metadata accessor for FMModernPlatterAccessoryLabelView();
  v12 = (char *)objc_msgSendSuper2(&v44, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v12, "setAxis:", 0);
  objc_msgSend(v12, "setSpacing:", 12.0);
  v13 = OBJC_IVAR____TtC6FindMy33FMModernPlatterAccessoryLabelView_label;
  v14 = *(id *)&v12[OBJC_IVAR____TtC6FindMy33FMModernPlatterAccessoryLabelView_label];
  v15 = String._bridgeToObjectiveC()();
  objc_msgSend(v14, "setText:", v15, swift_bridgeObjectRelease(a2).n128_f64[0]);

  v16 = *(void **)&v12[v13];
  v17 = (void *)objc_opt_self(UIColor);
  v18 = v16;
  v19 = objc_msgSend(v17, "secondaryLabelColor");
  objc_msgSend(v18, "setTextColor:", v19);

  v20 = *(void **)&v12[v13];
  v21 = (void *)objc_opt_self(UIFont);
  v22 = v20;
  v23 = objc_msgSend(v21, "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v22, "setFont:", v23);

  v24 = *(void **)&v12[v13];
  objc_msgSend(v24, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v24, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v25 = OBJC_IVAR____TtC6FindMy33FMModernPlatterAccessoryLabelView_chevron;
  v26 = *(void **)&v12[OBJC_IVAR____TtC6FindMy33FMModernPlatterAccessoryLabelView_chevron];
  objc_msgSend(v26, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v27 = v26;
  v28 = objc_msgSend(v17, "tertiaryLabelColor");
  objc_msgSend(v27, "setTintColor:", v28);

  v29 = objc_msgSend(v21, "preferredFontForTextStyle:", UIFontTextStyleBody);
  v30 = sub_100053F2C((uint64_t *)&unk_1005D7EA0);
  inited = swift_initStackObject(v30, &v43);
  *(_OWORD *)(inited + 16) = xmmword_100481740;
  *(_QWORD *)(inited + 32) = UIFontWeightTrait;
  *(UIFontWeight *)(inited + 40) = UIFontWeightSemibold;
  v32 = UIFontWeightTrait;
  v33 = sub_10004907C(inited);
  v34 = sub_100049188(v33);

  swift_bridgeObjectRelease(v33);
  v35 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:scale:", v34, 1);
  v36 = *(id *)&v12[v25];
  v37 = v35;
  v38 = String._bridgeToObjectiveC()();
  v39 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v38, v37);

  objc_msgSend(v36, "setImage:", v39);
  objc_msgSend(v12, "addArrangedSubview:", *(_QWORD *)&v12[v13]);
  if ((a3 & 1) != 0)
    objc_msgSend(v12, "addArrangedSubview:", *(_QWORD *)&v12[v25]);
  objc_msgSend(v12, "setNeedsLayout");
  objc_msgSend(v12, "layoutIfNeeded");
  height = UILayoutFittingCompressedSize.height;
  v41 = v12;
  objc_msgSend(v41, "systemLayoutSizeFittingSize:", UILayoutFittingCompressedSize.width, height);
  objc_msgSend(v41, "frame");
  objc_msgSend(v41, "setFrame:");

  return v41;
}

id sub_10042D96C(uint64_t a1)
{
  return sub_1002844A0(a1, type metadata accessor for FMModernPlatterAccessoryLabelView);
}

uint64_t type metadata accessor for FMModernPlatterAccessoryLabelView()
{
  return objc_opt_self(_TtC6FindMy33FMModernPlatterAccessoryLabelView);
}

uint64_t sub_10042D9D0(uint64_t a1)
{
  _QWORD v2[7];

  v2[0] = ")";
  v2[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v2[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[6] = &unk_100490FC0;
  return swift_initClassMetadata2(a1, 0, 7, v2, a1 + 104);
}

uint64_t sub_10042DA48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  sub_100006C5C(0, (unint64_t *)&qword_1005D7A60, NSObject_ptr);
  if ((static NSObject.== infix(_:_:)(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0)
    goto LABEL_14;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  if (v4 != v6 || v5 != v7)
  {
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v6, v7, 0);
    v10 = 0;
    if ((v9 & 1) == 0)
      return v10 & 1;
  }
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a2 + 32);
  if (!v11)
  {
    if (!v12)
    {
LABEL_16:
      v10 = ((*(_BYTE *)(a1 + 40) & 1) == 0) ^ *(_BYTE *)(a2 + 40);
      return v10 & 1;
    }
    goto LABEL_14;
  }
  if (!v12)
  {
LABEL_14:
    v10 = 0;
    return v10 & 1;
  }
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a2 + 24);
  if (v13 == v14 && v11 == v12)
    goto LABEL_16;
  v15 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v11, v14, v12, 0);
  v10 = 0;
  if ((v15 & 1) != 0)
    goto LABEL_16;
  return v10 & 1;
}

uint64_t sub_10042DB24(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  Swift::Bool IsNativeType;
  void (*v18)(char *, unint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t AssociatedTypeWitness;
  uint64_t v29;
  _QWORD v30[3];

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = type metadata accessor for Optional(0, v4);
  __chkstk_darwin(v5);
  v7 = (char *)&v23 - v6;
  v29 = v3;
  v8 = *(_QWORD *)(*(_QWORD *)(v3 + 88) + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, v8);
  v9 = __chkstk_darwin(AssociatedTypeWitness);
  v27 = (char *)&v23 - v10;
  v11 = *(_QWORD *)(v4 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v9);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v1[3];
  v1[3] = a1;
  swift_bridgeObjectRetain_n(a1, 2);
  swift_bridgeObjectRelease(v14);
  if (!Array.endIndex.getter(a1, v4))
    return swift_bridgeObjectRelease(a1);
  v15 = 0;
  v25 = *(void (**)(uint64_t, uint64_t))(v8 + 32);
  v26 = v8;
  v23 = v12;
  v24 = v1 + 2;
  v16 = v27;
  while (1)
  {
    IsNativeType = Array._hoistableIsNativeTypeChecked()();
    Array._checkSubscript(_:wasNativeTypeChecked:)(v15, IsNativeType, a1, v4);
    if (IsNativeType)
    {
      v18 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
      v18(v13, a1+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v15, v4);
      v19 = v15 + 1;
      if (__OFADD__(v15, 1))
        goto LABEL_10;
      goto LABEL_5;
    }
    result = _ArrayBuffer._getElementSlowPath(_:)(v15, a1, v4);
    if (v23 != 8)
      break;
    v22 = result;
    v30[0] = result;
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
    v18(v13, (unint64_t)v30, v4);
    swift_unknownObjectRelease(v22);
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_10:
      __break(1u);
      return swift_bridgeObjectRelease(a1);
    }
LABEL_5:
    v25(v4, v26);
    v18(v7, (unint64_t)v13, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v4);
    swift_beginAccess(v24, v30, 33, 0);
    v20 = type metadata accessor for Dictionary(0, AssociatedTypeWitness, v4, *(_QWORD *)(v29 + 96));
    Dictionary.subscript.setter(v7, v16, v20);
    swift_endAccess(v30);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v4);
    ++v15;
    if (v19 == Array.endIndex.getter(a1, v4))
      return swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

uint64_t sub_10042DDF0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0;
  v2 = *v0;
  v3 = IndexPath.row.getter();
  v4 = v1[3];
  v5 = *(_QWORD *)(v2 + 80);
  swift_bridgeObjectRetain(v4);
  Array.subscript.getter(v3, v4, v5);
  return swift_bridgeObjectRelease(v4);
}

uint64_t sub_10042DE50(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  _BYTE v9[24];

  v3 = (_QWORD *)*v1;
  swift_beginAccess(v1 + 2, v9, 0, 0);
  v4 = v1[2];
  v5 = v3[10];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(0, *(_QWORD *)(v3[11] + 8));
  v7 = v3[12];
  swift_bridgeObjectRetain(v4);
  Dictionary.subscript.getter(a1, v4, AssociatedTypeWitness, v5, v7);
  return swift_bridgeObjectRelease(v4);
}

_QWORD *sub_10042DEFC()
{
  _QWORD *v0;

  swift_bridgeObjectRelease(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  sub_1000327F0(v0[4], v0[5]);
  return v0;
}

uint64_t sub_10042DF28()
{
  uint64_t v0;

  sub_10042DEFC();
  return swift_deallocClassInstance(v0, 48, 7);
}

id sub_10042DF48()
{
  _QWORD *v0;
  uint64_t ObjectType;
  _QWORD *v2;
  _OWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  id v16;
  id v17;
  NSString v18;
  objc_super v20;
  _QWORD v21[4];

  ObjectType = swift_getObjectType(v0);
  v2 = (_QWORD *)(swift_isaMask & *v0);
  v3 = (_OWORD *)((char *)v0 + qword_1005E4910);
  *v3 = 0u;
  v3[1] = 0u;
  *(_OWORD *)((char *)v3 + 25) = 0u;
  v4 = qword_1005E4918;
  v5 = v2[10];
  v6 = v0;
  *(_QWORD *)((char *)v0 + v4) = static Array._allocateUninitialized(_:)(0, v5);
  v7 = qword_1005E4938;
  *(_QWORD *)((char *)v6 + v7) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMModernPlatterHeaderView()), "init");
  *((_BYTE *)v6 + qword_1005E4940) = 0;
  v8 = v2[11];
  v9 = v2[12];
  type metadata accessor for FMModernPlatterView.ViewModel(0, v5, v8, v9);
  v10 = static Array._allocateUninitialized(_:)(0, v5);
  v11 = sub_10042FA80(v10);
  swift_bridgeObjectRelease(v10);
  v12 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMModernPlatterTableView()), "init");
  *(_QWORD *)((char *)v6 + qword_1005E4920) = v11;
  *(_QWORD *)((char *)v6 + qword_1005E4930) = v12;
  v13 = type metadata accessor for FMModernPlatterView.Section(255, v5, v8, v9);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(v8 + 8));
  v21[0] = v13;
  v21[1] = AssociatedTypeWitness;
  v21[2] = swift_getWitnessTable(&unk_1004910F8, v13);
  v21[3] = v9;
  type metadata accessor for UITableViewDiffableDataSource(0, v21);
  v15 = swift_allocObject(&unk_100566690, 32, 7);
  *(_QWORD *)(v15 + 16) = v11;
  *(_QWORD *)(v15 + 24) = ObjectType;
  swift_retain_n(v11, 2);
  v16 = v12;
  *(_QWORD *)((char *)v6 + qword_1005E4928) = UITableViewDiffableDataSource.__allocating_init(tableView:cellProvider:)();

  v20.receiver = v6;
  v20.super_class = (Class)type metadata accessor for FMModernPlatterView(0, v5, v8, v9);
  v17 = objc_msgSendSuper2(&v20, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v18 = String._bridgeToObjectiveC()();
  objc_msgSend(v17, "setAccessibilityIdentifier:", v18);

  sub_10042BAB0();
  swift_release(v11);

  return v17;
}

id sub_10042E1D4()
{
  return sub_10042DF48();
}

void sub_10042E1F4(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  sub_10042FAC4();
}

void sub_10042E218(uint64_t a1)
{
  _QWORD *v1;
  objc_class *v3;
  id v4;
  id v5;
  void *v6;
  char **v7;
  id v8;
  objc_super v9;

  v3 = (objc_class *)type metadata accessor for FMModernPlatterView(0, *(_QWORD *)((swift_isaMask & *v1) + 0x50), *(_QWORD *)((swift_isaMask & *v1) + 0x58), *(_QWORD *)((swift_isaMask & *v1) + 0x60));
  v9.receiver = v1;
  v9.super_class = v3;
  objc_msgSendSuper2(&v9, "traitCollectionDidChange:", a1);
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v4 = objc_msgSend(v1, "traitCollection");
  v5 = objc_msgSend(v4, "userInterfaceStyle");
  v6 = (void *)objc_opt_self(UIColor);
  v7 = &selRef_tertiarySystemFillColor;
  if (v5 != (id)2)
    v7 = &selRef_whiteColor;
  v8 = objc_msgSend(v6, *v7);

  objc_msgSend(v1, "setBackgroundColor:", v8);
}

void sub_10042E328(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;

  v5 = a3;
  v6 = a1;
  sub_10042E218((uint64_t)a3);

}

void sub_10042E380(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    (*(void (**)(uint64_t))((swift_isaMask & *Strong) + 0xF0))(a1);

  }
}

double sub_10042E3F0(uint64_t a1)
{
  uint64_t v2;
  char v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  _OWORD v8[2];
  uint64_t v9;
  char v10;

  v2 = *(_QWORD *)(a1 + qword_1005E4910 + 32);
  v3 = *(_BYTE *)(a1 + qword_1005E4910 + 40);
  v4 = *(_OWORD *)(a1 + qword_1005E4910 + 16);
  v8[0] = *(_OWORD *)(a1 + qword_1005E4910);
  v8[1] = v4;
  v9 = v2;
  v10 = v3;
  sub_1000B06E4((uint64_t)v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000C9178);
  sub_10042C0A8((uint64_t)v8);
  sub_1000B06E4((uint64_t)v8, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1000C91B0);
  v5 = *(_QWORD *)(a1 + qword_1005E4918);
  swift_bridgeObjectRetain(v5);
  sub_10042C3A0(v6);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v5).n128_u64[0];
  return result;
}

uint64_t sub_10042E480(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  __n128 v14;
  _QWORD v16[4];

  v4 = *(_QWORD *)((swift_isaMask & *a1) + 0x58);
  v5 = *(_QWORD *)((swift_isaMask & *a1) + 0x60);
  v6 = type metadata accessor for FMModernPlatterView.Section(255, *(_QWORD *)((swift_isaMask & *a1) + 0x50), v4, v5);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(v4 + 8));
  v16[0] = v6;
  v16[1] = AssociatedTypeWitness;
  v16[2] = swift_getWitnessTable(&unk_1004910F8, v6);
  v16[3] = v5;
  v8 = type metadata accessor for NSDiffableDataSourceSnapshot(0, v16);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v16 - v10;
  v12 = swift_projectBox(a2);
  v13 = swift_beginAccess(v12, v16, 0, 0);
  v14.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))(v11, v12, v8, v13);
  dispatch thunk of UITableViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v11, *((unsigned __int8 *)a1 + qword_1005E4940), 0, 0, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_10042E5C8(uint64_t result, _QWORD *a2)
{
  uint64_t v3;
  uint64_t WitnessTable;
  BOOL v5;

  if ((result & 1) != 0)
  {
    v3 = type metadata accessor for Array(0, *(_QWORD *)((*a2 & swift_isaMask) + 0x50));
    WitnessTable = swift_getWitnessTable(&protocol conformance descriptor for [A], v3);
    result = Collection.isEmpty.getter(v3, WitnessTable);
    v5 = (result & 1) == 0 || *(_QWORD *)((char *)a2 + qword_1005E4910) != 0;
  }
  else
  {
    v5 = 0;
  }
  *((_BYTE *)a2 + qword_1005E4940) = v5;
  return result;
}

id sub_10042E680(void *a1, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSString v18;
  Class isa;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  char *v26;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  _QWORD *v40;
  _QWORD v41[7];
  uint64_t v42;
  unsigned __int8 v43;

  v40 = a3;
  v6 = *a4;
  v35 = type metadata accessor for UIListContentConfiguration(0);
  v36 = *(_QWORD *)(v35 - 8);
  __chkstk_darwin(v35);
  v39 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = v6;
  v8 = *(_QWORD *)(v6 + 80);
  v9 = type metadata accessor for Optional(0, v8);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v28 - v12;
  v14 = *(_QWORD *)(v8 - 8);
  v15 = __chkstk_darwin(v11);
  v34 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = v16;
  __chkstk_darwin(v15);
  v38 = (char *)&v28 - v17;
  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(0x80000001004C6790);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v20 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v18, isa);

  v21 = (uint64_t)v40;
  v40 = a4;
  sub_10042DE50(v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v8) != 1)
  {
    v29 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v29(v38, v13, v8);
    objc_msgSend(v20, "setAccessoryView:", 0);
    objc_msgSend(v20, "setAccessoryType:", 0);
    objc_msgSend(v20, "setSelectionStyle:", 2);
    v22 = (void *)objc_opt_self(UIColor);
    v31 = v20;
    v23 = v20;
    v24 = objc_msgSend(v22, "clearColor");
    objc_msgSend(v23, "setBackgroundColor:", v24);

    sub_10042F01C();
    v25 = *(_QWORD *)(v37 + 88);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v25 + 16))(v41, v8, v25);
    sub_1000C90F4((uint64_t)v41, (uint64_t)&v42);
    v26 = (char *)&loc_10042E95C + dword_10042F00C[v43];
    v32 = v14;
    v30 = v25;
    __asm { BR              X10 }
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  return v20;
}

uint64_t sub_10042F01C()
{
  void *v0;
  id v1;
  void (*v2)(_BYTE *, _QWORD);
  void *v3;
  id v4;
  void (*v5)(_BYTE *, _QWORD);
  id v6;
  void (*v7)(_BYTE *, _QWORD);
  id v8;
  uint64_t (*v9)(_BYTE *, _QWORD);
  uint64_t v10;
  double v11;
  _BYTE v13[32];

  static UIListContentConfiguration.cell()();
  v0 = (void *)objc_opt_self(UIFont);
  v1 = objc_msgSend(v0, "preferredFontForTextStyle:", UIFontTextStyleBody);
  v2 = (void (*)(_BYTE *, _QWORD))UIListContentConfiguration.textProperties.modify(v13);
  UIListContentConfiguration.TextProperties.font.setter(v1);
  v2(v13, 0);
  v3 = (void *)objc_opt_self(UIColor);
  v4 = objc_msgSend(v3, "labelColor");
  v5 = (void (*)(_BYTE *, _QWORD))UIListContentConfiguration.textProperties.modify(v13);
  UIListContentConfiguration.TextProperties.color.setter(v4);
  v5(v13, 0);
  v6 = objc_msgSend(v0, "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
  v7 = (void (*)(_BYTE *, _QWORD))UIListContentConfiguration.secondaryTextProperties.modify(v13);
  UIListContentConfiguration.TextProperties.font.setter(v6);
  v7(v13, 0);
  v8 = objc_msgSend(v3, "secondaryLabelColor");
  v9 = (uint64_t (*)(_BYTE *, _QWORD))UIListContentConfiguration.secondaryTextProperties.modify(v13);
  UIListContentConfiguration.TextProperties.color.setter(v8);
  v10 = v9(v13, 0);
  UIListContentConfiguration.textToSecondaryTextVerticalPadding.setter(v10, 0.0);
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v11 = *(double *)&qword_1005F5978;
  if (qword_1005D20B8 != -1)
    swift_once(&qword_1005D20B8, sub_10005E610);
  return UIListContentConfiguration.directionalLayoutMargins.setter(*(double *)&xmmword_1005F6180, v11, *(double *)&xmmword_1005F6180, v11);
}

void sub_10042F220(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  id v8;
  char *v9;

  v8 = objc_allocWithZone((Class)type metadata accessor for FMModernPlatterAccessoryLabelView());
  swift_bridgeObjectRetain(a2);
  v9 = sub_10042D3DC(a1, a2, a4);
  objc_msgSend(a3, "setAccessoryView:", v9);

}

void sub_10042F2A4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  char *v14;
  _QWORD aBlock[5];
  char *v16;

  v5 = *a2;
  v6 = *(_QWORD *)(*a2 + 80);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(a1);
  v9 = (void *)objc_opt_self(CATransaction);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v6);
  v10 = *(unsigned __int8 *)(v7 + 80);
  v11 = (v10 + 48) & ~v10;
  v12 = (char *)swift_allocObject(&unk_1005667D0, v11 + v8, v10 | 7);
  *((_QWORD *)v12 + 2) = v6;
  *((_QWORD *)v12 + 3) = *(_QWORD *)(v5 + 88);
  *((_QWORD *)v12 + 4) = *(_QWORD *)(v5 + 96);
  *((_QWORD *)v12 + 5) = a2;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v12[v11], (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_10042FCFC;
  v16 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_1005667E8;
  v13 = _Block_copy(aBlock);
  v14 = v16;
  swift_retain(a2);
  objc_msgSend(v9, "setCompletionBlock:", v13, swift_release(v14).n128_f64[0]);
  _Block_release(v13);
}

uint64_t sub_10042F404(uint64_t result, uint64_t a2)
{
  void (*v2)(uint64_t);
  uint64_t v4;

  v2 = *(void (**)(uint64_t))(result + 32);
  if (v2)
  {
    v4 = *(_QWORD *)(result + 40);
    swift_retain(v4);
    v2(a2);
    return sub_1000327F0((uint64_t)v2, v4);
  }
  return result;
}

uint64_t sub_10042F460(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  uint64_t v14;

  v7 = type metadata accessor for IndexPath(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(a4);
  v11 = a3;
  v12 = a1;
  sub_10042CC90((uint64_t)v11);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

id sub_10042F510()
{
  return 0;
}

double sub_10042F518()
{
  return 0.0;
}

BOOL sub_10042F520()
{
  return sub_10042F9B8();
}

uint64_t sub_10042F544()
{
  return 0;
}

void sub_10042F54C()
{
  sub_10042FB98();
}

id sub_10042F56C()
{
  _QWORD *v0;
  objc_class *v1;
  objc_super v3;

  v1 = (objc_class *)type metadata accessor for FMModernPlatterView(0, *(_QWORD *)((swift_isaMask & *v0) + 0x50), *(_QWORD *)((swift_isaMask & *v0) + 0x58), *(_QWORD *)((swift_isaMask & *v0) + 0x60));
  v3.receiver = v0;
  v3.super_class = v1;
  return objc_msgSendSuper2(&v3, "dealloc");
}

void sub_10042F5BC(uint64_t a1)
{
  sub_1000C91B0(*(void **)(a1 + qword_1005E4910), *(_QWORD *)(a1 + qword_1005E4910 + 8), *(_QWORD *)(a1 + qword_1005E4910 + 16), *(_QWORD *)(a1 + qword_1005E4910 + 24), *(_QWORD *)(a1 + qword_1005E4910 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_1005E4918));
  swift_release(*(_QWORD *)(a1 + qword_1005E4920));

}

uint64_t type metadata accessor for FMModernPlatterView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10003BC28(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FMModernPlatterView);
}

uint64_t sub_10042F650(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[2] = &unk_100491028;
  return swift_initClassMetadata2(a1, 0, 3, v2, a1 + 104);
}

uint64_t type metadata accessor for FMModernPlatterView.ViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10003BC28(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FMModernPlatterView.ViewModel);
}

uint64_t sub_10042F6AC(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_10042F6EC + 4 * byte_100490EF4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_10042F70C + 4 * byte_100490EF9[v4]))();
}

_BYTE *sub_10042F6EC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_10042F70C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10042F714(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10042F71C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_10042F724(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_10042F72C(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t type metadata accessor for FMModernPlatterView.Section(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10003BC28(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FMModernPlatterView.Section);
}

uint64_t sub_10042F744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 40);
}

uint64_t sub_10042F74C(uint64_t a1)
{

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 16));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 32));
}

uint64_t sub_10042F77C(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v6 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v5;
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v8 = v3;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  return a1;
}

uint64_t sub_10042F7D8(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRelease(v8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v10);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t sub_10042F860(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease(v6);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease(v8);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t sub_10042F8BC(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_10042F904(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for FMModernPlatterView.FMModernPlatterViewHeaderConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10003BC28(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FMModernPlatterView.FMModernPlatterViewHeaderConfiguration);
}

uint64_t sub_10042F95C(uint64_t a1)
{
  return swift_getWitnessTable(&unk_100491138, a1);
}

uint64_t sub_10042F96C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_isClassType(a2))
    v3 = a2;
  else
    v3 = 0;
  if (v3)
    return sub_100053F2C(&qword_1005D2F10);
  else
    return type metadata accessor for _ContiguousArrayStorage(0, a2);
}

BOOL sub_10042F9B8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + qword_1005E4910) != 0;
}

_QWORD *sub_10042F9D0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t TupleTypeMetadata2;
  uint64_t v7;
  uint64_t v8;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness(255, *(_QWORD *)(*(_QWORD *)(*v1 + 88) + 8));
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2(0, AssociatedTypeWitness, v4, 0, 0);
  v7 = static Array._allocateUninitialized(_:)(0, TupleTypeMetadata2);
  v1[2] = Dictionary.init(dictionaryLiteral:)(v7, AssociatedTypeWitness, v4, *(_QWORD *)(v3 + 96));
  v8 = static Array._allocateUninitialized(_:)(0, v4);
  v1[4] = 0;
  v1[5] = 0;
  v1[3] = v8;
  sub_10042DB24(a1);
  return v1;
}

_QWORD *sub_10042FA80(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = type metadata accessor for FMModernPlatterView.ViewModel(0, v1[10], v1[11], v1[12]);
  swift_allocObject(v3, 48, 7);
  return sub_10042F9D0(a1);
}

void sub_10042FAC4()
{
  _QWORD *v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = swift_isaMask & *v0;
  v2 = (_OWORD *)((char *)v0 + qword_1005E4910);
  *v2 = 0u;
  v2[1] = 0u;
  *(_OWORD *)((char *)v2 + 25) = 0u;
  v3 = qword_1005E4918;
  *(_QWORD *)((char *)v0 + v3) = static Array._allocateUninitialized(_:)(0, *(_QWORD *)(v1 + 80));
  v4 = qword_1005E4938;
  *(_QWORD *)((char *)v0 + v4) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMModernPlatterHeaderView()), "init");
  *((_BYTE *)v0 + qword_1005E4940) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMModernPlatterView.swift", 32, 2, 252, 0);
  __break(1u);
}

void sub_10042FB98()
{
  _swift_stdlib_reportUnimplementedInitializer("FindMy.FMModernPlatterView", 26, "init(frame:)", 12, 0);
  __break(1u);
}

uint64_t sub_10042FBC4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 32, 7);
}

id sub_10042FBE8(void *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;

  return sub_10042E680(a1, a2, a3, *(_QWORD **)(v3 + 16));
}

void sub_10042FBF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 16) - 8) + 80);
  sub_10042F2A4(a1, *(uint64_t **)(v1 + 40), v1 + ((v2 + 48) & ~v2));
}

uint64_t sub_10042FC14()
{
  return sub_10042FE4C((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

void sub_10042FC20()
{
  uint64_t v0;

  sub_10042F220(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), 1);
}

uint64_t sub_10042FC40()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10042FC50()
{
  return sub_10042FE4C((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

void sub_10042FC5C()
{
  uint64_t v0;

  sub_10042F220(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), 0);
}

uint64_t sub_10042FC7C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10042FC90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 48) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 40));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10042FCFC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80);
  return sub_10042F404(*(_QWORD *)(v0 + 40), v0 + ((v1 + 48) & ~v1));
}

uint64_t sub_10042FD20()
{
  return 24;
}

__n128 sub_10042FD2C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_10042FD40(uint64_t a1)
{
  uint64_t v1;

  return swift_getAtKeyPath(a1, *(_QWORD *)(v1 + 32));
}

uint64_t sub_10042FD68()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10042FD94()
{
  uint64_t v0;

  return sub_10042E480(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10042FD9C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10042FDC0(uint64_t a1)
{
  uint64_t v1;

  return sub_10042E5C8(a1, *(_QWORD **)(v1 + 16));
}

uint64_t sub_10042FDC8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_10042FDF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(void);

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView_resizeBlockCount);
  if (__OFADD__(v2, 1))
  {
    __break(1u);
  }
  else
  {
    v3 = *(void (**)(void))(v0 + 24);
    *(_QWORD *)(v1
              + OBJC_IVAR____TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView_resizeBlockCount) = v2 + 1;
    v3();
    sub_10042D1CC();
  }
}

uint64_t sub_10042FE40()
{
  return sub_10042FE4C((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10042FE4C(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 24));

  return swift_deallocObject(v1, 40, 7);
}

void sub_10042FE7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 32);
  (*(void (**)(void))(v0 + 16))();
  v2 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView_resizeBlockCount);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1
              + OBJC_IVAR____TtC6FindMyP33_CC23E81230DC16D325E739DF41B02D5424FMModernPlatterTableView_resizeBlockCount) = v4;
    sub_10042D1CC();
  }
}

uint64_t sub_10042FEC8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10042FEEC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_10042FF10(uint64_t a1)
{
  uint64_t v1;

  sub_10042E380(a1, *(_QWORD *)(v1 + 40));
}

double sub_10042FF1C()
{
  uint64_t v0;

  return sub_10042E3F0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10042FF24()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10042FF34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result;

  result = a4;
  switch(a7)
  {
    case 0:
      goto LABEL_4;
    case 1:
    case 3:
      swift_bridgeObjectRetain(a6);
      result = a2;
      a2 = a4;
      goto LABEL_3;
    case 2:
LABEL_3:
      swift_bridgeObjectRetain(result);
LABEL_4:
      result = swift_bridgeObjectRetain(a2);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for FMModernPlatterRowType(uint64_t a1)
{
  return sub_100253554(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t initializeWithCopy for FMModernPlatterRowType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_10042FF34(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for FMModernPlatterRowType(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_10042FF34(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v16 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v9;
  sub_100253554(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

__n128 initializeWithTake for FMModernPlatterRowType(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FMModernPlatterRowType(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  v3 = *(_BYTE *)(a2 + 48);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v11 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v3;
  sub_100253554(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMModernPlatterRowType(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FMModernPlatterRowType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

uint64_t sub_1004301C4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 48);
}

uint64_t sub_1004301CC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FMModernPlatterRowType()
{
  return &type metadata for FMModernPlatterRowType;
}

uint64_t storeEnumTagSinglePayload for FMModernPlatterRowType.ButtonType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100430230 + 4 * byte_100490F0B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100430264 + 4 * byte_100490F06[v4]))();
}

uint64_t sub_100430264(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10043026C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100430274);
  return result;
}

uint64_t sub_100430280(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100430288);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_10043028C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100430294(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMModernPlatterRowType.ButtonType()
{
  return &type metadata for FMModernPlatterRowType.ButtonType;
}

unint64_t sub_1004302B4()
{
  unint64_t result;

  result = qword_1005E4BC0;
  if (!qword_1005E4BC0)
  {
    result = swift_getWitnessTable(&unk_1004911F4, &type metadata for FMModernPlatterRowType.ButtonType);
    atomic_store(result, (unint64_t *)&qword_1005E4BC0);
  }
  return result;
}

double sub_10043031C()
{
  double result;

  __asm { FMOV            V0.2D, #18.0 }
  xmmword_1005F6120 = _Q0;
  *(_OWORD *)algn_1005F6130 = xmmword_100491220;
  result = 2.0;
  xmmword_1005F6140 = xmmword_100491230;
  return result;
}

char *sub_100430344(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, int a6, int a7, double a8)
{
  char *v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  id v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  objc_class *v36;
  char *v37;
  char *v38;
  void *v39;
  char *v40;
  id v41;
  char v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  int v49;
  int v50;
  int v51;
  objc_super v52;

  v9 = v8;
  v49 = a6;
  v50 = a7;
  v51 = a5;
  v46 = a2;
  v47 = a4;
  v48 = a3;
  v45 = a1;
  v11 = sub_100053F2C((uint64_t *)&unk_1005E4430);
  __chkstk_darwin(v11);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FMPlatterIcon(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = &v8[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_identifier];
  *(_QWORD *)v18 = 0;
  *((_QWORD *)v18 + 1) = 0;
  v19 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_backgroundView;
  v20 = objc_allocWithZone((Class)UIView);
  v21 = v8;
  *(_QWORD *)&v9[v19] = objc_msgSend(v20, "init");
  v22 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_iconView;
  *(_QWORD *)&v21[v22] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v23 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_titleLabel;
  *(_QWORD *)&v21[v23] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v24 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_secondaryLabel;
  v25 = type metadata accessor for FMCopyableLabel();
  *(_QWORD *)&v21[v24] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v25)), "init");
  v26 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_chevron;
  v27 = sub_1003434F4();
  v28 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v27);

  *(_QWORD *)&v21[v26] = v28;
  v29 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_separator;
  *(_QWORD *)&v21[v29] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v30 = &v21[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_title];
  *(_QWORD *)v30 = 0;
  *((_QWORD *)v30 + 1) = 0;
  v31 = &v21[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitle];
  *(_QWORD *)v31 = 0;
  *((_QWORD *)v31 + 1) = 0;
  v32 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitleColor;
  *(_QWORD *)&v21[v32] = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v21[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitleIsCopyToPasteboardEnabled] = 0;
  v21[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_separated] = 1;
  v21[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_isChevronVisible] = 0;
  v33 = *((_QWORD *)v30 + 1);
  v34 = v46;
  *(_QWORD *)v30 = v45;
  *((_QWORD *)v30 + 1) = v34;
  v35 = v47;
  swift_bridgeObjectRelease(v33);
  v21[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_isBoldTitle] = v48;
  *(double *)&v21[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_backgroundOffset] = a8;
  v21[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_fullWidthSeparator] = v49;
  v21[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_hiliteBackgroundWhenTapped] = v50;

  v36 = (objc_class *)type metadata accessor for FMMultiSettingsRowView();
  v52.receiver = v21;
  v52.super_class = v36;
  v37 = (char *)objc_msgSendSuper2(&v52, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_1002593FC(v35, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    v38 = v37;
    sub_100259444((uint64_t)v13);
  }
  else
  {
    sub_100259484((uint64_t)v13, (uint64_t)v17);
    v39 = *(void **)&v37[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_iconView];
    v40 = v37;
    v41 = sub_10038E074((uint64_t)v17, 0);
    objc_msgSend(v39, "setImage:", v41);

    sub_1000B0660((uint64_t)v17);
  }
  v42 = v51 & 1;
  objc_msgSend(v37, "setUserInteractionEnabled:", v51 & 1);
  v37[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_isChevronVisible] = v42;
  sub_100430818();
  sub_100430C14(a8);

  sub_100259444(v35);
  return v37;
}

uint64_t sub_100430760()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_title + 8);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_title);
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_title + 8));
    v3._countAndFlagsBits = v2;
    v3._object = v1;
    String.append(_:)(v3);
    swift_bridgeObjectRelease(v1);
  }
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitle + 8);
  if (v4)
  {
    v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitle);
    String.append(_:)(*(Swift::String *)(&v4 - 1));
    v6._countAndFlagsBits = 44;
    v6._object = (void *)0xE100000000000000;
    String.append(_:)(v6);
    swift_bridgeObjectRelease(0xE100000000000000);
  }
  return 0;
}

void sub_100430818()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  double v11;
  NSString v12;
  void *v13;
  int v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;

  v1 = v0;
  v2 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_chevron;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_chevron], "setHidden:", (v0[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_isChevronVisible] & 1) == 0);
  objc_msgSend(*(id *)&v0[v2], "setContentMode:", 1);
  v3 = *(void **)&v0[v2];
  v4 = (void *)objc_opt_self(UIColor);
  v5 = v3;
  v6 = objc_msgSend(v4, "tertiaryLabelColor");
  objc_msgSend(v5, "setTintColor:", v6);

  v7 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_titleLabel;
  v8 = *(void **)&v1[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_titleLabel];
  v9 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_title + 8];
  v10 = v8;
  if (v9)
  {
    swift_bridgeObjectRetain(v9);
    v12 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v11 = swift_bridgeObjectRelease(v9).n128_u64[0];
  }
  else
  {
    v12 = 0;
  }
  objc_msgSend(v8, "setText:", v12, v11);

  v13 = *(void **)&v1[v7];
  v14 = v1[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_isBoldTitle];
  v15 = (void *)objc_opt_self(UIFont);
  v16 = v13;
  v17 = objc_msgSend(v15, "preferredFontForTextStyle:", UIFontTextStyleBody);
  v31 = v2;
  if (v14 == 1)
  {
    v18 = (void *)sub_10003CEE8(0x8000);

    v17 = (id)sub_10003CEE8(2);
  }
  objc_msgSend(v16, "setFont:", v17);

  objc_msgSend(*(id *)&v1[v7], "setNumberOfLines:", 0);
  objc_msgSend(*(id *)&v1[v7], "setAdjustsFontForContentSizeCategory:", 1);
  v19 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_secondaryLabel;
  v20 = *(void **)&v1[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_secondaryLabel];
  v21 = (void *)objc_opt_self(UIFont);
  v22 = v20;
  v23 = objc_msgSend(v21, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  objc_msgSend(v22, "setFont:", v23);

  v24 = *(id *)&v1[v19];
  v25 = objc_msgSend(v4, "secondaryLabelColor");
  objc_msgSend(v24, "setTextColor:", v25);

  objc_msgSend(*(id *)&v1[v19], "setTextAlignment:", 4);
  objc_msgSend(*(id *)&v1[v19], "setNumberOfLines:", 0);
  objc_msgSend(*(id *)&v1[v19], "setAdjustsFontForContentSizeCategory:", 1);
  v26 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_separator;
  v27 = *(id *)&v1[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_separator];
  v28 = objc_msgSend(v4, "tertiaryLabelColor");
  objc_msgSend(v27, "setBackgroundColor:", v28);

  objc_msgSend(v1, "addSubview:", *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_backgroundView]);
  objc_msgSend(v1, "addSubview:", *(_QWORD *)&v1[v7]);
  objc_msgSend(v1, "addSubview:", *(_QWORD *)&v1[v19]);
  objc_msgSend(v1, "addSubview:", *(_QWORD *)&v1[v31]);
  objc_msgSend(v1, "addSubview:", *(_QWORD *)&v1[v26]);
  v29 = *(void **)&v1[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_iconView];
  v30 = objc_msgSend(v29, "image");

  if (v30)
    objc_msgSend(v1, "addSubview:", v29);
}

void sub_100430C14(double a1)
{
  char *v1;
  char *v2;
  double v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v27;
  Class isa;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  NSArray v37;
  char **v38;
  uint64_t *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;
  Class v58;
  uint64_t v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  uint64_t v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  uint64_t v84;
  Class v85;
  double v86;
  uint64_t v87;
  id v88;
  id v89;
  uint64_t v90;
  double v91;
  id v92;
  id v93;
  id v94;
  double v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  double v102;
  double v103;
  id v104;
  uint64_t v105;
  Class v106;
  uint64_t v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  id v128;
  Class v129;
  id v130;
  id v131;

  v2 = v1;
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v4 = *(double *)&qword_1005F5978;
  v5 = *(void **)&v1[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_iconView];
  v127 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_titleLabel;
  v6 = *(void **)&v1[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_titleLabel];
  v126 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_secondaryLabel;
  v7 = *(void **)&v2[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_secondaryLabel];
  v124 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_separator;
  v8 = *(void **)&v2[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_separator];
  v121 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_chevron;
  v9 = *(void **)&v2[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_chevron];
  v125 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_backgroundView;
  v10 = *(void **)&v2[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_backgroundView];
  v11 = v5;
  v12 = v6;
  v13 = v7;
  v14 = v8;
  v15 = v9;
  v16 = v10;
  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v15, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v16, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v17 = objc_msgSend(v11, "image");
  v18 = (void *)objc_opt_self(NSLayoutConstraint);
  v19 = sub_100053F2C(&qword_1005D2F10);
  v20 = swift_allocObject(v19, 48, 7);
  *(_OWORD *)(v20 + 16) = xmmword_1004820B0;
  v130 = v18;
  if (v17)
  {
    v21 = objc_msgSend(v11, "topAnchor");
    v22 = objc_msgSend(v2, "topAnchor");
    v23 = objc_msgSend(v21, "constraintEqualToAnchor:constant:", v22, v4);

    *(_QWORD *)(v20 + 32) = v23;
    v24 = objc_msgSend(v11, "leadingAnchor");
    v25 = objc_msgSend(v2, "leadingAnchor");
    v26 = objc_msgSend(v24, "constraintEqualToAnchor:", v25);

    *(_QWORD *)(v20 + 40) = v26;
    specialized Array._endMutation()(v27);
    sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v18, "activateConstraints:", isa, swift_bridgeObjectRelease(v20).n128_f64[0]);

    v20 = swift_allocObject(v19, 48, 7);
    *(_OWORD *)(v20 + 16) = xmmword_1004820B0;
    v29 = v127;
    v30 = objc_msgSend(*(id *)&v2[v127], "topAnchor");
    v31 = objc_msgSend(v11, "bottomAnchor");
    if (qword_1005D1BC8 != -1)
      swift_once(&qword_1005D1BC8, sub_1000ABDB8);
    v32 = objc_msgSend(v30, "constraintEqualToAnchor:constant:", v31, *(double *)&xmmword_1005F4D60, v121);

    *(_QWORD *)(v20 + 32) = v32;
    v33 = objc_msgSend(*(id *)&v2[v127], "leadingAnchor");
    v34 = objc_msgSend(v2, "leadingAnchor");
    v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

    *(_QWORD *)(v20 + 40) = v35;
    specialized Array._endMutation()(v36);
    v37.super.isa = Array._bridgeToObjectiveC()().super.isa;
    v38 = &selRef_viewWillAppear_;
    v39 = &qword_1005D2000;
  }
  else
  {
    v29 = v127;
    v40 = objc_msgSend(*(id *)&v2[v127], "topAnchor");
    v41 = objc_msgSend(v2, "topAnchor");
    v39 = &qword_1005D2000;
    if (qword_1005D20A8 != -1)
      swift_once(&qword_1005D20A8, sub_10043031C);
    v42 = objc_msgSend(v40, "constraintEqualToAnchor:constant:", v41, *((double *)&xmmword_1005F6140 + 1), v121);

    *(_QWORD *)(v20 + 32) = v42;
    v43 = objc_msgSend(*(id *)&v2[v127], "leadingAnchor");
    v44 = objc_msgSend(v2, "leadingAnchor");
    v45 = objc_msgSend(v43, "constraintEqualToAnchor:", v44);

    *(_QWORD *)(v20 + 40) = v45;
    specialized Array._endMutation()(v46);
    sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
    v37.super.isa = Array._bridgeToObjectiveC()().super.isa;
    v38 = &selRef_viewWillAppear_;
  }
  objc_msgSend(v130, "activateConstraints:", v37.super.isa, swift_bridgeObjectRelease(v20).n128_f64[0]);

  v131 = (id)objc_opt_self(NSLayoutConstraint);
  v128 = (id)sub_100053F2C(&qword_1005D2F10);
  v47 = swift_allocObject(v128, 56, 7);
  *(_OWORD *)(v47 + 16) = xmmword_1004820C0;
  v48 = objc_msgSend(*(id *)&v2[v126], "topAnchor");
  v49 = objc_msgSend(*(id *)&v2[v29], v38[26]);
  if (v39[21] != -1)
    swift_once(&qword_1005D20A8, sub_10043031C);
  v50 = objc_msgSend(v48, "constraintEqualToAnchor:constant:", v49, *(double *)&xmmword_1005F6140);

  *(_QWORD *)(v47 + 32) = v50;
  v51 = objc_msgSend(*(id *)&v2[v126], v38[26]);
  v52 = objc_msgSend(v2, v38[26]);
  v53 = objc_msgSend(v51, "constraintLessThanOrEqualToAnchor:constant:", v52, -*((double *)&xmmword_1005F6140 + 1));

  *(_QWORD *)(v47 + 40) = v53;
  v54 = objc_msgSend(*(id *)&v2[v126], "leadingAnchor");
  v55 = objc_msgSend(v2, "leadingAnchor");
  v56 = objc_msgSend(v54, "constraintEqualToAnchor:", v55);

  *(_QWORD *)(v47 + 48) = v56;
  specialized Array._endMutation()(v57);
  sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
  v58 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v131, "activateConstraints:", v58, swift_bridgeObjectRelease(v47).n128_f64[0]);

  v123 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_isChevronVisible;
  if (v2[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_isChevronVisible] == 1)
  {
    v59 = swift_allocObject(v128, 80, 7);
    *(_OWORD *)(v59 + 16) = xmmword_100484130;
    v60 = objc_msgSend(*(id *)&v2[v122], "centerYAnchor");
    v61 = objc_msgSend(v2, "centerYAnchor");
    v62 = objc_msgSend(v60, "constraintEqualToAnchor:", v61);

    *(_QWORD *)(v59 + 32) = v62;
    v63 = objc_msgSend(*(id *)&v2[v122], "leadingAnchor");
    v64 = objc_msgSend(*(id *)&v2[v127], "trailingAnchor");
    if (qword_1005D20D0 != -1)
      swift_once(&qword_1005D20D0, sub_100443DCC);
    v65 = objc_msgSend(v63, "constraintEqualToAnchor:constant:", v64, *(double *)&qword_1005F61C0);

    *(_QWORD *)(v59 + 40) = v65;
    v66 = objc_msgSend(*(id *)&v2[v122], "leadingAnchor");
    v67 = objc_msgSend(*(id *)&v2[v126], "trailingAnchor");
    v68 = objc_msgSend(v66, "constraintEqualToAnchor:constant:", v67, *(double *)&qword_1005F61C0);

    *(_QWORD *)(v59 + 48) = v68;
    v69 = objc_msgSend(*(id *)&v2[v122], "trailingAnchor");
    v70 = objc_msgSend(v2, "trailingAnchor");
    v71 = objc_msgSend(v69, "constraintEqualToAnchor:", v70);

    *(_QWORD *)(v59 + 56) = v71;
    v72 = objc_msgSend(*(id *)&v2[v122], "heightAnchor");
    v73 = objc_retainAutoreleasedReturnValue(objc_msgSend(v72, "constraintEqualToConstant:", *((double *)&xmmword_1005F61B0
                                                                                             + 1)));

    *(_QWORD *)(v59 + 64) = v73;
    v74 = objc_msgSend(*(id *)&v2[v122], "widthAnchor");
    v75 = objc_msgSend(v74, "constraintEqualToConstant:", *(double *)&xmmword_1005F61B0);

    *(_QWORD *)(v59 + 72) = v75;
    specialized Array._endMutation()(v76);
    v77 = v128;
  }
  else
  {
    v77 = v128;
    v59 = swift_allocObject(v128, 48, 7);
    *(_OWORD *)(v59 + 16) = xmmword_1004820B0;
    v78 = objc_msgSend(*(id *)&v2[v127], "trailingAnchor");
    v79 = objc_msgSend(v2, "trailingAnchor");
    v80 = objc_msgSend(v78, "constraintEqualToAnchor:constant:", v79, 0.0);

    *(_QWORD *)(v59 + 32) = v80;
    v81 = objc_msgSend(*(id *)&v2[v126], "trailingAnchor");
    v82 = objc_msgSend(v2, "trailingAnchor");
    v83 = objc_msgSend(v81, "constraintEqualToAnchor:constant:", v82, 0.0);

    *(_QWORD *)(v59 + 40) = v83;
    specialized Array._endMutation()(v84);
  }
  v85 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v131, "activateConstraints:", v85, swift_bridgeObjectRelease(v59).n128_f64[0]);

  if (v2[v123])
    v86 = a1;
  else
    v86 = *((double *)&xmmword_1005F6140 + 1);
  v87 = swift_allocObject(v77, 64, 7);
  *(_OWORD *)(v87 + 16) = xmmword_100481720;
  v88 = objc_msgSend(*(id *)&v2[v124], "leadingAnchor");
  v89 = objc_msgSend(v2, "leadingAnchor");
  v90 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_fullWidthSeparator;
  v91 = -v4;
  if (!v2[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_fullWidthSeparator])
    v91 = 0.0;
  v92 = objc_msgSend(v88, "constraintEqualToAnchor:constant:", v89, v91);

  *(_QWORD *)(v87 + 32) = v92;
  v93 = objc_msgSend(*(id *)&v2[v124], "trailingAnchor");
  v94 = objc_msgSend(v2, "trailingAnchor");
  if (v2[v90])
    v95 = v4;
  else
    v95 = v86;
  v96 = objc_msgSend(v93, "constraintEqualToAnchor:constant:", v94, v95);

  *(_QWORD *)(v87 + 40) = v96;
  v97 = objc_msgSend(*(id *)&v2[v124], "bottomAnchor");
  v98 = objc_msgSend(v2, "bottomAnchor");
  v99 = objc_msgSend(v97, "constraintEqualToAnchor:constant:", v98, 0.0);

  *(_QWORD *)(v87 + 48) = v99;
  v100 = objc_msgSend(*(id *)&v2[v124], "heightAnchor");
  v101 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v101, "scale");
  v103 = v102;

  v104 = objc_msgSend(v100, "constraintEqualToConstant:", 1.0 / v103);
  *(_QWORD *)(v87 + 56) = v104;
  specialized Array._endMutation()(v105);
  v106 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v131, "activateConstraints:", v106, swift_bridgeObjectRelease(v87).n128_f64[0]);

  v107 = swift_allocObject(v128, 64, 7);
  *(_OWORD *)(v107 + 16) = xmmword_100481720;
  v108 = objc_msgSend(*(id *)&v2[v125], "topAnchor");
  v109 = objc_msgSend(v2, "topAnchor");
  v110 = objc_msgSend(v108, "constraintEqualToAnchor:", v109);

  *(_QWORD *)(v107 + 32) = v110;
  v111 = objc_msgSend(*(id *)&v2[v125], "bottomAnchor");
  v112 = objc_msgSend(v2, "bottomAnchor");
  v113 = objc_msgSend(v111, "constraintEqualToAnchor:", v112);

  *(_QWORD *)(v107 + 40) = v113;
  v114 = objc_msgSend(*(id *)&v2[v125], "leadingAnchor");
  v115 = objc_msgSend(v2, "leadingAnchor");
  v116 = objc_msgSend(v114, "constraintEqualToAnchor:constant:", v115, -a1);

  *(_QWORD *)(v107 + 48) = v116;
  v117 = objc_msgSend(*(id *)&v2[v125], "trailingAnchor");
  v118 = objc_msgSend(v2, "trailingAnchor");
  v119 = objc_msgSend(v117, "constraintEqualToAnchor:constant:", v118, a1);

  *(_QWORD *)(v107 + 56) = v119;
  specialized Array._endMutation()(v120);
  v129 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v131, "activateConstraints:", v129, swift_bridgeObjectRelease(v107).n128_f64[0]);

}

void sub_100431B88(uint64_t a1, uint64_t a2)
{
  char *v2;
  Class isa;
  id v5;
  id v6;
  id v7;
  void *v8;
  char **v9;
  id v10;
  objc_super v11;

  sub_100006C5C(0, (unint64_t *)&qword_1005D3F00, UITouch_ptr);
  sub_1000B0798();
  isa = Set._bridgeToObjectiveC()().super.isa;
  v11.receiver = v2;
  v11.super_class = (Class)type metadata accessor for FMMultiSettingsRowView();
  objc_msgSendSuper2(&v11, "touchesBegan:withEvent:", isa, a2);

  if (v2[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_hiliteBackgroundWhenTapped] == 1)
  {
    v5 = *(id *)&v2[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_backgroundView];
    v6 = objc_msgSend(v2, "traitCollection");
    v7 = objc_msgSend(v6, "userInterfaceStyle");

    v8 = (void *)objc_opt_self(UIColor);
    v9 = &selRef_systemGray3Color;
    if (v7 != (id)2)
      v9 = &selRef_systemGray5Color;
    v10 = objc_msgSend(v8, *v9);
    objc_msgSend(v5, "setBackgroundColor:", v10);

  }
}

void sub_100431D64(void *a1, uint64_t a2, uint64_t a3, void *a4, SEL *a5)
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  char *v13;
  Class isa;
  void *v15;
  void *v16;
  id v17;
  id v18;
  objc_super v19;

  v9 = sub_100006C5C(0, (unint64_t *)&qword_1005D3F00, UITouch_ptr);
  v10 = sub_1000B0798();
  v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)(a3, v9, v10);
  v12 = a4;
  v13 = a1;
  isa = Set._bridgeToObjectiveC()().super.isa;
  v19.receiver = v13;
  v19.super_class = (Class)type metadata accessor for FMMultiSettingsRowView();
  objc_msgSendSuper2(&v19, *a5, isa, v12);

  v15 = *(void **)&v13[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_backgroundView];
  v16 = (void *)objc_opt_self(UIColor);
  v17 = v15;
  v18 = objc_msgSend(v16, "clearColor");
  objc_msgSend(v17, "setBackgroundColor:", v18);

  swift_bridgeObjectRelease(v11);
}

id sub_100431EB8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMMultiSettingsRowView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMMultiSettingsRowView()
{
  return objc_opt_self(_TtC6FindMy22FMMultiSettingsRowView);
}

void sub_100431FCC()
{
  _BYTE *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;

  v1 = &v0[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_identifier];
  *v1 = 0;
  v1[1] = 0;
  v2 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_backgroundView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v3 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_iconView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v4 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_titleLabel;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v5 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_secondaryLabel;
  v6 = type metadata accessor for FMCopyableLabel();
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v6)), "init");
  v7 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_chevron;
  v8 = sub_1003434F4();
  v9 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v8);

  *(_QWORD *)&v0[v7] = v9;
  v10 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_separator;
  *(_QWORD *)&v0[v10] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v11 = &v0[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_title];
  *v11 = 0;
  v11[1] = 0;
  v12 = &v0[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitle];
  *v12 = 0;
  v12[1] = 0;
  v13 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitleColor;
  *(_QWORD *)&v0[v13] = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v0[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitleIsCopyToPasteboardEnabled] = 0;
  v0[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_separated] = 1;
  v0[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_isChevronVisible] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMMultiSettingsRowView.swift", 35, 2, 117, 0);
  __break(1u);
}

double sub_100432190()
{
  double result;

  __asm { FMOV            V0.2D, #18.0 }
  xmmword_1005F6150 = _Q0;
  unk_1005F6160 = xmmword_100491220;
  result = 2.0;
  xmmword_1005F6170 = xmmword_100491230;
  return result;
}

id sub_1004321B8(char a1, double a2)
{
  char *v2;
  char *v5;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  id v19;
  objc_super v21;

  v5 = &v2[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_identifier];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v6 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_backgroundView;
  v7 = objc_allocWithZone((Class)UIView);
  v8 = v2;
  *(_QWORD *)&v2[v6] = objc_msgSend(v7, "init");
  v9 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_titleLabel;
  *(_QWORD *)&v8[v9] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v10 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_secondaryLabel;
  *(_QWORD *)&v8[v10] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v11 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_statusLabel;
  *(_QWORD *)&v8[v11] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v12 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_chevron;
  v13 = sub_1003434F4();
  v14 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v13);

  *(_QWORD *)&v8[v12] = v14;
  v15 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_separator;
  *(_QWORD *)&v8[v15] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v16 = &v8[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_title];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v17 = &v8[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_subtitle];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;
  v18 = &v8[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_status];
  *(_QWORD *)v18 = 0;
  *((_QWORD *)v18 + 1) = 0;
  v8[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_separated] = 1;
  v8[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_isChevronVisible] = a1;

  v21.receiver = v8;
  v21.super_class = (Class)type metadata accessor for FMMultiSettingsStatusRowView();
  v19 = objc_msgSendSuper2(&v21, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v19, "setUserInteractionEnabled:", a1 & 1);
  sub_100432524();
  sub_1004328F0(a2);

  return v19;
}

uint64_t sub_100432428()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;
  uint64_t v7;
  uint64_t v8;
  Swift::String v9;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_title + 8);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_title);
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_title + 8));
    v3._countAndFlagsBits = v2;
    v3._object = v1;
    String.append(_:)(v3);
    swift_bridgeObjectRelease(v1);
  }
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_subtitle + 8);
  if (v4)
  {
    v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_subtitle);
    String.append(_:)(*(Swift::String *)(&v4 - 1));
    v6._countAndFlagsBits = 44;
    v6._object = (void *)0xE100000000000000;
    String.append(_:)(v6);
    swift_bridgeObjectRelease(0xE100000000000000);
  }
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_status + 8);
  if (v7)
  {
    v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_status);
    String.append(_:)(*(Swift::String *)(&v7 - 1));
    v9._countAndFlagsBits = 44;
    v9._object = (void *)0xE100000000000000;
    String.append(_:)(v9);
    swift_bridgeObjectRelease(0xE100000000000000);
  }
  return 0;
}

id sub_100432524()
{
  _BYTE *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v25;

  v1 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_chevron;
  v25 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_chevron;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_chevron], "setHidden:", (v0[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_isChevronVisible] & 1) == 0);
  objc_msgSend(*(id *)&v0[v1], "setContentMode:", 1);
  v2 = *(void **)&v0[v1];
  v3 = (void *)objc_opt_self(UIColor);
  v4 = v2;
  v5 = objc_msgSend(v3, "tertiaryLabelColor");
  objc_msgSend(v4, "setTintColor:", v5);

  v6 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_titleLabel;
  v7 = *(void **)&v0[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_titleLabel];
  v8 = (void *)objc_opt_self(UIFont);
  v9 = v7;
  v10 = objc_msgSend(v8, "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v9, "setFont:", v10);

  objc_msgSend(*(id *)&v0[v6], "setNumberOfLines:", 0);
  objc_msgSend(*(id *)&v0[v6], "setAdjustsFontForContentSizeCategory:", 1);
  v11 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_secondaryLabel;
  v12 = *(id *)&v0[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_secondaryLabel];
  v13 = objc_msgSend(v8, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  objc_msgSend(v12, "setFont:", v13);

  v14 = *(id *)&v0[v11];
  v15 = objc_msgSend(v3, "secondaryLabelColor");
  objc_msgSend(v14, "setTextColor:", v15);

  objc_msgSend(*(id *)&v0[v11], "setTextAlignment:", 4);
  objc_msgSend(*(id *)&v0[v11], "setNumberOfLines:", 0);
  objc_msgSend(*(id *)&v0[v11], "setAdjustsFontForContentSizeCategory:", 1);
  v16 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_statusLabel;
  v17 = *(id *)&v0[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_statusLabel];
  v18 = objc_msgSend(v8, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  objc_msgSend(v17, "setFont:", v18);

  v19 = *(id *)&v0[v16];
  v20 = objc_msgSend(v3, "tertiaryLabelColor");
  objc_msgSend(v19, "setTextColor:", v20);

  objc_msgSend(*(id *)&v0[v16], "setTextAlignment:", 4);
  objc_msgSend(*(id *)&v0[v16], "setNumberOfLines:", 0);
  objc_msgSend(*(id *)&v0[v16], "setAdjustsFontForContentSizeCategory:", 1);
  v21 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_separator;
  v22 = *(id *)&v0[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_separator];
  v23 = objc_msgSend(v3, "tertiaryLabelColor");
  objc_msgSend(v22, "setBackgroundColor:", v23);

  objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_backgroundView]);
  objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[v6]);
  objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[v11]);
  objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[v16]);
  objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[v25]);
  return objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[v21]);
}

void sub_1004328F0(double a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  Class isa;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  Class v25;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  Class v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  uint64_t v62;
  Class v63;
  double v64;
  uint64_t v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  double v77;
  double v78;
  id v79;
  uint64_t v80;
  Class v81;
  uint64_t v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  Class v101;

  v2 = v1;
  v4 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_titleLabel;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_titleLabel], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_secondaryLabel;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_secondaryLabel], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v97 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_statusLabel;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_statusLabel], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v99 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_separator;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_separator], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v96 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_chevron;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_chevron], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v100 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_backgroundView;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_backgroundView], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v6 = (void *)objc_opt_self(NSLayoutConstraint);
  v7 = sub_100053F2C(&qword_1005D2F10);
  v8 = swift_allocObject(v7, 48, 7);
  *(_OWORD *)(v8 + 16) = xmmword_1004820B0;
  v9 = objc_msgSend(*(id *)&v2[v4], "topAnchor");
  v10 = objc_msgSend(v2, "topAnchor");
  if (qword_1005D20B0 != -1)
    swift_once(&qword_1005D20B0, sub_100432190);
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v10, *((double *)&xmmword_1005F6170 + 1));

  *(_QWORD *)(v8 + 32) = v11;
  v12 = objc_msgSend(*(id *)&v2[v4], "leadingAnchor");
  v13 = objc_msgSend(v2, "leadingAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(v8 + 40) = v14;
  specialized Array._endMutation()(v15);
  sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v6, "activateConstraints:", isa, swift_bridgeObjectRelease(v8).n128_f64[0]);

  v17 = swift_allocObject(v7, 48, 7);
  *(_OWORD *)(v17 + 16) = xmmword_1004820B0;
  v18 = objc_msgSend(*(id *)&v2[v5], "topAnchor");
  v19 = objc_msgSend(*(id *)&v2[v4], "bottomAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:constant:", v19, *(double *)&xmmword_1005F6170);

  *(_QWORD *)(v17 + 32) = v20;
  v21 = objc_msgSend(*(id *)&v2[v5], "leadingAnchor");
  v22 = objc_msgSend(v2, "leadingAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

  *(_QWORD *)(v17 + 40) = v23;
  specialized Array._endMutation()(v24);
  v25 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v6, "activateConstraints:", v25, swift_bridgeObjectRelease(v17).n128_f64[0]);

  v26 = swift_allocObject(v7, 56, 7);
  *(_OWORD *)(v26 + 16) = xmmword_1004820C0;
  v27 = objc_msgSend(*(id *)&v2[v97], "topAnchor");
  v28 = objc_msgSend(*(id *)&v2[v5], "bottomAnchor");
  v29 = objc_msgSend(v27, "constraintEqualToAnchor:constant:", v28, *(double *)&xmmword_1005F6170);

  *(_QWORD *)(v26 + 32) = v29;
  v30 = objc_msgSend(*(id *)&v2[v97], "bottomAnchor");
  v31 = objc_msgSend(v2, "bottomAnchor");
  v32 = objc_msgSend(v30, "constraintEqualToAnchor:constant:", v31, -*((double *)&xmmword_1005F6170 + 1));

  *(_QWORD *)(v26 + 40) = v32;
  v33 = objc_msgSend(*(id *)&v2[v97], "leadingAnchor");
  v34 = objc_msgSend(v2, "leadingAnchor");
  v35 = objc_msgSend(v33, "constraintEqualToAnchor:", v34);

  *(_QWORD *)(v26 + 48) = v35;
  specialized Array._endMutation()(v36);
  v37 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v6, "activateConstraints:", v37, swift_bridgeObjectRelease(v26).n128_f64[0]);

  v98 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_isChevronVisible;
  if (v2[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_isChevronVisible] == 1)
  {
    v38 = swift_allocObject(v7, 80, 7);
    *(_OWORD *)(v38 + 16) = xmmword_100484130;
    v39 = objc_msgSend(*(id *)&v2[v96], "centerYAnchor");
    v40 = objc_msgSend(v2, "centerYAnchor");
    v41 = objc_msgSend(v39, "constraintEqualToAnchor:", v40);

    *(_QWORD *)(v38 + 32) = v41;
    v42 = objc_msgSend(*(id *)&v2[v96], "leadingAnchor");
    v43 = objc_msgSend(*(id *)&v2[v4], "trailingAnchor");
    if (qword_1005D20D0 != -1)
      swift_once(&qword_1005D20D0, sub_100443DCC);
    v44 = objc_msgSend(v42, "constraintEqualToAnchor:constant:", v43, *(double *)&qword_1005F61C0);

    *(_QWORD *)(v38 + 40) = v44;
    v45 = objc_msgSend(*(id *)&v2[v96], "leadingAnchor");
    v46 = objc_msgSend(*(id *)&v2[v5], "trailingAnchor");
    v47 = objc_msgSend(v45, "constraintEqualToAnchor:constant:", v46, *(double *)&qword_1005F61C0);

    *(_QWORD *)(v38 + 48) = v47;
    v48 = objc_msgSend(*(id *)&v2[v96], "trailingAnchor");
    v49 = objc_msgSend(v2, "trailingAnchor");
    v50 = objc_msgSend(v48, "constraintEqualToAnchor:", v49);

    *(_QWORD *)(v38 + 56) = v50;
    v51 = objc_msgSend(*(id *)&v2[v96], "heightAnchor");
    v52 = objc_retainAutoreleasedReturnValue(objc_msgSend(v51, "constraintEqualToConstant:", *((double *)&xmmword_1005F61B0
                                                                                             + 1)));

    *(_QWORD *)(v38 + 64) = v52;
    v53 = objc_msgSend(*(id *)&v2[v96], "widthAnchor");
    v54 = objc_msgSend(v53, "constraintEqualToConstant:", *(double *)&xmmword_1005F61B0);

    *(_QWORD *)(v38 + 72) = v54;
    specialized Array._endMutation()(v55);
  }
  else
  {
    v38 = swift_allocObject(v7, 48, 7);
    *(_OWORD *)(v38 + 16) = xmmword_1004820B0;
    v56 = objc_msgSend(*(id *)&v2[v4], "trailingAnchor");
    v57 = objc_msgSend(v2, "trailingAnchor");
    v58 = objc_msgSend(v56, "constraintEqualToAnchor:constant:", v57, 0.0);

    *(_QWORD *)(v38 + 32) = v58;
    v59 = objc_msgSend(*(id *)&v2[v5], "trailingAnchor");
    v60 = objc_msgSend(v2, "trailingAnchor");
    v61 = objc_msgSend(v59, "constraintEqualToAnchor:constant:", v60, 0.0);

    *(_QWORD *)(v38 + 40) = v61;
    specialized Array._endMutation()(v62);
  }
  v63 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v6, "activateConstraints:", v63, swift_bridgeObjectRelease(v38).n128_f64[0]);

  if (v2[v98])
    v64 = a1;
  else
    v64 = *((double *)&xmmword_1005F6170 + 1);
  v65 = swift_allocObject(v7, 64, 7);
  *(_OWORD *)(v65 + 16) = xmmword_100481720;
  v66 = objc_msgSend(*(id *)&v2[v99], "leadingAnchor");
  v67 = objc_msgSend(v2, "leadingAnchor");
  v68 = objc_msgSend(v66, "constraintEqualToAnchor:", v67);

  *(_QWORD *)(v65 + 32) = v68;
  v69 = objc_msgSend(*(id *)&v2[v99], "trailingAnchor");
  v70 = objc_msgSend(v2, "trailingAnchor");
  v71 = objc_msgSend(v69, "constraintEqualToAnchor:constant:", v70, v64);

  *(_QWORD *)(v65 + 40) = v71;
  v72 = objc_msgSend(*(id *)&v2[v99], "bottomAnchor");
  v73 = objc_msgSend(v2, "bottomAnchor");
  v74 = objc_msgSend(v72, "constraintEqualToAnchor:constant:", v73, 0.0);

  *(_QWORD *)(v65 + 48) = v74;
  v75 = objc_msgSend(*(id *)&v2[v99], "heightAnchor");
  v76 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v76, "scale");
  v78 = v77;

  v79 = objc_msgSend(v75, "constraintEqualToConstant:", 1.0 / v78);
  *(_QWORD *)(v65 + 56) = v79;
  specialized Array._endMutation()(v80);
  v81 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v6, "activateConstraints:", v81, swift_bridgeObjectRelease(v65).n128_f64[0]);

  v82 = swift_allocObject(v7, 64, 7);
  *(_OWORD *)(v82 + 16) = xmmword_100481720;
  v83 = objc_msgSend(*(id *)&v2[v100], "topAnchor");
  v84 = objc_msgSend(v2, "topAnchor");
  v85 = objc_msgSend(v83, "constraintEqualToAnchor:", v84);

  *(_QWORD *)(v82 + 32) = v85;
  v86 = objc_msgSend(*(id *)&v2[v100], "bottomAnchor");
  v87 = objc_msgSend(v2, "bottomAnchor");
  v88 = objc_msgSend(v86, "constraintEqualToAnchor:", v87);

  *(_QWORD *)(v82 + 40) = v88;
  v89 = objc_msgSend(*(id *)&v2[v100], "leadingAnchor");
  v90 = objc_msgSend(v2, "leadingAnchor");
  v91 = objc_msgSend(v89, "constraintEqualToAnchor:constant:", v90, -a1);

  *(_QWORD *)(v82 + 48) = v91;
  v92 = objc_msgSend(*(id *)&v2[v100], "trailingAnchor");
  v93 = objc_msgSend(v2, "trailingAnchor");
  v94 = objc_msgSend(v92, "constraintEqualToAnchor:constant:", v93, a1);

  *(_QWORD *)(v82 + 56) = v94;
  specialized Array._endMutation()(v95);
  v101 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v6, "activateConstraints:", v101, swift_bridgeObjectRelease(v82).n128_f64[0]);

}

void sub_1004335F0(uint64_t a1, uint64_t a2)
{
  char *v2;
  Class isa;
  id v5;
  id v6;
  id v7;
  void *v8;
  char **v9;
  id v10;
  objc_super v11;

  sub_100006C5C(0, (unint64_t *)&qword_1005D3F00, UITouch_ptr);
  sub_1000B0798();
  isa = Set._bridgeToObjectiveC()().super.isa;
  v11.receiver = v2;
  v11.super_class = (Class)type metadata accessor for FMMultiSettingsStatusRowView();
  objc_msgSendSuper2(&v11, "touchesBegan:withEvent:", isa, a2);

  v5 = *(id *)&v2[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_backgroundView];
  v6 = objc_msgSend(v2, "traitCollection");
  v7 = objc_msgSend(v6, "userInterfaceStyle");

  v8 = (void *)objc_opt_self(UIColor);
  v9 = &selRef_systemGray3Color;
  if (v7 != (id)2)
    v9 = &selRef_systemGray5Color;
  v10 = objc_msgSend(v8, *v9);
  objc_msgSend(v5, "setBackgroundColor:", v10);

}

void sub_1004337B8(void *a1, uint64_t a2, uint64_t a3, void *a4, SEL *a5)
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  char *v13;
  Class isa;
  void *v15;
  void *v16;
  id v17;
  id v18;
  objc_super v19;

  v9 = sub_100006C5C(0, (unint64_t *)&qword_1005D3F00, UITouch_ptr);
  v10 = sub_1000B0798();
  v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)(a3, v9, v10);
  v12 = a4;
  v13 = a1;
  isa = Set._bridgeToObjectiveC()().super.isa;
  v19.receiver = v13;
  v19.super_class = (Class)type metadata accessor for FMMultiSettingsStatusRowView();
  objc_msgSendSuper2(&v19, *a5, isa, v12);

  v15 = *(void **)&v13[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_backgroundView];
  v16 = (void *)objc_opt_self(UIColor);
  v17 = v15;
  v18 = objc_msgSend(v16, "clearColor");
  objc_msgSend(v17, "setBackgroundColor:", v18);

  swift_bridgeObjectRelease(v11);
}

id sub_10043390C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMMultiSettingsStatusRowView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMMultiSettingsStatusRowView()
{
  return objc_opt_self(_TtC6FindMy28FMMultiSettingsStatusRowView);
}

void sub_100433A24()
{
  _BYTE *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;

  v1 = &v0[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_identifier];
  *v1 = 0;
  v1[1] = 0;
  v2 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_backgroundView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v3 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_titleLabel;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v4 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_secondaryLabel;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v5 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_statusLabel;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v6 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_chevron;
  v7 = sub_1003434F4();
  v8 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v7);

  *(_QWORD *)&v0[v6] = v8;
  v9 = OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_separator;
  *(_QWORD *)&v0[v9] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v10 = &v0[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_title];
  *v10 = 0;
  v10[1] = 0;
  v11 = &v0[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_subtitle];
  *v11 = 0;
  v11[1] = 0;
  v12 = &v0[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_status];
  *v12 = 0;
  v12[1] = 0;
  v0[OBJC_IVAR____TtC6FindMy28FMMultiSettingsStatusRowView_separated] = 1;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMMultiSettingsStatusRowView.swift", 41, 2, 84, 0);
  __break(1u);
}

uint64_t *sub_100433BAC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v16);
  }
  else
  {
    v7 = type metadata accessor for URL(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 24);
    v13 = (uint64_t *)((char *)a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain(v15);
  }
  return a1;
}

uint64_t sub_100433C74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + *(int *)(a2 + 24) + 8));
}

uint64_t sub_100433CE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain(v14);
  return a1;
}

uint64_t sub_100433D84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v14 = v13[1];
  v15 = v12[1];
  v12[1] = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  return a1;
}

uint64_t sub_100433E34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100433EC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for URL(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  v16 = v12[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease(v16);
  return a1;
}

uint64_t sub_100433F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100433F70);
}

uint64_t sub_100433F70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_10043401C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100434028);
}

uint64_t sub_100434028(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for URL(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for FMIPHawkeyeProductInformation.AssetType(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

void sub_1004340D0(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

uint64_t sub_100434128(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v4 = BYTE6(v24);
  if (BYTE6(v24))
  {
    *(_QWORD *)(v3 - 104) = v2;
    v5 = BYTE6(v24);
    v6 = sub_100111E28(0, BYTE6(v24), 0);
    v2 = *(_QWORD *)(v3 - 104);
    if ((_DWORD)v1)
    {
      if ((_DWORD)v1 == 1)
        v7 = (int)a1;
      else
        v7 = *(_QWORD *)(a1 + 16);
    }
    else
    {
      v7 = 0;
    }
    *(_QWORD *)(v3 - 136) = v24 & 0x3FFFFFFFFFFFFFFFLL;
    *(_QWORD *)(v3 - 128) = v1;
    while (v5)
    {
      if ((_DWORD)v1)
      {
        if ((_DWORD)v1 == 1)
        {
          if (v7 < (int)a1 || v7 >= a1 >> 32)
            goto LABEL_29;
          v8 = ((uint64_t (*)(uint64_t))__DataStorage._bytes.getter)(v6);
          if (!v8)
          {
            __break(1u);
LABEL_36:
            __break(1u);
          }
          v9 = v8;
          v10 = __DataStorage._offset.getter();
          v11 = v7 - v10;
          if (__OFSUB__(v7, v10))
            goto LABEL_32;
        }
        else
        {
          if (v7 < *(_QWORD *)(a1 + 16))
            goto LABEL_31;
          if (v7 >= *(_QWORD *)(a1 + 24))
            goto LABEL_33;
          v13 = ((uint64_t (*)(uint64_t))__DataStorage._bytes.getter)(v6);
          if (!v13)
            goto LABEL_36;
          v9 = v13;
          v14 = __DataStorage._offset.getter();
          v11 = v7 - v14;
          if (__OFSUB__(v7, v14))
            goto LABEL_34;
        }
        v12 = *(_BYTE *)(v9 + v11);
      }
      else
      {
        if (v7 >= BYTE6(v24))
          goto LABEL_30;
        *(_QWORD *)(v3 - 118) = a1;
        *(_WORD *)(v3 - 110) = v24;
        *(_BYTE *)(v3 - 108) = BYTE2(v24);
        *(_BYTE *)(v3 - 107) = BYTE3(v24);
        *(_BYTE *)(v3 - 106) = BYTE4(v24);
        *(_BYTE *)(v3 - 105) = BYTE5(v24);
        v12 = *(_BYTE *)(v3 - 118 + v7);
      }
      v15 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
      v16 = swift_allocObject(v15, 72, 7);
      *(_OWORD *)(v16 + 16) = xmmword_100481740;
      *(_QWORD *)(v16 + 56) = &type metadata for UInt8;
      *(_QWORD *)(v16 + 64) = &protocol witness table for UInt8;
      *(_BYTE *)(v16 + 32) = v12;
      v6 = String.init(format:_:)(0x786868323025, 0xE600000000000000, v16);
      v17 = v6;
      v19 = v18;
      *(_QWORD *)(v3 - 104) = v2;
      v21 = *(_QWORD *)(v2 + 16);
      v20 = *(_QWORD *)(v2 + 24);
      if (v21 >= v20 >> 1)
      {
        v6 = sub_100111E28(v20 > 1, v21 + 1, 1);
        v2 = *(_QWORD *)(v3 - 104);
      }
      *(_QWORD *)(v2 + 16) = v21 + 1;
      v22 = v2 + 16 * v21;
      *(_QWORD *)(v22 + 32) = v17;
      *(_QWORD *)(v22 + 40) = v19;
      ++v7;
      --v5;
      --v4;
      v1 = *(_QWORD *)(v3 - 128);
      if (!v4)
        return v2;
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    __break(1u);
    JUMPOUT(0x100434440);
  }
  return v2;
}

uint64_t sub_100434468@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t);
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  Swift::String v28;
  uint64_t v29;
  Swift::String v30;
  void *object;
  Swift::String v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  os_log_type_t v37;
  uint64_t v38;
  NSObject *v39;
  _BOOL4 v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t result;
  uint64_t *v56;
  _QWORD v57[2];
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;

  v64 = a3;
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FMIPHawkeyeProductInformation.AssetScale(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for URL(0);
  v13 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v15 = (char *)v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004348E8((uint64_t)v12);
  v63 = a1;
  FMIPHawkeyeProductInformation.assetURL(for:scale:)(a2, v12);
  v16 = *(void (**)(char *, uint64_t))(v10 + 8);
  v17 = v15;
  v16(v12, v9);
  v18 = sub_1004350A8();
  if (v19)
  {
    v20 = v18;
    v21 = v19;
    v22 = v64;
    v23 = v62;
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(v64, v17, v62);
    v24 = type metadata accessor for FMAccessoryProductImageRequest(0);
    v25 = v22 + *(int *)(v24 + 20);
    v26 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v25, a2, v26);
    v27 = type metadata accessor for FMIPHawkeyeProductInformation(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v63, v27);
  }
  else
  {
    v59 = v8;
    v60 = v5;
    v66 = 0;
    v67 = 0xE000000000000000;
    _StringGuts.grow(_:)(86);
    v28._object = (void *)0x80000001004C69C0;
    v28._countAndFlagsBits = 0xD000000000000054;
    String.append(_:)(v28);
    v29 = sub_100008000((unint64_t *)&unk_1005D39D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
    v61 = v15;
    v23 = v62;
    v30._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(v62, v29);
    object = v30._object;
    String.append(_:)(v30);
    swift_bridgeObjectRelease(object);
    v32._countAndFlagsBits = 0;
    v32._object = (void *)0xE000000000000000;
    String.append(_:)(v32);
    v33 = v66;
    v34 = v67;
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v35 = type metadata accessor for Logger(0);
    v36 = sub_100056D88(v35, (uint64_t)qword_1005F5748);
    v37 = static os_log_type_t.error.getter(v36);
    v38 = swift_bridgeObjectRetain_n(v34, 2);
    v39 = Logger.logObject.getter(v38);
    v40 = os_log_type_enabled(v39, v37);
    v58 = v6;
    if (v40)
    {
      v41 = (uint8_t *)swift_slowAlloc(12, -1);
      v42 = swift_slowAlloc(32, -1);
      v66 = v42;
      *(_DWORD *)v41 = 136315138;
      v57[1] = v41 + 4;
      swift_bridgeObjectRetain(v34);
      v65 = sub_100056DA0(v33, v34, &v66);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66);
      swift_bridgeObjectRelease_n(v34, 3);
      _os_log_impl((void *)&_mh_execute_header, v39, v37, "%s", v41, 0xCu);
      swift_arrayDestroy(v42, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v42, -1, -1);
      swift_slowDealloc(v41, -1, -1);
      swift_bridgeObjectRelease(v34);

    }
    else
    {

      swift_bridgeObjectRelease_n(v34, 3);
    }
    v43 = v64;
    v44 = v59;
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(v64, v61, v23);
    v24 = type metadata accessor for FMAccessoryProductImageRequest(0);
    v45 = v43 + *(int *)(v24 + 20);
    v46 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType(0);
    v47 = *(_QWORD *)(v46 - 8);
    v48 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v45, a2, v46);
    v49 = UUID.init()(v48);
    v20 = UUID.uuidString.getter(v49);
    v21 = v50;
    v51 = a2;
    v52 = v46;
    v17 = v61;
    v53 = v44;
    v22 = v64;
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v51, v52);
    v54 = type metadata accessor for FMIPHawkeyeProductInformation(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v63, v54);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v53, v60);
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v23);
  result = type metadata accessor for FMAccessoryProductImageRequest(0);
  v56 = (uint64_t *)(v22 + *(int *)(v24 + 24));
  *v56 = v20;
  v56[1] = v21;
  return result;
}

uint64_t sub_1004348E8@<X0>(uint64_t a1@<X8>)
{
  void *v2;
  id v3;
  double v4;
  double v5;
  unsigned int *v6;
  uint64_t v7;
  uint64_t v8;
  Swift::String v10;
  id v11;
  double v12;
  double v13;
  Swift::String v14;
  void *object;
  Swift::String v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28[2];

  v2 = (void *)objc_opt_self(UIScreen);
  v3 = objc_msgSend(v2, "mainScreen");
  objc_msgSend(v3, "scale");
  v5 = v4;

  if (v5 == 1.0)
  {
    v6 = (unsigned int *)&enum case for FMIPHawkeyeProductInformation.AssetScale.x1(_:);
LABEL_7:
    v7 = *v6;
    v8 = type metadata accessor for FMIPHawkeyeProductInformation.AssetScale(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(a1, v7, v8);
  }
  if (v5 == 2.0)
  {
    v6 = (unsigned int *)&enum case for FMIPHawkeyeProductInformation.AssetScale.x2(_:);
    goto LABEL_7;
  }
  if (v5 == 3.0)
  {
    v6 = (unsigned int *)&enum case for FMIPHawkeyeProductInformation.AssetScale.x3(_:);
    goto LABEL_7;
  }
  v28[0] = 0;
  v28[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(59);
  v10._object = (void *)0x80000001004C6A20;
  v10._countAndFlagsBits = 0xD000000000000039;
  String.append(_:)(v10);
  v11 = objc_msgSend(v2, "mainScreen");
  objc_msgSend(v11, "scale");
  v13 = v12;

  v14._countAndFlagsBits = Double.description.getter(v13);
  object = v14._object;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(object);
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  String.append(_:)(v16);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v17 = type metadata accessor for Logger(0);
  v18 = sub_100056D88(v17, (uint64_t)qword_1005F5748);
  v19 = static os_log_type_t.error.getter(v18);
  v20 = swift_bridgeObjectRetain_n(0xE000000000000000, 2);
  v21 = Logger.logObject.getter(v20);
  v22 = v19;
  if (os_log_type_enabled(v21, v19))
  {
    v23 = (uint8_t *)swift_slowAlloc(12, -1);
    v24 = swift_slowAlloc(32, -1);
    v28[0] = v24;
    *(_DWORD *)v23 = 136315138;
    swift_bridgeObjectRetain(0xE000000000000000);
    v27 = sub_100056DA0(0, 0xE000000000000000, v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, v28);
    swift_bridgeObjectRelease_n(0xE000000000000000, 3);
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "%s", v23, 0xCu);
    swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v23, -1, -1);
    swift_bridgeObjectRelease(0xE000000000000000);

  }
  else
  {

    swift_bridgeObjectRelease_n(0xE000000000000000, 3);
  }
  v25 = enum case for FMIPHawkeyeProductInformation.AssetScale.x3(_:);
  v26 = type metadata accessor for FMIPHawkeyeProductInformation.AssetScale(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(a1, v25, v26);
}

Swift::Int sub_100434C1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[9];

  Hasher.init(_seed:)(v11, 0);
  v3 = type metadata accessor for URL(0);
  v4 = sub_100008000(&qword_1005D8D80, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  dispatch thunk of Hashable.hash(into:)(v11, v3, v4);
  v5 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType(0);
  v6 = sub_100008000(&qword_1005D8D78, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPHawkeyeProductInformation.AssetType, (uint64_t)&protocol conformance descriptor for FMIPHawkeyeProductInformation.AssetType);
  dispatch thunk of Hashable.hash(into:)(v11, v5, v6);
  v7 = (uint64_t *)(v1 + *(int *)(a1 + 24));
  v8 = *v7;
  v9 = v7[1];
  swift_bridgeObjectRetain(v9);
  String.hash(into:)(v11, v8, v9);
  swift_bridgeObjectRelease(v9);
  return Hasher._finalize()();
}

double sub_100434D04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  double result;

  v5 = type metadata accessor for URL(0);
  v6 = sub_100008000(&qword_1005D8D80, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  dispatch thunk of Hashable.hash(into:)(a1, v5, v6);
  v7 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType(0);
  v8 = sub_100008000(&qword_1005D8D78, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPHawkeyeProductInformation.AssetType, (uint64_t)&protocol conformance descriptor for FMIPHawkeyeProductInformation.AssetType);
  dispatch thunk of Hashable.hash(into:)(a1, v7, v8);
  v9 = (uint64_t *)(v2 + *(int *)(a2 + 24));
  v10 = *v9;
  v11 = v9[1];
  swift_bridgeObjectRetain(v11);
  String.hash(into:)(a1, v10, v11);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
  return result;
}

Swift::Int sub_100434DD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[9];

  Hasher.init(_seed:)(v12, a1);
  v4 = type metadata accessor for URL(0);
  v5 = sub_100008000(&qword_1005D8D80, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
  dispatch thunk of Hashable.hash(into:)(v12, v4, v5);
  v6 = type metadata accessor for FMIPHawkeyeProductInformation.AssetType(0);
  v7 = sub_100008000(&qword_1005D8D78, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPHawkeyeProductInformation.AssetType, (uint64_t)&protocol conformance descriptor for FMIPHawkeyeProductInformation.AssetType);
  dispatch thunk of Hashable.hash(into:)(v12, v6, v7);
  v8 = (uint64_t *)(v2 + *(int *)(a2 + 24));
  v9 = *v8;
  v10 = v8[1];
  swift_bridgeObjectRetain(v10);
  String.hash(into:)(v12, v9, v10);
  swift_bridgeObjectRelease(v10);
  return Hasher._finalize()();
}

uint64_t sub_100434EBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  if ((static URL.== infix(_:_:)() & 1) == 0
    || (static FMIPHawkeyeProductInformation.AssetType.== infix(_:_:)(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20)) & 1) == 0)
  {
    return 0;
  }
  v6 = *(int *)(a3 + 24);
  v7 = *(_QWORD *)(a1 + v6);
  v8 = *(_QWORD *)(a1 + v6 + 8);
  v9 = (_QWORD *)(a2 + v6);
  v10 = v9[1];
  if (v7 == *v9 && v8 == v10)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, *v9, v10, 0);
}

uint64_t sub_100434F44()
{
  return sub_100008000(&qword_1005E4E00, type metadata accessor for FMAccessoryProductImageRequest, (uint64_t)&unk_1004912E8);
}

_BYTE *sub_100434F70@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = (_BYTE *)sub_100435548(result, a2);
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = (_BYTE *)sub_100435608((uint64_t)result, (uint64_t)a2);
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = (_BYTE *)sub_100435680((uint64_t)result, (uint64_t)a2);
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_100434FE4(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = __DataStorage._bytes.getter();
  v5 = result;
  if (result)
  {
    result = __DataStorage._offset.getter();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v5 += a1 - result;
  }
  v6 = __OFSUB__(a2, a1);
  v7 = a2 - a1;
  if (v6)
  {
    __break(1u);
    goto LABEL_13;
  }
  v8 = __DataStorage._length.getter();
  if (v8 >= v7)
    v9 = v7;
  else
    v9 = v8;
  v10 = v5 + v9;
  if (v5)
    v11 = v10;
  else
    v11 = 0;
  v12 = type metadata accessor for Insecure.MD5(0);
  v13 = sub_100008000(&qword_1005D39A8, (uint64_t (*)(uint64_t))&type metadata accessor for Insecure.MD5, (uint64_t)&protocol conformance descriptor for Insecure.MD5);
  return dispatch thunk of HashFunction.update(bufferPointer:)(v5, v11, v12, v13);
}

uint64_t sub_1004350A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  __n128 v18;
  char *v19;
  _QWORD v21[6];

  v0 = type metadata accessor for Insecure.MD5Digest(0);
  v1 = *(_QWORD *)(v0 - 8);
  v21[4] = v0;
  v21[5] = v1;
  __chkstk_darwin(v0);
  v2 = type metadata accessor for String.Encoding(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Insecure.MD5(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = Insecure.MD5.init()(v8);
  v12 = URL.absoluteString.getter(v11);
  v14 = v13;
  static String.Encoding.utf8.getter();
  v15 = String.data(using:allowLossyConversion:)(v5, 0, v12, v14);
  v17 = v16;
  v18 = swift_bridgeObjectRelease(v14);
  (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v18);
  if (v17 >> 60 != 15)
  {
    v21[2] = v15;
    v21[3] = v7;
    v19 = (char *)&loc_10043520C + dword_100435524[v17 >> 62];
    v21[1] = v6;
    __asm { BR              X10 }
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return 0;
}

uint64_t sub_100435534(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_100027B98(result, a2);
  return result;
}

uint64_t sub_100435548(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;

  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_100435608(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  if (a1)
    v3 = a2 - a1;
  else
    v3 = 0;
  v4 = type metadata accessor for __DataStorage(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  result = __DataStorage.init(bytes:length:)(a1, v3);
  if (v3 < 0)
  {
    __break(1u);
  }
  else
  {
    v6 = type metadata accessor for Data.RangeReference(0);
    result = swift_allocObject(v6, 32, 7);
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = v3;
  }
  return result;
}

uint64_t sub_100435680(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  if (a1)
    v3 = a2 - a1;
  else
    v3 = 0;
  v4 = type metadata accessor for __DataStorage(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  result = __DataStorage.init(bytes:length:)(a1, v3);
  if (v3 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v3 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v3 & 0x80000000) == 0)
    return v3 << 32;
LABEL_10:
  __break(1u);
  return result;
}

id sub_100435700(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  objc_class *v7;
  id v8;
  uint64_t v9;
  id v10;
  id v11;
  objc_super v13;

  v3 = OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_verticalStackView;
  v4 = objc_allocWithZone((Class)UIStackView);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_conditionSubscription] = 0;
  v6 = OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_airplaneModeOnAttention;
  v7 = (objc_class *)type metadata accessor for FMExtendedPlatterInfoView(0);
  v8 = objc_allocWithZone(v7);
  *(_QWORD *)&v5[v6] = sub_1002C114C(1, 0);
  v9 = OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_bluetoothOffAttention;
  v10 = objc_allocWithZone(v7);
  *(_QWORD *)&v5[v9] = sub_1002C114C(1, 0);
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_spacing] = 0x3810000000000000;
  v5[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_shouldShowAirplaneModeAttention] = 1;
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_mediator] = a1;
  swift_retain(a1);

  v13.receiver = v5;
  v13.super_class = (Class)type metadata accessor for FMErrorConditionsAttentionModule();
  v11 = objc_msgSendSuper2(&v13, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_100435A1C();

  swift_release(a1);
  return v11;
}

void sub_100435864()
{
  char *v0;
  void *v1;
  uint64_t v2;
  char *v3;
  uint64_t *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_class *v10;
  uint64_t v11;
  _BYTE v12[24];
  objc_super v13;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_conditionSubscription];
  if (!v2)
    goto LABEL_5;
  v3 = *(char **)(*(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_mediator] + 16);
  v4 = (uint64_t *)&v3[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions];
  swift_beginAccess(&v3[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions], v12, 33, 0);
  swift_retain(v2);
  v5 = v3;
  v6 = sub_10005D558(v4, v2);
  v7 = v6;
  v8 = *v4;
  if ((unint64_t)*v4 >> 62)
  {
    if (v8 < 0)
      v11 = *v4;
    else
      v11 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v4);
    v9 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(v8);
    if (v9 >= v7)
      goto LABEL_4;
  }
  else
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9 >= v6)
    {
LABEL_4:
      sub_10005D32C(v7, v9);
      swift_endAccess(v12);
      swift_release(v2);

LABEL_5:
      v10 = (objc_class *)type metadata accessor for FMErrorConditionsAttentionModule();
      v13.receiver = v1;
      v13.super_class = v10;
      objc_msgSendSuper2(&v13, "dealloc");
      return;
    }
  }
  __break(1u);
}

id sub_100435A1C()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (**v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (**v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  _BYTE v25[24];

  v1 = *(void **)(*(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_mediator] + 16);
  v2 = type metadata accessor for FMConditionSubscription(0);
  v3 = swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v4 = v3 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber;
  *(_QWORD *)(v4 + 8) = 0;
  swift_unknownObjectWeakInit(v4);
  v5 = v1;
  v6 = v0;
  UUID.init()(v6);
  v7 = v3 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber;
  *(_QWORD *)(v7 + 8) = &off_100566B60;
  swift_unknownObjectWeakAssign(v7, v6);

  v8 = &v5[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions];
  swift_beginAccess(&v5[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions], v25, 33, 0);
  v9 = swift_retain(v3);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v9);
  v11 = *(_QWORD *)((*(_QWORD *)v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v10 = *(_QWORD *)((*(_QWORD *)v8 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v11 >= v10 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v10 > 1, v11 + 1, 1);
  v12 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v3);
  specialized Array._endMutation()(v12);
  swift_endAccess(v25);

  v13 = *(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_conditionSubscription];
  *(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_conditionSubscription] = v3;
  swift_release(v13);
  sub_100435C14();
  v14 = *(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_airplaneModeOnAttention];
  v15 = swift_allocObject(&unk_100566BF0, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16);
  v16 = (void (**)(uint64_t))(v14 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionHandler);
  v17 = *(_QWORD *)(v14 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionHandler);
  v18 = *(_QWORD *)(v14 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionHandler + 8);
  *v16 = sub_100436D88;
  v16[1] = (void (*)(uint64_t))v15;
  sub_1000327F0(v17, v18);
  v19 = *(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_bluetoothOffAttention];
  v20 = swift_allocObject(&unk_100566BF0, 24, 7);
  swift_unknownObjectWeakInit(v20 + 16);
  v21 = (void (**)(uint64_t))(v19 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionHandler);
  v22 = *(_QWORD *)(v19 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionHandler);
  v23 = *(_QWORD *)(v19 + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionHandler + 8);
  *v21 = sub_100436DA8;
  v21[1] = (void (*)(uint64_t))v20;
  sub_1000327F0(v22, v23);
  return sub_1004365C8();
}

void sub_100435C14()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  void *v5;
  id v6;
  Swift::String v7;
  Swift::String_optional v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String *v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  void *object;
  NSString v16;
  id v17;
  Swift::String v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String *v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  void *v25;
  NSString v26;
  id v27;
  Swift::String v28;
  void *v29;
  Swift::String_optional v30;
  Swift::String v31;
  Swift::String v32;
  Swift::String *v33;
  uint64_t v34;
  unint64_t v35;
  void *v36;
  void *v37;
  NSString v38;
  uint64_t v39;
  char *v40;
  id v41;
  Swift::String v42;
  Swift::String_optional v43;
  Swift::String v44;
  Swift::String v45;
  Swift::String *v46;
  uint64_t v47;
  unint64_t v48;
  void *v49;
  void *v50;
  NSString v51;
  id v52;
  Swift::String v53;
  Swift::String v54;
  Swift::String v55;
  Swift::String *v56;
  uint64_t v57;
  unint64_t v58;
  void *v59;
  void *v60;
  NSString v61;
  id v62;
  Swift::String v63;
  Swift::String_optional v64;
  Swift::String v65;
  Swift::String v66;
  Swift::String *v67;
  uint64_t v68;
  unint64_t v69;
  void *v70;
  void *v71;
  NSString v72;
  id v73;
  void *v74;
  char *v75;
  char *v76;
  char *v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  uint64_t v93;
  uint64_t v94;
  Class isa;
  uint64_t v96;
  void (*v97)(char *, _QWORD, uint64_t, uint64_t);
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  id v101;
  unint64_t v102;
  char *v103;
  uint64_t v104;
  unint64_t v105;
  Swift::String v106;
  Swift::String v107;
  Swift::String v108;
  Swift::String v109;
  Swift::String v110;
  Swift::String v111;

  v1 = sub_100053F2C((uint64_t *)&unk_1005E4430);
  __chkstk_darwin(v1);
  v3 = (char *)&v96 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = *(id *)&v0[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_verticalStackView];
  objc_msgSend(v0, "addSubview:");
  v103 = v0;
  v4 = *(char **)&v0[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_airplaneModeOnAttention];
  v5 = (void *)objc_opt_self(NSBundle);
  v6 = objc_msgSend(v5, "mainBundle");
  v106._countAndFlagsBits = 0xD000000000000018;
  v7._countAndFlagsBits = 0xD000000000000022;
  v106._object = (void *)0x80000001004A5660;
  v7._object = (void *)0x80000001004C6AF0;
  v102 = (unint64_t)"CLEAR_TAGS_BUTTON";
  v8.value._object = (void *)0x80000001004A5640;
  v8.value._countAndFlagsBits = 0xD000000000000013;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v106);

  v11 = (Swift::String *)&v4[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_title];
  v12 = *(_QWORD *)&v4[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_title + 8];
  *v11 = v10;
  v13 = swift_bridgeObjectRelease(v12).n128_u64[0];
  v14 = *(void **)&v4[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_label];
  object = v11->_object;
  if (object)
  {
    swift_bridgeObjectRetain(v11->_object);
    v16 = String._bridgeToObjectiveC()();
    v13 = swift_bridgeObjectRelease(object).n128_u64[0];
  }
  else
  {
    v16 = 0;
  }
  objc_msgSend(v14, "setText:", v16, *(double *)&v13);

  v104 = 0;
  v105 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v17 = objc_msgSend(v5, "mainBundle", swift_bridgeObjectRelease(v105).n128_f64[0]);
  v18._countAndFlagsBits = 0xD000000000000030;
  v107._countAndFlagsBits = 0xD000000000000042;
  v99 = (unint64_t)"ES_NOT_AVAILABLE";
  v107._object = (void *)0x80000001004AB860;
  v98 = (unint64_t)"_SUBTITLE_PEOPLE_GENERIC";
  v18._object = (void *)0x80000001004AB820;
  v19._countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v107);

  v21 = (Swift::String *)&v4[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitle];
  v22 = *(_QWORD *)&v4[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitle + 8];
  *v21 = v20;
  v23 = swift_bridgeObjectRelease(v22).n128_u64[0];
  v24 = *(void **)&v4[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitleLabel];
  v25 = v21->_object;
  if (v25)
  {
    swift_bridgeObjectRetain(v21->_object);
    v26 = String._bridgeToObjectiveC()();
    v23 = swift_bridgeObjectRelease(v25).n128_u64[0];
  }
  else
  {
    v26 = 0;
  }
  objc_msgSend(v24, "setText:", v26, *(double *)&v23);

  v27 = objc_msgSend(v5, "mainBundle");
  v28._countAndFlagsBits = 0xD000000000000028;
  v100 = (unint64_t)"Localizable-HAWKEYE";
  v108._object = (void *)0x80000001004A5660;
  v28._object = (void *)0x80000001004C6B20;
  v29 = (void *)(v102 | 0x8000000000000000);
  v30.value._countAndFlagsBits = 0xD000000000000013;
  v30.value._object = (void *)(v102 | 0x8000000000000000);
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  v108._countAndFlagsBits = 0xD000000000000018;
  v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, v30, (NSBundle)v27, v31, v108);

  v33 = (Swift::String *)&v4[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionTitle];
  v34 = *(_QWORD *)&v4[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionTitle + 8];
  *v33 = v32;
  v35 = swift_bridgeObjectRelease(v34).n128_u64[0];
  v36 = *(void **)&v4[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionLabel];
  v37 = v33->_object;
  if (v37)
  {
    swift_bridgeObjectRetain(v33->_object);
    v38 = String._bridgeToObjectiveC()();
    v35 = swift_bridgeObjectRelease(v37).n128_u64[0];
  }
  else
  {
    v38 = 0;
  }
  objc_msgSend(v36, "setText:", v38, *(double *)&v35);

  v39 = type metadata accessor for FMPlatterIcon(0);
  swift_storeEnumTagMultiPayload(v3, v39, 21);
  v97 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56);
  v97(v3, 0, 1, v39);
  sub_1002C0C88((uint64_t)v3);
  v40 = *(char **)&v103[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_bluetoothOffAttention];
  v41 = objc_msgSend(v5, "mainBundle");
  v42._countAndFlagsBits = 0xD00000000000001FLL;
  v109._object = (void *)0x80000001004A5660;
  v42._object = (void *)0x80000001004C6B50;
  v43.value._countAndFlagsBits = 0xD000000000000013;
  v43.value._object = v29;
  v44._countAndFlagsBits = 0;
  v44._object = (void *)0xE000000000000000;
  v109._countAndFlagsBits = 0xD000000000000018;
  v45 = NSLocalizedString(_:tableName:bundle:value:comment:)(v42, v43, (NSBundle)v41, v44, v109);

  v46 = (Swift::String *)&v40[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_title];
  v47 = *(_QWORD *)&v40[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_title + 8];
  *v46 = v45;
  v48 = swift_bridgeObjectRelease(v47).n128_u64[0];
  v49 = *(void **)&v40[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_label];
  v50 = v46->_object;
  if (v50)
  {
    swift_bridgeObjectRetain(v46->_object);
    v51 = String._bridgeToObjectiveC()();
    v48 = swift_bridgeObjectRelease(v50).n128_u64[0];
  }
  else
  {
    v51 = 0;
  }
  objc_msgSend(v49, "setText:", v51, *(double *)&v48);

  v104 = 0;
  v105 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v52 = objc_msgSend(v5, "mainBundle", swift_bridgeObjectRelease(v105).n128_f64[0]);
  v53._countAndFlagsBits = 0xD000000000000030;
  v110._countAndFlagsBits = 0xD000000000000042;
  v110._object = (void *)(v99 | 0x8000000000000000);
  v53._object = (void *)(v98 | 0x8000000000000000);
  v54._countAndFlagsBits = 0;
  v54._object = (void *)0xE000000000000000;
  v55 = NSLocalizedString(_:tableName:bundle:value:comment:)(v53, (Swift::String_optional)0, (NSBundle)v52, v54, v110);

  v56 = (Swift::String *)&v40[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitle];
  v57 = *(_QWORD *)&v40[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitle + 8];
  *v56 = v55;
  v58 = swift_bridgeObjectRelease(v57).n128_u64[0];
  v59 = *(void **)&v40[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_subtitleLabel];
  v60 = v56->_object;
  if (v60)
  {
    swift_bridgeObjectRetain(v56->_object);
    v61 = String._bridgeToObjectiveC()();
    v58 = swift_bridgeObjectRelease(v60).n128_u64[0];
  }
  else
  {
    v61 = 0;
  }
  objc_msgSend(v59, "setText:", v61, *(double *)&v58);

  v62 = objc_msgSend(v5, "mainBundle");
  v111._countAndFlagsBits = 0xD000000000000018;
  v63._countAndFlagsBits = 0xD000000000000022;
  v111._object = (void *)(v100 | 0x8000000000000000);
  v63._object = (void *)0x80000001004C6B70;
  v64.value._object = (void *)(v102 | 0x8000000000000000);
  v64.value._countAndFlagsBits = 0xD000000000000013;
  v65._countAndFlagsBits = 0;
  v65._object = (void *)0xE000000000000000;
  v66 = NSLocalizedString(_:tableName:bundle:value:comment:)(v63, v64, (NSBundle)v62, v65, v111);

  v67 = (Swift::String *)&v40[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionTitle];
  v68 = *(_QWORD *)&v40[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionTitle + 8];
  *v67 = v66;
  v69 = swift_bridgeObjectRelease(v68).n128_u64[0];
  v70 = *(void **)&v40[OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_actionLabel];
  v71 = v67->_object;
  if (v71)
  {
    swift_bridgeObjectRetain(v67->_object);
    v72 = String._bridgeToObjectiveC()();
    v69 = swift_bridgeObjectRelease(v71).n128_u64[0];
  }
  else
  {
    v72 = 0;
  }
  objc_msgSend(v70, "setText:", v72, *(double *)&v69);

  swift_storeEnumTagMultiPayload(v3, v39, 22);
  v97(v3, 0, 1, v39);
  sub_1002C0C88((uint64_t)v3);
  v73 = v101;
  objc_msgSend(v101, "setAxis:", 1);
  v74 = v103;
  objc_msgSend(v73, "setSpacing:", *(double *)&v103[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_spacing]);
  objc_msgSend(v73, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v75 = v4;
  v76 = v40;
  objc_msgSend(v75, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v73, "addArrangedSubview:", v75);

  v77 = v76;
  objc_msgSend(v77, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v73, "addArrangedSubview:", v77);

  v78 = (void *)objc_opt_self(NSLayoutConstraint);
  v79 = sub_100053F2C(&qword_1005D2F10);
  v80 = swift_allocObject(v79, 64, 7);
  *(_OWORD *)(v80 + 16) = xmmword_100481720;
  v81 = objc_msgSend(v73, "topAnchor");
  v82 = objc_msgSend(v74, "topAnchor");
  v83 = objc_msgSend(v81, "constraintEqualToAnchor:", v82);

  *(_QWORD *)(v80 + 32) = v83;
  v84 = objc_msgSend(v73, "bottomAnchor");
  v85 = objc_msgSend(v74, "bottomAnchor");
  v86 = objc_msgSend(v84, "constraintEqualToAnchor:", v85);

  *(_QWORD *)(v80 + 40) = v86;
  v87 = objc_msgSend(v73, "leadingAnchor");
  v88 = objc_msgSend(v74, "leadingAnchor");
  v89 = objc_msgSend(v87, "constraintEqualToAnchor:", v88);

  *(_QWORD *)(v80 + 48) = v89;
  v90 = objc_msgSend(v73, "trailingAnchor");
  v91 = objc_msgSend(v74, "trailingAnchor");
  v92 = objc_msgSend(v90, "constraintEqualToAnchor:", v91);

  *(_QWORD *)(v80 + 56) = v92;
  v104 = v80;
  specialized Array._endMutation()(v93);
  v94 = v104;
  sub_100048C64();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v78, "activateConstraints:", isa, swift_bridgeObjectRelease(v94).n128_f64[0]);

}

id sub_1004365C8()
{
  uint64_t v0;
  id v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  void *v13;
  id v14;
  int v15;
  unint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  _QWORD v26[6];
  int v27;
  uint64_t v28;
  uint64_t v29[2];

  v1 = *(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_mediator) + 16);
  v2 = sub_100377510();

  v27 = v2;
  if ((v2 & 1) != 0)
    v3 = 6710895;
  else
    v3 = 28271;
  if ((v2 & 1) != 0)
    v4 = 0xE300000000000000;
  else
    v4 = 0xE200000000000000;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v5 = type metadata accessor for Logger(0);
  sub_100056D88(v5, (uint64_t)qword_1005F5748);
  swift_bridgeObjectRetain(v4);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v29[0] = v10;
    *(_DWORD *)v9 = 136315138;
    swift_bridgeObjectRetain(v4);
    v28 = sub_100056DA0(v3, v4, v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, v29);
    swift_bridgeObjectRelease_n(v4, 3);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "FMErrorConditionsAttentionModule: BT is %s", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);

  }
  else
  {

    v11 = swift_bridgeObjectRelease_n(v4, 2);
  }
  v12 = (_BYTE *)v26[5];
  __chkstk_darwin(v11);
  v26[2] = v13;
  v14 = v13;
  OS_dispatch_queue.sync<A>(execute:)(v29, sub_10010C158, v26, &type metadata for Bool);

  v15 = LOBYTE(v29[0]);
  if (LOBYTE(v29[0]))
    v16 = 0xE200000000000000;
  else
    v16 = 0xE300000000000000;
  swift_bridgeObjectRetain(v16);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    if (v15)
      v20 = 28271;
    else
      v20 = 6710895;
    v21 = (uint8_t *)swift_slowAlloc(12, -1);
    v22 = swift_slowAlloc(32, -1);
    v29[0] = v22;
    *(_DWORD *)v21 = 136315138;
    swift_bridgeObjectRetain(v16);
    v28 = sub_100056DA0(v20, v16, v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, v29);
    swift_bridgeObjectRelease_n(v16, 3);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "FMErrorConditionsAttentionModule: Airplane Mode is %s", v21, 0xCu);
    swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v21, -1, -1);

    v23 = v27;
    if (!v15)
      goto LABEL_20;
LABEL_22:
    v24 = v12[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_shouldShowAirplaneModeAttention];
    v23 &= v24 ^ 1;
    goto LABEL_23;
  }

  swift_bridgeObjectRelease_n(v16, 2);
  v23 = v27;
  if (v15)
    goto LABEL_22;
LABEL_20:
  v24 = 0;
LABEL_23:
  *(_BYTE *)(*(_QWORD *)&v12[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_airplaneModeOnAttention]
           + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_collapsed) = v24 ^ 1;
  sub_1002C0DEC();
  *(_BYTE *)(*(_QWORD *)&v12[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_bluetoothOffAttention]
           + OBJC_IVAR____TtC6FindMy25FMExtendedPlatterInfoView_collapsed) = (v23 & 1) == 0;
  sub_1002C0DEC();
  return objc_msgSend(v12, "setHidden:", ((v24 | v23) & 1) == 0);
}

uint64_t type metadata accessor for FMErrorConditionsAttentionModule()
{
  return objc_opt_self(_TtC6FindMy32FMErrorConditionsAttentionModule);
}

id sub_100436A2C(uint64_t a1, char a2)
{
  return sub_100436A3C(a2);
}

id sub_100436A34(uint64_t a1, char a2)
{
  return sub_100436BD0(a2);
}

id sub_100436A3C(char a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100056D88(v2, (uint64_t)qword_1005F5748);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    *(_DWORD *)v6 = 136315138;
    v12 = v7;
    if ((a1 & 1) != 0)
      v8 = 28239;
    else
      v8 = 6710863;
    if ((a1 & 1) != 0)
      v9 = 0xE200000000000000;
    else
      v9 = 0xE300000000000000;
    v11 = sub_100056DA0(v8, v9, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12);
    swift_bridgeObjectRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMErrorConditionsAttentionModule: Airplane Mode is %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }

  return sub_1004365C8();
}

id sub_100436BD0(char a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100056D88(v2, (uint64_t)qword_1005F5748);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    *(_DWORD *)v6 = 136315138;
    v12 = v7;
    if ((a1 & 1) != 0)
      v8 = 6710863;
    else
      v8 = 28239;
    if ((a1 & 1) != 0)
      v9 = 0xE300000000000000;
    else
      v9 = 0xE200000000000000;
    v11 = sub_100056DA0(v8, v9, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12);
    swift_bridgeObjectRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMErrorConditionsAttentionModule: BT is %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }

  return sub_1004365C8();
}

uint64_t sub_100436D64()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100436D88(uint64_t a1)
{
  uint64_t v1;

  sub_100393EC4(a1, v1, sub_100436ED4);
}

void sub_100436DA8(uint64_t a1)
{
  uint64_t v1;

  sub_100393EC4(a1, v1, sub_100436FE8);
}

void sub_100436DC8()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *v4;
  id v5;
  uint64_t v6;
  id v7;

  v1 = v0;
  v2 = OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_verticalStackView;
  *(_QWORD *)&v1[v2] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_conditionSubscription] = 0;
  v3 = OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_airplaneModeOnAttention;
  v4 = (objc_class *)type metadata accessor for FMExtendedPlatterInfoView(0);
  v5 = objc_allocWithZone(v4);
  *(_QWORD *)&v1[v3] = sub_1002C114C(1, 0);
  v6 = OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_bluetoothOffAttention;
  v7 = objc_allocWithZone(v4);
  *(_QWORD *)&v1[v6] = sub_1002C114C(1, 0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_spacing] = 0x3810000000000000;
  v1[OBJC_IVAR____TtC6FindMy32FMErrorConditionsAttentionModule_shouldShowAirplaneModeAttention] = 1;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMErrorConditionsAttentionModule.swift", 45, 2, 67, 0);
  __break(1u);
}

void sub_100436ED4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  id v5;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v0 = type metadata accessor for Logger(0);
  v1 = sub_100056D88(v0, (uint64_t)qword_1005F5748);
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "FMErrorConditionsAttentionModule: Airplane Mode On Button Toggled", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }

  v5 = objc_msgSend(objc_allocWithZone((Class)RadiosPreferences), "init");
  objc_msgSend(v5, "setAirplaneMode:", 0);
  objc_msgSend(v5, "refresh");

}

void sub_100436FE8()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  id v5;
  id v6;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v0 = type metadata accessor for Logger(0);
  v1 = sub_100056D88(v0, (uint64_t)qword_1005F5748);
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "FMErrorConditionsAttentionModule: Bluetooth Off Button Toggled", v4, 2u);
    swift_slowDealloc(v4, -1, -1);
  }

  v5 = objc_msgSend((id)objc_opt_self(BluetoothManager), "sharedInstance");
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, "setEnabled:", 1);

  }
}

void sub_10043710C()
{
  __asm { BR              X10 }
}

id sub_100437140(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  char *v14;
  id v15;

  v15 = objc_msgSend(v14, "layer");
  objc_msgSend(v15, "setMaskedCorners:", 12);

  objc_msgSend(*(id *)&v14[OBJC_IVAR____TtC6FindMy15FMPlatterButton_bottomSeparator], "setHidden:", 1);
  return objc_msgSend(*(id *)&v14[OBJC_IVAR____TtC6FindMy15FMPlatterButton_topSeparator], "setHidden:", 1);
}

void sub_10043733C(uint64_t a1, uint64_t a2)
{
  void *v2;
  Class isa;
  id v5;
  id v6;
  void *v7;
  char **v8;
  id v9;
  objc_super v10;

  sub_100006C5C(0, (unint64_t *)&qword_1005D3F00, UITouch_ptr);
  sub_1000B0798();
  isa = Set._bridgeToObjectiveC()().super.isa;
  v10.receiver = v2;
  v10.super_class = (Class)type metadata accessor for FMPlatterButton();
  objc_msgSendSuper2(&v10, "touchesBegan:withEvent:", isa, a2);

  v5 = objc_msgSend(v2, "traitCollection");
  v6 = objc_msgSend(v5, "userInterfaceStyle");

  v7 = (void *)objc_opt_self(UIColor);
  v8 = &selRef_systemGray3Color;
  if (v6 != (id)2)
    v8 = &selRef_systemGray5Color;
  v9 = objc_msgSend(v7, *v8);
  objc_msgSend(v2, "setBackgroundColor:", v9);

}

double sub_100437468(void *a1, uint64_t a2, uint64_t a3, void *a4, SEL *a5)
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  char *v13;
  Class isa;
  double result;
  objc_super v16;

  v9 = sub_100006C5C(0, (unint64_t *)&qword_1005D3F00, UITouch_ptr);
  v10 = sub_1000B0798();
  v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)(a3, v9, v10);
  v12 = a4;
  v13 = a1;
  isa = Set._bridgeToObjectiveC()().super.isa;
  v16.receiver = v13;
  v16.super_class = (Class)type metadata accessor for FMPlatterButton();
  objc_msgSendSuper2(&v16, *a5, isa, v12);

  objc_msgSend(v13, "setBackgroundColor:", *(_QWORD *)&v13[OBJC_IVAR____TtC6FindMy15FMPlatterButton_background]);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
  return result;
}

void sub_100437550(uint64_t a1, uint64_t a2)
{
  char *v2;
  Class isa;
  uint64_t v6;
  void *v7;
  double v8;
  id v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  id v14;
  id v15;
  void *v16;
  char **v17;
  id v18;
  void *v19;
  objc_super v20;
  CGPoint v21;
  CGRect v22;

  sub_100006C5C(0, (unint64_t *)&qword_1005D3F00, UITouch_ptr);
  sub_1000B0798();
  isa = Set._bridgeToObjectiveC()().super.isa;
  v20.receiver = v2;
  v20.super_class = (Class)type metadata accessor for FMPlatterButton();
  objc_msgSendSuper2(&v20, "touchesMoved:withEvent:", isa, a2);

  swift_bridgeObjectRetain(a1);
  v7 = (void *)sub_1000C936C(v6);
  *(_QWORD *)&v8 = swift_bridgeObjectRelease(a1).n128_u64[0];
  if (v7)
  {
    v9 = objc_msgSend(v2, "superview", v8);
    objc_msgSend(v7, "locationInView:", v9);
    v11 = v10;
    v13 = v12;

    objc_msgSend(v2, "frame");
    v21.x = v11;
    v21.y = v13;
    if (CGRectContainsPoint(v22, v21))
    {
      v14 = objc_msgSend(v2, "traitCollection");
      v15 = objc_msgSend(v14, "userInterfaceStyle");

      v16 = (void *)objc_opt_self(UIColor);
      v17 = &selRef_systemGray3Color;
      if (v15 != (id)2)
        v17 = &selRef_systemGray5Color;
      v18 = objc_msgSend(v16, *v17);
    }
    else
    {
      v18 = *(id *)&v2[OBJC_IVAR____TtC6FindMy15FMPlatterButton_background];
    }
    v19 = v18;
    objc_msgSend(v2, "setBackgroundColor:", v18);

  }
}

id sub_100437728()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPlatterButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t storeEnumTagSinglePayload for FMPlatterButtonAlignment(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1004377A4 + 4 * byte_1004913C5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1004377D8 + 4 * byte_1004913C0[v4]))();
}

uint64_t sub_1004377D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004377E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1004377E8);
  return result;
}

uint64_t sub_1004377F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1004377FCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100437800(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100437808(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMPlatterButtonAlignment()
{
  return &type metadata for FMPlatterButtonAlignment;
}

unint64_t sub_100437828()
{
  unint64_t result;

  result = qword_1005E4EB8;
  if (!qword_1005E4EB8)
  {
    result = swift_getWitnessTable(&unk_10049144C, &type metadata for FMPlatterButtonAlignment);
    atomic_store(result, (unint64_t *)&qword_1005E4EB8);
  }
  return result;
}

_QWORD *sub_10043786C(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v33 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v33);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Date(0);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = (_QWORD *)((char *)a1 + v12);
    v15 = (_QWORD *)((char *)a2 + v12);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = (_QWORD *)((char *)a1 + v13);
    v18 = (_QWORD *)((char *)a2 + v13);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = a3[8];
    v21 = a3[9];
    v22 = (_QWORD *)((char *)a1 + v20);
    v23 = (_QWORD *)((char *)a2 + v20);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = (_QWORD *)((char *)a1 + v21);
    v26 = (_QWORD *)((char *)a2 + v21);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    v28 = a3[11];
    *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
    *(_QWORD *)((char *)a1 + v28) = *(_QWORD *)((char *)a2 + v28);
    v29 = a3[13];
    *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
    v30 = *(_QWORD *)((char *)a2 + v29);
    *(_QWORD *)((char *)a1 + v29) = v30;
    v31 = a3[14];
    v32 = *(_QWORD *)((char *)a2 + v31);
    *(_QWORD *)((char *)a1 + v31) = v32;
    swift_bridgeObjectRetain(v16);
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRetain(v27);
    swift_bridgeObjectRetain(v30);
    swift_bridgeObjectRetain(v32);
  }
  return a1;
}

uint64_t sub_1004379CC(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[6] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[8] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[9] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[13]));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[14]));
}

uint64_t sub_100437A88(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v11);
  v14 = (_QWORD *)(a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = (_QWORD *)(a1 + v12);
  v17 = (_QWORD *)(a2 + v12);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = a3[8];
  v20 = a3[9];
  v21 = (_QWORD *)(a1 + v19);
  v22 = (_QWORD *)(a2 + v19);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = (_QWORD *)(a1 + v20);
  v25 = (_QWORD *)(a2 + v20);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  v27 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v27) = *(_QWORD *)(a2 + v27);
  v28 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  v29 = *(_QWORD *)(a2 + v28);
  *(_QWORD *)(a1 + v28) = v29;
  v30 = a3[14];
  v31 = *(_QWORD *)(a2 + v30);
  *(_QWORD *)(a1 + v30) = v31;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRetain(v23);
  swift_bridgeObjectRetain(v26);
  swift_bridgeObjectRetain(v29);
  swift_bridgeObjectRetain(v31);
  return a1;
}

uint64_t sub_100437BBC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v14 = v13[1];
  v15 = v12[1];
  v12[1] = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  v16 = a3[7];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v19 = v18[1];
  v20 = v17[1];
  v17[1] = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v20);
  v21 = a3[8];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  *v22 = *v23;
  v24 = v23[1];
  v25 = v22[1];
  v22[1] = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease(v25);
  v26 = a3[9];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  *v27 = *v28;
  v29 = v28[1];
  v30 = v27[1];
  v27[1] = v29;
  swift_bridgeObjectRetain(v29);
  swift_bridgeObjectRelease(v30);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  v31 = a3[13];
  v32 = *(_QWORD *)(a2 + v31);
  v33 = *(_QWORD *)(a1 + v31);
  *(_QWORD *)(a1 + v31) = v32;
  swift_bridgeObjectRetain(v32);
  swift_bridgeObjectRelease(v33);
  v34 = a3[14];
  v35 = *(_QWORD *)(a2 + v34);
  v36 = *(_QWORD *)(a1 + v34);
  *(_QWORD *)(a1 + v34) = v35;
  swift_bridgeObjectRetain(v35);
  swift_bridgeObjectRelease(v36);
  return a1;
}

uint64_t sub_100437D4C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  v12 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  v13 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  v14 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_100437E2C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  v16 = v12[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease(v16);
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  v22 = v18[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease(v22);
  v23 = a3[8];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (uint64_t *)(a2 + v23);
  v27 = *v25;
  v26 = v25[1];
  v28 = v24[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease(v28);
  v29 = a3[9];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (uint64_t *)(a2 + v29);
  v33 = *v31;
  v32 = v31[1];
  v34 = v30[1];
  *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease(v34);
  v35 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v35) = *(_QWORD *)(a2 + v35);
  v36 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  v37 = *(_QWORD *)(a1 + v36);
  *(_QWORD *)(a1 + v36) = *(_QWORD *)(a2 + v36);
  swift_bridgeObjectRelease(v37);
  v38 = a3[14];
  v39 = *(_QWORD *)(a1 + v38);
  *(_QWORD *)(a1 + v38) = *(_QWORD *)(a2 + v38);
  swift_bridgeObjectRelease(v39);
  return a1;
}

uint64_t sub_100437F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100437F70);
}

uint64_t sub_100437F70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_10043801C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100438028);
}

uint64_t sub_100438028(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for Date(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for FMUTDetailViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_1005E4F20;
  if (!qword_1005E4F20)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMUTDetailViewModel);
  return result;
}

uint64_t sub_10043810C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[11];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for Date(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      v5[2] = &unk_1004914D8;
      v5[3] = &unk_1004914D8;
      v5[4] = &unk_1004914D8;
      v5[5] = &unk_1004914D8;
      v5[6] = &unk_1004914F0;
      v5[7] = (char *)&value witness table for Builtin.Int64 + 64;
      v5[8] = &unk_1004914F0;
      v5[9] = (char *)&value witness table for Builtin.BridgeObject + 64;
      v5[10] = (char *)&value witness table for Builtin.BridgeObject + 64;
      swift_initStructMetadata(a1, 256, 11, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_1004381C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t (*v47)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  void *v49;
  id v50;
  double (*v51)(char *, char *, uint64_t);
  __n128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  void (*v58)(char *, unint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  id v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char My;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  id v78;
  char v79;
  char v80;
  char *v81;
  uint64_t v82;
  int *v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, char *, _QWORD *);
  uint64_t v87;
  void *v88;
  id v89;
  Swift::String_optional v90;
  Swift::String v91;
  Swift::String v92;
  Swift::String v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  NSBundle v113;
  Swift::String_optional v114;
  Swift::String v115;
  Swift::String v116;
  Swift::String v117;
  _BOOL8 v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t (*v124)(char *, uint64_t, uint64_t);
  char *v125;
  uint64_t v126;
  uint64_t v127;
  NSObject *v128;
  os_log_type_t v129;
  _BOOL4 v130;
  char *v131;
  uint8_t *v132;
  __n128 v133;
  uint64_t v134;
  uint64_t v135;
  __n128 v136;
  uint8_t *v137;
  _QWORD *v138;
  uint64_t v139;
  NSObject *v140;
  os_log_type_t v141;
  uint8_t *v142;
  uint64_t v143;
  __n128 v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  __n128 v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  void *v157;
  id v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  unint64_t v163;
  __n128 v164;
  char *v165;
  void (*v166)(char *, char *, _QWORD *);
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  NSObject *v171;
  os_log_type_t v172;
  int v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  unint64_t v178;
  __n128 v179;
  char *v180;
  void (*v181)(char *, _QWORD *, __n128);
  uint64_t v182;
  unint64_t v183;
  unint64_t v184;
  __n128 v185;
  uint64_t v186;
  unint64_t v187;
  unint64_t v188;
  __n128 v189;
  char *v190;
  __n128 v191;
  __n128 v193;
  void (*v194)(char *, _QWORD *);
  uint64_t v195;
  char *v196;
  uint64_t v197;
  int v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  void (*v202)(char *, char *, _QWORD *);
  char *v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  char *v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t (*v211)(char *, uint64_t, uint64_t);
  void (*v212)(char *, uint64_t, uint64_t, uint64_t);
  char *v213;
  _QWORD *v214;
  char *v215;
  void (*v216)(char *, uint64_t, __n128);
  uint64_t v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  uint64_t v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  Swift::String v227;
  Swift::String v228;

  LODWORD(v202) = a3;
  v219 = a1;
  v197 = a4;
  v220 = type metadata accessor for FMIPUnknownItem(0);
  v204 = *(_QWORD *)(v220 - 8);
  v5 = __chkstk_darwin(v220);
  v213 = (char *)&v195 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v203 = (char *)&v195 - v7;
  v216 = (void (*)(char *, uint64_t, __n128))type metadata accessor for FMIPProductType(0);
  v205 = *((_QWORD *)v216 - 1);
  __chkstk_darwin(v216);
  v215 = (char *)&v195 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100053F2C((uint64_t *)&unk_1005D6700);
  v10 = __chkstk_darwin(v9);
  v196 = (char *)&v195 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v195 - v13;
  __chkstk_darwin(v12);
  v16 = (char *)&v195 - v15;
  v17 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  v18 = __chkstk_darwin(v17);
  v201 = (char *)&v195 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v21 = (char *)&v195 - v20;
  v22 = type metadata accessor for Date(0);
  v214 = *(_QWORD **)(v22 - 8);
  v23 = __chkstk_darwin(v22);
  v208 = (char *)&v195 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v23);
  v207 = (char *)&v195 - v26;
  v27 = __chkstk_darwin(v25);
  v206 = (char *)&v195 - v28;
  v29 = __chkstk_darwin(v27);
  v217 = (uint64_t)&v195 - v30;
  v31 = __chkstk_darwin(v29);
  v218 = (char *)&v195 - v32;
  v33 = __chkstk_darwin(v31);
  v35 = (char *)&v195 - v34;
  __chkstk_darwin(v33);
  v221 = (char *)&v195 - v36;
  v222 = a2;
  v38 = FMIPUnknownItem.locations.getter(v37);
  v39 = *(_QWORD *)(v38 + 16);
  v40 = type metadata accessor for FMIPLocation(0);
  v41 = *(_QWORD *)(v40 - 8);
  if (v39)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v41 + 16))(v16, v38 + ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80)), v40);
    v42 = 0;
  }
  else
  {
    v42 = 1;
  }
  v43 = v40;
  v212 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
  v212(v16, v42, 1, v40);
  swift_bridgeObjectRelease(v38);
  type metadata accessor for FMIPLocation(0);
  v211 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48);
  v44 = v211(v16, 1, v40);
  v210 = v40;
  v45 = v41;
  if ((_DWORD)v44 == 1)
  {
    sub_1000051EC((uint64_t)v16, (uint64_t *)&unk_1005D6700);
    v46 = v214;
    v47 = (uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v214[7];
    v48 = v47(v21, 1, 1, v22);
LABEL_7:
    Date.init()(v48);
    sub_1000051EC((uint64_t)v21, (uint64_t *)&unk_1005D3320);
    goto LABEL_9;
  }
  v49 = (void *)FMIPLocation.location.getter(v44);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v16, v43);
  v50 = objc_msgSend(v49, "timestamp");

  static Date._unconditionallyBridgeFromObjectiveC(_:)(v50);
  v46 = v214;
  v51 = (double (*)(char *, char *, uint64_t))v214[4];
  v51(v21, v35, v22);
  v47 = (uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v46[7];
  v47(v21, 0, 1, v22);
  v48 = ((uint64_t (*)(char *, uint64_t, uint64_t))v46[6])(v21, 1, v22);
  if ((_DWORD)v48 == 1)
    goto LABEL_7;
  v52.n128_f64[0] = v51(v221, v21, v22);
LABEL_9:
  v53 = FMIPUnknownItem.locations.getter(v52);
  v54 = v53;
  v55 = *(_QWORD *)(v53 + 16);
  v56 = v219;
  v209 = v45;
  if (v55)
  {
    v57 = v53
        + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))
        + *(_QWORD *)(v45 + 72) * (v55 - 1);
    v58 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
    v59 = v210;
    v58(v14, v57, v210);
    v60 = 0;
  }
  else
  {
    v60 = 1;
    v59 = v210;
  }
  v212(v14, v60, 1, v59);
  v61 = swift_bridgeObjectRelease(v54);
  v62 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v211)(v14, 1, v59, v61);
  if ((_DWORD)v62 == 1)
  {
    sub_1000051EC((uint64_t)v14, (uint64_t *)&unk_1005D6700);
    v63 = (uint64_t)v201;
    v64 = v47(v201, 1, 1, v22);
LABEL_15:
    v68 = (uint64_t)v218;
    Date.init()(v64);
    v69 = sub_1000051EC(v63, (uint64_t *)&unk_1005D3320);
    goto LABEL_17;
  }
  v65 = (void *)FMIPLocation.location.getter(v62);
  (*(void (**)(char *, uint64_t))(v209 + 8))(v14, v59);
  v66 = objc_msgSend(v65, "timestamp");

  static Date._unconditionallyBridgeFromObjectiveC(_:)(v66);
  v67 = (void (*)(char *, char *, uint64_t))v46[4];
  v63 = (uint64_t)v201;
  v67(v201, v35, v22);
  v47((char *)v63, 0, 1, v22);
  v64 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v46[6])(v63, 1, v22);
  if ((_DWORD)v64 == 1)
    goto LABEL_15;
  v68 = (uint64_t)v218;
  v69 = ((uint64_t (*)(char *, uint64_t, uint64_t))v67)(v218, v63, v22);
LABEL_17:
  v70 = v222;
  My = FMIPUnknownItem.isFindMyNetwork.getter(v69);
  v72 = v217;
  v73 = sub_1004397FC(v221, My & 1, v217);
  v74 = v215;
  v75 = FMIPUnknownItem.productType.getter(v73);
  v198 = FMIPProductType.isAccessory.getter(v75);
  v201 = *(char **)(v205 + 8);
  v76 = ((uint64_t (*)(char *, void (*)(char *, uint64_t, __n128)))v201)(v74, v216);
  Date.init()(v76);
  LOBYTE(v72) = static Date.< infix(_:_:)(v35, v72);
  v77 = v214;
  v205 = v214[1];
  ((void (*)(char *, uint64_t))v205)(v35, v22);
  if ((v72 & 1) != 0)
  {
    v78 = *(id *)(v56 + 16);
    v79 = sub_100377510();

    v80 = v79 ^ 1;
  }
  else
  {
    v80 = 0;
  }
  v81 = *(char **)(*(_QWORD *)(v56 + 24) + 64);
  swift_bridgeObjectRetain(v81);
  v199 = sub_10043AB64(v70, v80 & 1, v81, v202 & 1, v56);
  v200 = v82;
  swift_bridgeObjectRelease(v81);
  v83 = (int *)type metadata accessor for FMUTDetailViewModel(0);
  v84 = v197;
  v85 = v197 + v83[5];
  v86 = (void (*)(char *, char *, _QWORD *))v77[2];
  v214 = (_QWORD *)v22;
  v202 = v86;
  v87 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v86)(v85, v68, v22);
  FMIPUnknownItem.identifier.getter(v87);
  v88 = (void *)objc_opt_self(NSBundle);
  v89 = objc_msgSend(v88, "mainBundle");
  v90.value._countAndFlagsBits = 0xD000000000000010;
  v91._countAndFlagsBits = 0xD00000000000001FLL;
  v227._object = (void *)0x80000001004ADC20;
  v91._object = (void *)0x80000001004C6C90;
  v90.value._object = (void *)0x80000001004ADC00;
  v92._countAndFlagsBits = 0;
  v92._object = (void *)0xE000000000000000;
  v227._countAndFlagsBits = 0xD000000000000015;
  v93 = NSLocalizedString(_:tableName:bundle:value:comment:)(v91, v90, (NSBundle)v89, v92, v227);

  v94 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
  v95 = swift_allocObject(v94, 72, 7);
  *(_OWORD *)(v95 + 16) = xmmword_100481740;
  v96 = FMIPUnknownItem.name.getter(v95);
  v98 = v97;
  *(_QWORD *)(v95 + 56) = &type metadata for String;
  *(_QWORD *)(v95 + 64) = sub_100071E88();
  *(_QWORD *)(v95 + 32) = v96;
  *(_QWORD *)(v95 + 40) = v98;
  v99 = v95;
  v100 = v222;
  v101 = String.init(format:_:)(v93._countAndFlagsBits, v93._object, v99);
  v103 = v102;
  swift_bridgeObjectRelease(v93._object);
  v104 = (uint64_t *)(v84 + v83[6]);
  *v104 = v101;
  v104[1] = v103;
  v105 = sub_10043C1F4((uint64_t)v221, v68);
  v106 = (uint64_t *)(v84 + v83[7]);
  *v106 = v105;
  v106[1] = v107;
  v108 = (_QWORD *)(v84 + v83[8]);
  *v108 = v109;
  v108[1] = v110;
  if ((v198 & 1) != 0)
    v111 = 0xD00000000000001ALL;
  else
    v111 = 0xD000000000000015;
  if ((v198 & 1) != 0)
    v112 = (void *)0x80000001004C6CD0;
  else
    v112 = (void *)0x80000001004C6CB0;
  v113.super.isa = (Class)objc_msgSend(v88, "mainBundle");
  v114.value._countAndFlagsBits = 0xD000000000000013;
  v228._countAndFlagsBits = 0xD000000000000018;
  v228._object = (void *)0x80000001004A5660;
  v114.value._object = (void *)0x80000001004A5640;
  v115._countAndFlagsBits = v111;
  v115._object = v112;
  v116._countAndFlagsBits = 0;
  v116._object = (void *)0xE000000000000000;
  v117 = NSLocalizedString(_:tableName:bundle:value:comment:)(v115, v114, v113, v116, v228);
  swift_bridgeObjectRelease(v112);

  *(Swift::String *)(v84 + v83[9]) = v117;
  *(_QWORD *)(v84 + v83[11]) = sub_10043C788();
  v118 = sub_10043A474(v100, v219);
  *(_BYTE *)(v84 + v83[12]) = v118;
  v119 = v215;
  v120 = FMIPUnknownItem.productType.getter(v118);
  LOBYTE(v113.super.isa) = FMIPProductType.isAccessory.getter(v120);
  ((void (*)(char *, void (*)(char *, uint64_t, __n128)))v201)(v119, v216);
  *(_BYTE *)(v84 + v83[10]) = (uint64_t)v113.super.isa & 1;
  *(_QWORD *)(v84 + v83[13]) = v199;
  *(_QWORD *)(v84 + v83[14]) = v200;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v121 = type metadata accessor for Logger(0);
  v122 = sub_100056D88(v121, (uint64_t)qword_1005F5748);
  v123 = v204;
  v124 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v204 + 16);
  v125 = v203;
  v126 = v220;
  v127 = v124(v203, v100, v220);
  v128 = Logger.logObject.getter(v127);
  v129 = static os_log_type_t.default.getter(v128);
  v130 = os_log_type_enabled(v128, v129);
  v131 = v213;
  if (v130)
  {
    v132 = (uint8_t *)swift_slowAlloc(12, -1);
    v133.n128_u64[0] = 134217984;
    *(_DWORD *)v132 = 134217984;
    v134 = FMIPUnknownItem.locations.getter(v133);
    v135 = *(_QWORD *)(v134 + 16);
    v136 = swift_bridgeObjectRelease(v134);
    v216 = *(void (**)(char *, uint64_t, __n128))(v123 + 8);
    v216(v125, v220, v136);
    v223 = (char *)v135;
    v131 = v213;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v223, &v224);
    _os_log_impl((void *)&_mh_execute_header, v128, v129, "FMUTDetailViewModel: locations: (%ld", v132, 0xCu);
    v137 = v132;
    v126 = v220;
    swift_slowDealloc(v137, -1, -1);
  }
  else
  {
    v216 = *(void (**)(char *, uint64_t, __n128))(v123 + 8);
    ((void (*)(char *, uint64_t))v216)(v125, v126);
  }
  v138 = v214;

  v139 = v124(v131, v222, v126);
  v140 = Logger.logObject.getter(v139);
  v141 = static os_log_type_t.default.getter(v140);
  if (os_log_type_enabled(v140, v141))
  {
    v215 = (char *)v122;
    v142 = (uint8_t *)swift_slowAlloc(12, -1);
    v143 = swift_slowAlloc(32, -1);
    v225 = v143;
    v144.n128_u64[0] = 136315138;
    *(_DWORD *)v142 = 136315138;
    v145 = FMIPUnknownItem.locations.getter(v144);
    v146 = v145;
    v147 = *(_QWORD *)(v145 + 16);
    if (v147)
    {
      v148 = v210;
      v149 = (uint64_t)v196;
      (*(void (**)(char *, unint64_t, uint64_t))(v209 + 16))(v196, v145+ ((*(unsigned __int8 *)(v209 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v209 + 80))+ *(_QWORD *)(v209 + 72) * (v147 - 1), v210);
      v150 = 0;
    }
    else
    {
      v150 = 1;
      v149 = (uint64_t)v196;
      v148 = v210;
    }
    v212((char *)v149, v150, 1, v148);
    v153 = swift_bridgeObjectRelease(v146);
    v154 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))v211)(v149, 1, v148, v153);
    if ((_DWORD)v154 == 1)
    {
      sub_1000051EC(v149, (uint64_t *)&unk_1005D6700);
      v155 = 0;
      v156 = 0;
    }
    else
    {
      v157 = (void *)FMIPLocation.location.getter(v154);
      (*(void (**)(uint64_t, uint64_t))(v209 + 8))(v149, v148);
      v158 = objc_msgSend(v157, "debugDescription");

      v155 = static String._unconditionallyBridgeFromObjectiveC(_:)(v158);
      v156 = v159;

    }
    v223 = (char *)v155;
    v224 = v156;
    v160 = sub_100053F2C(&qword_1005D2BD0);
    v161 = String.init<A>(describing:)(&v223, v160);
    v163 = v162;
    v223 = (char *)sub_100056DA0(v161, v162, &v225);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v223, &v224);
    v164 = swift_bridgeObjectRelease(v163);
    v216(v131, v220, v164);
    _os_log_impl((void *)&_mh_execute_header, v140, v141, "FMUTDetailViewModel: most recent location %s", v142, 0xCu);
    swift_arrayDestroy(v143, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v143, -1, -1);
    swift_slowDealloc(v142, -1, -1);

    v151 = v206;
    v152 = v207;
  }
  else
  {
    ((void (*)(char *, uint64_t))v216)(v131, v126);

    v151 = v206;
    v152 = v207;
  }
  v165 = v221;
  v166 = v202;
  v202(v151, v221, v138);
  v167 = v218;
  v166(v152, v218, v138);
  v168 = v208;
  v169 = v217;
  v170 = ((uint64_t (*)(char *, uint64_t, _QWORD *))v166)(v208, v217, v138);
  v171 = Logger.logObject.getter(v170);
  v172 = static os_log_type_t.default.getter(v171);
  v173 = v172;
  if (os_log_type_enabled(v171, v172))
  {
    v174 = swift_slowAlloc(32, -1);
    v215 = (char *)swift_slowAlloc(96, -1);
    v223 = v215;
    *(_DWORD *)v174 = 136315650;
    v175 = sub_100008000(&qword_1005E4F80, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    LODWORD(v214) = v173;
    v176 = dispatch thunk of CustomStringConvertible.description.getter(v138, v175);
    v178 = v177;
    v225 = sub_100056DA0(v176, v177, (uint64_t *)&v223);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v225, &v226);
    v179 = swift_bridgeObjectRelease(v178);
    v180 = v151;
    v181 = (void (*)(char *, _QWORD *, __n128))v205;
    ((void (*)(char *, _QWORD *, __n128))v205)(v180, v138, v179);
    *(_WORD *)(v174 + 12) = 2080;
    v182 = dispatch thunk of CustomStringConvertible.description.getter(v138, v175);
    v184 = v183;
    v225 = sub_100056DA0(v182, v183, (uint64_t *)&v223);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v225, &v226);
    v185 = swift_bridgeObjectRelease(v184);
    v181(v152, v138, v185);
    *(_WORD *)(v174 + 22) = 2080;
    v186 = dispatch thunk of CustomStringConvertible.description.getter(v138, v175);
    v188 = v187;
    v225 = sub_100056DA0(v186, v187, (uint64_t *)&v223);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v225, &v226);
    v189 = swift_bridgeObjectRelease(v188);
    v181(v168, v138, v189);
    _os_log_impl((void *)&_mh_execute_header, v171, (os_log_type_t)v214, "FMUTDetailViewModel: firstDetectedDate: %s lastDetectionDate: %s rollDate: %s", (uint8_t *)v174, 0x20u);
    v190 = v215;
    swift_arrayDestroy(v215, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v190, -1, -1);
    swift_slowDealloc(v174, -1, -1);

    v191 = swift_release(v219);
    v216((char *)v222, v220, v191);
    ((void (*)(uint64_t, _QWORD *))v181)(v217, v138);
    ((void (*)(char *, _QWORD *))v181)(v218, v138);
    return ((uint64_t (*)(char *, _QWORD *))v181)(v221, v138);
  }
  else
  {

    v193 = swift_release(v219);
    v194 = (void (*)(char *, _QWORD *))v205;
    ((void (*)(char *, _QWORD *, __n128))v205)(v168, v138, v193);
    v194(v152, v138);
    v194(v151, v138);
    ((void (*)(uint64_t, uint64_t))v216)(v222, v220);
    v194((char *)v169, v138);
    v194(v167, v138);
    return ((uint64_t (*)(char *, _QWORD *))v194)(v165, v138);
  }
}

uint64_t sub_1004391F0@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  id v21;
  _BOOL4 v22;
  void *v23;
  void *v24;
  unint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  char v41;
  uint64_t v42;
  char v43;
  unsigned int *v44;
  uint64_t v45;
  uint64_t v46;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  _BOOL4 v55;

  v53 = a1;
  v54 = a3;
  v4 = type metadata accessor for FMItemCapabilities(0);
  v52 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v51 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v8 = (char *)&v48 - v7;
  v9 = type metadata accessor for FMIPUnknownItem(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v48 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v48 - v17;
  type metadata accessor for FMConnectionManager(0);
  v19 = static FMConnectionManager.hostSupportsRanging.getter();
  if ((v19 & 1) != 0)
  {
    v20 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
    v21 = objc_msgSend(v20, "userInterfaceIdiom");

    v22 = v21 == (id)1;
  }
  else
  {
    v22 = 1;
  }
  v55 = v22;
  v23 = (void *)FMIPUnknownItem.unknownBeacon.getter(v19);
  if (v23)
  {
    v24 = v23;
    v25 = (unint64_t)objc_msgSend(v23, "capabilities");

    v26 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v26(v18, a2, v9);
    v27 = *(void (**)(char *, uint64_t))(v10 + 8);
    v27(v18, v9);
    v28 = (v25 >> 8) & 1;
  }
  else
  {
    v49 = v4;
    v50 = a2;
    v26 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v29 = ((uint64_t (*)(char *, uint64_t, uint64_t))v26)(v18, a2, v9);
    v30 = (void *)FMIPUnknownItem.unknownBeacon.getter(v29);
    if (v30
      && (v31 = v30, v32 = objc_msgSend(v30, "metadata"), v31, v32))
    {
      v33 = (unint64_t)objc_msgSend(v32, "capabilities");

      v34 = v16;
      v26(v16, (uint64_t)v18, v9);
      v27 = *(void (**)(char *, uint64_t))(v10 + 8);
      v27(v34, v9);
      v27(v18, v9);
      v28 = (v33 >> 8) & 1;
    }
    else
    {
      v48 = v16;
      v35 = ((uint64_t (*)(char *, char *, uint64_t))v26)(v16, v18, v9);
      v36 = FMIPUnknownItem.capabilities.getter(v35);
      v37 = v51;
      static FMItemCapabilities.canR1.getter(v36);
      v38 = sub_100008000((unint64_t *)&qword_1005E3B40, (uint64_t (*)(uint64_t))&type metadata accessor for FMItemCapabilities, (uint64_t)&protocol conformance descriptor for FMItemCapabilities);
      v39 = v49;
      LOBYTE(v28) = dispatch thunk of SetAlgebra.isSuperset(of:)(v37, v49, v38);
      v40 = *(void (**)(char *, uint64_t))(v52 + 8);
      v40(v37, v39);
      v40(v8, v39);
      v27 = *(void (**)(char *, uint64_t))(v10 + 8);
      v27(v48, v9);
      v27(v18, v9);
    }
    a2 = v50;
  }
  v41 = v55 | ~(_BYTE)v28;
  v42 = ((uint64_t (*)(char *, uint64_t, uint64_t))v26)(v13, a2, v9);
  if ((v41 & 1) != 0 || (v53 & 1) == 0)
  {
    v27(v13, v9);
    goto LABEL_16;
  }
  v43 = FMIPUnknownItem.isAppleAudioAccessory.getter(v42);
  v27(v13, v9);
  if ((v43 & 1) != 0)
  {
LABEL_16:
    v44 = (unsigned int *)&enum case for FMExperienceType.bt(_:);
    goto LABEL_17;
  }
  v44 = (unsigned int *)&enum case for FMExperienceType.r1(_:);
LABEL_17:
  v45 = *v44;
  v46 = type metadata accessor for FMExperienceType(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 104))(v54, v45, v46);
}

void sub_100439580(uint64_t a1, char a2)
{
  Swift::UInt v2;
  Swift::UInt8 v3;

  switch(a2)
  {
    case 2:
      v2 = 0;
      goto LABEL_9;
    case 3:
      v2 = 1;
      goto LABEL_9;
    case 4:
      v2 = 2;
      goto LABEL_9;
    case 5:
      v2 = 4;
      goto LABEL_9;
    case 6:
      v2 = 5;
      goto LABEL_9;
    case 7:
      v2 = 6;
LABEL_9:
      Hasher._combine(_:)(v2);
      break;
    default:
      v3 = a2 & 1;
      Hasher._combine(_:)(3uLL);
      Hasher._combine(_:)(v3);
      break;
  }
}

Swift::Int sub_10043960C(char a1)
{
  Swift::UInt v2;
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, 0);
  switch(a1)
  {
    case 2:
      v2 = 0;
      goto LABEL_9;
    case 3:
      v2 = 1;
      goto LABEL_9;
    case 4:
      v2 = 2;
      goto LABEL_9;
    case 5:
      v2 = 4;
      goto LABEL_9;
    case 6:
      v2 = 5;
      goto LABEL_9;
    case 7:
      v2 = 6;
LABEL_9:
      Hasher._combine(_:)(v2);
      break;
    default:
      Hasher._combine(_:)(3uLL);
      Hasher._combine(_:)(a1 & 1);
      break;
  }
  return Hasher._finalize()();
}

Swift::Int sub_1004396D4()
{
  char *v0;

  return sub_10043960C(*v0);
}

void sub_1004396DC(uint64_t a1)
{
  char *v1;

  sub_100439580(a1, *v1);
}

Swift::Int sub_1004396E4(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  Swift::UInt v3;
  _QWORD v5[9];

  v2 = *v1;
  Hasher.init(_seed:)(v5, a1);
  switch(v2)
  {
    case 2:
      v3 = 0;
      goto LABEL_9;
    case 3:
      v3 = 1;
      goto LABEL_9;
    case 4:
      v3 = 2;
      goto LABEL_9;
    case 5:
      v3 = 4;
      goto LABEL_9;
    case 6:
      v3 = 5;
      goto LABEL_9;
    case 7:
      v3 = 6;
LABEL_9:
      Hasher._combine(_:)(v3);
      break;
    default:
      Hasher._combine(_:)(3uLL);
      Hasher._combine(_:)(v2 & 1);
      break;
  }
  return Hasher._finalize()();
}

uint64_t sub_1004397A4(char *a1, unsigned __int8 *a2)
{
  return sub_10043A3D0(*a1, *a2);
}

id sub_1004397B0()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
  result = objc_msgSend(v0, "setTimeStyle:", 1);
  qword_1005E4EC0 = (uint64_t)v0;
  return result;
}

uint64_t sub_1004397FC@<X0>(char *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  char *v64;
  __n128 v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  char *v86;
  void (*v87)(char *, uint64_t);
  uint64_t v88;
  uint64_t v89;
  void (*v90)(char *, uint64_t, uint64_t);
  void (*v91)(char *, char *, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  char *v99;
  __n128 v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char v106;
  char v107;
  uint64_t v108;
  char v109;
  char v110;
  __n128 v111;
  uint64_t v112;
  char v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  void (*v122)(char *, uint64_t);
  uint64_t v123;
  uint64_t v124;
  char *v125;
  void (*v126)(char *, uint64_t);
  char *v127;
  uint64_t v128;
  uint64_t v129;
  void (*v130)(char *, uint64_t);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  void (*v136)(char *, uint64_t);
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v141;
  char *v142;
  char *v143;
  char *v144;
  char *v145;
  char *v146;
  char *v147;
  char *v148;
  char *v149;
  uint64_t (*v150)(char *, uint64_t, uint64_t);
  uint64_t v151;
  char *v152;
  char *v153;
  char *v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;

  v152 = a1;
  v160 = a3;
  v4 = sub_100053F2C(&qword_1005D3318);
  __chkstk_darwin(v4);
  v156 = (char *)&v141 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100053F2C((uint64_t *)&unk_1005D3400);
  __chkstk_darwin(v6);
  v154 = (char *)&v141 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = type metadata accessor for DateComponents(0);
  v157 = *(_QWORD *)(v159 - 8);
  v8 = __chkstk_darwin(v159);
  v149 = (char *)&v141 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v150 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v141 - v11);
  v12 = __chkstk_darwin(v10);
  v146 = (char *)&v141 - v13;
  __chkstk_darwin(v12);
  v143 = (char *)&v141 - v14;
  v15 = type metadata accessor for Calendar.Component(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (char *)&v141 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  v20 = __chkstk_darwin(v19);
  v148 = (char *)&v141 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __chkstk_darwin(v20);
  v24 = (char *)&v141 - v23;
  v25 = __chkstk_darwin(v22);
  v145 = (char *)&v141 - v26;
  __chkstk_darwin(v25);
  v28 = (char *)&v141 - v27;
  v29 = type metadata accessor for Date(0);
  v30 = *(_QWORD *)(v29 - 8);
  v31 = __chkstk_darwin(v29);
  v147 = (char *)&v141 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __chkstk_darwin(v31);
  v35 = (char *)&v141 - v34;
  v36 = __chkstk_darwin(v33);
  v144 = (char *)&v141 - v37;
  __chkstk_darwin(v36);
  v39 = (char *)&v141 - v38;
  v155 = type metadata accessor for Calendar(0);
  v161 = *(_QWORD *)(v155 - 8);
  v40 = __chkstk_darwin(v155);
  v41 = __chkstk_darwin(v40);
  v153 = (char *)&v141 - v42;
  v43 = __chkstk_darwin(v41);
  v158 = v30;
  v151 = v29;
  if ((a2 & 1) != 0)
  {
    v46 = (char *)&v141 - v45;
    static Calendar.current.getter(v43);
    v47 = enum case for Calendar.Component.day(_:);
    v48 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 104);
    v48(v18, enum case for Calendar.Component.day(_:), v15);
    v49 = v152;
    v152 = v46;
    Calendar.date(byAdding:value:to:wrappingComponents:)(v18, 1, v49, 0);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    v150 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
    v50 = v150(v28, 1, v29);
    v142 = v39;
    if ((_DWORD)v50 == 1)
    {
      Date.init()(v50);
      sub_1000051EC((uint64_t)v28, (uint64_t *)&unk_1005D3320);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v39, v28, v29);
    }
    v57 = sub_100053F2C(&qword_1005D33B8);
    v58 = *(_QWORD *)(v16 + 72);
    v59 = *(unsigned __int8 *)(v16 + 80);
    v60 = (v59 + 32) & ~v59;
    v61 = swift_allocObject(v57, v60 + 3 * v58, v59 | 7);
    *(_OWORD *)(v61 + 16) = xmmword_100481B10;
    v62 = v61 + v60;
    v48((char *)v62, enum case for Calendar.Component.year(_:), v15);
    v48((char *)(v62 + v58), enum case for Calendar.Component.month(_:), v15);
    v48((char *)(v62 + 2 * v58), v47, v15);
    v63 = sub_10013C998(v61);
    swift_setDeallocating(v61);
    swift_arrayDestroy(v62, 3, v15);
    swift_deallocClassInstance(v61, 32, 7);
    v64 = v143;
    Calendar.dateComponents(_:from:)(v63, v142);
    v65 = swift_bridgeObjectRelease(v63);
    v66 = v154;
    v67 = v155;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v161 + 56))(v154, 1, 1, v155, v65);
    v68 = type metadata accessor for TimeZone(0);
    v69 = v156;
    v70 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v156, 1, 1, v68);
    v71 = DateComponents.year.getter(v70);
    v73 = v72 & 1;
    v74 = DateComponents.month.getter();
    v76 = v75 & 1;
    v77 = DateComponents.day.getter();
    v79 = v146;
    v80 = DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)(v66, v69, 0, 1, v71, v73, v74, v76, v77, v78 & 1, 4, 0, 0, 0, 0, 1, 0, 1, 0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1,
            0,
            1);
    v81 = v153;
    static Calendar.current.getter(v80);
    v82 = (uint64_t)v145;
    Calendar.date(from:)(v79);
    v83 = *(void (**)(char *, uint64_t))(v161 + 8);
    v83(v81, v67);
    v84 = v151;
    v85 = v150((char *)v82, 1, v151);
    if ((_DWORD)v85 == 1)
    {
      v86 = v144;
      Date.init()(v85);
      v87 = *(void (**)(char *, uint64_t))(v157 + 8);
      v88 = v159;
      v87(v79, v159);
      v87(v64, v88);
      v89 = v158;
      (*(void (**)(char *, uint64_t))(v158 + 8))(v142, v84);
      v83(v152, v67);
      sub_1000051EC(v82, (uint64_t *)&unk_1005D3320);
      v90 = *(void (**)(char *, uint64_t, uint64_t))(v89 + 32);
    }
    else
    {
      v130 = *(void (**)(char *, uint64_t))(v157 + 8);
      v131 = v159;
      v130(v79, v159);
      v130(v64, v131);
      v132 = v158;
      (*(void (**)(char *, uint64_t))(v158 + 8))(v142, v84);
      v83(v152, v67);
      v90 = *(void (**)(char *, uint64_t, uint64_t))(v132 + 32);
      v86 = v144;
      v90(v144, v82, v84);
    }
    v133 = v160;
    v134 = v86;
    v135 = v84;
  }
  else
  {
    v51 = v44;
    static Calendar.current.getter(v43);
    v52 = enum case for Calendar.Component.day(_:);
    v53 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 104);
    v53(v18, enum case for Calendar.Component.day(_:), v15);
    v54 = v152;
    v152 = v51;
    Calendar.date(byAdding:value:to:wrappingComponents:)(v18, 1, v54, 0);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    v146 = *(char **)(v30 + 48);
    v55 = ((uint64_t (*)(char *, uint64_t, uint64_t))v146)(v24, 1, v29);
    if ((_DWORD)v55 == 1)
    {
      v56 = v35;
      Date.init()(v55);
      sub_1000051EC((uint64_t)v24, (uint64_t *)&unk_1005D3320);
    }
    else
    {
      v91 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
      v56 = v35;
      v91(v35, v24, v29);
    }
    v141 = v56;
    v92 = sub_100053F2C(&qword_1005D33B8);
    v93 = *(_QWORD *)(v16 + 72);
    v94 = *(unsigned __int8 *)(v16 + 80);
    v95 = (v94 + 32) & ~v94;
    v96 = swift_allocObject(v92, v95 + 5 * v93, v94 | 7);
    *(_OWORD *)(v96 + 16) = xmmword_100491480;
    v97 = v96 + v95;
    v53((char *)v97, enum case for Calendar.Component.year(_:), v15);
    v53((char *)(v97 + v93), enum case for Calendar.Component.month(_:), v15);
    v53((char *)(v97 + 2 * v93), v52, v15);
    v53((char *)(v97 + 3 * v93), enum case for Calendar.Component.hour(_:), v15);
    v53((char *)(v97 + 4 * v93), enum case for Calendar.Component.minute(_:), v15);
    v98 = sub_10013C998(v96);
    swift_setDeallocating(v96);
    swift_arrayDestroy(v97, 5, v15);
    swift_deallocClassInstance(v96, 32, 7);
    v99 = (char *)v150;
    Calendar.dateComponents(_:from:)(v98, v56);
    v100 = swift_bridgeObjectRelease(v98);
    v102 = v154;
    v101 = v155;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v161 + 56))(v154, 1, 1, v155, v100);
    v103 = type metadata accessor for TimeZone(0);
    v104 = v156;
    v105 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 56))(v156, 1, 1, v103);
    v145 = (char *)DateComponents.year.getter(v105);
    LODWORD(v144) = v106 & 1;
    v143 = (char *)DateComponents.month.getter();
    LODWORD(v142) = v107 & 1;
    v108 = DateComponents.day.getter();
    v110 = v109 & 1;
    v112 = DateComponents.hour.getter(v111);
    v114 = v113 & 1;
    v115 = DateComponents.minute.getter(v112);
    v116 = v101;
    v118 = v149;
    v119 = DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)(v102, v104, 0, 1, v145, v144, v143, v142, v108, v110, v112, v114, v115, v117 & 1, 0, 1, 0, 1, 0,
             1,
             0,
             1,
             0,
             1,
             0,
             1,
             0,
             1,
             0,
             1);
    v120 = v153;
    static Calendar.current.getter(v119);
    v121 = (uint64_t)v148;
    Calendar.date(from:)(v118);
    v122 = *(void (**)(char *, uint64_t))(v161 + 8);
    v122(v120, v116);
    v123 = v151;
    v124 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v146)(v121, 1, v151);
    if ((_DWORD)v124 == 1)
    {
      v125 = v147;
      Date.init()(v124);
      v126 = *(void (**)(char *, uint64_t))(v157 + 8);
      v127 = v118;
      v128 = v159;
      v126(v127, v159);
      v126(v99, v128);
      v129 = v158;
      (*(void (**)(char *, uint64_t))(v158 + 8))(v141, v123);
      v122(v152, v116);
      sub_1000051EC(v121, (uint64_t *)&unk_1005D3320);
      v90 = *(void (**)(char *, uint64_t, uint64_t))(v129 + 32);
    }
    else
    {
      v136 = *(void (**)(char *, uint64_t))(v157 + 8);
      v137 = v118;
      v138 = v159;
      v136(v137, v159);
      v136(v99, v138);
      v139 = v158;
      (*(void (**)(char *, uint64_t))(v158 + 8))(v141, v123);
      v122(v152, v116);
      v90 = *(void (**)(char *, uint64_t, uint64_t))(v139 + 32);
      v125 = v147;
      v90(v147, v121, v123);
    }
    v133 = v160;
    v134 = v125;
    v135 = v123;
  }
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v90)(v133, v134, v135);
}

uint64_t sub_10043A2F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  void (*v10)(char *, uint64_t);
  _QWORD v12[2];

  v0 = type metadata accessor for UUID(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v2);
  v7 = (char *)v12 - v6;
  v8 = FMIPBeaconShare.beaconIdentifier.getter(v5);
  FMIPUnknownItem.identifier.getter(v8);
  v9 = static UUID.== infix(_:_:)(v7, v4);
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v4, v0);
  v10(v7, v0);
  return v9 & 1;
}

uint64_t sub_10043A3D0(char a1, unsigned __int8 a2)
{
  uint64_t result;

  switch(a1)
  {
    case 2:
      if (a2 != 2)
        goto LABEL_15;
      goto LABEL_13;
    case 3:
      if (a2 != 3)
        goto LABEL_15;
      goto LABEL_13;
    case 4:
      if (a2 != 4)
        goto LABEL_15;
      goto LABEL_13;
    case 5:
      if (a2 != 5)
        goto LABEL_15;
      goto LABEL_13;
    case 6:
      if (a2 != 6)
        goto LABEL_15;
      goto LABEL_13;
    case 7:
      if (a2 != 7)
        goto LABEL_15;
LABEL_13:
      result = 1;
      break;
    default:
      if (a2 - 2 >= 6)
        result = (((a1 & 1) == 0) ^ a2) & 1;
      else
LABEL_15:
        result = 0;
      break;
  }
  return result;
}

BOOL sub_10043A474(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  void *v25;
  id v26;
  __n128 v27;
  double v28;
  uint64_t v29;
  void *v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  uint64_t v38;
  uint64_t v39;

  v39 = a2;
  v2 = sub_100053F2C(&qword_1005E3AB0);
  __chkstk_darwin(v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FMIPRangingParameters(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FMIPLocation(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100053F2C((uint64_t *)&unk_1005D6700);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v38 - v17;
  v20 = FMIPUnknownItem.locations.getter(v19);
  v21 = v20;
  v22 = *(_QWORD *)(v20 + 16);
  if (v22)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v18, v20+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * (v22 - 1), v9);
    v23 = 0;
  }
  else
  {
    v23 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v18, v23, 1, v9);
  swift_bridgeObjectRelease(v21);
  sub_10043C8DC((uint64_t)v18, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v16, 1, v9) == 1)
  {
    sub_1000051EC((uint64_t)v18, (uint64_t *)&unk_1005D6700);
    v24 = 0;
    v18 = v16;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v16, v9);
    v25 = *(void **)(*(_QWORD *)(v39 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
    if (v25)
    {
      v26 = v25;
      FMIPManager.rangingParameters.getter(v26);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
      {
        FMIPRangingParameters.init()();
        sub_1000051EC((uint64_t)v4, &qword_1005E3AB0);
      }
      else
      {
        v27.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
      }
      v28 = FMIPRangingParameters.inBTRangeDistanceInMeters.getter(v27);
      v29 = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v30 = (void *)FMIPLocation.location.getter(v29);
      objc_msgSend(v30, "distanceFromLocation:", v26);
      v32 = v31;
      objc_msgSend(v30, "horizontalAccuracy");
      v34 = v33;
      objc_msgSend(v26, "horizontalAccuracy");
      v36 = v35;

      v24 = v32 / sqrt(v28 * v28 + v34 * v34 + v36 * v36) < 1.5;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v24 = 0;
    }
  }
  sub_1000051EC((uint64_t)v18, (uint64_t *)&unk_1005D6700);
  return v24;
}

uint64_t sub_10043A7D0(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t My;
  _QWORD *v11;
  char v12;
  uint64_t v13;
  char v14;
  _QWORD v17[5];

  v6 = type metadata accessor for FMIPUnknownItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v17[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  My = type metadata accessor for Feature.FindMy(0);
  v17[3] = My;
  v17[4] = sub_100008000((unint64_t *)&qword_1005D9690, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.FindMy, (uint64_t)&protocol conformance descriptor for Feature.FindMy);
  v11 = sub_10003D370(v17);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(My - 8) + 104))(v11, enum case for Feature.FindMy.utPrecisionFinding(_:), My);
  LOBYTE(My) = isFeatureEnabled(_:)(v17);
  sub_100029574(v17);
  if ((My & 1) != 0)
  {
    sub_10043A474(a1, a3);
    v12 = sub_100136E34(a1, a2 & 1);
    v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
    if ((v12 & 1) != 0)
      v14 = FMIPUnknownItem.isAppleAudioAccessory.getter(v13) ^ 1;
    else
      v14 = 0;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_10043A918(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int v11;
  void *v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  unsigned __int8 v18;
  uint64_t v20;
  void *v21;
  id v22;
  unsigned __int8 v23;
  uint64_t v24;

  v2 = type metadata accessor for FMIPUnknownItem(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FMIPProductType(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  FMIPUnknownItem.productType.getter(v8);
  v11 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v10, v6);
  if (v11 == enum case for FMIPProductType.b389(_:))
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v10, v6);
    sub_1000051EC((uint64_t)v10, &qword_1005D8EA8);
    return 1;
  }
  else if (v11 == enum case for FMIPProductType.zeus(_:))
  {
    v13.n128_f64[0] = (*(double (**)(char *, uint64_t))(v7 + 96))(v10, v6);
    v14 = type metadata accessor for FMIPZeusProductInformation(0, v13);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v10, v14);
    return 1;
  }
  else if (v11 == enum case for FMIPProductType.hawkeye(_:))
  {
    v15 = (*(uint64_t (**)(char *, uint64_t))(v7 + 96))(v10, v6);
    v16 = (void *)FMIPUnknownItem.unknownBeacon.getter(v15);
    if (v16)
    {
      v17 = v16;
      v18 = objc_msgSend(v16, "capabilities");

      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
      v12 = (void *)(v18 & 1);
    }
    else
    {
      v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
      v21 = (void *)FMIPUnknownItem.unknownBeacon.getter(v20);
      v12 = v21;
      if (v21)
      {
        v22 = objc_msgSend(v21, "metadata");

        if (v22)
        {
          v23 = objc_msgSend(v22, "capabilities");

          v12 = (void *)(v23 & 1);
        }
        else
        {
          v12 = 0;
        }
      }
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_1000051EC((uint64_t)v10, &qword_1005D7320);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    return 0;
  }
  return (uint64_t)v12;
}

uint64_t sub_10043AB64(uint64_t a1, int a2, char *a3, char a4, uint64_t a5)
{
  unint64_t v6;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  BOOL v28;
  char v29;
  _QWORD *i;
  Swift::Int v31;
  uint64_t v32;
  uint64_t v33;
  int isUniquelyReferenced_nonNull_native;
  int v35;
  unint64_t v36;
  uint64_t v37;
  Swift::Int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  unint64_t v44;
  Swift::Int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  int v50;
  unint64_t v51;
  uint64_t v52;
  Swift::Int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  BOOL v61;
  char v62;
  _QWORD *v63;
  Swift::Int v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  int v70;
  int v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  Swift::Int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  Swift::Int v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  int v88;
  unint64_t v89;
  uint64_t v90;
  Swift::Int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  Swift::Int v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  unint64_t v100;
  uint64_t v101;
  Swift::Int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  Swift::Int v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t My;
  _QWORD *v114;
  uint64_t v115;
  __n128 v116;
  uint64_t v117;
  uint64_t v118;
  __n128 v119;
  uint64_t v120;
  char v121;
  Swift::Int v122;
  uint64_t v123;
  uint64_t v124;
  int v125;
  int v126;
  unint64_t v127;
  _QWORD *v128;
  int v129;
  int v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  Swift::Int v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  uint64_t v142;
  uint64_t v143;
  Swift::Int v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  char v156;
  Swift::Int v157;
  uint64_t v158;
  uint64_t v159;
  _QWORD *v160;
  int v161;
  int v162;
  unint64_t v163;
  __n128 v164;
  char *v165;
  uint64_t v166;
  Swift::Int v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  void (*v180)(unint64_t, unint64_t);
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  _QWORD *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  Swift::Int v192;
  uint64_t v193;
  unint64_t v194;
  uint64_t v195;
  int v196;
  char v197;
  char *v198;
  uint64_t v199;
  char v200;
  Swift::Int v201;
  uint64_t v202;
  unint64_t v203;
  uint64_t v204;
  int v205;
  int v206;
  unint64_t v207;
  uint64_t v208;
  Swift::Int v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  Swift::Int v214;
  uint64_t v215;
  unint64_t v216;
  uint64_t v217;
  char v218;
  uint64_t result;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  char *v223;
  uint64_t v224;
  char *v225;
  char *v226;
  char *v227;
  char *v228;
  char *v229;
  uint64_t v230;
  char *v231;
  uint64_t v232;
  _QWORD *v233;
  uint64_t v234;
  _QWORD v235[9];
  _QWORD v236[2];
  _QWORD *v237;

  LOBYTE(v6) = a4;
  v229 = a3;
  LODWORD(v231) = a2;
  v8 = type metadata accessor for FMIPUnknownItemAlertState(0);
  v224 = *(_QWORD *)(v8 - 8);
  v9 = __chkstk_darwin(v8);
  v227 = (char *)&v220 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v223 = (char *)&v220 - v11;
  v12 = type metadata accessor for FMIPUnknownItem(0);
  v13 = *(char **)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v225 = (char *)&v220 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v226 = (char *)&v220 - v17;
  __chkstk_darwin(v16);
  v228 = (char *)&v220 - v18;
  v232 = type metadata accessor for FMIPProductType(0);
  v19 = *(_QWORD *)(v232 - 8);
  v20 = __chkstk_darwin(v232);
  v222 = (char *)&v220 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v23 = (char *)&v220 - v22;
  v24 = (unint64_t)&_swiftEmptySetSingleton;
  v237 = &_swiftEmptySetSingleton;
  v25 = sub_10043A7D0(a1, v6, a5);
  v233 = &_swiftEmptySetSingleton;
  v234 = a1;
  v230 = v12;
  if ((v25 & 1) == 0)
    goto LABEL_37;
  v26 = FMIPUnknownItem.productType.getter(v25);
  v27 = FMIPProductType.isAccessory.getter(v26);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v23, v232);
  v28 = sub_10043A474(a1, a5);
  v29 = sub_10013739C(a1, v6 & 1, v27 & 1, a5, v28);
  i = &_swiftEmptySetSingleton;
  if ((v231 & 1) == 0 || (v29 & 1) == 0)
    goto LABEL_20;
  Hasher.init(_seed:)(v235, *((_QWORD *)&_swiftEmptySetSingleton + 5));
  Hasher._combine(_:)(0);
  v31 = Hasher._finalize()();
  v32 = -1 << *((_BYTE *)&_swiftEmptySetSingleton + 32);
  v24 = v31 & ~v32;
  if (((*(_QWORD *)((char *)&_swiftEmptySetSingleton + ((v24 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v24) & 1) != 0)
  {
    v33 = ~v32;
    do
    {
      if (*(_BYTE *)(*((_QWORD *)&_swiftEmptySetSingleton + 6) + v24) == 2)
        goto LABEL_20;
      v24 = (v24 + 1) & v33;
    }
    while (((*(_QWORD *)((char *)&_swiftEmptySetSingleton + ((v24 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v24) & 1) != 0);
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(&_swiftEmptySetSingleton);
  v35 = isUniquelyReferenced_nonNull_native;
  v236[0] = &_swiftEmptySetSingleton;
  v36 = *((_QWORD *)&_swiftEmptySetSingleton + 2);
  if (*((_QWORD *)&_swiftEmptySetSingleton + 3) > v36)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      goto LABEL_213;
    for (i = &_swiftEmptySetSingleton; ; i = (_QWORD *)v236[0])
    {
LABEL_18:
      *(_QWORD *)((char *)i + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v24;
      *(_BYTE *)(i[6] + v24) = 2;
      v41 = i[2];
      v42 = __OFADD__(v41, 1);
      v43 = v41 + 1;
      if (v42)
        goto LABEL_209;
      i[2] = v43;
      swift_bridgeObjectRelease(0x8000000000000000);
LABEL_20:
      v44 = v8;
      v24 = (unint64_t)v237;
      Hasher.init(_seed:)(v235, v237[5]);
      Hasher._combine(_:)(0);
      v45 = Hasher._finalize()();
      v46 = -1 << *(_BYTE *)(v24 + 32);
      v8 = v45 & ~v46;
      v47 = *(_QWORD *)(v24 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8;
      v233 = i;
      if ((v47 & 1) != 0)
      {
        v48 = ~v46;
        while (*(_BYTE *)(*(_QWORD *)(v24 + 48) + v8) != 2)
        {
          v8 = (v8 + 1) & v48;
          if (((*(_QWORD *)(v24 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
            goto LABEL_24;
        }
      }
      else
      {
LABEL_24:
        v49 = swift_isUniquelyReferenced_nonNull_native(v24);
        v50 = v49;
        v236[0] = v24;
        v51 = *(_QWORD *)(v24 + 16);
        if (*(_QWORD *)(v24 + 24) <= v51)
        {
          v52 = v51 + 1;
          if (v50)
            sub_100205454(v52);
          else
            sub_100207C30(v52);
          v24 = v236[0];
          Hasher.init(_seed:)(v235, *(_QWORD *)(v236[0] + 40));
          Hasher._combine(_:)(0);
          v53 = Hasher._finalize()();
          v54 = -1 << *(_BYTE *)(v24 + 32);
          v8 = v53 & ~v54;
          if (((*(_QWORD *)(v24 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
          {
            v55 = ~v54;
            while (*(_BYTE *)(*(_QWORD *)(v24 + 48) + v8) != 2)
            {
              v8 = (v8 + 1) & v55;
              if (((*(_QWORD *)(v24 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
                goto LABEL_34;
            }
            goto LABEL_214;
          }
        }
        else if ((v49 & 1) == 0)
        {
          sub_100206E2C();
          v24 = v236[0];
        }
LABEL_34:
        *(_QWORD *)(v24 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v8;
        *(_BYTE *)(*(_QWORD *)(v24 + 48) + v8) = 2;
        v56 = *(_QWORD *)(v24 + 16);
        v42 = __OFADD__(v56, 1);
        v57 = v56 + 1;
        if (v42)
        {
          __break(1u);
LABEL_206:
          __break(1u);
LABEL_207:
          __break(1u);
          goto LABEL_208;
        }
        *(_QWORD *)(v24 + 16) = v57;
        v237 = (_QWORD *)v24;
        swift_bridgeObjectRelease(0x8000000000000000);
      }
      v8 = v44;
      v12 = v230;
      a1 = v234;
LABEL_37:
      sub_10043A474(a1, a5);
      LODWORD(v6) = v6 & 1;
      v58 = sub_100136E34(a1, v6);
      if ((v58 & 0x100) != 0)
      {
        v59 = FMIPUnknownItem.productType.getter(v58);
        v60 = FMIPProductType.isAccessory.getter(v59);
        (*(void (**)(char *, uint64_t))(v19 + 8))(v23, v232);
        v61 = sub_10043A474(a1, a5);
        v62 = sub_10013739C(a1, v6, v60 & 1, a5, v61);
        if ((v231 & 1) != 0 && (v62 & 1) != 0)
        {
          v63 = v233;
          Hasher.init(_seed:)(v235, v233[5]);
          Hasher._combine(_:)(1uLL);
          v64 = Hasher._finalize()();
          v65 = -1 << *((_BYTE *)v63 + 32);
          v24 = v64 & ~v65;
          v66 = v63 + 7;
          if (((*(_QWORD *)((char *)v63 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v24) & 1) != 0)
          {
            v67 = ~v65;
            v68 = v63[6];
            v23 = v13;
            while (*(_BYTE *)(v68 + v24) != 3)
            {
              v24 = (v24 + 1) & v67;
              if (((*(_QWORD *)((char *)v66 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
                goto LABEL_48;
            }
          }
          else
          {
            v23 = v13;
LABEL_48:
            v69 = v233;
            v70 = swift_isUniquelyReferenced_nonNull_native(v233);
            v71 = v70;
            v236[0] = v69;
            v72 = v69[2];
            if (v69[3] <= v72)
            {
              v73 = v72 + 1;
              if (v71)
                sub_100205454(v73);
              else
                sub_100207C30(v73);
              v74 = v236[0];
              Hasher.init(_seed:)(v235, *(_QWORD *)(v236[0] + 40));
              Hasher._combine(_:)(1uLL);
              v75 = Hasher._finalize()();
              v76 = -1 << *(_BYTE *)(v74 + 32);
              v24 = v75 & ~v76;
              v77 = v74 + 56;
              v78 = *(_QWORD *)(v74 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24;
              v233 = (_QWORD *)v74;
              if ((v78 & 1) != 0)
              {
                v79 = ~v76;
                v80 = *(_QWORD *)(v74 + 48);
                v23 = v13;
                while (*(_BYTE *)(v80 + v24) != 3)
                {
                  v24 = (v24 + 1) & v79;
                  if (((*(_QWORD *)(v77 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
                    goto LABEL_60;
                }
                goto LABEL_214;
              }
              v23 = v13;
            }
            else if ((v70 & 1) == 0)
            {
              sub_100206E2C();
              v233 = (_QWORD *)v236[0];
            }
LABEL_60:
            v81 = v233;
            *(_QWORD *)((char *)v233 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v24;
            *(_BYTE *)(v81[6] + v24) = 3;
            v82 = v81[2];
            v42 = __OFADD__(v82, 1);
            v83 = v82 + 1;
            if (v42)
              goto LABEL_210;
            v81[2] = v83;
            swift_bridgeObjectRelease(0x8000000000000000);
          }
        }
        else
        {
          v23 = v13;
        }
        v24 = (unint64_t)v237;
        Hasher.init(_seed:)(v235, v237[5]);
        Hasher._combine(_:)(1uLL);
        v84 = Hasher._finalize()();
        v85 = -1 << *(_BYTE *)(v24 + 32);
        v6 = v84 & ~v85;
        if (((*(_QWORD *)(v24 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
        {
          v86 = ~v85;
          while (*(_BYTE *)(*(_QWORD *)(v24 + 48) + v6) != 3)
          {
            v6 = (v6 + 1) & v86;
            if (((*(_QWORD *)(v24 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
              goto LABEL_66;
          }
        }
        else
        {
LABEL_66:
          v87 = swift_isUniquelyReferenced_nonNull_native(v24);
          v88 = v87;
          v236[0] = v24;
          v89 = *(_QWORD *)(v24 + 16);
          if (*(_QWORD *)(v24 + 24) <= v89)
          {
            v90 = v89 + 1;
            if (v88)
              sub_100205454(v90);
            else
              sub_100207C30(v90);
            v24 = v236[0];
            Hasher.init(_seed:)(v235, *(_QWORD *)(v236[0] + 40));
            Hasher._combine(_:)(1uLL);
            v91 = Hasher._finalize()();
            v92 = -1 << *(_BYTE *)(v24 + 32);
            v6 = v91 & ~v92;
            if (((*(_QWORD *)(v24 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
            {
              v93 = ~v92;
              while (*(_BYTE *)(*(_QWORD *)(v24 + 48) + v6) != 3)
              {
                v6 = (v6 + 1) & v93;
                if (((*(_QWORD *)(v24 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
                  goto LABEL_76;
              }
              goto LABEL_214;
            }
          }
          else if ((v87 & 1) == 0)
          {
            sub_100206E2C();
            v24 = v236[0];
          }
LABEL_76:
          *(_QWORD *)(v24 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v6;
          *(_BYTE *)(*(_QWORD *)(v24 + 48) + v6) = 3;
          v94 = *(_QWORD *)(v24 + 16);
          v42 = __OFADD__(v94, 1);
          v95 = v94 + 1;
          if (v42)
            goto LABEL_206;
          *(_QWORD *)(v24 + 16) = v95;
          v237 = (_QWORD *)v24;
          swift_bridgeObjectRelease(0x8000000000000000);
        }
      }
      else
      {
        v23 = v13;
      }
      if ((sub_10043A918(a1) & 1) == 0)
        goto LABEL_101;
      Hasher.init(_seed:)(v235, *(_QWORD *)(v24 + 40));
      Hasher._combine(_:)(2uLL);
      v96 = Hasher._finalize()();
      v97 = -1 << *(_BYTE *)(v24 + 32);
      v6 = v96 & ~v97;
      if (((*(_QWORD *)(v24 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
      {
        v98 = ~v97;
        while (*(_BYTE *)(*(_QWORD *)(v24 + 48) + v6) != 4)
        {
          v6 = (v6 + 1) & v98;
          if (((*(_QWORD *)(v24 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
            goto LABEL_83;
        }
      }
      else
      {
LABEL_83:
        v99 = swift_isUniquelyReferenced_nonNull_native(v24);
        v236[0] = v24;
        v237 = (_QWORD *)0x8000000000000000;
        v100 = *(_QWORD *)(v24 + 16);
        if (*(_QWORD *)(v24 + 24) <= v100)
        {
          v101 = v100 + 1;
          if (v99)
            sub_100205454(v101);
          else
            sub_100207C30(v101);
          v24 = v236[0];
          Hasher.init(_seed:)(v235, *(_QWORD *)(v236[0] + 40));
          Hasher._combine(_:)(2uLL);
          v102 = Hasher._finalize()();
          v103 = -1 << *(_BYTE *)(v24 + 32);
          v6 = v102 & ~v103;
          if (((*(_QWORD *)(v24 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
          {
            v104 = ~v103;
            while (*(_BYTE *)(*(_QWORD *)(v24 + 48) + v6) != 4)
            {
              v6 = (v6 + 1) & v104;
              if (((*(_QWORD *)(v24 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
                goto LABEL_93;
            }
            goto LABEL_214;
          }
        }
        else if ((v99 & 1) == 0)
        {
          sub_100206E2C();
          v24 = v236[0];
        }
LABEL_93:
        *(_QWORD *)(v24 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v6;
        *(_BYTE *)(*(_QWORD *)(v24 + 48) + v6) = 4;
        v105 = *(_QWORD *)(v24 + 16);
        v42 = __OFADD__(v105, 1);
        v106 = v105 + 1;
        if (v42)
          goto LABEL_207;
        *(_QWORD *)(v24 + 16) = v106;
        v237 = (_QWORD *)v24;
        swift_bridgeObjectRelease(0x8000000000000000);
      }
      if ((v231 & 1) != 0)
      {
        v107 = v233;
        Hasher.init(_seed:)(v235, v233[5]);
        Hasher._combine(_:)(2uLL);
        v108 = Hasher._finalize()();
        v109 = -1 << *((_BYTE *)v107 + 32);
        v24 = v108 & ~v109;
        v110 = v107 + 7;
        v6 = (unint64_t)v228;
        if (((*(_QWORD *)((char *)v107 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v24) & 1) != 0)
        {
          v111 = ~v109;
          v112 = v107[6];
          v23 = v13;
          while (*(_BYTE *)(v112 + v24) != 4)
          {
            v24 = (v24 + 1) & v111;
            if (((*(_QWORD *)((char *)v110 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
              goto LABEL_114;
          }
          v13 = v229;
        }
        else
        {
          v23 = v13;
LABEL_114:
          v128 = v233;
          v129 = swift_isUniquelyReferenced_nonNull_native(v233);
          v130 = v129;
          v236[0] = v128;
          v131 = v128[2];
          if (v128[3] <= v131)
          {
            v132 = v131 + 1;
            if (v130)
              sub_100205454(v132);
            else
              sub_100207C30(v132);
            v134 = v236[0];
            Hasher.init(_seed:)(v235, *(_QWORD *)(v236[0] + 40));
            Hasher._combine(_:)(2uLL);
            v135 = Hasher._finalize()();
            v136 = -1 << *(_BYTE *)(v134 + 32);
            v24 = v135 & ~v136;
            v137 = v134 + 56;
            v138 = *(_QWORD *)(v134 + 56 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24;
            v233 = (_QWORD *)v134;
            if ((v138 & 1) != 0)
            {
              v139 = ~v136;
              v140 = *(_QWORD *)(v134 + 48);
              v23 = v13;
              v13 = v229;
              while (*(_BYTE *)(v140 + v24) != 4)
              {
                v24 = (v24 + 1) & v139;
                if (((*(_QWORD *)(v137 + ((v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
                  goto LABEL_130;
              }
              goto LABEL_214;
            }
            v23 = v13;
          }
          else if ((v129 & 1) == 0)
          {
            sub_100206E2C();
            v233 = (_QWORD *)v236[0];
          }
          v13 = v229;
LABEL_130:
          v141 = v233;
          *(_QWORD *)((char *)v233 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v24;
          *(_BYTE *)(v141[6] + v24) = 4;
          v142 = v141[2];
          v42 = __OFADD__(v142, 1);
          v143 = v142 + 1;
          if (v42)
            goto LABEL_211;
          v141[2] = v143;
          swift_bridgeObjectRelease(0x8000000000000000);
        }
      }
      else
      {
LABEL_101:
        v6 = (unint64_t)v228;
        v13 = v229;
      }
      My = type metadata accessor for Feature.FindMy(0);
      v235[3] = My;
      v235[4] = sub_100008000((unint64_t *)&qword_1005D9690, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.FindMy, (uint64_t)&protocol conformance descriptor for Feature.FindMy);
      v114 = sub_10003D370(v235);
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(My - 8) + 104))(v114, enum case for Feature.FindMy.itemSharing(_:), My);
      LOBYTE(My) = isFeatureEnabled(_:)(v235);
      v115 = sub_100029574(v235);
      if ((My & 1) == 0)
        goto LABEL_139;
      FMIPUnknownItem.handle.getter(v115);
      v118 = v117;
      v119 = swift_bridgeObjectRelease(v117);
      v120 = (*((uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))v23 + 2))(v6, a1, v12, v119);
      if (!v118)
      {
        (*((void (**)(unint64_t, uint64_t))v23 + 1))(v6, v12);
        goto LABEL_139;
      }
      v121 = FMIPUnknownItem.isRequestable.getter(v120);
      (*((void (**)(unint64_t, uint64_t))v23 + 1))(v6, v12);
      if ((v121 & 1) == 0)
        goto LABEL_139;
      v24 = (unint64_t)v237;
      Hasher.init(_seed:)(v235, v237[5]);
      Hasher._combine(_:)(6uLL);
      v122 = Hasher._finalize()();
      v123 = -1 << *(_BYTE *)(v24 + 32);
      v6 = v122 & ~v123;
      if (((*(_QWORD *)(v24 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
      {
        v124 = ~v123;
        while (*(_BYTE *)(*(_QWORD *)(v24 + 48) + v6) != 7)
        {
          v6 = (v6 + 1) & v124;
          if (((*(_QWORD *)(v24 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
            goto LABEL_109;
        }
LABEL_139:
        v149 = v8;
        v8 = *(unsigned __int8 *)(*(_QWORD *)(a5 + 16) + OBJC_IVAR____TtC6FindMy19FMConditionProvider_isUnderAgeUser);
        v150 = *((_QWORD *)v13 + 2);
        v221 = v19;
        if (v150)
        {
          v151 = *(_QWORD *)(type metadata accessor for FMIPBeaconShare(0) - 8);
          v152 = &v13[(*(unsigned __int8 *)(v151 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v151 + 80)];
          v153 = *(_QWORD *)(v151 + 72);
          swift_bridgeObjectRetain(v13);
          a5 = 0;
          while ((sub_10043A2F4() & 1) == 0)
          {
            v152 += v153;
            if (!--v150)
            {
              v116 = swift_bridgeObjectRelease(v13);
              goto LABEL_145;
            }
          }
          v164 = swift_bridgeObjectRelease(v13);
          v165 = v226;
          v229 = (char *)*((_QWORD *)v23 + 2);
          ((void (*)(char *, uint64_t, uint64_t, __n128))v229)(v226, v234, v12, v164);
          v231 = (char *)*((_QWORD *)v23 + 1);
          v157 = ((uint64_t (*)(char *, uint64_t))v231)(v165, v12);
          v6 = (unint64_t)v227;
LABEL_163:
          v174 = v223;
          v175 = v224;
          v176 = v234;
          FMIPUnknownItem.alertState.getter(v157);
          v228 = *(char **)(v175 + 104);
          ((void (*)(unint64_t, _QWORD, unint64_t))v228)(v6, enum case for FMIPUnknownItemAlertState.triggered(_:), v149);
          v177 = sub_100008000(&qword_1005DA790, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPUnknownItemAlertState, (uint64_t)&protocol conformance descriptor for FMIPUnknownItemAlertState);
          dispatch thunk of RawRepresentable.rawValue.getter(v235, v149, v177);
          dispatch thunk of RawRepresentable.rawValue.getter(v236, v149, v177);
          v178 = v235[0];
          v179 = v236[0];
          v180 = *(void (**)(unint64_t, unint64_t))(v175 + 8);
          v180(v6, v149);
          v180((unint64_t)v174, v149);
          v181 = v225;
          v182 = v176;
          v183 = v230;
          v184 = ((uint64_t (*)(char *, uint64_t, uint64_t))v229)(v225, v182, v230);
          if (v178 == v179)
          {
            v185 = ((uint64_t (*)(char *, uint64_t))v231)(v181, v183);
            v187 = v232;
            v186 = v233;
            goto LABEL_166;
          }
          FMIPUnknownItem.alertState.getter(v184);
          ((void (*)(unint64_t, _QWORD, unint64_t))v228)(v6, enum case for FMIPUnknownItemAlertState.cleared(_:), v149);
          dispatch thunk of RawRepresentable.rawValue.getter(v235, v149, v177);
          dispatch thunk of RawRepresentable.rawValue.getter(v236, v149, v177);
          v188 = v235[0];
          v189 = v236[0];
          v180(v6, v149);
          v180((unint64_t)v174, v149);
          v185 = ((uint64_t (*)(char *, uint64_t))v231)(v181, v183);
          v187 = v232;
          v186 = v233;
          if (v188 == v189)
          {
LABEL_166:
            FMIPUnknownItem.handle.getter(v185);
            v191 = v190;
            if (v190)
              swift_bridgeObjectRelease(v190);
            Hasher.init(_seed:)(v235, v186[5]);
            Hasher._combine(_:)(3uLL);
            Hasher._combine(_:)(v191 != 0);
            v192 = Hasher._finalize()();
            v193 = -1 << *((_BYTE *)v186 + 32);
            v194 = v192 & ~v193;
            if (((*(_QWORD *)((char *)v186 + ((v194 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v194) & 1) != 0)
            {
              v195 = ~v193;
              while (1)
              {
                v196 = *(unsigned __int8 *)(v186[6] + v194);
                if ((v196 - 2) >= 6 && (v191 != 0) != ((v196 & 1) == 0))
                  break;
                v194 = (v194 + 1) & v195;
                if (((*(_QWORD *)((char *)v186 + ((v194 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v194) & 1) == 0)
                  goto LABEL_174;
              }
            }
            else
            {
LABEL_174:
              v197 = swift_isUniquelyReferenced_nonNull_native(v186);
              v235[0] = v186;
              sub_100206434(v191 != 0, v194, v197);
              v186 = (_QWORD *)v235[0];
              swift_bridgeObjectRelease(0x8000000000000000);
            }
            v185 = sub_1002042C8(v235, v191 != 0);
            v198 = v222;
          }
          else
          {
            v198 = v222;
          }
          v199 = FMIPUnknownItem.productType.getter(v185);
          v200 = FMIPProductType.isAccessory.getter(v199);
          (*(void (**)(char *, uint64_t))(v221 + 8))(v198, v187);
          if ((v200 & 1) != 0)
            goto LABEL_180;
          if (qword_1005D1F78 != -1)
            goto LABEL_204;
          while (1)
          {
            if (byte_1005F5E33 != 1)
              goto LABEL_197;
LABEL_180:
            Hasher.init(_seed:)(v235, v186[5]);
            Hasher._combine(_:)(4uLL);
            v201 = Hasher._finalize()();
            v202 = -1 << *((_BYTE *)v186 + 32);
            v203 = v201 & ~v202;
            if (((*(_QWORD *)((char *)v186 + ((v203 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v203) & 1) != 0)
              break;
LABEL_184:
            v205 = swift_isUniquelyReferenced_nonNull_native(v186);
            v206 = v205;
            v236[0] = v186;
            v207 = v186[2];
            if (v186[3] <= v207)
            {
              v208 = v207 + 1;
              if (v206)
                sub_100205454(v208);
              else
                sub_100207C30(v208);
              v186 = (_QWORD *)v236[0];
              Hasher.init(_seed:)(v235, *(_QWORD *)(v236[0] + 40));
              Hasher._combine(_:)(4uLL);
              v209 = Hasher._finalize()();
              v210 = -1 << *((_BYTE *)v186 + 32);
              v203 = v209 & ~v210;
              if (((*(_QWORD *)((char *)v186 + ((v203 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v203) & 1) != 0)
              {
                v211 = ~v210;
                while (*(_BYTE *)(v186[6] + v203) != 5)
                {
                  v203 = (v203 + 1) & v211;
                  if (((*(_QWORD *)((char *)v186 + ((v203 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v203) & 1) == 0)
                    goto LABEL_194;
                }
                goto LABEL_214;
              }
            }
            else if ((v205 & 1) == 0)
            {
              sub_100206E2C();
              v186 = (_QWORD *)v236[0];
            }
LABEL_194:
            *(_QWORD *)((char *)v186 + ((v203 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v203;
            *(_BYTE *)(v186[6] + v203) = 5;
            v212 = v186[2];
            v42 = __OFADD__(v212, 1);
            v213 = v212 + 1;
            if (!v42)
            {
              v186[2] = v213;
              swift_bridgeObjectRelease(0x8000000000000000);
LABEL_196:
              sub_1002042C8(v235, 5);
LABEL_197:
              Hasher.init(_seed:)(v235, v186[5]);
              Hasher._combine(_:)(5uLL);
              v214 = Hasher._finalize()();
              v215 = -1 << *((_BYTE *)v186 + 32);
              v216 = v214 & ~v215;
              if (((*(_QWORD *)((char *)v186 + ((v216 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v216) & 1) != 0)
              {
                v217 = ~v215;
                while (*(_BYTE *)(v186[6] + v216) != 6)
                {
                  v216 = (v216 + 1) & v217;
                  if (((*(_QWORD *)((char *)v186 + ((v216 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v216) & 1) == 0)
                    goto LABEL_201;
                }
              }
              else
              {
LABEL_201:
                v218 = swift_isUniquelyReferenced_nonNull_native(v186);
                v235[0] = v186;
                sub_100206434(6, v216, v218);
                v186 = (_QWORD *)v235[0];
                swift_bridgeObjectRelease(0x8000000000000000);
              }
              sub_1002042C8(v235, 6);
              return (uint64_t)v186;
            }
            __break(1u);
LABEL_204:
            swift_once(&qword_1005D1F78, sub_1003772BC);
          }
          v204 = ~v202;
          while (*(_BYTE *)(v186[6] + v203) != 5)
          {
            v203 = (v203 + 1) & v204;
            if (((*(_QWORD *)((char *)v186 + ((v203 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v203) & 1) == 0)
              goto LABEL_184;
          }
          goto LABEL_196;
        }
        a5 = 0;
LABEL_145:
        v154 = v226;
        v229 = (char *)*((_QWORD *)v23 + 2);
        v155 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v229)(v226, v234, v12, v116);
        v156 = FMIPUnknownItem.isRequestable.getter(v155);
        v13 = (char *)*((_QWORD *)v23 + 1);
        v157 = ((uint64_t (*)(char *, uint64_t))v13)(v154, v12);
        v6 = (unint64_t)v227;
        v231 = v13;
        if (v8 & 1 | ((v156 & 1) == 0))
          goto LABEL_163;
        v23 = (char *)v233;
        Hasher.init(_seed:)(v235, v233[5]);
        Hasher._combine(_:)(6uLL);
        v157 = Hasher._finalize()();
        v158 = -1 << v23[32];
        v24 = v157 & ~v158;
        if (((*(_QWORD *)&v23[((v24 >> 3) & 0xFFFFFFFFFFFFF8) + 56] >> v24) & 1) != 0)
        {
          v159 = ~v158;
          while (*(_BYTE *)(*((_QWORD *)v23 + 6) + v24) != 7)
          {
            v24 = (v24 + 1) & v159;
            if (((*(_QWORD *)&v23[((v24 >> 3) & 0xFFFFFFFFFFFFF8) + 56] >> v24) & 1) == 0)
              goto LABEL_150;
          }
          goto LABEL_163;
        }
LABEL_150:
        v160 = v233;
        v161 = swift_isUniquelyReferenced_nonNull_native(v233);
        v162 = v161;
        v236[0] = v160;
        v163 = v160[2];
        if (v160[3] <= v163)
        {
          v166 = v163 + 1;
          if (v162)
            sub_100205454(v166);
          else
            sub_100207C30(v166);
          v23 = (char *)v236[0];
          Hasher.init(_seed:)(v235, *(_QWORD *)(v236[0] + 40));
          Hasher._combine(_:)(6uLL);
          v167 = Hasher._finalize()();
          v168 = -1 << v23[32];
          v24 = v167 & ~v168;
          v169 = *(_QWORD *)&v23[((v24 >> 3) & 0xFFFFFFFFFFFFF8) + 56] >> v24;
          v233 = v23;
          if ((v169 & 1) != 0)
          {
            v170 = ~v168;
            while (*(_BYTE *)(*((_QWORD *)v23 + 6) + v24) != 7)
            {
              v24 = (v24 + 1) & v170;
              if (((*(_QWORD *)&v23[((v24 >> 3) & 0xFFFFFFFFFFFFF8) + 56] >> v24) & 1) == 0)
                goto LABEL_161;
            }
            goto LABEL_214;
          }
        }
        else if ((v161 & 1) == 0)
        {
          sub_100206E2C();
          v233 = (_QWORD *)v236[0];
        }
LABEL_161:
        v171 = v233;
        *(_QWORD *)((char *)v233 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v24;
        *(_BYTE *)(v171[6] + v24) = 7;
        v172 = v171[2];
        v42 = __OFADD__(v172, 1);
        v173 = v172 + 1;
        if (!v42)
        {
          v171[2] = v173;
          swift_bridgeObjectRelease(0x8000000000000000);
          goto LABEL_163;
        }
LABEL_208:
        __break(1u);
LABEL_209:
        __break(1u);
LABEL_210:
        __break(1u);
LABEL_211:
        __break(1u);
        goto LABEL_212;
      }
LABEL_109:
      v125 = swift_isUniquelyReferenced_nonNull_native(v24);
      v126 = v125;
      v236[0] = v24;
      v127 = *(_QWORD *)(v24 + 16);
      if (*(_QWORD *)(v24 + 24) <= v127)
      {
        v133 = v127 + 1;
        if (v126)
          sub_100205454(v133);
        else
          sub_100207C30(v133);
        v24 = v236[0];
        Hasher.init(_seed:)(v235, *(_QWORD *)(v236[0] + 40));
        Hasher._combine(_:)(6uLL);
        v144 = Hasher._finalize()();
        v145 = -1 << *(_BYTE *)(v24 + 32);
        v6 = v144 & ~v145;
        if (((*(_QWORD *)(v24 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
        {
          v146 = ~v145;
          while (*(_BYTE *)(*(_QWORD *)(v24 + 48) + v6) != 7)
          {
            v6 = (v6 + 1) & v146;
            if (((*(_QWORD *)(v24 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
              goto LABEL_137;
          }
          goto LABEL_214;
        }
      }
      else if ((v125 & 1) == 0)
      {
        sub_100206E2C();
        v24 = v236[0];
      }
LABEL_137:
      *(_QWORD *)(v24 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v6;
      *(_BYTE *)(*(_QWORD *)(v24 + 48) + v6) = 7;
      v147 = *(_QWORD *)(v24 + 16);
      v42 = __OFADD__(v147, 1);
      v148 = v147 + 1;
      if (!v42)
      {
        *(_QWORD *)(v24 + 16) = v148;
        v237 = (_QWORD *)v24;
        v116 = swift_bridgeObjectRelease(0x8000000000000000);
        goto LABEL_139;
      }
LABEL_212:
      __break(1u);
LABEL_213:
      sub_100206E2C();
    }
  }
  v37 = v36 + 1;
  if (v35)
    sub_100205454(v37);
  else
    sub_100207C30(v37);
  i = (_QWORD *)v236[0];
  Hasher.init(_seed:)(v235, *(_QWORD *)(v236[0] + 40));
  Hasher._combine(_:)(0);
  v38 = Hasher._finalize()();
  v39 = -1 << *((_BYTE *)i + 32);
  v24 = v38 & ~v39;
  if (((*(_QWORD *)((char *)i + ((v24 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v24) & 1) == 0)
    goto LABEL_18;
  v40 = ~v39;
  while (*(_BYTE *)(i[6] + v24) != 2)
  {
    v24 = (v24 + 1) & v40;
    if (((*(_QWORD *)((char *)i + ((v24 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v24) & 1) == 0)
      goto LABEL_18;
  }
LABEL_214:
  result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for FMUTDetailAction);
  __break(1u);
  return result;
}

uint64_t sub_10043C1F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  void (*v10)(char *, uint64_t);
  void *v11;
  Class isa;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  const char *v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  Class v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  Swift::String_optional v30;
  Swift::String v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  void *v38;
  Class v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  unint64_t v45;
  unint64_t v46;
  const char *v47;
  void *v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  Class v53;
  id v54;
  uint64_t v55;
  unint64_t v56;
  Swift::String_optional v57;
  Swift::String v58;
  Swift::String v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;

  v4 = type metadata accessor for Calendar(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter(v6);
  v9 = Calendar.isDateInToday(_:)(a1);
  v10 = *(void (**)(char *, uint64_t))(v5 + 8);
  v10(v8, v4);
  if ((v9 & 1) != 0)
  {
    if (qword_1005D20C0 != -1)
      swift_once(&qword_1005D20C0, sub_1004397B0);
    v11 = (void *)qword_1005E4EC0;
    isa = Date._bridgeToObjectiveC()().super.isa;
    v13 = objc_msgSend(v11, "stringFromDate:", isa);

    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v13);
    v16 = v15;

    v17 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v18 = 0xD000000000000018;
    v19 = 0xD000000000000022;
    v63 = 0x80000001004A5660;
    v20 = "ITEM_FOLLOWING_FIRST_SEEN_SUBTITLE";
  }
  else
  {
    v21 = (void *)qword_1005F5EC8;
    if (qword_1005F5EC8)
    {
      v22 = (id)qword_1005F5EC8;
    }
    else
    {
      v23 = objc_msgSend(objc_allocWithZone((Class)FMRelativeDateFormatter), "init");
      objc_msgSend(v23, "setFormattingContext:", 5);
      v24 = (void *)qword_1005F5EC8;
      qword_1005F5EC8 = (uint64_t)v23;
      v22 = v23;

      v21 = 0;
    }
    v25 = v21;
    v26 = Date._bridgeToObjectiveC()().super.isa;
    v27 = objc_msgSend(v22, "stringFromDate:", v26);

    v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v16 = v28;

    v17 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v18 = 0xD000000000000018;
    v19 = 0xD000000000000027;
    v63 = 0x80000001004A5660;
    v20 = "ITEM_FOLLOWING_FIRST_SEEN_AGED_SUBTITLE";
  }
  v29 = (unint64_t)(v20 - 32) | 0x8000000000000000;
  v30.value._object = (void *)0x80000001004A5640;
  v30.value._countAndFlagsBits = 0xD000000000000013;
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v19, v30, (NSBundle)v17, v31, *(Swift::String *)&v18);

  v33 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
  v34 = swift_allocObject(v33, 72, 7);
  *(_OWORD *)(v34 + 16) = xmmword_100481740;
  *(_QWORD *)(v34 + 56) = &type metadata for String;
  *(_QWORD *)(v34 + 64) = sub_100071E88();
  *(_QWORD *)(v34 + 32) = v14;
  *(_QWORD *)(v34 + 40) = v16;
  v35 = String.init(format:_:)(v32._countAndFlagsBits, v32._object, v34);
  swift_bridgeObjectRelease(v32._object);
  static Calendar.current.getter(v36);
  v37 = Calendar.isDateInToday(_:)(a2);
  v10(v8, v4);
  if ((v37 & 1) != 0)
  {
    if (qword_1005D20C0 != -1)
      swift_once(&qword_1005D20C0, sub_1004397B0);
    v38 = (void *)qword_1005E4EC0;
    v39 = Date._bridgeToObjectiveC()().super.isa;
    v40 = objc_msgSend(v38, "stringFromDate:", v39);

    v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
    v43 = v42;

    v44 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v45 = 0xD000000000000018;
    v46 = 0xD000000000000021;
    v64 = 0x80000001004A5660;
    v47 = "ITEM_FOLLOWING_LAST_SEEN_SUBTITLE";
  }
  else
  {
    v48 = (void *)qword_1005F5EC8;
    if (qword_1005F5EC8)
    {
      v49 = (id)qword_1005F5EC8;
    }
    else
    {
      v50 = objc_msgSend(objc_allocWithZone((Class)FMRelativeDateFormatter), "init");
      objc_msgSend(v50, "setFormattingContext:", 5);
      v51 = (void *)qword_1005F5EC8;
      qword_1005F5EC8 = (uint64_t)v50;
      v49 = v50;

      v48 = 0;
    }
    v52 = v48;
    v53 = Date._bridgeToObjectiveC()().super.isa;
    v54 = objc_msgSend(v49, "stringFromDate:", v53);

    v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
    v43 = v55;

    v44 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v45 = 0xD000000000000018;
    v46 = 0xD000000000000026;
    v64 = 0x80000001004A5660;
    v47 = "ITEM_FOLLOWING_LAST_SEEN_AGED_SUBTITLE";
  }
  v56 = (unint64_t)(v47 - 32) | 0x8000000000000000;
  v57.value._object = (void *)0x80000001004A5640;
  v57.value._countAndFlagsBits = 0xD000000000000013;
  v58._countAndFlagsBits = 0;
  v58._object = (void *)0xE000000000000000;
  v59 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v46, v57, (NSBundle)v44, v58, *(Swift::String *)&v45);

  v60 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
  v61 = swift_allocObject(v60, 72, 7);
  *(_OWORD *)(v61 + 16) = xmmword_100481740;
  *(_QWORD *)(v61 + 56) = &type metadata for String;
  *(_QWORD *)(v61 + 64) = sub_100071E88();
  *(_QWORD *)(v61 + 32) = v41;
  *(_QWORD *)(v61 + 40) = v43;
  String.init(format:_:)(v59._countAndFlagsBits, v59._object, v61);
  swift_bridgeObjectRelease(v59._object);
  return v35;
}

uint64_t sub_10043C788()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v17;

  v0 = type metadata accessor for FMIPItemState(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v2);
  v7 = (char *)&v17 - v6;
  v8 = FMIPUnknownItem.state.getter(v5);
  static FMIPItemState.soundPlaying.getter(v8);
  v9 = sub_100008000((unint64_t *)&qword_1005E2280, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItemState, (uint64_t)&protocol conformance descriptor for FMIPItemState);
  v10 = dispatch thunk of SetAlgebra.isSuperset(of:)(v4, v0, v9);
  v11 = *(void (**)(char *, uint64_t))(v1 + 8);
  v11(v4, v0);
  v12 = ((uint64_t (*)(char *, uint64_t))v11)(v7, v0);
  if ((v10 & 1) != 0)
    v13 = 3;
  else
    v13 = 1;
  v14 = FMIPUnknownItem.state.getter(v12);
  static FMIPItemState.soundQueued.getter(v14);
  v15 = dispatch thunk of SetAlgebra.isSuperset(of:)(v4, v0, v9);
  v11(v4, v0);
  v11(v7, v0);
  if ((v15 & 1) != 0)
    return v13 | 0x400;
  else
    return v13;
}

uint64_t sub_10043C8DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C((uint64_t *)&unk_1005D6700);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for FMUTDetailAction(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t result;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
  {
    v6 = *a1;
    if (v6 >= 2)
    {
      v7 = (v6 + 2147483646) & 0x7FFFFFFF;
      result = v7 - 5;
      if (v7 > 5)
        return result;
    }
    return 0;
  }
  v2 = a2 + 7;
  if (a2 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if (v2 >> 8 < 0xFF)
    v3 = 1;
  if (v2 >= 0x100)
    v4 = v3;
  else
    v4 = 0;
  return ((uint64_t (*)(void))((char *)&loc_10043C974 + 4 * byte_1004914A8[v4]))();
}

uint64_t storeEnumTagSinglePayload for FMUTDetailAction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 7;
  if (a3 + 7 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xF9)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_10043CA20 + 4 * byte_1004914B2[v5]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_10043CA54 + 4 * byte_1004914AD[v5]))();
}

uint64_t sub_10043CA54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10043CA5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10043CA64);
  return result;
}

uint64_t sub_10043CA70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10043CA78);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_10043CA7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10043CA84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMUTDetailAction()
{
  return &type metadata for FMUTDetailAction;
}

unint64_t sub_10043CAA4()
{
  unint64_t result;

  result = qword_1005E4F88;
  if (!qword_1005E4F88)
  {
    result = swift_getWitnessTable("UX\r", &type metadata for FMUTDetailAction);
    atomic_store(result, (unint64_t *)&qword_1005E4F88);
  }
  return result;
}

Swift::Double *FMNearLocationThreshold.unsafeMutableAddressor()
{
  return &FMNearLocationThreshold;
}

uint64_t sub_10043CAF4(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  __n128 v23;
  uint64_t v24;
  int v25;
  void *v26;
  id v27;
  Swift::String v28;
  Swift::String_optional v29;
  Swift::String v30;
  uint64_t countAndFlagsBits;
  Swift::String v32;
  Swift::String_optional v33;
  Swift::String v34;
  Swift::String v35;
  void *object;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  id v53;
  Swift::String v54;
  Swift::String_optional v55;
  Swift::String v56;
  Swift::String v57;
  uint64_t v58;
  unint64_t v59;
  void *v60;
  char *v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  void *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  unint64_t v71;
  char v72;
  uint64_t v73;
  char v74;
  void (*v75)(char *, uint64_t);
  double v76;
  id v77;
  Swift::String v78;
  Swift::String_optional v79;
  Swift::String v80;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  int v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  Swift::String v96;
  Swift::String v97;
  Swift::String v98;
  Swift::String v99;

  v91 = a2;
  v3 = type metadata accessor for FMIPItemState(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v89 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v88 = (char *)&v82 - v7;
  v8 = type metadata accessor for FMIPItem(0);
  v9 = *(_QWORD *)(v8 - 8);
  v93 = v8;
  v94 = v9;
  __chkstk_darwin(v8);
  v92 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100053F2C(&qword_1005D9990);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v82 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v82 - v18;
  v20 = sub_100053F2C((uint64_t *)&unk_1005D6700);
  __chkstk_darwin(v20);
  v22 = (char *)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  FMIPItem.location.getter(v23);
  v24 = type metadata accessor for FMIPLocation(0);
  v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v22, 1, v24);
  sub_1000051EC((uint64_t)v22, (uint64_t *)&unk_1005D6700);
  v26 = (void *)objc_opt_self(NSBundle);
  v27 = objc_msgSend(v26, "mainBundle");
  if (v25 == 1)
  {
    v28._countAndFlagsBits = 0xD000000000000011;
    v96._countAndFlagsBits = 0xD000000000000018;
    v96._object = (void *)0x80000001004A5660;
    v28._object = (void *)0x80000001004BD140;
    v29.value._object = (void *)0x80000001004A5640;
    v29.value._countAndFlagsBits = 0xD000000000000013;
    v30._countAndFlagsBits = 0;
    v30._object = (void *)0xE000000000000000;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, v29, (NSBundle)v27, v30, v96)._countAndFlagsBits;

    return countAndFlagsBits;
  }
  v85 = v26;
  v86 = v3;
  v97._countAndFlagsBits = 0xD000000000000018;
  v32._countAndFlagsBits = 0xD000000000000019;
  v84 = (unint64_t)"Localizable-HAWKEYE";
  v97._object = (void *)0x80000001004A5660;
  v32._object = (void *)0x80000001004BD1E0;
  v83 = (unint64_t)"CLEAR_TAGS_BUTTON";
  v33.value._object = (void *)0x80000001004A5640;
  v33.value._countAndFlagsBits = 0xD000000000000013;
  v34._countAndFlagsBits = 0;
  v34._object = (void *)0xE000000000000000;
  v35 = NSLocalizedString(_:tableName:bundle:value:comment:)(v32, v33, (NSBundle)v27, v34, v97);
  v87 = v35._countAndFlagsBits;
  object = v35._object;

  v90 = a1;
  ((void (*)(void))FMIPItem.address.getter)();
  v37 = type metadata accessor for FMIPAddress(0);
  v38 = *(_QWORD *)(v37 - 8);
  v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
  v40 = v4;
  if (v39(v19, 1, v37) == 1)
  {
    v41 = sub_1000051EC((uint64_t)v19, &qword_1005D9990);
  }
  else
  {
    v42 = FMIPAddress.mapItemFormattedAddress.getter();
    v44 = v43;
    v41 = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v19, v37);
    if (v44)
    {
      v45 = swift_bridgeObjectRelease(v35._object);
      countAndFlagsBits = v42;
      object = v44;
      v46 = v86;
      v47 = v40;
      v48 = v93;
      v49 = v94;
      goto LABEL_11;
    }
  }
  FMIPItem.address.getter(v41);
  if (v39(v17, 1, v37) == 1)
  {
    v50 = sub_1000051EC((uint64_t)v17, &qword_1005D9990);
    v47 = v40;
    v49 = v94;
LABEL_12:
    v63 = v90;
    FMIPItem.address.getter(v50);
    if (v39(v14, 1, v37) == 1)
    {
      sub_1000051EC((uint64_t)v14, &qword_1005D9990);
      v46 = v86;
      countAndFlagsBits = v87;
    }
    else
    {
      v64 = FMIPAddress.displayAddress.getter();
      v66 = v65;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v14, v37);
      v46 = v86;
      countAndFlagsBits = v87;
      if (v66)
      {
        v45 = swift_bridgeObjectRelease(v35._object);
        countAndFlagsBits = v64;
        object = v66;
      }
    }
    v61 = v92;
    v48 = v93;
    v62 = v91;
    goto LABEL_17;
  }
  v51 = FMIPAddress.formattedAddressLines.getter();
  v50 = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v17, v37);
  v47 = v40;
  v49 = v94;
  if (!v51)
    goto LABEL_12;
  *(_QWORD *)&v52 = swift_bridgeObjectRelease(v35._object).n128_u64[0];
  v95 = v51;
  v53 = objc_msgSend(v85, "mainBundle", v52);
  v54._countAndFlagsBits = 0xD000000000000017;
  v98._countAndFlagsBits = 0xD000000000000018;
  v98._object = (void *)(v84 | 0x8000000000000000);
  v54._object = (void *)0x80000001004C6DB0;
  v55.value._object = (void *)(v83 | 0x8000000000000000);
  v55.value._countAndFlagsBits = 0xD000000000000013;
  v56._countAndFlagsBits = 0;
  v56._object = (void *)0xE000000000000000;
  v57 = NSLocalizedString(_:tableName:bundle:value:comment:)(v54, v55, (NSBundle)v53, v56, v98);

  v58 = sub_100053F2C(&qword_1005D39B0);
  v59 = sub_10011A508();
  countAndFlagsBits = BidirectionalCollection<>.joined(separator:)(v57._countAndFlagsBits, v57._object, v58, v59);
  object = v60;
  swift_bridgeObjectRelease(v51);
  v45 = swift_bridgeObjectRelease(v57._object);
  v46 = v86;
  v48 = v93;
LABEL_11:
  v61 = v92;
  v62 = v91;
  v63 = v90;
LABEL_17:
  v67 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v49 + 16))(v61, v63, v48, v45);
  if ((v62 & 1) != 0)
  {
    v87 = countAndFlagsBits;
    v68 = v88;
    v69 = FMIPItem.state.getter(v67);
    v70 = v89;
    static FMIPItemState.isBTConnected.getter(v69);
    v71 = sub_10043E3F4();
    v72 = dispatch thunk of SetAlgebra.isSuperset(of:)(v70, v46, v71);
    v73 = v47;
    v74 = v72;
    v75 = *(void (**)(char *, uint64_t))(v73 + 8);
    v75(v70, v46);
    v75(v68, v46);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v61, v48);
    if ((v74 & 1) != 0)
    {
      *(_QWORD *)&v76 = swift_bridgeObjectRelease(object).n128_u64[0];
      v77 = objc_msgSend(v85, "mainBundle", v76);
      v99._countAndFlagsBits = 0xD000000000000018;
      v78._countAndFlagsBits = 0xD00000000000001CLL;
      v99._object = (void *)(v84 | 0x8000000000000000);
      v78._object = (void *)0x80000001004A9A10;
      v79.value._object = (void *)(v83 | 0x8000000000000000);
      v79.value._countAndFlagsBits = 0xD000000000000013;
      v80._countAndFlagsBits = 0;
      v80._object = (void *)0xE000000000000000;
      countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v78, v79, (NSBundle)v77, v80, v99)._countAndFlagsBits;

    }
    else
    {
      return v87;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v49 + 8))(v61, v48);
  }
  return countAndFlagsBits;
}

uint64_t sub_10043D170(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  Swift::String v49;
  Swift::String_optional v50;
  Swift::String v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  char v65;
  void (*v66)(char *, uint64_t);
  id v67;
  Swift::String v68;
  Swift::String_optional v69;
  Swift::String v70;
  Swift::String v71;
  void *object;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int (*v81)(uint64_t, uint64_t, uint64_t);
  void *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  __n128 v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  id v129;
  Swift::String v130;
  Swift::String v131;
  Swift::String v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  __n128 v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  __n128 v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  void (*v153)(char *, uint64_t);
  void (*v154)(char *, uint64_t);
  uint64_t v156;
  uint64_t v157;
  void (*v158)(char *, uint64_t);
  uint64_t v159;
  char *v160;
  char *v161;
  void (*v162)(char *, uint64_t, uint64_t);
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  char *v182;
  char *v183;
  uint64_t countAndFlagsBits;
  char *v185;
  uint64_t v186;
  int v187;
  uint64_t v188;
  unint64_t v189;
  Swift::String v190;
  Swift::String v191;
  Swift::String v192;

  v187 = a2;
  v166 = type metadata accessor for PublishedLocation.Label.Length(0);
  v165 = *(_QWORD *)(v166 - 8);
  __chkstk_darwin(v166);
  v164 = (char *)&v157 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = type metadata accessor for PublishedLocation.Label.DetailLevel(0);
  v172 = *(_QWORD *)(v179 - 8);
  __chkstk_darwin(v179);
  v171 = (char *)&v157 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PublishedLocation.Label(0);
  v176 = *(_QWORD *)(v5 - 8);
  v177 = v5;
  v6 = __chkstk_darwin(v5);
  v173 = (char *)&v157 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v180 = (char *)&v157 - v8;
  v9 = type metadata accessor for FMIPItemState(0);
  v10 = *(_QWORD *)(v9 - 8);
  v169 = v9;
  v170 = v10;
  v11 = __chkstk_darwin(v9);
  v182 = (char *)&v157 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v181 = (char *)&v157 - v13;
  v186 = type metadata accessor for FMIPItem(0);
  countAndFlagsBits = *(_QWORD *)(v186 - 8);
  v14 = __chkstk_darwin(v186);
  v163 = (char *)&v157 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v174 = (char *)&v157 - v17;
  v18 = __chkstk_darwin(v16);
  v167 = (char *)&v157 - v19;
  __chkstk_darwin(v18);
  v183 = (char *)&v157 - v20;
  v21 = sub_100053F2C(&qword_1005D9990);
  v22 = __chkstk_darwin(v21);
  v178 = (uint64_t)&v157 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v22);
  v26 = (char *)&v157 - v25;
  v27 = __chkstk_darwin(v24);
  v29 = (char *)&v157 - v28;
  v30 = __chkstk_darwin(v27);
  v32 = (char *)&v157 - v31;
  v33 = __chkstk_darwin(v30);
  v35 = (char *)&v157 - v34;
  v36 = __chkstk_darwin(v33);
  v38 = (char *)&v157 - v37;
  __chkstk_darwin(v36);
  v40 = (char *)&v157 - v39;
  v41 = sub_100053F2C((uint64_t *)&unk_1005D6700);
  __chkstk_darwin(v41);
  v43 = (char *)&v157 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = a1;
  FMIPItem.location.getter(v45);
  v46 = type metadata accessor for FMIPLocation(0);
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 48))(v43, 1, v46);
  v47 = sub_1000051EC((uint64_t)v43, (uint64_t *)&unk_1005D6700);
  if ((_DWORD)a1 != 1)
  {
    v53 = v181;
    v54 = v182;
    v160 = v38;
    v161 = v35;
    v175 = (uint64_t)v32;
    v168 = v29;
    v55 = v26;
    v185 = v40;
    FMIPItem.address.getter(v47);
    v57 = v183;
    v56 = countAndFlagsBits;
    v58 = *(uint64_t (**)(char *, uint64_t, uint64_t))(countAndFlagsBits + 16);
    v59 = v186;
    v60 = v58(v183, v44, v186);
    v159 = v44;
    v162 = (void (*)(char *, uint64_t, uint64_t))v58;
    if ((v187 & 1) != 0)
    {
      v61 = v53;
      v62 = FMIPItem.state.getter(v60);
      static FMIPItemState.isBTConnected.getter(v62);
      v63 = sub_10043E3F4();
      v64 = v169;
      v65 = dispatch thunk of SetAlgebra.isSuperset(of:)(v54, v169, v63);
      v66 = *(void (**)(char *, uint64_t))(v170 + 8);
      v66(v54, v64);
      v66(v61, v64);
      v158 = *(void (**)(char *, uint64_t))(v56 + 8);
      v158(v57, v59);
      if ((v65 & 1) != 0)
      {
        v67 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v191._countAndFlagsBits = 0xD000000000000018;
        v68._countAndFlagsBits = 0xD00000000000001CLL;
        v191._object = (void *)0x80000001004A5660;
        v68._object = (void *)0x80000001004A9A10;
        v69.value._object = (void *)0x80000001004A5640;
        v69.value._countAndFlagsBits = 0xD000000000000013;
        v70._countAndFlagsBits = 0;
        v70._object = (void *)0xE000000000000000;
        v71 = NSLocalizedString(_:tableName:bundle:value:comment:)(v68, v69, (NSBundle)v67, v70, v191);
        countAndFlagsBits = v71._countAndFlagsBits;
        object = v71._object;

        goto LABEL_8;
      }
    }
    else
    {
      v158 = *(void (**)(char *, uint64_t))(v56 + 8);
      v158(v57, v59);
    }
    countAndFlagsBits = 0;
    object = 0;
LABEL_8:
    v73 = (uint64_t)v185;
    v74 = (uint64_t)v55;
    v75 = (uint64_t)v168;
    v76 = v175;
    v77 = (uint64_t)v161;
    v78 = (uint64_t)v160;
    sub_10043E3AC((uint64_t)v185, (uint64_t)v160);
    v79 = type metadata accessor for FMIPAddress(0);
    v80 = *(_QWORD *)(v79 - 8);
    v81 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48);
    if (v81(v78, 1, v79) == 1)
    {
      sub_1000051EC(v78, &qword_1005D9990);
      v182 = 0;
      v183 = 0;
    }
    else
    {
      v181 = (char *)v74;
      v82 = object;
      v83 = FMIPAddress.coarseAddressModern.getter();
      v85 = v84;
      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v78, v79);
      if (v85)
      {
        v86 = String.nilIfEmpty.getter(v83, v85);
        v182 = v87;
        v183 = (char *)v86;
        swift_bridgeObjectRelease(v85);
      }
      else
      {
        v182 = 0;
        v183 = 0;
      }
      v76 = v175;
      object = v82;
      v74 = (uint64_t)v181;
      v75 = (uint64_t)v168;
    }
    sub_10043E3AC(v73, v77);
    if (v81(v77, 1, v79) == 1)
    {
      sub_1000051EC(v77, &qword_1005D9990);
      v181 = 0;
      v170 = 0;
    }
    else
    {
      v88 = FMIPAddress.streetAddressModern.getter();
      v90 = v89;
      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v77, v79);
      if (v90)
      {
        v181 = (char *)String.nilIfEmpty.getter(v88, v90);
        v170 = v91;
        swift_bridgeObjectRelease(v90);
      }
      else
      {
        v181 = 0;
        v170 = 0;
      }
      v76 = v175;
    }
    sub_10043E3AC(v73, v76);
    if (v81(v76, 1, v79) == 1)
    {
      sub_1000051EC(v76, &qword_1005D9990);
    }
    else
    {
      v92 = v76;
      v93 = FMIPAddress.smallAddressModern.getter();
      v95 = v94;
      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v92, v79);
      if (v95)
      {
        v175 = String.nilIfEmpty.getter(v93, v95);
        v169 = v96;
        swift_bridgeObjectRelease(v95);
        goto LABEL_25;
      }
    }
    v175 = 0;
    v169 = 0;
LABEL_25:
    sub_10043E3AC(v73, v75);
    if (v81(v75, 1, v79) == 1)
    {
      sub_1000051EC(v75, &qword_1005D9990);
    }
    else
    {
      v97 = FMIPAddress.mediumAddressModern.getter();
      v99 = v98;
      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v75, v79);
      if (v99)
      {
        v100 = String.nilIfEmpty.getter(v97, v99);
        v102 = v101;
        swift_bridgeObjectRelease(v99);
        goto LABEL_30;
      }
    }
    v100 = 0;
    v102 = 0;
LABEL_30:
    sub_10043E3AC(v73, v74);
    if (v81(v74, 1, v79) == 1)
    {
      sub_1000051EC(v74, &qword_1005D9990);
    }
    else
    {
      v103 = FMIPAddress.largeAddressModern.getter();
      v105 = v104;
      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v74, v79);
      if (v105)
      {
        v106 = String.nilIfEmpty.getter(v103, v105);
        v108 = v107;
        swift_bridgeObjectRelease(v105);
        goto LABEL_35;
      }
    }
    v106 = 0;
    v108 = 0;
LABEL_35:
    v109 = v178;
    sub_10043E3AC((uint64_t)v185, v178);
    if (v81(v109, 1, v79) == 1)
    {
      sub_1000051EC(v109, &qword_1005D9990);
    }
    else
    {
      v110 = FMIPAddress.poiAddressModern.getter();
      v112 = v111;
      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v109, v79);
      if (v112)
      {
        v113 = String.nilIfEmpty.getter(v110, v112);
        v115 = v114;
        swift_bridgeObjectRelease(v112);
        goto LABEL_40;
      }
    }
    v113 = 0;
    v115 = 0;
LABEL_40:
    v116 = v179;
    v117 = v180;
    swift_bridgeObjectRetain(object);
    v156 = v102;
    v52 = countAndFlagsBits;
    PublishedLocation.Label.init(customLabel:coarseLabel:streetLabel:smallLabel:mediumLabel:largeLabel:poiLabel:)(countAndFlagsBits, object, v183, v182, v181, v170, v175, v169, v100, v156, v106, v108, v113, v115);
    if ((v187 & 1) == 0)
    {
      v137 = v176;
      v138 = v177;
      v139 = v173;
      (*(void (**)(char *, char *, uint64_t))(v176 + 16))(v173, v117, v177);
      v140 = v174;
      v141 = v186;
      v162(v174, v159, v186);
      if (object)
      {
        v158(v140, v141);
      }
      else
      {
        v144 = v165;
        v145 = v164;
        v146 = v166;
        (*(void (**)(char *, _QWORD, uint64_t))(v165 + 104))(v164, enum case for PublishedLocation.Label.Length.small(_:), v166);
        v147 = PublishedLocation.Label.combinedNoFallbackLabel(maxLength:)(v145);
        v149 = v148;
        v150 = v146;
        v151 = v174;
        (*(void (**)(char *, uint64_t))(v144 + 8))(v145, v150);
        v152 = (uint64_t)v163;
        v162(v163, (uint64_t)v151, v141);
        if (v149)
          v52 = v147;
        else
          v52 = sub_10043CAF4(v152, 0);
        v153 = v158;
        v158((char *)v152, v141);
        v153(v151, v141);
      }
      v154 = *(void (**)(char *, uint64_t))(v137 + 8);
      v154(v139, v138);
      v154(v117, v138);
      goto LABEL_55;
    }
    v118 = swift_bridgeObjectRelease(object);
    v120 = v171;
    v119 = v172;
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v172 + 104))(v171, enum case for PublishedLocation.Label.DetailLevel.detailed(_:), v116, v118);
    v52 = PublishedLocation.Label.primaryAndSecondaryNoFallbackLabel(detailLevel:)(v120);
    v122 = v121;
    v123 = v116;
    v125 = v124;
    v127 = v126;
    (*(void (**)(char *, uint64_t))(v119 + 8))(v120, v123);
    if (v122)
    {
      v128 = v186;
      if (v127)
      {
        v188 = 0;
        v189 = 0xE000000000000000;
        _StringGuts.grow(_:)(20);
        swift_bridgeObjectRelease(v189);
        v129 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v130._countAndFlagsBits = 0xD000000000000027;
        v192._countAndFlagsBits = 0xD000000000000039;
        v192._object = (void *)0x80000001004B05E0;
        v130._object = (void *)0x80000001004B05B0;
        v131._countAndFlagsBits = 0;
        v131._object = (void *)0xE000000000000000;
        v132 = NSLocalizedString(_:tableName:bundle:value:comment:)(v130, (Swift::String_optional)0, (NSBundle)v129, v131, v192);

        v133 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
        v134 = swift_allocObject(v133, 112, 7);
        *(_OWORD *)(v134 + 16) = xmmword_100481730;
        *(_QWORD *)(v134 + 56) = &type metadata for String;
        v135 = sub_100071E88();
        *(_QWORD *)(v134 + 32) = v52;
        *(_QWORD *)(v134 + 40) = v122;
        *(_QWORD *)(v134 + 96) = &type metadata for String;
        *(_QWORD *)(v134 + 104) = v135;
        *(_QWORD *)(v134 + 64) = v135;
        *(_QWORD *)(v134 + 72) = v125;
        *(_QWORD *)(v134 + 80) = v127;
        v52 = String.init(format:_:)(v132._countAndFlagsBits, v132._object, v134);
        v136 = swift_bridgeObjectRelease(v132._object);
LABEL_51:
        (*(void (**)(char *, uint64_t, __n128))(v176 + 8))(v117, v177, v136);
LABEL_55:
        sub_1000051EC((uint64_t)v185, &qword_1005D9990);
        return v52;
      }
      v143 = (uint64_t)v167;
      v162(v167, v159, v186);
    }
    else
    {
      v142 = swift_bridgeObjectRelease(v127);
      v143 = (uint64_t)v167;
      v128 = v186;
      ((void (*)(char *, uint64_t, uint64_t, __n128))v162)(v167, v159, v186, v142);
      v52 = sub_10043CAF4(v143, 1);
    }
    v158((char *)v143, v128);
    goto LABEL_51;
  }
  v48 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v49._countAndFlagsBits = 0xD000000000000011;
  v190._countAndFlagsBits = 0xD000000000000018;
  v190._object = (void *)0x80000001004A5660;
  v49._object = (void *)0x80000001004BD140;
  v50.value._object = (void *)0x80000001004A5640;
  v50.value._countAndFlagsBits = 0xD000000000000013;
  v51._countAndFlagsBits = 0;
  v51._object = (void *)0xE000000000000000;
  v52 = NSLocalizedString(_:tableName:bundle:value:comment:)(v49, v50, (NSBundle)v48, v51, v190)._countAndFlagsBits;

  return v52;
}

uint64_t sub_10043DE34(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  Class isa;
  id v40;
  uint64_t v41;
  id v42;
  Swift::String_optional v43;
  Swift::String v44;
  Swift::String v45;
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  Class v55;
  id v56;
  uint64_t v58;
  uint64_t v59;
  Swift::String v60;

  v3 = type metadata accessor for FormatStyleCapitalizationContext(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date(0);
  v58 = *(_QWORD *)(v7 - 8);
  v59 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100053F2C((uint64_t *)&unk_1005D6700);
  __chkstk_darwin(v10);
  v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FMIPLocation(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  FMIPItem.location.getter(v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1000051EC((uint64_t)v12, (uint64_t *)&unk_1005D6700);
    return 0;
  }
  else
  {
    v19 = (*(uint64_t (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    v20 = FMIPLocation.isOld.getter(v19);
    if ((v20 & 1) != 0)
    {
      if ((a2 & 1) != 0)
      {
        v21 = (void *)FMIPLocation.location.getter(v20);
        v22 = objc_msgSend(v21, "timestamp");

        static Date._unconditionallyBridgeFromObjectiveC(_:)(v22);
        static FormatStyleCapitalizationContext.middleOfSentence.getter();
        v23 = sub_1000A5868((uint64_t)v6);
        v25 = v24;
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        (*(void (**)(char *, uint64_t))(v58 + 8))(v9, v59);
      }
      else
      {
        v29 = (void *)qword_1005F5EC8;
        if (qword_1005F5EC8)
        {
          v30 = (id)qword_1005F5EC8;
        }
        else
        {
          v33 = objc_msgSend(objc_allocWithZone((Class)FMRelativeDateFormatter), "init");
          objc_msgSend(v33, "setFormattingContext:", 5);
          v34 = (void *)qword_1005F5EC8;
          qword_1005F5EC8 = (uint64_t)v33;
          v30 = v33;

          v29 = 0;
        }
        v36 = v58;
        v35 = v59;
        v37 = (void *)FMIPLocation.location.getter(v29);
        v38 = objc_msgSend(v37, "timestamp");

        static Date._unconditionallyBridgeFromObjectiveC(_:)(v38);
        isa = Date._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v35);
        v40 = objc_msgSend(v30, "stringFromDate:", isa);

        v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
        v25 = v41;

      }
      v42 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v60._countAndFlagsBits = 0xD000000000000018;
      v60._object = (void *)0x80000001004A5660;
      v43.value._object = (void *)0x80000001004A5640;
      v44._countAndFlagsBits = 0x414C5F534D455449;
      v44._object = (void *)0xEF4E4545535F5453;
      v43.value._countAndFlagsBits = 0xD000000000000013;
      v45._countAndFlagsBits = 0;
      v45._object = (void *)0xE000000000000000;
      v46 = NSLocalizedString(_:tableName:bundle:value:comment:)(v44, v43, (NSBundle)v42, v45, v60);

      v47 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
      v48 = swift_allocObject(v47, 72, 7);
      *(_OWORD *)(v48 + 16) = xmmword_100481740;
      *(_QWORD *)(v48 + 56) = &type metadata for String;
      *(_QWORD *)(v48 + 64) = sub_100071E88();
      *(_QWORD *)(v48 + 32) = v23;
      *(_QWORD *)(v48 + 40) = v25;
      v18 = String.init(format:_:)(v46._countAndFlagsBits, v46._object, v48);
      swift_bridgeObjectRelease(v46._object);
    }
    else if ((a2 & 1) != 0)
    {
      v26 = (void *)FMIPLocation.location.getter(v20);
      v27 = objc_msgSend(v26, "timestamp");

      static Date._unconditionallyBridgeFromObjectiveC(_:)(v27);
      static FormatStyleCapitalizationContext.beginningOfSentence.getter(v28);
      v18 = sub_1000A5868((uint64_t)v6);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      (*(void (**)(char *, uint64_t))(v58 + 8))(v9, v59);
    }
    else
    {
      v31 = (void *)qword_1005F5ED0;
      if (qword_1005F5ED0)
      {
        v32 = (id)qword_1005F5ED0;
      }
      else
      {
        v49 = objc_msgSend(objc_allocWithZone((Class)FMRelativeDateFormatter), "init");
        objc_msgSend(v49, "setFormattingContext:", 2);
        v50 = (void *)qword_1005F5ED0;
        qword_1005F5ED0 = (uint64_t)v49;
        v32 = v49;

        v31 = 0;
      }
      v52 = v58;
      v51 = v59;
      v53 = (void *)FMIPLocation.location.getter(v31);
      v54 = objc_msgSend(v53, "timestamp");

      static Date._unconditionallyBridgeFromObjectiveC(_:)(v54);
      v55 = Date._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v52 + 8))(v9, v51);
      v56 = objc_msgSend(v32, "stringFromDate:", v55);

      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v56);
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  return v18;
}

uint64_t sub_10043E3AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C(&qword_1005D9990);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10043E3F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005E2280;
  if (!qword_1005E2280)
  {
    v1 = type metadata accessor for FMIPItemState(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for FMIPItemState, v1);
    atomic_store(result, (unint64_t *)&qword_1005E2280);
  }
  return result;
}

char *sub_10043E43C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  double v9;
  id v10;
  void *v11;
  id v12;
  Swift::String v13;
  Swift::String_optional v14;
  Swift::String v15;
  Swift::String v16;
  id v17;
  Swift::String v18;
  Swift::String_optional v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t countAndFlagsBits;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  Swift::String v25;
  Swift::String v26;

  v1 = sub_100053F2C((uint64_t *)&unk_1005E4430);
  __chkstk_darwin(v1);
  v3 = (char *)&countAndFlagsBits - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = &v0[OBJC_IVAR____TtC6FindMy20FMItemMarkAsLostView_delegate];
  *((_QWORD *)v4 + 1) = 0;
  swift_unknownObjectWeakInit(v4);
  v5 = OBJC_IVAR____TtC6FindMy20FMItemMarkAsLostView_lostStatusRow;
  v6 = type metadata accessor for FMPlatterIcon(0);
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
  v24(v3, 1, 1, v6);
  v7 = qword_1005D1E80;
  v8 = v0;
  if (v7 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v9 = *(double *)&qword_1005F5978;
  v10 = objc_allocWithZone((Class)type metadata accessor for FMMultiSettingsRowView());
  *(_QWORD *)&v8[v5] = sub_100430344(0, 0, 0, (uint64_t)v3, 1, 0, 1, v9);
  v8[OBJC_IVAR____TtC6FindMy20FMItemMarkAsLostView_disabled] = 0;

  v11 = (void *)objc_opt_self(NSBundle);
  v12 = objc_msgSend(v11, "mainBundle");
  v13._countAndFlagsBits = 0xD000000000000022;
  v25._object = (void *)0x80000001004A5660;
  v13._object = (void *)0x80000001004C6E00;
  v14.value._countAndFlagsBits = 0xD000000000000013;
  v14.value._object = (void *)0x80000001004A5640;
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  v25._countAndFlagsBits = 0xD000000000000018;
  v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, v14, (NSBundle)v12, v15, v25);
  countAndFlagsBits = v16._countAndFlagsBits;

  swift_storeEnumTagMultiPayload(v3, v6, 12);
  v24(v3, 0, 1, v6);
  v17 = objc_msgSend(v11, "mainBundle");
  v18._countAndFlagsBits = 0xD00000000000001ELL;
  v26._object = (void *)0x80000001004A5660;
  v18._object = (void *)0x80000001004C6E30;
  v19.value._countAndFlagsBits = 0xD000000000000013;
  v19.value._object = (void *)0x80000001004A5640;
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  v26._countAndFlagsBits = 0xD000000000000018;
  v21 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, v19, (NSBundle)v17, v20, v26);

  return sub_1003A4038(countAndFlagsBits, (uint64_t)v16._object, 0, 0, (uint64_t)v3, v21._countAndFlagsBits, (uint64_t)v21._object, 0, 0, 0, 0);
}

void sub_10043E70C()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "handleStatusRowTap");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy20FMItemMarkAsLostView_lostStatusRow), "addGestureRecognizer:", v1);

}

void sub_10043E778(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  Swift::String v14;
  Swift::String_optional v15;
  Swift::String v16;
  Swift::String v17;
  char *v18;
  Swift::String *v19;
  uint64_t v20;
  char *v21;
  void *v22;
  void *object;
  id v24;
  double v25;
  NSString v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  void *v38;
  uint64_t v39;
  id v40;
  double v41;
  NSString v42;
  char *v43;
  void *v44;
  char *v45;
  id v46;
  uint64_t v47;
  id v48;
  char *v49;
  id v50;
  void *v51;
  id v52;
  Class isa;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  id v62;
  double v63;
  NSString v64;
  void *v65;
  void *v66;
  uint64_t v67;
  id v68;
  id v69;
  id v70;
  id v71;
  uint64_t v72;
  id v73;
  id v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  Swift::String v79;

  v2 = v1;
  v4 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  __chkstk_darwin(v4);
  v6 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FMItemDetailViewModel(0);
  if ((*(_BYTE *)(a1 + *(int *)(v11 + 76)) & 8) != 0)
  {
    v12 = v11;
    v75 = v10;
    v76 = v8;
    v77 = v7;
    v13 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v79._countAndFlagsBits = 0xD000000000000018;
    v14._countAndFlagsBits = 0xD00000000000001FLL;
    v79._object = (void *)0x80000001004A5660;
    v14._object = (void *)0x80000001004C6E50;
    v15.value._object = (void *)0x80000001004A5640;
    v15.value._countAndFlagsBits = 0xD000000000000013;
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, v15, (NSBundle)v13, v16, v79);

    v78 = OBJC_IVAR____TtC6FindMy20FMItemMarkAsLostView_lostStatusRow;
    v18 = *(char **)(v2 + OBJC_IVAR____TtC6FindMy20FMItemMarkAsLostView_lostStatusRow);
    v19 = (Swift::String *)&v18[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_title];
    v20 = *(_QWORD *)&v18[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_title + 8];
    *v19 = v17;
    v21 = v18;
    swift_bridgeObjectRelease(v20);
    v22 = *(void **)&v21[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_titleLabel];
    object = v19->_object;
    v24 = v22;
    if (object)
    {
      swift_bridgeObjectRetain(object);
      v26 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v25 = swift_bridgeObjectRelease(object).n128_u64[0];
    }
    else
    {
      v26 = 0;
    }
    v27 = v78;
    objc_msgSend(v22, "setText:", v26, v25);

    v28 = *(void **)(*(_QWORD *)(v2 + v27) + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_titleLabel);
    v29 = (void *)objc_opt_self(UIColor);
    v30 = v28;
    v31 = objc_msgSend(v29, "labelColor");
    objc_msgSend(v30, "setTextColor:", v31);

    sub_10022194C(a1 + *(int *)(v12 + 44), (uint64_t)v6);
    v33 = v76;
    v32 = v77;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v6, 1, v77) == 1)
    {
      sub_1000A5E24((uint64_t)v6);
      v34 = *(char **)(v2 + v27);
      v35 = &v34[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitle];
      v36 = *(_QWORD *)&v34[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitle + 8];
      *(_QWORD *)v35 = 0;
      *((_QWORD *)v35 + 1) = 0;
      v37 = v34;
      swift_bridgeObjectRelease(v36);
      v38 = *(void **)&v37[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_secondaryLabel];
      v39 = *((_QWORD *)v35 + 1);
      v40 = v38;
      if (v39)
      {
        swift_bridgeObjectRetain(v39);
        v42 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v41 = swift_bridgeObjectRelease(v39).n128_u64[0];
      }
      else
      {
        v42 = 0;
      }
      objc_msgSend(v38, "setText:", v42, v41);

      v47 = v78;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v75, v6, v32);
      v43 = *(char **)(v2 + v27);
      v44 = (void *)qword_1005F5ED0;
      if (qword_1005F5ED0)
      {
        v45 = v43;
        v46 = v44;
      }
      else
      {
        v48 = objc_allocWithZone((Class)FMRelativeDateFormatter);
        v49 = v43;
        v50 = objc_msgSend(v48, "init");
        objc_msgSend(v50, "setFormattingContext:", 2);
        v51 = (void *)qword_1005F5ED0;
        qword_1005F5ED0 = (uint64_t)v50;
        v46 = v50;

        v44 = 0;
      }
      v52 = v44;
      isa = Date._bridgeToObjectiveC()().super.isa;
      v54 = objc_msgSend(v46, "stringFromDate:", isa);

      v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
      v57 = v56;

      v58 = (uint64_t *)&v43[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitle];
      v59 = *(_QWORD *)&v43[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitle + 8];
      *v58 = v55;
      v58[1] = v57;
      swift_bridgeObjectRelease(v59);
      v60 = *(void **)&v43[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_secondaryLabel];
      v61 = v58[1];
      v62 = v60;
      if (v61)
      {
        swift_bridgeObjectRetain(v61);
        v64 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v63 = swift_bridgeObjectRelease(v61).n128_u64[0];
      }
      else
      {
        v64 = 0;
      }
      v47 = v78;
      objc_msgSend(v60, "setText:", v64, v63);

      (*(void (**)(char *, uint64_t))(v76 + 8))(v75, v77);
    }
    v65 = *(void **)(*(_QWORD *)(v2 + v47) + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_secondaryLabel);
    v66 = (void *)objc_opt_self(UIFont);
    v67 = v47;
    v68 = v65;
    v69 = objc_msgSend(v66, "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
    objc_msgSend(v68, "setFont:", v69);

    v70 = *(id *)(*(_QWORD *)(v2 + v47) + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_secondaryLabel);
    v71 = objc_msgSend(v29, "secondaryLabelColor");
    objc_msgSend(v70, "setTextColor:", v71);

    v72 = *(_QWORD *)(v2 + v67);
    *(_BYTE *)(v72 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_separated) = 0;
    objc_msgSend(*(id *)(v72 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_separator), "setHidden:", 1);
    v73 = objc_msgSend(*(id *)(*(_QWORD *)(v2 + v67) + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_backgroundView), "layer");
    objc_msgSend(v73, "setCornerRadius:", _UISheetCornerRadius);

    v74 = objc_msgSend(*(id *)(*(_QWORD *)(v2 + v67) + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_backgroundView), "layer");
    objc_msgSend(v74, "setMaskedCorners:", 12);

    objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_contentStackView), "addArrangedSubview:", *(_QWORD *)(v2 + v67));
    *(_BYTE *)(v2 + OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isActionButtonHidden) = 1;
    sub_1003A66DC();
  }
  else
  {
    objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC6FindMy20FMItemMarkAsLostView_lostStatusRow), "removeFromSuperview");
    *(_BYTE *)(v2 + OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isActionButtonHidden) = 0;
    sub_1003A66DC();
  }
}

id sub_10043EE04()
{
  _BYTE *v0;
  uint64_t v1;
  int v2;
  double v3;
  id v4;
  id v5;
  void *v6;
  char **v7;
  id v8;

  v1 = OBJC_IVAR____TtC6FindMy20FMItemMarkAsLostView_disabled;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_actionButton], "setEnabled:", (v0[OBJC_IVAR____TtC6FindMy20FMItemMarkAsLostView_disabled] & 1) == 0);
  v2 = v0[v1];
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  if (v2)
    v3 = 0.35;
  else
    v3 = 1.0;
  v4 = objc_msgSend(v0, "traitCollection");
  v5 = objc_msgSend(v4, "userInterfaceStyle");
  v6 = (void *)objc_opt_self(UIColor);
  v7 = &selRef_tertiarySystemFillColor;
  if (v5 != (id)2)
    v7 = &selRef_whiteColor;
  v8 = objc_msgSend(v6, *v7);

  objc_msgSend(v0, "setBackgroundColor:", v8);
  return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_titleLabel], "setAlpha:", v3);
}

double sub_10043EF40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t Strong;
  double result;
  uint64_t v9;

  v1 = v0;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100056D88(v2, (uint64_t)qword_1005F5748);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMItemMarkAsLostview: User pressed activate notify me", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC6FindMy20FMItemMarkAsLostView_delegate);
  if (Strong)
  {
    v9 = Strong;
    sub_10031A458();
    *(_QWORD *)&result = swift_unknownObjectRelease(v9).n128_u64[0];
  }
  return result;
}

void sub_10043F0C8()
{
  uint64_t v0;

  sub_10005E190(v0 + OBJC_IVAR____TtC6FindMy20FMItemMarkAsLostView_delegate);

}

id sub_10043F0F4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMItemMarkAsLostView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMItemMarkAsLostView()
{
  return objc_opt_self(_TtC6FindMy20FMItemMarkAsLostView);
}

void sub_10043F17C()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  id v9;
  uint64_t v10;

  v1 = v0;
  v2 = sub_100053F2C((uint64_t *)&unk_1005E4430);
  __chkstk_darwin(v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = &v1[OBJC_IVAR____TtC6FindMy20FMItemMarkAsLostView_delegate];
  *((_QWORD *)v5 + 1) = 0;
  swift_unknownObjectWeakInit(v5);
  v6 = OBJC_IVAR____TtC6FindMy20FMItemMarkAsLostView_lostStatusRow;
  v7 = type metadata accessor for FMPlatterIcon(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 1, 1, v7);
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v8 = *(double *)&qword_1005F5978;
  v9 = objc_allocWithZone((Class)type metadata accessor for FMMultiSettingsRowView());
  *(_QWORD *)&v1[v6] = sub_100430344(0, 0, 0, (uint64_t)v4, 1, 0, 1, v8);
  v1[OBJC_IVAR____TtC6FindMy20FMItemMarkAsLostView_disabled] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMItemMarkAsLostView.swift", 33, 2, 36, 0);
  __break(1u);
}

char *sub_10043F2DC(uint64_t a1)
{
  objc_class *v1;
  objc_class *v2;
  id v4;
  Swift::String v5;
  Swift::String v6;
  void *object;
  id v8;
  NSString v9;
  char *v10;
  uint64_t v11;
  char *v12;
  Swift::String v14;

  v2 = v1;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v4 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v14._countAndFlagsBits = 0xD000000000000033;
  v14._object = (void *)0x80000001004C6F50;
  v5._object = (void *)0x80000001004C6F20;
  v5._countAndFlagsBits = 0xD000000000000021;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v14)._object;

  v8 = objc_allocWithZone(v2);
  v9 = String._bridgeToObjectiveC()();
  v10 = (char *)objc_msgSend(v8, "initWithTitle:detailText:icon:", v9, 0, 0, swift_bridgeObjectRelease(object).n128_f64[0]);

  v11 = *(_QWORD *)&v10[OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_mediator];
  *(_QWORD *)&v10[OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_mediator] = a1;
  v12 = v10;
  swift_retain(a1);
  swift_release(v11);
  sub_10043FC5C();
  sub_100440AE0();

  swift_release(a1);
  return v12;
}

void sub_10043F43C()
{
  qword_1005F6190 = 0x4044000000000000;
}

void sub_10043F44C(char a1)
{
  Swift::String v2;
  id v3;

  sub_100006C5C(0, (unint64_t *)&qword_1005DDF90, UIImage_ptr);
  v2._countAndFlagsBits = 0x64656E69626D6F43;
  v2._object = (void *)0xEF6E6F6349707041;
  UIImage.init(imageLiteralResourceName:)(v2);
  v3 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithScale:", -1);
  __asm { BR              X10 }
}

id sub_10043F4E8()
{
  void *v0;
  void *v1;
  NSString v2;
  id v3;
  id v4;

  v2 = String._bridgeToObjectiveC()();
  v3 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:", v2);

  v4 = objc_msgSend(v3, "imageByApplyingSymbolConfiguration:", v1);
  if (v4)
  {

    return v4;
  }
  return v0;
}

uint64_t sub_10043F9C8(uint64_t a1, void *a2, char a3, unsigned __int8 a4)
{
  Swift::String v7;
  id v8;
  Swift::String v9;
  Swift::String v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  const char *v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  Swift::String v19;
  uint64_t countAndFlagsBits;
  unint64_t v21;
  Swift::String v22;

  if (a4 >= 0xAu)
  {
    if (a4 == 10)
    {
      v12 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v13 = 0xD000000000000013;
      v14 = 0xD000000000000018;
      v21 = 0x80000001004A8F80;
      v15 = "Localizable-SHARING";
    }
    else
    {
      if (a4 == 11)
      {
        if ((a3 & 1) != 0)
          return sub_1001DEC70(a1, a2);
        v12 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v14 = 0xD000000000000017;
        v21 = 0x80000001004AB7C0;
        v16 = 0x80000001004AB7A0;
        v17 = a1;
        v18 = a2;
        v13 = 0xD000000000000012;
        goto LABEL_13;
      }
      v12 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v13 = 0xD000000000000010;
      v14 = 0xD000000000000015;
      v21 = 0x80000001004ADC80;
      v15 = "Localizable-B698";
    }
    v16 = (unint64_t)(v15 - 32) | 0x8000000000000000;
    v17 = a1;
    v18 = a2;
LABEL_13:
    v19._countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v17, *(Swift::String_optional *)&v13, (NSBundle)v12, v19, *(Swift::String *)&v14)._countAndFlagsBits;

    return countAndFlagsBits;
  }
  if ((a3 & 1) != 0)
    return sub_1001DE434(a1, a2);
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v7._countAndFlagsBits = a1;
  v7._object = a2;
  String.append(_:)(v7);
  v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v22._object = (void *)0x80000001004A5CD0;
  v9._countAndFlagsBits = a1;
  v9._object = a2;
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v22._countAndFlagsBits = 0xD000000000000012;
  v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v22)._countAndFlagsBits;
  swift_bridgeObjectRelease(0x80000001004A5CD0);

  return v11;
}

double sub_10043FC5C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  double result;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t (*v24)(char *, char *, uint64_t);
  void (*v25)(char *, uint64_t);
  uint64_t (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  void (*v31)(char *, uint64_t);
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  uint64_t My;
  uint64_t v47;
  _QWORD *v48;
  void (*v49)(_QWORD *, _QWORD, uint64_t);
  char v50;
  _QWORD *v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  char v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  _QWORD *v59;
  char v60;
  unint64_t v61;
  unint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  os_log_type_t v69;
  NSObject *v70;
  uint8_t *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  char *v75;
  NSString v76;
  id v77;
  id v78;
  void *v79;
  void *v80;
  id v81;
  Swift::String v82;
  Swift::String v83;
  void *object;
  NSString v85;
  id v86;
  id v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  uint64_t (*v100)(char *, char *, uint64_t);
  char *v101;
  const char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  Swift::String v110;

  v1 = type metadata accessor for FMIPFeatures(0);
  v96 = *(_QWORD *)(v1 - 8);
  v97 = v1;
  v2 = __chkstk_darwin(v1);
  v95 = (char *)&v89 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v94 = (char *)&v89 - v4;
  v5 = type metadata accessor for FMIPDeviceState(0);
  v102 = *(const char **)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v89 - v9;
  v11 = type metadata accessor for FMIPDevice(0);
  v103 = *(_QWORD *)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v17 = (char *)&v89 - v16;
  v104 = v0;
  v18 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_mediator];
  if (!v18)
    return result;
  v91 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_mediator];
  v19 = swift_retain(v18);
  v20 = FMIPManager.devices.getter(v19);
  v21 = *(_QWORD *)(v20 + 16);
  if (v21)
  {
    v101 = v14;
    v22 = (*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80);
    v90 = v20;
    v23 = v20 + v22;
    v24 = *(uint64_t (**)(char *, char *, uint64_t))(v103 + 16);
    v99 = *(_QWORD *)(v103 + 72);
    v100 = v24;
    v92 = v11;
    v93 = v8;
    do
    {
      v26 = v100;
      v27 = v100(v17, (char *)v23, v11);
      v28 = FMIPDevice.state.getter(v27);
      static FMIPDeviceState.isThisDevice.getter(v28);
      v29 = sub_100008000((unint64_t *)&qword_1005D4158, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPDeviceState, (uint64_t)&protocol conformance descriptor for FMIPDeviceState);
      v30 = dispatch thunk of SetAlgebra.isSuperset(of:)(v8, v5, v29);
      v31 = (void (*)(char *, uint64_t))*((_QWORD *)v102 + 1);
      v31(v8, v5);
      v31(v10, v5);
      v32 = v101;
      v33 = v26(v101, v17, v11);
      if ((v30 & 1) != 0)
      {
        v34 = v94;
        v35 = FMIPDevice.features.getter(v33);
        v36 = v95;
        static FMIPFeatures.locateAfterEraseSupported.getter(v35);
        v37 = sub_100008000((unint64_t *)&qword_1005D72F0, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPFeatures, (uint64_t)&protocol conformance descriptor for FMIPFeatures);
        v38 = v10;
        v39 = v5;
        v40 = v97;
        v98 = dispatch thunk of SetAlgebra.isSuperset(of:)(v36, v97, v37);
        v41 = v32;
        v42 = *(void (**)(char *, uint64_t))(v96 + 8);
        v42(v36, v40);
        v43 = v34;
        v44 = v40;
        v5 = v39;
        v10 = v38;
        v11 = v92;
        v8 = v93;
        v42(v43, v44);
        v45 = *(void (**)(char *, uint64_t))(v103 + 8);
        v45(v41, v11);
        v45(v17, v11);
        if ((v98 & 1) != 0)
        {
          swift_bridgeObjectRelease(v90);
          LODWORD(v21) = 1;
          goto LABEL_11;
        }
      }
      else
      {
        v25 = *(void (**)(char *, uint64_t))(v103 + 8);
        v25(v32, v11);
        v25(v17, v11);
      }
      v23 += v99;
      --v21;
    }
    while (v21);
    v20 = v90;
  }
  swift_bridgeObjectRelease(v20);
LABEL_11:
  My = type metadata accessor for Feature.FindMy(0);
  v108 = My;
  v47 = sub_100008000((unint64_t *)&qword_1005D9690, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.FindMy, (uint64_t)&protocol conformance descriptor for Feature.FindMy);
  v109 = v47;
  v48 = sub_10003D370(&v106);
  v49 = *(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(My - 8) + 104);
  v49(v48, enum case for Feature.FindMy.fmNiftyCurve(_:), My);
  v50 = isFeatureEnabled(_:)(&v106);
  sub_100029574(&v106);
  if ((v50 & 1) != 0)
  {
    sub_100006C5C(0, (unint64_t *)&qword_1005DD9C8, FMSystemInfo_ptr);
    if ((static FMSystemInfo.isChinaSKU()() & 1) == 0)
    {
      v51 = sub_100070908(0, 1, 1, _swiftEmptyArrayStorage);
      v53 = v51[2];
      v56 = v51[3];
      v54 = v53 + 1;
      if (v53 >= v56 >> 1)
        v51 = sub_100070908((_QWORD *)(v56 > 1), v53 + 1, 1, v51);
      v55 = 11;
      goto LABEL_21;
    }
  }
  if ((_DWORD)v21)
  {
    v51 = sub_100070908(0, 1, 1, _swiftEmptyArrayStorage);
    v53 = v51[2];
    v52 = v51[3];
    v54 = v53 + 1;
    if (v53 >= v52 >> 1)
      v51 = sub_100070908((_QWORD *)(v52 > 1), v53 + 1, 1, v51);
    v55 = 0;
LABEL_21:
    v51[2] = v54;
    *((_BYTE *)v51 + v53 + 32) = v55;
    goto LABEL_22;
  }
  v51 = _swiftEmptyArrayStorage;
LABEL_22:
  if ((swift_isUniquelyReferenced_nonNull_native(v51) & 1) == 0)
    v51 = sub_100070908(0, v51[2] + 1, 1, v51);
  v58 = v51[2];
  v57 = v51[3];
  if (v58 >= v57 >> 1)
    v51 = sub_100070908((_QWORD *)(v57 > 1), v58 + 1, 1, v51);
  v51[2] = v58 + 1;
  *((_BYTE *)v51 + v58 + 32) = 12;
  v108 = My;
  v109 = v47;
  v59 = sub_10003D370(&v106);
  v49(v59, enum case for Feature.FindMy.itemSharing(_:), My);
  v60 = isFeatureEnabled(_:)(&v106);
  sub_100029574(&v106);
  v62 = v51[2];
  v61 = v51[3];
  if ((v60 & 1) != 0)
    v63 = 10;
  else
    v63 = 9;
  if (v62 >= v61 >> 1)
    v51 = sub_100070908((_QWORD *)(v61 > 1), v62 + 1, 1, v51);
  v51[2] = v62 + 1;
  *((_BYTE *)v51 + v62 + 32) = v63;
  sub_100006C5C(0, (unint64_t *)&qword_1005DD9C8, FMSystemInfo_ptr);
  if ((static FMSystemInfo.isKoreaSKU()() & 1) != 0)
  {
    swift_bridgeObjectRetain(v51);
    v65 = sub_1004417E8(v64);
    swift_bridgeObjectRelease_n(v51, 2);
    v51 = (_QWORD *)v65;
  }
  v103 = v51[2];
  if (v103)
    goto LABEL_39;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v66 = type metadata accessor for Logger(0);
  v67 = sub_100056D88(v66, (uint64_t)qword_1005F5748);
  v68 = static os_log_type_t.error.getter(v67);
  v69 = v68;
  v70 = Logger.logObject.getter(v68);
  if (os_log_type_enabled(v70, v69))
  {
    v71 = (uint8_t *)swift_slowAlloc(12, -1);
    v72 = swift_slowAlloc(32, -1);
    v106 = v72;
    *(_DWORD *)v71 = 136315138;
    v105 = sub_100056DA0(0xD00000000000005BLL, 0x80000001004C6FF0, &v106);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v105, &v106);
    _os_log_impl((void *)&_mh_execute_header, v70, v69, "%s", v71, 0xCu);
    swift_arrayDestroy(v72, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v72, -1, -1);
    swift_slowDealloc(v71, -1, -1);
  }

  v103 = v51[2];
  if (v103)
  {
LABEL_39:
    swift_bridgeObjectRetain(v51);
    v102 = "ONBOARDING_FEATURE_";
    v73 = *((unsigned __int8 *)v51 + 32);
    v106 = 0;
    v107 = 0xE000000000000000;
    _StringGuts.grow(_:)(24);
    swift_bridgeObjectRelease(v107);
    v106 = 0xD000000000000013;
    v107 = 0x80000001004C6F90;
    __asm { BR              X8 }
  }
  v74 = (void *)objc_opt_self(OBPrivacyLinkController);
  v75 = v104;
  v76 = String._bridgeToObjectiveC()();
  v77 = objc_msgSend(v74, "linkWithBundleIdentifier:", v76);

  v78 = objc_msgSend(v75, "buttonTray");
  objc_msgSend(v78, "setPrivacyLinkController:", v77);

  v79 = *(void **)&v75[OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_activityIndicator];
  objc_msgSend(v79, "setHidden:", 1);
  v80 = *(void **)&v75[OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_boldButton];
  v106 = 0;
  v107 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v107);
  v81 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v82._countAndFlagsBits = 0xD00000000000001DLL;
  v110._countAndFlagsBits = 0xD00000000000002FLL;
  v110._object = (void *)0x80000001004B6950;
  v82._object = (void *)0x80000001004B6930;
  v83._countAndFlagsBits = 0;
  v83._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v82, (Swift::String_optional)0, (NSBundle)v81, v83, v110)._object;

  v85 = String._bridgeToObjectiveC()();
  objc_msgSend(v80, "setTitle:forState:", v85, 0, swift_bridgeObjectRelease(object).n128_f64[0]);

  objc_msgSend(v80, "addTarget:action:forControlEvents:", v75, "continue", 64);
  v86 = objc_msgSend(v75, "buttonTray");
  objc_msgSend(v86, "addButton:", v80);

  v87 = objc_msgSend(v75, "view");
  if (!v87)
  {
    __break(1u);
    JUMPOUT(0x100440A78);
  }
  v88 = v87;
  objc_msgSend(v87, "addSubview:", v79);
  swift_bridgeObjectRelease(v51);

  *(_QWORD *)&result = swift_release(v91).n128_u64[0];
  return result;
}

void sub_100440AE0()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  Class isa;

  v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_activityIndicator];
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = sub_100053F2C(&qword_1005D2F10);
  v3 = swift_allocObject(v2, 48, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1004820B0;
  v4 = objc_msgSend(v1, "centerXAnchor");
  v5 = objc_msgSend(v0, "view");
  if (!v5)
  {
    __break(1u);
    goto LABEL_7;
  }
  v6 = v5;
  v7 = objc_msgSend(v5, "centerXAnchor");

  v8 = objc_msgSend(v4, "constraintEqualToAnchor:", v7);
  *(_QWORD *)(v3 + 32) = v8;
  v9 = objc_msgSend(v1, "bottomAnchor");
  v10 = objc_msgSend(v0, "view");
  if (!v10)
  {
LABEL_7:
    __break(1u);
    return;
  }
  v11 = v10;
  v12 = (void *)objc_opt_self(NSLayoutConstraint);
  v13 = objc_msgSend(v11, "safeAreaLayoutGuide");

  v14 = objc_msgSend(v13, "bottomAnchor");
  if (qword_1005D20C8 != -1)
    swift_once(&qword_1005D20C8, sub_10043F43C);
  v15 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v14, -*(double *)&qword_1005F6190);

  *(_QWORD *)(v3 + 40) = v15;
  specialized Array._endMutation()(v16);
  sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v12, "activateConstraints:", isa, swift_bridgeObjectRelease(v3).n128_f64[0]);

}

double sub_100440ECC(double result)
{
  char *v1;
  uint64_t v2;
  char *v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  BOOL v8;
  char v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t Strong;
  double v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27[5];
  uint64_t v28;
  uint64_t v29;

  v2 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_mediator];
  if (v2)
  {
    v3 = v1;
    v4 = *(void **)&v1[OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_boldButton];
    swift_retain(v2);
    objc_msgSend(v4, "setHidden:", 1);
    v5 = *(void **)&v3[OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_activityIndicator];
    objc_msgSend(v5, "setHidden:", 0);
    objc_msgSend(v5, "startAnimating");
    v6 = objc_msgSend(v3, "navigationItem");
    objc_msgSend(v6, "setHidesBackButton:animated:", 1, 1);

    v7 = sub_100377758();
    v8 = v7 == 3 || v7 == 0;
    if (v8
      && (v27[3] = (uint64_t)&type metadata for UserNotifications,
          v27[4] = sub_10005EED8(),
          v9 = isFeatureEnabled(_:)(v27),
          sub_100029574(v27),
          (v9 & 1) != 0))
    {
      v10 = objc_msgSend(v3, "parentViewController");
      if (v10)
      {
        v11 = v10;
        v12 = objc_opt_self(UIPageViewController);
        if (swift_dynamicCastObjCClass(v11, v12))
          sub_10010D178(1, 0, 0);

      }
    }
    else
    {
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v13 = type metadata accessor for Logger(0);
      sub_100056D88(v13, (uint64_t)qword_1005F5748);
      v14 = swift_retain_n(v2, 2);
      v15 = Logger.logObject.getter(v14);
      v16 = static os_log_type_t.default.getter(v15);
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc(12, -1);
        v18 = swift_slowAlloc(32, -1);
        v27[0] = v18;
        *(_DWORD *)v17 = 136315138;
        if ((sub_100377758() | 2) == 3)
        {
          v19 = 1702195828;
          v20 = 0xE400000000000000;
        }
        else
        {
          v20 = 0xE500000000000000;
          v19 = 0x65736C6166;
        }
        v28 = sub_100056DA0(v19, v20, v27);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v28, &v29);
        swift_release_n(v2, 2);
        swift_bridgeObjectRelease(v20);
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "FMNoveltyViewController: Not showing notification prompt. Notifications Off? %s", v17, 0xCu);
        swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v18, -1, -1);
        swift_slowDealloc(v17, -1, -1);

      }
      else
      {

        swift_release_n(v2, 2);
      }
      Strong = swift_unknownObjectWeakLoadStrong(&v3[OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_delegate]);
      if (Strong)
      {
        v23 = Strong;
        v24 = Logger.logObject.getter(Strong);
        v25 = static os_log_type_t.default.getter(v24);
        if (os_log_type_enabled(v24, v25))
        {
          v26 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v26 = 0;
          _os_log_impl((void *)&_mh_execute_header, v24, v25, "FMOnboardingNavigationController: viewControllerWantsToContinue", v26, 2u);
          swift_slowDealloc(v26, -1, -1);
        }

        *(_BYTE *)(v23 + OBJC_IVAR____TtC6FindMy32FMOnboardingNavigationController_isDissmissable) = 1;
        sub_10027D700();
        *(_QWORD *)&v22 = swift_unknownObjectRelease(v23).n128_u64[0];
      }
      objc_msgSend(v3, "dismissViewControllerAnimated:completion:", 1, 0, v22);
    }
    *(_QWORD *)&result = swift_release(v2).n128_u64[0];
  }
  return result;
}

id sub_1004412E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char *v7;
  char *v8;
  objc_class *ObjectType;
  uint64_t v13;
  void *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  NSString v19;
  NSString v20;
  NSString v21;
  id v22;
  objc_super v26;

  v8 = v7;
  ObjectType = (objc_class *)swift_getObjectType(v7);
  *(_QWORD *)&v8[OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_mediator] = 0;
  v13 = OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_boldButton;
  v14 = (void *)objc_opt_self(OBBoldTrayButton);
  v15 = v8;
  *(_QWORD *)&v8[v13] = objc_msgSend(v14, "boldButton");
  v16 = OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_activityIndicator;
  *(_QWORD *)&v15[v16] = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 100);
  v17 = &v15[OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_onboardingPrivacyBundleIdentifier];
  *(_QWORD *)v17 = 0xD00000000000001BLL;
  *((_QWORD *)v17 + 1) = 0x80000001004C6F00;
  v18 = &v15[OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_delegate];
  *((_QWORD *)v18 + 1) = 0;
  swift_unknownObjectWeakInit(v18, 0);

  v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  if (!a4)
  {
    v20 = 0;
    if (a6)
      goto LABEL_3;
LABEL_5:
    v21 = 0;
    goto LABEL_6;
  }
  v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  if (!a6)
    goto LABEL_5;
LABEL_3:
  v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a6);
LABEL_6:
  v26.receiver = v15;
  v26.super_class = ObjectType;
  v22 = objc_msgSendSuper2(&v26, "initWithTitle:detailText:symbolName:contentLayout:", v19, v20, v21, a7, a5);

  return v22;
}

id sub_10044153C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  char *v6;
  char *v7;
  objc_class *ObjectType;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  NSString v18;
  NSString v19;
  id v20;
  objc_super v23;

  v7 = v6;
  ObjectType = (objc_class *)swift_getObjectType(v6);
  *(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_mediator] = 0;
  v12 = OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_boldButton;
  v13 = (void *)objc_opt_self(OBBoldTrayButton);
  v14 = v7;
  *(_QWORD *)&v7[v12] = objc_msgSend(v13, "boldButton");
  v15 = OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_activityIndicator;
  *(_QWORD *)&v14[v15] = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 100);
  v16 = &v14[OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_onboardingPrivacyBundleIdentifier];
  *(_QWORD *)v16 = 0xD00000000000001BLL;
  *((_QWORD *)v16 + 1) = 0x80000001004C6F00;
  v17 = &v14[OBJC_IVAR____TtC6FindMy23FMNoveltyViewController_delegate];
  *((_QWORD *)v17 + 1) = 0;
  swift_unknownObjectWeakInit(v17, 0);

  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  if (a4)
  {
    v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a4);
  }
  else
  {
    v19 = 0;
  }
  v23.receiver = v14;
  v23.super_class = ObjectType;
  v20 = objc_msgSendSuper2(&v23, "initWithTitle:detailText:icon:contentLayout:", v18, v19, a5, a6);

  return v20;
}

uint64_t type metadata accessor for FMNoveltyViewController()
{
  return objc_opt_self(_TtC6FindMy23FMNoveltyViewController);
}

uint64_t sub_1004417E8(uint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unsigned int v5;
  unint64_t v6;
  unint64_t v7;

  v1 = 0;
  v2 = *(_QWORD *)(result + 16);
  v3 = result + 32;
LABEL_2:
  if (v1 <= v2)
    v4 = v2;
  else
    v4 = v1;
  while (1)
  {
    if (v2 == v1)
      return (uint64_t)_swiftEmptyArrayStorage;
    if (v4 == v1)
      break;
    v5 = *(unsigned __int8 *)(v3 + v1++);
    if (v5 <= 0xA && v5 != 3)
    {
      result = swift_isUniquelyReferenced_nonNull_native(_swiftEmptyArrayStorage);
      if ((result & 1) == 0)
        result = sub_1001120C4(0, _swiftEmptyArrayStorage[2] + 1, 1);
      v7 = _swiftEmptyArrayStorage[2];
      v6 = _swiftEmptyArrayStorage[3];
      if (v7 >= v6 >> 1)
        result = sub_1001120C4(v6 > 1, v7 + 1, 1);
      _swiftEmptyArrayStorage[2] = v7 + 1;
      *((_BYTE *)&_swiftEmptyArrayStorage[4] + v7) = v5;
      goto LABEL_2;
    }
  }
  __break(1u);
  return result;
}

uint64_t getEnumTagSinglePayload for FMNoveltyViewController.BulletPoint(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 12 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 12) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 12;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 12;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 12;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FMNoveltyViewController.BulletPoint(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1004419BC + 4 * byte_100491605[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1004419F0 + 4 * asc_100491600[v4]))();
}

uint64_t sub_1004419F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1004419F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100441A00);
  return result;
}

uint64_t sub_100441A0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100441A14);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_100441A18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100441A20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMNoveltyViewController.BulletPoint()
{
  return &type metadata for FMNoveltyViewController.BulletPoint;
}

unint64_t sub_100441A40()
{
  unint64_t result;

  result = qword_1005E5020;
  if (!qword_1005E5020)
  {
    result = swift_getWitnessTable(&unk_100491684, &type metadata for FMNoveltyViewController.BulletPoint);
    atomic_store(result, (unint64_t *)&qword_1005E5020);
  }
  return result;
}

void sub_100441A88(void *a1)
{
  uint64_t v1;
  NSObject *v3;
  NSObject *v4;
  NSObject *v5;
  NSObject *v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  NSObject *v12;
  NSObject *v13;
  NSObject *v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  double Width;
  double Height;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  NSObject *v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  NSObject *v34;
  CGRect v35;
  CGRect v36;

  v3 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextToViewControllerKey);
  if (!v3)
    goto LABEL_21;
  v4 = v3;
  v5 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextToViewControllerKey);
  if (!v5)
  {
LABEL_20:

LABEL_21:
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v23 = type metadata accessor for Logger(0);
    v24 = sub_100056D88(v23, (uint64_t)qword_1005F5748);
    v34 = Logger.logObject.getter(v24);
    v25 = static os_log_type_t.error.getter(v34);
    if (os_log_type_enabled(v34, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v25, "FMCardPresentationTransition: Invalid presented view controller", v26, 2u);
      swift_slowDealloc(v26, -1, -1);
    }
LABEL_25:
    v27 = v34;
    goto LABEL_26;
  }
  v6 = v5;
  ObjectType = swift_getObjectType(v5);
  v8 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for FMCardPresenting);
  if (v8)
    v9 = v8;
  else
    v9 = 0;
  if (v8)
    v10 = (uint64_t)v6;
  else
    v10 = 0;
  if (!v10)
  {

    goto LABEL_20;
  }
  v11 = objc_msgSend(a1, "viewControllerForKey:", UITransitionContextFromViewControllerKey);
  if (v11)
  {
    v34 = v11;
    if (*(double *)(v1 + OBJC_IVAR____TtC6FindMy16FMCardTransition_duration) != 0.0)
    {
      -[NSObject viewWillAppear:](v4, "viewWillAppear:", 1);
      v33 = swift_allocObject(&unk_100566EB8, 24, 7);
      *(_QWORD *)(v33 + 16) = a1;
      swift_unknownObjectRetain(a1);
      sub_100441EF4(v10, v9, v4, v34, (uint64_t)sub_100167410, v33);
      swift_release(v33);

      v27 = v6;
      goto LABEL_26;
    }
    -[NSObject viewWillAppear:](v4, "viewWillAppear:", 0);
    v12 = -[NSObject view](v4, "view");
    if (v12)
    {
      v13 = v12;
      v14 = -[NSObject view](v34, "view");
      if (v14)
      {
        v15 = v14;
        v16 = type metadata accessor for FMCardContainerViewController();
        v17 = swift_dynamicCastClass(v34, v16);
        if (v17)
        {
          v18 = v17;
          v19 = v34;
          -[NSObject bounds](v15, "bounds");
          Width = CGRectGetWidth(v35);
          -[NSObject bounds](v15, "bounds");
          Height = CGRectGetHeight(v36);
          v22 = swift_getObjectType(v10);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 24))(v10, v9, v18, v22, v9);
          -[NSObject setAlpha:](v13, "setAlpha:", 1.0);
          -[NSObject setHidden:](v13, "setHidden:", 0);
          -[NSObject setFrame:](v15, "setFrame:", 0.0, Height, Width, Height);

          v13 = v15;
          v15 = v19;
        }

        v13 = v15;
      }

    }
    objc_msgSend(a1, "completeTransition:", 1);

    goto LABEL_25;
  }
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v28 = type metadata accessor for Logger(0);
  v29 = sub_100056D88(v28, (uint64_t)qword_1005F5748);
  v30 = Logger.logObject.getter(v29);
  v31 = static os_log_type_t.error.getter(v30);
  if (os_log_type_enabled(v30, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v32 = 0;
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "FMCardPresentationTransition: Invalid presenting view controller", v32, 2u);
    swift_slowDealloc(v32, -1, -1);
  }

  v27 = v4;
LABEL_26:

}

void sub_100441EF4(uint64_t a1, uint64_t a2, id a3, void *a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  double Width;
  double Height;
  void *v20;
  double v21;
  double v22;
  double *v23;
  void *v24;
  double *v25;
  id v26;
  char *v27;
  id v28;
  id v29;
  uint64_t v30;
  void *v31;
  double *v32;
  void *v33;
  id v34;
  id v35;
  void **aBlock;
  uint64_t v37;
  void *v38;
  void *v39;
  void *v40;
  double *v41;
  CGRect v42;
  CGRect v43;

  v12 = objc_msgSend(a3, "view");
  if (v12)
  {
    v35 = v12;
    v13 = objc_msgSend(a4, "view");
    if (v13)
    {
      v34 = v13;
      v14 = type metadata accessor for FMCardContainerViewController();
      v15 = swift_dynamicCastClass(a4, v14);
      if (v15)
      {
        v16 = v15;
        v17 = a4;
        objc_msgSend(v34, "bounds");
        Width = CGRectGetWidth(v42);
        objc_msgSend(v34, "bounds");
        Height = CGRectGetHeight(v43);
        objc_msgSend(v35, "setHidden:", 0);
        objc_msgSend(v35, "setAlpha:", 1.0);
        objc_msgSend(v35, "setFrame:", 0.0, 0.0, Width, Height);
        v20 = (void *)objc_opt_self(UIView);
        v21 = *(double *)&v6[OBJC_IVAR____TtC6FindMy16FMCardTransition_duration];
        v22 = *(double *)&v6[OBJC_IVAR____TtC6FindMy16FMCardTransition_delay];
        v23 = (double *)swift_allocObject(&unk_100566EE0, 80, 7);
        *((_QWORD *)v23 + 2) = v6;
        *((_QWORD *)v23 + 3) = a1;
        *((_QWORD *)v23 + 4) = a2;
        *((_QWORD *)v23 + 5) = v16;
        *((_QWORD *)v23 + 6) = v34;
        v23[7] = Width;
        v23[8] = Height;
        *((_QWORD *)v23 + 9) = v35;
        v40 = sub_1004424AC;
        v41 = v23;
        aBlock = _NSConcreteStackBlock;
        v37 = 1107296256;
        v38 = sub_100037DF8;
        v39 = &unk_100566EF8;
        v24 = _Block_copy(&aBlock);
        v25 = v41;
        v26 = v17;
        v27 = v6;
        swift_unknownObjectRetain(a1);
        v28 = v34;
        v29 = v35;
        swift_release(v25);
        v30 = swift_allocObject(&unk_100566F30, 32, 7);
        *(_QWORD *)(v30 + 16) = a5;
        *(_QWORD *)(v30 + 24) = a6;
        v40 = sub_100021E58;
        v41 = (double *)v30;
        aBlock = _NSConcreteStackBlock;
        v37 = 1107296256;
        v38 = sub_10005D218;
        v39 = &unk_100566F48;
        v31 = _Block_copy(&aBlock);
        v32 = v41;
        swift_retain(a6);
        swift_release(v32);
        objc_msgSend(v20, "animateKeyframesWithDuration:delay:options:animations:completion:", 4096, v24, v31, v21, v22);
        _Block_release(v31);
        _Block_release(v24);

        return;
      }

      v33 = v34;
    }
    else
    {
      v33 = v35;
    }

  }
}

void sub_1004421E4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, double a7, double a8)
{
  void *v16;
  double v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  _QWORD v24[5];
  uint64_t v25;

  v16 = (void *)objc_opt_self(UIView);
  v17 = *(double *)(a1 + OBJC_IVAR____TtC6FindMy16FMCardTransition_duration);
  v18 = swift_allocObject(&unk_100566F80, 72, 7);
  *(_QWORD *)(v18 + 16) = a2;
  *(_QWORD *)(v18 + 24) = a3;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(double *)(v18 + 48) = a7;
  *(double *)(v18 + 56) = a8;
  *(_QWORD *)(v18 + 64) = a6;
  v24[4] = sub_100442524;
  v25 = v18;
  v24[0] = _NSConcreteStackBlock;
  v24[1] = 1107296256;
  v24[2] = sub_100037DF8;
  v24[3] = &unk_100566F98;
  v19 = _Block_copy(v24);
  v20 = v25;
  swift_unknownObjectRetain(a2);
  v21 = a4;
  v22 = a5;
  v23 = a6;
  swift_release(v20);
  objc_msgSend(v16, "addKeyframeWithRelativeStartTime:relativeDuration:animations:", v19, 0.0, v17);
  _Block_release(v19);
}

id sub_100442318(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, double a6, double a7)
{
  uint64_t ObjectType;

  ObjectType = swift_getObjectType(a1);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 24))(a1, a2, a3, ObjectType, a2);
  objc_msgSend(a4, "setFrame:", 0.0, a7, a6, a7);
  return objc_msgSend(a5, "setAlpha:", 1.0);
}

id sub_1004423F4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMCardDismissedCompactTransition();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMCardDismissedCompactTransition()
{
  return objc_opt_self(_TtC6FindMy32FMCardDismissedCompactTransition);
}

uint64_t sub_100442444()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100442468()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 80, 7);
}

void sub_1004424AC()
{
  uint64_t v0;

  sub_1004421E4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48), *(void **)(v0 + 72), *(double *)(v0 + 56), *(double *)(v0 + 64));
}

uint64_t sub_1004424C4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004424E8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 72, 7);
}

id sub_100442524()
{
  uint64_t v0;

  return sub_100442318(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 64), *(double *)(v0 + 48), *(double *)(v0 + 56));
}

uint64_t sub_100442548()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC6FindMy17FMETASubscription_identifier;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_10005E190(v0 + OBJC_IVAR____TtC6FindMy17FMETASubscription_subscriber);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1004425A8()
{
  return type metadata accessor for FMETASubscription(0);
}

uint64_t type metadata accessor for FMETASubscription(uint64_t a1)
{
  uint64_t result;

  result = qword_1005E5080;
  if (!qword_1005E5080)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMETASubscription);
  return result;
}

uint64_t sub_1004425EC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100491718;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

Swift::Int sub_100442660()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  v0 = type metadata accessor for UUID(0);
  v1 = sub_100008000((unint64_t *)&unk_1005E4270, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v3, v0, v1);
  return Hasher._finalize()();
}

uint64_t sub_1004426DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for UUID(0);
  v3 = sub_100008000((unint64_t *)&unk_1005E4270, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  return dispatch thunk of Hashable.hash(into:)(a1, v2, v3);
}

Swift::Int sub_100442748(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, a1);
  v1 = type metadata accessor for UUID(0);
  v2 = sub_100008000((unint64_t *)&unk_1005E4270, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v4, v1, v2);
  return Hasher._finalize()();
}

uint64_t sub_1004427C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7)
{
  uint64_t v7;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;

  v15 = v7 + OBJC_IVAR____TtC6FindMy17FMETASubscription_subscriber;
  result = swift_unknownObjectWeakLoadStrong(v7 + OBJC_IVAR____TtC6FindMy17FMETASubscription_subscriber);
  if (result)
  {
    v17 = result;
    v18 = *(_QWORD *)(v15 + 8);
    ObjectType = swift_getObjectType(result);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double))(v18 + 8))(a1, a2, a3, a4, a5, ObjectType, v18, a6, a7);
    return swift_unknownObjectRelease(v17);
  }
  return result;
}

uint64_t sub_100442888(_QWORD *a1, _QWORD *a2)
{
  return static UUID.== infix(_:_:)(*a1 + OBJC_IVAR____TtC6FindMy17FMETASubscription_identifier, *a2 + OBJC_IVAR____TtC6FindMy17FMETASubscription_identifier);
}

uint64_t sub_1004428A4()
{
  return sub_100008000(&qword_1005E5140, type metadata accessor for FMETASubscription, (uint64_t)&unk_100491730);
}

char *sub_1004428D0(void *a1)
{
  _BYTE *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  char *v10;
  Class isa;
  id v12;
  id v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v18;

  v3 = sub_100053F2C((uint64_t *)&unk_1005E4430);
  __chkstk_darwin(v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_collapsed] = 1;
  v6 = OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_fidelitySegment;
  v7 = sub_100053F2C(&qword_1005D67A0);
  v8 = swift_allocObject(v7, 128, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100481B10;
  *(_QWORD *)(v8 + 32) = 7827276;
  *(_QWORD *)(v8 + 40) = 0xE300000000000000;
  *(_QWORD *)(v8 + 56) = &type metadata for String;
  *(_QWORD *)(v8 + 64) = 0x6D756964654DLL;
  *(_QWORD *)(v8 + 72) = 0xE600000000000000;
  *(_QWORD *)(v8 + 120) = &type metadata for String;
  *(_QWORD *)(v8 + 88) = &type metadata for String;
  *(_QWORD *)(v8 + 96) = 1751607624;
  *(_QWORD *)(v8 + 104) = 0xE400000000000000;
  v9 = objc_allocWithZone((Class)UISegmentedControl);
  v10 = v1;
  isa = Array._bridgeToObjectiveC()().super.isa;
  v12 = objc_msgSend(v9, "initWithItems:", isa, swift_bridgeObjectRelease(v8).n128_f64[0]);

  *(_QWORD *)&v1[v6] = v12;
  *(_QWORD *)&v10[OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_shownInferences] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v10[OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_locationProvider] = a1;
  v13 = a1;

  v14 = type metadata accessor for FMPlatterIcon(0);
  swift_storeEnumTagMultiPayload(v5, v14, 13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v5, 0, 1, v14);
  v15 = sub_1003A4038(0x6E49206563616C50, 0xEF65636E65726566, 0, 0, (uint64_t)v5, 0x726F4D20776F6853, 0xE900000000000065, 0, 0, 0, 0);
  v15[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isSecondaryActionButtonHidden] = 1;
  v16 = v15;
  sub_1003A6944();

  return v16;
}

id sub_100442B38()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  void *v16;
  id v17;
  NSString v18;
  id v19;
  _BYTE v21[24];

  v1 = v0;
  sub_1003A46A4();
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_locationProvider];
  v3 = type metadata accessor for FMLocationSubscription(0);
  v4 = swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  v5 = v4 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber;
  *(_QWORD *)(v5 + 8) = 0;
  swift_unknownObjectWeakInit(v5);
  v6 = swift_unknownObjectRetain(v0);
  UUID.init()(v6);
  v7 = v4 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber;
  *(_QWORD *)(v7 + 8) = &off_100567020;
  swift_unknownObjectWeakAssign(v7, v0);

  v8 = (_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions);
  swift_beginAccess(v2 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions, v21, 33, 0);
  v9 = swift_retain(v4);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v9);
  v11 = *(_QWORD *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v10 = *(_QWORD *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v11 >= v10 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v10 > 1, v11 + 1, 1);
  v12 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v4);
  specialized Array._endMutation()(v12);
  swift_endAccess(v21);
  swift_release(v4);
  v13 = *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_poiLocations);
  v14 = _swiftEmptyArrayStorage;
  if (v13)
    v14 = *(_QWORD **)(v2 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_poiLocations);
  v15 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_shownInferences];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_shownInferences] = v14;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease(v15);
  v16 = *(void **)&v1[OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_fidelitySegment];
  v17 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v18 = String._bridgeToObjectiveC()();
  v19 = objc_msgSend(v17, "integerForKey:", v18);

  objc_msgSend(v16, "setSelectedSegmentIndex:", v19);
  objc_msgSend(v16, "addTarget:action:forControlEvents:", v1, "fidelitySegmentChanged", 4096);
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_contentStackView], "addArrangedSubview:", v16);
  return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_topSeparator], "setHidden:", 1);
}

void sub_100442E0C()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  Class isa;
  NSString v7;
  unint64_t v8;
  id v9;
  Class v10;
  NSString v11;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_fidelitySegment);
  v2 = objc_msgSend(v1, "selectedSegmentIndex");
  if (v2 == (id)2)
  {
    v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_locationProvider);
    *(_QWORD *)(v3 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_poiFidelity) = 3;
    v4 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  }
  else if (v2 == (id)1)
  {
    v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_locationProvider);
    *(_QWORD *)(v3 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_poiFidelity) = 2;
    v4 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  }
  else
  {
    v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_locationProvider);
    if (v2)
      *(_QWORD *)(v3 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_poiFidelity) = 2;
    else
      *(_QWORD *)(v3 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_poiFidelity) = 1;
    v4 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  }
  v5 = v4;
  isa = UInt._bridgeToObjectiveC()().super.super.isa;
  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "setObject:forKey:", isa, v7);

  sub_10000B71C();
  v8 = (unint64_t)objc_msgSend(v1, "selectedSegmentIndex");
  if ((v8 & 0x8000000000000000) != 0)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Negative value is not representable", 35, 2, "Swift/Integers.swift", 20, 2, 3451, 0);
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_poiFidelity) = v8;
    v9 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v10 = UInt._bridgeToObjectiveC()().super.super.isa;
    v11 = String._bridgeToObjectiveC()();
    objc_msgSend(v9, "setObject:forKey:", v10, v11);

    sub_10000B71C();
  }
}

void sub_100443094()
{
  uint64_t v0;
  void *v1;
  NSString v2;

  *(_BYTE *)(v0 + OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_collapsed) ^= 1u;
  v1 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_actionButton);
  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setTitle:forState:", v2, 0);

  sub_10044316C();
}

void sub_10044316C()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  Swift::Int v22;
  Swift::Int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  objc_class *v34;
  void **v35;
  void *v36;
  id v37;
  id v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  uint64_t v45;
  id v46;
  char *v47;
  uint64_t v48;
  id v49;
  void *v50;
  id v51;
  char *v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  id v59;
  uint64_t v60;
  id v61;
  Class isa;
  id v63;
  id v64;

  v64 = *(id *)(v0 + OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_contentStackView);
  v1 = objc_msgSend(v64, "arrangedSubviews");
  v2 = sub_100006C5C(0, (unint64_t *)&qword_1005DB470, UIView_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if ((unint64_t)v3 >> 62)
    goto LABEL_13;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(v3);
  for (; v4; v4 = _CocoaArrayWrapper.endIndex.getter(v12))
  {
    v5 = 4;
    v6 = 0;
    if ((v3 & 0xC000000000000001) != 0)
    {
LABEL_4:
      v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v3);
      goto LABEL_6;
    }
    while (1)
    {
      v7 = *(id *)(v3 + 8 * v5);
LABEL_6:
      v8 = v7;
      v9 = __OFADD__(v6, 1);
      v10 = v6 + 1;
      if (v9)
        break;
      v11 = objc_opt_self(UISegmentedControl);
      if (!swift_dynamicCastObjCClass(v8, v11))
      {
        objc_msgSend(v64, "removeArrangedSubview:", v8);
        objc_msgSend(v8, "removeFromSuperview");
      }

      if (v10 == v4)
        goto LABEL_17;
      v6 = ++v5 - 4;
      if ((v3 & 0xC000000000000001) != 0)
        goto LABEL_4;
    }
    __break(1u);
LABEL_13:
    if (v3 < 0)
      v12 = v3;
    else
      v12 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
  }
LABEL_17:
  swift_bridgeObjectRelease_n(v3, 2);
  v13 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_shownInferences);
  v14 = (unint64_t)v13 >> 62;
  if (!((unint64_t)v13 >> 62))
  {
    v15 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_shownInferences));
    v16 = v64;
    if (v15)
      goto LABEL_19;
LABEL_71:
    swift_bridgeObjectRelease(v13);
    *(_BYTE *)(v0 + OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isActionButtonHidden) = 1;
    sub_1003A66DC();
    v54 = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 100);
    objc_msgSend(v54, "startAnimating");
    v55 = sub_100053F2C(&qword_1005D2F10);
    v56 = swift_allocObject(v55, 56, 7);
    *(_OWORD *)(v56 + 16) = xmmword_1004820C0;
    *(_QWORD *)(v56 + 32) = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
    *(_QWORD *)(v56 + 40) = v54;
    v57 = objc_allocWithZone((Class)UIView);
    v58 = v54;
    v59 = objc_msgSend(v57, "init");
    *(_QWORD *)(v56 + 48) = v59;
    specialized Array._endMutation()(v59);
    v60 = v56;
    v61 = objc_allocWithZone((Class)UIStackView);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v63 = objc_msgSend(v61, "initWithArrangedSubviews:", isa, swift_bridgeObjectRelease(v60).n128_f64[0]);

    objc_msgSend(v63, "setAxis:", 1);
    objc_msgSend(v63, "setSpacing:", 16.0);
    objc_msgSend(v16, "addArrangedSubview:", v63);

    return;
  }
  if (v13 < 0)
    v53 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_shownInferences);
  else
    v53 = v13 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_shownInferences), 2);
  v15 = _CocoaArrayWrapper.endIndex.getter(v53);
  swift_bridgeObjectRelease(v13);
  v16 = v64;
  if (!v15)
    goto LABEL_71;
LABEL_19:
  if (v15 < 0)
  {
    v17 = 3;
    if (!v14)
    {
LABEL_24:
      v18 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v13);
      goto LABEL_31;
    }
  }
  else
  {
    if (v15 >= 3)
      v17 = 3;
    else
      v17 = v15;
    if (!v14)
      goto LABEL_24;
  }
  if (v13 < 0)
    v19 = v13;
  else
    v19 = v13 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v13, 2);
  v20 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease(v13);
  if (v20 < 0)
  {
    __break(1u);
    goto LABEL_73;
  }
  swift_bridgeObjectRetain(v13);
  v18 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease(v13);
LABEL_31:
  if (v18 < v17)
  {
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  v21 = v13 & 0xC000000000000001;
  if ((v13 & 0xC000000000000001) != 0)
  {
    sub_100006C5C(0, &qword_1005E57C0, _CLPlaceInference_ptr);
    v22 = 0;
    do
    {
      v23 = v22 + 1;
      _ArrayBuffer._typeCheckSlowPath(_:)(v22);
      v22 = v23;
    }
    while (v17 != v23);
  }
  if (v14)
  {
    if (v13 < 0)
      v28 = v13;
    else
      v28 = v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v13);
    v25 = _CocoaArrayWrapper.subscript.getter(0, v17, v28);
    v26 = v29;
    v24 = v30;
    v32 = v31;
    swift_bridgeObjectRelease_n(v13, 2);
    swift_bridgeObjectRetain(v13);
    v27 = _CocoaArrayWrapper.endIndex.getter(v28);
    swift_bridgeObjectRelease(v13);
    v17 = v32 >> 1;
  }
  else
  {
    v24 = 0;
    v25 = v13 & 0xFFFFFFFFFFFFFF8;
    v26 = (v13 & 0xFFFFFFFFFFFFFF8) + 32;
    v27 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v27 < 4)
  {
    *(_BYTE *)(v0 + OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isActionButtonHidden) = 1;
    sub_1003A66DC();
    v9 = __OFSUB__(v17, v24);
    v40 = v17 - v24;
    if (!v9)
    {
      if ((v40 & 0x8000000000000000) == 0)
      {
        if (!v40)
        {
LABEL_58:
          swift_bridgeObjectRelease(v13);
          goto LABEL_59;
        }
        v41 = v40 - 1;
        if (v21 || v41 < *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v42 = 0;
          do
          {
            if (v21)
              v43 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v42, v13);
            else
              v43 = *(id *)(v13 + 8 * v42 + 32);
            v44 = v43;
            v45 = v42 + 1;
            objc_allocWithZone((Class)type metadata accessor for FMPISDebugLocationRow());
            v46 = v44;
            v47 = sub_1000A6150(v46, v41 != v42);
            objc_msgSend(v64, "addArrangedSubview:", v47);

            v42 = v45;
          }
          while (v40 != v45);
          goto LABEL_58;
        }
LABEL_76:
        __break(1u);
        goto LABEL_77;
      }
LABEL_75:
      __break(1u);
      goto LABEL_76;
    }
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  *(_BYTE *)(v0 + OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isActionButtonHidden) = 0;
  sub_1003A66DC();
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_collapsed) == 1)
  {
    swift_bridgeObjectRelease(v13);
    v33 = v17 - v24;
    if (v17 != v24)
    {
      if (v17 > v24)
      {
        v34 = (objc_class *)type metadata accessor for FMPISDebugLocationRow();
        swift_unknownObjectRetain(v25);
        v35 = (void **)(v26 + 8 * v24);
        do
        {
          v36 = *v35++;
          v37 = objc_allocWithZone(v34);
          v38 = v36;
          v39 = sub_1000A6150(v38, 1);
          objc_msgSend(v64, "addArrangedSubview:", v39);

          --v33;
        }
        while (v33);
        swift_unknownObjectRelease_n(v25, 2);
        return;
      }
LABEL_78:
      __break(1u);
      return;
    }
LABEL_59:
    swift_unknownObjectRelease(v25);
    return;
  }
  if (v15 < 1)
  {
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  v48 = 0;
  do
  {
    if (v21)
      v49 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v48, v13);
    else
      v49 = *(id *)(v13 + 8 * v48 + 32);
    v50 = v49;
    ++v48;
    objc_allocWithZone((Class)type metadata accessor for FMPISDebugLocationRow());
    v51 = v50;
    v52 = sub_1000A6150(v51, 1);
    objc_msgSend(v64, "addArrangedSubview:", v52);

  }
  while (v15 != v48);
  swift_unknownObjectRelease(v25);
  swift_bridgeObjectRelease(v13);
}

uint64_t sub_100443864()
{
  uint64_t v0;

  return swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_shownInferences));
}

id sub_1004438A0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPISDebugLocationPlatter();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMPISDebugLocationPlatter()
{
  return objc_opt_self(_TtC6FindMy25FMPISDebugLocationPlatter);
}

void sub_100443938(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = *(_QWORD **)(a1 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_poiLocations);
  v3 = _swiftEmptyArrayStorage;
  if (v2)
    v3 = v2;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_shownInferences);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_shownInferences) = v3;
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRelease(v4);
  sub_10044316C();
}

void sub_10044398C()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  Class isa;
  id v6;

  v0[OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_collapsed] = 1;
  v1 = OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_fidelitySegment;
  v2 = sub_100053F2C(&qword_1005D67A0);
  v3 = swift_allocObject(v2, 128, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100481B10;
  *(_QWORD *)(v3 + 32) = 7827276;
  *(_QWORD *)(v3 + 40) = 0xE300000000000000;
  *(_QWORD *)(v3 + 56) = &type metadata for String;
  *(_QWORD *)(v3 + 64) = 0x6D756964654DLL;
  *(_QWORD *)(v3 + 72) = 0xE600000000000000;
  *(_QWORD *)(v3 + 120) = &type metadata for String;
  *(_QWORD *)(v3 + 88) = &type metadata for String;
  *(_QWORD *)(v3 + 96) = 1751607624;
  *(_QWORD *)(v3 + 104) = 0xE400000000000000;
  v4 = objc_allocWithZone((Class)UISegmentedControl);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v6 = objc_msgSend(v4, "initWithItems:", isa, swift_bridgeObjectRelease(v3).n128_f64[0]);

  *(_QWORD *)&v0[v1] = v6;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy25FMPISDebugLocationPlatter_shownInferences] = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMPISDebugLocationPlatter.swift", 38, 2, 38, 0);
  __break(1u);
}

uint64_t sub_100443AE0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

void sub_100443AE8(void *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  id v7;
  uint64_t ObjectType;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _QWORD aBlock[5];
  uint64_t v16;

  v7 = v3;
  while (1)
  {
    ObjectType = swift_getObjectType(v7);
    v9 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for FMCardPresenting) ? v7 : 0;
    if (v9)
      break;
    v10 = objc_msgSend(v7, "parentViewController");

    v7 = v10;
    if (!v10)
    {
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000044, 0x80000001004C71B0, "FindMy/UIViewController+FMCard.swift", 36, 2, 22, 0);
      __break(1u);
      break;
    }
  }
  v11 = v7;
  objc_msgSend(a1, "setTransitioningDelegate:", v9);
  objc_msgSend(a1, "setModalPresentationStyle:", 6);
  v12 = swift_allocObject(&unk_1005670B0, 32, 7);
  *(_QWORD *)(v12 + 16) = a2;
  *(_QWORD *)(v12 + 24) = a3;
  aBlock[4] = sub_100363028;
  v16 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_1005670C8;
  v13 = _Block_copy(aBlock);
  v14 = v16;
  sub_1000A190C(a2, a3);
  objc_msgSend(v11, "presentViewController:animated:completion:", a1, 1, v13, swift_release(v14).n128_f64[0]);
  _Block_release(v13);

}

uint64_t (*sub_100443D4C(uint64_t (*result)(void)))(void)
{
  if (result)
    return (uint64_t (*)(void))result();
  return result;
}

uint64_t sub_100443D70()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100443D94()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_100443DA0()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_100443DCC()
{
  double result;

  __asm { FMOV            V0.2D, #18.0 }
  xmmword_1005F61B0 = _Q0;
  *(_OWORD *)&qword_1005F61C0 = xmmword_100491220;
  result = 8.0;
  *(_OWORD *)&qword_1005F61D0 = xmmword_1004917F0;
  unk_1005F61E0 = xmmword_100491800;
  qword_1005F61F0 = 0x3FD3333333333333;
  return result;
}

void sub_100443E38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  BOOL v8;
  char v9;
  void *v10;
  uint64_t v11;
  id v12;
  NSString v13;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_detailText);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_detailText + 8);
  *v3 = a1;
  v3[1] = a2;
  swift_bridgeObjectRelease(v4);
  v5 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_tertiaryLabel;
  v6 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_tertiaryLabel);
  v7 = v3[1];
  if (*v3)
    v8 = 0;
  else
    v8 = v7 == 0xE000000000000000;
  if (v8)
    v9 = 1;
  else
    v9 = _stringCompareWithSmolCheck(_:_:expecting:)(*v3, v7, 0, 0xE000000000000000, 0);
  objc_msgSend(v6, "setHidden:", v9 & 1);
  v10 = *(void **)(v2 + v5);
  v11 = v3[1];
  v12 = v10;
  swift_bridgeObjectRetain(v11);
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  objc_msgSend(v12, "setText:", v13);

}

void sub_100443F14()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  int v3;
  void *v4;
  id v5;
  char **v6;
  id v7;
  void *v8;
  int v9;
  void *v10;
  id v11;
  char **v12;
  id v13;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_tertiaryLabel);
  v2 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_enabled;
  v3 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_enabled);
  v4 = (void *)objc_opt_self(UIColor);
  v5 = v1;
  v6 = &selRef_tertiaryLabelColor;
  if (v3)
    v6 = &selRef_secondaryLabelColor;
  v7 = objc_msgSend(v4, *v6);
  objc_msgSend(v5, "setTextColor:", v7);

  v8 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_titleLabel);
  v9 = *(unsigned __int8 *)(v0 + v2);
  v10 = (void *)objc_opt_self(UIColor);
  v11 = v8;
  v12 = &selRef_labelColor;
  if (!v9)
    v12 = &selRef_secondaryLabelColor;
  v13 = objc_msgSend(v10, *v12);
  objc_msgSend(v11, "setTextColor:", v13);

}

id sub_10044402C(char a1, double a2)
{
  char *v2;
  char *v5;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  id v27;
  objc_super v29;

  v5 = &v2[OBJC_IVAR____TtC6FindMy16FMSettingRowView_identifier];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v6 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_imageView;
  v7 = objc_allocWithZone((Class)UIImageView);
  v8 = v2;
  *(_QWORD *)&v2[v6] = objc_msgSend(v7, "init");
  v9 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_backgroundView;
  *(_QWORD *)&v8[v9] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v10 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_titleLabel;
  *(_QWORD *)&v8[v10] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v11 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_secondaryLabel;
  *(_QWORD *)&v8[v11] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v12 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_secondaryDetailLabel;
  *(_QWORD *)&v8[v12] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v13 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_tertiaryLabel;
  v14 = type metadata accessor for FMCopyableLabel();
  *(_QWORD *)&v8[v13] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v14)), "init");
  v15 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_chevron;
  v16 = sub_1003434F4();
  v17 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v16);

  *(_QWORD *)&v8[v15] = v17;
  v18 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_separator;
  *(_QWORD *)&v8[v18] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v19 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_rightStackView;
  *(_QWORD *)&v8[v19] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v20 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_leftStackView;
  *(_QWORD *)&v8[v20] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  *(_QWORD *)&v8[OBJC_IVAR____TtC6FindMy16FMSettingRowView_imageViewWidthConstraint] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC6FindMy16FMSettingRowView_titleLabelLeadingConstraint] = 0;
  v21 = &v8[OBJC_IVAR____TtC6FindMy16FMSettingRowView_title];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v22 = &v8[OBJC_IVAR____TtC6FindMy16FMSettingRowView_subtitle];
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  v23 = &v8[OBJC_IVAR____TtC6FindMy16FMSettingRowView_detailText];
  *(_QWORD *)v23 = 0;
  *((_QWORD *)v23 + 1) = 0xE000000000000000;
  v24 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_detailTextColor;
  *(_QWORD *)&v8[v24] = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v8[OBJC_IVAR____TtC6FindMy16FMSettingRowView_detailTextIsCopyToPasteboardEnabled] = 0;
  v25 = &v8[OBJC_IVAR____TtC6FindMy16FMSettingRowView_subDetailText];
  *(_QWORD *)v25 = 0;
  *((_QWORD *)v25 + 1) = 0xE000000000000000;
  v8[OBJC_IVAR____TtC6FindMy16FMSettingRowView_separated] = 1;
  v8[OBJC_IVAR____TtC6FindMy16FMSettingRowView_enabled] = 1;
  *(_QWORD *)&v8[OBJC_IVAR____TtC6FindMy16FMSettingRowView_image] = 0;
  v26 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_isChevronVisible;
  v8[OBJC_IVAR____TtC6FindMy16FMSettingRowView_isChevronVisible] = 0;
  *(double *)&v8[OBJC_IVAR____TtC6FindMy16FMSettingRowView_backgroundOffset] = a2;
  v8[v26] = a1;

  v29.receiver = v8;
  v29.super_class = (Class)type metadata accessor for FMSettingRowView();
  v27 = objc_msgSendSuper2(&v29, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_100444460();
  sub_100444A4C(a2);
  objc_msgSend(v27, "setClipsToBounds:", 0);

  return v27;
}

uint64_t sub_1004443A8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  Swift::String v3;
  uint64_t v4;
  uint64_t v5;
  Swift::String v6;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_title + 8);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_title);
    swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_title + 8));
    v3._countAndFlagsBits = v2;
    v3._object = v1;
    String.append(_:)(v3);
    swift_bridgeObjectRelease(v1);
  }
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_subtitle + 8);
  if (v4)
  {
    v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_subtitle);
    String.append(_:)(*(Swift::String *)(&v4 - 1));
    v6._countAndFlagsBits = 44;
    v6._object = (void *)0xE100000000000000;
    String.append(_:)(v6);
    swift_bridgeObjectRelease(0xE100000000000000);
  }
  return 0;
}

id sub_100444460()
{
  _BYTE *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  double v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;
  double v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  double v27;
  uint64_t v28;
  id v29;
  id v30;
  double v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;

  v1 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_chevron;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_chevron], "setHidden:", (v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_isChevronVisible] & 1) == 0);
  objc_msgSend(*(id *)&v0[v1], "setContentMode:", 1);
  v38 = v1;
  v2 = *(void **)&v0[v1];
  v3 = (void *)objc_opt_self(UIColor);
  v4 = v2;
  v5 = objc_msgSend(v3, "tertiaryLabelColor");
  objc_msgSend(v4, "setTintColor:", v5);

  v37 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_separator;
  v6 = *(id *)&v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_separator];
  v7 = objc_msgSend(v3, "tertiaryLabelColor");
  objc_msgSend(v6, "setBackgroundColor:", v7);

  v8 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_titleLabel;
  v9 = *(void **)&v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_titleLabel];
  v10 = (void *)objc_opt_self(UIFont);
  v11 = v9;
  v12 = objc_msgSend(v10, "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v11, "setFont:", v12);

  objc_msgSend(*(id *)&v0[v8], "setNumberOfLines:", 0);
  LODWORD(v13) = 1132068864;
  objc_msgSend(*(id *)&v0[v8], "setContentCompressionResistancePriority:forAxis:", 0, v13);
  objc_msgSend(*(id *)&v0[v8], "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(*(id *)&v0[v8], "setTextAlignment:", 4);
  v14 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_secondaryLabel;
  v15 = *(id *)&v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_secondaryLabel];
  v16 = objc_msgSend(v10, "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v15, "setFont:", v16);

  v17 = *(id *)&v0[v14];
  v18 = objc_msgSend(v3, "secondaryLabelColor");
  objc_msgSend(v17, "setTextColor:", v18);

  v19 = qword_1005D1E80;
  v20 = *(id *)&v0[v14];
  if (v19 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  objc_msgSend(v20, "setTextAlignment:", 2 * (qword_1005F5980 != 1));

  objc_msgSend(*(id *)&v0[v14], "setNumberOfLines:", 1);
  LODWORD(v21) = 1144750080;
  objc_msgSend(*(id *)&v0[v14], "setContentCompressionResistancePriority:forAxis:", 0, v21);
  objc_msgSend(*(id *)&v0[v14], "setAdjustsFontForContentSizeCategory:", 1);
  v22 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_secondaryDetailLabel;
  v23 = *(id *)&v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_secondaryDetailLabel];
  v24 = objc_msgSend(v10, "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
  objc_msgSend(v23, "setFont:", v24);

  v25 = *(id *)&v0[v22];
  v26 = objc_msgSend(v3, "secondaryLabelColor");
  objc_msgSend(v25, "setTextColor:", v26);

  objc_msgSend(*(id *)&v0[v22], "setTextAlignment:", 2 * (qword_1005F5980 != 1));
  objc_msgSend(*(id *)&v0[v22], "setNumberOfLines:", 1);
  LODWORD(v27) = 1144750080;
  objc_msgSend(*(id *)&v0[v22], "setContentCompressionResistancePriority:forAxis:", 0, v27);
  objc_msgSend(*(id *)&v0[v22], "setAdjustsFontForContentSizeCategory:", 1);
  v28 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_tertiaryLabel;
  v29 = *(id *)&v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_tertiaryLabel];
  v30 = objc_msgSend(v10, "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
  objc_msgSend(v29, "setFont:", v30);

  objc_msgSend(*(id *)&v0[v28], "setNumberOfLines:", 0);
  LODWORD(v31) = 1132068864;
  objc_msgSend(*(id *)&v0[v28], "setContentCompressionResistancePriority:forAxis:", 0, v31);
  objc_msgSend(*(id *)&v0[v28], "setAdjustsFontForContentSizeCategory:", 1);
  v32 = *(id *)&v0[v28];
  v33 = objc_msgSend(v3, "secondaryLabelColor");
  objc_msgSend(v32, "setColor:", v33);

  v34 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_rightStackView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_rightStackView], "setAxis:", 1);
  objc_msgSend(*(id *)&v0[v34], "addArrangedSubview:", *(_QWORD *)&v0[v14]);
  objc_msgSend(*(id *)&v0[v34], "addArrangedSubview:", *(_QWORD *)&v0[v22]);
  v35 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_leftStackView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_leftStackView], "setAxis:", 1);
  objc_msgSend(*(id *)&v0[v35], "addArrangedSubview:", *(_QWORD *)&v0[v8]);
  objc_msgSend(*(id *)&v0[v35], "addArrangedSubview:", *(_QWORD *)&v0[v28]);
  objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_backgroundView]);
  objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_imageView]);
  objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[v38]);
  objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[v37]);
  objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[v35]);
  return objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[v34]);
}

void sub_100444A4C(double a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  Class isa;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  Class v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  Class v46;
  void *v47;
  uint64_t v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  uint64_t v58;
  Class v59;
  uint64_t v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  id v80;
  id v81;
  uint64_t v82;
  Class v83;
  uint64_t v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  double v96;
  double v97;
  id v98;
  uint64_t v99;
  Class v100;
  void *v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  id v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  id v113;

  v2 = v1;
  v4 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_backgroundView;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy16FMSettingRowView_backgroundView], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_imageView;
  v104 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_imageView;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy16FMSettingRowView_imageView], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v106 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_rightStackView;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy16FMSettingRowView_rightStackView], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v109 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_leftStackView;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy16FMSettingRowView_leftStackView], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v110 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_separator;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy16FMSettingRowView_separator], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v103 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_chevron;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy16FMSettingRowView_chevron], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v6 = objc_msgSend(*(id *)&v1[v5], "widthAnchor");
  v107 = objc_msgSend(v6, "constraintEqualToConstant:", 0.0);

  v112 = (id)objc_opt_self(NSLayoutConstraint);
  v7 = sub_100053F2C(&qword_1005D2F10);
  v8 = swift_allocObject(v7, 64, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100481720;
  v9 = objc_msgSend(*(id *)&v2[v4], "topAnchor");
  v10 = objc_msgSend(v2, "topAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

  *(_QWORD *)(v8 + 32) = v11;
  v12 = objc_msgSend(*(id *)&v2[v4], "bottomAnchor");
  v13 = objc_msgSend(v2, "bottomAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(v8 + 40) = v14;
  v15 = objc_msgSend(*(id *)&v2[v4], "leadingAnchor");
  v16 = objc_msgSend(v2, "leadingAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:constant:", v16, -a1);

  *(_QWORD *)(v8 + 48) = v17;
  v18 = objc_msgSend(*(id *)&v2[v4], "trailingAnchor");
  v19 = objc_msgSend(v2, "trailingAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:constant:", v19, a1);

  *(_QWORD *)(v8 + 56) = v20;
  specialized Array._endMutation()(v21);
  sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v112, "activateConstraints:", isa, swift_bridgeObjectRelease(v8).n128_f64[0]);

  v111 = v7;
  v23 = swift_allocObject(v7, 64, 7);
  *(_OWORD *)(v23 + 16) = xmmword_100481720;
  v24 = objc_msgSend(*(id *)&v2[v104], "centerYAnchor");
  v25 = objc_msgSend(v2, "centerYAnchor");
  v26 = objc_msgSend(v24, "constraintEqualToSystemSpacingBelowAnchor:multiplier:", v25, 1.0);

  *(_QWORD *)(v23 + 32) = v26;
  v27 = objc_msgSend(*(id *)&v2[v104], "leadingAnchor");
  v28 = objc_msgSend(v2, "leadingAnchor");
  v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

  *(_QWORD *)(v23 + 40) = v29;
  v30 = objc_msgSend(*(id *)&v2[v104], "heightAnchor");
  if (qword_1005D20D0 != -1)
    swift_once(&qword_1005D20D0, sub_100443DCC);
  v31 = objc_msgSend(v30, "constraintEqualToConstant:", *(double *)&qword_1005F61D8);

  *(_QWORD *)(v23 + 48) = v31;
  *(_QWORD *)(v23 + 56) = v107;
  specialized Array._endMutation()(v32);
  v108 = v107;
  v33 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v112, "activateConstraints:", v33, swift_bridgeObjectRelease(v23).n128_f64[0]);

  v34 = objc_msgSend(*(id *)&v2[v109], "leadingAnchor");
  v35 = objc_msgSend(*(id *)&v2[v104], "trailingAnchor");
  v36 = objc_msgSend(v34, "constraintEqualToAnchor:", v35);

  v37 = swift_allocObject(v7, 56, 7);
  *(_OWORD *)(v37 + 16) = xmmword_1004820C0;
  *(_QWORD *)(v37 + 32) = v36;
  v38 = *(void **)&v2[v109];
  v105 = v36;
  v39 = objc_msgSend(v38, "topAnchor");
  v40 = objc_msgSend(v2, "topAnchor");
  if (qword_1005D20B8 != -1)
    swift_once(&qword_1005D20B8, sub_10005E610);
  v41 = objc_msgSend(v39, "constraintEqualToAnchor:constant:", v40, *(double *)&xmmword_1005F6180);

  *(_QWORD *)(v37 + 40) = v41;
  v42 = objc_msgSend(*(id *)&v2[v109], "bottomAnchor");
  v43 = objc_msgSend(v2, "bottomAnchor");
  v44 = objc_msgSend(v42, "constraintEqualToAnchor:constant:", v43, -*(double *)&xmmword_1005F6180);

  *(_QWORD *)(v37 + 48) = v44;
  specialized Array._endMutation()(v45);
  v46 = Array._bridgeToObjectiveC()().super.isa;
  v47 = v112;
  objc_msgSend(v112, "activateConstraints:", v46, swift_bridgeObjectRelease(v37).n128_f64[0]);

  v48 = swift_allocObject(v111, 56, 7);
  *(_OWORD *)(v48 + 16) = xmmword_1004820C0;
  v49 = objc_msgSend(*(id *)&v2[v106], "topAnchor");
  v50 = objc_msgSend(v2, "topAnchor");
  v51 = objc_msgSend(v49, "constraintEqualToAnchor:constant:", v50, *(double *)&xmmword_1005F6180);

  *(_QWORD *)(v48 + 32) = v51;
  v52 = objc_msgSend(*(id *)&v2[v106], "leadingAnchor");
  v53 = objc_msgSend(*(id *)&v2[v109], "trailingAnchor");
  v54 = objc_msgSend(v52, "constraintEqualToAnchor:constant:", v53, *(double *)&qword_1005F61D0);

  *(_QWORD *)(v48 + 40) = v54;
  v55 = objc_msgSend(*(id *)&v2[v106], "bottomAnchor");
  v56 = objc_msgSend(v2, "bottomAnchor");
  v57 = objc_msgSend(v55, "constraintEqualToAnchor:constant:", v56, -*(double *)&xmmword_1005F6180);

  *(_QWORD *)(v48 + 48) = v57;
  specialized Array._endMutation()(v58);
  v59 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v112, "activateConstraints:", v59, swift_bridgeObjectRelease(v48).n128_f64[0]);

  if (v2[OBJC_IVAR____TtC6FindMy16FMSettingRowView_isChevronVisible] == 1)
  {
    v60 = swift_allocObject(v111, 80, 7);
    *(_OWORD *)(v60 + 16) = xmmword_100484130;
    v61 = objc_msgSend(*(id *)&v2[v103], "topAnchor");
    v62 = objc_msgSend(v2, "topAnchor");
    v63 = objc_msgSend(v61, "constraintGreaterThanOrEqualToAnchor:constant:", v62, *(double *)&qword_1005F61C8);

    *(_QWORD *)(v60 + 32) = v63;
    v64 = objc_msgSend(*(id *)&v2[v103], "leadingAnchor");
    v65 = objc_msgSend(*(id *)&v2[v106], "trailingAnchor");
    v66 = objc_msgSend(v64, "constraintEqualToAnchor:constant:", v65, *(double *)&qword_1005F61C0);

    *(_QWORD *)(v60 + 40) = v66;
    v67 = objc_msgSend(*(id *)&v2[v103], "centerYAnchor");
    v68 = objc_msgSend(v2, "centerYAnchor");
    v69 = objc_msgSend(v67, "constraintEqualToAnchor:", v68);

    *(_QWORD *)(v60 + 48) = v69;
    v70 = objc_msgSend(*(id *)&v2[v103], "trailingAnchor");
    v71 = objc_msgSend(v2, "trailingAnchor");
    v72 = objc_msgSend(v70, "constraintEqualToAnchor:", v71);

    *(_QWORD *)(v60 + 56) = v72;
    v73 = objc_msgSend(*(id *)&v2[v103], "heightAnchor");
    v74 = objc_retainAutoreleasedReturnValue(objc_msgSend(v73, "constraintEqualToConstant:", *((double *)&xmmword_1005F61B0
                                                                                             + 1)));

    *(_QWORD *)(v60 + 64) = v74;
    v75 = objc_msgSend(*(id *)&v2[v103], "widthAnchor");
    v47 = v112;
    v76 = objc_msgSend(v75, "constraintEqualToConstant:", *(double *)&xmmword_1005F61B0);

    *(_QWORD *)(v60 + 72) = v76;
    specialized Array._endMutation()(v77);
    v78 = v111;
  }
  else
  {
    v78 = v111;
    v60 = swift_allocObject(v111, 40, 7);
    *(_OWORD *)(v60 + 16) = xmmword_100481B00;
    v79 = objc_msgSend(*(id *)&v2[v106], "trailingAnchor");
    v80 = objc_msgSend(v2, "trailingAnchor");
    v81 = objc_msgSend(v79, "constraintEqualToAnchor:", v80);

    *(_QWORD *)(v60 + 32) = v81;
    specialized Array._endMutation()(v82);
  }
  v83 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v47, "activateConstraints:", v83, swift_bridgeObjectRelease(v60).n128_f64[0]);

  v84 = swift_allocObject(v78, 64, 7);
  *(_OWORD *)(v84 + 16) = xmmword_100481720;
  v85 = objc_msgSend(*(id *)&v2[v110], "leadingAnchor");
  v86 = objc_msgSend(v2, "leadingAnchor");
  v87 = objc_msgSend(v85, "constraintEqualToAnchor:", v86);

  *(_QWORD *)(v84 + 32) = v87;
  v88 = objc_msgSend(*(id *)&v2[v110], "trailingAnchor");
  v89 = objc_msgSend(v2, "trailingAnchor");
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v90 = objc_msgSend(v88, "constraintEqualToAnchor:constant:", v89, *(double *)&qword_1005F5978);

  *(_QWORD *)(v84 + 40) = v90;
  v91 = objc_msgSend(*(id *)&v2[v110], "bottomAnchor");
  v92 = objc_msgSend(v2, "bottomAnchor");
  v93 = objc_msgSend(v91, "constraintEqualToAnchor:constant:", v92, 0.0);

  *(_QWORD *)(v84 + 48) = v93;
  v94 = objc_msgSend(*(id *)&v2[v110], "heightAnchor");
  v95 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v95, "scale");
  v97 = v96;

  v98 = objc_msgSend(v94, "constraintEqualToConstant:", 1.0 / v97);
  *(_QWORD *)(v84 + 56) = v98;
  specialized Array._endMutation()(v99);
  v100 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v112, "activateConstraints:", v100, swift_bridgeObjectRelease(v84).n128_f64[0]);

  v101 = *(void **)&v2[OBJC_IVAR____TtC6FindMy16FMSettingRowView_imageViewWidthConstraint];
  *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy16FMSettingRowView_imageViewWidthConstraint] = v108;
  v102 = v108;

  v113 = *(id *)&v2[OBJC_IVAR____TtC6FindMy16FMSettingRowView_titleLabelLeadingConstraint];
  *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy16FMSettingRowView_titleLabelLeadingConstraint] = v105;

}

void sub_100445844(uint64_t a1, uint64_t a2)
{
  char *v2;
  Class isa;
  id v5;
  id v6;
  id v7;
  void *v8;
  char **v9;
  id v10;
  objc_super v11;

  sub_100006C5C(0, (unint64_t *)&qword_1005D3F00, UITouch_ptr);
  sub_1000B0798();
  isa = Set._bridgeToObjectiveC()().super.isa;
  v11.receiver = v2;
  v11.super_class = (Class)type metadata accessor for FMSettingRowView();
  objc_msgSendSuper2(&v11, "touchesBegan:withEvent:", isa, a2);

  v5 = *(id *)&v2[OBJC_IVAR____TtC6FindMy16FMSettingRowView_backgroundView];
  v6 = objc_msgSend(v2, "traitCollection");
  v7 = objc_msgSend(v6, "userInterfaceStyle");

  v8 = (void *)objc_opt_self(UIColor);
  v9 = &selRef_systemGray3Color;
  if (v7 != (id)2)
    v9 = &selRef_systemGray5Color;
  v10 = objc_msgSend(v8, *v9);
  objc_msgSend(v5, "setBackgroundColor:", v10);

}

void sub_100445A0C(void *a1, uint64_t a2, uint64_t a3, void *a4, SEL *a5)
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  char *v13;
  Class isa;
  void *v15;
  void *v16;
  id v17;
  id v18;
  objc_super v19;

  v9 = sub_100006C5C(0, (unint64_t *)&qword_1005D3F00, UITouch_ptr);
  v10 = sub_1000B0798();
  v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)(a3, v9, v10);
  v12 = a4;
  v13 = a1;
  isa = Set._bridgeToObjectiveC()().super.isa;
  v19.receiver = v13;
  v19.super_class = (Class)type metadata accessor for FMSettingRowView();
  objc_msgSendSuper2(&v19, *a5, isa, v12);

  v15 = *(void **)&v13[OBJC_IVAR____TtC6FindMy16FMSettingRowView_backgroundView];
  v16 = (void *)objc_opt_self(UIColor);
  v17 = v15;
  v18 = objc_msgSend(v16, "clearColor");
  objc_msgSend(v17, "setBackgroundColor:", v18);

  swift_bridgeObjectRelease(v11);
}

id sub_100445B60()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMSettingRowView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMSettingRowView()
{
  return objc_opt_self(_TtC6FindMy16FMSettingRowView);
}

void sub_100445D0C()
{
  _BYTE *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;

  v1 = &v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_identifier];
  *v1 = 0;
  v1[1] = 0;
  v2 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_imageView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v3 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_backgroundView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v4 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_titleLabel;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v5 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_secondaryLabel;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v6 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_secondaryDetailLabel;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v7 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_tertiaryLabel;
  v8 = type metadata accessor for FMCopyableLabel();
  *(_QWORD *)&v0[v7] = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v8)), "init");
  v9 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_chevron;
  v10 = sub_1003434F4();
  v11 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v10);

  *(_QWORD *)&v0[v9] = v11;
  v12 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_separator;
  *(_QWORD *)&v0[v12] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v13 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_rightStackView;
  *(_QWORD *)&v0[v13] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v14 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_leftStackView;
  *(_QWORD *)&v0[v14] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_imageViewWidthConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_titleLabelLeadingConstraint] = 0;
  v15 = &v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_title];
  *v15 = 0;
  v15[1] = 0;
  v16 = &v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_subtitle];
  *v16 = 0;
  v16[1] = 0;
  v17 = &v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_detailText];
  *v17 = 0;
  v17[1] = 0xE000000000000000;
  v18 = OBJC_IVAR____TtC6FindMy16FMSettingRowView_detailTextColor;
  *(_QWORD *)&v0[v18] = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_detailTextIsCopyToPasteboardEnabled] = 0;
  v19 = &v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_subDetailText];
  *v19 = 0;
  v19[1] = 0xE000000000000000;
  v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_separated] = 1;
  v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_enabled] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_image] = 0;
  v0[OBJC_IVAR____TtC6FindMy16FMSettingRowView_isChevronVisible] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMSettingRowView.swift", 29, 2, 149, 0);
  __break(1u);
}

id sub_100445F98(_QWORD *a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char *v13;
  id v14;
  objc_class *v15;
  id v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  objc_super v25;

  v5 = type metadata accessor for FMIPDevice(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FMDeviceDetailViewModel(0);
  __chkstk_darwin(v9);
  v11 = (id *)((char *)&v25.receiver - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_selectionSubscription] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_devicesSubscription] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_imageFetchingCancellable] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_mediator] = a1;
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12(&v2[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_deviceToRemove], a2, v5);
  v12(v8, a2, v5);
  swift_retain_n(a1, 2);
  v13 = v2;
  sub_1003E80BC(a1, (uint64_t)v8, 0, 0, 0.0, 0.0, v11);
  sub_1004261A0((uint64_t)v11, (uint64_t)&v13[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_viewModel]);
  v14 = objc_allocWithZone((Class)type metadata accessor for FMActionLandingView());
  *(_QWORD *)&v13[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView] = sub_10017FF08(0);

  v15 = (objc_class *)type metadata accessor for FMRemoveDeviceViewController(0);
  v25.receiver = v13;
  v25.super_class = v15;
  v16 = objc_msgSendSuper2(&v25, "initWithNibName:bundle:", 0, 0);
  v17 = qword_1005D1DE8;
  v18 = v16;
  if (v17 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v19 = type metadata accessor for Logger(0);
  v20 = sub_100056D88(v19, (uint64_t)qword_1005F5748);
  v21 = Logger.logObject.getter(v20);
  v22 = static os_log_type_t.default.getter(v21);
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "FMRemoveDeviceViewController: Remove device view controller initialized", v23, 2u);
    swift_slowDealloc(v23, -1, -1);
  }
  swift_release(a1);

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a2, v5);
  return v18;
}

double sub_100446300(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  _BYTE v15[24];
  objc_super v16;

  v16.receiver = v1;
  v16.super_class = (Class)type metadata accessor for FMRemoveDeviceViewController(0);
  objc_msgSendSuper2(&v16, "viewWillAppear:", a1 & 1);
  v3 = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_mediator] + 56);
  v4 = type metadata accessor for FMSelectionSubscription(0);
  v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v6 = v5 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
  *(_QWORD *)(v6 + 8) = 0;
  swift_unknownObjectWeakInit(v6);
  swift_retain(v3);
  v7 = v1;
  UUID.init()(v7);
  v8 = v5 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
  *(_QWORD *)(v8 + 8) = &off_1005671B0;
  swift_unknownObjectWeakAssign(v8, v7);

  swift_beginAccess(v3 + 16, v15, 33, 0);
  v9 = swift_retain(v5);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v9);
  v11 = *(_QWORD *)((*(_QWORD *)(v3 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v10 = *(_QWORD *)((*(_QWORD *)(v3 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v11 >= v10 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v10 > 1, v11 + 1, 1);
  v12 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v5);
  specialized Array._endMutation()(v12);
  swift_endAccess(v15);
  swift_release(v3);
  v13 = *(_QWORD *)&v7[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_selectionSubscription];
  *(_QWORD *)&v7[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_selectionSubscription] = v5;
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

void sub_1004464A4(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];
  objc_super v11;

  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for FMRemoveDeviceViewController(0);
  objc_msgSendSuper2(&v11, "viewWillDisappear:", a1 & 1);
  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_selectionSubscription];
  if (v3)
  {
    v4 = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_mediator] + 56);
    swift_beginAccess(v4 + 16, v10, 33, 0);
    swift_retain(v3);
    swift_retain(v4);
    v5 = sub_100334CE8((uint64_t *)(v4 + 16), v3);
    v6 = v5;
    v7 = *(_QWORD *)(v4 + 16);
    if ((unint64_t)v7 >> 62)
    {
      if (v7 < 0)
        v9 = *(_QWORD *)(v4 + 16);
      else
        v9 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(v4 + 16));
      v8 = _CocoaArrayWrapper.endIndex.getter(v9);
      swift_bridgeObjectRelease(v7);
      if (v8 >= v6)
        goto LABEL_4;
    }
    else
    {
      v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v8 >= v5)
      {
LABEL_4:
        sub_100200704(v6, v8);
        swift_endAccess(v10);
        swift_release(v3);
        swift_release(v4);
        return;
      }
    }
    __break(1u);
  }
}

void sub_100446608()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id v24;
  id v25;
  char *v26;
  uint64_t (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t);
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  id v32;
  Swift::String v33;
  Swift::String_optional v34;
  Swift::String v35;
  Swift::String v36;
  uint64_t countAndFlagsBits;
  void *object;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char *v41;
  uint64_t v42;
  __n128 v43;
  char v44;
  __n128 v45;
  char v46;
  id v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  void *v60;
  void *v61;
  Swift::String v62;
  Swift::String v63;
  char *v64;
  uint64_t *v65;
  uint64_t v66;
  char *v67;
  void *v68;
  uint64_t v69;
  id v70;
  double v71;
  NSString v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __n128 v97;
  uint64_t v98;
  void *v99;
  void *v100;
  char *v101;
  id v102;
  Swift::String_optional v103;
  Swift::String v104;
  Swift::String v105;
  Swift::String v106;
  Swift::String *v107;
  uint64_t v108;
  void *v109;
  void *v110;
  id v111;
  double v112;
  NSString v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  __n128 v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  unint64_t v128;
  char *v129;
  uint64_t *v130;
  uint64_t v131;
  char *v132;
  void *v133;
  uint64_t v134;
  id v135;
  double v136;
  NSString v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  double (*v141)(char *, char *, uint64_t);
  uint64_t v142;
  char *v143;
  void (*v144)(char *, uint64_t);
  uint64_t v145;
  char *v146;
  uint64_t v147;
  char v148;
  char *v149;
  void (*v150)(char *, uint64_t);
  __n128 v151;
  char v152;
  char *v153;
  id v154;
  void *v155;
  id v156;
  id v157;
  void *v158;
  id v159;
  unint64_t v160;
  id v161;
  uint64_t v162;
  void (*v163)(char *, uint64_t);
  char *v164;
  char *v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  void (*v180)(char *, uint64_t, __n128);
  char *v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  id v185[2];
  Swift::String v186;
  Swift::String v187;

  v1 = v0;
  v2 = sub_100053F2C(&qword_1005D6DB8);
  __chkstk_darwin(v2);
  v176 = (char *)&v161 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FMIPPerson(0);
  v177 = *(_QWORD *)(v4 - 8);
  v178 = v4;
  __chkstk_darwin(v4);
  v164 = (char *)&v161 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100053F2C(&qword_1005D9640);
  __chkstk_darwin(v6);
  v172 = (char *)&v161 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100053F2C(&qword_1005D6DB0);
  v174 = *(_QWORD *)(v8 - 8);
  v175 = v8;
  __chkstk_darwin(v8);
  v173 = (char *)&v161 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v10);
  v165 = (char *)&v161 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FMIPFeatures(0);
  v169 = *(_QWORD *)(v12 - 8);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v161 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v161 - v16;
  v18 = type metadata accessor for FMIPDevice(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v170 = v21;
  v171 = (char *)&v161 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v23 = (char *)&v161 - v22;
  v24 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 1, v0, "cancel");
  v25 = objc_msgSend(v0, "navigationItem");
  v161 = v24;
  objc_msgSend(v25, "setLeftBarButtonItem:", v24);

  v179 = v1;
  v26 = &v1[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_deviceToRemove];
  v27 = *(uint64_t (**)(char *, char *, uint64_t))(v19 + 16);
  v28 = v27(v23, &v1[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_deviceToRemove], v18);
  FMIPDevice.features.getter(v28);
  v182 = v19;
  v29 = *(uint64_t (**)(char *, uint64_t))(v19 + 8);
  v30 = v29(v23, v18);
  static FMIPFeatures.isRemoveUIv2Supported.getter(v30);
  v162 = sub_100008000((unint64_t *)&qword_1005D72F0, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPFeatures, (uint64_t)&protocol conformance descriptor for FMIPFeatures);
  LOBYTE(v25) = dispatch thunk of SetAlgebra.isSuperset(of:)(v15, v12, v162);
  v31 = *(void (**)(char *, uint64_t))(v169 + 8);
  v167 = v15;
  v31(v15, v12);
  v166 = v17;
  v168 = v12;
  v163 = v31;
  v31(v17, v12);
  v180 = (void (*)(char *, uint64_t, __n128))v29;
  v181 = v26;
  if ((v25 & 1) != 0)
  {
    v32 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v186._object = (void *)0x80000001004B30E0;
    v33._object = (void *)0x80000001004C7E60;
    v33._countAndFlagsBits = 0xD000000000000017;
    v34.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v34.value._object = (void *)0xEC00000031656C62;
    v35._countAndFlagsBits = 0;
    v35._object = (void *)0xE000000000000000;
    v186._countAndFlagsBits = 0xD000000000000017;
    v36 = NSLocalizedString(_:tableName:bundle:value:comment:)(v33, v34, (NSBundle)v32, v35, v186);
    countAndFlagsBits = v36._countAndFlagsBits;
    object = v36._object;

    v39 = (void (*)(char *, char *, uint64_t))v27;
    v40 = v18;
    v41 = v179;
    v42 = v182;
  }
  else
  {
    v43.n128_f64[0] = ((double (*)(char *, char *, uint64_t))v27)(v23, v26, v18);
    v44 = FMIPDevice.isConsideredAccessory.getter(v43);
    v29(v23, v18);
    v39 = (void (*)(char *, char *, uint64_t))v27;
    if ((v44 & 1) != 0)
    {
      v45.n128_f64[0] = ((double (*)(char *, char *, uint64_t))v27)(v23, v26, v18);
      v46 = FMIPDevice.isLocalFindable.getter(v45);
      v29(v23, v18);
      v40 = v18;
      v42 = v182;
      if ((v46 & 1) != 0)
      {
        v47 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v48 = 0xD000000000000010;
        v49 = 0xD000000000000011;
        v50 = 0xD000000000000015;
        v160 = 0x80000001004B3420;
        v51 = 0x80000001004C7E40;
        v52 = 0x80000001004B3400;
      }
      else
      {
        v183 = 0;
        v184 = 0xE000000000000000;
        _StringGuts.grow(_:)(20);
        swift_bridgeObjectRelease(v184);
        v47 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v49 = 0xD000000000000014;
        v50 = 0xD000000000000026;
        v160 = 0x80000001004C7450;
        v51 = 0x80000001004C7430;
        v48 = 0;
        v52 = 0;
      }
      v62._countAndFlagsBits = 0;
      v62._object = (void *)0xE000000000000000;
      v63 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v49, *(Swift::String_optional *)&v48, (NSBundle)v47, v62, *(Swift::String *)&v50);
      countAndFlagsBits = v63._countAndFlagsBits;
      object = v63._object;

    }
    else
    {
      v53 = (uint64_t)v165;
      v27(v165, v26, v18);
      v42 = v182;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v182 + 56))(v53, 0, 1, v18);
      v54 = sub_1001DE71C(0xD000000000000019, 0x80000001004C7E20, v53);
      v56 = v55;
      v58 = v57;
      v60 = v59;
      swift_bridgeObjectRetain(v59);
      countAndFlagsBits = sub_1001DDC8C(v54, v56, v58, v60, 0, 0);
      object = v61;
      swift_bridgeObjectRelease_n(v60, 2);
      swift_bridgeObjectRelease(v56);
      sub_1000051EC(v53, &qword_1005D6710);
      v40 = v18;
    }
    v41 = v179;
  }
  v182 = OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView;
  v64 = *(char **)&v41[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView];
  v65 = (uint64_t *)&v64[OBJC_IVAR____TtC6FindMy19FMActionLandingView_title];
  v66 = *(_QWORD *)&v64[OBJC_IVAR____TtC6FindMy19FMActionLandingView_title + 8];
  *v65 = countAndFlagsBits;
  v65[1] = (uint64_t)object;
  v67 = v64;
  swift_bridgeObjectRelease(v66);
  v68 = *(void **)&v67[OBJC_IVAR____TtC6FindMy19FMActionLandingView_titleLabel];
  v69 = v65[1];
  v70 = v68;
  if (v69)
  {
    swift_bridgeObjectRetain(v69);
    v72 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v71 = swift_bridgeObjectRelease(v69).n128_u64[0];
  }
  else
  {
    v72 = 0;
  }
  objc_msgSend(v68, "setText:", v72, v71);

  v169 = OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_mediator;
  v73 = *(_QWORD *)(*(_QWORD *)&v41[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_mediator] + 64);
  v39(v23, v181, v40);
  v74 = swift_allocObject(&unk_1005675E8, 24, 7);
  swift_weakInit(v74 + 16, v73);
  v75 = v171;
  v165 = (char *)v39;
  v39(v171, v23, v40);
  v76 = *(unsigned __int8 *)(v42 + 80);
  v77 = (v76 + 24) & ~v76;
  v78 = v77 + v170;
  v79 = swift_allocObject(&unk_100567610, v77 + v170 + 1, v76 | 7);
  *(_QWORD *)(v79 + 16) = v74;
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v79 + v77, v75, v40);
  *(_BYTE *)(v79 + v78) = 1;
  v80 = sub_100053F2C((uint64_t *)&unk_1005D6DD0);
  swift_allocObject(v80, *(unsigned int *)(v80 + 48), *(unsigned __int16 *)(v80 + 52));
  swift_retain(v73);
  v81 = Future.init(_:)(sub_10012129C, v79);
  v183 = v81;
  v82 = sub_10003F774(&qword_1005E5630, (uint64_t *)&unk_1005D6DD0, (uint64_t)&protocol conformance descriptor for Future<A, B>);
  v83 = Publisher.eraseToAnyPublisher()(v80, v82);
  swift_release(v73);
  v84 = swift_release(v81);
  v180(v23, v40, v84);
  v183 = v83;
  v85 = (void *)objc_opt_self(NSRunLoop);
  v171 = (char *)v83;
  swift_retain(v83);
  v185[0] = objc_msgSend(v85, "mainRunLoop");
  v86 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  v87 = (uint64_t)v172;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56))(v172, 1, 1, v86);
  v88 = sub_100053F2C(&qword_1005D6DC0);
  v89 = sub_100006C5C(0, (unint64_t *)&qword_1005E5530, NSRunLoop_ptr);
  v90 = sub_10003F774((unint64_t *)&unk_1005D7E70, &qword_1005D6DC0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v91 = sub_100121168();
  v92 = v173;
  Publisher.receive<A>(on:options:)(v185, v87, v88, v89, v90, v91);
  sub_1000051EC(v87, &qword_1005D9640);

  swift_release(v183);
  v93 = swift_allocObject(&unk_100567638, 24, 7);
  swift_unknownObjectWeakInit(v93 + 16);
  v94 = sub_10003F774(&qword_1005D6DC8, &qword_1005D6DB0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v95 = v175;
  v96 = Publisher.sink(receiveCompletion:receiveValue:)(State.rawValue.getter, 0, sub_10044DCD8, v93, v175, v94);
  v97 = swift_release(v93);
  (*(void (**)(char *, uint64_t, __n128))(v174 + 8))(v92, v95, v97);
  v98 = *(_QWORD *)&v41[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_imageFetchingCancellable];
  *(_QWORD *)&v41[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_imageFetchingCancellable] = v96;
  swift_release(v98);
  v99 = *(void **)&v41[v182];
  v100 = (void *)objc_opt_self(NSBundle);
  v101 = v99;
  v102 = objc_msgSend(v100, "mainBundle");
  v103.value._countAndFlagsBits = 0xD000000000000013;
  v187._countAndFlagsBits = 0xD000000000000018;
  v187._object = (void *)0x80000001004A5660;
  v104._object = (void *)0x80000001004B14B0;
  v103.value._object = (void *)0x80000001004A5640;
  v104._countAndFlagsBits = 0xD000000000000017;
  v105._countAndFlagsBits = 0;
  v105._object = (void *)0xE000000000000000;
  v106 = NSLocalizedString(_:tableName:bundle:value:comment:)(v104, v103, (NSBundle)v102, v105, v187);

  v107 = (Swift::String *)&v101[OBJC_IVAR____TtC6FindMy19FMActionLandingView_action];
  v108 = *(_QWORD *)&v101[OBJC_IVAR____TtC6FindMy19FMActionLandingView_action + 8];
  *v107 = v106;
  swift_bridgeObjectRelease(v108);
  v109 = *(void **)(*(_QWORD *)&v101[OBJC_IVAR____TtC6FindMy19FMActionLandingView_performButton]
                  + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label);
  v110 = v107->_object;
  v111 = v109;
  if (v110)
  {
    swift_bridgeObjectRetain(v110);
    v113 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v112 = swift_bridgeObjectRelease(v110).n128_u64[0];
  }
  else
  {
    v113 = 0;
  }
  objc_msgSend(v109, "setText:", v113, v112);

  v114 = *(_QWORD *)(*(_QWORD *)&v41[v169] + 24);
  v115 = swift_retain(v114);
  v116 = v176;
  FMIPManager.owner.getter(v115);
  v118 = v177;
  v117 = v178;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v177 + 48))(v116, 1, v178) == 1)
  {
    __break(1u);
LABEL_30:
    swift_release(v171);
    __break(1u);
    goto LABEL_31;
  }
  v119 = v164;
  (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v164, v116, v117);
  v120 = swift_release(v114);
  v121 = FMIPPerson.username.getter(v120);
  v123 = v122;
  (*(void (**)(char *, uint64_t))(v118 + 8))(v119, v117);
  swift_bridgeObjectRetain(v123);
  v124 = sub_1003C06A0(v121, v123, 0);
  v126 = v125;
  swift_bridgeObjectRelease(v123);
  swift_bridgeObjectRelease(v126);
  if ((v124 & 1) != 0)
  {
    v121 = sub_1000F2BA4(v121, v123);
    v128 = v127;
    swift_bridgeObjectRelease(v123);
    v123 = v128;
  }
  v129 = *(char **)&v41[v182];
  v130 = (uint64_t *)&v129[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceOwner];
  v131 = *(_QWORD *)&v129[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceOwner + 8];
  *v130 = v121;
  v130[1] = v123;
  v132 = v129;
  swift_bridgeObjectRelease(v131);
  v133 = *(void **)&v132[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceOwnerLabel];
  v134 = v130[1];
  v135 = v133;
  if (v134)
  {
    swift_bridgeObjectRetain(v134);
    v137 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v136 = swift_bridgeObjectRelease(v134).n128_u64[0];
  }
  else
  {
    v137 = 0;
  }
  objc_msgSend(v133, "setText:", v137, v136);

  v138 = v181;
  v139 = v40;
  v140 = v40;
  v141 = (double (*)(char *, char *, uint64_t))v165;
  v142 = ((uint64_t (*)(char *, char *, uint64_t))v165)(v23, v181, v139);
  v143 = v166;
  FMIPDevice.features.getter(v142);
  v144 = (void (*)(char *, uint64_t))v180;
  v145 = ((uint64_t (*)(char *, uint64_t))v180)(v23, v140);
  v146 = v167;
  static FMIPFeatures.isRemoveUIv2Supported.getter(v145);
  v147 = v168;
  v148 = dispatch thunk of SetAlgebra.isSuperset(of:)(v146, v168, v162);
  v149 = v146;
  v150 = v163;
  v163(v149, v147);
  v150(v143, v147);
  if ((v148 & 1) != 0
    || (v151.n128_f64[0] = v141(v23, v138, v140),
        v152 = FMIPDevice.isConsideredAccessory.getter(v151),
        v144(v23, v140),
        (v152 & 1) != 0))
  {
    v153 = v179;
    sub_1004480B8();
  }
  else
  {
    v153 = v179;
    sub_1004474B4();
  }
  v154 = objc_msgSend(v153, "view");
  if (!v154)
    goto LABEL_30;
  v155 = v154;
  v156 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
  objc_msgSend(v155, "setBackgroundColor:", v156);

  v157 = objc_msgSend(v153, "view");
  if (v157)
  {
    v158 = v157;
    v159 = *(id *)&v153[v182];
    objc_msgSend(v158, "addSubview:", v159);

    swift_release(v171);
    return;
  }
LABEL_31:
  swift_release(v171);
  __break(1u);
}

void sub_1004473F8(void **a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  char *v6;
  uint64_t v7;
  void *v8;
  id v9;
  _BYTE v10[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = (char *)*(id *)(Strong + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView);

    v7 = OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceImage;
    v8 = *(void **)&v6[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceImage];
    *(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceImage] = v2;
    v9 = v2;

    objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceImageView], "setImage:", *(_QWORD *)&v6[v7]);
  }
}

void sub_1004474B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  void (*v30)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  unint64_t v38;
  _QWORD *v39;
  id v40;
  Swift::String v41;
  Swift::String v42;
  Swift::String v43;
  uint64_t v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  id v55;
  Swift::String_optional v56;
  Swift::String v57;
  Swift::String v58;
  Swift::String v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  double v69;
  id v70;
  Swift::String v71;
  Swift::String_optional v72;
  Swift::String v73;
  Swift::String v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  double v82;
  id v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  id v88;
  SEL *v89;
  char *v90;
  uint64_t *v91;
  uint64_t v92;
  char *v93;
  void *v94;
  uint64_t v95;
  id v96;
  double v97;
  NSString v98;
  uint64_t v99;
  char *v100;
  id v101;
  Swift::String_optional v102;
  Swift::String v103;
  Swift::String v104;
  void *object;
  void *v106;
  NSString v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(char *, uint64_t);
  void *v117;
  uint64_t v118;
  uint64_t inited;
  uint64_t v120;
  __int128 v121;
  __int128 v122;
  id v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  __int128 v128;
  id v129;
  uint64_t v130;
  uint64_t v131;
  void (*v132)(char *, uint64_t, uint64_t);
  void *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t countAndFlagsBits;
  void *v137;
  id v138;
  uint64_t v139;
  unint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t (*v143)(char *, uint64_t);
  char *v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  __int128 v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t (*v153)(char *, uint64_t, uint64_t);
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  __int128 v157;
  __int128 v158;
  uint64_t v159;
  __int128 v160;
  __int128 v161;
  void *v162;
  id v163;
  __int128 v164;
  __int128 v165;
  id v166;
  __int128 v167;
  _OWORD v168[2];
  Swift::String v169;
  Swift::String v170;
  Swift::String v171;
  Swift::String v172;

  v1 = v0;
  v2 = type metadata accessor for FMIPFeatures(0);
  v148 = *(_QWORD *)(v2 - 8);
  v149 = v2;
  v3 = __chkstk_darwin(v2);
  v147 = (char *)&v130 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v146 = (char *)&v130 - v5;
  v152 = type metadata accessor for FMFConfigValue(0);
  v142 = *(_QWORD *)(v152 - 8);
  __chkstk_darwin(v152);
  v141 = (char *)&v130 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v7);
  v9 = (char *)&v130 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FMIPDeviceState(0);
  v151 = *(_QWORD **)(v10 - 8);
  v11 = __chkstk_darwin(v10);
  v13 = (char *)&v130 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v130 - v14;
  v16 = type metadata accessor for FMIPDevice(0);
  v17 = *(_QWORD **)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v130 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = v1;
  v20 = v1 + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_deviceToRemove;
  v153 = (uint64_t (*)(char *, uint64_t, uint64_t))v17[2];
  v154 = v1 + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_deviceToRemove;
  v21 = v153(v19, v1 + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_deviceToRemove, v16);
  FMIPDevice.state.getter(v21);
  v143 = (uint64_t (*)(char *, uint64_t))v17[1];
  v144 = v19;
  v22 = v143(v19, v16);
  static FMIPDeviceState.isActivationLocked.getter(v22);
  v23 = sub_100008000((unint64_t *)&qword_1005D4158, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPDeviceState, (uint64_t)&protocol conformance descriptor for FMIPDeviceState);
  LOBYTE(v19) = dispatch thunk of SetAlgebra.isSuperset(of:)(v13, v10, v23);
  v24 = (void (*)(char *, uint64_t))v151[1];
  v24(v13, v10);
  v24(v15, v10);
  v25 = (v19 & 1) == 0;
  if ((v19 & 1) != 0)
    v26 = 0xD000000000000022;
  else
    v26 = 0xD000000000000024;
  if (v25)
    v27 = 0x80000001004C7C70;
  else
    v27 = 0x80000001004C7DF0;
  v28 = v20;
  v29 = (void (*)(char *, uint64_t, uint64_t))v153;
  v153(v9, v28, v16);
  v30 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v17[7];
  v30(v9, 0, 1, v16);
  v31 = sub_1001DE71C(v26, v27, (uint64_t)v9);
  v33 = v32;
  v35 = v34;
  v37 = v36;
  swift_bridgeObjectRetain(v36);
  v139 = sub_1001DDC8C(v31, v33, v35, v37, 0, 0);
  v140 = v38;
  swift_bridgeObjectRelease(v27);
  swift_bridgeObjectRelease_n(v37, 2);
  swift_bridgeObjectRelease(v33);
  sub_1000051EC((uint64_t)v9, &qword_1005D6710);
  *(_QWORD *)&v160 = 0;
  *((_QWORD *)&v160 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(*((_QWORD *)&v160 + 1));
  v39 = (_QWORD *)objc_opt_self(NSBundle);
  v151 = v39;
  v40 = objc_msgSend(v39, "mainBundle");
  v169._countAndFlagsBits = 0xD000000000000032;
  v169._object = (void *)0x80000001004C7CD0;
  v41._object = (void *)0x80000001004C7CA0;
  v41._countAndFlagsBits = 0xD000000000000020;
  v42._countAndFlagsBits = 0;
  v42._object = (void *)0xE000000000000000;
  v43 = NSLocalizedString(_:tableName:bundle:value:comment:)(v41, (Swift::String_optional)0, (NSBundle)v40, v42, v169);
  *(_QWORD *)&v150 = v43._countAndFlagsBits;

  v29(v9, v154, v16);
  v145 = v16;
  v30(v9, 0, 1, v16);
  v44 = sub_1001DE71C(0xD000000000000022, 0x80000001004C7D10, (uint64_t)v9);
  v46 = v45;
  v48 = v47;
  v50 = v49;
  swift_bridgeObjectRetain(v49);
  v51 = sub_1001DDC8C(v44, v46, v48, v50, 0, 0);
  v53 = v52;
  swift_bridgeObjectRelease_n(v50, 2);
  swift_bridgeObjectRelease(v46);
  sub_1000051EC((uint64_t)v9, &qword_1005D6710);
  v138 = (id)objc_opt_self(UIColor);
  v54 = objc_msgSend(v138, "systemPinkColor");
  sub_10016CB0C(v150, (uint64_t)v43._object, v51, v53, 0x80000001004C7D40, v54, &v157);
  v55 = objc_msgSend(v39, "mainBundle");
  v56.value._countAndFlagsBits = 0xD000000000000015;
  v170._countAndFlagsBits = 0xD00000000000001ALL;
  v134 = 0xD000000000000015;
  v135 = 0xD00000000000001ALL;
  v137 = (void *)0x80000001004B5600;
  v170._object = (void *)0x80000001004B5600;
  v57._object = (void *)0x80000001004C7D70;
  v56.value._object = (void *)0x80000001004B55E0;
  v133 = (void *)0x80000001004B55E0;
  v57._countAndFlagsBits = 0xD000000000000020;
  v58._countAndFlagsBits = 0;
  v58._object = (void *)0xE000000000000000;
  v59 = NSLocalizedString(_:tableName:bundle:value:comment:)(v57, v56, (NSBundle)v55, v58, v170);
  countAndFlagsBits = v59._countAndFlagsBits;

  v60 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
  v61 = swift_allocObject(v60, 72, 7);
  v150 = xmmword_100481740;
  *(_OWORD *)(v61 + 16) = xmmword_100481740;
  v62 = enum case for FMFConfigValue.pendingRemoveGracePeriod(_:);
  v63 = v141;
  v64 = v142;
  v132 = *(void (**)(char *, uint64_t, uint64_t))(v142 + 104);
  v65 = v152;
  v132(v141, enum case for FMFConfigValue.pendingRemoveGracePeriod(_:), v152);
  *((_QWORD *)&v161 + 1) = &type metadata for Int;
  v162 = &protocol witness table for Int;
  *(_QWORD *)&v160 = 30;
  v66 = sub_100053F2C(&qword_1005D6860);
  FMFDimplekeyGlobalConfig<A>(_:fallback:)(v63, &v160, v66);
  v67 = *(void (**)(char *, uint64_t))(v64 + 8);
  v67(v63, v65);
  sub_100029574(&v160);
  v142 = String.init(format:_:)(countAndFlagsBits, v59._object, v61);
  countAndFlagsBits = v68;
  *(_QWORD *)&v69 = swift_bridgeObjectRelease(v59._object).n128_u64[0];
  v70 = objc_msgSend(v151, "mainBundle", v69);
  v171._object = v137;
  v71._object = (void *)0x80000001004C7DA0;
  v71._countAndFlagsBits = 0xD000000000000022;
  v72.value._object = v133;
  v72.value._countAndFlagsBits = v134;
  v73._countAndFlagsBits = 0;
  v73._object = (void *)0xE000000000000000;
  v171._countAndFlagsBits = v135;
  v74 = NSLocalizedString(_:tableName:bundle:value:comment:)(v71, v72, (NSBundle)v70, v73, v171);

  v75 = swift_allocObject(v60, 72, 7);
  *(_OWORD *)(v75 + 16) = v150;
  v76 = v152;
  v132(v63, v62, v152);
  v162 = &protocol witness table for Int;
  *((_QWORD *)&v161 + 1) = &type metadata for Int;
  *(_QWORD *)&v160 = 30;
  FMFDimplekeyGlobalConfig<A>(_:fallback:)(v63, &v160, v66);
  v77 = v63;
  v78 = v139;
  v67(v77, v76);
  sub_100029574(&v160);
  v79 = String.init(format:_:)(v74._countAndFlagsBits, v74._object, v75);
  v81 = v80;
  *(_QWORD *)&v82 = swift_bridgeObjectRelease(v74._object).n128_u64[0];
  v83 = objc_msgSend(v138, "systemBlueColor", v82);
  v84 = v79;
  v85 = v140;
  sub_10016CB0C(v142, countAndFlagsBits, v84, v81, 0x80000001004C7DD0, v83, &v160);
  if (!v78 && v85 == 0xE000000000000000)
  {
    v86 = 0xE000000000000000;
LABEL_12:
    swift_bridgeObjectRelease(v86);
    v87 = v131;
    v88 = v151;
    v89 = (SEL *)&unk_1005AA000;
    goto LABEL_17;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(v78, v85, 0, 0xE000000000000000, 0) & 1) != 0)
  {
    v86 = v85;
    goto LABEL_12;
  }
  v87 = v131;
  v90 = *(char **)(v131 + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView);
  v91 = (uint64_t *)&v90[OBJC_IVAR____TtC6FindMy19FMActionLandingView_footnote];
  v92 = *(_QWORD *)&v90[OBJC_IVAR____TtC6FindMy19FMActionLandingView_footnote + 8];
  *v91 = v78;
  v91[1] = v85;
  v93 = v90;
  swift_bridgeObjectRelease(v92);
  v94 = *(void **)&v93[OBJC_IVAR____TtC6FindMy19FMActionLandingView_footnoteLabel];
  v95 = v91[1];
  v96 = v94;
  if (v95)
  {
    swift_bridgeObjectRetain(v95);
    v98 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v97 = swift_bridgeObjectRelease(v95).n128_u64[0];
  }
  else
  {
    v98 = 0;
  }
  v89 = (SEL *)&unk_1005AA000;
  objc_msgSend(v94, "setText:", v98, v97);

  v88 = v151;
LABEL_17:
  v99 = OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView;
  v100 = (char *)objc_retain(*(id *)(*(_QWORD *)(v87 + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView)
                                   + OBJC_IVAR____TtC6FindMy19FMActionLandingView_bulletedListView));
  v101 = objc_msgSend(v88, v89[208]);
  v102.value._countAndFlagsBits = 0xD000000000000013;
  v172._countAndFlagsBits = 0xD000000000000018;
  v103._countAndFlagsBits = 0xD00000000000001ELL;
  v172._object = (void *)0x80000001004A5660;
  v103._object = (void *)0x80000001004B1400;
  v102.value._object = (void *)0x80000001004A5640;
  v104._countAndFlagsBits = 0;
  v104._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v103, v102, (NSBundle)v101, v104, v172)._object;

  v106 = *(void **)(*(_QWORD *)&v100[OBJC_IVAR____TtC6FindMy24FMSymbolBulletedListView_headerView]
                  + OBJC_IVAR____TtC6FindMy30FMSymbolBulletedListHeaderView_titleLabel);
  v107 = String._bridgeToObjectiveC()();
  objc_msgSend(v106, "setText:", v107, swift_bridgeObjectRelease(object).n128_f64[0]);

  v108 = v144;
  v109 = v145;
  v110 = v153(v144, v154, v145);
  v111 = v146;
  FMIPDevice.features.getter(v110);
  v112 = v143(v108, v109);
  v113 = v147;
  static FMIPFeatures.isPendingRemoveCapable.getter(v112);
  v114 = sub_100008000((unint64_t *)&qword_1005D72F0, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPFeatures, (uint64_t)&protocol conformance descriptor for FMIPFeatures);
  v115 = v149;
  LOBYTE(v109) = dispatch thunk of SetAlgebra.isSuperset(of:)(v113, v149, v114);
  v116 = *(void (**)(char *, uint64_t))(v148 + 8);
  v116(v113, v115);
  v116(v111, v115);
  v117 = *(void **)(*(_QWORD *)(v87 + v99) + OBJC_IVAR____TtC6FindMy19FMActionLandingView_bulletedListView);
  v118 = sub_100053F2C((uint64_t *)&unk_1005D67E8);
  if ((v109 & 1) != 0)
  {
    inited = swift_initStackObject(v118, &v155);
    *(_OWORD *)(inited + 16) = xmmword_100481730;
    v167 = v158;
    v168[0] = v157;
    sub_100195DC0((uint64_t)&v159, (uint64_t)&v166);
    v120 = v159;
    v121 = v158;
    *(_OWORD *)(inited + 32) = v157;
    *(_OWORD *)(inited + 48) = v121;
    *(_QWORD *)(inited + 64) = v120;
    v164 = v161;
    v165 = v160;
    sub_100195DC0((uint64_t)&v162, (uint64_t)&v163);
    v122 = v161;
    *(_OWORD *)(inited + 72) = v160;
    *(_OWORD *)(inited + 88) = v122;
    *(_QWORD *)(inited + 104) = v162;
    v123 = v117;
    sub_100195E08((uint64_t)v168);
    sub_100195E08((uint64_t)&v167);
    sub_100195E30(&v166);
    sub_100195E08((uint64_t)&v165);
    sub_100195E08((uint64_t)&v164);
    sub_100195E30(&v163);
    sub_1002FC5CC(inited);
    sub_100195E58((uint64_t)v168);
    sub_100195E58((uint64_t)&v167);
    sub_100195E80(&v166);
    sub_100195E58((uint64_t)&v165);
    sub_100195E58((uint64_t)&v164);
    sub_100195E80(&v163);
    swift_setDeallocating(inited);
    v124 = inited + 32;
    v125 = 2;
  }
  else
  {
    v126 = swift_initStackObject(v118, &v156);
    *(_OWORD *)(v126 + 16) = v150;
    v167 = v158;
    v168[0] = v157;
    sub_100195DC0((uint64_t)&v159, (uint64_t)&v166);
    v127 = v159;
    v128 = v158;
    *(_OWORD *)(v126 + 32) = v157;
    *(_OWORD *)(v126 + 48) = v128;
    *(_QWORD *)(v126 + 64) = v127;
    v129 = v117;
    sub_100195E08((uint64_t)v168);
    sub_100195E08((uint64_t)&v167);
    sub_100195E30(&v166);
    sub_1002FC5CC(v126);
    sub_100195E58((uint64_t)v168);
    sub_100195E58((uint64_t)&v167);
    sub_100195E80(&v166);
    v165 = v160;
    sub_100195E58((uint64_t)&v165);
    v164 = v161;
    sub_100195E58((uint64_t)&v164);
    sub_100195DC0((uint64_t)&v162, (uint64_t)&v163);
    sub_100195E80(&v163);
    swift_setDeallocating(v126);
    v124 = v126 + 32;
    v125 = 1;
  }
  swift_arrayDestroy(v124, v125, &type metadata for FMSymbolBulletedListItem);

}

void sub_1004480B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t);
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  _UNKNOWN **v22;
  uint64_t v23;
  id v24;
  unint64_t v25;
  const char *v26;
  __n128 v27;
  char v28;
  void *v29;
  id v30;
  Swift::String v31;
  Swift::String_optional v32;
  Swift::String v33;
  Swift::String v34;
  uint64_t countAndFlagsBits;
  id v36;
  Swift::String v37;
  Swift::String_optional v38;
  Swift::String v39;
  unint64_t v40;
  Swift::String_optional v41;
  Swift::String v42;
  unint64_t v43;
  Swift::String v44;
  id v45;
  Swift::String v46;
  Swift::String_optional v47;
  Swift::String v48;
  id v49;
  Swift::String v50;
  Swift::String v51;
  Swift::String v52;
  void *v53;
  id v54;
  Swift::String_optional v55;
  Swift::String v56;
  Swift::String v57;
  Swift::String v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  id v62;
  Swift::String v63;
  Swift::String_optional v64;
  Swift::String v65;
  Swift::String v66;
  uint64_t v67;
  void *v68;
  NSBundle v69;
  Swift::String v70;
  Swift::String v71;
  Swift::String v72;
  char *v73;
  uint64_t v74;
  __n128 v75;
  id v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  Swift::String v82;
  Swift::String v83;
  void *v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  const char *v89;
  const char *v90;
  char *v91;
  uint64_t *v92;
  uint64_t v93;
  char *v94;
  void *v95;
  uint64_t v96;
  id v97;
  double v98;
  NSString v99;
  char *v100;
  id v101;
  Swift::String v102;
  Swift::String_optional v103;
  Swift::String v104;
  void *v105;
  void *v106;
  NSString v107;
  char *v108;
  uint64_t v109;
  uint64_t (*v110)(char *, uint64_t, uint64_t);
  uint64_t v111;
  char *v112;
  uint64_t (*v113)(char *, uint64_t);
  uint64_t v114;
  char *v115;
  uint64_t v116;
  void (*v117)(char *, uint64_t);
  uint64_t v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  char v123;
  char *v124;
  void (*v125)(char *, uint64_t);
  void *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  __int128 v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  void *v134;
  uint64_t v135;
  uint64_t inited;
  uint64_t v137;
  __int128 v138;
  __int128 v139;
  unint64_t v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  void (*v144)(char *, uint64_t);
  char *v145;
  char *v146;
  uint64_t v147;
  void *object;
  Swift::String v149;
  const char *v150;
  const char *v151;
  unint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  void (*v158)(char *, uint64_t);
  uint64_t v159;
  uint64_t v160;
  uint64_t (*v161)(char *, uint64_t, uint64_t);
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  __int128 v165;
  __int128 v166;
  uint64_t v167;
  __int128 v168;
  __int128 v169;
  uint64_t v170;
  id v171;
  __int128 v172;
  __int128 v173;
  id v174;
  __int128 v175;
  _OWORD v176[2];
  Swift::String v177;
  Swift::String v178;
  Swift::String v179;
  Swift::String v180;
  Swift::String v181;
  Swift::String v182;
  Swift::String v183;
  Swift::String v184;

  v1 = type metadata accessor for FMIPBeaconType(0);
  v155 = *(_QWORD *)(v1 - 8);
  v156 = v1;
  v2 = __chkstk_darwin(v1);
  v154 = (char *)&v142 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v153 = (char *)&v142 - v4;
  v5 = type metadata accessor for FMIPFeatures(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v142 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v142 - v10;
  v12 = type metadata accessor for FMIPDevice(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v142 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = v0 + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_deviceToRemove;
  v161 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v162 = v0;
  v17 = v161(v15, v0 + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_deviceToRemove, v12);
  FMIPDevice.features.getter(v17);
  v18 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
  v19 = v18(v15, v12);
  static FMIPFeatures.isRemoveUIv2Supported.getter(v19);
  v143 = sub_100008000((unint64_t *)&qword_1005D72F0, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPFeatures, (uint64_t)&protocol conformance descriptor for FMIPFeatures);
  v20 = dispatch thunk of SetAlgebra.isSuperset(of:)(v9, v5, v143);
  v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  v21(v9, v5);
  v144 = v21;
  v145 = v11;
  v21(v11, v5);
  v22 = &MCFeatureFindMyDeviceAllowed_ptr;
  v159 = v12;
  v160 = v16;
  v157 = v15;
  v158 = (void (*)(char *, uint64_t))v18;
  v146 = v9;
  v147 = v5;
  if ((v20 & 1) != 0)
  {
    v23 = v162 + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_viewModel;
    LODWORD(v23) = *(unsigned __int8 *)(v23 + *(int *)(type metadata accessor for FMDeviceDetailViewModel(0) + 172));
    v24 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    if ((_DWORD)v23 == 1)
    {
      v25 = 0xD00000000000002ALL;
      v140 = 0x80000001004B30E0;
      v26 = "ACCESSORY_REMOVE2_NOT_WITH_YOU_DESCRIPTION";
    }
    else
    {
      v25 = 0xD00000000000001DLL;
      v140 = 0x80000001004B30E0;
      v26 = "ACCESSORY_REMOVE2_DESCRIPTION";
    }
    v40 = (unint64_t)(v26 - 32) | 0x8000000000000000;
    v41.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v41.value._object = (void *)0xEC00000031656C62;
    v42._countAndFlagsBits = 0;
    v42._object = (void *)0xE000000000000000;
    v43 = 0xD000000000000017;
    v44 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v25, v41, (NSBundle)v24, v42, *(Swift::String *)(&v140 - 1));
    countAndFlagsBits = v44._countAndFlagsBits;
    object = v44._object;

    v45 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v46._countAndFlagsBits = 0xD00000000000001ALL;
    v179._object = (void *)0x80000001004B30E0;
    v46._object = (void *)0x80000001004C7C20;
    v47.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v47.value._object = (void *)0xEC00000031656C62;
    v48._countAndFlagsBits = 0;
    v48._object = (void *)0xE000000000000000;
    v179._countAndFlagsBits = 0xD000000000000017;
    v149 = NSLocalizedString(_:tableName:bundle:value:comment:)(v46, v47, (NSBundle)v45, v48, v179);

  }
  else
  {
    ((void (*)(__objc2_class **__return_ptr, char *, uint64_t, uint64_t))v161)(&OBJC_METACLASS____TtC6FindMy23FMNoveltyViewController.superclass, v15, v16, v12);
    v28 = FMIPDevice.isLocalFindable.getter(v27);
    v18(v15, v12);
    if ((v28 & 1) != 0)
    {
      v29 = (void *)objc_opt_self(NSBundle);
      v30 = objc_msgSend(v29, "mainBundle");
      v177._object = (void *)0x80000001004B3420;
      v31._object = (void *)0x80000001004C7BC0;
      v31._countAndFlagsBits = 0xD000000000000017;
      v32.value._countAndFlagsBits = 0xD000000000000010;
      v32.value._object = (void *)0x80000001004B3400;
      v33._countAndFlagsBits = 0;
      v33._object = (void *)0xE000000000000000;
      v177._countAndFlagsBits = 0xD000000000000015;
      v34 = NSLocalizedString(_:tableName:bundle:value:comment:)(v31, v32, (NSBundle)v30, v33, v177);
      countAndFlagsBits = v34._countAndFlagsBits;
      object = v34._object;

      v36 = objc_msgSend(v29, "mainBundle");
      v37._countAndFlagsBits = 0xD000000000000014;
      v178._object = (void *)0x80000001004B3420;
      v37._object = (void *)0x80000001004C7BE0;
      v38.value._countAndFlagsBits = 0xD000000000000010;
      v38.value._object = (void *)0x80000001004B3400;
      v22 = &MCFeatureFindMyDeviceAllowed_ptr;
      v39._countAndFlagsBits = 0;
      v39._object = (void *)0xE000000000000000;
      v178._countAndFlagsBits = 0xD000000000000015;
      v149 = NSLocalizedString(_:tableName:bundle:value:comment:)(v37, v38, (NSBundle)v36, v39, v178);

    }
    else
    {
      *(_QWORD *)&v168 = 0;
      *((_QWORD *)&v168 + 1) = 0xE000000000000000;
      v149._object = (void *)0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(*((_QWORD *)&v168 + 1));
      v49 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v50._countAndFlagsBits = 0xD00000000000001ALL;
      v180._countAndFlagsBits = 0xD00000000000002CLL;
      v180._object = (void *)0x80000001004C7A30;
      v50._object = (void *)0x80000001004C7A10;
      v51._countAndFlagsBits = 0;
      v51._object = (void *)0xE000000000000000;
      v52 = NSLocalizedString(_:tableName:bundle:value:comment:)(v50, (Swift::String_optional)0, (NSBundle)v49, v51, v180);
      countAndFlagsBits = v52._countAndFlagsBits;
      object = v52._object;

      v149._countAndFlagsBits = 0;
    }
  }
  v53 = (void *)objc_opt_self(v22[131]);
  v54 = objc_msgSend(v53, "mainBundle");
  v55.value._countAndFlagsBits = 0xD000000000000013;
  v181._countAndFlagsBits = 0xD000000000000018;
  v56._countAndFlagsBits = 0xD00000000000001FLL;
  v151 = "Localizable-HAWKEYE";
  v181._object = (void *)0x80000001004A5660;
  v56._object = (void *)0x80000001004B1340;
  v150 = "CLEAR_TAGS_BUTTON";
  v55.value._object = (void *)0x80000001004A5640;
  v152 = 0xD000000000000013;
  v57._countAndFlagsBits = 0;
  v57._object = (void *)0xE000000000000000;
  v58 = NSLocalizedString(_:tableName:bundle:value:comment:)(v56, v55, (NSBundle)v54, v57, v181);
  v59 = v58._countAndFlagsBits;
  v60 = v58._object;

  v61 = v162 + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_viewModel;
  if (*(_BYTE *)(v61 + *(int *)(type metadata accessor for FMDeviceDetailViewModel(0) + 172)) == 1)
  {
    v62 = objc_msgSend(v53, "mainBundle", swift_bridgeObjectRelease(v58._object).n128_f64[0]);
    v63._countAndFlagsBits = 0xD00000000000002CLL;
    v182._object = (void *)0x80000001004B30E0;
    v63._object = (void *)0x80000001004C7B90;
    v64.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v64.value._object = (void *)0xEC00000031656C62;
    v65._countAndFlagsBits = 0;
    v65._object = (void *)0xE000000000000000;
    v182._countAndFlagsBits = 0xD000000000000017;
    v66 = NSLocalizedString(_:tableName:bundle:value:comment:)(v63, v64, (NSBundle)v62, v65, v182);
    v59 = v66._countAndFlagsBits;
    v60 = v66._object;

  }
  v67 = (uint64_t)object;
  v68 = (void *)objc_opt_self(UIColor);
  sub_10016CB0C(v59, (uint64_t)v60, countAndFlagsBits, v67, 0xEC000000656C6372, objc_msgSend(v68, "systemPinkColor"), &v165);
  *(_QWORD *)&v168 = 0;
  *((_QWORD *)&v168 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v69.super.isa = (Class)objc_msgSend(v53, "mainBundle", swift_bridgeObjectRelease(*((_QWORD *)&v168 + 1)).n128_f64[0]);
  v70._countAndFlagsBits = 0xD000000000000028;
  v183._countAndFlagsBits = 0xD00000000000003ALL;
  v183._object = (void *)0x80000001004C7A90;
  v70._object = (void *)0x80000001004C7A60;
  v71._countAndFlagsBits = 0;
  v71._object = (void *)0xE000000000000000;
  v72 = NSLocalizedString(_:tableName:bundle:value:comment:)(v70, (Swift::String_optional)0, v69, v71, v183);

  v73 = v157;
  v74 = v159;
  v75.n128_f64[0] = ((double (*)(char *, uint64_t, uint64_t))v161)(v157, v160, v159);
  LOBYTE(v69.super.isa) = FMIPDevice.isLocalFindable.getter(v75);
  v158(v73, v74);
  if (((uint64_t)v69.super.isa & 1) != 0)
  {
    v76 = objc_msgSend(v53, "mainBundle");
    v77 = 0xD000000000000010;
    v78 = 0xD000000000000015;
    v79 = 0xD00000000000002ALL;
    v141 = 0x80000001004B3420;
    v80 = 0x80000001004C7B60;
    v81 = 0x80000001004B3400;
  }
  else
  {
    *(_QWORD *)&v168 = 0;
    *((_QWORD *)&v168 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    v76 = objc_msgSend(v53, "mainBundle", swift_bridgeObjectRelease(*((_QWORD *)&v168 + 1)).n128_f64[0]);
    v79 = 0xD00000000000002DLL;
    v78 = 0xD00000000000003FLL;
    v141 = 0x80000001004C7B00;
    v80 = 0x80000001004C7AD0;
    v77 = 0;
    v81 = 0;
  }
  v82._countAndFlagsBits = 0;
  v82._object = (void *)0xE000000000000000;
  v83 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v79, *(Swift::String_optional *)&v77, (NSBundle)v76, v82, *(Swift::String *)&v78);

  sub_10016CB0C(v72._countAndFlagsBits, (uint64_t)v72._object, v83._countAndFlagsBits, (uint64_t)v83._object, 0x80000001004C7B40, objc_msgSend(v68, "systemPinkColor"), &v168);
  v85 = v149._countAndFlagsBits;
  v84 = v149._object;
  if (v149._countAndFlagsBits || v149._object != (void *)0xE000000000000000)
  {
    if ((_stringCompareWithSmolCheck(_:_:expecting:)(v149._countAndFlagsBits, v149._object, 0, 0xE000000000000000, 0) & 1) == 0)
    {
      v91 = *(char **)(v162 + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView);
      v92 = (uint64_t *)&v91[OBJC_IVAR____TtC6FindMy19FMActionLandingView_footnote];
      v93 = *(_QWORD *)&v91[OBJC_IVAR____TtC6FindMy19FMActionLandingView_footnote + 8];
      *v92 = v85;
      v92[1] = (uint64_t)v84;
      v94 = v91;
      swift_bridgeObjectRelease(v93);
      v95 = *(void **)&v94[OBJC_IVAR____TtC6FindMy19FMActionLandingView_footnoteLabel];
      v96 = v92[1];
      v90 = v150;
      v97 = v95;
      if (v96)
      {
        swift_bridgeObjectRetain(v96);
        v99 = String._bridgeToObjectiveC()();
        *(_QWORD *)&v98 = swift_bridgeObjectRelease(v96).n128_u64[0];
      }
      else
      {
        v99 = 0;
      }
      objc_msgSend(v95, "setText:", v99, v98);

      v87 = v162;
      v89 = v151;
      v88 = v152;
      goto LABEL_24;
    }
    v86 = (unint64_t)v84;
  }
  else
  {
    v86 = 0xE000000000000000;
  }
  swift_bridgeObjectRelease(v86);
  v87 = v162;
  v89 = v151;
  v88 = v152;
  v90 = v150;
LABEL_24:
  v152 = OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView;
  v100 = (char *)objc_retain(*(id *)(*(_QWORD *)(v87 + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView)
                                   + OBJC_IVAR____TtC6FindMy19FMActionLandingView_bulletedListView));
  v101 = objc_msgSend(v53, "mainBundle");
  v184._countAndFlagsBits = 0xD000000000000018;
  v102._countAndFlagsBits = 0xD00000000000001ELL;
  v184._object = (void *)((unint64_t)v89 | 0x8000000000000000);
  v102._object = (void *)0x80000001004B1400;
  v103.value._object = (void *)((unint64_t)v90 | 0x8000000000000000);
  v103.value._countAndFlagsBits = v88;
  v104._countAndFlagsBits = 0;
  v104._object = (void *)0xE000000000000000;
  v105 = NSLocalizedString(_:tableName:bundle:value:comment:)(v102, v103, (NSBundle)v101, v104, v184)._object;

  v106 = *(void **)(*(_QWORD *)&v100[OBJC_IVAR____TtC6FindMy24FMSymbolBulletedListView_headerView]
                  + OBJC_IVAR____TtC6FindMy30FMSymbolBulletedListHeaderView_titleLabel);
  v107 = String._bridgeToObjectiveC()();
  objc_msgSend(v106, "setText:", v107, swift_bridgeObjectRelease(v105).n128_f64[0]);

  v108 = v157;
  v109 = v159;
  v110 = v161;
  v111 = v161(v157, v160, v159);
  v112 = v153;
  FMIPDevice.beaconType.getter(v111);
  v113 = (uint64_t (*)(char *, uint64_t))v158;
  v158(v108, v109);
  v115 = v154;
  v114 = v155;
  v116 = v156;
  (*(void (**)(char *, _QWORD, uint64_t))(v155 + 104))(v154, enum case for FMIPBeaconType.localFindable(_:), v156);
  LOBYTE(v100) = static FMIPBeaconType.== infix(_:_:)(v112, v115);
  v117 = *(void (**)(char *, uint64_t))(v114 + 8);
  v117(v115, v116);
  v117(v112, v116);
  if ((v100 & 1) != 0)
    goto LABEL_27;
  v118 = v110(v108, v160, v109);
  v119 = v145;
  FMIPDevice.features.getter(v118);
  v120 = v113(v108, v109);
  v121 = v146;
  static FMIPFeatures.isRemoveUIv2Supported.getter(v120);
  v122 = v147;
  v123 = dispatch thunk of SetAlgebra.isSuperset(of:)(v121, v147, v143);
  v124 = v121;
  v125 = v144;
  v144(v124, v122);
  v125(v119, v122);
  if ((v123 & 1) == 0)
  {
LABEL_27:
    v134 = *(void **)(*(_QWORD *)(v162 + v152) + OBJC_IVAR____TtC6FindMy19FMActionLandingView_bulletedListView);
    v135 = sub_100053F2C((uint64_t *)&unk_1005D67E8);
    inited = swift_initStackObject(v135, &v164);
    *(_OWORD *)(inited + 16) = xmmword_100481730;
    v175 = v166;
    v176[0] = v165;
    sub_100195DC0((uint64_t)&v167, (uint64_t)&v174);
    v137 = v167;
    v138 = v166;
    *(_OWORD *)(inited + 32) = v165;
    *(_OWORD *)(inited + 48) = v138;
    *(_QWORD *)(inited + 64) = v137;
    v172 = v169;
    v173 = v168;
    sub_100195DC0((uint64_t)&v170, (uint64_t)&v171);
    v139 = v169;
    *(_OWORD *)(inited + 72) = v168;
    *(_OWORD *)(inited + 88) = v139;
    *(_QWORD *)(inited + 104) = v170;
    v131 = v134;
    sub_100195E08((uint64_t)v176);
    sub_100195E08((uint64_t)&v175);
    sub_100195E30(&v174);
    sub_100195E08((uint64_t)&v173);
    sub_100195E08((uint64_t)&v172);
    sub_100195E30(&v171);
    sub_1002FC5CC(inited);
    sub_100195E58((uint64_t)v176);
    sub_100195E58((uint64_t)&v175);
    sub_100195E80(&v174);
    sub_100195E58((uint64_t)&v173);
    sub_100195E58((uint64_t)&v172);
    sub_100195E80(&v171);
    swift_setDeallocating(inited);
    v132 = inited + 32;
    v133 = 2;
  }
  else
  {
    v126 = *(void **)(*(_QWORD *)(v162 + v152) + OBJC_IVAR____TtC6FindMy19FMActionLandingView_bulletedListView);
    v127 = sub_100053F2C((uint64_t *)&unk_1005D67E8);
    v128 = swift_initStackObject(v127, &v163);
    *(_OWORD *)(v128 + 16) = xmmword_100481740;
    v175 = v166;
    v176[0] = v165;
    sub_100195DC0((uint64_t)&v167, (uint64_t)&v174);
    v129 = v167;
    v130 = v166;
    *(_OWORD *)(v128 + 32) = v165;
    *(_OWORD *)(v128 + 48) = v130;
    *(_QWORD *)(v128 + 64) = v129;
    v131 = v126;
    sub_100195E08((uint64_t)v176);
    sub_100195E08((uint64_t)&v175);
    sub_100195E30(&v174);
    sub_1002FC5CC(v128);
    sub_100195E58((uint64_t)v176);
    sub_100195E58((uint64_t)&v175);
    sub_100195E80(&v174);
    v173 = v168;
    sub_100195E58((uint64_t)&v173);
    v172 = v169;
    sub_100195E58((uint64_t)&v172);
    sub_100195DC0((uint64_t)&v170, (uint64_t)&v171);
    sub_100195E80(&v171);
    swift_setDeallocating(v128);
    v132 = v128 + 32;
    v133 = 1;
  }
  swift_arrayDestroy(v132, v133, &type metadata for FMSymbolBulletedListItem);

}

void sub_100448E94()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  Class isa;

  v1 = OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = sub_100053F2C(&qword_1005D2F10);
  v3 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100481720;
  v4 = objc_msgSend(*(id *)&v0[v1], "topAnchor");
  v5 = objc_msgSend(v0, "view");
  if (!v5)
  {
    __break(1u);
    goto LABEL_7;
  }
  v6 = v5;
  v7 = objc_msgSend(v5, "topAnchor");

  v8 = objc_msgSend(v4, "constraintEqualToAnchor:", v7);
  *(_QWORD *)(v3 + 32) = v8;
  v9 = objc_msgSend(*(id *)&v0[v1], "bottomAnchor");
  v10 = objc_msgSend(v0, "view");
  if (!v10)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v11 = v10;
  v12 = objc_msgSend(v10, "bottomAnchor");

  v13 = objc_msgSend(v9, "constraintEqualToAnchor:", v12);
  *(_QWORD *)(v3 + 40) = v13;
  v14 = objc_msgSend(*(id *)&v0[v1], "leadingAnchor");
  v15 = objc_msgSend(v0, "view");
  if (!v15)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v16 = v15;
  v17 = objc_msgSend(v15, "leadingAnchor");

  v18 = objc_msgSend(v14, "constraintEqualToAnchor:", v17);
  *(_QWORD *)(v3 + 48) = v18;
  v19 = objc_msgSend(*(id *)&v0[v1], "trailingAnchor");
  v20 = objc_msgSend(v0, "view");
  if (v20)
  {
    v21 = v20;
    v22 = (void *)objc_opt_self(NSLayoutConstraint);
    v23 = objc_msgSend(v21, "trailingAnchor");

    v24 = objc_msgSend(v19, "constraintEqualToAnchor:", v23);
    *(_QWORD *)(v3 + 56) = v24;
    specialized Array._endMutation()(v25);
    sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v22, "activateConstraints:", isa, swift_bridgeObjectRelease(v3).n128_f64[0]);

    return;
  }
LABEL_9:
  __break(1u);
}

void sub_100449174()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  __n128 v28;
  char v29;
  uint64_t v30;
  char v31;
  const char *v32;
  id v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;

  v1 = type metadata accessor for FMIPFeatures(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v34 - v6;
  v8 = type metadata accessor for FMIPDevice(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v34 - v13;
  v15 = v0 + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_deviceToRemove;
  v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v35 = v0;
  v16 = v34((char *)&v34 - v13, v0 + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_deviceToRemove, v8);
  FMIPDevice.features.getter(v16);
  v17 = *(uint64_t (**)(char *, uint64_t))(v9 + 8);
  v18 = v17(v14, v8);
  static FMIPFeatures.isRemoveUIv2Supported.getter(v18);
  v19 = sub_100008000((unint64_t *)&qword_1005D72F0, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPFeatures, (uint64_t)&protocol conformance descriptor for FMIPFeatures);
  v20 = dispatch thunk of SetAlgebra.isSuperset(of:)(v5, v1, v19);
  v21 = *(void (**)(char *, uint64_t))(v2 + 8);
  v21(v5, v1);
  v21(v7, v1);
  if ((v20 & 1) != 0)
  {
    v22 = objc_allocWithZone((Class)UITapGestureRecognizer);
    v23 = v35;
    v24 = objc_msgSend(v22, "initWithTarget:action:", v35, "performRemoveAccessory");
    v25 = *(_QWORD *)(v23 + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView);
  }
  else
  {
    v27 = v34;
    v26 = v35;
    v28.n128_f64[0] = ((double (*)(char *, uint64_t, uint64_t))v34)(v12, v15, v8);
    v29 = FMIPDevice.isConsideredAccessory.getter(v28);
    v17(v12, v8);
    if ((v29 & 1) != 0
      && (v30 = v27(v14, v15, v8), v31 = FMIPDevice.isAppleAudioAccessory.getter(v30), v17(v14, v8), (v31 & 1) != 0))
    {
      v32 = "removeItem";
    }
    else
    {
      v32 = "performRemoveDevice";
    }
    v24 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v26, v32);
    v25 = *(_QWORD *)(v26 + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView);
  }
  v33 = *(id *)(v25 + OBJC_IVAR____TtC6FindMy19FMActionLandingView_performButton);
  objc_msgSend(v33, "addGestureRecognizer:", v24);

}

uint64_t sub_10044940C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _BYTE *v6;
  _BYTE *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v14;

  v1 = v0;
  v2 = type metadata accessor for FMIPDevice(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_BYTE **)&v0[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView];
  v6[OBJC_IVAR____TtC6FindMy19FMActionLandingView_showsActivity] = 1;
  v7 = v6;
  sub_10017FD28();

  v8 = objc_msgSend(v1, "navigationItem");
  v9 = objc_msgSend(v8, "leftBarButtonItem");

  if (v9)
  {
    objc_msgSend(v9, "setEnabled:", 0);

  }
  v10 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_mediator] + 24)
                  + 32);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, &v1[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_deviceToRemove], v2);
  v11 = swift_allocObject(&unk_100567520, 24, 7);
  *(_QWORD *)(v11 + 16) = v1;
  swift_retain(v10);
  sub_1000B7C04((uint64_t)v5, (uint64_t)v1, (uint64_t)sub_10044DBF8, v11);
  swift_release(v10);
  v12 = swift_release(v11);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v12);
}

void sub_100449588(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  __n128 v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  void **v30;
  void **v31;
  char *v32;
  _BYTE *v33;
  _BYTE *v34;
  id v35;
  id v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  void (*v41)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  NSString v60;
  NSString v61;
  id v62;
  id v63;
  Swift::String v64;
  Swift::String v65;
  void *object;
  uint64_t v67;
  char *v68;
  char *v69;
  NSString v70;
  void *v71;
  id v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  char *v78;
  id v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  _QWORD v96[3];
  char v97[8];
  _QWORD v98[3];
  char v99[8];
  void **aBlock;
  unint64_t v101;
  void *v102;
  void *v103;
  void *v104;
  uint64_t v105;
  void **v106;
  Swift::String v107;

  v95 = a4;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v90 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v89 = (char *)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v11);
  v13 = (char *)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FMIPActionStatus(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = v6;
  v94 = v5;
  v92 = v8;
  v91 = v9;
  if (!a2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(AKAppleIDAuthenticationErrorDomain);
    v23 = v28;
    goto LABEL_10;
  }
  swift_getErrorValue(a2, v97, v96);
  v18 = sub_10021EF24(v96[1], v96[2]);
  v20 = v19;
  v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(AKAppleIDAuthenticationErrorDomain);
  v23 = v22;
  if (!v20)
  {
LABEL_10:
    v26 = swift_bridgeObjectRelease(v23);
    v27 = 0;
    goto LABEL_13;
  }
  if (v18 == v21 && v20 == v22)
  {
    swift_bridgeObjectRelease_n(v20, 2);
    goto LABEL_12;
  }
  v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v20, v21, v22, 0);
  swift_bridgeObjectRelease(v20);
  v26 = swift_bridgeObjectRelease(v23);
  v27 = 0;
  if ((v25 & 1) != 0)
  {
LABEL_12:
    swift_getErrorValue(a2, v99, v98);
    v27 = sub_10021EE24(v98[1], v98[2]) == (id)-7003;
  }
LABEL_13:
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v15 + 104))(v17, enum case for FMIPActionStatus.error(_:), v14, v26);
  v29 = sub_100008000(&qword_1005D9928, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPActionStatus, (uint64_t)&protocol conformance descriptor for FMIPActionStatus);
  dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v14, v29);
  dispatch thunk of RawRepresentable.rawValue.getter(&v106, v14, v29);
  v30 = aBlock;
  v31 = v106;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  if (v30 == v31)
  {
    v32 = v95;
    v33 = *(_BYTE **)&v95[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView];
    v33[OBJC_IVAR____TtC6FindMy19FMActionLandingView_showsActivity] = 0;
    v34 = v33;
    sub_10017FD28();

    if (v27)
    {
      v35 = objc_msgSend(v32, "navigationItem");
      v36 = objc_msgSend(v35, "leftBarButtonItem");

      if (v36)
      {
        objc_msgSend(v36, "setEnabled:", 1);

      }
    }
    else
    {
      v37 = &v32[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_deviceToRemove];
      v38 = type metadata accessor for FMIPDevice(0);
      v39 = *(_QWORD *)(v38 - 8);
      v40 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
      v40(v13, v37, v38);
      v41 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56);
      v41(v13, 0, 1, v38);
      v42 = sub_1001DE71C(0xD00000000000001FLL, 0x80000001004C79C0, (uint64_t)v13);
      v44 = v43;
      v46 = v45;
      v48 = v47;
      swift_bridgeObjectRetain(v47);
      sub_1001DDC8C(v42, v44, v46, v48, 0, 0);
      v50 = v49;
      swift_bridgeObjectRelease_n(v48, 2);
      swift_bridgeObjectRelease(v44);
      sub_1000051EC((uint64_t)v13, &qword_1005D6710);
      v40(v13, v37, v38);
      v41(v13, 0, 1, v38);
      v51 = sub_1001DE71C(0xD000000000000021, 0x80000001004C79E0, (uint64_t)v13);
      v53 = v52;
      v55 = v54;
      v57 = v56;
      swift_bridgeObjectRetain(v56);
      sub_1001DDC8C(v51, v53, v55, v57, 0, 0);
      v59 = v58;
      swift_bridgeObjectRelease_n(v57, 2);
      swift_bridgeObjectRelease(v53);
      sub_1000051EC((uint64_t)v13, &qword_1005D6710);
      v60 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v50);
      v61 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v59);
      v62 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v60, v61, 1);

      aBlock = 0;
      v101 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(v101);
      v63 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v107._object = (void *)0x80000001004A5EE0;
      v64._countAndFlagsBits = 0x4F545455425F4B4FLL;
      v64._object = (void *)0xEF454C5449545F4ELL;
      v65._countAndFlagsBits = 0;
      v65._object = (void *)0xE000000000000000;
      v107._countAndFlagsBits = 0xD000000000000021;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v64, (Swift::String_optional)0, (NSBundle)v63, v65, v107)._object;

      v67 = swift_allocObject(&unk_100567548, 24, 7);
      v68 = v95;
      *(_QWORD *)(v67 + 16) = v95;
      v69 = v68;
      v70 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(object);
      v104 = sub_10044DC00;
      v105 = v67;
      aBlock = _NSConcreteStackBlock;
      v101 = 1107296256;
      v102 = sub_100008B40;
      v103 = &unk_100567560;
      v71 = _Block_copy(&aBlock);
      swift_release(v105);
      v72 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v70, 0, v71);
      _Block_release(v71);

      objc_msgSend(v62, "addAction:", v72);
      v73 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
      v74 = (void *)static OS_dispatch_queue.main.getter(v73);
      v75 = swift_allocObject(&unk_100567598, 32, 7);
      *(_QWORD *)(v75 + 16) = v69;
      *(_QWORD *)(v75 + 24) = v62;
      v104 = sub_1000A1928;
      v105 = v75;
      aBlock = _NSConcreteStackBlock;
      v101 = 1107296256;
      v102 = sub_100037DF8;
      v103 = &unk_1005675B0;
      v76 = _Block_copy(&aBlock);
      v77 = v105;
      v78 = v69;
      v79 = v62;
      swift_release(v77);
      v80 = v89;
      static DispatchQoS.unspecified.getter(v81);
      aBlock = (void **)_swiftEmptyArrayStorage;
      v82 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v83 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
      v84 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
      v85 = v92;
      v86 = v83;
      v87 = v94;
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v86, v84, v94, v82);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v80, v85, v76);
      _Block_release(v76);

      (*(void (**)(char *, uint64_t))(v93 + 8))(v85, v87);
      (*(void (**)(char *, uint64_t))(v90 + 8))(v80, v91);
    }
  }
  else
  {
    sub_10044CDA8();
  }
}

void sub_100449DD4()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  Swift::String v4;
  Swift::String_optional v5;
  Swift::String v6;
  void *object;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  void *v12;
  id v13;
  Swift::String v14;
  Swift::String_optional v15;
  Swift::String v16;
  void *v17;
  id v18;
  Swift::String v19;
  Swift::String_optional v20;
  Swift::String v21;
  void *v22;
  NSString v23;
  NSString v24;
  id v25;
  NSString v26;
  void *v27;
  id v28;
  uint64_t v29;
  char *v30;
  NSString v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  _QWORD aBlock[5];
  uint64_t v39;
  Swift::String v40;
  Swift::String v41;
  Swift::String v42;
  Swift::String v43;

  v1 = &v0[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_viewModel];
  if (v1[*(int *)(type metadata accessor for FMDeviceDetailViewModel(0) + 172)] == 1)
  {
    v2 = (void *)objc_opt_self(NSBundle);
    v3 = objc_msgSend(v2, "mainBundle");
    v4._countAndFlagsBits = 0xD00000000000002CLL;
    v40._object = (void *)0x80000001004B30E0;
    v4._object = (void *)0x80000001004C78F0;
    v5.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v5.value._object = (void *)0xEC00000031656C62;
    v6._countAndFlagsBits = 0;
    v6._object = (void *)0xE000000000000000;
    v40._countAndFlagsBits = 0xD000000000000017;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v3, v6, v40)._object;

    v8 = objc_msgSend(v2, "mainBundle");
    v9._countAndFlagsBits = 0xD000000000000032;
    v41._object = (void *)0x80000001004B30E0;
    v9._object = (void *)0x80000001004C7920;
    v10.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v10.value._object = (void *)0xEC00000031656C62;
    v11._countAndFlagsBits = 0;
    v11._object = (void *)0xE000000000000000;
    v41._countAndFlagsBits = 0xD000000000000017;
    v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v41)._object;

    v13 = objc_msgSend(v2, "mainBundle");
    v14._countAndFlagsBits = 0xD00000000000002DLL;
    v42._object = (void *)0x80000001004B30E0;
    v14._object = (void *)0x80000001004C7960;
    v15.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v15.value._object = (void *)0xEC00000031656C62;
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    v42._countAndFlagsBits = 0xD000000000000017;
    v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, v15, (NSBundle)v13, v16, v42)._object;

    v18 = objc_msgSend(v2, "mainBundle");
    v19._countAndFlagsBits = 0xD00000000000002ELL;
    v43._object = (void *)0x80000001004B30E0;
    v19._object = (void *)0x80000001004C7990;
    v20.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v20.value._object = (void *)0xEC00000031656C62;
    v21._countAndFlagsBits = 0;
    v21._object = (void *)0xE000000000000000;
    v43._countAndFlagsBits = 0xD000000000000017;
    v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, v20, (NSBundle)v18, v21, v43)._object;

    v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v12);
    v25 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v23, v24, 1);

    v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17);
    v27 = (void *)objc_opt_self(UIAlertAction);
    v28 = objc_msgSend(v27, "actionWithTitle:style:handler:", v26, 1, 0);

    v29 = swift_allocObject(&unk_1005674D0, 24, 7);
    *(_QWORD *)(v29 + 16) = v0;
    v30 = v0;
    v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v22);
    aBlock[4] = sub_10044DBD8;
    v39 = v29;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100008B40;
    aBlock[3] = &unk_1005674E8;
    v32 = _Block_copy(aBlock);
    v33 = objc_msgSend(v27, "actionWithTitle:style:handler:", v31, 2, v32, swift_release(v39).n128_f64[0]);
    _Block_release(v32);

    objc_msgSend(v25, "addAction:", v33);
    objc_msgSend(v25, "addAction:", v28);
    v34 = objc_msgSend(v25, "popoverPresentationController");
    if (v34)
    {
      v35 = v34;
      objc_msgSend(v34, "setSourceView:", *(_QWORD *)(*(_QWORD *)&v30[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView]+ OBJC_IVAR____TtC6FindMy19FMActionLandingView_performButton));

    }
    v36 = objc_msgSend(v25, "popoverPresentationController");
    if (v36)
    {
      v37 = v36;
      objc_msgSend(*(id *)(*(_QWORD *)&v30[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView]+ OBJC_IVAR____TtC6FindMy19FMActionLandingView_performButton), "bounds");
      objc_msgSend(v37, "setSourceRect:");

    }
    objc_msgSend(v30, "presentViewController:animated:completion:", v25, 1, 0);

  }
  else
  {
    sub_10044A2C8();
  }
}

uint64_t sub_10044A2C8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _BYTE *v11;
  _BYTE *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v19;

  v1 = v0;
  v2 = type metadata accessor for FMIPDevice(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100056D88(v6, (uint64_t)qword_1005F5748);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "FMRemoveDeviceViewController: Remove device button pressed for accessory", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  v11 = *(_BYTE **)&v1[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView];
  v11[OBJC_IVAR____TtC6FindMy19FMActionLandingView_showsActivity] = 1;
  v12 = v11;
  sub_10017FD28();

  v13 = objc_msgSend(v1, "navigationItem");
  v14 = objc_msgSend(v13, "leftBarButtonItem");

  if (v14)
  {
    objc_msgSend(v14, "setEnabled:", 0);

  }
  v15 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_mediator] + 24)
                  + 32);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, &v1[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_deviceToRemove], v2);
  v16 = swift_allocObject(&unk_100567408, 24, 7);
  *(_QWORD *)(v16 + 16) = v1;
  swift_retain(v15);
  sub_1000B7C04((uint64_t)v5, (uint64_t)v1, (uint64_t)sub_10044DBA4, v16);
  swift_release(v15);
  v17 = swift_release(v16);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v17);
}

void sub_10044A4F8(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void **v17;
  void **v18;
  _BYTE *v19;
  _BYTE *v20;
  void *v21;
  id v22;
  Swift::String v23;
  Swift::String_optional v24;
  Swift::String v25;
  void *object;
  id v27;
  Swift::String v28;
  Swift::String_optional v29;
  Swift::String v30;
  Swift::String v31;
  NSString v32;
  NSString v33;
  id v34;
  id v35;
  Swift::String v36;
  Swift::String v37;
  void *v38;
  uint64_t v39;
  char *v40;
  NSString v41;
  void *v42;
  id v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  char *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void **aBlock;
  unint64_t v63;
  void *v64;
  void *v65;
  void *v66;
  uint64_t v67;
  void **v68;
  Swift::String v69;
  Swift::String v70;
  Swift::String v71;

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v60 = *(_QWORD *)(v9 - 8);
  v61 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FMIPActionStatus(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for FMIPActionStatus.error(_:), v12);
  v16 = sub_100008000(&qword_1005D9928, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPActionStatus, (uint64_t)&protocol conformance descriptor for FMIPActionStatus);
  dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v12, v16);
  dispatch thunk of RawRepresentable.rawValue.getter(&v68, v12, v16);
  v17 = aBlock;
  v18 = v68;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (v17 == v18)
  {
    v19 = *(_BYTE **)&a4[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView];
    v19[OBJC_IVAR____TtC6FindMy19FMActionLandingView_showsActivity] = 0;
    v20 = v19;
    sub_10017FD28();

    v21 = (void *)objc_opt_self(NSBundle);
    v58 = v5;
    v22 = objc_msgSend(v21, "mainBundle");
    v23._countAndFlagsBits = 0xD000000000000022;
    v57 = v8;
    v69._object = (void *)0x80000001004B30E0;
    v23._object = (void *)0x80000001004C7890;
    v24.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v24.value._object = (void *)0xEC00000031656C62;
    v25._countAndFlagsBits = 0;
    v25._object = (void *)0xE000000000000000;
    v69._countAndFlagsBits = 0xD000000000000017;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v23, v24, (NSBundle)v22, v25, v69)._object;

    v27 = objc_msgSend(v21, "mainBundle");
    v28._countAndFlagsBits = 0xD000000000000024;
    v70._object = (void *)0x80000001004B30E0;
    v28._object = (void *)0x80000001004C78C0;
    v29.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v29.value._object = (void *)0xEC00000031656C62;
    v30._countAndFlagsBits = 0;
    v30._object = (void *)0xE000000000000000;
    v70._countAndFlagsBits = 0xD000000000000017;
    v31 = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, v29, (NSBundle)v27, v30, v70);
    v59 = v6;

    v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v31._object);
    v34 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v32, v33, 1);

    aBlock = 0;
    v63 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    v35 = objc_msgSend(v21, "mainBundle", swift_bridgeObjectRelease(v63).n128_f64[0]);
    v71._countAndFlagsBits = 0xD000000000000021;
    v71._object = (void *)0x80000001004A5EE0;
    v36._countAndFlagsBits = 0x4F545455425F4B4FLL;
    v36._object = (void *)0xEF454C5449545F4ELL;
    v37._countAndFlagsBits = 0;
    v37._object = (void *)0xE000000000000000;
    v38 = NSLocalizedString(_:tableName:bundle:value:comment:)(v36, (Swift::String_optional)0, (NSBundle)v35, v37, v71)._object;

    v39 = swift_allocObject(&unk_100567430, 24, 7);
    *(_QWORD *)(v39 + 16) = a4;
    v40 = a4;
    v41 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v38);
    v66 = sub_10044DCE4;
    v67 = v39;
    aBlock = _NSConcreteStackBlock;
    v63 = 1107296256;
    v64 = sub_100008B40;
    v65 = &unk_100567448;
    v42 = _Block_copy(&aBlock);
    swift_release(v67);
    v43 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v41, 0, v42);
    _Block_release(v42);

    objc_msgSend(v34, "addAction:", v43);
    v44 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
    v45 = (void *)static OS_dispatch_queue.main.getter(v44);
    v46 = swift_allocObject(&unk_100567480, 32, 7);
    *(_QWORD *)(v46 + 16) = v40;
    *(_QWORD *)(v46 + 24) = v34;
    v66 = sub_10044DD28;
    v67 = v46;
    aBlock = _NSConcreteStackBlock;
    v63 = 1107296256;
    v64 = sub_100037DF8;
    v65 = &unk_100567498;
    v47 = _Block_copy(&aBlock);
    v48 = v67;
    v49 = v40;
    v50 = v34;
    swift_release(v48);
    static DispatchQoS.unspecified.getter(v51);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v52 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v53 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
    v54 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
    v56 = v57;
    v55 = v58;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v53, v54, v58, v52);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v56, v47);
    _Block_release(v47);

    (*(void (**)(char *, uint64_t))(v59 + 8))(v56, v55);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v11, v61);
  }
  else
  {
    sub_10044CDA8();
  }
}

void sub_10044AB04(int a1, id a2)
{
  id v2;
  id v3;

  v2 = objc_msgSend(a2, "navigationItem");
  v3 = objc_msgSend(v2, "leftBarButtonItem");

  if (v3)
  {
    objc_msgSend(v3, "setEnabled:", 1);

  }
}

void sub_10044ABC0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint8_t *v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  char *v29;
  id v30;
  Swift::String v31;
  Swift::String v32;
  Swift::String v33;
  void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  __n128 v41;
  char *v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  char *v45;
  uint64_t v46;
  unint64_t v47;
  Swift::String v48;

  v1 = v0;
  v2 = sub_100053F2C(&qword_1005D72D0);
  __chkstk_darwin(v2);
  v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FMIPDevice(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FMIPItemGroup(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v44 = v12;
  v45 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v14 = (char *)&v42 - v13;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v15 = type metadata accessor for Logger(0);
  v43 = (void (*)(char *, char *, uint64_t))sub_100056D88(v15, (uint64_t)qword_1005F5748);
  v16 = Logger.logObject.getter(v43);
  v17 = static os_log_type_t.default.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(2, -1);
    v42 = v14;
    v19 = v10;
    v20 = v9;
    v21 = v1;
    v22 = v18;
    *(_WORD *)v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "FMRemoveDeviceViewController: Remove device button pressed", v18, 2u);
    v23 = v22;
    v1 = v21;
    v9 = v20;
    v10 = v19;
    v14 = v42;
    swift_slowDealloc(v23, -1, -1);
  }

  v24 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 16))(v8, &v1[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_deviceToRemove], v5);
  FMIPDevice.itemGroup.getter(v24);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v4, 1, v9) == 1)
  {
    v25 = sub_1000051EC((uint64_t)v4, &qword_1005D72D0);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.default.getter(v26);
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "FMRemoveDeviceViewController: Can't remove an unknown device", v28, 2u);
      swift_slowDealloc(v28, -1, -1);
    }

  }
  else
  {
    v43 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v43(v14, v4, v9);
    objc_msgSend(v1, "setModalInPresentation:", 1);
    v46 = 0;
    v47 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v47);
    v29 = v1;
    v30 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v48._countAndFlagsBits = 0xD00000000000003ALL;
    v48._object = (void *)0x80000001004C75F0;
    v31._object = (void *)0x80000001004C75C0;
    v31._countAndFlagsBits = 0xD000000000000028;
    v32._countAndFlagsBits = 0;
    v32._object = (void *)0xE000000000000000;
    v33 = NSLocalizedString(_:tableName:bundle:value:comment:)(v31, (Swift::String_optional)0, (NSBundle)v30, v32, v48);

    v34 = *(void **)(*(_QWORD *)&v29[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_mediator] + 16);
    v35 = v45;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v45, v14, v9);
    v36 = *(unsigned __int8 *)(v10 + 80);
    v37 = (v36 + 24) & ~v36;
    v38 = swift_allocObject(&unk_100567318, v37 + v44, v36 | 7);
    *(_QWORD *)(v38 + 16) = v29;
    v43((char *)(v38 + v37), v35, v9);
    v39 = v10;
    v40 = v34;
    sub_100341D08((uint64_t)v40, v33._countAndFlagsBits, (uint64_t)v33._object, v29, (void (*)(uint64_t))sub_10044DA30, v38);
    swift_bridgeObjectRelease(v33._object);

    v41 = swift_release(v38);
    (*(void (**)(char *, uint64_t, __n128))(v39 + 8))(v14, v9, v41);
  }
}

void sub_10044B004(char a1, void *a2, NSObject *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  id v14;
  Swift::String v15;
  Swift::String v16;
  Swift::String v17;
  id v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  NSString v22;
  id v23;
  NSString v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  char *v31;
  NSString v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  os_log_type_t v41;
  uint8_t *v42;
  _QWORD v43[4];
  void *v44;
  NSObject *v45;
  void **aBlock;
  unint64_t v47;
  void (*v48)(uint64_t, void *);
  void *v49;
  double (*v50)(uint64_t);
  uint64_t v51;
  Swift::String v52;
  Swift::String v53;
  Swift::String v54;

  v45 = a3;
  v5 = type metadata accessor for FMIPItemGroup(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  __chkstk_darwin(v5);
  v8 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    aBlock = 0;
    v47 = 0xE000000000000000;
    v44 = a2;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v47);
    v9 = (void *)objc_opt_self(NSBundle);
    v10 = objc_msgSend(v9, "mainBundle");
    v52._countAndFlagsBits = 0xD00000000000002DLL;
    v52._object = (void *)0x80000001004C7650;
    v11._object = (void *)0x80000001004C7630;
    v11._countAndFlagsBits = 0xD00000000000001BLL;
    v12._countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v52);
    v43[2] = v13._countAndFlagsBits;

    aBlock = 0;
    v47 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    v14 = objc_msgSend(v9, "mainBundle", swift_bridgeObjectRelease(v47).n128_f64[0]);
    v15._countAndFlagsBits = 0xD000000000000022;
    v53._countAndFlagsBits = 0xD000000000000034;
    v53._object = (void *)0x80000001004C76B0;
    v15._object = (void *)0x80000001004C7680;
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v53);
    v43[1] = v17._countAndFlagsBits;

    aBlock = 0;
    v47 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    v18 = objc_msgSend(v9, "mainBundle", swift_bridgeObjectRelease(v47).n128_f64[0]);
    v19._countAndFlagsBits = 0xD000000000000023;
    v54._countAndFlagsBits = 0xD000000000000035;
    v54._object = (void *)0x80000001004C7720;
    v19._object = (void *)0x80000001004C76F0;
    v20._countAndFlagsBits = 0;
    v20._object = (void *)0xE000000000000000;
    v21 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, (Swift::String_optional)0, (NSBundle)v18, v20, v54);
    v43[3] = v21._countAndFlagsBits;

    v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v13._object);
    v23 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", 0, v22, 0);

    v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v17._object);
    v25 = (void *)objc_opt_self(UIAlertAction);
    v26 = objc_msgSend(v25, "actionWithTitle:style:handler:", v24, 1, 0);

    (*(void (**)(char *, NSObject *, uint64_t))(v6 + 16))((char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v45, v5);
    v27 = *(unsigned __int8 *)(v6 + 80);
    v28 = (v27 + 24) & ~v27;
    v29 = swift_allocObject(&unk_100567340, v28 + v7, v27 | 7);
    v30 = v44;
    *(_QWORD *)(v29 + 16) = v44;
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v29 + v28, v8, v5);
    v31 = v30;
    v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v21._object);
    v50 = sub_10044DA74;
    v51 = v29;
    aBlock = _NSConcreteStackBlock;
    v47 = 1107296256;
    v48 = sub_100008B40;
    v49 = &unk_100567358;
    v33 = _Block_copy(&aBlock);
    v34 = objc_msgSend(v25, "actionWithTitle:style:handler:", v32, 2, v33, swift_release(v51).n128_f64[0]);
    _Block_release(v33);

    objc_msgSend(v23, "addAction:", v34);
    objc_msgSend(v23, "addAction:", v26);
    v35 = objc_msgSend(v23, "popoverPresentationController");
    if (v35)
    {
      v36 = v35;
      objc_msgSend(v35, "setSourceView:", *(_QWORD *)(*(_QWORD *)&v31[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView]+ OBJC_IVAR____TtC6FindMy19FMActionLandingView_performButton));

    }
    v37 = objc_msgSend(v23, "popoverPresentationController");
    if (v37)
    {
      v38 = v37;
      objc_msgSend(*(id *)(*(_QWORD *)&v31[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView]+ OBJC_IVAR____TtC6FindMy19FMActionLandingView_performButton), "bounds");
      objc_msgSend(v38, "setSourceRect:");

    }
    objc_msgSend(v31, "presentViewController:animated:completion:", v23, 1, 0);

  }
  else
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v39 = type metadata accessor for Logger(0);
    v40 = sub_100056D88(v39, (uint64_t)qword_1005F5748);
    v45 = Logger.logObject.getter(v40);
    v41 = static os_log_type_t.default.getter(v45);
    if (os_log_type_enabled(v45, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v42 = 0;
      _os_log_impl((void *)&_mh_execute_header, v45, v41, "FMRemoveDeviceViewController: Couldn't remove item, BT is off", v42, 2u);
      swift_slowDealloc(v42, -1, -1);
    }

  }
}

double sub_10044B580(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  void *v10;
  char *v11;
  id v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String *v16;
  uint64_t v17;
  void *v18;
  void *object;
  id v20;
  double v21;
  NSString v22;
  id v23;
  id v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  double result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  Swift::String v39;

  v36 = a3;
  v4 = type metadata accessor for FMIPItemGroup(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  __chkstk_darwin(v4);
  v7 = OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView;
  v8 = *(_BYTE **)&a2[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView];
  v8[OBJC_IVAR____TtC6FindMy19FMActionLandingView_showsActivity] = 1;
  v9 = v8;
  sub_10017FD28();

  v10 = *(void **)&a2[v7];
  v37 = 0;
  v38 = 0xE000000000000000;
  v11 = v10;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v12 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v39._countAndFlagsBits = 0xD000000000000028;
  v39._object = (void *)0x80000001004C7780;
  v13._object = (void *)0x80000001004C7760;
  v13._countAndFlagsBits = 0xD000000000000016;
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v39);

  v16 = (Swift::String *)&v11[OBJC_IVAR____TtC6FindMy19FMActionLandingView_title];
  v17 = *(_QWORD *)&v11[OBJC_IVAR____TtC6FindMy19FMActionLandingView_title + 8];
  *v16 = v15;
  swift_bridgeObjectRelease(v17);
  v18 = *(void **)&v11[OBJC_IVAR____TtC6FindMy19FMActionLandingView_titleLabel];
  object = v16->_object;
  v20 = v18;
  if (object)
  {
    swift_bridgeObjectRetain(object);
    v22 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v21 = swift_bridgeObjectRelease(object).n128_u64[0];
  }
  else
  {
    v22 = 0;
  }
  objc_msgSend(v18, "setText:", v22, v21);

  v23 = objc_msgSend(a2, "navigationItem");
  v24 = objc_msgSend(v23, "leftBarButtonItem");

  if (v24)
  {
    objc_msgSend(v24, "setEnabled:", 0);

  }
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v26 = v36;
  v25((char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v36, v4);
  v27 = type metadata accessor for FMIPRemoveItemGroupAction(0);
  swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
  v28 = FMIPRemoveItemGroupAction.init(itemGroup:forced:)((char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), 0);
  v29 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&a2[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_mediator] + 24)
                  + 32);
  v25((char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v26, v4);
  v30 = *(unsigned __int8 *)(v5 + 80);
  v31 = (v30 + 24) & ~v30;
  v32 = swift_allocObject(&unk_100567390, v31 + v6, v30 | 7);
  *(_QWORD *)(v32 + 16) = a2;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v32 + v31, (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  swift_retain(v29);
  v33 = a2;
  sub_1000B26CC(v28, (uint64_t)sub_10044DB2C, v32);
  swift_release(v32);
  swift_release(v28);
  *(_QWORD *)&result = swift_release(v29).n128_u64[0];
  return result;
}

void sub_10044B88C(uint64_t a1, uint64_t a2, void **a3, id a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (**v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  void **v26;
  void **v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  void **v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  char v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  void *v39;
  id v40;
  Swift::String v41;
  Swift::String v42;
  void *object;
  id v44;
  Swift::String v45;
  Swift::String v46;
  void *v47;
  void *v48;
  NSString v49;
  NSString v50;
  id v51;
  id v52;
  Swift::String v53;
  Swift::String v54;
  void *v55;
  uint64_t v56;
  id v57;
  NSString v58;
  void *v59;
  id v60;
  char *v61;
  uint64_t (*v62)(char *, char *, uint64_t);
  char *v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint8_t *v67;
  void **v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  __n128 v72;
  char *v73;
  char *v74;
  uint64_t v75;
  id v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  void **aBlock;
  unint64_t v84;
  void (*v85)(uint64_t, void *);
  void *v86;
  void (*v87)();
  uint64_t v88;
  Swift::String v89;
  Swift::String v90;
  Swift::String v91;

  v8 = sub_100053F2C(&qword_1005D9708);
  __chkstk_darwin(v8);
  v81 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FMIPItemActionControllerError(0);
  v11 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v79 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v75 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v75 - v17;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v19 = type metadata accessor for Logger(0);
  v20 = sub_100056D88(v19, (uint64_t)qword_1005F5748);
  swift_errorRetain(a3);
  v21 = swift_errorRetain(a3);
  v78 = v20;
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.default.getter(v22);
  if (os_log_type_enabled(v22, v23))
  {
    v24 = swift_slowAlloc(12, -1);
    v77 = v16;
    v25 = (uint8_t *)v24;
    v26 = (void **)swift_slowAlloc(32, -1);
    v80 = v18;
    v27 = v26;
    v82 = (uint64_t)a3;
    aBlock = v26;
    v75 = a5;
    v76 = a4;
    *(_DWORD *)v25 = 136315138;
    v28 = sub_100053F2C(&qword_1005D7E40);
    v29 = Optional.debugDescription.getter(v28);
    v31 = v30;
    v82 = sub_100056DA0(v29, v30, (uint64_t *)&aBlock);
    a5 = v75;
    a4 = v76;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v82, &aBlock);
    swift_bridgeObjectRelease(v31);
    swift_errorRelease(a3);
    swift_errorRelease(a3);
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "FMRemoveDeviceViewController: Performed action successfuly? %s", v25, 0xCu);
    swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
    v32 = v27;
    v18 = v80;
    swift_slowDealloc(v32, -1, -1);
    v33 = v25;
    v16 = v77;
    swift_slowDealloc(v33, -1, -1);
  }
  else
  {
    swift_errorRelease(a3);
    swift_errorRelease(a3);
  }

  v34 = (uint64_t)v81;
  if (!a3)
  {
    v11[7](v81, 1, 1, v10);
    sub_1000051EC(v34, &qword_1005D9708);
    sub_10044CDA8();
    return;
  }
  aBlock = a3;
  swift_errorRetain(a3);
  v35 = sub_100053F2C((uint64_t *)&unk_1005D2AC0);
  v36 = swift_dynamicCast(v34, &aBlock, v35, v10, 6);
  v11[7]((char *)v34, v36 ^ 1u, 1, v10);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v11[6])(v34, 1, v10) == 1)
  {
    sub_1000051EC(v34, &qword_1005D9708);
LABEL_14:
    sub_10044C134(a5);
    return;
  }
  ((void (*)(char *, uint64_t, uint64_t))v11[4])(v18, v34, v10);
  ((void (*)(char *, _QWORD, uint64_t))v11[13])(v16, enum case for FMIPItemActionControllerError.tagInUseRemoveFailed(_:), v10);
  v37 = static FMIPItemActionControllerError.== infix(_:_:)(v18, v16);
  v38 = v11[1];
  ((void (*)(char *, uint64_t))v38)(v16, v10);
  if ((v37 & 1) == 0)
  {
    ((void (*)(char *, uint64_t))v38)(v18, v10);
    goto LABEL_14;
  }
  v77 = (char *)v38;
  aBlock = 0;
  v84 = 0xE000000000000000;
  v80 = v18;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v84);
  v39 = (void *)objc_opt_self(NSBundle);
  v40 = objc_msgSend(v39, "mainBundle");
  v81 = (char *)v11;
  v41._countAndFlagsBits = 0xD000000000000023;
  v89._countAndFlagsBits = 0xD000000000000035;
  v89._object = (void *)0x80000001004C77E0;
  v41._object = (void *)0x80000001004C77B0;
  v42._countAndFlagsBits = 0;
  v42._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v41, (Swift::String_optional)0, (NSBundle)v40, v42, v89)._object;

  aBlock = 0;
  v84 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v44 = objc_msgSend(v39, "mainBundle", swift_bridgeObjectRelease(v84).n128_f64[0]);
  v45._countAndFlagsBits = 0xD000000000000026;
  v90._countAndFlagsBits = 0xD000000000000038;
  v90._object = (void *)0x80000001004C7850;
  v45._object = (void *)0x80000001004C7820;
  v46._countAndFlagsBits = 0;
  v46._object = (void *)0xE000000000000000;
  v47 = a4;
  v48 = NSLocalizedString(_:tableName:bundle:value:comment:)(v45, (Swift::String_optional)0, (NSBundle)v44, v46, v90)._object;

  v49 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v50 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v48);
  v51 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v49, v50, 1);

  aBlock = 0;
  v84 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v52 = objc_msgSend(v39, "mainBundle", swift_bridgeObjectRelease(v84).n128_f64[0]);
  v91._object = (void *)0x80000001004A5EE0;
  v53._countAndFlagsBits = 0x4F545455425F4B4FLL;
  v53._object = (void *)0xEF454C5449545F4ELL;
  v54._countAndFlagsBits = 0;
  v54._object = (void *)0xE000000000000000;
  v91._countAndFlagsBits = 0xD000000000000021;
  v55 = NSLocalizedString(_:tableName:bundle:value:comment:)(v53, (Swift::String_optional)0, (NSBundle)v52, v54, v91)._object;

  v56 = swift_allocObject(&unk_1005673B8, 24, 7);
  *(_QWORD *)(v56 + 16) = v47;
  v57 = v47;
  v58 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v55);
  v87 = sub_10044DB84;
  v88 = v56;
  aBlock = _NSConcreteStackBlock;
  v84 = 1107296256;
  v85 = sub_100008B40;
  v86 = &unk_1005673D0;
  v59 = _Block_copy(&aBlock);
  swift_release(v88);
  v60 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v58, 1, v59);
  _Block_release(v59);

  v61 = v80;
  objc_msgSend(v51, "addAction:", v60);

  v76 = v51;
  objc_msgSend(v57, "presentViewController:animated:completion:", v51, 1, 0);
  v62 = (uint64_t (*)(char *, char *, uint64_t))*((_QWORD *)v81 + 2);
  v63 = v79;
  v64 = v62(v79, v61, v10);
  v65 = Logger.logObject.getter(v64);
  v66 = static os_log_type_t.default.getter(v65);
  if (os_log_type_enabled(v65, v66))
  {
    v67 = (uint8_t *)swift_slowAlloc(12, -1);
    v68 = (void **)swift_slowAlloc(32, -1);
    aBlock = v68;
    *(_DWORD *)v67 = 136315138;
    v62(v16, v63, v10);
    v69 = String.init<A>(describing:)(v16, v10);
    v71 = v70;
    v82 = sub_100056DA0(v69, v70, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v82, &aBlock);
    v72 = swift_bridgeObjectRelease(v71);
    v73 = v77;
    ((void (*)(char *, uint64_t, __n128))v77)(v63, v10, v72);
    _os_log_impl((void *)&_mh_execute_header, v65, v66, "FMRemoveItemViewController: error: %s", v67, 0xCu);
    swift_arrayDestroy(v68, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v68, -1, -1);
    swift_slowDealloc(v67, -1, -1);

    ((void (*)(char *, uint64_t))v73)(v80, v10);
  }
  else
  {

    v74 = v77;
    ((void (*)(char *, uint64_t))v77)(v63, v10);
    ((void (*)(char *, uint64_t))v74)(v61, v10);
  }
}

void sub_10044C134(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  void *v9;
  id v10;
  Swift::String v11;
  Swift::String v12;
  void *object;
  id v14;
  Swift::String v15;
  Swift::String v16;
  void *v17;
  NSString v18;
  NSString v19;
  id v20;
  Swift::String v21;
  Swift::String v22;
  void *v23;
  uint64_t v24;
  id v25;
  NSString v26;
  void *v27;
  void *v28;
  id v29;
  Swift::String v30;
  Swift::String v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  id v40;
  NSString v41;
  void *v42;
  id v43;
  id v44;
  void *v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  void **aBlock;
  unint64_t v55;
  void (*v56)(uint64_t, void *);
  void *v57;
  double (*v58)(uint64_t);
  uint64_t v59;
  Swift::String v60;
  Swift::String v61;
  Swift::String v62;
  Swift::String v63;

  v2 = v1;
  v51 = a1;
  v53 = type metadata accessor for FMIPItemGroup(0);
  v50 = *(_QWORD *)(v53 - 8);
  __chkstk_darwin(v53);
  v48 = v3;
  v52 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100056D88(v4, (uint64_t)qword_1005F5748);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMRemoveDeviceViewController: Presenting force unpair", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  aBlock = 0;
  v55 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v55);
  v9 = (void *)objc_opt_self(NSBundle);
  v10 = objc_msgSend(v9, "mainBundle");
  v11._countAndFlagsBits = 0xD00000000000001BLL;
  v60._countAndFlagsBits = 0xD00000000000002DLL;
  v60._object = (void *)0x80000001004C74A0;
  v11._object = (void *)0x80000001004C7480;
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v60)._object;

  aBlock = 0;
  v55 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v14 = objc_msgSend(v9, "mainBundle", swift_bridgeObjectRelease(v55).n128_f64[0]);
  v61._object = (void *)0x80000001004C74F0;
  v15._object = (void *)0x80000001004C74D0;
  v15._countAndFlagsBits = 0xD00000000000001DLL;
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  v61._countAndFlagsBits = 0xD00000000000002FLL;
  v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v61)._object;

  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v17);
  v49 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v18, v19, 1);

  aBlock = 0;
  v55 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v20 = objc_msgSend(v9, "mainBundle", swift_bridgeObjectRelease(v55).n128_f64[0]);
  v21._countAndFlagsBits = 0xD00000000000001CLL;
  v62._countAndFlagsBits = 0xD00000000000002ELL;
  v62._object = (void *)0x80000001004C7540;
  v21._object = (void *)0x80000001004C7520;
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)v20, v22, v62)._object;

  v24 = swift_allocObject(&unk_100567250, 24, 7);
  *(_QWORD *)(v24 + 16) = v2;
  v25 = v2;
  v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v23);
  v58 = (double (*)(uint64_t))sub_10044DCE0;
  v59 = v24;
  aBlock = _NSConcreteStackBlock;
  v55 = 1107296256;
  v56 = sub_100008B40;
  v57 = &unk_100567268;
  v27 = _Block_copy(&aBlock);
  swift_release(v59);
  v28 = (void *)objc_opt_self(UIAlertAction);
  v47 = objc_msgSend(v28, "actionWithTitle:style:handler:", v26, 1, v27);
  _Block_release(v27);

  aBlock = 0;
  v55 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v29 = objc_msgSend(v9, "mainBundle", swift_bridgeObjectRelease(v55).n128_f64[0]);
  v63._object = (void *)0x80000001004C7590;
  v30._object = (void *)0x80000001004C7570;
  v30._countAndFlagsBits = 0xD00000000000001DLL;
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  v63._countAndFlagsBits = 0xD00000000000002FLL;
  v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(v30, (Swift::String_optional)0, (NSBundle)v29, v31, v63)._object;

  v33 = v50;
  v35 = v52;
  v34 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v52, v51, v53);
  v36 = *(unsigned __int8 *)(v33 + 80);
  v37 = (v36 + 16) & ~v36;
  v38 = (v48 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  v39 = swift_allocObject(&unk_1005672A0, v38 + 8, v36 | 7);
  (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v39 + v37, v35, v34);
  *(_QWORD *)(v39 + v38) = v25;
  v40 = v25;
  v41 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v32);
  v58 = sub_10044D9B8;
  v59 = v39;
  aBlock = _NSConcreteStackBlock;
  v55 = 1107296256;
  v56 = sub_100008B40;
  v57 = &unk_1005672B8;
  v42 = _Block_copy(&aBlock);
  v43 = objc_msgSend(v28, "actionWithTitle:style:handler:", v41, 2, v42, swift_release(v59).n128_f64[0]);
  _Block_release(v42);

  v44 = v49;
  objc_msgSend(v49, "addAction:", v43);
  v45 = v47;
  objc_msgSend(v44, "addAction:", v47);
  objc_msgSend(v40, "presentViewController:animated:completion:", v44, 1, 0);

}

double sub_10044C734(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  double result;
  uint64_t v20;

  v5 = type metadata accessor for FMIPItemGroup(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v9 = type metadata accessor for Logger(0);
  v10 = sub_100056D88(v9, (uint64_t)qword_1005F5748);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "FMRemoveDeviceViewController: User agreed to force unpair", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  v14 = type metadata accessor for FMIPRemoveItemGroupAction(0);
  swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  v15 = FMIPRemoveItemGroupAction.init(itemGroup:forced:)(v8, 1);
  v16 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&a3[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_mediator] + 24)
                  + 32);
  v17 = swift_allocObject(&unk_1005672F0, 24, 7);
  *(_QWORD *)(v17 + 16) = a3;
  swift_retain(v16);
  v18 = a3;
  sub_1000B26CC(v15, (uint64_t)sub_10044DA08, v17);
  swift_release(v15);
  swift_release(v16);
  *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  return result;
}

void sub_10044C8F8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  _BYTE *v3;
  _BYTE *v4;
  id v5;
  id v6;
  char *v7;
  id v8;
  Swift::String v9;
  Swift::String v10;
  Swift::String v11;
  Swift::String *v12;
  uint64_t v13;
  void *v14;
  void *object;
  id v16;
  double v17;
  NSString v18;
  Swift::String v19;

  v1 = v0;
  objc_msgSend(v0, "setModalInPresentation:", 0);
  v2 = OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView;
  v3 = *(_BYTE **)&v0[OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView];
  v3[OBJC_IVAR____TtC6FindMy19FMActionLandingView_showsActivity] = 0;
  v4 = v3;
  sub_10017FD28();

  v5 = objc_msgSend(v1, "navigationItem");
  v6 = objc_msgSend(v5, "leftBarButtonItem");

  if (v6)
  {
    objc_msgSend(v6, "setEnabled:", 1);

  }
  v7 = (char *)*(id *)&v1[v2];
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v19._countAndFlagsBits = 0xD000000000000026;
  v19._object = (void *)0x80000001004C7450;
  v9._object = (void *)0x80000001004C7430;
  v9._countAndFlagsBits = 0xD000000000000014;
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v19);

  v12 = (Swift::String *)&v7[OBJC_IVAR____TtC6FindMy19FMActionLandingView_title];
  v13 = *(_QWORD *)&v7[OBJC_IVAR____TtC6FindMy19FMActionLandingView_title + 8];
  *v12 = v11;
  swift_bridgeObjectRelease(v13);
  v14 = *(void **)&v7[OBJC_IVAR____TtC6FindMy19FMActionLandingView_titleLabel];
  object = v12->_object;
  v16 = v14;
  if (object)
  {
    swift_bridgeObjectRetain(object);
    v18 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v17 = swift_bridgeObjectRelease(object).n128_u64[0];
  }
  else
  {
    v18 = 0;
  }
  objc_msgSend(v14, "setText:", v18, v17);

}

double sub_10044CAEC(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  void *v9;
  id v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  id v14;
  Swift::String v15;
  Swift::String v16;
  Swift::String v17;
  id v18;
  double result;
  uint64_t v20;
  unint64_t v21;
  Swift::String v22;
  Swift::String v23;

  v2 = v1;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v4 = type metadata accessor for Logger(0);
  sub_100056D88(v4, (uint64_t)qword_1005F5748);
  v5 = swift_errorRetain(a1);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 67109120;
    LODWORD(v20) = a1 != 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, (char *)&v20 + 4);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMRemoveDeviceViewController: Show remove failed if needed %{BOOL}d", v8, 8u);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    swift_errorRelease(a1);
  }

  v20 = 0;
  v21 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v21);
  v9 = (void *)objc_opt_self(NSBundle);
  v10 = objc_msgSend(v9, "mainBundle");
  v11._countAndFlagsBits = 0xD00000000000001CLL;
  v22._countAndFlagsBits = 0xD00000000000002ELL;
  v22._object = (void *)0x80000001004C73B0;
  v11._object = (void *)0x80000001004C7390;
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v22);

  v20 = 0;
  v21 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v14 = objc_msgSend(v9, "mainBundle", swift_bridgeObjectRelease(v21).n128_f64[0]);
  v23._countAndFlagsBits = 0xD00000000000002CLL;
  v23._object = (void *)0x80000001004C7400;
  v15._object = (void *)0x80000001004C73E0;
  v15._countAndFlagsBits = 0xD00000000000001ALL;
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v23);

  swift_errorRetain(a1);
  v18 = v2;
  sub_100189424(a1, v18, v17._countAndFlagsBits, (uint64_t)v17._object, v13._countAndFlagsBits, (uint64_t)v13._object, a1, v18);

  swift_errorRelease(a1);
  swift_bridgeObjectRelease(v13._object);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v17._object).n128_u64[0];
  return result;
}

void sub_10044CD9C(uint64_t a1, uint64_t a2)
{
  sub_10044D6C0(a2);
}

double sub_10044CDA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  _BYTE v11[24];
  _BYTE v12[24];

  v1 = type metadata accessor for FMSelectedSection(0);
  v2 = __chkstk_darwin(v1);
  v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  v6 = &v11[-v5];
  v7 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_mediator) + 56);
  swift_storeEnumTagMultiPayload(&v11[-v5], v8, 11);
  v9 = v7 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v7 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, v12, 0, 0);
  sub_100024F3C(v9, (uint64_t)v4);
  swift_beginAccess(v9, v11, 33, 0);
  swift_retain(v7);
  sub_100009DF8((uint64_t)v6, v9);
  swift_endAccess(v11);
  sub_10004C8A4((uint64_t)v4);
  sub_10004FCB8((uint64_t)v6, type metadata accessor for FMSelectedSection);
  sub_10004FCB8((uint64_t)v4, type metadata accessor for FMSelectedSection);
  *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  return result;
}

void sub_10044CED8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  NSString v15;
  uint64_t v16;

  v1 = type metadata accessor for FMIPDevice(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0 + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_deviceToRemove, v1);
  v6 = v5;
  v7 = FMIPDevice.name.getter();
  v9 = v8;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v10 = (uint64_t *)&v6[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceName];
  v11 = *(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceName + 8];
  *v10 = v7;
  v10[1] = v9;
  swift_bridgeObjectRelease(v11);
  v12 = *(void **)&v6[OBJC_IVAR____TtC6FindMy19FMActionLandingView_deviceNameLabel];
  v13 = v10[1];
  v14 = v12;
  if (v13)
  {
    swift_bridgeObjectRetain(v13);
    v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v13);
  }
  else
  {
    v15 = 0;
  }
  objc_msgSend(v12, "setText:", v15);

}

id sub_10044D054()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMRemoveDeviceViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10044D130()
{
  return type metadata accessor for FMRemoveDeviceViewController(0);
}

uint64_t type metadata accessor for FMRemoveDeviceViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1005E52D8;
  if (!qword_1005E52D8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMRemoveDeviceViewController);
  return result;
}

uint64_t sub_10044D174(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[7];

  v5[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for FMDeviceDetailViewModel(319);
  if (v3 <= 0x3F)
  {
    v5[1] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for FMIPDevice(319);
    if (v4 <= 0x3F)
    {
      v5[2] = *(_QWORD *)(result - 8) + 64;
      v5[3] = "\b";
      v5[4] = "\b";
      v5[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v5[6] = "\b";
      result = swift_updateClassMetadata2(a1, 256, 7, v5, a1 + 80);
      if (!result)
        return 0;
    }
  }
  return result;
}

id sub_10044D228(uint64_t a1, uint64_t a2)
{
  return sub_10044D268(a2);
}

uint64_t sub_10044D234(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(*(_QWORD *)(*v2 + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_landingView)
                 + OBJC_IVAR____TtC6FindMy19FMActionLandingView_scrollHandler);
  v4 = *v3;
  v5 = v3[1];
  *v3 = a1;
  v3[1] = a2;
  return sub_1000327F0(v4, v5);
}

id sub_10044D268(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  char v26;
  __n128 v27;
  uint64_t v28;

  v2 = v1;
  v4 = type metadata accessor for FMSelectedSection(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FMIPDevice(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v28 - v12;
  sub_100024F3C(a1, (uint64_t)v6);
  if (swift_getEnumCaseMultiPayload(v6, v4))
  {
    sub_10004FCB8((uint64_t)v6, type metadata accessor for FMSelectedSection);
    return objc_msgSend(v2, "dismissViewControllerAnimated:completion:", 1, 0);
  }
  v15 = (uint64_t)&v6[*(int *)(sub_100053F2C(&qword_1005DE9B0) + 48)];
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
  v16 = sub_1000051EC(v15, (uint64_t *)&unk_1005D3AA0);
  v17 = FMIPDevice.identifier.getter(v16);
  v19 = v18;
  v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, (uint64_t)v2 + OBJC_IVAR____TtC6FindMy28FMRemoveDeviceViewController_deviceToRemove, v7);
  v21 = FMIPDevice.identifier.getter(v20);
  v23 = v22;
  v24 = *(void (**)(char *, uint64_t))(v8 + 8);
  v24(v11, v7);
  if (v17 == v21 && v19 == v23)
  {
    swift_bridgeObjectRelease_n(v19, 2);
    return (id)((uint64_t (*)(char *, uint64_t))v24)(v13, v7);
  }
  else
  {
    v26 = _stringCompareWithSmolCheck(_:_:expecting:)(v17, v19, v21, v23, 0);
    swift_bridgeObjectRelease(v19);
    v27 = swift_bridgeObjectRelease(v23);
    result = (id)((uint64_t (*)(char *, uint64_t, __n128))v24)(v13, v7, v27);
    if ((v26 & 1) == 0)
      return objc_msgSend(v2, "dismissViewControllerAnimated:completion:", 1, 0);
  }
  return result;
}

uint64_t sub_10044D468()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v21 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v10 = (void *)static OS_dispatch_queue.main.getter(v9);
  v11 = swift_allocObject(&unk_100567200, 24, 7);
  *(_QWORD *)(v11 + 16) = v0;
  aBlock[4] = sub_10044D6A0;
  v23 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_100567218;
  v12 = _Block_copy(aBlock);
  v13 = v23;
  v14 = v1;
  swift_release(v13);
  static DispatchQoS.unspecified.getter(v15);
  aBlock[0] = _swiftEmptyArrayStorage;
  v16 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v17 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v18 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v17, v18, v2, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10044D67C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10044D6A0()
{
  sub_10044CED8();
}

void sub_10044D6C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;

  if (a1)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v2 = type metadata accessor for Logger(0);
    sub_100056D88(v2, (uint64_t)qword_1005F5748);
    swift_errorRetain(a1);
    v3 = swift_errorRetain(a1);
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.default.getter(v4);
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(12, -1);
      v7 = swift_slowAlloc(32, -1);
      v17 = a1;
      v18 = v7;
      *(_DWORD *)v6 = 136315138;
      swift_errorRetain(a1);
      v8 = sub_100053F2C(&qword_1005D7E40);
      v9 = String.init<A>(describing:)(&v17, v8);
      v11 = v10;
      v17 = sub_100056DA0(v9, v10, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18);
      swift_bridgeObjectRelease(v11);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMRemoveDeviceViewController: error forcing unpairing %s", v6, 0xCu);
      swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v7, -1, -1);
      swift_slowDealloc(v6, -1, -1);
    }
    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);
    }

    sub_10044C8F8();
  }
  else
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v12 = type metadata accessor for Logger(0);
    v13 = sub_100056D88(v12, (uint64_t)qword_1005F5748);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "FMRemoveDeviceViewController: succesfully forced unpairing", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }

    sub_10044CDA8();
  }
}

uint64_t sub_10044D944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for FMIPItemGroup(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v6 + 8, v5);
}

double sub_10044D9B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for FMIPItemGroup(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_10044C734(a1, v1 + v4, *(char **)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

double sub_10044DA08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10044CAEC(a3);
}

void sub_10044DA30(char a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMIPItemGroup(0) - 8) + 80);
  sub_10044B004(a1, *(void **)(v1 + 16), (v1 + ((v3 + 24) & ~v3)));
}

double sub_10044DA74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMIPItemGroup(0) - 8) + 80);
  return sub_10044B580(a1, *(char **)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_10044DAB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for FMIPItemGroup(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_10044DB2C(uint64_t a1, uint64_t a2, void **a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMIPItemGroup(0) - 8) + 80);
  sub_10044B88C(a1, a2, a3, *(id *)(v3 + 16), v3 + ((v7 + 24) & ~v7));
}

void sub_10044DB84()
{
  sub_10044C8F8();
}

void sub_10044DBA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_10044A4F8(a1, a2, a3, *(char **)(v3 + 16));
}

uint64_t sub_10044DBAC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10044DBD8()
{
  return sub_10044A2C8();
}

void sub_10044DBF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_100449588(a1, a2, a3, *(char **)(v3 + 16));
}

void sub_10044DC00(int a1)
{
  uint64_t v1;

  sub_10044AB04(a1, *(id *)(v1 + 16));
}

uint64_t sub_10044DC18()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10044DC3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for FMIPDevice(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = *(_QWORD *)(v2 + 64) + v4 + 1;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10044DCB4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10044DCD8(void **a1)
{
  uint64_t v1;

  sub_1004473F8(a1, v1);
}

char *sub_10044DD50(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  id v30;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    v35 = a2[1];
    *((_QWORD *)a1 + 1) = v35;
    *((_QWORD *)a1 + 2) = v8;
    v10 = a2[3];
    v9 = a2[4];
    *((_QWORD *)a1 + 3) = v10;
    *((_QWORD *)a1 + 4) = v9;
    v12 = a2[5];
    v11 = a2[6];
    *((_QWORD *)a1 + 5) = v12;
    *((_QWORD *)a1 + 6) = v11;
    v14 = a2[7];
    v13 = a2[8];
    *((_QWORD *)a1 + 7) = v14;
    *((_QWORD *)a1 + 8) = v13;
    v16 = a2[9];
    v15 = a2[10];
    *((_QWORD *)a1 + 9) = v16;
    *((_QWORD *)a1 + 10) = v15;
    v18 = a2[11];
    v17 = a2[12];
    *((_QWORD *)a1 + 11) = v18;
    *((_QWORD *)a1 + 12) = v17;
    a1[104] = *((_BYTE *)a2 + 104);
    v19 = a3[13];
    v33 = (uint64_t)a2 + v19;
    v34 = &a1[v19];
    v20 = type metadata accessor for Date(0);
    v32 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
    v21 = v4;
    v22 = v35;
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v12);
    swift_bridgeObjectRetain(v14);
    swift_bridgeObjectRetain(v16);
    swift_bridgeObjectRetain(v18);
    v32(v34, v33, v20);
    v23 = a3[14];
    v24 = a3[15];
    v25 = *(char **)((char *)a2 + v23);
    *(_QWORD *)&v7[v23] = v25;
    v26 = &v7[v24];
    v27 = (uint64_t)a2 + v24;
    v28 = type metadata accessor for PeopleListPersonRow.State(0);
    v29 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
    v30 = v25;
    v29(v26, v27, v28);
  }
  return v7;
}

uint64_t sub_10044DEB4(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 72));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 88));
  v4 = a1 + a2[13];
  v5 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

  v6 = a1 + a2[15];
  v7 = type metadata accessor for PeopleListPersonRow.State(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t sub_10044DF64(uint64_t a1, uint64_t a2, int *a3)
{
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  id v25;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;

  v6 = *(void **)a2;
  v5 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v10;
  v11 = *(_QWORD *)(a2 + 80);
  v12 = *(_QWORD *)(a2 + 88);
  v13 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v12;
  *(_QWORD *)(a1 + 96) = v13;
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v14 = a3[13];
  v28 = a2 + v14;
  v29 = a1 + v14;
  *(_QWORD *)(a1 + 80) = v11;
  v15 = type metadata accessor for Date(0);
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  v16 = v6;
  v17 = v5;
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRetain(v10);
  swift_bridgeObjectRetain(v12);
  v27(v29, v28, v15);
  v18 = a3[14];
  v19 = a3[15];
  v20 = *(void **)(a2 + v18);
  *(_QWORD *)(a1 + v18) = v20;
  v21 = a1 + v19;
  v22 = a2 + v19;
  v23 = type metadata accessor for PeopleListPersonRow.State(0);
  v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
  v25 = v20;
  v24(v21, v22, v23);
  return a1;
}

uint64_t sub_10044E09C(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  v9 = *(void **)(a1 + 8);
  v10 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v10;
  v11 = v10;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v12 = *(_QWORD *)(a2 + 24);
  v13 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v14 = *(_QWORD *)(a2 + 40);
  v15 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v16 = *(_QWORD *)(a2 + 56);
  v17 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v16;
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRelease(v17);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v18 = *(_QWORD *)(a2 + 72);
  v19 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 72) = v18;
  swift_bridgeObjectRetain(v18);
  swift_bridgeObjectRelease(v19);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v20 = *(_QWORD *)(a2 + 88);
  v21 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = v20;
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRelease(v21);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v22 = a3[13];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
  v26 = a3[14];
  v27 = *(void **)(a1 + v26);
  v28 = *(void **)(a2 + v26);
  *(_QWORD *)(a1 + v26) = v28;
  v29 = v28;

  v30 = a3[15];
  v31 = a1 + v30;
  v32 = a2 + v30;
  v33 = type metadata accessor for PeopleListPersonRow.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v31, v32, v33);
  return a1;
}

uint64_t sub_10044E21C(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  v8 = *(_OWORD *)(a2 + 64);
  v9 = *(_OWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v10 = a3[13];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_OWORD *)(a1 + 64) = v8;
  *(_OWORD *)(a1 + 80) = v9;
  v13 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = a3[15];
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = type metadata accessor for PeopleListPersonRow.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  return a1;
}

uint64_t sub_10044E2DC(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v10;
  swift_bridgeObjectRelease(v11);
  v12 = *(_QWORD *)(a2 + 56);
  v13 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v12;
  swift_bridgeObjectRelease(v13);
  v14 = *(_QWORD *)(a2 + 72);
  v15 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v14;
  swift_bridgeObjectRelease(v15);
  v16 = *(_QWORD *)(a2 + 88);
  v17 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v16;
  swift_bridgeObjectRelease(v17);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v18 = a3[13];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  v22 = a3[14];
  v23 = *(void **)(a1 + v22);
  *(_QWORD *)(a1 + v22) = *(_QWORD *)(a2 + v22);

  v24 = a3[15];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = type metadata accessor for PeopleListPersonRow.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 40))(v25, v26, v27);
  return a1;
}

uint64_t sub_10044E400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10044E40C);
}

uint64_t sub_10044E40C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 52);
    }
    else
    {
      v10 = type metadata accessor for PeopleListPersonRow.State(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 60);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_10044E4AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10044E4B8);
}

uint64_t sub_10044E4B8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for Date(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 52);
    }
    else
    {
      v10 = type metadata accessor for PeopleListPersonRow.State(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 60);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_10044E554@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, Swift::String *a5@<X4>, uint64_t a6@<X5>, Swift::String *a7@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t MyRelativeDate;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t MyRelative;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  void *v74;
  void *v75;
  id v76;
  Swift::String v77;
  Swift::String v78;
  Swift::String v79;
  double v80;
  id v81;
  Swift::String v82;
  Swift::String v83;
  Swift::String v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  NSString v88;
  NSString v89;
  id v90;
  uint64_t v91;
  void *v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  void *v98;
  char *v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  Swift::String *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t (*v106)(_QWORD, _QWORD, _QWORD);
  uint64_t v107;
  int v108;
  char *v109;
  void (*v110)(_QWORD, _QWORD, _QWORD);
  uint64_t v111;
  uint64_t v112;
  void *v113;
  NSString v114;
  NSString v115;
  id v116;
  void (**v117)(char *, Swift::String *);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t updated;
  __n128 v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t (*v137)(_QWORD, _QWORD, _QWORD);
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char v146;
  __n128 v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  __n128 v151;
  void (*v152)(_QWORD, _QWORD, _QWORD);
  int v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  int v159;
  uint64_t v160;
  uint64_t v161;
  NSObject *v162;
  os_log_type_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  unint64_t v169;
  __n128 v170;
  void (*v171)(_QWORD, _QWORD, __n128);
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  unint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  unsigned __int8 *v180;
  int v181;
  uint64_t v182;
  unint64_t v183;
  unint64_t v184;
  double v185;
  id v186;
  Swift::String v187;
  Swift::String v188;
  Swift::String v189;
  char v190;
  _BOOL4 v191;
  uint64_t v192;
  _QWORD *v193;
  _BOOL4 v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  double v206;
  id v207;
  Swift::String v208;
  Swift::String v209;
  Swift::String v210;
  uint64_t v211;
  _QWORD *v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  uint64_t v238;
  unsigned __int8 *v239;
  char *v240;
  char *v241;
  char *v242;
  char *v243;
  uint64_t v244;
  char *v245;
  uint64_t v246;
  char *v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  uint64_t *v252;
  unint64_t v253;
  uint64_t v254;
  char *v255;
  void (**object)(char *, Swift::String *);
  char *v257;
  unint64_t v258;
  unint64_t v259;
  Swift::String *v260;
  char *v261;
  unint64_t v262;
  char *v263;
  uint64_t v264;
  int v265;
  char *v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  char *v270;
  char *v271;
  char *v272;
  uint64_t v273;
  uint64_t v274;
  char *v275;
  uint64_t v276;
  Swift::String *v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  id v281;
  void *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  unint64_t v299;
  Swift::String v300;
  Swift::String v301;
  Swift::String v302;
  Swift::String v303;

  v276 = a6;
  v277 = a5;
  v265 = a3;
  v293 = a1;
  v294 = a2;
  v9 = sub_100053F2C((uint64_t *)&qword_1005D47B0);
  __chkstk_darwin(v9);
  v275 = (char *)&v239 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MyRelativeDate = type metadata accessor for FindMyRelativeDate(0);
  v287 = *(_QWORD *)(MyRelativeDate - 8);
  v288 = MyRelativeDate;
  __chkstk_darwin(MyRelativeDate);
  v247 = (char *)&v239 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100053F2C((uint64_t *)&qword_1005D47D8);
  __chkstk_darwin(v13);
  v271 = (char *)&v239 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for PeopleListPersonRow.State.ID(0);
  __chkstk_darwin(v15);
  v270 = (char *)&v239 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v274 = type metadata accessor for PeopleListPersonRow.State(0);
  v273 = *(_QWORD *)(v274 - 8);
  __chkstk_darwin(v274);
  v272 = (char *)&v239 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for FMFLocationAlert(0);
  v289 = *(_QWORD *)(v18 - 8);
  v290 = v18;
  v19 = __chkstk_darwin(v18);
  v266 = (char *)&v239 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v262 = v20;
  __chkstk_darwin(v19);
  v263 = (char *)&v239 - v21;
  v22 = sub_100053F2C((uint64_t *)&qword_1005D47A8);
  v23 = __chkstk_darwin(v22);
  v269 = (uint64_t)&v239 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v23);
  v268 = (uint64_t)&v239 - v26;
  v27 = __chkstk_darwin(v25);
  v286 = (uint64_t)&v239 - v28;
  __chkstk_darwin(v27);
  v285 = (uint64_t)&v239 - v29;
  v30 = type metadata accessor for FMFFriend(0);
  v31 = *(_QWORD *)(v30 - 8);
  v295 = v30;
  v296 = v31;
  v32 = __chkstk_darwin(v30);
  v255 = (char *)&v239 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v35 = (char *)&v239 - v34;
  v246 = sub_100053F2C((uint64_t *)&qword_1005D47D0);
  v36 = __chkstk_darwin(v246);
  v245 = (char *)&v239 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __chkstk_darwin(v36);
  v239 = (unsigned __int8 *)&v239 - v39;
  __chkstk_darwin(v38);
  v248 = (char *)&v239 - v40;
  v41 = sub_100053F2C(&qword_1005D3380);
  v42 = __chkstk_darwin(v41);
  v244 = (uint64_t)&v239 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __chkstk_darwin(v42);
  v279 = (uint64_t)&v239 - v45;
  v46 = __chkstk_darwin(v44);
  v252 = (uint64_t *)((char *)&v239 - v47);
  __chkstk_darwin(v46);
  v280 = (uint64_t)&v239 - v48;
  v49 = sub_100053F2C((uint64_t *)&qword_1005D47C0);
  v50 = __chkstk_darwin(v49);
  v267 = (uint64_t)&v239 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v50);
  v284 = (uint64_t)&v239 - v52;
  MyRelative = type metadata accessor for FindMyRelativeDate.RecencyKey(0);
  __chkstk_darwin(MyRelative);
  v243 = (char *)&v239 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_100053F2C((uint64_t *)&qword_1005D4830);
  v56 = __chkstk_darwin(v55);
  v264 = (uint64_t)&v239 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v56);
  v292 = (uint64_t)&v239 - v58;
  v59 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  v60 = __chkstk_darwin(v59);
  v249 = (uint64_t)&v239 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __chkstk_darwin(v60);
  v251 = (char *)&v239 - v63;
  __chkstk_darwin(v62);
  v261 = (char *)&v239 - v64;
  v250 = type metadata accessor for Date(0);
  v278 = *(_QWORD *)(v250 - 8);
  v65 = __chkstk_darwin(v250);
  v242 = (char *)&v239 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __chkstk_darwin(v65);
  v241 = (char *)&v239 - v68;
  __chkstk_darwin(v67);
  v257 = (char *)&v239 - v69;
  v260 = (Swift::String *)type metadata accessor for UUID(0);
  object = (void (**)(char *, Swift::String *))v260[-1]._object;
  v70 = __chkstk_darwin(v260);
  v240 = (char *)&v239 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  a7->_countAndFlagsBits = 0;
  a7->_object = 0;
  v291 = a4;
  v72 = FMFFriend.name.getter(v70);
  v74 = v73;
  v298 = 0;
  v299 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v299);
  v75 = (void *)objc_opt_self(NSBundle);
  v76 = objc_msgSend(v75, "mainBundle");
  v300._countAndFlagsBits = 0xD000000000000025;
  v254 = (uint64_t)"FENCE_REQUEST_ALLOW";
  v300._object = (void *)0x80000001004C7F10;
  v253 = (unint64_t)"ewController.swift";
  v77._object = (void *)0x80000001004C7EF0;
  v77._countAndFlagsBits = 0xD000000000000013;
  v78._countAndFlagsBits = 0;
  v78._object = (void *)0xE000000000000000;
  v79 = NSLocalizedString(_:tableName:bundle:value:comment:)(v77, (Swift::String_optional)0, (NSBundle)v76, v78, v300);

  a7[2] = v79;
  v298 = 0;
  v299 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  *(_QWORD *)&v80 = swift_bridgeObjectRelease(v299).n128_u64[0];
  v281 = v75;
  v81 = objc_msgSend(v75, "mainBundle", v80);
  v82._countAndFlagsBits = 0xD000000000000018;
  v301._countAndFlagsBits = 0xD00000000000002ALL;
  v259 = (unint64_t)"FENCE_REQUEST_DONT_ALLOW";
  v301._object = (void *)0x80000001004C7F60;
  v258 = (unint64_t)"g FENCE_REQUEST_ALLOW";
  v82._object = (void *)0x80000001004C7F40;
  v83._countAndFlagsBits = 0;
  v83._object = (void *)0xE000000000000000;
  v84 = NSLocalizedString(_:tableName:bundle:value:comment:)(v82, (Swift::String_optional)0, (NSBundle)v81, v83, v301);

  a7[3] = v84;
  sub_100230104();
  v86 = v85;
  v87 = (void *)FMFLocationAlert.fence.getter();
  v88 = String._bridgeToObjectiveC()();
  v89 = String._bridgeToObjectiveC()();
  v90 = objc_msgSend(v87, "localizedRequestNotificationStringForFollower:locationName:", v88, v89);

  v91 = static String._unconditionallyBridgeFromObjectiveC(_:)(v90);
  v93 = v92;
  swift_bridgeObjectRelease(v86);

  a7[4]._countAndFlagsBits = v91;
  a7[4]._object = v93;
  v282 = v74;
  v283 = v72;
  a7[5]._countAndFlagsBits = v72;
  a7[5]._object = v74;
  v94 = swift_bridgeObjectRetain(v74);
  v95 = FMFLocationAlert.identifier.getter(v94);
  if (v96)
  {
    v97 = v95;
    v98 = v96;
  }
  else
  {
    v99 = v240;
    v100 = UUID.init()(v95);
    v97 = UUID.uuidString.getter(v100);
    v98 = v101;
    object[1](v99, v260);
  }
  a7[1]._countAndFlagsBits = v97;
  a7[1]._object = v98;
  v102 = type metadata accessor for FMAllowLocationAlertCellViewModel(0);
  v103 = v277;
  *(uint64_t *)((char *)&a7->_countAndFlagsBits + *(int *)(v102 + 56)) = (uint64_t)v277;
  v260 = v103;
  v104 = (uint64_t)v261;
  FMFLocationAlert.updateTimestamp.getter();
  v105 = v278;
  v106 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v278 + 48);
  v107 = v250;
  v108 = v106(v104, 1, v250);
  v109 = v257;
  if (v108 == 1)
  {
    static Date.distantFuture.getter();
    sub_1000051EC(v104, (uint64_t *)&unk_1005D3320);
    v110 = *(void (**)(_QWORD, _QWORD, _QWORD))(v105 + 32);
  }
  else
  {
    v110 = *(void (**)(_QWORD, _QWORD, _QWORD))(v105 + 32);
    v110(v257, v104, v107);
  }
  v261 = (char *)v102;
  v110((char *)a7 + *(int *)(v102 + 52), v109, v107);
  a7[6]._countAndFlagsBits = 0x4043000000000000;
  v277 = a7;
  LOBYTE(a7[6]._object) = 0;
  sub_100230104();
  v112 = v111;
  v113 = (void *)FMFLocationAlert.fence.getter();
  v114 = String._bridgeToObjectiveC()();
  v115 = String._bridgeToObjectiveC()();
  v116 = objc_msgSend(v113, "localizedRequestNotificationStringForFollower:locationName:", v114, v115);

  v257 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v116);
  object = v117;
  swift_bridgeObjectRelease(v112);

  v118 = static PublishedLocation.Constants.generalTimestampRecencyDuration.getter();
  v119 = static Duration.seconds(_:)(v118);
  v120 = (uint64_t)v251;
  FMFLocationAlert.updateTimestamp.getter();
  v121 = v249;
  sub_100007464(v120, v249, (uint64_t *)&unk_1005D3320);
  v122 = 1;
  if (v106(v121, 1, v107) != 1)
  {
    v123 = v241;
    v110(v241, v121, v107);
    v124 = v278;
    v125 = v242;
    (*(void (**)(char *, char *, uint64_t))(v278 + 16))(v242, v123, v107);
    v126 = v243;
    static FindMyRelativeDate.RecencyKey.now(recencyDuration:)(v119);
    FindMyRelativeDate.init(date:recencyKey:)(v125, v126);
    (*(void (**)(char *, uint64_t))(v124 + 8))(v123, v107);
    v122 = 0;
  }
  v127 = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v287 + 56))(v292, v122, 1, v288);
  sub_1000051EC(v120, (uint64_t *)&unk_1005D3320);
  v128 = type metadata accessor for PeopleListPersonRow.State.DetailOrProgress(0);
  v129 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 56))(v284, 1, 1, v128);
  updated = dispatch thunk of FMFManager.pendingUpdateFriends.getter(v129);
  v132 = updated;
  v133 = *(_QWORD *)(updated + 16);
  v134 = v295;
  if (v133)
  {
    v135 = updated + ((*(unsigned __int8 *)(v296 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v296 + 80));
    v136 = *(_QWORD *)(v296 + 72);
    v137 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v296 + 16);
    swift_bridgeObjectRetain(updated);
    v138 = v291;
    while (1)
    {
      v139 = v137(v35, v135, v134);
      v140 = FMFFriend.identifier.getter(v139);
      v142 = v141;
      v144 = FMFFriend.identifier.getter(v140);
      v145 = v143;
      if (v140 == v144 && v142 == v143)
      {
        swift_bridgeObjectRelease(v132);
        swift_bridgeObjectRelease(v142);
        goto LABEL_20;
      }
      v146 = _stringCompareWithSmolCheck(_:_:expecting:)(v140, v142, v144, v143, 0);
      swift_bridgeObjectRelease(v142);
      v147 = swift_bridgeObjectRelease(v145);
      if ((v146 & 1) != 0)
        break;
      v134 = v295;
      (*(void (**)(char *, uint64_t, __n128))(v296 + 8))(v35, v295, v147);
      v135 += v136;
      if (!--v133)
      {
        v131 = swift_bridgeObjectRelease(v132);
        v127 = 1;
        goto LABEL_17;
      }
    }
    v142 = v132;
LABEL_20:
    v150 = (uint64_t)v248;
    v151 = swift_bridgeObjectRelease(v142);
    v134 = v295;
    v148 = v296;
    v149 = v280;
    (*(void (**)(uint64_t, char *, uint64_t, __n128))(v296 + 32))(v280, v35, v295, v151);
    v127 = 0;
  }
  else
  {
    v138 = v291;
LABEL_17:
    v148 = v296;
    v149 = v280;
    v150 = (uint64_t)v248;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v148 + 56))(v149, v127, 1, v134, v131);
  swift_bridgeObjectRelease(v132);
  v152 = (void (*)(_QWORD, _QWORD, _QWORD))v252;
  sub_100007464(v149, (uint64_t)v252, &qword_1005D3380);
  v251 = *(char **)(v148 + 48);
  v153 = ((uint64_t (*)(_QWORD, uint64_t, uint64_t))v251)(v152, 1, v134);
  v154 = v279;
  v155 = v255;
  if (v153 == 1)
  {
    sub_1000051EC((uint64_t)v152, &qword_1005D3380);
    v156 = type metadata accessor for FMFPendingUpdateReason(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v156 - 8) + 56))(v150, 1, 1, v156);
LABEL_24:
    v159 = 2;
    goto LABEL_25;
  }
  FMFFriend.pendingUpdateReason.getter();
  (*(void (**)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t))(v148 + 8))(v152, v134);
  v157 = type metadata accessor for FMFPendingUpdateReason(0);
  v158 = *(_QWORD *)(v157 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v158 + 48))(v150, 1, v157) == 1)
    goto LABEL_24;
  v180 = v239;
  sub_100007464(v150, (uint64_t)v239, (uint64_t *)&qword_1005D47D0);
  v181 = (*(uint64_t (**)(unsigned __int8 *, uint64_t))(v158 + 88))(v180, v157);
  if (v181 == enum case for FMFPendingUpdateReason.respondToInvite(_:))
  {
    (*(void (**)(unsigned __int8 *, uint64_t))(v158 + 96))(v180, v157);
    v159 = *v180;
  }
  else
  {
    if (v181 != enum case for FMFPendingUpdateReason.startSharing(_:))
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v158 + 8))(v180, v157);
      goto LABEL_24;
    }
    v159 = 1;
  }
LABEL_25:
  LODWORD(v278) = v159;
  sub_1000051EC(v150, (uint64_t *)&qword_1005D47D0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v160 = type metadata accessor for Logger(0);
  sub_100056D88(v160, (uint64_t)qword_1005F5748);
  (*(void (**)(char *, uint64_t, uint64_t))(v148 + 16))(v155, v138, v134);
  v161 = sub_100007464(v149, v154, &qword_1005D3380);
  v162 = Logger.logObject.getter(v161);
  v163 = static os_log_type_t.default.getter(v162);
  if (os_log_type_enabled(v162, v163))
  {
    v164 = v134;
    v165 = swift_slowAlloc(32, -1);
    v166 = swift_slowAlloc(96, -1);
    v298 = v166;
    *(_DWORD *)v165 = 136315650;
    v167 = FMFFriend.name.getter(v166);
    v169 = v168;
    v297 = sub_100056DA0(v167, v168, &v298);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v297, &v298);
    v170 = swift_bridgeObjectRelease(v169);
    v171 = *(void (**)(_QWORD, _QWORD, __n128))(v148 + 8);
    v171(v155, v164, v170);
    *(_WORD *)(v165 + 12) = 2080;
    LOBYTE(v297) = v278;
    v172 = sub_100053F2C((uint64_t *)&unk_1005E3AE0);
    v173 = String.init<A>(describing:)(&v297, v172);
    v175 = v174;
    v297 = sub_100056DA0(v173, v174, &v298);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v297, &v298);
    swift_bridgeObjectRelease(v175);
    *(_WORD *)(v165 + 22) = 2080;
    v176 = v279;
    v177 = v244;
    sub_100007464(v279, v244, &qword_1005D3380);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v251)(v177, 1, v164) == 1)
    {
      sub_1000051EC(v177, &qword_1005D3380);
      v178 = type metadata accessor for FMFPendingUpdateReason(0);
      v179 = v245;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v178 - 8) + 56))(v245, 1, 1, v178);
    }
    else
    {
      v179 = v245;
      FMFFriend.pendingUpdateReason.getter();
      ((void (*)(uint64_t, uint64_t))v171)(v177, v164);
    }
    v182 = String.init<A>(describing:)(v179, v246);
    v184 = v183;
    v297 = sub_100056DA0(v182, v183, &v298);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v297, &v298);
    swift_bridgeObjectRelease(v184);
    sub_1000051EC(v176, &qword_1005D3380);
    _os_log_impl((void *)&_mh_execute_header, v162, v163, "FMAllowLocationAlertCellViewModel: %s %s, %s", (uint8_t *)v165, 0x20u);
    swift_arrayDestroy(v166, 3, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v166, -1, -1);
    swift_slowDealloc(v165, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v148 + 8))(v155, v134);
    sub_1000051EC(v154, &qword_1005D3380);
  }

  v298 = 0;
  v299 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  *(_QWORD *)&v185 = swift_bridgeObjectRelease(v299).n128_u64[0];
  v186 = objc_msgSend(v281, "mainBundle", v185);
  v302._countAndFlagsBits = 0xD000000000000025;
  v302._object = (void *)(v254 | 0x8000000000000000);
  v187._object = (void *)(v253 | 0x8000000000000000);
  v187._countAndFlagsBits = 0xD000000000000013;
  v188._countAndFlagsBits = 0;
  v188._object = (void *)0xE000000000000000;
  v189 = NSLocalizedString(_:tableName:bundle:value:comment:)(v187, (Swift::String_optional)0, (NSBundle)v186, v188, v302);

  v190 = v278;
  v191 = v278 != 2;
  v255 = (char *)sub_100053F2C((uint64_t *)&qword_1005D47F0);
  v192 = v285;
  v193 = (_QWORD *)(v285 + *((int *)v255 + 12));
  v265 &= 1u;
  v194 = (v190 & 1) == 0 && v191;
  LODWORD(v279) = v194;
  GenericControl.Info.Label.init(title:symbol:forceStyleProminent:forceInProgressState:forceDisabledState:)(v189._countAndFlagsBits, v189._object, 0, 0, 1, v190 & 1);
  v195 = swift_allocObject(&unk_1005677B0, 24, 7);
  swift_weakInit(v195 + 16, v293);
  v196 = v289;
  v278 = *(_QWORD *)(v289 + 16);
  v197 = v263;
  v198 = v290;
  ((void (*)(char *, uint64_t, uint64_t))v278)(v263, v294, v290);
  v199 = *(unsigned __int8 *)(v196 + 80);
  v200 = (v199 + 16) & ~v199;
  v254 = v199 | 7;
  v201 = (v262 + v200 + 7) & 0xFFFFFFFFFFFFFFF8;
  v262 = v201;
  v202 = swift_allocObject(&unk_1005677D8, v201 + 8, v199 | 7);
  v253 = *(_QWORD *)(v196 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v253)(v202 + v200, v197, v198);
  *(_QWORD *)(v202 + v201) = v195;
  *v193 = &unk_1005E53E8;
  v193[1] = v202;
  v203 = enum case for GenericControl.Info.button(_:);
  LODWORD(v263) = enum case for GenericControl.Info.button(_:);
  v204 = type metadata accessor for GenericControl.Info(0);
  v205 = *(_QWORD *)(v204 - 8);
  v252 = *(uint64_t **)(v205 + 104);
  ((void (*)(uint64_t, uint64_t, uint64_t))v252)(v192, v203, v204);
  v251 = *(char **)(v205 + 56);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v251)(v192, 0, 1, v204);
  v298 = 0;
  v299 = 0xE000000000000000;
  swift_retain(v195);
  _StringGuts.grow(_:)(20);
  *(_QWORD *)&v206 = swift_bridgeObjectRelease(v299).n128_u64[0];
  v207 = objc_msgSend(v281, "mainBundle", v206);
  v208._countAndFlagsBits = 0xD000000000000018;
  v303._countAndFlagsBits = 0xD00000000000002ALL;
  v303._object = (void *)(v259 | 0x8000000000000000);
  v208._object = (void *)(v258 | 0x8000000000000000);
  v209._countAndFlagsBits = 0;
  v209._object = (void *)0xE000000000000000;
  v210 = NSLocalizedString(_:tableName:bundle:value:comment:)(v208, (Swift::String_optional)0, (NSBundle)v207, v209, v303);

  v211 = v286;
  v212 = (_QWORD *)(v286 + *((int *)v255 + 12));
  GenericControl.Info.Label.init(title:symbol:forceStyleProminent:forceInProgressState:forceDisabledState:)(v210._countAndFlagsBits, v210._object, 0, 0, 0, v279);
  v213 = swift_allocObject(&unk_1005677B0, 24, 7);
  swift_weakInit(v213 + 16, v293);
  v214 = v266;
  ((void (*)(char *, uint64_t, uint64_t))v278)(v266, v294, v198);
  v215 = swift_allocObject(&unk_100567800, v201 + 8, v254);
  ((void (*)(uint64_t, char *, uint64_t))v253)(v215 + v200, v214, v198);
  *(_QWORD *)(v215 + v262) = v213;
  *v212 = &unk_1005E53F8;
  v212[1] = v215;
  ((void (*)(uint64_t, _QWORD, uint64_t))v252)(v211, v263, v204);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v251)(v211, 0, 1, v204);
  swift_release(v195);
  v217 = FMFFriend.identifier.getter(v216);
  v218 = v270;
  PeopleListPersonRow.State.ID.init(rawValue:)(v217);
  v219 = v264;
  sub_100007464(v292, v264, (uint64_t *)&qword_1005D4830);
  v221 = v287;
  v220 = v288;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v287 + 48))(v219, 1, v288) == 1)
  {
    v222 = type metadata accessor for PeopleListPersonRow.State.RelativeDateOrString(0);
    v223 = v271;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v222 - 8) + 56))(v271, 1, 1, v222);
  }
  else
  {
    v224 = v247;
    (*(void (**)(char *, uint64_t, uint64_t))(v221 + 32))(v247, v219, v220);
    v223 = v271;
    (*(void (**)(char *, char *, uint64_t))(v221 + 16))(v271, v224, v220);
    v225 = enum case for PeopleListPersonRow.State.RelativeDateOrString.date(_:);
    v226 = type metadata accessor for PeopleListPersonRow.State.RelativeDateOrString(0);
    v227 = *(_QWORD *)(v226 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v227 + 104))(v223, v225, v226);
    (*(void (**)(char *, uint64_t))(v221 + 8))(v224, v220);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v227 + 56))(v223, 0, 1, v226);
  }
  v228 = v284;
  v229 = v267;
  sub_100007464(v284, v267, (uint64_t *)&qword_1005D47C0);
  v230 = type metadata accessor for Badge(0);
  v231 = v275;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v230 - 8) + 56))(v275, 1, 1, v230);
  v232 = v285;
  v233 = v268;
  sub_100007464(v285, v268, (uint64_t *)&qword_1005D47A8);
  v234 = v286;
  v235 = v269;
  sub_100007464(v286, v269, (uint64_t *)&qword_1005D47A8);
  v238 = v235;
  v236 = v272;
  PeopleListPersonRow.State.init(id:title:subtitle:subtitleExtra:detailOrProgress:badge:contact:primaryControl:secondaryControl:)(v218, v283, v282, v257, object, v223, v229, v231, v276, v233, v238);
  swift_release(v293);

  (*(void (**)(uint64_t, uint64_t))(v289 + 8))(v294, v290);
  sub_1000051EC(v234, (uint64_t *)&qword_1005D47A8);
  sub_1000051EC(v232, (uint64_t *)&qword_1005D47A8);
  sub_1000051EC(v280, &qword_1005D3380);
  sub_1000051EC(v228, (uint64_t *)&qword_1005D47C0);
  sub_1000051EC(v292, (uint64_t *)&qword_1005D4830);
  (*(void (**)(uint64_t, uint64_t))(v296 + 8))(v291, v295);
  return (*(uint64_t (**)(char *, char *, uint64_t))(v273 + 32))((char *)v277 + *((int *)v261 + 15), v236, v274);
}

uint64_t sub_10044FCF8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2[5] = a1;
  v2[6] = a2;
  v3 = type metadata accessor for ContinuousClock(0);
  v2[7] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[8] = v4;
  v2[9] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100053F2C((uint64_t *)&unk_1005DF470);
  v2[10] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100053F2C((uint64_t *)&unk_1005D3330);
  v2[11] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100053F2C((uint64_t *)&unk_1005DF480);
  v2[12] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v7 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100053F2C(&qword_1005D3370);
  v2[13] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v8 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FMFLocationAlert(0);
  v2[14] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v2[15] = v10;
  v2[16] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for MainActor(0);
  v2[17] = static MainActor.shared.getter(v11);
  v12 = dispatch thunk of Actor.unownedExecutor.getter(v11, &protocol witness table for MainActor);
  v2[18] = v12;
  v2[19] = v13;
  return swift_task_switch(sub_10044FE44, v12, v13);
}

uint64_t sub_10044FE44()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t Strong;
  __n128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100056D88(v1, (uint64_t)qword_1005F5748);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FMPeopleListDataSource: new handleAllowFenceRequest()", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v6 = v0[15];
  v7 = v0[16];
  v8 = v0[13];
  v9 = v0[14];
  v10 = v0[12];
  v30 = v0[11];
  v11 = v0[10];
  v13 = v0[5];
  v12 = v0[6];

  v14 = v12 + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v7, v13, v9);
  v15 = type metadata accessor for FMFAddress(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v8, 1, 1, v15);
  v16 = type metadata accessor for FMFLocationAlertTriggerType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v10, 1, 1, v16);
  v17 = type metadata accessor for FMFSchedule(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v30, 1, 1, v17);
  v18 = enum case for FMFLocationAlertAcceptanceStatus.accepted(_:);
  v19 = type metadata accessor for FMFLocationAlertAcceptanceStatus(0);
  v20 = *(_QWORD *)(v19 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 104))(v11, v18, v19);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56))(v11, 0, 1, v19);
  v21 = type metadata accessor for FMFUpdateLocationAlertAction(0);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  v22 = FMFUpdateLocationAlertAction.init(locationAlert:location:radius:address:label:triggerType:isOn:repeating:phoneNumbers:emails:schedule:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:)(v7, 0, 0, 1, v8, 0, 0, v10, 514, 0, 0, v30, 0, 0, 0, 0, v11);
  v0[20] = v22;
  swift_beginAccess(v14, v0 + 2, 0, 0);
  Strong = swift_weakLoadStrong(v14);
  if (Strong)
  {
    v25 = Strong;
    v26 = *(_QWORD *)(Strong + 48);
    swift_retain(v26);
    swift_release(v25);
    v27 = *(_QWORD *)(v26 + 56);
    swift_retain(v27);
    swift_release(v26);
    sub_1000D421C(v22, (uint64_t)sub_100450284, 0);
    v24 = swift_release(v27);
  }
  ContinuousClock.init()(v24);
  v31 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1005E5400 + dword_1005E5400);
  v28 = (_QWORD *)swift_task_alloc(unk_1005E5404);
  v0[21] = v28;
  *v28 = v0;
  v28[1] = sub_100450154;
  return v31(0x8AC7230489E80000, 0, 0, 0, 1);
}

uint64_t sub_100450154()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 168));
  v4 = v2[8];
  v3 = v2[9];
  v5 = v2[7];
  if (v0)
  {
    swift_errorRelease(v0);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    v6 = v2[18];
    v7 = v2[19];
    v8 = sub_100451090;
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v4 + 8))(v2[9], v2[7]);
    v6 = v2[18];
    v7 = v2[19];
    v8 = sub_1004501F4;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_1004501F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  v6 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 136));
  swift_release(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v4);
  swift_task_dealloc(v5);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100450284(uint64_t a1, uint64_t a2)
{
  sub_100450650(a1, a2, "FMPeopleListDataSource: Allow location alert completed with status: %s, error: %s");
}

uint64_t sub_100450290(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2[5] = a1;
  v2[6] = a2;
  v3 = type metadata accessor for ContinuousClock(0);
  v2[7] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[8] = v4;
  v2[9] = swift_task_alloc((*(_QWORD *)(v4 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FMFLocationAlert(0);
  v2[10] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v2[11] = v6;
  v2[12] = swift_task_alloc((*(_QWORD *)(v6 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for MainActor(0);
  v2[13] = static MainActor.shared.getter(v7);
  v8 = dispatch thunk of Actor.unownedExecutor.getter(v7, &protocol witness table for MainActor);
  v2[14] = v8;
  v2[15] = v9;
  return swift_task_switch(sub_10045034C, v8, v9);
}

uint64_t sub_10045034C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t Strong;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v1 = type metadata accessor for Logger(0);
  v2 = sub_100056D88(v1, (uint64_t)qword_1005F5748);
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FMPeopleListDataSource: new handleDeclineFenceRequest()", v5, 2u);
    swift_slowDealloc(v5, -1, -1);
  }
  v7 = v0[11];
  v6 = v0[12];
  v8 = v0[10];
  v9 = v0[5];
  v10 = v0[6];

  v10 += 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v9, v8);
  v11 = type metadata accessor for FMFRemoveLocationAlertAction(0);
  swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  v12 = FMFRemoveLocationAlertAction.init(locationAlert:)(v6);
  v0[16] = v12;
  swift_beginAccess(v10, v0 + 2, 0, 0);
  Strong = swift_weakLoadStrong(v10);
  if (Strong)
  {
    v15 = Strong;
    v16 = *(_QWORD *)(Strong + 48);
    swift_retain(v16);
    swift_release(v15);
    v17 = *(_QWORD *)(v16 + 56);
    swift_retain(v17);
    swift_release(v16);
    sub_1000D421C(v12, (uint64_t)sub_100450644, 0);
    v14 = swift_release(v17);
  }
  ContinuousClock.init()(v14);
  v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1005E5400 + dword_1005E5400);
  v18 = (_QWORD *)swift_task_alloc(unk_1005E5404);
  v0[17] = v18;
  *v18 = v0;
  v18[1] = sub_10045054C;
  return v20(0x8AC7230489E80000, 0, 0, 0, 1);
}

uint64_t sub_10045054C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)();

  v2 = *(_QWORD **)v1;
  swift_task_dealloc(*(_QWORD *)(*(_QWORD *)v1 + 136));
  v4 = v2[8];
  v3 = v2[9];
  v5 = v2[7];
  if (v0)
  {
    swift_errorRelease(v0);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    v6 = v2[14];
    v7 = v2[15];
    v8 = sub_10045108C;
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v4 + 8))(v2[9], v2[7]);
    v6 = v2[14];
    v7 = v2[15];
    v8 = sub_1004505EC;
  }
  return swift_task_switch(v8, v6, v7);
}

uint64_t sub_1004505EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 72);
  swift_release(*(_QWORD *)(v0 + 104));
  swift_release(v1);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100450644(uint64_t a1, uint64_t a2)
{
  sub_100450650(a1, a2, "FMPeopleListDataSource: Decline location notification completed with status: %s, error: %s");
}

void sub_100450650(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  const char *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;

  v6 = type metadata accessor for FMFActionStatus(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v10 = type metadata accessor for Logger(0);
  sub_100056D88(v10, (uint64_t)qword_1005F5748);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  swift_errorRetain(a2);
  v11 = swift_errorRetain(a2);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc(22, -1);
    v15 = swift_slowAlloc(64, -1);
    v23 = a3;
    v24 = 0;
    v16 = v15;
    *(_DWORD *)v14 = 136315394;
    v25 = 0xE000000000000000;
    v26 = v15;
    _print_unlocked<A, B>(_:_:)(v9, &v24, v6, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v17 = v25;
    v24 = sub_100056DA0(v24, v25, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25);
    v18 = swift_bridgeObjectRelease(v17);
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v18);
    *(_WORD *)(v14 + 12) = 2080;
    v24 = a2;
    swift_errorRetain(a2);
    v19 = sub_100053F2C(&qword_1005D7E40);
    v20 = String.init<A>(describing:)(&v24, v19);
    v22 = v21;
    v24 = sub_100056DA0(v20, v21, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25);
    swift_bridgeObjectRelease(v22);
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, v23, (uint8_t *)v14, 0x16u);
    swift_arrayDestroy(v16, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_errorRelease(a2);
    swift_errorRelease(a2);
  }

}

uint64_t sub_1004508EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  Swift::UInt64 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;

  v2 = v1;
  v4 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    Hasher._combine(_:)(1u);
    v5 = v4;
    NSObject.hash(into:)(a1);

    v6 = *(void **)(v2 + 8);
    if (v6)
    {
LABEL_3:
      Hasher._combine(_:)(1u);
      v7 = v6;
      NSObject.hash(into:)(a1);

      goto LABEL_6;
    }
  }
  else
  {
    Hasher._combine(_:)(0);
    v6 = *(void **)(v1 + 8);
    if (v6)
      goto LABEL_3;
  }
  Hasher._combine(_:)(0);
LABEL_6:
  v8 = *(_QWORD *)(v2 + 16);
  v9 = *(_QWORD *)(v2 + 24);
  swift_bridgeObjectRetain(v9);
  String.hash(into:)(a1, v8, v9);
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(v2 + 40);
  if (v10)
  {
    v11 = *(_QWORD *)(v2 + 32);
    Hasher._combine(_:)(1u);
    swift_bridgeObjectRetain(v10);
    String.hash(into:)(a1, v11, v10);
    swift_bridgeObjectRelease(v10);
    v12 = *(_QWORD *)(v2 + 56);
    if (v12)
    {
LABEL_8:
      v13 = *(_QWORD *)(v2 + 48);
      Hasher._combine(_:)(1u);
      swift_bridgeObjectRetain(v12);
      String.hash(into:)(a1, v13, v12);
      swift_bridgeObjectRelease(v12);
      goto LABEL_11;
    }
  }
  else
  {
    Hasher._combine(_:)(0);
    v12 = *(_QWORD *)(v2 + 56);
    if (v12)
      goto LABEL_8;
  }
  Hasher._combine(_:)(0);
LABEL_11:
  v14 = *(_QWORD *)(v2 + 64);
  v15 = *(_QWORD *)(v2 + 72);
  swift_bridgeObjectRetain(v15);
  String.hash(into:)(a1, v14, v15);
  swift_bridgeObjectRelease(v15);
  v16 = *(_QWORD *)(v2 + 80);
  v17 = *(_QWORD *)(v2 + 88);
  swift_bridgeObjectRetain(v17);
  String.hash(into:)(a1, v16, v17);
  swift_bridgeObjectRelease(v17);
  if ((*(_QWORD *)(v2 + 96) & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v18 = *(_QWORD *)(v2 + 96);
  else
    v18 = 0;
  Hasher._combine(_:)(v18);
  Hasher._combine(_:)(*(_BYTE *)(v2 + 104));
  v19 = type metadata accessor for FMAllowLocationAlertCellViewModel(0);
  v20 = type metadata accessor for Date(0);
  v21 = sub_100008000(&qword_1005D4790, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  dispatch thunk of Hashable.hash(into:)(a1, v20, v21);
  v22 = *(void **)(v2 + *(int *)(v19 + 56));
  if (v22)
  {
    Hasher._combine(_:)(1u);
    v23 = v22;
    NSObject.hash(into:)(a1);

  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v24 = type metadata accessor for PeopleListPersonRow.State(0);
  v25 = sub_100008000(&qword_1005D4798, (uint64_t (*)(uint64_t))&type metadata accessor for PeopleListPersonRow.State, (uint64_t)&protocol conformance descriptor for PeopleListPersonRow.State);
  return dispatch thunk of Hashable.hash(into:)(a1, v24, v25);
}

void *sub_100450B74(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + *(int *)(a1 + 56));
  v3 = v2;
  return v2;
}

uint64_t sub_100450B9C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 72));
  return v1;
}

double sub_100450BC8()
{
  uint64_t v0;

  return *(double *)(v0 + 96);
}

uint64_t sub_100450BD0()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 104);
}

Swift::Int sub_100450BD8()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_1004508EC((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_100450C18(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_1004508EC((uint64_t)v2);
  return Hasher._finalize()();
}

uint64_t sub_100450C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  *(_QWORD *)(v6 + 56) = v5;
  v12 = type metadata accessor for ContinuousClock.Instant(0);
  *(_QWORD *)(v6 + 64) = v12;
  v13 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v6 + 72) = v13;
  v14 = (*(_QWORD *)(v13 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  *(_QWORD *)(v6 + 80) = swift_task_alloc(v14);
  *(_QWORD *)(v6 + 88) = swift_task_alloc(v14);
  *(_QWORD *)(v6 + 40) = a1;
  *(_QWORD *)(v6 + 48) = a2;
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  *(_BYTE *)(v6 + 32) = a5 & 1;
  return swift_task_switch(sub_100450CF4, 0, 0);
}

uint64_t sub_100450CF4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  _QWORD *v8;

  v1 = v0[10];
  v2 = v0[8];
  v3 = v0[9];
  v4 = type metadata accessor for ContinuousClock(0);
  v5 = sub_100008000(&qword_1005E5408, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock, (uint64_t)&protocol conformance descriptor for ContinuousClock);
  dispatch thunk of Clock.now.getter(v4, v5);
  v6 = sub_100008000((unint64_t *)&unk_1005E5410, (uint64_t (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant, (uint64_t)&protocol conformance descriptor for ContinuousClock.Instant);
  dispatch thunk of InstantProtocol.advanced(by:)(v0 + 5, v2, v6);
  v7 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v7;
  v7(v1, v2);
  v8 = (_QWORD *)swift_task_alloc(async function pointer to dispatch thunk of Clock.sleep(until:tolerance:)[1]);
  v0[13] = v8;
  *v8 = v0;
  v8[1] = sub_100450E0C;
  return dispatch thunk of Clock.sleep(until:tolerance:)(v0[11], v0 + 2, v4, v5);
}

uint64_t sub_100450E0C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v3 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  v2 = *(_QWORD *)(*v1 + 104);
  v4 = *(_QWORD *)(*v1 + 88);
  v5 = *(_QWORD *)(*v1 + 64);
  v6 = *v1;
  *(_QWORD *)(v6 + 112) = v0;
  swift_task_dealloc(v2);
  v3(v4, v5);
  if (v0)
    return swift_task_switch(sub_100450EB8, 0, 0);
  v8 = *(_QWORD *)(v6 + 80);
  swift_task_dealloc(*(_QWORD *)(v6 + 88));
  swift_task_dealloc(v8);
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_100450EB8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_task_dealloc(*(_QWORD *)(v0 + 88));
  swift_task_dealloc(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100450EF4()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100450F1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(type metadata accessor for FMFLocationAlert(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v0 + v3;
  v5 = *(_QWORD *)(v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8));
  v6 = (_QWORD *)swift_task_alloc(dword_1005E53E4);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_1000BBF58;
  return sub_10044FCF8(v4, v5);
}

uint64_t sub_100450F9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for FMFLocationAlert(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release(*(_QWORD *)(v0 + v6));
  return swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100451010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(type metadata accessor for FMFLocationAlert(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v0 + v3;
  v5 = *(_QWORD *)(v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8));
  v6 = (_QWORD *)swift_task_alloc(dword_1005E53F4);
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_1000C7978;
  return sub_100450290(v4, v5);
}

uint64_t sub_100451094(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;

  v24 = a3;
  v6 = sub_100053F2C(&qword_1005E5560);
  v25 = *(_QWORD *)(v6 - 8);
  v26 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100053F2C(a1);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100053F2C(a2);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v24 - v17;
  v19 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 112);
  v20 = sub_100053F2C(v24);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v18, 1, 1, v20);
  sub_100007464((uint64_t)v18, (uint64_t)v16, a2);
  Published.init(initialValue:)(v16, v13);
  sub_1000051EC((uint64_t)v18, a2);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v19, v12, v9);
  v21 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 120);
  v27 = sub_10011D6A8((uint64_t)_swiftEmptyArrayStorage);
  v22 = sub_100053F2C(qword_1005D6AB0);
  Published.init(initialValue:)(&v27, v22);
  (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v21, v8, v26);
  return v3;
}

uint64_t sub_100451268(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(uint64_t, uint64_t, uint64_t);
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;

  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100053F2C(a3);
  __chkstk_darwin(v12);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100053F2C(a4);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (uint64_t)&v18[*(int *)(v16 + 48)];
  sub_100007464(a1, (uint64_t)v18, a3);
  sub_100007464(a2, v19, a3);
  v20 = sub_100053F2C((uint64_t *)&unk_1005DEE00);
  v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48);
  if (v21((uint64_t)v18, 1, v20) == 1)
  {
    if (v21(v19, 1, v20) == 1)
    {
      v22 = -1;
    }
    else
    {
      a3 = a4;
      v22 = 0;
    }
  }
  else
  {
    sub_100007464((uint64_t)v18, (uint64_t)v14, a3);
    if (v21(v19, 1, v20) == 1)
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
      v22 = 0;
      a3 = a4;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v11, v19, v8);
      v22 = static UUID.== infix(_:_:)(v14, v11);
      v23 = *(void (**)(char *, uint64_t))(v9 + 8);
      v23(v11, v8);
      v23(v14, v8);
    }
  }
  sub_1000051EC((uint64_t)v18, a3);
  return v22 & 1;
}

id sub_100451460(uint64_t a1, void *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t ObjCClassFromMetadata;
  NSString v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  NSString v57;
  double v58;
  id v59;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;

  v70 = a1;
  v71 = a3;
  v68 = a2;
  v67 = sub_100053F2C(&qword_1005D6810);
  v64 = *(char **)(v67 - 8);
  v4 = __chkstk_darwin(v67);
  v69 = (uint64_t)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v65 = (uint64_t)&v61 - v6;
  v66 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v7 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = v3;
  v63 = *(_QWORD *)(qword_1005F4EC0 + (swift_isaMask & *v3) + 40);
  v61 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v16 = v3;
  static DispatchQoS.unspecified.getter(v16);
  v72 = _swiftEmptyArrayStorage;
  v17 = sub_100008000((unint64_t *)&unk_1005D3970, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v18 = sub_100053F2C((uint64_t *)&unk_1005D20F0);
  v19 = sub_10003F774((unint64_t *)&unk_1005D3980, (uint64_t *)&unk_1005D20F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v72, v18, v19, v10, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v66);
  v20 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000028, 0x80000001004C80D0, v15, v12, v9, 0);
  *(_QWORD *)((char *)v62 + v63) = v20;
  *((_BYTE *)v16 + *(_QWORD *)(qword_1005F4EC0 + (swift_isaMask & *v16) + 56)) = 1;
  v21 = sub_100053F2C(&qword_1005E5648);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  v22 = sub_100451094((uint64_t *)&unk_1005E5690, (uint64_t *)&unk_1005DEDE0, &qword_1005D6810);
  v23 = v71;
  *(_QWORD *)((char *)v16 + *(_QWORD *)(qword_1005F4EC0 + (swift_isaMask & *v16) + 32)) = v71;
  *(_QWORD *)((char *)v16 + *(_QWORD *)(qword_1005F4EC0 + (swift_isaMask & *v16) + 48)) = v22;
  swift_retain(v23);
  swift_retain_n(v22, 2);

  v68 = v68;
  v66 = v22;
  v24 = (id)UITableViewDiffableDataSource.init(tableView:cellProvider:)();
  sub_100452190();
  v25 = sub_100053F2C(&qword_1005E5650);
  v26 = *((_QWORD *)v64 + 9);
  v27 = v64[80];
  v28 = (v27 + 32) & ~v27;
  v29 = swift_allocObject(v25, v28 + 2 * v26, v27 | 7);
  *(_OWORD *)(v29 + 16) = xmmword_100481730;
  v30 = v29 + v28;
  v31 = sub_100053F2C((uint64_t *)&unk_1005DEE00);
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56);
  v34 = v33(v30, 1, 1, v31);
  v35 = v30 + v26;
  UUID.init()(v34);
  v33(v30 + v26, 0, 1, v31);
  swift_bridgeObjectRetain(v29);
  v36 = v65;
  sub_100007464(v30, v65, &qword_1005D6810);
  v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
  v38 = v36;
  if (v37(v36, 1, v31) == 1)
  {
    v39 = v36;
    v40 = type metadata accessor for FMAccessoryDiscoverySearchingCell();
  }
  else
  {
    v40 = type metadata accessor for FMAccessoryDiscoveryAccessoryCell();
    v41 = type metadata accessor for UUID(0);
    v39 = v38;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v38, v41);
  }
  v42 = v69;
  sub_100007464(v30, v69, &qword_1005D6810);
  v43 = v37(v42, 1, v31);
  v44 = ".beaconscanner.datasource";
  v64 = ".beaconscanner.datasource";
  if (v43 != 1)
  {
    v45 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v42, v45);
    v44 = ".addaccessory.datasource";
  }
  v46 = (unint64_t)v44 | 0x8000000000000000;
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v40);
  v48 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v49 = swift_bridgeObjectRelease(v46).n128_u64[0];
  objc_msgSend(v68, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v48, v49);

  sub_100007464(v35, v39, &qword_1005D6810);
  if (v37(v39, 1, v31) == 1)
  {
    v50 = type metadata accessor for FMAccessoryDiscoverySearchingCell();
  }
  else
  {
    v50 = type metadata accessor for FMAccessoryDiscoveryAccessoryCell();
    v51 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(v39, v51);
  }
  v52 = v69;
  sub_100007464(v35, v69, &qword_1005D6810);
  if (v37(v52, 1, v31) == 1)
  {
    v53 = v64;
  }
  else
  {
    v54 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v52, v54);
    v53 = ".addaccessory.datasource";
  }
  v55 = (unint64_t)v53 | 0x8000000000000000;
  v56 = swift_getObjCClassFromMetadata(v50);
  v57 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v58 = swift_bridgeObjectRelease(v55).n128_u64[0];
  v59 = v68;
  objc_msgSend(v68, "registerClass:forCellReuseIdentifier:", v56, v57, v58);
  swift_bridgeObjectRelease(v29);

  swift_setDeallocating(v29);
  swift_arrayDestroy(v30, *(_QWORD *)(v29 + 16), v67);
  swift_deallocClassInstance(v29, 32, 7);
  sub_100452D48(0);
  swift_release(v66);

  swift_release(v70);
  swift_release(v71);
  return v24;
}

id sub_100451AF8(uint64_t a1, void *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t ObjCClassFromMetadata;
  NSString v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  NSString v57;
  double v58;
  id v59;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;

  v70 = a1;
  v71 = a3;
  v68 = a2;
  v67 = sub_100053F2C(&qword_1005D6760);
  v64 = *(char **)(v67 - 8);
  v4 = __chkstk_darwin(v67);
  v69 = (uint64_t)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v65 = (uint64_t)&v61 - v6;
  v66 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v7 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = v3;
  v63 = *(_QWORD *)(qword_1005F4EC0 + (swift_isaMask & *v3) + 40);
  v61 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v16 = v3;
  static DispatchQoS.unspecified.getter(v16);
  v72 = _swiftEmptyArrayStorage;
  v17 = sub_100008000((unint64_t *)&unk_1005D3970, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v18 = sub_100053F2C((uint64_t *)&unk_1005D20F0);
  v19 = sub_10003F774((unint64_t *)&unk_1005D3980, (uint64_t *)&unk_1005D20F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v72, v18, v19, v10, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v66);
  v20 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000028, 0x80000001004C80D0, v15, v12, v9, 0);
  *(_QWORD *)((char *)v62 + v63) = v20;
  *((_BYTE *)v16 + *(_QWORD *)(qword_1005F4EC0 + (swift_isaMask & *v16) + 56)) = 1;
  v21 = sub_100053F2C(&qword_1005E5600);
  swift_allocObject(v21, *(unsigned int *)(v21 + 48), *(unsigned __int16 *)(v21 + 52));
  v22 = sub_100451094(&qword_1005E5510, (uint64_t *)&unk_1005E5488, &qword_1005D6760);
  v23 = v71;
  *(_QWORD *)((char *)v16 + *(_QWORD *)(qword_1005F4EC0 + (swift_isaMask & *v16) + 32)) = v71;
  *(_QWORD *)((char *)v16 + *(_QWORD *)(qword_1005F4EC0 + (swift_isaMask & *v16) + 48)) = v22;
  swift_retain(v23);
  swift_retain_n(v22, 2);

  v68 = v68;
  v66 = v22;
  v24 = (id)UITableViewDiffableDataSource.init(tableView:cellProvider:)();
  sub_100452454();
  v25 = sub_100053F2C((uint64_t *)&unk_1005E55E0);
  v26 = *((_QWORD *)v64 + 9);
  v27 = v64[80];
  v28 = (v27 + 32) & ~v27;
  v29 = swift_allocObject(v25, v28 + 2 * v26, v27 | 7);
  *(_OWORD *)(v29 + 16) = xmmword_100481730;
  v30 = v29 + v28;
  v31 = sub_100053F2C((uint64_t *)&unk_1005DEE00);
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56);
  v34 = v33(v30, 1, 1, v31);
  v35 = v30 + v26;
  UUID.init()(v34);
  v33(v30 + v26, 0, 1, v31);
  swift_bridgeObjectRetain(v29);
  v36 = v65;
  sub_100007464(v30, v65, &qword_1005D6760);
  v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
  v38 = v36;
  if (v37(v36, 1, v31) == 1)
  {
    v39 = v36;
    v40 = type metadata accessor for FMAccessoryDiscoverySearchingCell();
  }
  else
  {
    v40 = type metadata accessor for FMAccessoryDiscoveryAccessoryCell();
    v41 = type metadata accessor for UUID(0);
    v39 = v38;
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 8))(v38, v41);
  }
  v42 = v69;
  sub_100007464(v30, v69, &qword_1005D6760);
  v43 = v37(v42, 1, v31);
  v44 = ".beaconscanner.datasource";
  v64 = ".beaconscanner.datasource";
  if (v43 != 1)
  {
    v45 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v42, v45);
    v44 = ".addaccessory.datasource";
  }
  v46 = (unint64_t)v44 | 0x8000000000000000;
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v40);
  v48 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v49 = swift_bridgeObjectRelease(v46).n128_u64[0];
  objc_msgSend(v68, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v48, v49);

  sub_100007464(v35, v39, &qword_1005D6760);
  if (v37(v39, 1, v31) == 1)
  {
    v50 = type metadata accessor for FMAccessoryDiscoverySearchingCell();
  }
  else
  {
    v50 = type metadata accessor for FMAccessoryDiscoveryAccessoryCell();
    v51 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(v39, v51);
  }
  v52 = v69;
  sub_100007464(v35, v69, &qword_1005D6760);
  if (v37(v52, 1, v31) == 1)
  {
    v53 = v64;
  }
  else
  {
    v54 = type metadata accessor for UUID(0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v52, v54);
    v53 = ".addaccessory.datasource";
  }
  v55 = (unint64_t)v53 | 0x8000000000000000;
  v56 = swift_getObjCClassFromMetadata(v50);
  v57 = String._bridgeToObjectiveC()();
  *(_QWORD *)&v58 = swift_bridgeObjectRelease(v55).n128_u64[0];
  v59 = v68;
  objc_msgSend(v68, "registerClass:forCellReuseIdentifier:", v56, v57, v58);
  swift_bridgeObjectRelease(v29);

  swift_setDeallocating(v29);
  swift_arrayDestroy(v30, *(_QWORD *)(v29 + 16), v67);
  swift_deallocClassInstance(v29, 32, 7);
  sub_100453310(0);
  swift_release(v66);

  swift_release(v70);
  swift_release(v71);
  return v24;
}

void sub_100452190()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(_QWORD *, _QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_QWORD *, _QWORD);
  __n128 v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD v18[5];
  uint64_t v19;

  v1 = v0;
  v2 = swift_allocObject(&unk_100567CF8, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16);
  v3 = type metadata accessor for FMIPAccessoryDiscoveryController(0);
  v4 = sub_100008000((unint64_t *)&unk_1005DEDF0, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPAccessoryDiscoveryController, (uint64_t)&protocol conformance descriptor for FMIPAccessoryDiscoveryController);
  swift_retain(v2);
  v5 = (void (*)(_QWORD *, _QWORD))dispatch thunk of FMIPAccessoryDiscoveryControllerProtocol.callbacks.modify(v18, v3, v4);
  v6 = type metadata accessor for FMIPAccessoryDiscoveryController.Callbacks(0);
  v7 = sub_100008000(&qword_1005E5670, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPAccessoryDiscoveryController.Callbacks, (uint64_t)&protocol conformance descriptor for FMIPAccessoryDiscoveryController.Callbacks);
  dispatch thunk of FMIPAccessoryDiscoveryControllerCallbacks.discoveredAccessoriesCallback.setter(sub_100460BB4, v2, v6, v7);
  v5(v18, 0);
  swift_release(v2);
  v8 = swift_allocObject(&unk_100567CF8, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16);
  swift_retain(v8);
  v9 = (void (*)(_QWORD *, _QWORD))dispatch thunk of FMIPAccessoryDiscoveryControllerProtocol.callbacks.modify(v18, v3, v4);
  dispatch thunk of FMIPAccessoryDiscoveryControllerCallbacks.lostAccessoriesCallback.setter(sub_100460BBC, v8, v6, v7);
  v9(v18, 0);
  v10 = swift_release(v8);
  v11 = dispatch thunk of FMIPAccessoryDiscoveryControllerProtocol.discoveredAccessories.getter(v3, v4, v10);
  v12 = *(NSObject **)((char *)v1 + *(_QWORD *)(qword_1005F4EC0 + (swift_isaMask & *v1) + 40));
  v13 = swift_allocObject(&unk_100567D20, 32, 7);
  *(_QWORD *)(v13 + 16) = v11;
  *(_QWORD *)(v13 + 24) = v1;
  v14 = swift_allocObject(&unk_100567D48, 32, 7);
  *(_QWORD *)(v14 + 16) = sub_100460BC8;
  *(_QWORD *)(v14 + 24) = v13;
  v18[4] = sub_1001D60BC;
  v19 = v14;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_100021E38;
  v18[3] = &unk_100567D60;
  v15 = _Block_copy(v18);
  v16 = v19;
  swift_bridgeObjectRetain(v11);
  v17 = v1;
  swift_retain(v14);
  swift_release(v16);
  dispatch_sync(v12, v15);
  _Block_release(v15);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation(v14, "", 114, 227, 26, 1);
  swift_bridgeObjectRelease(v11);
  swift_release(v13);
  swift_release(v14);
  if ((v1 & 1) != 0)
    __break(1u);
}

void sub_100452454()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(_QWORD *, _QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_QWORD *, _QWORD);
  __n128 v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD v18[5];
  uint64_t v19;

  v1 = v0;
  v2 = swift_allocObject(&unk_100567A50, 24, 7);
  swift_unknownObjectWeakInit(v2 + 16);
  v3 = type metadata accessor for FMIPUnknownAccessoryDiscoveryController(0);
  v4 = sub_100008000(&qword_1005E5498, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPUnknownAccessoryDiscoveryController, (uint64_t)&protocol conformance descriptor for FMIPUnknownAccessoryDiscoveryController);
  swift_retain(v2);
  v5 = (void (*)(_QWORD *, _QWORD))dispatch thunk of FMIPAccessoryDiscoveryControllerProtocol.callbacks.modify(v18, v3, v4);
  v6 = type metadata accessor for FMIPUnknownAccessoryDiscoveryController.Callbacks(0);
  v7 = sub_100008000((unint64_t *)&unk_1005E5608, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPUnknownAccessoryDiscoveryController.Callbacks, (uint64_t)&protocol conformance descriptor for FMIPUnknownAccessoryDiscoveryController.Callbacks);
  dispatch thunk of FMIPAccessoryDiscoveryControllerCallbacks.discoveredAccessoriesCallback.setter(sub_100460A6C, v2, v6, v7);
  v5(v18, 0);
  swift_release(v2);
  v8 = swift_allocObject(&unk_100567A50, 24, 7);
  swift_unknownObjectWeakInit(v8 + 16);
  swift_retain(v8);
  v9 = (void (*)(_QWORD *, _QWORD))dispatch thunk of FMIPAccessoryDiscoveryControllerProtocol.callbacks.modify(v18, v3, v4);
  dispatch thunk of FMIPAccessoryDiscoveryControllerCallbacks.lostAccessoriesCallback.setter(sub_100460A74, v8, v6, v7);
  v9(v18, 0);
  v10 = swift_release(v8);
  v11 = dispatch thunk of FMIPAccessoryDiscoveryControllerProtocol.discoveredAccessories.getter(v3, v4, v10);
  v12 = *(NSObject **)((char *)v1 + *(_QWORD *)(qword_1005F4EC0 + (swift_isaMask & *v1) + 40));
  v13 = swift_allocObject(&unk_100567A78, 32, 7);
  *(_QWORD *)(v13 + 16) = v11;
  *(_QWORD *)(v13 + 24) = v1;
  v14 = swift_allocObject(&unk_100567AA0, 32, 7);
  *(_QWORD *)(v14 + 16) = sub_100460A80;
  *(_QWORD *)(v14 + 24) = v13;
  v18[4] = sub_100021E78;
  v19 = v14;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_100021E38;
  v18[3] = &unk_100567AB8;
  v15 = _Block_copy(v18);
  v16 = v19;
  swift_bridgeObjectRetain(v11);
  v17 = v1;
  swift_retain(v14);
  swift_release(v16);
  dispatch_sync(v12, v15);
  _Block_release(v15);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation(v14, "", 114, 227, 26, 1);
  swift_bridgeObjectRelease(v11);
  swift_release(v13);
  swift_release(v14);
  if ((v1 & 1) != 0)
    __break(1u);
}

void sub_100452718(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *Strong;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  _QWORD aBlock[5];
  uint64_t v13;
  char v14[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = *(NSObject **)((char *)Strong + *(_QWORD *)(qword_1005F4EC0 + (swift_isaMask & *Strong) + 40));
    v7 = swift_allocObject(&unk_100567F00, 32, 7);
    *(_QWORD *)(v7 + 16) = a1;
    *(_QWORD *)(v7 + 24) = v5;
    v8 = swift_allocObject(&unk_100567F28, 32, 7);
    *(_QWORD *)(v8 + 16) = sub_100460E08;
    *(_QWORD *)(v8 + 24) = v7;
    aBlock[4] = sub_1001D60BC;
    v13 = v8;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100021E38;
    aBlock[3] = &unk_100567F40;
    v9 = _Block_copy(aBlock);
    v10 = v13;
    swift_bridgeObjectRetain(a1);
    v11 = v5;
    swift_retain(v8);
    swift_release(v10);
    dispatch_sync(v6, v9);
    _Block_release(v9);
    LOBYTE(v5) = swift_isEscapingClosureAtFileLocation(v8, "", 114, 227, 26, 1);

    swift_release(v7);
    swift_release(v8);
    if ((v5 & 1) != 0)
      __break(1u);
  }
}

void sub_1004528A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *Strong;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  _QWORD aBlock[5];
  uint64_t v13;
  char v14[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = *(NSObject **)((char *)Strong + *(_QWORD *)(qword_1005F4EC0 + (swift_isaMask & *Strong) + 40));
    v7 = swift_allocObject(&unk_100567C80, 32, 7);
    *(_QWORD *)(v7 + 16) = a1;
    *(_QWORD *)(v7 + 24) = v5;
    v8 = swift_allocObject(&unk_100567CA8, 32, 7);
    *(_QWORD *)(v8 + 16) = sub_100460E04;
    *(_QWORD *)(v8 + 24) = v7;
    aBlock[4] = sub_1001D60BC;
    v13 = v8;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100021E38;
    aBlock[3] = &unk_100567CC0;
    v9 = _Block_copy(aBlock);
    v10 = v13;
    swift_bridgeObjectRetain(a1);
    v11 = v5;
    swift_retain(v8);
    swift_release(v10);
    dispatch_sync(v6, v9);
    _Block_release(v9);
    LOBYTE(v5) = swift_isEscapingClosureAtFileLocation(v8, "", 114, 227, 26, 1);

    swift_release(v7);
    swift_release(v8);
    if ((v5 & 1) != 0)
      __break(1u);
  }
}

void sub_100452A30(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *Strong;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  _QWORD aBlock[5];
  uint64_t v13;
  char v14[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = *(NSObject **)((char *)Strong + *(_QWORD *)(qword_1005F4EC0 + (swift_isaMask & *Strong) + 40));
    v7 = swift_allocObject(&unk_100567E60, 32, 7);
    *(_QWORD *)(v7 + 16) = a1;
    *(_QWORD *)(v7 + 24) = v5;
    v8 = swift_allocObject(&unk_100567E88, 32, 7);
    *(_QWORD *)(v8 + 16) = sub_100460DD8;
    *(_QWORD *)(v8 + 24) = v7;
    aBlock[4] = sub_1001D60BC;
    v13 = v8;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100021E38;
    aBlock[3] = &unk_100567EA0;
    v9 = _Block_copy(aBlock);
    v10 = v13;
    swift_bridgeObjectRetain(a1);
    v11 = v5;
    swift_retain(v8);
    swift_release(v10);
    dispatch_sync(v6, v9);
    _Block_release(v9);
    LOBYTE(v5) = swift_isEscapingClosureAtFileLocation(v8, "", 114, 258, 26, 1);

    swift_release(v7);
    swift_release(v8);
    if ((v5 & 1) != 0)
      __break(1u);
  }
}

void sub_100452BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *Strong;
  void *v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  _QWORD aBlock[5];
  uint64_t v13;
  char v14[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v14, 0, 0);
  Strong = (_QWORD *)swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = Strong;
    v6 = *(NSObject **)((char *)Strong + *(_QWORD *)(qword_1005F4EC0 + (swift_isaMask & *Strong) + 40));
    v7 = swift_allocObject(&unk_100567BE0, 32, 7);
    *(_QWORD *)(v7 + 16) = a1;
    *(_QWORD *)(v7 + 24) = v5;
    v8 = swift_allocObject(&unk_100567C08, 32, 7);
    *(_QWORD *)(v8 + 16) = sub_100460B48;
    *(_QWORD *)(v8 + 24) = v7;
    aBlock[4] = sub_1001D60BC;
    v13 = v8;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100021E38;
    aBlock[3] = &unk_100567C20;
    v9 = _Block_copy(aBlock);
    v10 = v13;
    swift_bridgeObjectRetain(a1);
    v11 = v5;
    swift_retain(v8);
    swift_release(v10);
    dispatch_sync(v6, v9);
    _Block_release(v9);
    LOBYTE(v5) = swift_isEscapingClosureAtFileLocation(v8, "", 114, 258, 26, 1);

    swift_release(v7);
    swift_release(v8);
    if ((v5 & 1) != 0)
      __break(1u);
  }
}

void sub_100452D48(int a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  int64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  __n128 v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  char *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;

  v2 = v1;
  v53 = a1;
  v3 = type metadata accessor for UUID(0);
  v56 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100053F2C(&qword_1005D6810);
  v55 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100053F2C(&qword_1005E5658);
  v51 = *(_QWORD *)(v9 - 8);
  v52 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchPredicate(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (uint64_t *)((char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  *v15 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  v16 = _dispatchPreconditionTest(_:)(v15);
  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  if ((v16 & 1) != 0)
  {
    v17 = sub_1004609B0();
    v18 = sub_10003F774((unint64_t *)&unk_1005E5660, &qword_1005D6810, (uint64_t)&unk_100484424);
    v49 = v11;
    v19 = NSDiffableDataSourceSnapshot.init()(&type metadata for FMAddAccessoryListSection, v6, v17, v18);
    v20 = *(_QWORD *)(qword_1005F4EC0 + (swift_isaMask & *v2) + 48);
    v50 = v2;
    v54 = *(_QWORD *)((char *)v2 + v20);
    __chkstk_darwin(v19);
    v21 = type metadata accessor for FMIPAccessoryDiscoveryController(0);
    *(&v47 - 4) = v21;
    v22 = sub_100008000((unint64_t *)&unk_1005DEDF0, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPAccessoryDiscoveryController, (uint64_t)&protocol conformance descriptor for FMIPAccessoryDiscoveryController);
    *(&v47 - 3) = v22;
    *(&v47 - 2) = (uint64_t)&off_100547138;
    *(&v47 - 1) = (uint64_t)&off_10054A518;
    KeyPath = swift_getKeyPath(&unk_100491BF0);
    __chkstk_darwin(KeyPath);
    *(&v47 - 4) = v21;
    *(&v47 - 3) = v22;
    *(&v47 - 2) = (uint64_t)&off_100547138;
    *(&v47 - 1) = (uint64_t)&off_10054A518;
    v24 = swift_getKeyPath(&unk_100491C28);
    static Published.subscript.getter(&v57, v54, KeyPath, v24);
    swift_release(KeyPath);
    swift_release(v24);
    v25 = v57;
    swift_bridgeObjectRetain(v57);
    v27 = sub_1003EF404(v26);
    swift_bridgeObjectRelease(v25);
    v57 = v27;
    sub_10045CD3C(&v57);
    swift_bridgeObjectRelease(v25);
    v28 = v57;
    v29 = v57[2];
    if (v29)
    {
      v57 = _swiftEmptyArrayStorage;
      sub_100111EB8(0, v29, 0);
      v30 = (*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
      v48 = v28;
      v31 = (char *)v28 + v30;
      v32 = *(_QWORD *)(v56 + 72);
      v33 = *(void (**)(char *, char *, uint64_t))(v56 + 16);
      v54 = v32;
      do
      {
        v33(v5, v31, v3);
        v33(v8, v5, v3);
        v34 = sub_100053F2C((uint64_t *)&unk_1005DEE00);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v8, 0, 1, v34);
        (*(void (**)(char *, uint64_t))(v56 + 8))(v5, v3);
        v35 = v57;
        if ((swift_isUniquelyReferenced_nonNull_native(v57) & 1) == 0)
        {
          sub_100111EB8(0, v35[2] + 1, 1);
          v32 = v54;
          v35 = v57;
        }
        v37 = v35[2];
        v36 = v35[3];
        if (v37 >= v36 >> 1)
        {
          sub_100111EB8(v36 > 1, v37 + 1, 1);
          v32 = v54;
          v35 = v57;
        }
        v35[2] = v37 + 1;
        sub_10005DAA0((uint64_t)v8, (uint64_t)v35+ ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80))+ *(_QWORD *)(v55 + 72) * v37, &qword_1005D6810);
        v31 += v32;
        --v29;
      }
      while (v29);
      swift_release(v48);
    }
    else
    {
      swift_release(v57);
      v35 = _swiftEmptyArrayStorage;
    }
    v38 = v52;
    v39 = v49;
    NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_10053F2C0);
    LOBYTE(v57) = 0;
    NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v35, &v57, v38);
    v40 = swift_bridgeObjectRelease(v35);
    v41 = v53;
    if ((*((_BYTE *)v50 + *(_QWORD *)(qword_1005F4EC0 + (swift_isaMask & *v50) + 56)) & 1) != 0)
    {
      v42 = sub_100053F2C(&qword_1005E5650);
      v43 = *(unsigned __int8 *)(v55 + 80);
      v44 = (v43 + 32) & ~v43;
      v45 = swift_allocObject(v42, v44 + *(_QWORD *)(v55 + 72), v43 | 7);
      *(_OWORD *)(v45 + 16) = xmmword_100481740;
      v46 = sub_100053F2C((uint64_t *)&unk_1005DEE00);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v45 + v44, 1, 1, v46);
      LOBYTE(v57) = 0;
      NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v45, &v57, v38);
      v40 = swift_bridgeObjectRelease(v45);
    }
    dispatch thunk of UITableViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v39, v41 & 1, 0, 0, v40);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v39, v38);
  }
  else
  {
    __break(1u);
    swift_release(v57);
    __break(1u);
  }
}

void sub_100453310(int a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  int64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  __n128 v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  char *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;

  v2 = v1;
  v53 = a1;
  v3 = type metadata accessor for UUID(0);
  v56 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100053F2C(&qword_1005D6760);
  v55 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100053F2C(&qword_1005E55C8);
  v51 = *(_QWORD *)(v9 - 8);
  v52 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchPredicate(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (uint64_t *)((char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  *v15 = static OS_dispatch_queue.main.getter();
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  v16 = _dispatchPreconditionTest(_:)(v15);
  (*(void (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  if ((v16 & 1) != 0)
  {
    v17 = sub_1004609B0();
    v18 = sub_10003F774(&qword_1005E55D8, &qword_1005D6760, (uint64_t)&unk_100484424);
    v49 = v11;
    v19 = NSDiffableDataSourceSnapshot.init()(&type metadata for FMAddAccessoryListSection, v6, v17, v18);
    v20 = *(_QWORD *)(qword_1005F4EC0 + (swift_isaMask & *v2) + 48);
    v50 = v2;
    v54 = *(_QWORD *)((char *)v2 + v20);
    __chkstk_darwin(v19);
    v21 = type metadata accessor for FMIPUnknownAccessoryDiscoveryController(0);
    *(&v47 - 4) = v21;
    v22 = sub_100008000(&qword_1005E5498, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPUnknownAccessoryDiscoveryController, (uint64_t)&protocol conformance descriptor for FMIPUnknownAccessoryDiscoveryController);
    *(&v47 - 3) = v22;
    *(&v47 - 2) = (uint64_t)&off_100547150;
    *(&v47 - 1) = (uint64_t)&off_10054A510;
    KeyPath = swift_getKeyPath(&unk_100491BF0);
    __chkstk_darwin(KeyPath);
    *(&v47 - 4) = v21;
    *(&v47 - 3) = v22;
    *(&v47 - 2) = (uint64_t)&off_100547150;
    *(&v47 - 1) = (uint64_t)&off_10054A510;
    v24 = swift_getKeyPath(&unk_100491C28);
    static Published.subscript.getter(&v57, v54, KeyPath, v24);
    swift_release(KeyPath);
    swift_release(v24);
    v25 = v57;
    swift_bridgeObjectRetain(v57);
    v27 = sub_1003EF404(v26);
    swift_bridgeObjectRelease(v25);
    v57 = v27;
    sub_10045CD3C(&v57);
    swift_bridgeObjectRelease(v25);
    v28 = v57;
    v29 = v57[2];
    if (v29)
    {
      v57 = _swiftEmptyArrayStorage;
      sub_100111EE4(0, v29, 0);
      v30 = (*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
      v48 = v28;
      v31 = (char *)v28 + v30;
      v32 = *(_QWORD *)(v56 + 72);
      v33 = *(void (**)(char *, char *, uint64_t))(v56 + 16);
      v54 = v32;
      do
      {
        v33(v5, v31, v3);
        v33(v8, v5, v3);
        v34 = sub_100053F2C((uint64_t *)&unk_1005DEE00);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v8, 0, 1, v34);
        (*(void (**)(char *, uint64_t))(v56 + 8))(v5, v3);
        v35 = v57;
        if ((swift_isUniquelyReferenced_nonNull_native(v57) & 1) == 0)
        {
          sub_100111EE4(0, v35[2] + 1, 1);
          v32 = v54;
          v35 = v57;
        }
        v37 = v35[2];
        v36 = v35[3];
        if (v37 >= v36 >> 1)
        {
          sub_100111EE4(v36 > 1, v37 + 1, 1);
          v32 = v54;
          v35 = v57;
        }
        v35[2] = v37 + 1;
        sub_10005DAA0((uint64_t)v8, (uint64_t)v35+ ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80))+ *(_QWORD *)(v55 + 72) * v37, &qword_1005D6760);
        v31 += v32;
        --v29;
      }
      while (v29);
      swift_release(v48);
    }
    else
    {
      swift_release(v57);
      v35 = _swiftEmptyArrayStorage;
    }
    v38 = v52;
    v39 = v49;
    NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_10053F2E8);
    LOBYTE(v57) = 0;
    NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v35, &v57, v38);
    v40 = swift_bridgeObjectRelease(v35);
    v41 = v53;
    if ((*((_BYTE *)v50 + *(_QWORD *)(qword_1005F4EC0 + (swift_isaMask & *v50) + 56)) & 1) != 0)
    {
      v42 = sub_100053F2C((uint64_t *)&unk_1005E55E0);
      v43 = *(unsigned __int8 *)(v55 + 80);
      v44 = (v43 + 32) & ~v43;
      v45 = swift_allocObject(v42, v44 + *(_QWORD *)(v55 + 72), v43 | 7);
      *(_OWORD *)(v45 + 16) = xmmword_100481740;
      v46 = sub_100053F2C((uint64_t *)&unk_1005DEE00);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v45 + v44, 1, 1, v46);
      LOBYTE(v57) = 0;
      NSDiffableDataSourceSnapshot.appendItems(_:toSection:)(v45, &v57, v38);
      v40 = swift_bridgeObjectRelease(v45);
    }
    dispatch thunk of UITableViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v39, v41 & 1, 0, 0, v40);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v39, v38);
  }
  else
  {
    __break(1u);
    swift_release(v57);
    __break(1u);
  }
}

uint64_t sub_1004538D8(uint64_t a1, _QWORD *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, void (*a6)(uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t result;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  Swift::OpaquePointer v32;
  __n128 v33;
  uint64_t *v34;
  uint64_t v35;
  void (*v36)(uint64_t);
  _BYTE v37[24];

  v36 = a6;
  v10 = sub_100053F2C(a3);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100053F2C(&qword_1005D33C0);
  __chkstk_darwin(v14);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100053F2C(a4);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1 += 16;
  swift_beginAccess(a1, v37, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a1);
  if (result)
  {
    v22 = (void *)result;
    v34 = a5;
    v35 = v11;
    v24 = a2[3];
    v23 = a2[4];
    sub_100029550(a2, v24);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v23);
    v25 = sub_100053F2C((uint64_t *)&unk_1005DEE00);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v20, 0, 1, v25);
    dispatch thunk of UITableViewDiffableDataSource.indexPath(for:)(v20);
    v26 = type metadata accessor for IndexPath(0);
    v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v16, 1, v26);
    v28 = sub_1000051EC((uint64_t)v16, &qword_1005D33C0);
    if (v27 == 1)
    {
      v36(1);

    }
    else
    {
      dispatch thunk of UITableViewDiffableDataSource.snapshot()(v28);
      v29 = sub_100053F2C(v34);
      v30 = *(unsigned __int8 *)(v18 + 80);
      v31 = (v30 + 32) & ~v30;
      v32._rawValue = (void *)swift_allocObject(v29, v31 + *(_QWORD *)(v18 + 72), v30 | 7);
      *((_OWORD *)v32._rawValue + 1) = xmmword_100481740;
      sub_100007464((uint64_t)v20, (uint64_t)v32._rawValue + v31, a4);
      NSDiffableDataSourceSnapshot.reloadItems(_:)(v32);
      v33 = swift_bridgeObjectRelease(v32._rawValue);
      dispatch thunk of UITableViewDiffableDataSource.apply(_:animatingDifferences:completion:)(v13, 1, 0, 0, v33);

      (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v10);
    }
    return sub_1000051EC((uint64_t)v20, a4);
  }
  return result;
}

void sub_100453B54(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  int64_t v30;
  _QWORD *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  __n128 v41;
  uint64_t v42;
  _QWORD *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t KeyPath;
  uint64_t v65;
  void (*v66)(_QWORD **, _QWORD);
  id *v67;
  id *v68;
  char isUniquelyReferenced_nonNull_native;
  id v70;
  __n128 v71;
  char *v72;
  __n128 v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  int64_t v77;
  unint64_t v78;
  int64_t v79;
  uint64_t v80;
  void (*v81)(char *, unint64_t, uint64_t);
  char *v82;
  void (*v83)(char *, char *, uint64_t);
  char *v84;
  uint64_t v85;
  uint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  _BOOL4 v89;
  uint8_t *v90;
  void *v91;
  Swift::String v92;
  Swift::String v93;
  unint64_t v94;
  void *v95;
  uint64_t v96;
  void *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  void *v113;
  __n128 v114;
  unint64_t *v115;
  uint64_t v116;
  int64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void (*v136)(char *, uint64_t, uint64_t, uint64_t);
  void (*v137)(char *, char *, uint64_t);
  void (*v138)(char *, uint64_t);
  void (*v139)(uint64_t, char *, uint64_t);
  unint64_t v140;
  int64_t v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  _QWORD *aBlock;
  unint64_t v147[4];
  uint64_t v148;
  id v149;

  v111 = type metadata accessor for DispatchWorkItemFlags(0);
  v110 = *(_QWORD *)(v111 - 8);
  __chkstk_darwin(v111);
  v109 = (char *)&v106 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for DispatchQoS(0);
  v107 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v106 = (char *)&v106 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UUID(0);
  v133 = *(_QWORD *)(v6 - 8);
  v134 = v6;
  __chkstk_darwin(v6);
  v132 = (char *)&v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100053F2C(&qword_1005D7E50);
  __chkstk_darwin(v8);
  v131 = (char *)&v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = sub_100053F2C(&qword_1005D7E58);
  v129 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  v128 = (char *)&v106 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_100053F2C((uint64_t *)&unk_1005D7E60);
  v126 = *(_QWORD *)(v127 - 8);
  __chkstk_darwin(v127);
  v125 = (char *)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FMIPDiscoveredAccessory(0);
  v143 = *(_QWORD *)(v12 - 8);
  v13 = __chkstk_darwin(v12);
  v123 = (char *)&v106 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v122 = (char *)&v106 - v16;
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v106 - v18;
  v124 = v20;
  __chkstk_darwin(v17);
  v121 = (char *)&v106 - v21;
  v22 = *(_QWORD *)(a1 + 56);
  v116 = a1 + 56;
  v23 = 1 << *(_BYTE *)(a1 + 32);
  v24 = -1;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  v25 = v24 & v22;
  v142 = a2;
  v26 = (_QWORD *)(qword_1005F4EC0 + (swift_isaMask & *a2));
  v120 = v26[4];
  v28 = v26[5];
  v27 = v26[6];
  v119 = v28;
  v118 = v27;
  v117 = (unint64_t)(v23 + 63) >> 6;
  v115 = v147;
  v135 = a1;
  v29 = swift_bridgeObjectRetain(a1);
  v30 = 0;
  v29.n128_u64[0] = 136315138;
  v114 = v29;
  v113 = (void *)0x80000001004C8130;
  v112 = (char *)&type metadata for Any + 8;
  v144 = v12;
  v145 = v19;
  while (1)
  {
    if (v25)
    {
      v74 = __clz(__rbit64(v25));
      v75 = (v25 - 1) & v25;
      v76 = v74 | (v30 << 6);
      goto LABEL_21;
    }
    v77 = v30 + 1;
    if (__OFADD__(v30, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v77 >= v117)
      goto LABEL_25;
    v78 = *(_QWORD *)(v116 + 8 * v77);
    ++v30;
    if (!v78)
    {
      v30 = v77 + 1;
      if (v77 + 1 >= v117)
        goto LABEL_25;
      v78 = *(_QWORD *)(v116 + 8 * v30);
      if (!v78)
      {
        v30 = v77 + 2;
        if (v77 + 2 >= v117)
          goto LABEL_25;
        v78 = *(_QWORD *)(v116 + 8 * v30);
        if (!v78)
          break;
      }
    }
LABEL_20:
    v75 = (v78 - 1) & v78;
    v76 = __clz(__rbit64(v78)) + (v30 << 6);
LABEL_21:
    v80 = v143;
    v81 = *(void (**)(char *, unint64_t, uint64_t))(v143 + 16);
    v82 = v121;
    v81(v121, *(_QWORD *)(v135 + 48) + *(_QWORD *)(v143 + 72) * v76, v12);
    v83 = *(void (**)(char *, char *, uint64_t))(v80 + 32);
    v83(v19, v82, v12);
    v84 = v122;
    v81(v122, (unint64_t)v19, v12);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v85 = type metadata accessor for Logger(0);
    v86 = sub_100056D88(v85, (uint64_t)qword_1005F5748);
    v87 = Logger.logObject.getter(v86);
    v88 = static os_log_type_t.default.getter(v87);
    v89 = os_log_type_enabled(v87, v88);
    v140 = v75;
    v141 = v30;
    v139 = (void (*)(uint64_t, char *, uint64_t))v83;
    v137 = (void (*)(char *, char *, uint64_t))v81;
    if (v89)
    {
      v90 = (uint8_t *)swift_slowAlloc(12, -1);
      v91 = (void *)swift_slowAlloc(32, -1);
      v149 = v91;
      *(_DWORD *)v90 = v114.n128_u32[0];
      aBlock = 0;
      v147[0] = 0xE000000000000000;
      _StringGuts.grow(_:)(23);
      v92._countAndFlagsBits = 0xD000000000000015;
      v92._object = v113;
      String.append(_:)(v92);
      _print_unlocked<A, B>(_:_:)(v84, &aBlock, v12, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v93._countAndFlagsBits = 0;
      v93._object = (void *)0xE000000000000000;
      String.append(_:)(v93);
      v94 = v147[0];
      aBlock = (_QWORD *)sub_100056DA0((uint64_t)aBlock, v147[0], (uint64_t *)&v149);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v115);
      swift_bridgeObjectRelease(v94);
      _os_log_impl((void *)&_mh_execute_header, v87, v88, "FMAccessoryDiscoveryDataSource: %s", v90, 0xCu);
      swift_arrayDestroy(v91, 1, v112);
      swift_slowDealloc(v91, -1, -1);
      swift_slowDealloc(v90, -1, -1);
    }

    v138 = *(void (**)(char *, uint64_t))(v143 + 8);
    v138(v84, v12);
    v31 = v142;
    aBlock = (_QWORD *)sub_10045E000((uint64_t)v19, 0, *(_QWORD *)((char *)v142 + v120));
    v32 = *(void **)((char *)v31 + v119);
    v149 = v32;
    v33 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    v136 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56);
    v34 = (uint64_t)v131;
    v136(v131, 1, 1, v33);
    v35 = v32;
    v36 = sub_100053F2C(&qword_1005D6DC0);
    v37 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
    v38 = sub_10003F774((unint64_t *)&unk_1005D7E70, &qword_1005D6DC0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v39 = sub_100460770((unint64_t *)&qword_1005E1990, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
    v40 = v128;
    Publisher.subscribe<A>(on:options:)(&v149, v34, v36, v37, v38, v39);
    sub_1000051EC(v34, &qword_1005D7E50);

    v41 = swift_release(aBlock);
    aBlock = v35;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))v136)(v34, 1, 1, v33, v41);
    v42 = sub_10003F774(&qword_1005D7E80, &qword_1005D7E58, (uint64_t)&protocol conformance descriptor for Publishers.SubscribeOn<A, B>);
    v43 = v35;
    v44 = v125;
    v45 = v130;
    Publisher.receive<A>(on:options:)(&aBlock, v34, v130, v37, v42, v39);
    sub_1000051EC(v34, &qword_1005D7E50);

    (*(void (**)(char *, uint64_t))(v129 + 8))(v40, v45);
    v46 = swift_allocObject(&unk_100567CF8, 24, 7);
    v47 = v142;
    swift_unknownObjectWeakInit(v46 + 16);
    v48 = v123;
    v137(v123, v145, v144);
    v49 = *(unsigned __int8 *)(v143 + 80);
    v50 = (v49 + 24) & ~v49;
    v51 = swift_allocObject(&unk_100567D98, v50 + v124, v49 | 7);
    *(_QWORD *)(v51 + 16) = v46;
    v139(v51 + v50, v48, v144);
    v52 = sub_10003F774(&qword_1005D7E88, (uint64_t *)&unk_1005D7E60, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v53 = v127;
    v54 = Publisher.sink(receiveCompletion:receiveValue:)(State.rawValue.getter, 0, sub_100460C64, v51, v127, v52);
    v55 = swift_release(v51);
    v56 = (*(uint64_t (**)(char *, uint64_t, __n128))(v126 + 8))(v44, v53, v55);
    v139 = (void (*)(uint64_t, char *, uint64_t))FMIPDiscoveredAccessory.displayName.getter(v56);
    v58 = v57;
    v137 = *(void (**)(char *, char *, uint64_t))((char *)v47 + v118);
    v59 = swift_retain(v54);
    v60 = (uint64_t)v132;
    v61 = FMIPDiscoveredAccessory.identifier.getter(v59);
    __chkstk_darwin(v61);
    v62 = type metadata accessor for FMIPAccessoryDiscoveryController(0);
    *(&v106 - 4) = (char *)v62;
    v63 = sub_100008000((unint64_t *)&unk_1005DEDF0, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPAccessoryDiscoveryController, (uint64_t)&protocol conformance descriptor for FMIPAccessoryDiscoveryController);
    *(&v106 - 3) = (char *)v63;
    *(&v106 - 2) = (char *)&off_100547138;
    *(&v106 - 1) = (char *)&off_10054A518;
    KeyPath = swift_getKeyPath(&unk_100491BF0);
    __chkstk_darwin(KeyPath);
    *(&v106 - 4) = (char *)v62;
    *(&v106 - 3) = (char *)v63;
    *(&v106 - 2) = (char *)&off_100547138;
    *(&v106 - 1) = (char *)&off_10054A518;
    v65 = swift_getKeyPath(&unk_100491C28);
    swift_retain(v54);
    swift_bridgeObjectRetain(v58);
    v66 = (void (*)(_QWORD **, _QWORD))static Published.subscript.modify(&aBlock, v137, KeyPath, v65);
    v68 = v67;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v67);
    v149 = *v68;
    *v68 = (id)0x8000000000000000;
    sub_100179464((uint64_t)v139, v58, 0, v54, v60, isUniquelyReferenced_nonNull_native);
    v70 = *v68;
    *v68 = v149;
    v71 = swift_bridgeObjectRelease(v70);
    v72 = v145;
    (*(void (**)(uint64_t, uint64_t, __n128))(v133 + 8))(v60, v134, v71);
    v66(&aBlock, 0);
    v12 = v144;
    swift_release_n(v54, 2);
    swift_bridgeObjectRelease(v58);
    swift_release(KeyPath);
    v73 = swift_release(v65);
    v19 = v72;
    ((void (*)(char *, uint64_t, __n128))v138)(v72, v12, v73);
    v25 = v140;
    v30 = v141;
  }
  v79 = v77 + 3;
  if (v79 >= v117)
  {
LABEL_25:
    swift_release(v135);
    sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
    v95 = (void *)static OS_dispatch_queue.main.getter();
    v96 = swift_allocObject(&unk_100567CF8, 24, 7);
    swift_unknownObjectWeakInit(v96 + 16);
    v147[3] = (unint64_t)sub_100460CCC;
    v148 = v96;
    aBlock = _NSConcreteStackBlock;
    v147[0] = 1107296256;
    v147[1] = (unint64_t)sub_100037DF8;
    v147[2] = (unint64_t)&unk_100567DB0;
    v97 = _Block_copy(&aBlock);
    swift_release(v148);
    v98 = v106;
    static DispatchQoS.unspecified.getter(v99);
    aBlock = _swiftEmptyArrayStorage;
    v100 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v101 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
    v102 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
    v103 = v109;
    v104 = v101;
    v105 = v111;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v104, v102, v111, v100);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v98, v103, v97);
    _Block_release(v97);

    (*(void (**)(char *, uint64_t))(v110 + 8))(v103, v105);
    (*(void (**)(char *, uint64_t))(v107 + 8))(v98, v108);
    return;
  }
  v78 = *(_QWORD *)(v116 + 8 * v79);
  if (v78)
  {
    v30 = v79;
    goto LABEL_20;
  }
  while (1)
  {
    v30 = v79 + 1;
    if (__OFADD__(v79, 1))
      break;
    if (v30 >= v117)
      goto LABEL_25;
    v78 = *(_QWORD *)(v116 + 8 * v30);
    ++v79;
    if (v78)
      goto LABEL_20;
  }
LABEL_27:
  __break(1u);
}

void sub_100454828(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  int64_t v30;
  _QWORD *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  __n128 v41;
  uint64_t v42;
  _QWORD *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __n128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t KeyPath;
  uint64_t v65;
  void (*v66)(_QWORD **, _QWORD);
  id *v67;
  id *v68;
  char isUniquelyReferenced_nonNull_native;
  id v70;
  __n128 v71;
  char *v72;
  __n128 v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  int64_t v77;
  unint64_t v78;
  int64_t v79;
  uint64_t v80;
  void (*v81)(char *, unint64_t, uint64_t);
  char *v82;
  void (*v83)(char *, char *, uint64_t);
  char *v84;
  uint64_t v85;
  uint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  _BOOL4 v89;
  uint8_t *v90;
  void *v91;
  Swift::String v92;
  Swift::String v93;
  unint64_t v94;
  void *v95;
  uint64_t v96;
  void *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  void *v113;
  __n128 v114;
  unint64_t *v115;
  uint64_t v116;
  int64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void (*v136)(char *, uint64_t, uint64_t, uint64_t);
  void (*v137)(char *, char *, uint64_t);
  void (*v138)(char *, uint64_t);
  void (*v139)(uint64_t, char *, uint64_t);
  unint64_t v140;
  int64_t v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  _QWORD *aBlock;
  unint64_t v147[4];
  uint64_t v148;
  id v149;

  v111 = type metadata accessor for DispatchWorkItemFlags(0);
  v110 = *(_QWORD *)(v111 - 8);
  __chkstk_darwin(v111);
  v109 = (char *)&v106 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for DispatchQoS(0);
  v107 = *(_QWORD *)(v108 - 8);
  __chkstk_darwin(v108);
  v106 = (char *)&v106 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UUID(0);
  v133 = *(_QWORD *)(v6 - 8);
  v134 = v6;
  __chkstk_darwin(v6);
  v132 = (char *)&v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100053F2C(&qword_1005D7E50);
  __chkstk_darwin(v8);
  v131 = (char *)&v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = sub_100053F2C(&qword_1005D7E58);
  v129 = *(_QWORD *)(v130 - 8);
  __chkstk_darwin(v130);
  v128 = (char *)&v106 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_100053F2C((uint64_t *)&unk_1005D7E60);
  v126 = *(_QWORD *)(v127 - 8);
  __chkstk_darwin(v127);
  v125 = (char *)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FMIPUnknownItem(0);
  v143 = *(_QWORD *)(v12 - 8);
  v13 = __chkstk_darwin(v12);
  v123 = (char *)&v106 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v122 = (char *)&v106 - v16;
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v106 - v18;
  v124 = v20;
  __chkstk_darwin(v17);
  v121 = (char *)&v106 - v21;
  v22 = *(_QWORD *)(a1 + 56);
  v116 = a1 + 56;
  v23 = 1 << *(_BYTE *)(a1 + 32);
  v24 = -1;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  v25 = v24 & v22;
  v142 = a2;
  v26 = (_QWORD *)(qword_1005F4EC0 + (swift_isaMask & *a2));
  v120 = v26[4];
  v28 = v26[5];
  v27 = v26[6];
  v119 = v28;
  v118 = v27;
  v117 = (unint64_t)(v23 + 63) >> 6;
  v115 = v147;
  v135 = a1;
  v29 = swift_bridgeObjectRetain(a1);
  v30 = 0;
  v29.n128_u64[0] = 136315138;
  v114 = v29;
  v113 = (void *)0x80000001004C8130;
  v112 = (char *)&type metadata for Any + 8;
  v144 = v12;
  v145 = v19;
  while (1)
  {
    if (v25)
    {
      v74 = __clz(__rbit64(v25));
      v75 = (v25 - 1) & v25;
      v76 = v74 | (v30 << 6);
      goto LABEL_21;
    }
    v77 = v30 + 1;
    if (__OFADD__(v30, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v77 >= v117)
      goto LABEL_25;
    v78 = *(_QWORD *)(v116 + 8 * v77);
    ++v30;
    if (!v78)
    {
      v30 = v77 + 1;
      if (v77 + 1 >= v117)
        goto LABEL_25;
      v78 = *(_QWORD *)(v116 + 8 * v30);
      if (!v78)
      {
        v30 = v77 + 2;
        if (v77 + 2 >= v117)
          goto LABEL_25;
        v78 = *(_QWORD *)(v116 + 8 * v30);
        if (!v78)
          break;
      }
    }
LABEL_20:
    v75 = (v78 - 1) & v78;
    v76 = __clz(__rbit64(v78)) + (v30 << 6);
LABEL_21:
    v80 = v143;
    v81 = *(void (**)(char *, unint64_t, uint64_t))(v143 + 16);
    v82 = v121;
    v81(v121, *(_QWORD *)(v135 + 48) + *(_QWORD *)(v143 + 72) * v76, v12);
    v83 = *(void (**)(char *, char *, uint64_t))(v80 + 32);
    v83(v19, v82, v12);
    v84 = v122;
    v81(v122, (unint64_t)v19, v12);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v85 = type metadata accessor for Logger(0);
    v86 = sub_100056D88(v85, (uint64_t)qword_1005F5748);
    v87 = Logger.logObject.getter(v86);
    v88 = static os_log_type_t.default.getter(v87);
    v89 = os_log_type_enabled(v87, v88);
    v140 = v75;
    v141 = v30;
    v139 = (void (*)(uint64_t, char *, uint64_t))v83;
    v137 = (void (*)(char *, char *, uint64_t))v81;
    if (v89)
    {
      v90 = (uint8_t *)swift_slowAlloc(12, -1);
      v91 = (void *)swift_slowAlloc(32, -1);
      v149 = v91;
      *(_DWORD *)v90 = v114.n128_u32[0];
      aBlock = 0;
      v147[0] = 0xE000000000000000;
      _StringGuts.grow(_:)(23);
      v92._countAndFlagsBits = 0xD000000000000015;
      v92._object = v113;
      String.append(_:)(v92);
      _print_unlocked<A, B>(_:_:)(v84, &aBlock, v12, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v93._countAndFlagsBits = 0;
      v93._object = (void *)0xE000000000000000;
      String.append(_:)(v93);
      v94 = v147[0];
      aBlock = (_QWORD *)sub_100056DA0((uint64_t)aBlock, v147[0], (uint64_t *)&v149);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v115);
      swift_bridgeObjectRelease(v94);
      _os_log_impl((void *)&_mh_execute_header, v87, v88, "FMAccessoryDiscoveryDataSource: %s", v90, 0xCu);
      swift_arrayDestroy(v91, 1, v112);
      swift_slowDealloc(v91, -1, -1);
      swift_slowDealloc(v90, -1, -1);
    }

    v138 = *(void (**)(char *, uint64_t))(v143 + 8);
    v138(v84, v12);
    v31 = v142;
    aBlock = (_QWORD *)sub_10045E83C((uint64_t)v19, 0, *(_QWORD *)((char *)v142 + v120));
    v32 = *(void **)((char *)v31 + v119);
    v149 = v32;
    v33 = type metadata accessor for OS_dispatch_queue.SchedulerOptions(0);
    v136 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56);
    v34 = (uint64_t)v131;
    v136(v131, 1, 1, v33);
    v35 = v32;
    v36 = sub_100053F2C(&qword_1005D6DC0);
    v37 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
    v38 = sub_10003F774((unint64_t *)&unk_1005D7E70, &qword_1005D6DC0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
    v39 = sub_100460770((unint64_t *)&qword_1005E1990, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue);
    v40 = v128;
    Publisher.subscribe<A>(on:options:)(&v149, v34, v36, v37, v38, v39);
    sub_1000051EC(v34, &qword_1005D7E50);

    v41 = swift_release(aBlock);
    aBlock = v35;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))v136)(v34, 1, 1, v33, v41);
    v42 = sub_10003F774(&qword_1005D7E80, &qword_1005D7E58, (uint64_t)&protocol conformance descriptor for Publishers.SubscribeOn<A, B>);
    v43 = v35;
    v44 = v125;
    v45 = v130;
    Publisher.receive<A>(on:options:)(&aBlock, v34, v130, v37, v42, v39);
    sub_1000051EC(v34, &qword_1005D7E50);

    (*(void (**)(char *, uint64_t))(v129 + 8))(v40, v45);
    v46 = swift_allocObject(&unk_100567A50, 24, 7);
    v47 = v142;
    swift_unknownObjectWeakInit(v46 + 16);
    v48 = v123;
    v137(v123, v145, v144);
    v49 = *(unsigned __int8 *)(v143 + 80);
    v50 = (v49 + 24) & ~v49;
    v51 = swift_allocObject(&unk_100567AF0, v50 + v124, v49 | 7);
    *(_QWORD *)(v51 + 16) = v46;
    v139(v51 + v50, v48, v144);
    v52 = sub_10003F774(&qword_1005D7E88, (uint64_t *)&unk_1005D7E60, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
    v53 = v127;
    v54 = Publisher.sink(receiveCompletion:receiveValue:)(State.rawValue.getter, 0, sub_100460AA4, v51, v127, v52);
    v55 = swift_release(v51);
    v56 = (*(uint64_t (**)(char *, uint64_t, __n128))(v126 + 8))(v44, v53, v55);
    v139 = (void (*)(uint64_t, char *, uint64_t))FMIPUnknownItem.name.getter(v56);
    v58 = v57;
    v137 = *(void (**)(char *, char *, uint64_t))((char *)v47 + v118);
    v59 = swift_retain(v54);
    v60 = (uint64_t)v132;
    v61 = FMIPUnknownItem.identifier.getter(v59);
    __chkstk_darwin(v61);
    v62 = type metadata accessor for FMIPUnknownAccessoryDiscoveryController(0);
    *(&v106 - 4) = (char *)v62;
    v63 = sub_100008000(&qword_1005E5498, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPUnknownAccessoryDiscoveryController, (uint64_t)&protocol conformance descriptor for FMIPUnknownAccessoryDiscoveryController);
    *(&v106 - 3) = (char *)v63;
    *(&v106 - 2) = (char *)&off_100547150;
    *(&v106 - 1) = (char *)&off_10054A510;
    KeyPath = swift_getKeyPath(&unk_100491BF0);
    __chkstk_darwin(KeyPath);
    *(&v106 - 4) = (char *)v62;
    *(&v106 - 3) = (char *)v63;
    *(&v106 - 2) = (char *)&off_100547150;
    *(&v106 - 1) = (char *)&off_10054A510;
    v65 = swift_getKeyPath(&unk_100491C28);
    swift_retain(v54);
    swift_bridgeObjectRetain(v58);
    v66 = (void (*)(_QWORD **, _QWORD))static Published.subscript.modify(&aBlock, v137, KeyPath, v65);
    v68 = v67;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v67);
    v149 = *v68;
    *v68 = (id)0x8000000000000000;
    sub_100179464((uint64_t)v139, v58, 0, v54, v60, isUniquelyReferenced_nonNull_native);
    v70 = *v68;
    *v68 = v149;
    v71 = swift_bridgeObjectRelease(v70);
    v72 = v145;
    (*(void (**)(uint64_t, uint64_t, __n128))(v133 + 8))(v60, v134, v71);
    v66(&aBlock, 0);
    v12 = v144;
    swift_release_n(v54, 2);
    swift_bridgeObjectRelease(v58);
    swift_release(KeyPath);
    v73 = swift_release(v65);
    v19 = v72;
    ((void (*)(char *, uint64_t, __n128))v138)(v72, v12, v73);
    v25 = v140;
    v30 = v141;
  }
  v79 = v77 + 3;
  if (v79 >= v117)
  {
LABEL_25:
    swift_release(v135);
    sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
    v95 = (void *)static OS_dispatch_queue.main.getter();
    v96 = swift_allocObject(&unk_100567A50, 24, 7);
    swift_unknownObjectWeakInit(v96 + 16);
    v147[3] = (unint64_t)sub_100460AB8;
    v148 = v96;
    aBlock = _NSConcreteStackBlock;
    v147[0] = 1107296256;
    v147[1] = (unint64_t)sub_100037DF8;
    v147[2] = (unint64_t)&unk_100567B08;
    v97 = _Block_copy(&aBlock);
    swift_release(v148);
    v98 = v106;
    static DispatchQoS.unspecified.getter(v99);
    aBlock = _swiftEmptyArrayStorage;
    v100 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v101 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
    v102 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
    v103 = v109;
    v104 = v101;
    v105 = v111;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v104, v102, v111, v100);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v98, v103, v97);
    _Block_release(v97);

    (*(void (**)(char *, uint64_t))(v110 + 8))(v103, v105);
    (*(void (**)(char *, uint64_t))(v107 + 8))(v98, v108);
    return;
  }
  v78 = *(_QWORD *)(v116 + 8 * v79);
  if (v78)
  {
    v30 = v79;
    goto LABEL_20;
  }
  while (1)
  {
    v30 = v79 + 1;
    if (__OFADD__(v79, 1))
      break;
    if (v30 >= v117)
      goto LABEL_25;
    v78 = *(_QWORD *)(v116 + 8 * v30);
    ++v79;
    if (v78)
      goto LABEL_20;
  }
LABEL_27:
  __break(1u);
}

void sub_1004554FC(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    a2(1);

  }
}

void sub_100455554(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  __n128 v41;
  int64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  unint64_t v57;
  int64_t v58;
  unint64_t v59;
  int64_t v60;
  void (*v61)(char *, unint64_t, uint64_t);
  char *v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  _BOOL4 v67;
  uint64_t v68;
  uint64_t v69;
  Swift::String v70;
  Swift::String v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t KeyPath;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t *v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  char v87;
  __n128 v88;
  char isUniquelyReferenced_nonNull_native;
  void (*v90)(unint64_t, uint64_t);
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  __n128 v99;
  void (*v100)(char *, uint64_t, __n128);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t (*v114)(uint64_t, uint64_t, uint64_t);
  int v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unsigned int (*v120)(uint64_t, uint64_t, uint64_t);
  uint64_t v121;
  unsigned int v122;
  uint64_t v123;
  char *v124;
  char v125;
  char *v126;
  void (*v127)(uint64_t, uint64_t);
  void *v128;
  uint64_t v129;
  void *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  void *v154;
  __n128 v155;
  void (*v156)(uint64_t, uint64_t);
  uint64_t v157;
  int64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  _QWORD *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  _QWORD *v173;
  uint64_t v174;
  void (*v175)(char *, uint64_t);
  uint64_t v176;
  int64_t v177;
  void (*v178)(void ***, _QWORD);
  char *i;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  void **aBlock;
  unint64_t v185;
  uint64_t (*v186)(uint64_t);
  void *v187;
  void (*v188)();
  uint64_t v189;
  uint64_t v190;

  v149 = sub_100053F2C(&qword_1005E5678);
  __chkstk_darwin(v149);
  v148 = (uint64_t)&v139 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100053F2C(&qword_1005D6810);
  v167 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v147 = (uint64_t)&v139 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v152 = (uint64_t)&v139 - v8;
  v145 = type metadata accessor for DispatchWorkItemFlags(0);
  v144 = *(_QWORD *)(v145 - 8);
  __chkstk_darwin(v145);
  v143 = (char *)&v139 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = type metadata accessor for DispatchQoS(0);
  v141 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin(v142);
  v140 = (char *)&v139 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = sub_100053F2C((uint64_t *)&unk_1005E5680);
  __chkstk_darwin(v166);
  v165 = (uint64_t)&v139 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100053F2C((uint64_t *)&unk_1005DEDE0);
  v13 = __chkstk_darwin(v12);
  v151 = (uint64_t)&v139 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v150 = (char *)&v139 - v16;
  v17 = __chkstk_darwin(v15);
  v159 = (uint64_t)&v139 - v18;
  v19 = __chkstk_darwin(v17);
  v172 = (char *)&v139 - v20;
  __chkstk_darwin(v19);
  v173 = (uint64_t *)((char *)&v139 - v21);
  v22 = type metadata accessor for UUID(0);
  v170 = *(_QWORD *)(v22 - 8);
  v23 = __chkstk_darwin(v22);
  v146 = (char *)&v139 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v180 = (char *)&v139 - v25;
  v26 = type metadata accessor for FMIPDiscoveredAccessory(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = __chkstk_darwin(v26);
  v30 = (char *)&v139 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __chkstk_darwin(v28);
  v33 = (char *)&v139 - v32;
  __chkstk_darwin(v31);
  v164 = (char *)&v139 - v34;
  v35 = *(_QWORD *)(a1 + 56);
  v157 = a1 + 56;
  v36 = 1 << *(_BYTE *)(a1 + 32);
  v37 = -1;
  if (v36 < 64)
    v37 = ~(-1 << v36);
  v38 = v37 & v35;
  v169 = a2;
  v39 = *a2;
  v40 = v38;
  v163 = *(_QWORD *)(qword_1005F4EC0 + (swift_isaMask & v39) + 48);
  v158 = (unint64_t)(v36 + 63) >> 6;
  v168 = a1;
  v41 = swift_bridgeObjectRetain(a1);
  v42 = 0;
  v41.n128_u64[0] = 136315138;
  v155 = v41;
  v154 = (void *)0x80000001004C8190;
  v153 = (char *)&type metadata for Any + 8;
  v171 = v5;
  v174 = v22;
  v160 = v26;
  v162 = v27;
  v161 = v30;
  for (i = v33; ; v175(i, v26))
  {
    if (v40)
    {
      v176 = (v40 - 1) & v40;
      v57 = __clz(__rbit64(v40)) | (v42 << 6);
      goto LABEL_25;
    }
    v58 = v42 + 1;
    if (__OFADD__(v42, 1))
    {
      __break(1u);
      goto LABEL_51;
    }
    if (v58 >= v158)
      goto LABEL_49;
    v59 = *(_QWORD *)(v157 + 8 * v58);
    ++v42;
    if (!v59)
    {
      v42 = v58 + 1;
      if (v58 + 1 >= v158)
        goto LABEL_49;
      v59 = *(_QWORD *)(v157 + 8 * v42);
      if (!v59)
      {
        v42 = v58 + 2;
        if (v58 + 2 >= v158)
          goto LABEL_49;
        v59 = *(_QWORD *)(v157 + 8 * v42);
        if (!v59)
          break;
      }
    }
LABEL_24:
    v176 = (v59 - 1) & v59;
    v57 = __clz(__rbit64(v59)) + (v42 << 6);
LABEL_25:
    v61 = *(void (**)(char *, unint64_t, uint64_t))(v27 + 16);
    v62 = v164;
    v61(v164, *(_QWORD *)(v168 + 48) + *(_QWORD *)(v27 + 72) * v57, v26);
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v33, v62, v26);
    v61(v30, (unint64_t)v33, v26);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v63 = type metadata accessor for Logger(0);
    v64 = sub_100056D88(v63, (uint64_t)qword_1005F5748);
    v65 = Logger.logObject.getter(v64);
    v66 = static os_log_type_t.default.getter(v65);
    v67 = os_log_type_enabled(v65, v66);
    v177 = v42;
    if (v67)
    {
      v68 = swift_slowAlloc(12, -1);
      v69 = swift_slowAlloc(32, -1);
      v190 = v69;
      *(_DWORD *)v68 = v155.n128_u32[0];
      aBlock = 0;
      v185 = 0xE000000000000000;
      _StringGuts.grow(_:)(18);
      v70._countAndFlagsBits = 0xD000000000000010;
      v70._object = v154;
      String.append(_:)(v70);
      _print_unlocked<A, B>(_:_:)(v30, &aBlock, v26, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v71._countAndFlagsBits = 0;
      v71._object = (void *)0xE000000000000000;
      String.append(_:)(v71);
      v72 = v185;
      *(_QWORD *)(v68 + 4) = sub_100056DA0((uint64_t)aBlock, v185, &v190);
      swift_bridgeObjectRelease(v72);
      _os_log_impl((void *)&_mh_execute_header, v65, v66, "FMAccessoryDiscoveryDataSource: %s", (uint8_t *)v68, 0xCu);
      swift_arrayDestroy(v69, 1, v153);
      swift_slowDealloc(v69, -1, -1);
      swift_slowDealloc(v68, -1, -1);
    }

    v175 = *(void (**)(char *, uint64_t))(v27 + 8);
    v73 = ((uint64_t (*)(char *, uint64_t))v175)(v30, v26);
    v74 = *(_QWORD *)((char *)v169 + v163);
    v75 = (uint64_t)v180;
    v76 = FMIPDiscoveredAccessory.identifier.getter(v73);
    __chkstk_darwin(v76);
    v77 = type metadata accessor for FMIPAccessoryDiscoveryController(0);
    *(&v139 - 4) = v77;
    v78 = sub_100008000((unint64_t *)&unk_1005DEDF0, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPAccessoryDiscoveryController, (uint64_t)&protocol conformance descriptor for FMIPAccessoryDiscoveryController);
    *(&v139 - 3) = v78;
    *(&v139 - 2) = (uint64_t)&off_100547138;
    *(&v139 - 1) = (uint64_t)&off_10054A518;
    KeyPath = swift_getKeyPath(&unk_100491BF0);
    __chkstk_darwin(KeyPath);
    v181 = v78;
    v182 = v77;
    *(&v139 - 4) = v77;
    *(&v139 - 3) = v78;
    *(&v139 - 2) = (uint64_t)&off_100547138;
    *(&v139 - 1) = (uint64_t)&off_10054A518;
    v80 = swift_getKeyPath(&unk_100491C28);
    v183 = v74;
    v81 = static Published.subscript.modify(&aBlock, v74, KeyPath, v80);
    v83 = v82;
    v84 = *v82;
    swift_bridgeObjectRetain(*v82);
    v85 = sub_100171818(v75);
    v87 = v86;
    v88 = swift_bridgeObjectRelease(v84);
    v178 = (void (*)(void ***, _QWORD))v81;
    if ((v87 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v83);
      v190 = *v83;
      *v83 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_10017B2A8();
      v90 = *(void (**)(unint64_t, uint64_t))(v170 + 8);
      v90(*(_QWORD *)(v190 + 48) + *(_QWORD *)(v170 + 72) * v85, v174);
      v91 = v190;
      v92 = (uint64_t *)(*(_QWORD *)(v190 + 56) + 32 * v85);
      v93 = *v92;
      v94 = v92[1];
      v96 = (void *)v92[2];
      v95 = v92[3];
      sub_100178058(v85, v190);
      v97 = *v83;
      *v83 = v91;
      v98 = v174;
      v99 = swift_bridgeObjectRelease(v97);
      v100 = (void (*)(char *, uint64_t, __n128))v90;
      v46 = v171;
      v100(v180, v98, v99);
    }
    else
    {
      v93 = 0;
      v46 = v171;
      v94 = 0;
      v96 = 0;
      v95 = 0;
      v100 = *(void (**)(char *, uint64_t, __n128))(v170 + 8);
      v100(v180, v174, v88);
    }
    sub_100460B60(v93, v94, v96, v95);
    v178(&aBlock, 0);
    swift_release(KeyPath);
    swift_release(v80);
    __chkstk_darwin(v101);
    v103 = v181;
    v102 = v182;
    *(&v139 - 4) = v182;
    *(&v139 - 3) = v103;
    *(&v139 - 2) = (uint64_t)&off_100547138;
    *(&v139 - 1) = (uint64_t)&off_10054A518;
    v104 = swift_getKeyPath(&unk_100491A90);
    __chkstk_darwin(v104);
    *(&v139 - 4) = v102;
    *(&v139 - 3) = v103;
    *(&v139 - 2) = (uint64_t)&off_100547138;
    *(&v139 - 1) = (uint64_t)&off_10054A518;
    v105 = swift_getKeyPath(&unk_100491AC8);
    v106 = v173;
    static Published.subscript.getter(v173, v183, v104, v105);
    swift_release(v104);
    swift_release(v105);
    v107 = (uint64_t)v172;
    FMIPDiscoveredAccessory.identifier.getter(v108);
    v109 = sub_100053F2C((uint64_t *)&unk_1005DEE00);
    v110 = *(_QWORD *)(v109 - 8);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v110 + 56))(v107, 0, 1, v109);
    v111 = v167;
    v178 = *(void (**)(void ***, _QWORD))(v167 + 56);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v178)(v107, 0, 1, v46);
    v112 = v165;
    v113 = v165 + *(int *)(v166 + 48);
    sub_100007464((uint64_t)v106, v165, (uint64_t *)&unk_1005DEDE0);
    sub_100007464(v107, v113, (uint64_t *)&unk_1005DEDE0);
    v114 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v111 + 48);
    if (v114(v112, 1, v46) == 1)
    {
      sub_1000051EC(v107, (uint64_t *)&unk_1005DEDE0);
      sub_1000051EC((uint64_t)v106, (uint64_t *)&unk_1005DEDE0);
      v115 = v114(v113, 1, v46);
      v26 = v160;
      if (v115 != 1)
        goto LABEL_39;
LABEL_6:
      sub_1000051EC(v112, (uint64_t *)&unk_1005DEDE0);
      v47 = (uint64_t)v150;
      v48 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v178)(v150, 1, 1, v46);
      __chkstk_darwin(v48);
      v50 = v181;
      v49 = v182;
      *(&v139 - 4) = v182;
      *(&v139 - 3) = v50;
      *(&v139 - 2) = (uint64_t)&off_100547138;
      *(&v139 - 1) = (uint64_t)&off_10054A518;
      v51 = swift_getKeyPath(&unk_100491A90);
      __chkstk_darwin(v51);
      *(&v139 - 4) = v49;
      *(&v139 - 3) = v50;
      *(&v139 - 2) = (uint64_t)&off_100547138;
      *(&v139 - 1) = (uint64_t)&off_10054A518;
      v52 = swift_getKeyPath(&unk_100491AC8);
      v53 = v151;
      sub_100007464(v47, v151, (uint64_t *)&unk_1005DEDE0);
      v54 = v183;
      swift_retain(v183);
      static Published.subscript.setter(v53, v54, v51, v52);
      v55 = v47;
      v56 = (uint64_t *)&unk_1005DEDE0;
LABEL_7:
      sub_1000051EC(v55, v56);
      goto LABEL_8;
    }
    v156 = (void (*)(uint64_t, uint64_t))v100;
    v116 = v159;
    sub_100007464(v112, v159, (uint64_t *)&unk_1005DEDE0);
    if (v114(v113, 1, v46) == 1)
    {
      sub_1000051EC(v107, (uint64_t *)&unk_1005DEDE0);
      sub_1000051EC((uint64_t)v173, (uint64_t *)&unk_1005DEDE0);
      sub_1000051EC(v116, &qword_1005D6810);
      v26 = v160;
LABEL_39:
      v55 = v112;
      v56 = (uint64_t *)&unk_1005E5680;
      goto LABEL_7;
    }
    v117 = v152;
    sub_10005DAA0(v113, v152, &qword_1005D6810);
    v118 = v148;
    v119 = v148 + *(int *)(v149 + 48);
    sub_100007464(v116, v148, &qword_1005D6810);
    sub_100007464(v117, v119, &qword_1005D6810);
    v120 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v110 + 48);
    if (v120(v118, 1, v109) == 1)
    {
      if (v120(v119, 1, v109) == 1)
      {
        sub_1000051EC(v118, &qword_1005D6810);
        v43 = v159;
        v45 = (uint64_t)v172;
        v44 = v173;
LABEL_5:
        sub_1000051EC(v152, &qword_1005D6810);
        sub_1000051EC(v45, (uint64_t *)&unk_1005DEDE0);
        sub_1000051EC((uint64_t)v44, (uint64_t *)&unk_1005DEDE0);
        sub_1000051EC(v43, &qword_1005D6810);
        v26 = v160;
        v46 = v171;
        goto LABEL_6;
      }
      goto LABEL_45;
    }
    v121 = v147;
    sub_100007464(v118, v147, &qword_1005D6810);
    v122 = v120(v119, 1, v109);
    v123 = v174;
    if (v122 == 1)
    {
      v156(v121, v174);
LABEL_45:
      sub_1000051EC(v118, &qword_1005E5678);
      v43 = v159;
      v45 = (uint64_t)v172;
      v44 = v173;
      goto LABEL_46;
    }
    v124 = v146;
    (*(void (**)(char *, uint64_t, uint64_t))(v170 + 32))(v146, v119, v174);
    v125 = static UUID.== infix(_:_:)(v121, v124);
    v126 = v124;
    v127 = v156;
    v156((uint64_t)v126, v123);
    v127(v121, v123);
    sub_1000051EC(v118, &qword_1005D6810);
    v43 = v159;
    v45 = (uint64_t)v172;
    v44 = v173;
    if ((v125 & 1) != 0)
      goto LABEL_5;
LABEL_46:
    sub_1000051EC(v152, &qword_1005D6810);
    sub_1000051EC(v45, (uint64_t *)&unk_1005DEDE0);
    sub_1000051EC((uint64_t)v44, (uint64_t *)&unk_1005DEDE0);
    sub_1000051EC(v43, &qword_1005D6810);
    sub_1000051EC(v112, (uint64_t *)&unk_1005DEDE0);
    v26 = v160;
LABEL_8:
    v27 = v162;
    v30 = v161;
    v33 = i;
    v40 = v176;
    v42 = v177;
  }
  v60 = v58 + 3;
  if (v60 >= v158)
  {
LABEL_49:
    swift_release(v168);
    sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
    v128 = (void *)static OS_dispatch_queue.main.getter();
    v129 = swift_allocObject(&unk_100567CF8, 24, 7);
    swift_unknownObjectWeakInit(v129 + 16);
    v188 = sub_100460CCC;
    v189 = v129;
    aBlock = _NSConcreteStackBlock;
    v185 = 1107296256;
    v186 = sub_100037DF8;
    v187 = &unk_100567EC8;
    v130 = _Block_copy(&aBlock);
    swift_release(v189);
    v131 = v140;
    static DispatchQoS.unspecified.getter(v132);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v133 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v134 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
    v135 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
    v136 = v143;
    v137 = v134;
    v138 = v145;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v137, v135, v145, v133);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v131, v136, v130);
    _Block_release(v130);

    (*(void (**)(char *, uint64_t))(v144 + 8))(v136, v138);
    (*(void (**)(char *, uint64_t))(v141 + 8))(v131, v142);
    return;
  }
  v59 = *(_QWORD *)(v157 + 8 * v60);
  if (v59)
  {
    v42 = v60;
    goto LABEL_24;
  }
  while (1)
  {
    v42 = v60 + 1;
    if (__OFADD__(v60, 1))
      break;
    if (v42 >= v158)
      goto LABEL_49;
    v59 = *(_QWORD *)(v157 + 8 * v42);
    ++v60;
    if (v59)
      goto LABEL_24;
  }
LABEL_51:
  __break(1u);
}

void sub_1004565A4(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  __n128 v41;
  int64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  unint64_t v57;
  int64_t v58;
  unint64_t v59;
  int64_t v60;
  void (*v61)(char *, unint64_t, uint64_t);
  char *v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  _BOOL4 v67;
  uint64_t v68;
  uint64_t v69;
  Swift::String v70;
  Swift::String v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t KeyPath;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t *v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  char v87;
  __n128 v88;
  char isUniquelyReferenced_nonNull_native;
  void (*v90)(unint64_t, uint64_t);
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  __n128 v99;
  void (*v100)(char *, uint64_t, __n128);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t (*v114)(uint64_t, uint64_t, uint64_t);
  int v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unsigned int (*v120)(uint64_t, uint64_t, uint64_t);
  uint64_t v121;
  unsigned int v122;
  uint64_t v123;
  char *v124;
  char v125;
  char *v126;
  void (*v127)(uint64_t, uint64_t);
  void *v128;
  uint64_t v129;
  void *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  void *v154;
  __n128 v155;
  void (*v156)(uint64_t, uint64_t);
  uint64_t v157;
  int64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  _QWORD *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  _QWORD *v173;
  uint64_t v174;
  void (*v175)(char *, uint64_t);
  uint64_t v176;
  int64_t v177;
  void (*v178)(void ***, _QWORD);
  char *i;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  void **aBlock;
  unint64_t v185;
  uint64_t (*v186)(uint64_t);
  void *v187;
  void (*v188)();
  uint64_t v189;
  uint64_t v190;

  v149 = sub_100053F2C(&qword_1005E5638);
  __chkstk_darwin(v149);
  v148 = (uint64_t)&v139 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100053F2C(&qword_1005D6760);
  v167 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v147 = (uint64_t)&v139 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v152 = (uint64_t)&v139 - v8;
  v145 = type metadata accessor for DispatchWorkItemFlags(0);
  v144 = *(_QWORD *)(v145 - 8);
  __chkstk_darwin(v145);
  v143 = (char *)&v139 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = type metadata accessor for DispatchQoS(0);
  v141 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin(v142);
  v140 = (char *)&v139 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = sub_100053F2C(&qword_1005E5640);
  __chkstk_darwin(v166);
  v165 = (uint64_t)&v139 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100053F2C((uint64_t *)&unk_1005E5488);
  v13 = __chkstk_darwin(v12);
  v151 = (uint64_t)&v139 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v150 = (char *)&v139 - v16;
  v17 = __chkstk_darwin(v15);
  v159 = (uint64_t)&v139 - v18;
  v19 = __chkstk_darwin(v17);
  v172 = (char *)&v139 - v20;
  __chkstk_darwin(v19);
  v173 = (uint64_t *)((char *)&v139 - v21);
  v22 = type metadata accessor for UUID(0);
  v170 = *(_QWORD *)(v22 - 8);
  v23 = __chkstk_darwin(v22);
  v146 = (char *)&v139 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v180 = (char *)&v139 - v25;
  v26 = type metadata accessor for FMIPUnknownItem(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = __chkstk_darwin(v26);
  v30 = (char *)&v139 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __chkstk_darwin(v28);
  v33 = (char *)&v139 - v32;
  __chkstk_darwin(v31);
  v164 = (char *)&v139 - v34;
  v35 = *(_QWORD *)(a1 + 56);
  v157 = a1 + 56;
  v36 = 1 << *(_BYTE *)(a1 + 32);
  v37 = -1;
  if (v36 < 64)
    v37 = ~(-1 << v36);
  v38 = v37 & v35;
  v169 = a2;
  v39 = *a2;
  v40 = v38;
  v163 = *(_QWORD *)(qword_1005F4EC0 + (swift_isaMask & v39) + 48);
  v158 = (unint64_t)(v36 + 63) >> 6;
  v168 = a1;
  v41 = swift_bridgeObjectRetain(a1);
  v42 = 0;
  v41.n128_u64[0] = 136315138;
  v155 = v41;
  v154 = (void *)0x80000001004C8190;
  v153 = (char *)&type metadata for Any + 8;
  v171 = v5;
  v174 = v22;
  v160 = v26;
  v162 = v27;
  v161 = v30;
  for (i = v33; ; v175(i, v26))
  {
    if (v40)
    {
      v176 = (v40 - 1) & v40;
      v57 = __clz(__rbit64(v40)) | (v42 << 6);
      goto LABEL_25;
    }
    v58 = v42 + 1;
    if (__OFADD__(v42, 1))
    {
      __break(1u);
      goto LABEL_51;
    }
    if (v58 >= v158)
      goto LABEL_49;
    v59 = *(_QWORD *)(v157 + 8 * v58);
    ++v42;
    if (!v59)
    {
      v42 = v58 + 1;
      if (v58 + 1 >= v158)
        goto LABEL_49;
      v59 = *(_QWORD *)(v157 + 8 * v42);
      if (!v59)
      {
        v42 = v58 + 2;
        if (v58 + 2 >= v158)
          goto LABEL_49;
        v59 = *(_QWORD *)(v157 + 8 * v42);
        if (!v59)
          break;
      }
    }
LABEL_24:
    v176 = (v59 - 1) & v59;
    v57 = __clz(__rbit64(v59)) + (v42 << 6);
LABEL_25:
    v61 = *(void (**)(char *, unint64_t, uint64_t))(v27 + 16);
    v62 = v164;
    v61(v164, *(_QWORD *)(v168 + 48) + *(_QWORD *)(v27 + 72) * v57, v26);
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v33, v62, v26);
    v61(v30, (unint64_t)v33, v26);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v63 = type metadata accessor for Logger(0);
    v64 = sub_100056D88(v63, (uint64_t)qword_1005F5748);
    v65 = Logger.logObject.getter(v64);
    v66 = static os_log_type_t.default.getter(v65);
    v67 = os_log_type_enabled(v65, v66);
    v177 = v42;
    if (v67)
    {
      v68 = swift_slowAlloc(12, -1);
      v69 = swift_slowAlloc(32, -1);
      v190 = v69;
      *(_DWORD *)v68 = v155.n128_u32[0];
      aBlock = 0;
      v185 = 0xE000000000000000;
      _StringGuts.grow(_:)(18);
      v70._countAndFlagsBits = 0xD000000000000010;
      v70._object = v154;
      String.append(_:)(v70);
      _print_unlocked<A, B>(_:_:)(v30, &aBlock, v26, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v71._countAndFlagsBits = 0;
      v71._object = (void *)0xE000000000000000;
      String.append(_:)(v71);
      v72 = v185;
      *(_QWORD *)(v68 + 4) = sub_100056DA0((uint64_t)aBlock, v185, &v190);
      swift_bridgeObjectRelease(v72);
      _os_log_impl((void *)&_mh_execute_header, v65, v66, "FMAccessoryDiscoveryDataSource: %s", (uint8_t *)v68, 0xCu);
      swift_arrayDestroy(v69, 1, v153);
      swift_slowDealloc(v69, -1, -1);
      swift_slowDealloc(v68, -1, -1);
    }

    v175 = *(void (**)(char *, uint64_t))(v27 + 8);
    v73 = ((uint64_t (*)(char *, uint64_t))v175)(v30, v26);
    v74 = *(_QWORD *)((char *)v169 + v163);
    v75 = (uint64_t)v180;
    v76 = FMIPUnknownItem.identifier.getter(v73);
    __chkstk_darwin(v76);
    v77 = type metadata accessor for FMIPUnknownAccessoryDiscoveryController(0);
    *(&v139 - 4) = v77;
    v78 = sub_100008000(&qword_1005E5498, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPUnknownAccessoryDiscoveryController, (uint64_t)&protocol conformance descriptor for FMIPUnknownAccessoryDiscoveryController);
    *(&v139 - 3) = v78;
    *(&v139 - 2) = (uint64_t)&off_100547150;
    *(&v139 - 1) = (uint64_t)&off_10054A510;
    KeyPath = swift_getKeyPath(&unk_100491BF0);
    __chkstk_darwin(KeyPath);
    v181 = v78;
    v182 = v77;
    *(&v139 - 4) = v77;
    *(&v139 - 3) = v78;
    *(&v139 - 2) = (uint64_t)&off_100547150;
    *(&v139 - 1) = (uint64_t)&off_10054A510;
    v80 = swift_getKeyPath(&unk_100491C28);
    v183 = v74;
    v81 = static Published.subscript.modify(&aBlock, v74, KeyPath, v80);
    v83 = v82;
    v84 = *v82;
    swift_bridgeObjectRetain(*v82);
    v85 = sub_100171818(v75);
    v87 = v86;
    v88 = swift_bridgeObjectRelease(v84);
    v178 = (void (*)(void ***, _QWORD))v81;
    if ((v87 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v83);
      v190 = *v83;
      *v83 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_10017B2A8();
      v90 = *(void (**)(unint64_t, uint64_t))(v170 + 8);
      v90(*(_QWORD *)(v190 + 48) + *(_QWORD *)(v170 + 72) * v85, v174);
      v91 = v190;
      v92 = (uint64_t *)(*(_QWORD *)(v190 + 56) + 32 * v85);
      v93 = *v92;
      v94 = v92[1];
      v96 = (void *)v92[2];
      v95 = v92[3];
      sub_100178058(v85, v190);
      v97 = *v83;
      *v83 = v91;
      v98 = v174;
      v99 = swift_bridgeObjectRelease(v97);
      v100 = (void (*)(char *, uint64_t, __n128))v90;
      v46 = v171;
      v100(v180, v98, v99);
    }
    else
    {
      v93 = 0;
      v46 = v171;
      v94 = 0;
      v96 = 0;
      v95 = 0;
      v100 = *(void (**)(char *, uint64_t, __n128))(v170 + 8);
      v100(v180, v174, v88);
    }
    sub_100460B60(v93, v94, v96, v95);
    v178(&aBlock, 0);
    swift_release(KeyPath);
    swift_release(v80);
    __chkstk_darwin(v101);
    v103 = v181;
    v102 = v182;
    *(&v139 - 4) = v182;
    *(&v139 - 3) = v103;
    *(&v139 - 2) = (uint64_t)&off_100547150;
    *(&v139 - 1) = (uint64_t)&off_10054A510;
    v104 = swift_getKeyPath(&unk_100491A90);
    __chkstk_darwin(v104);
    *(&v139 - 4) = v102;
    *(&v139 - 3) = v103;
    *(&v139 - 2) = (uint64_t)&off_100547150;
    *(&v139 - 1) = (uint64_t)&off_10054A510;
    v105 = swift_getKeyPath(&unk_100491AC8);
    v106 = v173;
    static Published.subscript.getter(v173, v183, v104, v105);
    swift_release(v104);
    swift_release(v105);
    v107 = (uint64_t)v172;
    FMIPUnknownItem.identifier.getter(v108);
    v109 = sub_100053F2C((uint64_t *)&unk_1005DEE00);
    v110 = *(_QWORD *)(v109 - 8);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v110 + 56))(v107, 0, 1, v109);
    v111 = v167;
    v178 = *(void (**)(void ***, _QWORD))(v167 + 56);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v178)(v107, 0, 1, v46);
    v112 = v165;
    v113 = v165 + *(int *)(v166 + 48);
    sub_100007464((uint64_t)v106, v165, (uint64_t *)&unk_1005E5488);
    sub_100007464(v107, v113, (uint64_t *)&unk_1005E5488);
    v114 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v111 + 48);
    if (v114(v112, 1, v46) == 1)
    {
      sub_1000051EC(v107, (uint64_t *)&unk_1005E5488);
      sub_1000051EC((uint64_t)v106, (uint64_t *)&unk_1005E5488);
      v115 = v114(v113, 1, v46);
      v26 = v160;
      if (v115 != 1)
        goto LABEL_39;
LABEL_6:
      sub_1000051EC(v112, (uint64_t *)&unk_1005E5488);
      v47 = (uint64_t)v150;
      v48 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v178)(v150, 1, 1, v46);
      __chkstk_darwin(v48);
      v50 = v181;
      v49 = v182;
      *(&v139 - 4) = v182;
      *(&v139 - 3) = v50;
      *(&v139 - 2) = (uint64_t)&off_100547150;
      *(&v139 - 1) = (uint64_t)&off_10054A510;
      v51 = swift_getKeyPath(&unk_100491A90);
      __chkstk_darwin(v51);
      *(&v139 - 4) = v49;
      *(&v139 - 3) = v50;
      *(&v139 - 2) = (uint64_t)&off_100547150;
      *(&v139 - 1) = (uint64_t)&off_10054A510;
      v52 = swift_getKeyPath(&unk_100491AC8);
      v53 = v151;
      sub_100007464(v47, v151, (uint64_t *)&unk_1005E5488);
      v54 = v183;
      swift_retain(v183);
      static Published.subscript.setter(v53, v54, v51, v52);
      v55 = v47;
      v56 = (uint64_t *)&unk_1005E5488;
LABEL_7:
      sub_1000051EC(v55, v56);
      goto LABEL_8;
    }
    v156 = (void (*)(uint64_t, uint64_t))v100;
    v116 = v159;
    sub_100007464(v112, v159, (uint64_t *)&unk_1005E5488);
    if (v114(v113, 1, v46) == 1)
    {
      sub_1000051EC(v107, (uint64_t *)&unk_1005E5488);
      sub_1000051EC((uint64_t)v173, (uint64_t *)&unk_1005E5488);
      sub_1000051EC(v116, &qword_1005D6760);
      v26 = v160;
LABEL_39:
      v55 = v112;
      v56 = &qword_1005E5640;
      goto LABEL_7;
    }
    v117 = v152;
    sub_10005DAA0(v113, v152, &qword_1005D6760);
    v118 = v148;
    v119 = v148 + *(int *)(v149 + 48);
    sub_100007464(v116, v148, &qword_1005D6760);
    sub_100007464(v117, v119, &qword_1005D6760);
    v120 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v110 + 48);
    if (v120(v118, 1, v109) == 1)
    {
      if (v120(v119, 1, v109) == 1)
      {
        sub_1000051EC(v118, &qword_1005D6760);
        v43 = v159;
        v45 = (uint64_t)v172;
        v44 = v173;
LABEL_5:
        sub_1000051EC(v152, &qword_1005D6760);
        sub_1000051EC(v45, (uint64_t *)&unk_1005E5488);
        sub_1000051EC((uint64_t)v44, (uint64_t *)&unk_1005E5488);
        sub_1000051EC(v43, &qword_1005D6760);
        v26 = v160;
        v46 = v171;
        goto LABEL_6;
      }
      goto LABEL_45;
    }
    v121 = v147;
    sub_100007464(v118, v147, &qword_1005D6760);
    v122 = v120(v119, 1, v109);
    v123 = v174;
    if (v122 == 1)
    {
      v156(v121, v174);
LABEL_45:
      sub_1000051EC(v118, &qword_1005E5638);
      v43 = v159;
      v45 = (uint64_t)v172;
      v44 = v173;
      goto LABEL_46;
    }
    v124 = v146;
    (*(void (**)(char *, uint64_t, uint64_t))(v170 + 32))(v146, v119, v174);
    v125 = static UUID.== infix(_:_:)(v121, v124);
    v126 = v124;
    v127 = v156;
    v156((uint64_t)v126, v123);
    v127(v121, v123);
    sub_1000051EC(v118, &qword_1005D6760);
    v43 = v159;
    v45 = (uint64_t)v172;
    v44 = v173;
    if ((v125 & 1) != 0)
      goto LABEL_5;
LABEL_46:
    sub_1000051EC(v152, &qword_1005D6760);
    sub_1000051EC(v45, (uint64_t *)&unk_1005E5488);
    sub_1000051EC((uint64_t)v44, (uint64_t *)&unk_1005E5488);
    sub_1000051EC(v43, &qword_1005D6760);
    sub_1000051EC(v112, (uint64_t *)&unk_1005E5488);
    v26 = v160;
LABEL_8:
    v27 = v162;
    v30 = v161;
    v33 = i;
    v40 = v176;
    v42 = v177;
  }
  v60 = v58 + 3;
  if (v60 >= v158)
  {
LABEL_49:
    swift_release(v168);
    sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
    v128 = (void *)static OS_dispatch_queue.main.getter();
    v129 = swift_allocObject(&unk_100567A50, 24, 7);
    swift_unknownObjectWeakInit(v129 + 16);
    v188 = sub_100460AB8;
    v189 = v129;
    aBlock = _NSConcreteStackBlock;
    v185 = 1107296256;
    v186 = sub_100037DF8;
    v187 = &unk_100567C48;
    v130 = _Block_copy(&aBlock);
    swift_release(v189);
    v131 = v140;
    static DispatchQoS.unspecified.getter(v132);
    aBlock = (void **)_swiftEmptyArrayStorage;
    v133 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v134 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
    v135 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
    v136 = v143;
    v137 = v134;
    v138 = v145;
    dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v137, v135, v145, v133);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v131, v136, v130);
    _Block_release(v130);

    (*(void (**)(char *, uint64_t))(v144 + 8))(v136, v138);
    (*(void (**)(char *, uint64_t))(v141 + 8))(v131, v142);
    return;
  }
  v59 = *(_QWORD *)(v157 + 8 * v60);
  if (v59)
  {
    v42 = v60;
    goto LABEL_24;
  }
  while (1)
  {
    v42 = v60 + 1;
    if (__OFADD__(v60, 1))
      break;
    if (v42 >= v158)
      goto LABEL_49;
    v59 = *(_QWORD *)(v157 + 8 * v42);
    ++v60;
    if (v59)
      goto LABEL_24;
  }
LABEL_51:
  __break(1u);
}

id sub_1004575F4(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t (*v33)(char *, void *, uint64_t);
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  _BOOL4 v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  __n128 v44;
  uint64_t v45;
  unsigned int (*v46)(char *, uint64_t, uint64_t);
  const char *v47;
  unint64_t v48;
  NSString v49;
  Class isa;
  id v51;
  void *v52;
  id v53;
  id v54;
  char *v55;
  uint64_t v56;
  id v57;
  Swift::String v58;
  Swift::String_optional v59;
  Swift::String v60;
  Swift::String v61;
  id v62;
  void (*v63)(uint64_t *, _QWORD);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t KeyPath;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  __n128 v79;
  uint64_t v80;
  char *v81;
  id v82;
  void *v83;
  __n128 v84;
  void (*v85)(uint64_t *, _QWORD);
  uint64_t (*v86)(uint64_t *, _QWORD);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  unsigned int (*v108)(uint64_t, uint64_t, uint64_t);
  char v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  _UNKNOWN **v114;
  _QWORD v115[2];
  void *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138[6];
  Swift::String v139;

  v131 = a4;
  v136 = a3;
  v124 = sub_100053F2C((uint64_t *)&unk_1005E5680);
  __chkstk_darwin(v124);
  v134 = (uint64_t)v115 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100053F2C((uint64_t *)&unk_1005DEDE0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)v115 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v125 = (char *)v115 - v12;
  __chkstk_darwin(v11);
  v126 = (_QWORD *)((char *)v115 - v13);
  v14 = sub_100053F2C(&qword_1005DA760);
  v15 = __chkstk_darwin(v14);
  v121 = (char *)v115 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v18 = (char *)v115 - v17;
  v132 = type metadata accessor for UUID(0);
  v130 = *(_QWORD *)(v132 - 8);
  __chkstk_darwin(v132);
  v119 = (char *)v115 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = type metadata accessor for UIListContentConfiguration(0);
  v133 = *(_QWORD *)(v127 - 8);
  __chkstk_darwin(v127);
  v135 = (char *)v115 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100053F2C(&qword_1005D6810);
  v122 = *(_QWORD *)(v21 - 8);
  v123 = v21;
  v22 = __chkstk_darwin(v21);
  v117 = (uint64_t)v115 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v22);
  v128 = (uint64_t)v115 - v25;
  __chkstk_darwin(v24);
  v27 = (char *)v115 - v26;
  v28 = type metadata accessor for IndexPath(0);
  v29 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v31 = (char *)v115 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v32 = type metadata accessor for Logger(0);
  sub_100056D88(v32, (uint64_t)qword_1005F5748);
  v33 = *(uint64_t (**)(char *, void *, uint64_t))(v29 + 16);
  v129 = a2;
  v34 = v33(v31, a2, v28);
  v35 = Logger.logObject.getter(v34);
  v36 = static os_log_type_t.default.getter(v35);
  v37 = os_log_type_enabled(v35, v36);
  v118 = v10;
  v120 = v18;
  if (v37)
  {
    v38 = (uint8_t *)swift_slowAlloc(12, -1);
    v39 = swift_slowAlloc(32, -1);
    v138[0] = v39;
    v116 = a1;
    *(_DWORD *)v38 = 136315138;
    v115[1] = v38 + 4;
    v40 = sub_100008000(&qword_1005DA770, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    v41 = dispatch thunk of CustomStringConvertible.description.getter(v28, v40);
    v43 = v42;
    v137 = sub_100056DA0(v41, v42, v138);
    a1 = v116;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v137, v138);
    v44 = swift_bridgeObjectRelease(v43);
    (*(void (**)(char *, uint64_t, __n128))(v29 + 8))(v31, v28, v44);
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "FMAccessoryDiscoveryDataSource: dequeueConfiguredReusableCell(for: %s)", v38, 0xCu);
    swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1, -1);
    swift_slowDealloc(v38, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
  }

  sub_100007464(v136, (uint64_t)v27, &qword_1005D6810);
  v45 = sub_100053F2C((uint64_t *)&unk_1005DEE00);
  v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 48);
  if (v46(v27, 1, v45) == 1)
  {
    v47 = "FMAccessoryDiscoveryDataSourceSearchingCell";
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v130 + 8))(v27, v132);
    v47 = "FMAccessoryDiscoveryDataSourceAccessoryCell";
  }
  v48 = (unint64_t)(v47 - 32) | 0x8000000000000000;
  v49 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v48);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v51 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v49, isa);

  v52 = (void *)objc_opt_self(UIColor);
  v53 = v51;
  v54 = objc_msgSend(v52, "systemGroupedBackgroundColor");
  objc_msgSend(v53, "setBackgroundColor:", v54);

  v55 = v135;
  static UIListContentConfiguration.cell()();
  v56 = v128;
  sub_100007464(v136, v128, &qword_1005D6810);
  if (v46((char *)v56, 1, v45) == 1)
  {
    v57 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v139._countAndFlagsBits = 0xD000000000000018;
    v58._countAndFlagsBits = 0xD000000000000027;
    v139._object = (void *)0x80000001004A5660;
    v58._object = (void *)0x80000001004B3B50;
    v59.value._object = (void *)0x80000001004A5640;
    v59.value._countAndFlagsBits = 0xD000000000000013;
    v60._countAndFlagsBits = 0;
    v60._object = (void *)0xE000000000000000;
    v61 = NSLocalizedString(_:tableName:bundle:value:comment:)(v58, v59, (NSBundle)v57, v60, v139);

    UIListContentConfiguration.text.setter(v61._countAndFlagsBits, v61._object);
    v62 = objc_msgSend(v52, "secondaryLabelColor");
    v63 = (void (*)(uint64_t *, _QWORD))UIListContentConfiguration.textProperties.modify(v138);
    UIListContentConfiguration.TextProperties.color.setter(v62);
    v63(v138, 0);
    UIListContentConfiguration.image.setter(objc_msgSend(objc_allocWithZone((Class)UIImage), "init"));
  }
  else
  {
    v129 = v52;
    v64 = v130;
    v65 = (uint64_t)v119;
    v66 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v130 + 32))(v119, v56, v132);
    __chkstk_darwin(v66);
    v67 = type metadata accessor for FMIPAccessoryDiscoveryController(0);
    v115[-4] = v67;
    v68 = sub_100008000((unint64_t *)&unk_1005DEDF0, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPAccessoryDiscoveryController, (uint64_t)&protocol conformance descriptor for FMIPAccessoryDiscoveryController);
    v115[-3] = v68;
    KeyPath = swift_getKeyPath(&unk_100491BF0);
    __chkstk_darwin(KeyPath);
    v115[-4] = v67;
    v115[-3] = v68;
    v139._object = &off_100547138;
    v114 = &off_10054A518;
    v70 = swift_getKeyPath(&unk_100491C28);
    static Published.subscript.getter(v138, v131, KeyPath, v70);
    swift_release(KeyPath);
    swift_release(v70);
    v71 = v138[0];
    v72 = sub_1003D744C(v65, v138[0]);
    v74 = v73;
    v76 = v75;
    v78 = v77;
    v79 = swift_bridgeObjectRelease(v71);
    if (!v74)
    {
      (*(void (**)(uint64_t, uint64_t, __n128))(v64 + 8))(v65, v132, v79);
      v95 = v127;
      v112 = v135;
      goto LABEL_24;
    }
    swift_bridgeObjectRetain(v74);
    v80 = v72;
    v81 = v135;
    UIListContentConfiguration.text.setter(v80, v74);
    v82 = v76;
    v83 = v76;
    v55 = v81;
    UIListContentConfiguration.image.setter(v83);

    swift_bridgeObjectRelease(v74);
    v84 = swift_release(v78);
    (*(void (**)(uint64_t, uint64_t, __n128))(v64 + 8))(v65, v132, v84);
    v52 = v129;
  }
  v85 = (void (*)(uint64_t *, _QWORD))UIListContentConfiguration.imageProperties.modify(v138);
  UIListContentConfiguration.ImageProperties.maximumSize.setter(22.0, 22.0);
  v85(v138, 0);
  v86 = (uint64_t (*)(uint64_t *, _QWORD))UIListContentConfiguration.imageProperties.modify(v138);
  UIListContentConfiguration.ImageProperties.reservedLayoutSize.setter(22.0, 22.0);
  v87 = v86(v138, 0);
  v88 = (uint64_t)v120;
  static UIBackgroundConfiguration.clear()(v87);
  v89 = type metadata accessor for UIBackgroundConfiguration(0);
  v90 = *(_QWORD *)(v89 - 8);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v90 + 56))(v88, 0, 1, v89);
  v91 = UITableViewCell.backgroundConfiguration.setter(v88);
  v92 = (uint64_t)v121;
  UITableViewCell.backgroundConfiguration.getter(v91);
  v93 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v90 + 48))(v92, 1, v89);
  v94 = (uint64_t)v125;
  if (v93)
  {
    sub_100007464(v92, v88, &qword_1005DA760);
    UITableViewCell.backgroundConfiguration.setter(v88);
    sub_1000051EC(v92, &qword_1005DA760);
  }
  else
  {
    UIBackgroundConfiguration.backgroundColor.setter(objc_msgSend(v52, "secondarySystemBackgroundColor"));
    UITableViewCell.backgroundConfiguration.setter(v92);
  }
  v95 = v127;
  v138[3] = v127;
  v138[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
  v96 = sub_10003D370(v138);
  (*(void (**)(_QWORD *, char *, uint64_t))(v133 + 16))(v96, v55, v95);
  v97 = UITableViewCell.contentConfiguration.setter(v138);
  __chkstk_darwin(v97);
  v98 = type metadata accessor for FMIPAccessoryDiscoveryController(0);
  v115[-4] = v98;
  v99 = sub_100008000((unint64_t *)&unk_1005DEDF0, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPAccessoryDiscoveryController, (uint64_t)&protocol conformance descriptor for FMIPAccessoryDiscoveryController);
  v115[-3] = v99;
  v100 = swift_getKeyPath(&unk_100491A90);
  __chkstk_darwin(v100);
  v115[-4] = v98;
  v115[-3] = v99;
  v139._object = &off_100547138;
  v114 = &off_10054A518;
  v101 = swift_getKeyPath(&unk_100491AC8);
  v102 = v126;
  static Published.subscript.getter(v126, v131, v100, v101);
  swift_release(v100);
  swift_release(v101);
  sub_100007464(v136, v94, &qword_1005D6810);
  v103 = v122;
  v104 = v123;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v122 + 56))(v94, 0, 1, v123);
  v105 = v134;
  v106 = v134 + *(int *)(v124 + 48);
  v107 = (uint64_t *)&unk_1005DEDE0;
  sub_100007464((uint64_t)v102, v134, (uint64_t *)&unk_1005DEDE0);
  sub_100007464(v94, v106, (uint64_t *)&unk_1005DEDE0);
  v108 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v103 + 48);
  if (v108(v105, 1, v104) == 1)
  {
    sub_1000051EC(v94, (uint64_t *)&unk_1005DEDE0);
    sub_1000051EC((uint64_t)v102, (uint64_t *)&unk_1005DEDE0);
    if (v108(v106, 1, v104) == 1)
    {
      v109 = -1;
    }
    else
    {
      v107 = (uint64_t *)&unk_1005E5680;
      v109 = 0;
    }
  }
  else
  {
    v110 = (uint64_t)v118;
    sub_100007464(v134, (uint64_t)v118, (uint64_t *)&unk_1005DEDE0);
    if (v108(v106, 1, v104) == 1)
    {
      sub_1000051EC(v94, (uint64_t *)&unk_1005DEDE0);
      sub_1000051EC((uint64_t)v102, (uint64_t *)&unk_1005DEDE0);
      sub_1000051EC(v110, &qword_1005D6810);
      v109 = 0;
      v107 = (uint64_t *)&unk_1005E5680;
    }
    else
    {
      v111 = v117;
      sub_10005DAA0(v106, v117, &qword_1005D6810);
      v109 = sub_100451268(v110, v111, &qword_1005D6810, &qword_1005E5678);
      sub_1000051EC(v111, &qword_1005D6810);
      v107 = (uint64_t *)&unk_1005DEDE0;
      sub_1000051EC(v94, (uint64_t *)&unk_1005DEDE0);
      sub_1000051EC((uint64_t)v102, (uint64_t *)&unk_1005DEDE0);
      sub_1000051EC(v110, &qword_1005D6810);
    }
  }
  v112 = v135;
  sub_1000051EC(v134, v107);
  objc_msgSend(v53, "setSelected:", v109 & 1);
LABEL_24:
  (*(void (**)(char *, uint64_t))(v133 + 8))(v112, v95);
  return v53;
}

id sub_100458268(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t (*v33)(char *, void *, uint64_t);
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  _BOOL4 v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  __n128 v44;
  uint64_t v45;
  unsigned int (*v46)(char *, uint64_t, uint64_t);
  const char *v47;
  unint64_t v48;
  NSString v49;
  Class isa;
  id v51;
  void *v52;
  id v53;
  id v54;
  char *v55;
  uint64_t v56;
  id v57;
  Swift::String v58;
  Swift::String_optional v59;
  Swift::String v60;
  Swift::String v61;
  id v62;
  void (*v63)(uint64_t *, _QWORD);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t KeyPath;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  __n128 v79;
  uint64_t v80;
  char *v81;
  id v82;
  void *v83;
  __n128 v84;
  void (*v85)(uint64_t *, _QWORD);
  uint64_t (*v86)(uint64_t *, _QWORD);
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  unsigned int (*v108)(uint64_t, uint64_t, uint64_t);
  char v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  _UNKNOWN **v114;
  _QWORD v115[2];
  void *v116;
  uint64_t v117;
  char *v118;
  char *v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138[6];
  Swift::String v139;

  v131 = a4;
  v136 = a3;
  v124 = sub_100053F2C(&qword_1005E5640);
  __chkstk_darwin(v124);
  v134 = (uint64_t)v115 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100053F2C((uint64_t *)&unk_1005E5488);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)v115 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v125 = (char *)v115 - v12;
  __chkstk_darwin(v11);
  v126 = (_QWORD *)((char *)v115 - v13);
  v14 = sub_100053F2C(&qword_1005DA760);
  v15 = __chkstk_darwin(v14);
  v121 = (char *)v115 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v18 = (char *)v115 - v17;
  v132 = type metadata accessor for UUID(0);
  v130 = *(_QWORD *)(v132 - 8);
  __chkstk_darwin(v132);
  v119 = (char *)v115 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = type metadata accessor for UIListContentConfiguration(0);
  v133 = *(_QWORD *)(v127 - 8);
  __chkstk_darwin(v127);
  v135 = (char *)v115 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100053F2C(&qword_1005D6760);
  v122 = *(_QWORD *)(v21 - 8);
  v123 = v21;
  v22 = __chkstk_darwin(v21);
  v117 = (uint64_t)v115 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v22);
  v128 = (uint64_t)v115 - v25;
  __chkstk_darwin(v24);
  v27 = (char *)v115 - v26;
  v28 = type metadata accessor for IndexPath(0);
  v29 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v31 = (char *)v115 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v32 = type metadata accessor for Logger(0);
  sub_100056D88(v32, (uint64_t)qword_1005F5748);
  v33 = *(uint64_t (**)(char *, void *, uint64_t))(v29 + 16);
  v129 = a2;
  v34 = v33(v31, a2, v28);
  v35 = Logger.logObject.getter(v34);
  v36 = static os_log_type_t.default.getter(v35);
  v37 = os_log_type_enabled(v35, v36);
  v118 = v10;
  v120 = v18;
  if (v37)
  {
    v38 = (uint8_t *)swift_slowAlloc(12, -1);
    v39 = swift_slowAlloc(32, -1);
    v138[0] = v39;
    v116 = a1;
    *(_DWORD *)v38 = 136315138;
    v115[1] = v38 + 4;
    v40 = sub_100008000(&qword_1005DA770, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    v41 = dispatch thunk of CustomStringConvertible.description.getter(v28, v40);
    v43 = v42;
    v137 = sub_100056DA0(v41, v42, v138);
    a1 = v116;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v137, v138);
    v44 = swift_bridgeObjectRelease(v43);
    (*(void (**)(char *, uint64_t, __n128))(v29 + 8))(v31, v28, v44);
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "FMAccessoryDiscoveryDataSource: dequeueConfiguredReusableCell(for: %s)", v38, 0xCu);
    swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1, -1);
    swift_slowDealloc(v38, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
  }

  sub_100007464(v136, (uint64_t)v27, &qword_1005D6760);
  v45 = sub_100053F2C((uint64_t *)&unk_1005DEE00);
  v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 48);
  if (v46(v27, 1, v45) == 1)
  {
    v47 = "FMAccessoryDiscoveryDataSourceSearchingCell";
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v130 + 8))(v27, v132);
    v47 = "FMAccessoryDiscoveryDataSourceAccessoryCell";
  }
  v48 = (unint64_t)(v47 - 32) | 0x8000000000000000;
  v49 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v48);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v51 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v49, isa);

  v52 = (void *)objc_opt_self(UIColor);
  v53 = v51;
  v54 = objc_msgSend(v52, "systemGroupedBackgroundColor");
  objc_msgSend(v53, "setBackgroundColor:", v54);

  v55 = v135;
  static UIListContentConfiguration.cell()();
  v56 = v128;
  sub_100007464(v136, v128, &qword_1005D6760);
  if (v46((char *)v56, 1, v45) == 1)
  {
    v57 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v139._countAndFlagsBits = 0xD000000000000018;
    v58._countAndFlagsBits = 0xD000000000000027;
    v139._object = (void *)0x80000001004A5660;
    v58._object = (void *)0x80000001004B3B50;
    v59.value._object = (void *)0x80000001004A5640;
    v59.value._countAndFlagsBits = 0xD000000000000013;
    v60._countAndFlagsBits = 0;
    v60._object = (void *)0xE000000000000000;
    v61 = NSLocalizedString(_:tableName:bundle:value:comment:)(v58, v59, (NSBundle)v57, v60, v139);

    UIListContentConfiguration.text.setter(v61._countAndFlagsBits, v61._object);
    v62 = objc_msgSend(v52, "secondaryLabelColor");
    v63 = (void (*)(uint64_t *, _QWORD))UIListContentConfiguration.textProperties.modify(v138);
    UIListContentConfiguration.TextProperties.color.setter(v62);
    v63(v138, 0);
    UIListContentConfiguration.image.setter(objc_msgSend(objc_allocWithZone((Class)UIImage), "init"));
  }
  else
  {
    v129 = v52;
    v64 = v130;
    v65 = (uint64_t)v119;
    v66 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v130 + 32))(v119, v56, v132);
    __chkstk_darwin(v66);
    v67 = type metadata accessor for FMIPUnknownAccessoryDiscoveryController(0);
    v115[-4] = v67;
    v68 = sub_100008000(&qword_1005E5498, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPUnknownAccessoryDiscoveryController, (uint64_t)&protocol conformance descriptor for FMIPUnknownAccessoryDiscoveryController);
    v115[-3] = v68;
    KeyPath = swift_getKeyPath(&unk_100491BF0);
    __chkstk_darwin(KeyPath);
    v115[-4] = v67;
    v115[-3] = v68;
    v139._object = &off_100547150;
    v114 = &off_10054A510;
    v70 = swift_getKeyPath(&unk_100491C28);
    static Published.subscript.getter(v138, v131, KeyPath, v70);
    swift_release(KeyPath);
    swift_release(v70);
    v71 = v138[0];
    v72 = sub_1003D744C(v65, v138[0]);
    v74 = v73;
    v76 = v75;
    v78 = v77;
    v79 = swift_bridgeObjectRelease(v71);
    if (!v74)
    {
      (*(void (**)(uint64_t, uint64_t, __n128))(v64 + 8))(v65, v132, v79);
      v95 = v127;
      v112 = v135;
      goto LABEL_24;
    }
    swift_bridgeObjectRetain(v74);
    v80 = v72;
    v81 = v135;
    UIListContentConfiguration.text.setter(v80, v74);
    v82 = v76;
    v83 = v76;
    v55 = v81;
    UIListContentConfiguration.image.setter(v83);

    swift_bridgeObjectRelease(v74);
    v84 = swift_release(v78);
    (*(void (**)(uint64_t, uint64_t, __n128))(v64 + 8))(v65, v132, v84);
    v52 = v129;
  }
  v85 = (void (*)(uint64_t *, _QWORD))UIListContentConfiguration.imageProperties.modify(v138);
  UIListContentConfiguration.ImageProperties.maximumSize.setter(22.0, 22.0);
  v85(v138, 0);
  v86 = (uint64_t (*)(uint64_t *, _QWORD))UIListContentConfiguration.imageProperties.modify(v138);
  UIListContentConfiguration.ImageProperties.reservedLayoutSize.setter(22.0, 22.0);
  v87 = v86(v138, 0);
  v88 = (uint64_t)v120;
  static UIBackgroundConfiguration.clear()(v87);
  v89 = type metadata accessor for UIBackgroundConfiguration(0);
  v90 = *(_QWORD *)(v89 - 8);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v90 + 56))(v88, 0, 1, v89);
  v91 = UITableViewCell.backgroundConfiguration.setter(v88);
  v92 = (uint64_t)v121;
  UITableViewCell.backgroundConfiguration.getter(v91);
  v93 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v90 + 48))(v92, 1, v89);
  v94 = (uint64_t)v125;
  if (v93)
  {
    sub_100007464(v92, v88, &qword_1005DA760);
    UITableViewCell.backgroundConfiguration.setter(v88);
    sub_1000051EC(v92, &qword_1005DA760);
  }
  else
  {
    UIBackgroundConfiguration.backgroundColor.setter(objc_msgSend(v52, "secondarySystemBackgroundColor"));
    UITableViewCell.backgroundConfiguration.setter(v92);
  }
  v95 = v127;
  v138[3] = v127;
  v138[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
  v96 = sub_10003D370(v138);
  (*(void (**)(_QWORD *, char *, uint64_t))(v133 + 16))(v96, v55, v95);
  v97 = UITableViewCell.contentConfiguration.setter(v138);
  __chkstk_darwin(v97);
  v98 = type metadata accessor for FMIPUnknownAccessoryDiscoveryController(0);
  v115[-4] = v98;
  v99 = sub_100008000(&qword_1005E5498, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPUnknownAccessoryDiscoveryController, (uint64_t)&protocol conformance descriptor for FMIPUnknownAccessoryDiscoveryController);
  v115[-3] = v99;
  v100 = swift_getKeyPath(&unk_100491A90);
  __chkstk_darwin(v100);
  v115[-4] = v98;
  v115[-3] = v99;
  v139._object = &off_100547150;
  v114 = &off_10054A510;
  v101 = swift_getKeyPath(&unk_100491AC8);
  v102 = v126;
  static Published.subscript.getter(v126, v131, v100, v101);
  swift_release(v100);
  swift_release(v101);
  sub_100007464(v136, v94, &qword_1005D6760);
  v103 = v122;
  v104 = v123;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v122 + 56))(v94, 0, 1, v123);
  v105 = v134;
  v106 = v134 + *(int *)(v124 + 48);
  v107 = (uint64_t *)&unk_1005E5488;
  sub_100007464((uint64_t)v102, v134, (uint64_t *)&unk_1005E5488);
  sub_100007464(v94, v106, (uint64_t *)&unk_1005E5488);
  v108 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v103 + 48);
  if (v108(v105, 1, v104) == 1)
  {
    sub_1000051EC(v94, (uint64_t *)&unk_1005E5488);
    sub_1000051EC((uint64_t)v102, (uint64_t *)&unk_1005E5488);
    if (v108(v106, 1, v104) == 1)
    {
      v109 = -1;
    }
    else
    {
      v107 = &qword_1005E5640;
      v109 = 0;
    }
  }
  else
  {
    v110 = (uint64_t)v118;
    sub_100007464(v134, (uint64_t)v118, (uint64_t *)&unk_1005E5488);
    if (v108(v106, 1, v104) == 1)
    {
      sub_1000051EC(v94, (uint64_t *)&unk_1005E5488);
      sub_1000051EC((uint64_t)v102, (uint64_t *)&unk_1005E5488);
      sub_1000051EC(v110, &qword_1005D6760);
      v109 = 0;
      v107 = &qword_1005E5640;
    }
    else
    {
      v111 = v117;
      sub_10005DAA0(v106, v117, &qword_1005D6760);
      v109 = sub_100451268(v110, v111, &qword_1005D6760, &qword_1005E5638);
      sub_1000051EC(v111, &qword_1005D6760);
      v107 = (uint64_t *)&unk_1005E5488;
      sub_1000051EC(v94, (uint64_t *)&unk_1005E5488);
      sub_1000051EC((uint64_t)v102, (uint64_t *)&unk_1005E5488);
      sub_1000051EC(v110, &qword_1005D6760);
    }
  }
  v112 = v135;
  sub_1000051EC(v134, v107);
  objc_msgSend(v53, "setSelected:", v109 & 1);
LABEL_24:
  (*(void (**)(char *, uint64_t))(v133 + 8))(v112, v95);
  return v53;
}

id sub_100458EDC(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  id v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  char *v14;
  id v15;
  id v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  objc_super v28;

  v3 = OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_stackView;
  v4 = objc_allocWithZone((Class)UIStackView);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_headerView;
  if (qword_1005D1D90 != -1)
    swift_once(&qword_1005D1D90, sub_100265164);
  v7 = xmmword_1005F5558;
  v8 = xmmword_1005F5568;
  v9 = objc_allocWithZone((Class)type metadata accessor for FMAccessoryDiscoveryListHeaderView());
  swift_bridgeObjectRetain(*((_QWORD *)&v7 + 1));
  swift_bridgeObjectRetain(*((_QWORD *)&v8 + 1));
  *(_QWORD *)&v5[v6] = sub_100265364(v7, *((uint64_t *)&v7 + 1), v8, *((uint64_t *)&v8 + 1));
  v10 = OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_continueButton;
  v11 = (char *)objc_allocWithZone((Class)type metadata accessor for FMEmptyListButton());
  v12 = OBJC_IVAR____TtC6FindMy17FMEmptyListButton_textColor;
  v13 = (void *)objc_opt_self(UIColor);
  v14 = v11;
  *(_QWORD *)&v11[v12] = objc_msgSend(v13, "systemBlueColor");
  v14[OBJC_IVAR____TtC6FindMy17FMEmptyListButton_isEnabled] = 1;

  v15 = objc_msgSend(v13, "tertiarySystemFillColor");
  v16 = sub_1000472FC(v15, 1, 1, 0);

  *(_QWORD *)&v5[v10] = v16;
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_cancellables] = _swiftEmptyArrayStorage;
  v17 = &v5[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_scrollHandler];
  v18 = type metadata accessor for FMIPUnknownAccessoryDiscoveryController(0);
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  v19 = FMIPUnknownAccessoryDiscoveryController.init()();
  v20 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMSafeAreaInsetsPropagatingTableView()), "initWithFrame:style:", 2, 0.0, 0.0, 0.0, 0.0);
  v21 = *(_QWORD *)(a1 + 64);
  objc_allocWithZone((Class)sub_100053F2C((uint64_t *)&unk_1005E55F0));
  swift_retain(v19);
  v22 = v20;
  swift_retain(v21);
  v23 = sub_100451AF8(v19, v22, v21);
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_discoveryController] = v19;
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_tableView] = v22;
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_dataSource] = v23;
  swift_retain(v19);
  v24 = v22;
  v25 = v23;

  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator] = a1;
  v28.receiver = v5;
  v28.super_class = (Class)type metadata accessor for FMMediatedViewController();
  v26 = objc_msgSendSuper2(&v28, "initWithNibName:bundle:", 0, 0);

  swift_release(v19);
  return v26;
}

void sub_100459234(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  objc_class *v11;
  uint64_t v12;
  void (*v13)(_BYTE *, _QWORD);
  __n128 v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, unint64_t, uint64_t, __n128);
  __n128 v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t, __n128);
  Class isa;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  id v32;
  _BYTE v33[32];
  objc_super v34;

  v2 = v1;
  v4 = type metadata accessor for IndexPath(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100053F2C(&qword_1005D33C0);
  __chkstk_darwin(v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (objc_class *)type metadata accessor for FMFindUnknownItemViewController();
  v34.receiver = v2;
  v34.super_class = v11;
  objc_msgSendSuper2(&v34, "viewWillAppear:", a1 & 1);
  v12 = swift_allocObject(&unk_100567898, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16);
  swift_retain(v12);
  v13 = (void (*)(_BYTE *, _QWORD))dispatch thunk of FMIPUnknownAccessoryDiscoveryController.callbacks.modify(v33);
  FMIPUnknownAccessoryDiscoveryController.Callbacks.errorHandler.setter(sub_100460A5C, v12);
  v13(v33, 0);
  v14 = swift_release(v12);
  dispatch thunk of FMIPUnknownAccessoryDiscoveryController.startDiscovery(completion:)(0, 0, v14);
  v32 = *(id *)&v2[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_tableView];
  v15 = objc_msgSend(v32, "indexPathsForSelectedRows");
  if (v15)
  {
    v16 = v15;
    v31 = v2;
    v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v15, v4);

    v18 = *(_QWORD *)(v17 + 16);
    v30 = v17;
    if (v18)
    {
      v19 = v17 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      v20 = *(_QWORD *)(v5 + 72);
      v21 = v17;
      v22 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16);
      v23 = swift_bridgeObjectRetain(v21);
      while (1)
      {
        v22(v10, v19, v4, v23);
        v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56);
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v24)(v10, 0, 1, v4);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
          break;
        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
        isa = IndexPath._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v32, "deselectRowAtIndexPath:animated:", isa, 1);

        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        v19 += v20;
        if (!--v18)
          goto LABEL_8;
      }
    }
    else
    {
      v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56);
      v23 = swift_bridgeObjectRetain(v17);
LABEL_8:
      v24(v10, 1, 1, v4, v23);
    }
    swift_bridgeObjectRelease_n(v30, 2);
    v2 = v31;
  }
  v26 = objc_msgSend(v2, "view", sub_10045A01C());
  if (v26)
  {
    v27 = v26;
    v28 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
    objc_msgSend(v27, "setBackgroundColor:", v28);

  }
  else
  {
    __break(1u);
  }
}

void sub_100459530(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_10045BFC0(a1);

  }
}

uint64_t sub_1004595C8(char a1)
{
  char *v1;
  char *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t i;
  uint64_t v9;
  uint64_t v10;
  char v11[24];
  objc_super v12;

  v2 = v1;
  v12.receiver = v2;
  v12.super_class = (Class)type metadata accessor for FMFindUnknownItemViewController();
  objc_msgSendSuper2(&v12, "viewDidDisappear:", a1 & 1);
  dispatch thunk of FMIPUnknownAccessoryDiscoveryController.stopDiscovery(completion:)(0, 0);
  v4 = (uint64_t *)&v2[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_cancellables];
  swift_beginAccess(v4, v11, 0, 0);
  v5 = *v4;
  if (!((unint64_t)v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n(v5, 2);
    if (v6)
      goto LABEL_3;
    return swift_bridgeObjectRelease_n(v5, 2);
  }
  if (v5 < 0)
    v10 = v5;
  else
    v10 = v5 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(v5, 2);
  result = _CocoaArrayWrapper.endIndex.getter(v10);
  v6 = result;
  if (!result)
    return swift_bridgeObjectRelease_n(v5, 2);
LABEL_3:
  if (v6 >= 1)
  {
    for (i = 0; i != v6; ++i)
    {
      if ((v5 & 0xC000000000000001) != 0)
      {
        v9 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v5);
      }
      else
      {
        v9 = *(_QWORD *)(v5 + 8 * i + 32);
        swift_retain(v9);
      }
      AnyCancellable.cancel()();
      swift_release(v9);
    }
    return swift_bridgeObjectRelease_n(v5, 2);
  }
  __break(1u);
  return result;
}

void sub_100459810()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  sub_100459948();
  sub_100459AC8();
  v1 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 7);
  objc_msgSend(v1, "addTarget:action:forControlEvents:", v0, "handleCloseButtonWithSender:", 64);
  v2 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v1);
  v3 = objc_msgSend(v0, "navigationItem");
  objc_msgSend(v3, "setRightBarButtonItem:", v2);

  sub_100459E8C();
  v4 = objc_msgSend(v0, "view", sub_10045A01C());
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend((id)objc_opt_self(UIColor), "systemBackgroundColor");
    objc_msgSend(v5, "setBackgroundColor:", v6);

  }
  else
  {
    __break(1u);
  }
}

void sub_100459948()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;

  v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_tableView];
  v2 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v1, "setBackgroundColor:", v2);

  objc_msgSend(v1, "setDelegate:", v0);
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v1, "setAllowsSelection:", 1);
  objc_msgSend(v1, "setAllowsMultipleSelection:", 0);
  objc_msgSend(v1, "_setSectionContentInset:", 0.0, COERCE_DOUBLE(1), 0.0, COERCE_DOUBLE(1));
  v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_stackView];
  objc_msgSend(v3, "setAxis:", 1);
  objc_msgSend(v3, "setSpacing:", 1.17549435e-38);
  objc_msgSend(v3, "addArrangedSubview:", v1);
  objc_msgSend(v3, "addArrangedSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_continueButton]);
  v4 = objc_msgSend(v0, "view");
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, "addSubview:", v3);

  }
  else
  {
    __break(1u);
  }
}

void sub_100459AC8()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  Class isa;

  v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_stackView];
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_continueButton];
  v3 = *(id *)&v0[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_tableView];
  v4 = v1;
  v5 = v2;
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v6 = sub_100053F2C(&qword_1005D2F10);
  v7 = swift_allocObject(v6, 64, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100481720;
  v8 = objc_msgSend(v4, "leadingAnchor");
  v9 = objc_msgSend(v0, "view");
  if (!v9)
  {
    __break(1u);
    goto LABEL_7;
  }
  v10 = v9;
  v11 = objc_msgSend(v9, "layoutMarginsGuide");

  v12 = objc_msgSend(v11, "leadingAnchor");
  v13 = objc_msgSend(v8, "constraintEqualToAnchor:", v12);

  *(_QWORD *)(v7 + 32) = v13;
  v14 = objc_msgSend(v4, "trailingAnchor");
  v15 = objc_msgSend(v0, "view");
  if (!v15)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v16 = v15;
  v17 = objc_msgSend(v15, "layoutMarginsGuide");

  v18 = objc_msgSend(v17, "trailingAnchor");
  v19 = objc_msgSend(v14, "constraintEqualToAnchor:", v18);

  *(_QWORD *)(v7 + 40) = v19;
  v20 = objc_msgSend(v4, "topAnchor");
  v21 = objc_msgSend(v0, "view");
  if (!v21)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v22 = v21;
  v23 = objc_msgSend(v21, "layoutMarginsGuide");

  v24 = objc_msgSend(v23, "topAnchor");
  v25 = objc_msgSend(v20, "constraintEqualToAnchor:", v24);

  *(_QWORD *)(v7 + 48) = v25;
  v26 = objc_msgSend(v4, "bottomAnchor");
  v27 = objc_msgSend(v0, "view");
  if (v27)
  {
    v28 = v27;
    v29 = (void *)objc_opt_self(NSLayoutConstraint);
    v30 = objc_msgSend(v28, "layoutMarginsGuide");

    v31 = objc_msgSend(v30, "bottomAnchor");
    v32 = objc_msgSend(v26, "constraintEqualToAnchor:constant:", v31, -18.0);

    *(_QWORD *)(v7 + 56) = v32;
    specialized Array._endMutation()(v33);
    sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v29, "activateConstraints:", isa, swift_bridgeObjectRelease(v7).n128_f64[0]);

    return;
  }
LABEL_9:
  __break(1u);
}

void sub_100459E8C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  Swift::String v7;
  Swift::String_optional v8;
  Swift::String v9;
  void *object;
  NSString v11;
  id v12;
  Swift::String v13;

  v1 = v0;
  v2 = *(char **)(v0 + OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_continueButton);
  v3 = *(void **)&v2[OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label];
  v4 = (void *)objc_opt_self(NSBundle);
  v5 = v3;
  v6 = objc_msgSend(v4, "mainBundle");
  v13._countAndFlagsBits = 0xD000000000000018;
  v7._countAndFlagsBits = 0xD000000000000023;
  v13._object = (void *)0x80000001004A5660;
  v7._object = (void *)0x80000001004BCAA0;
  v8.value._object = (void *)0x80000001004A5640;
  v8.value._countAndFlagsBits = 0xD000000000000013;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, v8, (NSBundle)v6, v9, v13)._object;

  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "setText:", v11, swift_bridgeObjectRelease(object).n128_f64[0]);

  v12 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v1, "handleContinueButton");
  objc_msgSend(v2, "addGestureRecognizer:", v12);
  objc_msgSend(v2, "setUserInteractionEnabled:", 0);
  v2[OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_activityIndicatorPosition] = 1;
  sub_100046DB4();

}

double sub_10045A01C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t KeyPath;
  char *v34;
  id v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  __n128 v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  void *v48;
  uint64_t v49;
  char *v50;
  double v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  char *v90;
  __n128 v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  __n128 v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  __n128 v112;
  uint64_t v113;
  uint64_t v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  __n128 v118;
  double result;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  void (*v145)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v146;
  id v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  id v167;
  id v168;

  v139 = sub_100053F2C(&qword_1005E54A0);
  v140 = *(_QWORD *)(v139 - 8);
  __chkstk_darwin(v139);
  v137 = (char *)&v120 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = sub_100053F2C(&qword_1005E54A8);
  v142 = *(_QWORD *)(v141 - 8);
  __chkstk_darwin(v141);
  v138 = (char *)&v120 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = sub_100053F2C(&qword_1005E54B0);
  v134 = *(_QWORD *)(v133 - 8);
  __chkstk_darwin(v133);
  v131 = (char *)&v120 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = sub_100053F2C(&qword_1005E54B8);
  v136 = *(_QWORD *)(v135 - 8);
  __chkstk_darwin(v135);
  v132 = (char *)&v120 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = sub_100053F2C(&qword_1005E54C0);
  v128 = *(_QWORD *)(v127 - 8);
  __chkstk_darwin(v127);
  v125 = (char *)&v120 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = sub_100053F2C(&qword_1005E54C8);
  v130 = *(_QWORD *)(v129 - 8);
  __chkstk_darwin(v129);
  v126 = (char *)&v120 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = sub_100053F2C(&qword_1005E54D0);
  v152 = *(_QWORD *)(v162 - 8);
  __chkstk_darwin(v162);
  v155 = (char *)&v120 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = sub_100053F2C(&qword_1005E54D8);
  v150 = *(_QWORD *)(v163 - 8);
  __chkstk_darwin(v163);
  v157 = (char *)&v120 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = sub_100053F2C(&qword_1005E54E0);
  v122 = *(_QWORD *)(v159 - 8);
  __chkstk_darwin(v159);
  v158 = (char *)&v120 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = sub_100053F2C((uint64_t *)&unk_1005E54E8);
  v124 = *(_QWORD *)(v123 - 8);
  __chkstk_darwin(v123);
  v121 = (char *)&v120 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100053F2C(&qword_1005D9640);
  __chkstk_darwin(v11);
  v161 = (char *)&v120 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100053F2C(&qword_1005E54F8);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v120 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100053F2C(&qword_1005E5500);
  v156 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v19 = (char *)&v120 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100053F2C(&qword_1005E5508);
  v164 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v22 = (char *)&v120 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(char **)(v0 + OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_dataSource);
  v144 = *(_QWORD *)(qword_1005F4EC0 + (swift_isaMask & *(_QWORD *)v23) + 48);
  v24 = *(_QWORD *)&v23[v144];
  v148 = v23;
  swift_beginAccess(v24 + *(_QWORD *)(*(_QWORD *)v24 + 112), &v168, 33, 0);
  v25 = sub_100053F2C(&qword_1005E5510);
  Published.projectedValue.getter(v25);
  swift_endAccess(&v168);
  v26 = sub_10003F774(&qword_1005E5518, &qword_1005E54F8, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v27 = (void *)Publisher.eraseToAnyPublisher()(v13, v26);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v168 = v27;
  v28 = sub_100053F2C(&qword_1005E5520);
  v29 = sub_10003F774(&qword_1005E5528, &qword_1005E5520, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  Publisher.map<A>(_:)(sub_10045B144, 0, v28, &type metadata for Bool, v29);
  swift_release(v27);
  v147 = (id)objc_opt_self(NSRunLoop);
  v168 = objc_msgSend(v147, "mainRunLoop");
  v146 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  v145 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v146 - 8) + 56);
  v30 = (uint64_t)v161;
  v145(v161, 1, 1, v146);
  v31 = sub_100006C5C(0, (unint64_t *)&qword_1005E5530, NSRunLoop_ptr);
  v166 = v31;
  v32 = sub_10003F774(&qword_1005E5538, &qword_1005E5500, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v165 = sub_100460770((unint64_t *)&qword_1005E5540, (unint64_t *)&qword_1005E5530, NSRunLoop_ptr, (uint64_t)&protocol conformance descriptor for NSRunLoop);
  Publisher.receive<A>(on:options:)(&v168, v30, v17, v31, v32, v165);
  sub_1000051EC(v30, &qword_1005D9640);

  (*(void (**)(char *, uint64_t))(v156 + 8))(v19, v17);
  KeyPath = swift_getKeyPath(&unk_100491B08);
  v34 = v160;
  v168 = *(id *)&v160[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_continueButton];
  v35 = v168;
  v36 = sub_10003F774(&qword_1005E5548, &qword_1005E5508, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v37 = v35;
  v38 = Publisher<>.assign<A>(to:on:)(KeyPath, &v168, v20, v36);

  v39 = swift_release(KeyPath);
  (*(void (**)(char *, uint64_t, __n128))(v164 + 8))(v22, v20, v39);
  v40 = &v34[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_cancellables];
  v143 = &v34[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_cancellables];
  swift_beginAccess(&v34[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_cancellables], &v168, 33, 0);
  v41 = sub_100053F2C(&qword_1005E5550);
  v156 = v41;
  v164 = sub_10003F774(&qword_1005E5558, &qword_1005E5550, (uint64_t)&protocol conformance descriptor for [A]);
  AnyCancellable.store<A>(in:)(v40, v41, v164);
  swift_endAccess(&v168);
  swift_release(v38);
  v42 = v144;
  swift_beginAccess(*(_QWORD *)&v23[v144] + *(_QWORD *)(**(_QWORD **)&v23[v144] + 120), &v168, 33, 0);
  v154 = sub_100053F2C(&qword_1005E5560);
  v43 = v155;
  Published.projectedValue.getter(v154);
  swift_endAccess(&v168);
  v153 = sub_10003F774(&qword_1005E5568, &qword_1005E54D0, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v44 = v157;
  v45 = v162;
  Publisher.map<A>(_:)(sub_10011C478, 0, v162, &type metadata for Int, v153);
  v152 = *(_QWORD *)(v152 + 8);
  ((void (*)(char *, uint64_t))v152)(v43, v45);
  v151 = sub_10003F774(&qword_1005E5570, &qword_1005E54D8, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v46 = v163;
  v47 = v44;
  v48 = (void *)Publisher.eraseToAnyPublisher()(v163, v151);
  v150 = *(_QWORD *)(v150 + 8);
  ((void (*)(char *, uint64_t))v150)(v47, v46);
  v168 = v48;
  v49 = sub_100053F2C(&qword_1005E5578);
  v120 = v49;
  v149 = sub_10003F774(&qword_1005E5580, &qword_1005E5578, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v50 = v158;
  Publisher.map<A>(_:)(sub_10045B194, 0, v49, &type metadata for Bool, v149);
  *(_QWORD *)&v51 = swift_release(v48).n128_u64[0];
  v52 = v147;
  v168 = objc_msgSend(v147, "mainRunLoop", v51);
  v53 = (uint64_t)v161;
  v54 = v146;
  v55 = v145;
  v145(v161, 1, 1, v146);
  v56 = sub_10003F774(&qword_1005E5588, &qword_1005E54E0, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v57 = v121;
  v58 = v159;
  Publisher.receive<A>(on:options:)(&v168, v53, v159, v166, v56, v165);
  sub_1000051EC(v53, &qword_1005D9640);

  v122 = *(_QWORD *)(v122 + 8);
  ((void (*)(char *, uint64_t))v122)(v50, v58);
  v59 = swift_getKeyPath(&unk_100491B30);
  v168 = v37;
  v60 = sub_10003F774(&qword_1005E5590, (uint64_t *)&unk_1005E54E8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v61 = v37;
  v62 = v123;
  v63 = Publisher<>.assign<A>(to:on:)(v59, &v168, v123, v60);

  v64 = swift_release(v59);
  (*(void (**)(char *, uint64_t, __n128))(v124 + 8))(v57, v62, v64);
  v65 = v143;
  swift_beginAccess(v143, &v168, 33, 0);
  AnyCancellable.store<A>(in:)(v65, v156, v164);
  swift_endAccess(&v168);
  swift_release(v63);
  swift_beginAccess(*(_QWORD *)&v148[v42] + *(_QWORD *)(**(_QWORD **)&v148[v42] + 120), &v168, 33, 0);
  v66 = v155;
  Published.projectedValue.getter(v154);
  swift_endAccess(&v168);
  v67 = v157;
  v68 = v162;
  Publisher.map<A>(_:)(sub_10011C478, 0, v162, &type metadata for Int, v153);
  ((void (*)(char *, uint64_t))v152)(v66, v68);
  v69 = v163;
  v70 = (void *)Publisher.eraseToAnyPublisher()(v163, v151);
  ((void (*)(char *, uint64_t))v150)(v67, v69);
  v168 = v70;
  v167 = objc_msgSend(v52, "mainRunLoop");
  v71 = (uint64_t)v161;
  v55(v161, 1, 1, v54);
  v72 = v125;
  v73 = v120;
  Publisher.receive<A>(on:options:)(&v167, v71, v120, v166, v149, v165);
  v74 = v71;
  sub_1000051EC(v71, &qword_1005D9640);

  swift_release(v168);
  v75 = sub_10003F774(&qword_1005E5598, &qword_1005E54C0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v76 = v126;
  v77 = v127;
  Publisher.map<A>(_:)(sub_10045B1A8, 0, v127, &type metadata for Bool, v75);
  (*(void (**)(char *, uint64_t))(v128 + 8))(v72, v77);
  v78 = swift_getKeyPath(&unk_100491B58);
  v79 = v148;
  v168 = v148;
  v80 = sub_10003F774(&qword_1005E55A0, &qword_1005E54C8, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v81 = v79;
  v82 = v129;
  v83 = Publisher<>.assign<A>(to:on:)(v78, &v168, v129, v80);

  v84 = swift_release(v78);
  (*(void (**)(char *, uint64_t, __n128))(v130 + 8))(v76, v82, v84);
  v85 = v143;
  swift_beginAccess(v143, &v168, 33, 0);
  v86 = v156;
  AnyCancellable.store<A>(in:)(v85, v156, v164);
  swift_endAccess(&v168);
  swift_release(v83);
  swift_beginAccess(*(_QWORD *)&v79[v144] + *(_QWORD *)(**(_QWORD **)&v79[v144] + 120), &v168, 33, 0);
  Published.projectedValue.getter(v154);
  swift_endAccess(&v168);
  v87 = v162;
  Publisher.map<A>(_:)(sub_10011C478, 0, v162, &type metadata for Int, v153);
  ((void (*)(char *, uint64_t))v152)(v66, v87);
  v88 = v163;
  v89 = (void *)Publisher.eraseToAnyPublisher()(v163, v151);
  ((void (*)(char *, uint64_t))v150)(v67, v88);
  v168 = v89;
  v90 = v158;
  Publisher.map<A>(_:)(sub_100460E0C, 0, v73, &type metadata for Bool, v149);
  v91 = swift_release(v89);
  v92 = v131;
  v93 = v159;
  Publishers.Map.map<A>(_:)(sub_10045B1BC, 0, v159, &type metadata for FMAccessoryDiscoveryHeaderConfiguration, v91);
  ((void (*)(char *, uint64_t))v122)(v90, v93);
  v168 = objc_msgSend(v147, "mainRunLoop");
  v145((char *)v74, 1, 1, v146);
  v94 = sub_10003F774(&qword_1005E55A8, &qword_1005E54B0, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v95 = v132;
  v96 = v133;
  Publisher.receive<A>(on:options:)(&v168, v74, v133, v166, v94, v165);
  sub_1000051EC(v74, &qword_1005D9640);

  (*(void (**)(char *, uint64_t))(v134 + 8))(v92, v96);
  v97 = swift_allocObject(&unk_100567A28, 24, 7);
  v98 = v160;
  *(_QWORD *)(v97 + 16) = v160;
  v99 = sub_10003F774(&qword_1005E55B0, &qword_1005E54B8, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v100 = v98;
  v101 = v135;
  v102 = Publisher<>.sink(receiveValue:)(sub_100460900, v97, v135, v99);
  v103 = swift_release(v97);
  (*(void (**)(char *, uint64_t, __n128))(v136 + 8))(v95, v101, v103);
  swift_beginAccess(v85, &v168, 33, 0);
  v104 = v164;
  AnyCancellable.store<A>(in:)(v85, v86, v164);
  swift_endAccess(&v168);
  swift_release(v102);
  v105 = *(void **)&v100[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_tableView];
  v106 = swift_getKeyPath(&unk_100491B90);
  v107 = v137;
  _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)(v106, 5);
  swift_release(v106);
  v108 = swift_allocObject(&unk_100567898, 24, 7);
  swift_unknownObjectWeakInit(v108 + 16);
  v109 = sub_10003F774(&qword_1005E55B8, &qword_1005E54A0, (uint64_t)&protocol conformance descriptor for NSObject.KeyValueObservingPublisher<A, B>);
  v110 = v138;
  v111 = v139;
  Publisher.map<A>(_:)(sub_100460958, v108, v139, &type metadata for Bool, v109);
  v112 = swift_release(v108);
  (*(void (**)(char *, uint64_t, __n128))(v140 + 8))(v107, v111, v112);
  v113 = swift_getKeyPath(&unk_100491BC8);
  v168 = v105;
  v114 = sub_10003F774(&qword_1005E55C0, &qword_1005E54A8, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v115 = v105;
  v116 = v141;
  v117 = Publisher<>.assign<A>(to:on:)(v113, &v168, v141, v114);

  v118 = swift_release(v113);
  (*(void (**)(char *, uint64_t, __n128))(v142 + 8))(v110, v116, v118);
  swift_beginAccess(v85, &v168, 33, 0);
  AnyCancellable.store<A>(in:)(v85, v86, v104);
  swift_endAccess(&v168);
  *(_QWORD *)&result = swift_release(v117).n128_u64[0];
  return result;
}

uint64_t sub_10045B144@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_100053F2C(&qword_1005D6760);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4);
  *a2 = (_DWORD)result != 1;
  return result;
}

_QWORD *sub_10045B194@<X0>(_QWORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result == 0;
  return result;
}

_QWORD *sub_10045B1A8@<X0>(_QWORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result > 0;
  return result;
}

void sub_10045B1BC(char *a1@<X0>, Swift::String *a2@<X8>)
{
  NSString v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  void *v8;
  id v9;
  Swift::String v10;
  Swift::String_optional v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  SEL *v15;
  unint64_t v16;
  id v17;
  Swift::String v18;
  Swift::String_optional v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  char v24;
  Swift::String v25;
  Swift::String v26;

  v24 = *a1;
  v3 = String._bridgeToObjectiveC()();
  v4 = MGGetBoolAnswer();

  v5 = sub_1001DE23C(0xD000000000000022, (void *)0x80000001004C8070);
  v7 = v6;
  v8 = (void *)objc_opt_self(NSBundle);
  v9 = objc_msgSend(v8, "mainBundle");
  v25._countAndFlagsBits = 0xD000000000000018;
  v25._object = (void *)0x80000001004A5660;
  v10._object = (void *)0x80000001004B88C0;
  v11.value._object = (void *)0x80000001004A5640;
  v10._countAndFlagsBits = 0xD000000000000022;
  v11.value._countAndFlagsBits = 0xD000000000000013;
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, v11, (NSBundle)v9, v12, v25);

  if (!v4)
    goto LABEL_7;
  v14 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v14 = v5 & 0xFFFFFFFFFFFFLL;
  if (v14)
  {
    v15 = (SEL *)&unk_1005AA000;
    if ((v24 & 1) != 0)
    {
      v16 = swift_bridgeObjectRelease(v7).n128_u64[0];
    }
    else
    {
      v22._countAndFlagsBits = v5;
      v22._object = (void *)v7;
      String.append(_:)(v22);
      swift_bridgeObjectRelease(v7);
      v23._countAndFlagsBits = 2570;
      v23._object = (void *)0xE200000000000000;
      String.append(_:)(v23);
      v16 = swift_bridgeObjectRelease(0xE200000000000000).n128_u64[0];
    }
  }
  else
  {
LABEL_7:
    v16 = swift_bridgeObjectRelease(v7).n128_u64[0];
    v15 = (SEL *)&unk_1005AA000;
  }
  v17 = objc_msgSend(v8, v15[208], *(double *)&v16);
  v26._countAndFlagsBits = 0xD000000000000018;
  v18._countAndFlagsBits = 0xD00000000000001FLL;
  v26._object = (void *)0x80000001004A5660;
  v18._object = (void *)0x80000001004B88A0;
  v19.value._object = (void *)0x80000001004A5640;
  v19.value._countAndFlagsBits = 0xD000000000000013;
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  v21 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, v19, (NSBundle)v17, v20, v26);

  *a2 = v21;
  a2[1] = v13;
}

void sub_10045B3D8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = (_QWORD *)(*(_QWORD *)(a2 + OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_headerView)
                + OBJC_IVAR____TtC6FindMy34FMAccessoryDiscoveryListHeaderView_configuration);
  v7 = v6[1];
  v8 = v6[2];
  v9 = v6[3];
  v10 = *v6 == *a1 && v7 == v2;
  if (!v10 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v6, v7, v3, v2, 0) & 1) == 0
    || (v8 == v5 ? (v11 = v9 == v4) : (v11 = 0),
        !v11 && (_stringCompareWithSmolCheck(_:_:expecting:)(v8, v9, v5, v4, 0) & 1) == 0))
  {
    v12 = v6[1];
    v13 = v6[3];
    *v6 = v3;
    v6[1] = v2;
    v6[2] = v5;
    v6[3] = v4;
    swift_bridgeObjectRetain_n(v2, 2);
    swift_bridgeObjectRetain(v4);
    swift_bridgeObjectRelease(v2);
    swift_bridgeObjectRelease(v13);
    swift_bridgeObjectRelease(v12);
    sub_100265620();
    sub_100453310(0);
  }
}

void sub_10045B4DC(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  double v4;
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  id v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double Height;
  _BYTE v18[24];
  CGRect v19;

  v4 = *(double *)(a1 + 8);
  v5 = a2 + 16;
  swift_beginAccess(a2 + 16, v18, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    v8 = *(id *)(Strong + OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_tableView);

    objc_msgSend(v8, "bounds");
    v10 = v9;
    v12 = v11;
    v14 = v13;
    v16 = v15;

    v19.origin.x = v10;
    v19.origin.y = v12;
    v19.size.width = v14;
    v19.size.height = v16;
    Height = CGRectGetHeight(v19);
  }
  else
  {
    Height = 0.0;
  }
  *a3 = Height < v4;
}

uint64_t sub_10045B5C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _UNKNOWN **v54;
  _UNKNOWN **v55;
  uint64_t v56;
  uint64_t v57;
  _UNKNOWN **v58;
  _UNKNOWN **v59;

  v1 = type metadata accessor for FMIPAccessoryError(0);
  v49 = *(_QWORD *)(v1 - 8);
  v50 = (void (*)(char *, uint64_t, uint64_t))v1;
  __chkstk_darwin(v1);
  v3 = (uint64_t *)((char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_100053F2C((uint64_t *)&unk_1005D2A50);
  __chkstk_darwin(v4);
  v43 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FMIPUnknownItem(0);
  v45 = *(_QWORD *)(v6 - 8);
  v46 = v6;
  v7 = *(_QWORD *)(v45 + 64);
  v8 = __chkstk_darwin(v6);
  v41 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v42 = (char *)&v40 - v9;
  v10 = sub_100053F2C((uint64_t *)&unk_1005E5488);
  __chkstk_darwin(v10);
  v12 = (uint64_t *)((char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v44 = type metadata accessor for UUID(0);
  v48 = *(_QWORD *)(v44 - 8);
  __chkstk_darwin(v44);
  v47 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = v0;
  v14 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_dataSource)
                  + *(_QWORD *)(qword_1005F4EC0
                              + (swift_isaMask & **(_QWORD **)(v0
                                                             + OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_dataSource))
                              + 48));
  v15 = type metadata accessor for FMIPUnknownAccessoryDiscoveryController(0);
  v56 = v15;
  v16 = sub_100008000(&qword_1005E5498, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPUnknownAccessoryDiscoveryController, (uint64_t)&protocol conformance descriptor for FMIPUnknownAccessoryDiscoveryController);
  v57 = v16;
  v58 = &off_100547150;
  v59 = &off_10054A510;
  KeyPath = swift_getKeyPath(&unk_100491A90);
  v52 = v15;
  v53 = v16;
  v54 = &off_100547150;
  v55 = &off_10054A510;
  v18 = swift_getKeyPath(&unk_100491AC8);
  static Published.subscript.getter(v12, v14, KeyPath, v18);
  swift_release(KeyPath);
  swift_release(v18);
  v19 = sub_100053F2C(&qword_1005D6760);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v12, 1, v19) == 1)
  {
    v20 = (uint64_t *)&unk_1005E5488;
LABEL_5:
    sub_1000051EC((uint64_t)v12, v20);
    goto LABEL_6;
  }
  v21 = sub_100053F2C((uint64_t *)&unk_1005DEE00);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v12, 1, v21) == 1)
  {
    v20 = &qword_1005D6760;
    goto LABEL_5;
  }
  v26 = v47;
  v25 = v48;
  v27 = v12;
  v28 = v44;
  (*(void (**)(char *, _QWORD *, uint64_t))(v48 + 32))(v47, v27, v44);
  v29 = (uint64_t)v43;
  dispatch thunk of FMIPUnknownAccessoryDiscoveryController.accessory(with:)(v26);
  v31 = v45;
  v30 = v46;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v29, 1, v46) != 1)
  {
    v50 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 32);
    v32 = v29;
    v33 = v42;
    v50(v42, v32, v30);
    v34 = swift_allocObject(&unk_100567898, 24, 7);
    swift_unknownObjectWeakInit(v34 + 16);
    v35 = v41;
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v41, v33, v30);
    v36 = *(unsigned __int8 *)(v31 + 80);
    v37 = (v36 + 24) & ~v36;
    v38 = swift_allocObject(&unk_1005679B0, v37 + v7, v36 | 7);
    *(_QWORD *)(v38 + 16) = v34;
    v50((char *)(v38 + v37), (uint64_t)v35, v30);
    swift_retain(v34);
    dispatch thunk of FMIPUnknownAccessoryDiscoveryController.stopDiscovery(completion:)(sub_1004606F4, v38);
    swift_release(v34);
    v39 = swift_release(v38);
    (*(void (**)(char *, uint64_t, __n128))(v31 + 8))(v33, v30, v39);
    return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v47, v28);
  }
  (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v28);
  sub_1000051EC(v29, (uint64_t *)&unk_1005D2A50);
LABEL_6:
  *v3 = 0;
  v23 = v49;
  v22 = v50;
  (*(void (**)(_QWORD *, _QWORD, _QWORD))(v49 + 104))(v3, enum case for FMIPAccessoryError.unknown(_:), v50);
  sub_10045BFDC((uint64_t)v3);
  return (*(uint64_t (**)(_QWORD *, void (*)(char *, uint64_t, uint64_t)))(v23 + 8))(v3, v22);
}

void sub_10045BA6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t Strong;
  void *v18;
  uint64_t v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD aBlock[5];
  uint64_t v41;
  char v42[24];

  v35 = a3;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v38 = *(_QWORD *)(v5 - 8);
  v39 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v36 = *(_QWORD *)(v8 - 8);
  v37 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FMIPUnknownItem(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  v14 = sub_100053F2C((uint64_t *)&unk_1005D6178);
  __chkstk_darwin(v14);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2 += 16;
  swift_beginAccess(a2, v42, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v18 = (void *)Strong;
    sub_100007464(a1, (uint64_t)v16, (uint64_t *)&unk_1005D6178);
    if (swift_getEnumCaseMultiPayload(v16, v14) == 1)
    {
      v19 = sub_1000051EC((uint64_t)v16, (uint64_t *)&unk_1005D6178);
      v20 = static os_log_type_t.default.getter(v19);
      sub_100460198(v20);

    }
    else
    {
      v21 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
      v34 = static OS_dispatch_queue.main.getter(v21);
      v22 = swift_allocObject(&unk_100567898, 24, 7);
      swift_unknownObjectWeakInit(v22 + 16);
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v35, v11);
      v23 = *(unsigned __int8 *)(v12 + 80);
      v24 = (v23 + 24) & ~v23;
      v25 = swift_allocObject(&unk_1005679D8, v24 + v13, v23 | 7);
      *(_QWORD *)(v25 + 16) = v22;
      (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v25 + v24, (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
      aBlock[4] = sub_100460740;
      v41 = v25;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100037DF8;
      aBlock[3] = &unk_1005679F0;
      v26 = _Block_copy(aBlock);
      swift_release(v41);
      static DispatchQoS.unspecified.getter(v27);
      aBlock[0] = _swiftEmptyArrayStorage;
      v28 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v29 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
      v30 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
      v31 = v39;
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v29, v30, v39, v28);
      v32 = (void *)v34;
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v26);
      _Block_release(v26);

      (*(void (**)(char *, uint64_t))(v38 + 8))(v7, v31);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v37);
    }
  }
}

void sub_10045BDC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  char *v9;
  uint64_t v10;
  void *v11;
  id v12;
  Swift::String v13;
  Swift::String_optional v14;
  Swift::String v15;
  Swift::String v16;
  uint64_t v17;
  id v18;
  id v19;
  void *v20;
  _BYTE v22[24];
  Swift::String v23;

  v4 = type metadata accessor for FMIPUnknownItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v22[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a1 += 16;
  swift_beginAccess(a1, v22, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v9 = (char *)Strong;
    v10 = *(_QWORD *)(Strong + OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
    v11 = (void *)objc_opt_self(NSBundle);
    swift_retain(v10);
    v12 = objc_msgSend(v11, "mainBundle");
    v23._countAndFlagsBits = 0xD000000000000018;
    v13._countAndFlagsBits = 0xD000000000000022;
    v23._object = (void *)0x80000001004A5660;
    v13._object = (void *)0x80000001004BB350;
    v14.value._object = (void *)0x80000001004A5640;
    v14.value._countAndFlagsBits = 0xD000000000000013;
    v15._countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, v14, (NSBundle)v12, v15, v23);

    v17 = *(_QWORD *)&v9[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_discoveryController];
    objc_allocWithZone((Class)type metadata accessor for FMUTAccessoryInformationViewController(0));
    swift_retain(v17);
    v18 = sub_10014F4BC(v10, (uint64_t)v7, v16._countAndFlagsBits, (uint64_t)v16._object, 0, 1, v17);
    swift_release(v10);
    v19 = objc_msgSend(v9, "navigationController", swift_release(v17).n128_f64[0]);
    if (v19)
    {
      v20 = v19;
      objc_msgSend(v19, "pushViewController:animated:", v18, 1);

    }
  }
}

uint64_t sub_10045BFC0(uint64_t a1)
{
  return sub_10045BFF8(a1, (uint64_t)&unk_100567960, (uint64_t)sub_10046069C, (uint64_t)&unk_100567978);
}

uint64_t sub_10045BFDC(uint64_t a1)
{
  return sub_10045BFF8(a1, (uint64_t)&unk_100567910, (uint64_t)sub_100460688, (uint64_t)&unk_100567928);
}

uint64_t sub_10045BFF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD aBlock[5];
  uint64_t v35;

  v29 = a3;
  v30 = a4;
  v27 = a2;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v33 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v31 = *(_QWORD *)(v8 - 8);
  v32 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FMIPAccessoryError(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  __chkstk_darwin(v11);
  v14 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v28 = static OS_dispatch_queue.main.getter(v14);
  v15 = swift_allocObject(&unk_100567898, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  v16 = *(unsigned __int8 *)(v12 + 80);
  v17 = (v16 + 24) & ~v16;
  v18 = swift_allocObject(v27, v17 + v13, v16 | 7);
  *(_QWORD *)(v18 + 16) = v15;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v18 + v17, (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  aBlock[4] = v29;
  v35 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = v30;
  v19 = _Block_copy(aBlock);
  swift_release(v35);
  static DispatchQoS.unspecified.getter(v20);
  aBlock[0] = _swiftEmptyArrayStorage;
  v21 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v22 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v23 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v22, v23, v5, v21);
  v24 = (void *)v28;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v10, v32);
}

void sub_10045C294(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5;
  uint64_t Strong;
  void *v7;
  _BYTE v8[24];

  v5 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v7 = (void *)Strong;
    sub_10045C300(a2, a3 & 1);

  }
}

void sub_10045C300(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSString v16;
  NSString v17;
  id v18;
  id v19;
  Swift::String v20;
  Swift::String_optional v21;
  Swift::String v22;
  void *object;
  uint64_t v24;
  uint64_t v25;
  NSString v26;
  void *v27;
  id v28;
  _QWORD aBlock[5];
  uint64_t v30;
  Swift::String v31;

  v3 = v2;
  v5 = type metadata accessor for DispatchPredicate(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (_QWORD *)((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  *v8 = static OS_dispatch_queue.main.getter(v9);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for DispatchPredicate.onQueue(_:), v5);
  v10 = _dispatchPreconditionTest(_:)(v8);
  v11 = (*(uint64_t (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  if ((v10 & 1) != 0)
  {
    FMIPAccessoryError.localizedAlertTitle.getter(v11);
    v13 = v12;
    FMIPAccessoryError.localizedDescription.getter();
    v15 = v14;
    v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v13);
    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v15);
    v18 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v16, v17, 1);

    v19 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v31._countAndFlagsBits = 0xD000000000000018;
    v20._countAndFlagsBits = 0xD000000000000021;
    v31._object = (void *)0x80000001004A5660;
    v20._object = (void *)0x80000001004C7FF0;
    v21.value._object = (void *)0x80000001004A5640;
    v21.value._countAndFlagsBits = 0xD000000000000013;
    v22._countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, v21, (NSBundle)v19, v22, v31)._object;

    v24 = swift_allocObject(&unk_100567898, 24, 7);
    swift_unknownObjectWeakInit(v24 + 16);
    v25 = swift_allocObject(&unk_1005678C0, 32, 7);
    *(_BYTE *)(v25 + 16) = a2 & 1;
    *(_QWORD *)(v25 + 24) = v24;
    swift_retain(v24);
    v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    aBlock[4] = sub_100460670;
    v30 = v25;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100008B40;
    aBlock[3] = &unk_1005678D8;
    v27 = _Block_copy(aBlock);
    swift_release(v30);
    v28 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v26, 0, v27);
    _Block_release(v27);
    swift_release(v24);

    objc_msgSend(v18, "addAction:", v28);
    objc_msgSend(v3, "presentViewController:animated:completion:", v18, 1, 0);

  }
  else
  {
    __break(1u);
  }
}

void sub_10045C624(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  void *Strong;
  void *v5;
  id v6;
  id v7;
  _BYTE v8[24];

  if ((a2 & 1) != 0)
  {
    v3 = a3 + 16;
    swift_beginAccess(a3 + 16, v8, 0, 0);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v3);
    if (Strong)
    {
      v5 = Strong;
      v6 = objc_msgSend(Strong, "navigationController");

      if (v6)
      {
        v7 = objc_msgSend(v6, "popViewControllerAnimated:", 1);

      }
    }
  }
}

uint64_t sub_10045C6B8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_discoveryController));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_cancellables));
  return sub_1000327F0(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_scrollHandler), *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_scrollHandler + 8));
}

id sub_10045C748()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMFindUnknownItemViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMFindUnknownItemViewController()
{
  return objc_opt_self(_TtC6FindMy31FMFindUnknownItemViewController);
}

uint64_t sub_10045C834(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(*v2 + OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_scrollHandler);
  v4 = *v3;
  v5 = v3[1];
  *v3 = a1;
  v3[1] = a2;
  return sub_1000327F0(v4, v5);
}

uint64_t sub_10045C8EC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v18;

  v4 = sub_100053F2C(&qword_1005D6760);
  __chkstk_darwin(v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100053F2C(&qword_1005D33C0);
  __chkstk_darwin(v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for IndexPath(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100053F2C((uint64_t *)&unk_1005DEE00);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 1, 1, v14);
  dispatch thunk of UITableViewDiffableDataSource.indexPath(for:)(v6);
  sub_1000051EC((uint64_t)v6, &qword_1005D6760);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1000051EC((uint64_t)v9, &qword_1005D33C0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    v15 = static IndexPath.== infix(_:_:)(v13, a1);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    if ((v15 & 1) == 0)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(a2, a1, v10);
      v16 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a2, v16, 1, v10);
    }
  }
  v16 = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a2, v16, 1, v10);
}

uint64_t sub_10045CCAC@<X0>(_QWORD *a1@<X8>)
{
  return sub_10011BD88(a1);
}

uint64_t sub_10045CCCC(uint64_t a1)
{
  return sub_10011D214(a1);
}

uint64_t sub_10045CCEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_10011BE2C();
  *a1 = result;
  return result;
}

uint64_t sub_10045CD14(_QWORD *a1)
{
  uint64_t v1;

  swift_bridgeObjectRetain(*a1);
  return sub_10011BEC8(v1);
}

void sub_10045CD3C(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  char *v4;
  char *v5[2];

  v2 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v3 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v3 = (_QWORD *)sub_10020CF24(v3);
  v4 = (char *)v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_10045CDBC(v5);
  *a1 = v3;
}

void sub_10045CDBC(char **a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  Swift::Int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  Swift::Int v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  char *v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  int v38;
  uint64_t v39;
  Swift::Int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  Swift::Int v45;
  uint64_t v46;
  char **v47;
  uint64_t v48;
  char *v49;
  char *v50;
  Swift::Int v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char **v59;
  void (*v60)(char *, char *, uint64_t);
  char *v61;
  char *v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  char *v65;
  char *v66;
  char *v67;
  void (*v68)(char *, char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v70;
  unint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  BOOL v86;
  unint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  BOOL v96;
  uint64_t v97;
  char v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  BOOL v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  char *v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  unint64_t v128;
  _QWORD *v129;
  _QWORD *v130;
  Swift::Int v131;
  char *v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  void (*v140)(char *, char *, uint64_t);
  char *v141;
  char *v142;
  uint64_t v143;
  char **v144;
  char *v145;
  Swift::Int v146;
  uint64_t v147;
  uint64_t v148;

  v3 = type metadata accessor for UUID(0);
  v148 = *(_QWORD *)(v3 - 8);
  v4 = __chkstk_darwin(v3);
  v134 = (char *)&v130 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v145 = (char *)&v130 - v7;
  v8 = __chkstk_darwin(v6);
  v142 = (char *)&v130 - v9;
  __chkstk_darwin(v8);
  v141 = (char *)&v130 - v10;
  v11 = (Swift::Int)a1[1];
  v12 = _minimumMergeRunLength(_:)(v11);
  if (v12 >= v11)
  {
    if (v11 < 0)
      goto LABEL_141;
    if (v11)
      sub_10045D834(0, v11, 1, a1);
    return;
  }
  if (v11 >= 0)
    v13 = v11;
  else
    v13 = v11 + 1;
  if (v11 < -1)
    goto LABEL_149;
  v144 = a1;
  v131 = v12;
  v137 = v1;
  if (v11 < 2)
  {
    v17 = (char *)_swiftEmptyArrayStorage;
    v136 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v148 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v148 + 80));
    v130 = _swiftEmptyArrayStorage;
    if (v11 != 1)
    {
      v19 = _swiftEmptyArrayStorage[2];
LABEL_107:
      if (v19 >= 2)
      {
        v122 = *v144;
        do
        {
          v123 = v19 - 2;
          if (v19 < 2)
            goto LABEL_136;
          if (!v122)
            goto LABEL_148;
          v124 = *(_QWORD *)&v17[16 * v123 + 32];
          v125 = *(_QWORD *)&v17[16 * v19 + 24];
          v126 = v137;
          sub_10045DAAC((unint64_t)&v122[*(_QWORD *)(v148 + 72) * v124], (unint64_t)&v122[*(_QWORD *)(v148 + 72) * *(_QWORD *)&v17[16 * v19 + 16]], (unint64_t)&v122[*(_QWORD *)(v148 + 72) * v125], v136);
          v137 = v126;
          if (v126)
            break;
          if (v125 < v124)
            goto LABEL_137;
          if ((swift_isUniquelyReferenced_nonNull_native(v17) & 1) == 0)
            v17 = sub_10020CE70((uint64_t)v17);
          if (v123 >= *((_QWORD *)v17 + 2))
            goto LABEL_138;
          v127 = &v17[16 * v123 + 32];
          *(_QWORD *)v127 = v124;
          *((_QWORD *)v127 + 1) = v125;
          v128 = *((_QWORD *)v17 + 2);
          if (v19 > v128)
            goto LABEL_139;
          memmove(&v17[16 * v19 + 16], &v17[16 * v19 + 32], 16 * (v128 - v19));
          *((_QWORD *)v17 + 2) = v128 - 1;
          v19 = v128 - 1;
        }
        while (v128 > 2);
      }
LABEL_118:
      swift_bridgeObjectRelease(v17);
      v129 = v130;
      v130[2] = 0;
      swift_bridgeObjectRelease(v129);
      return;
    }
  }
  else
  {
    v14 = v13 >> 1;
    v15 = static Array._allocateBufferUninitialized(minimumCapacity:)(v13 >> 1, v3);
    *(_QWORD *)(v15 + 16) = v14;
    v16 = *(unsigned __int8 *)(v148 + 80);
    v130 = (_QWORD *)v15;
    v136 = v15 + ((v16 + 32) & ~v16);
  }
  v18 = 0;
  v17 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    v20 = v18;
    v21 = v18 + 1;
    v135 = v18;
    if (v18 + 1 >= v11)
    {
      v32 = v18 + 1;
      v41 = v137;
      goto LABEL_58;
    }
    v22 = *v144;
    v146 = v11;
    v23 = v148;
    v24 = *(_QWORD *)(v148 + 72);
    v25 = *(void (**)(_QWORD, _QWORD, _QWORD))(v148 + 16);
    v26 = v141;
    v25(v141, &v22[v24 * v21], v3);
    v27 = &v22[v24 * v20];
    v28 = v142;
    v25(v142, v27, v3);
    v143 = sub_100008000(&qword_1005E4268, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    LODWORD(v140) = dispatch thunk of static Comparable.< infix(_:_:)(v26, v28, v3, v143);
    v29 = *(void (**)(_QWORD, _QWORD))(v23 + 8);
    v30 = v28;
    v20 = v135;
    v29(v30, v3);
    v29(v26, v3);
    v31 = v22;
    v32 = v20 + 2;
    v138 = v31;
    v147 = v24;
    if (v20 + 2 >= v146)
    {
      v41 = v137;
      v40 = v146;
      v39 = v24;
      if ((v140 & 1) == 0)
        break;
    }
    else
    {
      v132 = v17;
      v139 = v24 * v21;
      v33 = v31;
      v34 = v24 * v32;
      do
      {
        v35 = v32;
        v36 = v141;
        v25(v141, &v33[v34], v3);
        v37 = v142;
        v25(v142, &v33[v139], v3);
        v38 = dispatch thunk of static Comparable.< infix(_:_:)(v36, v37, v3, v143);
        v29(v37, v3);
        v29(v36, v3);
        if (((v140 ^ v38) & 1) != 0)
        {
          v41 = v137;
          v17 = v132;
          v32 = v35;
          v20 = v135;
          v40 = v146;
          v39 = v147;
          if ((v140 & 1) == 0)
            goto LABEL_38;
          goto LABEL_26;
        }
        v32 = v35 + 1;
        v39 = v147;
        v33 += v147;
      }
      while (v146 != v35 + 1);
      v40 = v146;
      v32 = v146;
      v41 = v137;
      v17 = v132;
      v20 = v135;
      if ((v140 & 1) == 0)
        break;
    }
LABEL_26:
    if (v32 < v20)
      goto LABEL_142;
    if (v20 >= v32)
      break;
    v132 = v17;
    v42 = 0;
    v43 = v39 * (v32 - 1);
    v44 = v32 * v39;
    v45 = v20;
    v46 = v20 * v39;
    v47 = v144;
    v143 = v32;
    do
    {
      if (v45 != v32 + v42 - 1)
      {
        if (!v138)
          goto LABEL_147;
        v48 = v41;
        v49 = &v138[v46];
        v50 = &v138[v43];
        v140 = *(char **)(v148 + 32);
        ((void (*)(char *, char *, uint64_t))v140)(v134, &v138[v46], v3);
        if (v46 < v43 || v49 >= &v138[v44])
        {
          swift_arrayInitWithTakeFrontToBack(v49, v50);
        }
        else if (v46 != v43)
        {
          swift_arrayInitWithTakeBackToFront(v49, v50);
        }
        ((void (*)(char *, char *, uint64_t))v140)(v50, v134, v3);
        v41 = v48;
        v32 = v143;
        v47 = v144;
        v39 = v147;
      }
      ++v45;
      --v42;
      v43 -= v39;
      v44 -= v39;
      v46 += v39;
    }
    while (v45 < v32 + v42);
    v17 = v132;
    v20 = v135;
    v40 = v146;
    if (v32 < v146)
      goto LABEL_41;
LABEL_58:
    if (v32 < v20)
      goto LABEL_135;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v17);
    v137 = v41;
    v143 = v32;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v17 = sub_10020C830(0, *((_QWORD *)v17 + 2) + 1, 1, v17);
    v71 = *((_QWORD *)v17 + 2);
    v70 = *((_QWORD *)v17 + 3);
    v19 = v71 + 1;
    if (v71 >= v70 >> 1)
      v17 = sub_10020C830((char *)(v70 > 1), v71 + 1, 1, v17);
    *((_QWORD *)v17 + 2) = v19;
    v72 = v17 + 32;
    v73 = &v17[16 * v71 + 32];
    v74 = v143;
    *(_QWORD *)v73 = v20;
    *((_QWORD *)v73 + 1) = v74;
    if (v71)
    {
      while (1)
      {
        v75 = v19 - 1;
        if (v19 >= 4)
        {
          v80 = &v72[16 * v19];
          v81 = *((_QWORD *)v80 - 8);
          v82 = *((_QWORD *)v80 - 7);
          v86 = __OFSUB__(v82, v81);
          v83 = v82 - v81;
          if (v86)
            goto LABEL_124;
          v85 = *((_QWORD *)v80 - 6);
          v84 = *((_QWORD *)v80 - 5);
          v86 = __OFSUB__(v84, v85);
          v78 = v84 - v85;
          v79 = v86;
          if (v86)
            goto LABEL_125;
          v87 = v19 - 2;
          v88 = &v72[16 * v19 - 32];
          v90 = *(_QWORD *)v88;
          v89 = *((_QWORD *)v88 + 1);
          v86 = __OFSUB__(v89, v90);
          v91 = v89 - v90;
          if (v86)
            goto LABEL_127;
          v86 = __OFADD__(v78, v91);
          v92 = v78 + v91;
          if (v86)
            goto LABEL_130;
          if (v92 >= v83)
          {
            v110 = &v72[16 * v75];
            v112 = *(_QWORD *)v110;
            v111 = *((_QWORD *)v110 + 1);
            v86 = __OFSUB__(v111, v112);
            v113 = v111 - v112;
            if (v86)
              goto LABEL_134;
            v103 = v78 < v113;
            goto LABEL_95;
          }
        }
        else
        {
          if (v19 != 3)
          {
            v104 = *((_QWORD *)v17 + 4);
            v105 = *((_QWORD *)v17 + 5);
            v86 = __OFSUB__(v105, v104);
            v97 = v105 - v104;
            v98 = v86;
            goto LABEL_89;
          }
          v77 = *((_QWORD *)v17 + 4);
          v76 = *((_QWORD *)v17 + 5);
          v86 = __OFSUB__(v76, v77);
          v78 = v76 - v77;
          v79 = v86;
        }
        if ((v79 & 1) != 0)
          goto LABEL_126;
        v87 = v19 - 2;
        v93 = &v72[16 * v19 - 32];
        v95 = *(_QWORD *)v93;
        v94 = *((_QWORD *)v93 + 1);
        v96 = __OFSUB__(v94, v95);
        v97 = v94 - v95;
        v98 = v96;
        if (v96)
          goto LABEL_129;
        v99 = &v72[16 * v75];
        v101 = *(_QWORD *)v99;
        v100 = *((_QWORD *)v99 + 1);
        v86 = __OFSUB__(v100, v101);
        v102 = v100 - v101;
        if (v86)
          goto LABEL_132;
        if (__OFADD__(v97, v102))
          goto LABEL_133;
        if (v97 + v102 >= v78)
        {
          v103 = v78 < v102;
LABEL_95:
          if (v103)
            v75 = v87;
          goto LABEL_97;
        }
LABEL_89:
        if ((v98 & 1) != 0)
          goto LABEL_128;
        v106 = &v72[16 * v75];
        v108 = *(_QWORD *)v106;
        v107 = *((_QWORD *)v106 + 1);
        v86 = __OFSUB__(v107, v108);
        v109 = v107 - v108;
        if (v86)
          goto LABEL_131;
        if (v109 < v97)
          goto LABEL_14;
LABEL_97:
        v114 = v75 - 1;
        if (v75 - 1 >= v19)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (!*v144)
          goto LABEL_146;
        v115 = v17;
        v116 = &v72[16 * v114];
        v117 = *(_QWORD *)v116;
        v118 = &v72[16 * v75];
        v119 = *((_QWORD *)v118 + 1);
        v120 = v137;
        sub_10045DAAC((unint64_t)&(*v144)[*(_QWORD *)(v148 + 72) * *(_QWORD *)v116], (unint64_t)&(*v144)[*(_QWORD *)(v148 + 72) * *(_QWORD *)v118], (unint64_t)&(*v144)[*(_QWORD *)(v148 + 72) * v119], v136);
        v137 = v120;
        if (v120)
        {
          v17 = v115;
          goto LABEL_118;
        }
        if (v119 < v117)
          goto LABEL_121;
        if (v75 > *((_QWORD *)v115 + 2))
          goto LABEL_122;
        *(_QWORD *)v116 = v117;
        *(_QWORD *)&v72[16 * v114 + 8] = v119;
        v121 = *((_QWORD *)v115 + 2);
        if (v75 >= v121)
          goto LABEL_123;
        v17 = v115;
        v19 = v121 - 1;
        memmove(&v72[16 * v75], v118 + 16, 16 * (v121 - 1 - v75));
        *((_QWORD *)v115 + 2) = v121 - 1;
        if (v121 <= 2)
          goto LABEL_14;
      }
    }
    v19 = 1;
LABEL_14:
    v11 = (Swift::Int)v144[1];
    v18 = v143;
    if (v143 >= v11)
      goto LABEL_107;
  }
LABEL_38:
  v47 = v144;
  if (v32 >= v40)
    goto LABEL_58;
LABEL_41:
  if (__OFSUB__(v32, v20))
    goto LABEL_140;
  if (v32 - v20 >= v131)
    goto LABEL_58;
  if (__OFADD__(v20, v131))
    goto LABEL_143;
  if (v20 + v131 >= v40)
    v51 = v40;
  else
    v51 = v20 + v131;
  if (v51 >= v20)
  {
    if (v32 != v51)
    {
      v132 = v17;
      v133 = v51;
      v52 = *(_QWORD *)(v148 + 72);
      v53 = *(char **)(v148 + 16);
      v137 = v41;
      v138 = v53;
      v54 = v52 * (v32 - 1);
      v139 = v52;
      v147 = v32 * v52;
      do
      {
        v56 = 0;
        v143 = v32;
        v140 = (char *)v54;
        while (1)
        {
          v146 = v20;
          v57 = *v47;
          v58 = v141;
          v59 = v47;
          v60 = (void (*)(_QWORD, _QWORD, _QWORD))v138;
          ((void (*)(char *, char *, uint64_t))v138)(v141, &(*v47)[v147 + v56], v3);
          v61 = &v57[v54 + v56];
          v62 = v142;
          v60(v142, v61, v3);
          v63 = sub_100008000(&qword_1005E4268, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
          LOBYTE(v57) = dispatch thunk of static Comparable.< infix(_:_:)(v58, v62, v3, v63);
          v64 = *(void (**)(_QWORD, _QWORD))(v148 + 8);
          v64(v62, v3);
          v64(v58, v3);
          if ((v57 & 1) == 0)
            break;
          v65 = *v59;
          if (!*v59)
            goto LABEL_145;
          v66 = &v65[v147 + v56];
          v54 = (uint64_t)v140;
          v67 = &v140[(_QWORD)v65 + v56];
          v68 = *(void (**)(_QWORD, _QWORD, _QWORD))(v148 + 32);
          v68(v145, v66, v3);
          swift_arrayInitWithTakeFrontToBack(v66, v67);
          v68(v67, v145, v3);
          v56 -= v139;
          v20 = v146 + 1;
          v55 = v143;
          v47 = v144;
          if (v143 == v146 + 1)
            goto LABEL_51;
        }
        v55 = v143;
        v47 = v59;
        v54 = (uint64_t)v140;
LABEL_51:
        v32 = v55 + 1;
        v54 += v139;
        v147 += v139;
        v20 = v135;
      }
      while (v32 != v133);
      v32 = v133;
      v41 = v137;
      v17 = v132;
    }
    goto LABEL_58;
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

uint64_t sub_10045D834(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  _QWORD *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;

  v30 = a1;
  v7 = type metadata accessor for UUID(0);
  v38 = *(_QWORD **)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v37 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v34 = (char *)&v28 - v11;
  result = __chkstk_darwin(v10);
  v33 = (char *)&v28 - v13;
  v36 = a3;
  v29 = a2;
  if (a3 != a2)
  {
    v14 = v38[9];
    v31 = (void (*)(char *, uint64_t, uint64_t))v38[2];
    v32 = a4;
    v40 = v14 * (v36 - 1);
    v35 = v14;
    v39 = v14 * v36;
LABEL_5:
    v15 = 0;
    v16 = v30;
    while (1)
    {
      v17 = *a4;
      v18 = v33;
      v19 = v31;
      v31(v33, v39 + v15 + *a4, v7);
      v20 = v34;
      v19(v34, v40 + v15 + v17, v7);
      v21 = sub_100008000(&qword_1005E4268, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      LOBYTE(v17) = dispatch thunk of static Comparable.< infix(_:_:)(v18, v20, v7, v21);
      v22 = (void (*)(char *, uint64_t))v38[1];
      v23 = v20;
      a4 = v32;
      v22(v23, v7);
      result = ((uint64_t (*)(char *, uint64_t))v22)(v18, v7);
      if ((v17 & 1) == 0)
      {
LABEL_4:
        v40 += v35;
        v39 += v35;
        if (++v36 == v29)
          return result;
        goto LABEL_5;
      }
      v24 = *a4;
      if (!*a4)
        break;
      v25 = v24 + v39 + v15;
      v26 = v24 + v40 + v15;
      v27 = (void (*)(char *, uint64_t, uint64_t))v38[4];
      v27(v37, v25, v7);
      swift_arrayInitWithTakeFrontToBack(v25, v26);
      result = ((uint64_t (*)(uint64_t, char *, uint64_t))v27)(v26, v37, v7);
      v15 -= v35;
      if (v36 == ++v16)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_10045DAAC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v19)(char *, unint64_t, uint64_t);
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, unint64_t, uint64_t);
  unint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t result;
  uint64_t v45;
  void (*v46)(char *, unint64_t, uint64_t);
  _QWORD *v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;

  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD **)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v51 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v50 = (char *)&v45 - v12;
  v52 = v9[9];
  if (!v52)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v52 == -1)
    goto LABEL_62;
  v13 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v52 == -1)
    goto LABEL_63;
  v14 = (uint64_t)(a2 - a1) / v52;
  v55 = a1;
  v54 = a4;
  v15 = v13 / v52;
  if (v14 >= v13 / v52)
  {
    if ((v15 & 0x8000000000000000) == 0)
    {
      v17 = v15 * v52;
      if (a4 < a2 || a2 + v17 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4, a2);
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4, a2);
      }
      v29 = a4 + v17;
      v53 = a4 + v17;
      v55 = a2;
      if (v17 >= 1 && a1 < a2)
      {
        v31 = -v52;
        v46 = (void (*)(char *, unint64_t, uint64_t))v9[2];
        v47 = v9;
        v48 = a4;
        v49 = a1;
        do
        {
          v52 = a3 + v31;
          v32 = v50;
          v33 = v46;
          v46(v50, v29 + v31, v8);
          v34 = a2 + v31;
          v35 = v31;
          v36 = v51;
          v33(v51, v34, v8);
          v37 = sub_100008000(&qword_1005E4268, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
          LOBYTE(v33) = dispatch thunk of static Comparable.< infix(_:_:)(v32, v36, v8, v37);
          v38 = (void (*)(char *, uint64_t))v9[1];
          v38(v36, v8);
          v38(v32, v8);
          if ((v33 & 1) != 0)
          {
            v31 = v35;
            v39 = v52;
            if (a3 < a2 || v52 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack(v52, v34);
              v9 = v47;
              v40 = v48;
              v41 = v49;
            }
            else
            {
              v9 = v47;
              v40 = v48;
              v41 = v49;
              if (a3 != a2)
                swift_arrayInitWithTakeBackToFront(v52, v34);
            }
            v55 += v31;
          }
          else
          {
            v42 = v53;
            v43 = v53 + v35;
            v53 += v35;
            v31 = v35;
            v39 = v52;
            if (a3 < v42 || v52 >= v42)
            {
              swift_arrayInitWithTakeFrontToBack(v52, v43);
              v34 = a2;
              v9 = v47;
              v40 = v48;
              v41 = v49;
            }
            else
            {
              v9 = v47;
              v40 = v48;
              v41 = v49;
              if (a3 != v42)
                swift_arrayInitWithTakeBackToFront(v52, v43);
              v34 = a2;
            }
          }
          v29 = v53;
          if (v53 <= v40)
            break;
          a2 = v34;
          a3 = v39;
        }
        while (v34 > v41);
      }
      goto LABEL_60;
    }
  }
  else if ((v14 & 0x8000000000000000) == 0)
  {
    v16 = v14 * v52;
    if (a4 < a1 || a1 + v16 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4, a1);
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront(a4, a1);
    }
    v49 = a4 + v16;
    v53 = a4 + v16;
    if (v16 >= 1 && a2 < a3)
    {
      v19 = (void (*)(char *, unint64_t, uint64_t))v9[2];
      do
      {
        v20 = a3;
        v21 = v50;
        v19(v50, a2, v8);
        v22 = v51;
        v19(v51, a4, v8);
        v23 = sub_100008000(&qword_1005E4268, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v24 = dispatch thunk of static Comparable.< infix(_:_:)(v21, v22, v8, v23);
        v25 = (void (*)(char *, uint64_t))v9[1];
        v25(v22, v8);
        v25(v21, v8);
        v26 = v55;
        if ((v24 & 1) != 0)
        {
          v27 = a2 + v52;
          if (v55 < a2 || v55 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack(v55, a2);
            a3 = v20;
          }
          else
          {
            a3 = v20;
            if (v55 == a2)
              v26 = a2;
            else
              swift_arrayInitWithTakeBackToFront(v55, a2);
          }
        }
        else
        {
          v28 = v54 + v52;
          if (v55 < v54 || v55 >= v28)
          {
            swift_arrayInitWithTakeFrontToBack(v55, v54);
            a3 = v20;
          }
          else
          {
            a3 = v20;
            if (v55 != v54)
              swift_arrayInitWithTakeBackToFront(v55, v54);
          }
          v54 = v28;
          v27 = a2;
        }
        v55 = v26 + v52;
        a4 = v54;
        if (v54 >= v49)
          break;
        a2 = v27;
      }
      while (v27 < a3);
    }
LABEL_60:
    sub_10020CB6C(&v55, &v54, (uint64_t *)&v53);
    return 1;
  }
LABEL_64:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_10045E000(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  _QWORD *v30;
  void (*v31)(_QWORD *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  Swift::String v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t DynamicType;
  Swift::String v67;
  void *object;
  Swift::String v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  os_log_type_t v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unsigned int v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  _QWORD v108[5];
  _QWORD v109[3];
  uint64_t v110;
  _UNKNOWN **v111;

  v104 = a3;
  v103 = a2;
  v102 = a1;
  v91 = sub_100053F2C(&qword_1005D8E28);
  v90 = *(_QWORD *)(v91 - 8);
  __chkstk_darwin(v91);
  v89 = (char *)&v85 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100053F2C(&qword_1005D7320);
  __chkstk_darwin(v4);
  v88 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FMIPDiscoveredAccessory(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v86 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v94 = (char *)&v85 - v10;
  v97 = type metadata accessor for FMIPUnknownItem(0);
  v93 = *(_QWORD *)(v97 - 8);
  v11 = __chkstk_darwin(v97);
  v92 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v95 = (char *)&v85 - v13;
  v101 = type metadata accessor for FMIPDevice(0);
  v99 = *(_QWORD *)(v101 - 8);
  v14 = *(_QWORD *)(v99 + 64);
  v15 = __chkstk_darwin(v101);
  v96 = (char *)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v15);
  v98 = (char *)&v85 - v17;
  __chkstk_darwin(v16);
  v19 = (char *)&v85 - v18;
  v100 = type metadata accessor for FMIPProductType(0);
  v20 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v22 = (char *)&v85 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for FMIPItem(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = __chkstk_darwin(v23);
  v27 = (char *)&v85 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v29 = (char *)&v85 - v28;
  v110 = v6;
  v111 = &off_10054A518;
  v30 = sub_10003D370(v109);
  v87 = v7;
  v31 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v7 + 16);
  v32 = v102;
  v102 = v6;
  v31(v30, v32, v6);
  sub_100056284((uint64_t)v109, (uint64_t)v108);
  v33 = sub_100053F2C(&qword_1005E5618);
  if (swift_dynamicCast(v29, v108, v33, v23, 0))
  {
    v34 = (*(uint64_t (**)(char *, char *, uint64_t))(v24 + 32))(v27, v29, v23);
    FMIPItem.productType.getter(v34);
    v35 = sub_10016E170((uint64_t)v22, v103);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v100);
    v36 = *(void (**)(char *, uint64_t))(v24 + 8);
    v37 = v27;
LABEL_3:
    v38 = v23;
LABEL_17:
    v36(v37, v38);
    goto LABEL_18;
  }
  v39 = v104;
  v40 = v101;
  if ((swift_dynamicCast(v19, v108, v33, v101, 0) & 1) == 0)
  {
    v52 = v95;
    v53 = v97;
    if (swift_dynamicCast(v95, v108, v33, v97, 0))
    {
      v54 = v93;
      v55 = (uint64_t)v92;
      (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v92, v52, v53);
      v35 = sub_10016E4C8(v55, v103);
      v36 = *(void (**)(char *, uint64_t))(v54 + 8);
      v37 = (char *)v55;
    }
    else
    {
      v56 = v94;
      v23 = v102;
      v57 = swift_dynamicCast(v94, v108, v33, v102, 0);
      v58 = v103;
      if (v57)
      {
        v59 = v87;
        v60 = v86;
        v61 = (*(uint64_t (**)(char *, char *, uint64_t))(v87 + 32))(v86, v56, v23);
        v62 = (uint64_t)v88;
        FMIPDiscoveredAccessory.productInformation.getter(v61);
        v35 = sub_10016EF28(v62, v58);
        sub_1000051EC(v62, &qword_1005D7320);
        v36 = *(void (**)(char *, uint64_t))(v59 + 8);
        v37 = v60;
        goto LABEL_3;
      }
      v106 = 0;
      v107 = 0xE000000000000000;
      _StringGuts.grow(_:)(50);
      v63._object = (void *)0x80000001004C8150;
      v63._countAndFlagsBits = 0xD000000000000030;
      String.append(_:)(v63);
      v64 = v110;
      v65 = sub_100029550(v109, v110);
      DynamicType = swift_getDynamicType(v65, v64, 1);
      v67._countAndFlagsBits = _typeName(_:qualified:)(DynamicType, 0);
      object = v67._object;
      String.append(_:)(v67);
      swift_bridgeObjectRelease(object);
      v69._countAndFlagsBits = 0;
      v69._object = (void *)0xE000000000000000;
      String.append(_:)(v69);
      v71 = v106;
      v70 = v107;
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v72 = type metadata accessor for Logger(0);
      v73 = sub_100056D88(v72, (uint64_t)qword_1005F5748);
      v74 = static os_log_type_t.error.getter(v73);
      v75 = swift_bridgeObjectRetain_n(v70, 2);
      v76 = Logger.logObject.getter(v75);
      v77 = v74;
      if (os_log_type_enabled(v76, v74))
      {
        v78 = (uint8_t *)swift_slowAlloc(12, -1);
        v79 = swift_slowAlloc(32, -1);
        v106 = v79;
        *(_DWORD *)v78 = 136315138;
        swift_bridgeObjectRetain(v70);
        v105 = sub_100056DA0(v71, v70, &v106);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v105, &v106);
        swift_bridgeObjectRelease_n(v70, 3);
        _os_log_impl((void *)&_mh_execute_header, v76, v77, "%s", v78, 0xCu);
        swift_arrayDestroy(v79, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v79, -1, -1);
        swift_slowDealloc(v78, -1, -1);
        swift_bridgeObjectRelease(v70);

      }
      else
      {

        swift_bridgeObjectRelease_n(v70, 3);
      }
      v80 = sub_100006C5C(0, (unint64_t *)&qword_1005DDF90, UIImage_ptr);
      v81 = sub_10017F7E8();
      v82 = v89;
      Fail.init(error:)(v81, v80, &type metadata for FMProductAssetProvider.Error, v81);
      v83 = sub_10003F774((unint64_t *)&unk_1005E5620, &qword_1005D8E28, (uint64_t)&protocol conformance descriptor for Fail<A, B>);
      v53 = v91;
      v35 = Publisher.eraseToAnyPublisher()(v91, v83);
      v36 = *(void (**)(char *, uint64_t))(v90 + 8);
      v37 = v82;
    }
    v38 = v53;
    goto LABEL_17;
  }
  v42 = v98;
  v41 = v99;
  v43 = *(void (**)(char *, char *, uint64_t))(v99 + 32);
  v43(v98, v19, v40);
  v44 = swift_allocObject(&unk_100567B90, 24, 7);
  swift_weakInit(v44 + 16, v39);
  v45 = v96;
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v96, v42, v40);
  v46 = *(unsigned __int8 *)(v41 + 80);
  v47 = (v46 + 24) & ~v46;
  v48 = swift_allocObject(&unk_100567E38, v47 + v14 + 1, v46 | 7);
  *(_QWORD *)(v48 + 16) = v44;
  v43((char *)(v48 + v47), v45, v40);
  *(_BYTE *)(v48 + v47 + v14) = v103;
  v49 = sub_100053F2C((uint64_t *)&unk_1005D6DD0);
  swift_allocObject(v49, *(unsigned int *)(v49 + 48), *(unsigned __int16 *)(v49 + 52));
  v50 = Future.init(_:)(sub_100460B40, v48);
  v106 = v50;
  v51 = sub_10003F774(&qword_1005E5630, (uint64_t *)&unk_1005D6DD0, (uint64_t)&protocol conformance descriptor for Future<A, B>);
  v35 = Publisher.eraseToAnyPublisher()(v49, v51);
  swift_release(v50);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v40);
LABEL_18:
  sub_100029574(v108);
  sub_100029574(v109);
  return v35;
}

uint64_t sub_10045E83C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  Swift::String v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t DynamicType;
  Swift::String v62;
  void *object;
  Swift::String v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  os_log_type_t v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint8_t *v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unsigned int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  _QWORD v104[5];
  _QWORD v105[3];
  uint64_t v106;
  _UNKNOWN **v107;

  v100 = a3;
  v99 = a2;
  v98 = a1;
  v87 = sub_100053F2C(&qword_1005D8E28);
  v86 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v85 = (char *)&v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100053F2C(&qword_1005D7320);
  __chkstk_darwin(v4);
  v84 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = type metadata accessor for FMIPDiscoveredAccessory(0);
  v83 = *(_QWORD *)(v91 - 8);
  v6 = __chkstk_darwin(v91);
  v82 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v90 = (char *)&v81 - v8;
  v9 = type metadata accessor for FMIPUnknownItem(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v88 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v92 = (char *)&v81 - v13;
  v97 = type metadata accessor for FMIPDevice(0);
  v95 = *(_QWORD *)(v97 - 8);
  v14 = *(_QWORD *)(v95 + 64);
  v15 = __chkstk_darwin(v97);
  v93 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v15);
  v94 = (char *)&v81 - v17;
  __chkstk_darwin(v16);
  v19 = (char *)&v81 - v18;
  v96 = type metadata accessor for FMIPProductType(0);
  v20 = *(_QWORD *)(v96 - 8);
  __chkstk_darwin(v96);
  v22 = (char *)&v81 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for FMIPItem(0);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = __chkstk_darwin(v23);
  v27 = (char *)&v81 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v29 = (char *)&v81 - v28;
  v106 = v9;
  v107 = &off_10054A510;
  v30 = sub_10003D370(v105);
  v89 = v10;
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v10 + 16))(v30, v98, v9);
  sub_100056284((uint64_t)v105, (uint64_t)v104);
  v31 = sub_100053F2C(&qword_1005E5618);
  if (swift_dynamicCast(v29, v104, v31, v23, 0))
  {
    v32 = (*(uint64_t (**)(char *, char *, uint64_t))(v24 + 32))(v27, v29, v23);
    FMIPItem.productType.getter(v32);
    v33 = sub_10016E170((uint64_t)v22, v99);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v96);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
  }
  else
  {
    v34 = v100;
    v35 = v97;
    if ((swift_dynamicCast(v19, v104, v31, v97, 0) & 1) != 0)
    {
      v36 = v94;
      v37 = v95;
      v38 = *(void (**)(char *, char *, uint64_t))(v95 + 32);
      v38(v94, v19, v35);
      v39 = swift_allocObject(&unk_100567B90, 24, 7);
      swift_weakInit(v39 + 16, v34);
      v40 = v93;
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v93, v36, v35);
      v41 = *(unsigned __int8 *)(v37 + 80);
      v42 = (v41 + 24) & ~v41;
      v43 = swift_allocObject(&unk_100567BB8, v42 + v14 + 1, v41 | 7);
      *(_QWORD *)(v43 + 16) = v39;
      v38((char *)(v43 + v42), v40, v35);
      *(_BYTE *)(v43 + v42 + v14) = v99;
      v44 = sub_100053F2C((uint64_t *)&unk_1005D6DD0);
      swift_allocObject(v44, *(unsigned int *)(v44 + 48), *(unsigned __int16 *)(v44 + 52));
      v45 = Future.init(_:)(sub_100460B40, v43);
      v102 = v45;
      v46 = sub_10003F774(&qword_1005E5630, (uint64_t *)&unk_1005D6DD0, (uint64_t)&protocol conformance descriptor for Future<A, B>);
      v33 = Publisher.eraseToAnyPublisher()(v44, v46);
      swift_release(v45);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v36, v35);
    }
    else
    {
      v47 = v92;
      if (swift_dynamicCast(v92, v104, v31, v9, 0))
      {
        v48 = v89;
        v49 = (uint64_t)v88;
        (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v88, v47, v9);
        v33 = sub_10016E4C8(v49, v99);
        (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v49, v9);
      }
      else
      {
        v50 = v90;
        v51 = v91;
        v52 = swift_dynamicCast(v90, v104, v31, v91, 0);
        v53 = v99;
        if (v52)
        {
          v54 = v83;
          v55 = v82;
          v56 = (*(uint64_t (**)(char *, char *, uint64_t))(v83 + 32))(v82, v50, v51);
          v57 = (uint64_t)v84;
          FMIPDiscoveredAccessory.productInformation.getter(v56);
          v33 = sub_10016EF28(v57, v53);
          sub_1000051EC(v57, &qword_1005D7320);
          (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v51);
        }
        else
        {
          v102 = 0;
          v103 = 0xE000000000000000;
          _StringGuts.grow(_:)(50);
          v58._object = (void *)0x80000001004C8150;
          v58._countAndFlagsBits = 0xD000000000000030;
          String.append(_:)(v58);
          v59 = v106;
          v60 = sub_100029550(v105, v106);
          DynamicType = swift_getDynamicType(v60, v59, 1);
          v62._countAndFlagsBits = _typeName(_:qualified:)(DynamicType, 0);
          object = v62._object;
          String.append(_:)(v62);
          swift_bridgeObjectRelease(object);
          v64._countAndFlagsBits = 0;
          v64._object = (void *)0xE000000000000000;
          String.append(_:)(v64);
          v66 = v102;
          v65 = v103;
          if (qword_1005D1DE8 != -1)
            swift_once(&qword_1005D1DE8, sub_100005ADC);
          v67 = type metadata accessor for Logger(0);
          v68 = sub_100056D88(v67, (uint64_t)qword_1005F5748);
          v69 = static os_log_type_t.error.getter(v68);
          v70 = swift_bridgeObjectRetain_n(v65, 2);
          v71 = Logger.logObject.getter(v70);
          v72 = v69;
          if (os_log_type_enabled(v71, v69))
          {
            v73 = (uint8_t *)swift_slowAlloc(12, -1);
            v74 = swift_slowAlloc(32, -1);
            v102 = v74;
            *(_DWORD *)v73 = 136315138;
            swift_bridgeObjectRetain(v65);
            v101 = sub_100056DA0(v66, v65, &v102);
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v101, &v102);
            swift_bridgeObjectRelease_n(v65, 3);
            _os_log_impl((void *)&_mh_execute_header, v71, v72, "%s", v73, 0xCu);
            swift_arrayDestroy(v74, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v74, -1, -1);
            swift_slowDealloc(v73, -1, -1);
            swift_bridgeObjectRelease(v65);

          }
          else
          {

            swift_bridgeObjectRelease_n(v65, 3);
          }
          v75 = sub_100006C5C(0, (unint64_t *)&qword_1005DDF90, UIImage_ptr);
          v76 = sub_10017F7E8();
          v77 = v85;
          Fail.init(error:)(v76, v75, &type metadata for FMProductAssetProvider.Error, v76);
          v78 = sub_10003F774((unint64_t *)&unk_1005E5620, &qword_1005D8E28, (uint64_t)&protocol conformance descriptor for Fail<A, B>);
          v79 = v87;
          v33 = Publisher.eraseToAnyPublisher()(v87, v78);
          (*(void (**)(char *, uint64_t))(v86 + 8))(v77, v79);
        }
      }
    }
  }
  sub_100029574(v104);
  sub_100029574(v105);
  return v33;
}

void sub_10045F074(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  _BYTE v10[24];

  v6 = *a1;
  v7 = a2 + 16;
  swift_beginAccess(a2 + 16, v10, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v7);
  if (Strong)
  {
    v9 = (void *)Strong;
    a4(a3, v6, Strong);

  }
}

uint64_t sub_10045F0E4(uint64_t a1, void *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t KeyPath;
  uint64_t v43;
  id v44;
  uint64_t v45;
  void (*v46)(_QWORD *, _QWORD);
  _QWORD *v47;
  _QWORD *v48;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v50;
  __n128 v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  _QWORD aBlock[3];
  void *v81;
  uint64_t (*v82)();
  uint64_t v83;
  __int128 v84[2];
  _QWORD v85[6];

  v71 = a2;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for DispatchQoS(0);
  v73 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v72 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for UUID(0);
  v75 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v76 = (uint64_t)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchPredicate(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (uint64_t *)((char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = type metadata accessor for FMIPDiscoveredAccessory(0);
  v85[3] = v15;
  v85[4] = &off_100547138;
  v16 = sub_10003D370(v85);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v16, a1, v15);
  v17 = *(_QWORD *)(qword_1005F4EC0 + (swift_isaMask & *a3) + 40);
  v78 = a3;
  v18 = *(void **)((char *)a3 + v17);
  *v14 = v18;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  v19 = v18;
  LOBYTE(v18) = _dispatchPreconditionTest(_:)(v14);
  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v18 & 1) != 0)
  {
    v68 = v8;
    if (qword_1005D1DE8 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1005D1DE8, sub_100005ADC);
LABEL_3:
  v69 = v6;
  v70 = v5;
  v20 = type metadata accessor for Logger(0);
  sub_100056D88(v20, (uint64_t)qword_1005F5748);
  v21 = sub_100056284((uint64_t)v85, (uint64_t)aBlock);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.default.getter(v22);
  v24 = os_log_type_enabled(v22, v23);
  v25 = v76;
  v26 = v77;
  if (v24)
  {
    v27 = (uint8_t *)swift_slowAlloc(12, -1);
    v28 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v84[0] = v28;
    *(_DWORD *)v27 = 136315138;
    v29 = sub_100029550(aBlock, (uint64_t)v81);
    FMIPDiscoveredAccessory.identifier.getter(v29);
    v30 = sub_100008000((unint64_t *)&qword_1005DA7C0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v31 = dispatch thunk of CustomStringConvertible.description.getter(v26, v30);
    v33 = v32;
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v76, v26);
    v79 = sub_100056DA0(v31, v33, (uint64_t *)v84);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, aBlock);
    v34 = v33;
    v25 = v76;
    swift_bridgeObjectRelease(v34);
    sub_100029574(aBlock);
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "FMAccessoryDiscoveryDataSource: Retrieved image for accessory: %s", v27, 0xCu);
    swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v27, -1, -1);
  }
  else
  {
    sub_100029574(aBlock);
  }

  v76 = FMIPDiscoveredAccessory.displayName.getter();
  v67 = v35;
  v66 = *(_QWORD *)((char *)v78 + *(_QWORD *)(qword_1005F4EC0 + (swift_isaMask & *v78) + 48));
  v36 = (uint64_t)v71;
  v37 = v71;
  v38 = FMIPDiscoveredAccessory.identifier.getter(v37);
  __chkstk_darwin(v38);
  v39 = type metadata accessor for FMIPAccessoryDiscoveryController(0);
  *(&v65 - 4) = v39;
  v40 = v25;
  v41 = sub_100008000((unint64_t *)&unk_1005DEDF0, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPAccessoryDiscoveryController, (uint64_t)&protocol conformance descriptor for FMIPAccessoryDiscoveryController);
  *(&v65 - 3) = v41;
  *(&v65 - 2) = (uint64_t)&off_100547138;
  *(&v65 - 1) = (uint64_t)&off_10054A518;
  KeyPath = swift_getKeyPath(&unk_100491BF0);
  __chkstk_darwin(KeyPath);
  *(&v65 - 4) = v39;
  *(&v65 - 3) = v41;
  *(&v65 - 2) = (uint64_t)&off_100547138;
  *(&v65 - 1) = (uint64_t)&off_10054A518;
  v43 = swift_getKeyPath(&unk_100491C28);
  v44 = v37;
  v45 = v67;
  swift_bridgeObjectRetain(v67);
  v46 = (void (*)(_QWORD *, _QWORD))static Published.subscript.modify(aBlock, v66, KeyPath, v43);
  v48 = v47;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v47);
  *(_QWORD *)&v84[0] = *v48;
  *v48 = 0x8000000000000000;
  sub_100179464(v76, v45, v36, 0, v40, isUniquelyReferenced_nonNull_native);
  v50 = *v48;
  *v48 = *(_QWORD *)&v84[0];
  v51 = swift_bridgeObjectRelease(v50);
  (*(void (**)(uint64_t, uint64_t, __n128))(v75 + 8))(v40, v77, v51);
  v46(aBlock, 0);
  swift_release(KeyPath);
  swift_release(v43);
  sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v52 = (void *)static OS_dispatch_queue.main.getter();
  v53 = swift_allocObject(&unk_100567CF8, 24, 7);
  swift_unknownObjectWeakInit(v53 + 16);
  sub_100056284((uint64_t)v85, (uint64_t)v84);
  v54 = swift_allocObject(&unk_100567DE8, 64, 7);
  *(_QWORD *)(v54 + 16) = v53;
  sub_10003D3AC(v84, v54 + 24);
  v82 = sub_100460D1C;
  v83 = v54;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  v81 = &unk_100567E00;
  v55 = _Block_copy(aBlock);
  swift_release(v83);
  v56 = v72;
  static DispatchQoS.unspecified.getter(v57);
  aBlock[0] = _swiftEmptyArrayStorage;
  v58 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v59 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v60 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  v61 = v68;
  v62 = v59;
  v63 = v70;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v62, v60, v70, v58);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v56, v61, v55);
  _Block_release(v55);

  swift_bridgeObjectRelease(v45);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v61, v63);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v56, v74);
  return sub_100029574(v85);
}

uint64_t sub_10045F850(uint64_t a1, void *a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t KeyPath;
  uint64_t v43;
  id v44;
  uint64_t v45;
  void (*v46)(_QWORD *, _QWORD);
  _QWORD *v47;
  _QWORD *v48;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v50;
  __n128 v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  _QWORD aBlock[3];
  void *v81;
  uint64_t (*v82)();
  uint64_t v83;
  __int128 v84[2];
  _QWORD v85[6];

  v71 = a2;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for DispatchQoS(0);
  v73 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v72 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for UUID(0);
  v75 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v76 = (uint64_t)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchPredicate(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (uint64_t *)((char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = type metadata accessor for FMIPUnknownItem(0);
  v85[3] = v15;
  v85[4] = &off_100547150;
  v16 = sub_10003D370(v85);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v16, a1, v15);
  v17 = *(_QWORD *)(qword_1005F4EC0 + (swift_isaMask & *a3) + 40);
  v78 = a3;
  v18 = *(void **)((char *)a3 + v17);
  *v14 = v18;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, enum case for DispatchPredicate.onQueue(_:), v11);
  v19 = v18;
  LOBYTE(v18) = _dispatchPreconditionTest(_:)(v14);
  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  if ((v18 & 1) != 0)
  {
    v68 = v8;
    if (qword_1005D1DE8 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1005D1DE8, sub_100005ADC);
LABEL_3:
  v69 = v6;
  v70 = v5;
  v20 = type metadata accessor for Logger(0);
  sub_100056D88(v20, (uint64_t)qword_1005F5748);
  v21 = sub_100056284((uint64_t)v85, (uint64_t)aBlock);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.default.getter(v22);
  v24 = os_log_type_enabled(v22, v23);
  v25 = v76;
  v26 = v77;
  if (v24)
  {
    v27 = (uint8_t *)swift_slowAlloc(12, -1);
    v28 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v84[0] = v28;
    *(_DWORD *)v27 = 136315138;
    v29 = sub_100029550(aBlock, (uint64_t)v81);
    FMIPUnknownItem.identifier.getter(v29);
    v30 = sub_100008000((unint64_t *)&qword_1005DA7C0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v31 = dispatch thunk of CustomStringConvertible.description.getter(v26, v30);
    v33 = v32;
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v76, v26);
    v79 = sub_100056DA0(v31, v33, (uint64_t *)v84);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v79, aBlock);
    v34 = v33;
    v25 = v76;
    swift_bridgeObjectRelease(v34);
    sub_100029574(aBlock);
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "FMAccessoryDiscoveryDataSource: Retrieved image for accessory: %s", v27, 0xCu);
    swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v27, -1, -1);
  }
  else
  {
    sub_100029574(aBlock);
  }

  v76 = FMIPUnknownItem.name.getter();
  v67 = v35;
  v66 = *(_QWORD *)((char *)v78 + *(_QWORD *)(qword_1005F4EC0 + (swift_isaMask & *v78) + 48));
  v36 = (uint64_t)v71;
  v37 = v71;
  v38 = FMIPUnknownItem.identifier.getter(v37);
  __chkstk_darwin(v38);
  v39 = type metadata accessor for FMIPUnknownAccessoryDiscoveryController(0);
  *(&v65 - 4) = v39;
  v40 = v25;
  v41 = sub_100008000(&qword_1005E5498, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPUnknownAccessoryDiscoveryController, (uint64_t)&protocol conformance descriptor for FMIPUnknownAccessoryDiscoveryController);
  *(&v65 - 3) = v41;
  *(&v65 - 2) = (uint64_t)&off_100547150;
  *(&v65 - 1) = (uint64_t)&off_10054A510;
  KeyPath = swift_getKeyPath(&unk_100491BF0);
  __chkstk_darwin(KeyPath);
  *(&v65 - 4) = v39;
  *(&v65 - 3) = v41;
  *(&v65 - 2) = (uint64_t)&off_100547150;
  *(&v65 - 1) = (uint64_t)&off_10054A510;
  v43 = swift_getKeyPath(&unk_100491C28);
  v44 = v37;
  v45 = v67;
  swift_bridgeObjectRetain(v67);
  v46 = (void (*)(_QWORD *, _QWORD))static Published.subscript.modify(aBlock, v66, KeyPath, v43);
  v48 = v47;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v47);
  *(_QWORD *)&v84[0] = *v48;
  *v48 = 0x8000000000000000;
  sub_100179464(v76, v45, v36, 0, v40, isUniquelyReferenced_nonNull_native);
  v50 = *v48;
  *v48 = *(_QWORD *)&v84[0];
  v51 = swift_bridgeObjectRelease(v50);
  (*(void (**)(uint64_t, uint64_t, __n128))(v75 + 8))(v40, v77, v51);
  v46(aBlock, 0);
  swift_release(KeyPath);
  swift_release(v43);
  sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v52 = (void *)static OS_dispatch_queue.main.getter();
  v53 = swift_allocObject(&unk_100567A50, 24, 7);
  swift_unknownObjectWeakInit(v53 + 16);
  sub_100056284((uint64_t)v85, (uint64_t)v84);
  v54 = swift_allocObject(&unk_100567B40, 64, 7);
  *(_QWORD *)(v54 + 16) = v53;
  sub_10003D3AC(v84, v54 + 24);
  v82 = sub_100460ADC;
  v83 = v54;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  v81 = &unk_100567B58;
  v55 = _Block_copy(aBlock);
  swift_release(v83);
  v56 = v72;
  static DispatchQoS.unspecified.getter(v57);
  aBlock[0] = _swiftEmptyArrayStorage;
  v58 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v59 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v60 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  v61 = v68;
  v62 = v59;
  v63 = v70;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v62, v60, v70, v58);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v56, v61, v55);
  _Block_release(v55);

  swift_bridgeObjectRelease(v45);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v61, v63);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v56, v74);
  return sub_100029574(v85);
}

void sub_10045FFBC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  id v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  char *v11;
  id v12;
  id v13;
  char *v14;

  v1 = v0;
  v2 = OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_stackView;
  *(_QWORD *)&v1[v2] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v3 = OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_headerView;
  if (qword_1005D1D90 != -1)
    swift_once(&qword_1005D1D90, sub_100265164);
  v4 = xmmword_1005F5558;
  v5 = xmmword_1005F5568;
  v6 = objc_allocWithZone((Class)type metadata accessor for FMAccessoryDiscoveryListHeaderView());
  swift_bridgeObjectRetain(*((_QWORD *)&v4 + 1));
  swift_bridgeObjectRetain(*((_QWORD *)&v5 + 1));
  *(_QWORD *)&v1[v3] = sub_100265364(v4, *((uint64_t *)&v4 + 1), v5, *((uint64_t *)&v5 + 1));
  v7 = OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_continueButton;
  v8 = (char *)objc_allocWithZone((Class)type metadata accessor for FMEmptyListButton());
  v9 = OBJC_IVAR____TtC6FindMy17FMEmptyListButton_textColor;
  v10 = (void *)objc_opt_self(UIColor);
  v11 = v8;
  *(_QWORD *)&v8[v9] = objc_msgSend(v10, "systemBlueColor");
  v11[OBJC_IVAR____TtC6FindMy17FMEmptyListButton_isEnabled] = 1;

  v12 = objc_msgSend(v10, "tertiarySystemFillColor");
  v13 = sub_1000472FC(v12, 1, 1, 0);

  *(_QWORD *)&v1[v7] = v13;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_cancellables] = _swiftEmptyArrayStorage;
  v14 = &v1[OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_scrollHandler];
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMFindUnknownItemViewController.swift", 44, 2, 59, 0);
  __break(1u);
}

void sub_100460198(os_log_type_t a1)
{
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  NSObject *log;
  uint64_t v8;
  uint64_t v9;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100056D88(v2, (uint64_t)qword_1005F5748);
  v4 = a1;
  log = Logger.logObject.getter(v3);
  if (os_log_type_enabled(log, a1))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v9 = v6;
    *(_DWORD *)v5 = 136315138;
    v8 = sub_100056DA0(0xD000000000000042, 0x80000001004C8020, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v8, &v9);
    _os_log_impl((void *)&_mh_execute_header, log, v4, "FMFindUnknownItemViewController: %s", v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_10046031C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v3 = sub_100053F2C((uint64_t *)&unk_1005E5488);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v4);
  v9 = (char *)&v26 - v8;
  __chkstk_darwin(v7);
  v11 = (char *)&v26 - v10;
  v12 = sub_100053F2C(&qword_1005D6760);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD **)(v1 + OBJC_IVAR____TtC6FindMy31FMFindUnknownItemViewController_dataSource);
  dispatch thunk of UITableViewDiffableDataSource.itemIdentifier(for:)(a1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    v17 = (uint64_t *)&unk_1005E5488;
    v18 = (uint64_t)v11;
  }
  else
  {
    sub_10005DAA0((uint64_t)v11, (uint64_t)v15, &qword_1005D6760);
    v27 = *(_QWORD *)((char *)v16 + *(_QWORD *)(qword_1005F4EC0 + (swift_isaMask & *v16) + 48));
    sub_100007464((uint64_t)v15, (uint64_t)v9, &qword_1005D6760);
    v19 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    __chkstk_darwin(v19);
    v20 = type metadata accessor for FMIPUnknownAccessoryDiscoveryController(0);
    *(&v26 - 4) = v20;
    v21 = sub_100008000(&qword_1005E5498, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPUnknownAccessoryDiscoveryController, (uint64_t)&protocol conformance descriptor for FMIPUnknownAccessoryDiscoveryController);
    *(&v26 - 3) = v21;
    *(&v26 - 2) = (uint64_t)&off_100547150;
    *(&v26 - 1) = (uint64_t)&off_10054A510;
    KeyPath = swift_getKeyPath(&unk_100491A90);
    __chkstk_darwin(KeyPath);
    *(&v26 - 4) = v20;
    *(&v26 - 3) = v21;
    *(&v26 - 2) = (uint64_t)&off_100547150;
    *(&v26 - 1) = (uint64_t)&off_10054A510;
    v23 = swift_getKeyPath(&unk_100491AC8);
    sub_100007464((uint64_t)v9, (uint64_t)v6, (uint64_t *)&unk_1005E5488);
    v24 = v27;
    swift_retain(v27);
    static Published.subscript.setter(v6, v24, KeyPath, v23);
    sub_1000051EC((uint64_t)v9, (uint64_t *)&unk_1005E5488);
    v18 = (uint64_t)v15;
    v17 = &qword_1005D6760;
  }
  return sub_1000051EC(v18, v17);
}

uint64_t sub_1004605D0@<X0>(_QWORD *a1@<X8>)
{
  return sub_10011BD88(a1);
}

uint64_t sub_1004605F0(uint64_t a1)
{
  return sub_10011D214(a1);
}

uint64_t sub_100460610()
{
  return 32;
}

__n128 sub_10046061C(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_100460628()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10046064C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_100460670(uint64_t a1)
{
  uint64_t v1;

  sub_10045C624(a1, *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10046067C()
{
  return sub_100460BEC((uint64_t (*)(_QWORD))&type metadata accessor for FMIPAccessoryError);
}

void sub_100460688()
{
  sub_1004606A4(0);
}

uint64_t sub_100460690()
{
  return sub_100460BEC((uint64_t (*)(_QWORD))&type metadata accessor for FMIPAccessoryError);
}

void sub_10046069C()
{
  sub_1004606A4(1);
}

void sub_1004606A4(char a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMIPAccessoryError(0) - 8) + 80);
  sub_10045C294(*(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3), a1);
}

uint64_t sub_1004606E8()
{
  return sub_100460BEC((uint64_t (*)(_QWORD))&type metadata accessor for FMIPUnknownItem);
}

void sub_1004606F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMIPUnknownItem(0) - 8) + 80);
  sub_10045BA6C(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_100460734()
{
  return sub_100460BEC((uint64_t (*)(_QWORD))&type metadata accessor for FMIPUnknownItem);
}

void sub_100460740()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMIPUnknownItem(0) - 8) + 80);
  sub_10045BDC0(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_100460770(unint64_t *a1, unint64_t *a2, _QWORD *a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_100006C5C(255, a2, a3);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

const char *sub_1004607B0()
{
  return "isUserInteractionEnabled";
}

id sub_1004607BC@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "isUserInteractionEnabled");
  *a2 = (_BYTE)result;
  return result;
}

id sub_1004607EC(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, "setUserInteractionEnabled:", *a1);
}

_QWORD *sub_100460800@<X0>(_QWORD *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(*result + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_showActivityIndicator);
  return result;
}

id sub_10046081C(_BYTE *a1, _QWORD *a2)
{
  *(_BYTE *)(*a2 + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_showActivityIndicator) = *a1;
  return sub_1002598C4();
}

_QWORD *sub_100460850@<X0>(_QWORD *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(*result + *(_QWORD *)(qword_1005F4EC0 + (swift_isaMask & *(_QWORD *)*result) + 56));
  return result;
}

void sub_100460888(_BYTE *a1, _QWORD *a2)
{
  *(_BYTE *)(*a2 + *(_QWORD *)(qword_1005F4EC0 + (swift_isaMask & *(_QWORD *)*a2) + 56)) = *a1;
  sub_100453310(1);
}

uint64_t sub_1004608DC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_100460900(uint64_t *a1)
{
  uint64_t v1;

  sub_10045B3D8(a1, *(_QWORD *)(v1 + 16));
}

const char *sub_100460908()
{
  return "contentSize";
}

id sub_100460914@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  uint64_t v4;
  uint64_t v5;

  result = objc_msgSend(*a1, "contentSize");
  *a2 = v4;
  a2[1] = v5;
  return result;
}

id sub_100460944(double *a1, id *a2)
{
  return objc_msgSend(*a2, "setContentSize:", *a1, a1[1]);
}

void sub_100460958(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v2;

  sub_10045B4DC(a1, v2, a2);
}

const char *sub_100460960()
{
  return "isScrollEnabled";
}

id sub_10046096C@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, "isScrollEnabled");
  *a2 = (_BYTE)result;
  return result;
}

id sub_10046099C(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, "setScrollEnabled:", *a1);
}

unint64_t sub_1004609B0()
{
  unint64_t result;

  result = qword_1005E55D0;
  if (!qword_1005E55D0)
  {
    result = swift_getWitnessTable(&unk_100484394, &type metadata for FMAddAccessoryListSection);
    atomic_store(result, (unint64_t *)&qword_1005E55D0);
  }
  return result;
}

uint64_t sub_1004609F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_10011BE2C();
  *a1 = result;
  return result;
}

uint64_t sub_100460A1C(_QWORD *a1)
{
  uint64_t v1;

  swift_bridgeObjectRetain(*a1);
  return sub_10011BEC8(v1);
}

uint64_t sub_100460A44()
{
  return 32;
}

__n128 sub_100460A50(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

void sub_100460A5C(uint64_t a1)
{
  uint64_t v1;

  sub_100459530(a1, v1);
}

id sub_100460A64(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;

  return sub_100458268(a1, a2, a3, v3);
}

void sub_100460A6C(uint64_t a1)
{
  uint64_t v1;

  sub_1004528A4(a1, v1);
}

void sub_100460A74(uint64_t a1)
{
  uint64_t v1;

  sub_100452BBC(a1, v1);
}

void sub_100460A80()
{
  uint64_t v0;

  sub_100454828(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_100460A88()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100460A98()
{
  return sub_100460BEC((uint64_t (*)(_QWORD))&type metadata accessor for FMIPUnknownItem);
}

void sub_100460AA4(uint64_t *a1)
{
  sub_100460C78(a1, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPUnknownItem, (void (*)(uint64_t, uint64_t, uint64_t))sub_10045F850);
}

void sub_100460AB8()
{
  uint64_t v0;

  sub_1004554FC(v0, (void (*)(uint64_t))sub_100453310);
}

uint64_t sub_100460ADC()
{
  uint64_t v0;

  return sub_1004538D8(*(_QWORD *)(v0 + 16), (_QWORD *)(v0 + 24), &qword_1005E55C8, &qword_1005D6760, (uint64_t *)&unk_1005E55E0, (void (*)(uint64_t))sub_100453310);
}

uint64_t sub_100460B18()
{
  uint64_t v0;

  swift_weakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100460B48()
{
  uint64_t v0;

  sub_1004565A4(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_100460B50()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100460B60(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);

    return swift_release(a4);
  }
  return result;
}

uint64_t sub_100460B9C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100460BAC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1004575F4(a1, a2, a3, v3);
}

void sub_100460BB4(uint64_t a1)
{
  uint64_t v1;

  sub_100452718(a1, v1);
}

void sub_100460BBC(uint64_t a1)
{
  uint64_t v1;

  sub_100452A30(a1, v1);
}

void sub_100460BC8()
{
  uint64_t v0;

  sub_100453B54(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_100460BD0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100460BE0()
{
  return sub_100460BEC((uint64_t (*)(_QWORD))&type metadata accessor for FMIPDiscoveredAccessory);
}

uint64_t sub_100460BEC(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v5 = (v4 + 24) & ~v4;
  v6 = v5 + *(_QWORD *)(v3 + 64);
  v7 = v4 | 7;
  swift_release(*(_QWORD *)(v1 + 16));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return swift_deallocObject(v1, v6, v7);
}

void sub_100460C64(uint64_t *a1)
{
  sub_100460C78(a1, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPDiscoveredAccessory, (void (*)(uint64_t, uint64_t, uint64_t))sub_10045F0E4);
}

void sub_100460C78(uint64_t *a1, uint64_t (*a2)(_QWORD), void (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v6;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(a2(0) - 8) + 80);
  sub_10045F074(a1, *(_QWORD *)(v3 + 16), v3 + ((v6 + 24) & ~v6), a3);
}

void sub_100460CCC()
{
  uint64_t v0;

  sub_1004554FC(v0, (void (*)(uint64_t))sub_100452D48);
}

uint64_t sub_100460CF0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  sub_100029574((_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100460D1C()
{
  uint64_t v0;

  return sub_1004538D8(*(_QWORD *)(v0 + 16), (_QWORD *)(v0 + 24), &qword_1005E5658, &qword_1005D6810, &qword_1005E5650, (void (*)(uint64_t))sub_100452D48);
}

uint64_t sub_100460D5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for FMIPDevice(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = *(_QWORD *)(v2 + 64) + v4 + 1;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6, v5);
}

void sub_100460DD8()
{
  uint64_t v0;

  sub_100455554(*(_QWORD *)(v0 + 16), *(_QWORD **)(v0 + 24));
}

uint64_t sub_100460DE0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100460DF4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_100460E88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  v1 = v0;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100056D88(v2, (uint64_t)qword_1005F5748);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMLocationProvider: stopLocationMonitoring", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_includeHeading) == 1)
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_locationManager), "stopUpdatingHeading");
  return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_locationManager), "stopUpdatingLocation");
}

id sub_100460F94(char a1)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id result;
  const CLLocationAccuracy *v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = v1;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v4 = a1 & 1;
  v5 = type metadata accessor for Logger(0);
  v6 = sub_100056D88(v5, (uint64_t)qword_1005F5748);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v20 = v10;
    *(_DWORD *)v9 = 136315138;
    LOBYTE(v19) = v4;
    v11 = String.init<A>(describing:)(&v19, &type metadata for FMLocationManagerConfigurationType);
    v13 = v12;
    v19 = sub_100056DA0(v11, v12, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20);
    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "FMLocationProvider: updateConfigurationType: %s", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }

  v14 = OBJC_IVAR____TtC6FindMy18FMLocationProvider_locationManager;
  result = *(id *)(v2 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_locationManager);
  if (result)
  {
    v16 = &kCLLocationAccuracyBest;
    if (!v4)
      v16 = &kCLLocationAccuracyHundredMeters;
    objc_msgSend(result, "setDesiredAccuracy:", *v16);
    result = *(id *)(v2 + v14);
    if (result)
    {
      v17 = kCLDistanceFilterNone;
      if (!v4)
        v17 = 100.0;
      objc_msgSend(result, "setDistanceFilter:", v17);
      result = *(id *)(v2 + v14);
      if (result)
      {
        if (v4)
          v18 = 3;
        else
          v18 = 1;
        return objc_msgSend(result, "setActivityType:", v18);
      }
    }
  }
  return result;
}

uint64_t sub_100461204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  _QWORD *v13;
  void *v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[5];
  _QWORD *v24;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v22 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v12 = (void *)static OS_dispatch_queue.main.getter();
  v13 = (_QWORD *)swift_allocObject(&unk_100567FF8, 40, 7);
  v13[2] = a2;
  v13[3] = a1;
  v13[4] = a3;
  aBlock[4] = sub_100461AE4;
  v24 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_100568010;
  v14 = _Block_copy(aBlock);
  v15 = v24;
  swift_errorRetain(a2);
  swift_bridgeObjectRetain(a1);
  swift_retain(a3);
  swift_release(v15);
  static DispatchQoS.unspecified.getter(v16);
  aBlock[0] = _swiftEmptyArrayStorage;
  v17 = sub_100056580();
  v18 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v19 = sub_1000555E4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v18, v19, v6, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v21);
}

void sub_100461404(uint64_t a1, void *a2, uint64_t a3)
{
  _QWORD *v3;
  void *v6;
  uint64_t v8;
  Swift::String v9;
  void *object;
  __n128 v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  __n128 v19;
  Swift::String v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  Swift::String v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t Strong;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t i;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t ObjectType;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  Swift::String v49;
  void *v50;
  __n128 v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  void *v55;
  _QWORD v56[3];
  _BYTE v57[8];
  unint64_t v58;
  unint64_t v59;
  _BYTE v60[24];
  _BYTE v61[24];
  unint64_t v62;
  unint64_t v63;

  v6 = &type metadata for String;
  if (a1)
  {
    v8 = sub_100053F2C(&qword_1005D67A0);
    v3 = (_QWORD *)swift_allocObject(v8, 64, 7);
    *((_OWORD *)v3 + 1) = xmmword_100481740;
    swift_errorRetain(a1);
    _StringGuts.grow(_:)(50);
    swift_bridgeObjectRelease(0xE000000000000000);
    v62 = 0xD000000000000030;
    v63 = 0x80000001004C82C0;
    swift_getErrorValue(a1, v57, v56);
    v9._countAndFlagsBits = Error.localizedDescription.getter(v56[1], v56[2]);
    object = v9._object;
    String.append(_:)(v9);
    v11 = swift_bridgeObjectRelease(object);
    v12 = v62;
    v13 = v63;
    v3[7] = &type metadata for String;
    v3[4] = v12;
    v3[5] = v13;
    print(_:separator:terminator:)(v3, 32, 0xE100000000000000, 10, 0xE100000000000000, v11);
    swift_bridgeObjectRelease(v3);
    swift_errorRelease(a1);
  }
  if (a2)
    v14 = (uint64_t)a2;
  else
    v14 = (uint64_t)_swiftEmptyArrayStorage;
  v54 = a3;
  if ((unint64_t)v14 >> 62)
  {
    if (v14 < 0)
      v31 = v14;
    else
      v31 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(v14);
    v15 = _CocoaArrayWrapper.endIndex.getter(v31);
    swift_bridgeObjectRelease(v14);
    v55 = a2;
    if (v15)
      goto LABEL_8;
LABEL_23:
    v3 = _swiftEmptyArrayStorage;
    goto LABEL_24;
  }
  v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a2);
  v55 = a2;
  if (!v15)
    goto LABEL_23;
LABEL_8:
  if (v15 < 1)
  {
    __break(1u);
    goto LABEL_39;
  }
  v16 = 0;
  v3 = _swiftEmptyArrayStorage;
  do
  {
    if ((v14 & 0xC000000000000001) != 0)
      v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v14);
    else
      v17 = *(id *)(v14 + 8 * v16 + 32);
    v18 = v17;
    v62 = 0;
    v63 = 0xE000000000000000;
    objc_msgSend(v17, "confidence");
    Double.write<A>(to:)(&v62, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v19);
    v20._countAndFlagsBits = 2108704;
    v20._object = (void *)0xE300000000000000;
    String.append(_:)(v20);
    v21 = objc_msgSend(v18, "description");
    v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
    v24 = v23;

    v25._countAndFlagsBits = v22;
    v25._object = v24;
    String.append(_:)(v25);
    swift_bridgeObjectRelease(v24);
    v26 = v62;
    v27 = v63;
    if ((swift_isUniquelyReferenced_nonNull_native(v3) & 1) == 0)
      v3 = sub_100070178(0, v3[2] + 1, 1, v3);
    v29 = v3[2];
    v28 = v3[3];
    if (v29 >= v28 >> 1)
      v3 = sub_100070178((_QWORD *)(v28 > 1), v29 + 1, 1, v3);
    ++v16;
    v3[2] = v29 + 1;
    v30 = &v3[2 * v29];
    v30[4] = v26;
    v30[5] = v27;

  }
  while (v15 != v16);
LABEL_24:
  v32 = v54 + 16;
  swift_bridgeObjectRelease(v14);
  swift_beginAccess(v54 + 16, &v62, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v54 + 16);
  v6 = v55;
  if (Strong)
  {
    v34 = (void *)Strong;
    v35 = *(_QWORD *)(Strong + OBJC_IVAR____TtC6FindMy18FMLocationProvider_poiLocations);
    *(_QWORD *)(Strong + OBJC_IVAR____TtC6FindMy18FMLocationProvider_poiLocations) = v55;
    swift_bridgeObjectRetain(v55);

    swift_bridgeObjectRelease(v35);
  }
  swift_beginAccess(v32, v61, 0, 0);
  v36 = swift_unknownObjectWeakLoadStrong(v32);
  if (!v36)
    goto LABEL_44;
  a2 = (void *)v36;
  v37 = (uint64_t *)(v36 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions);
  swift_beginAccess(v36 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions, v60, 0, 0);
  v15 = *v37;
  if (!((unint64_t)*v37 >> 62))
  {
    v38 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v55);
    swift_bridgeObjectRetain(v15);
    if (v38)
      goto LABEL_29;
LABEL_43:

    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v14);
LABEL_44:
    v47 = sub_100053F2C(&qword_1005D67A0);
    v48 = swift_allocObject(v47, 64, 7);
    *(_OWORD *)(v48 + 16) = xmmword_100481740;
    v58 = 0;
    v59 = 0xE000000000000000;
    _StringGuts.grow(_:)(45);
    swift_bridgeObjectRelease(v59);
    v58 = 0xD00000000000002BLL;
    v59 = 0x80000001004C8290;
    v49._countAndFlagsBits = Array.description.getter(v3, &type metadata for String);
    v50 = v49._object;
    String.append(_:)(v49);
    swift_bridgeObjectRelease(v3);
    v51 = swift_bridgeObjectRelease(v50);
    v52 = v58;
    v53 = v59;
    *(_QWORD *)(v48 + 56) = &type metadata for String;
    *(_QWORD *)(v48 + 32) = v52;
    *(_QWORD *)(v48 + 40) = v53;
    print(_:separator:terminator:)(v48, 32, 0xE100000000000000, 10, 0xE100000000000000, v51);
    swift_bridgeObjectRelease(v48);
    return;
  }
LABEL_39:
  if (v15 < 0)
    v46 = v15;
  else
    v46 = v15 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v15);
  v38 = _CocoaArrayWrapper.endIndex.getter(v46);
  if (!v38)
    goto LABEL_43;
LABEL_29:
  if (v38 >= 1)
  {
    for (i = 0; i != v38; ++i)
    {
      if ((v15 & 0xC000000000000001) != 0)
      {
        v40 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v15);
      }
      else
      {
        v40 = *(_QWORD *)(v15 + 8 * i + 32);
        swift_retain(v40);
      }
      v41 = v40 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber;
      v42 = swift_unknownObjectWeakLoadStrong(v40 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber);
      if (v42)
      {
        v43 = v42;
        v44 = *(_QWORD *)(v41 + 8);
        ObjectType = swift_getObjectType(v42);
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v44 + 24))(a2, v14, ObjectType, v44);
        swift_release(v40);
        swift_unknownObjectRelease(v43);
      }
      else
      {
        swift_release(v40);
      }
    }
    goto LABEL_43;
  }
  __break(1u);
}

double sub_100461950(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  uint64_t v7;
  id v8;
  double result;

  v4 = a2;
  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    v7 = sub_100006C5C(0, &qword_1005E57C0, _CLPlaceInference_ptr);
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v7);
  }
  swift_retain(v5);
  v8 = a3;
  v6(v4, a3);
  swift_release(v5);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

id sub_1004619DC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMLocationProvider();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100461A84()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100461AA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100461204(a1, a2, v2);
}

uint64_t sub_100461AB0()
{
  _QWORD *v0;

  swift_errorRelease(v0[2]);
  swift_bridgeObjectRelease(v0[3]);
  swift_release(v0[4]);
  return swift_deallocObject(v0, 40, 7);
}

void sub_100461AE4()
{
  uint64_t v0;

  sub_100461404(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_100461AF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  NSObject *oslog;
  uint64_t v11;
  _QWORD v12[3];
  _BYTE v13[8];
  uint64_t v14;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v2 = type metadata accessor for Logger(0);
  sub_100056D88(v2, (uint64_t)qword_1005F5748);
  swift_errorRetain(a1);
  v3 = swift_errorRetain(a1);
  oslog = Logger.logObject.getter(v3);
  v4 = static os_log_type_t.error.getter(oslog);
  if (os_log_type_enabled(oslog, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v14 = v6;
    *(_DWORD *)v5 = 136315138;
    swift_getErrorValue(a1, v13, v12);
    v7 = Error.localizedDescription.getter(v12[1], v12[2]);
    v9 = v8;
    v11 = sub_100056DA0(v7, v8, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, v12);
    swift_bridgeObjectRelease(v9);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, oslog, v4, "FMLocationProvider: location manager failed with error: %s", v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {
    swift_errorRelease(a1);
    swift_errorRelease(a1);

  }
}

uint64_t sub_100461CDC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100461D10()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100461D3C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t storeEnumTagSinglePayload for FMLocationManagerConfigurationType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_100461DC4 + 4 * byte_100491C55[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_100461DF8 + 4 * byte_100491C50[v4]))();
}

uint64_t sub_100461DF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100461E00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100461E08);
  return result;
}

uint64_t sub_100461E14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100461E1CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_100461E20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100461E28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMLocationManagerConfigurationType()
{
  return &type metadata for FMLocationManagerConfigurationType;
}

unint64_t sub_100461E48()
{
  unint64_t result;

  result = qword_1005E57C8;
  if (!qword_1005E57C8)
  {
    result = swift_getWitnessTable(&unk_100491D04, &type metadata for FMLocationManagerConfigurationType);
    atomic_store(result, (unint64_t *)&qword_1005E57C8);
  }
  return result;
}

id LocateDeviceIntent.__allocating_init(identifier:class:name:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  objc_class *v5;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  NSString v13;
  NSString v14;
  id v15;

  v9 = objc_msgSend(objc_allocWithZone(v5), "init");
  v10 = type metadata accessor for Device();
  v11 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v10));
  v12 = v9;
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v11, "initWithIdentifier:displayString:", v13, v14, swift_bridgeObjectRelease(a5).n128_f64[0]);

  objc_msgSend(v12, "setDevice:", v15);
  objc_msgSend(v12, "setLocateDeviceClass:", a3);

  return v12;
}

Swift::Bool __swiftcall CLLocation.fmifIsNearBy(_:inBTRangeDistanceInMeters:)(CLLocation _, Swift::Double inBTRangeDistanceInMeters)
{
  void *v2;
  Class isa;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;

  isa = _.super.isa;
  objc_msgSend(v2, "distanceFromLocation:", _.super.isa);
  v6 = v5;
  objc_msgSend(v2, "horizontalAccuracy");
  v8 = v7;
  -[objc_class horizontalAccuracy](isa, "horizontalAccuracy");
  return v6 / sqrt(inBTRangeDistanceInMeters * inBTRangeDistanceInMeters + v8 * v8 + v9 * v9) < 1.5;
}

id sub_1004620AC()
{
  return sub_1000E0A1C(type metadata accessor for FMOBBlueGrayBoldTrayButton);
}

uint64_t type metadata accessor for FMOBBlueGrayBoldTrayButton()
{
  return objc_opt_self(_TtC6FindMy26FMOBBlueGrayBoldTrayButton);
}

id sub_100462158()
{
  return sub_1000E0A1C(type metadata accessor for FMOBWhiteBlueBoldTrayButton);
}

uint64_t type metadata accessor for FMOBWhiteBlueBoldTrayButton()
{
  return objc_opt_self(_TtC6FindMy27FMOBWhiteBlueBoldTrayButton);
}

id sub_100462204()
{
  return sub_1000E0A1C(type metadata accessor for FMOBRedGrayBoldTrayButton);
}

uint64_t type metadata accessor for FMOBRedGrayBoldTrayButton()
{
  return objc_opt_self(_TtC6FindMy25FMOBRedGrayBoldTrayButton);
}

id sub_100462244(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t (*a7)(void), SEL *a8)
{
  id v13;
  void *v14;
  id v15;
  id v16;
  objc_super v18;

  v18.receiver = a1;
  v18.super_class = (Class)a7();
  v13 = objc_msgSendSuper2(&v18, "initWithFrame:", a2, a3, a4, a5);
  v14 = (void *)objc_opt_self(UIColor);
  v15 = v13;
  v16 = objc_msgSend(v14, *a8);
  objc_msgSend(v15, "setTintColor:", v16);

  return v15;
}

void sub_100462324(void *a1, uint64_t a2, void *a3, uint64_t a4, SEL *a5, uint64_t (*a6)(void))
{
  void *v10;
  id v11;
  id v12;
  id v13;
  objc_class *v14;
  id v15;
  objc_super v16;
  objc_super v17;

  v10 = (void *)objc_opt_self(UIColor);
  v11 = a3;
  v12 = a1;
  v13 = objc_msgSend(v10, *a5);
  v14 = (objc_class *)a6();
  v17.receiver = v12;
  v17.super_class = v14;
  objc_msgSendSuper2(&v17, "setTitleColor:forState:", v13, 0);

  v15 = objc_msgSend(v10, *a5);
  v16.receiver = v12;
  v16.super_class = v14;
  objc_msgSendSuper2(&v16, "setTitleColor:forState:", v15, 1);

}

id sub_100462460()
{
  return sub_1000E0A1C(type metadata accessor for FMOBRedWhiteBoldTrayButton);
}

uint64_t type metadata accessor for FMOBRedWhiteBoldTrayButton()
{
  return objc_opt_self(_TtC6FindMy26FMOBRedWhiteBoldTrayButton);
}

_QWORD *sub_10046248C(uint64_t a1)
{
  return sub_10003D218(a1, type metadata accessor for FMItemCellViewModel, (uint64_t)&off_100557998);
}

_QWORD *sub_1004624A0(uint64_t a1)
{
  return sub_10003D218(a1, type metadata accessor for FMDeviceCellViewModel, (uint64_t)&off_100556580);
}

_QWORD *sub_1004624B4(uint64_t a1)
{
  int64_t v1;
  _QWORD *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  __int128 v10;
  void *v11;
  unint64_t v12;
  _QWORD *v13;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    v13 = _swiftEmptyArrayStorage;
    sub_100111F68(0, v1, 0);
    v2 = _swiftEmptyArrayStorage;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v6 = *(v4 - 1);
      v5 = *v4;
      v13 = v2;
      v7 = v2[2];
      v8 = v2[3];
      swift_bridgeObjectRetain(v5);
      if (v7 >= v8 >> 1)
      {
        sub_100111F68(v8 > 1, v7 + 1, 1);
        v2 = v13;
      }
      v4 += 2;
      v11 = &type metadata for String;
      v12 = sub_100071E88();
      *(_QWORD *)&v10 = v6;
      *((_QWORD *)&v10 + 1) = v5;
      v2[2] = v7 + 1;
      sub_10003D3AC(&v10, (uint64_t)&v2[5 * v7 + 4]);
      --v1;
    }
    while (v1);
  }
  return v2;
}

_QWORD *sub_1004625AC(uint64_t a1)
{
  int64_t v1;
  _QWORD *v2;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD v9[2];
  _OWORD v10[2];
  _QWORD *v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    v11 = _swiftEmptyArrayStorage;
    sub_100111F94(0, v1, 0);
    v2 = _swiftEmptyArrayStorage;
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *v4;
      v9[0] = *(v4 - 1);
      v9[1] = v5;
      swift_bridgeObjectRetain(v5);
      swift_dynamicCast(v10, v9, &type metadata for String, (char *)&type metadata for Any + 8, 7);
      if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
      {
        sub_100111F94(0, v2[2] + 1, 1);
        v2 = v11;
      }
      v7 = v2[2];
      v6 = v2[3];
      if (v7 >= v6 >> 1)
      {
        sub_100111F94(v6 > 1, v7 + 1, 1);
        v2 = v11;
      }
      v4 += 2;
      v2[2] = v7 + 1;
      sub_10004C850(v10, &v2[4 * v7 + 4]);
      --v1;
    }
    while (v1);
  }
  return v2;
}

_QWORD *sub_1004626D0(uint64_t a1)
{
  int64_t v1;
  _QWORD *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    v14 = _swiftEmptyArrayStorage;
    sub_100111FF8(0, v1, 0);
    v4 = (uint64_t *)(a1 + 32);
    v2 = _swiftEmptyArrayStorage;
    do
    {
      v5 = *v4;
      v12 = v5;
      swift_bridgeObjectRetain_n(v5, 2);
      v6 = sub_100053F2C((uint64_t *)&unk_1005D6830);
      v7 = sub_100053F2C(&qword_1005D6820);
      swift_dynamicCast(&v13, &v12, v6, v7, 7);
      v8 = v13;
      swift_bridgeObjectRelease(v5);
      if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
      {
        sub_100111FF8(0, v2[2] + 1, 1);
        v2 = v14;
      }
      v10 = v2[2];
      v9 = v2[3];
      if (v10 >= v9 >> 1)
      {
        sub_100111FF8(v9 > 1, v10 + 1, 1);
        v2 = v14;
      }
      v2[2] = v10 + 1;
      v2[v10 + 4] = v8;
      ++v4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_100462810(uint64_t a1)
{
  return sub_1004629CC(a1, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_100111F94, (uint64_t (*)(uint64_t, uint64_t))&specialized _ArrayBuffer._getElementSlowPath(_:), (unint64_t *)&unk_1005DD5B0, CAFilter_ptr);
}

_QWORD *sub_100462834(uint64_t a1)
{
  int64_t v1;
  _QWORD *v2;
  void **v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  __int128 v15;
  _QWORD v16[3];
  uint64_t v17;
  __int128 v18;
  _QWORD *v19;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    v19 = _swiftEmptyArrayStorage;
    sub_1001120A8(0, v1, 0);
    v2 = _swiftEmptyArrayStorage;
    v4 = (void **)(a1 + 48);
    do
    {
      v5 = (uint64_t)*(v4 - 1);
      v6 = *v4;
      v16[0] = *(v4 - 2);
      v16[1] = v5;
      v16[2] = v6;
      swift_bridgeObjectRetain_n(v5, 2);
      v7 = v6;
      v8 = sub_100053F2C(&qword_1005D2BE0);
      v9 = sub_100053F2C((uint64_t *)&unk_1005D6800);
      swift_dynamicCast(&v17, v16, v8, v9, 7);
      v10 = v17;
      v15 = v18;

      swift_bridgeObjectRelease(v5);
      if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
      {
        sub_1001120A8(0, v2[2] + 1, 1);
        v2 = v19;
      }
      v12 = v2[2];
      v11 = v2[3];
      if (v12 >= v11 >> 1)
      {
        sub_1001120A8(v11 > 1, v12 + 1, 1);
        v2 = v19;
      }
      v2[2] = v12 + 1;
      v13 = &v2[3 * v12];
      v13[4] = v10;
      *(_OWORD *)(v13 + 5) = v15;
      v4 += 3;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1004629A8(uint64_t a1)
{
  return sub_1004629CC(a1, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_100115C74, (uint64_t (*)(uint64_t, uint64_t))sub_100469204, (unint64_t *)&qword_1005DD6C0, _CDSuggestedPerson_ptr);
}

uint64_t sub_1004629CC(uint64_t a1, uint64_t (*a2)(BOOL, uint64_t, uint64_t), uint64_t (*a3)(uint64_t, uint64_t), unint64_t *a4, _QWORD *a5)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t result;
  uint64_t i;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  id *v16;
  uint64_t v17;
  id v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  id v23;
  _OWORD v24[2];
  _QWORD *v25;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v21 = a1;
    else
      v21 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v9 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v10 = _swiftEmptyArrayStorage;
  if (!v9)
    return (uint64_t)v10;
  v25 = _swiftEmptyArrayStorage;
  result = a2(0, v9 & ~(v9 >> 63), 0);
  if ((v9 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v9; ++i)
      {
        v23 = (id)a3(i, a1);
        v13 = sub_100006C5C(0, a4, a5);
        swift_dynamicCast(v24, &v23, v13, (char *)&type metadata for Any + 8, 7);
        v10 = v25;
        if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) == 0)
        {
          a2(0, v10[2] + 1, 1);
          v10 = v25;
        }
        v15 = v10[2];
        v14 = v10[3];
        if (v15 >= v14 >> 1)
        {
          a2(v14 > 1, v15 + 1, 1);
          v10 = v25;
        }
        v10[2] = v15 + 1;
        sub_10004C850(v24, &v10[4 * v15 + 4]);
      }
    }
    else
    {
      v16 = (id *)(a1 + 32);
      v17 = sub_100006C5C(0, a4, a5);
      do
      {
        v23 = *v16;
        v18 = v23;
        swift_dynamicCast(v24, &v23, v17, (char *)&type metadata for Any + 8, 7);
        v10 = v25;
        if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) == 0)
        {
          a2(0, v10[2] + 1, 1);
          v10 = v25;
        }
        v20 = v10[2];
        v19 = v10[3];
        if (v20 >= v19 >> 1)
        {
          a2(v19 > 1, v20 + 1, 1);
          v10 = v25;
        }
        v10[2] = v20 + 1;
        sub_10004C850(v24, &v10[4 * v20 + 4]);
        ++v16;
        --v9;
      }
      while (v9);
    }
    return (uint64_t)v10;
  }
  __break(1u);
  return result;
}

void sub_100462C38(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  __n128 v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  char v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = sub_100053F2C(&qword_1005E5958);
  v33 = *(_QWORD *)(v3 - 8);
  v34 = v3;
  __chkstk_darwin(v3);
  v31 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100053F2C((uint64_t *)&unk_1005E5960);
  v6 = __chkstk_darwin(v5);
  v8 = (unint64_t *)((char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  v10 = (char *)&v31 - v9;
  v11 = *(_QWORD *)(a2 + 16);
  v32 = a2;
  v12 = swift_bridgeObjectRetain(a2);
  v13 = 0;
  while (1)
  {
    if (v13 == v11)
    {
      v14 = 1;
      v13 = v11;
      v15 = v34;
      goto LABEL_6;
    }
    v15 = v34;
    if (v13 >= v11)
      break;
    v16 = type metadata accessor for FMPeopleCellViewModel(0);
    v17 = (uint64_t)&v31[*(int *)(v15 + 48)];
    sub_10004FC74(v32+ ((*(unsigned __int8 *)(*(_QWORD *)(v16 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v16 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v13, v17, type metadata accessor for FMPeopleCellViewModel);
    v18 = (uint64_t)v8 + *(int *)(v15 + 48);
    *v8 = v13;
    sub_100051774(v17, v18, type metadata accessor for FMPeopleCellViewModel);
    v14 = 0;
    ++v13;
LABEL_6:
    v19 = v33;
    (*(void (**)(unint64_t *, uint64_t, uint64_t, uint64_t, __n128))(v33 + 56))(v8, v14, 1, v15, v12);
    sub_10046AA40((uint64_t)v8, (uint64_t)v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v10, 1, v15) == 1)
      goto LABEL_15;
    v20 = v8;
    v21 = v11;
    v22 = &v10[*(int *)(v15 + 48)];
    v24 = *(_QWORD *)v22;
    v23 = *((_QWORD *)v22 + 1);
    swift_bridgeObjectRetain(v23);
    v25 = sub_10004FCB8((uint64_t)v22, type metadata accessor for FMPeopleCellViewModel);
    v26 = FMFFriend.identifier.getter(v25);
    if (v24 == v26 && v23 == v27)
    {
      swift_bridgeObjectRelease(v32);
      swift_bridgeObjectRelease(v23);
      v32 = v23;
LABEL_15:
      swift_bridgeObjectRelease(v32);
      return;
    }
    v29 = v27;
    v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v23, v26, v27, 0);
    swift_bridgeObjectRelease(v23);
    v12 = swift_bridgeObjectRelease(v29);
    v11 = v21;
    v8 = v20;
    if ((v30 & 1) != 0)
      goto LABEL_15;
  }
  __break(1u);
}

double sub_100462EB0()
{
  return sub_10003B568(sub_100462EBC);
}

double sub_100462EBC()
{
  return sub_10003B648((double (*)(void))sub_100462EBC);
}

id sub_100462EC8(uint64_t *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  NSString v12;
  NSString v13;
  void *v14;
  uint64_t v15;
  NSString v16;
  NSString v17;
  void *v18;
  id v19;
  NSString v20;
  char *v21;
  NSString v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  double v36;
  id v37;
  double v38;
  double v39;
  void *v40;
  double v41;
  id v42;
  double v43;
  id v44;
  double v45;
  double v46;
  double v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v2 = v1;
  v4 = type metadata accessor for FMAllowLocationAlertCellViewModel(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)&v49 - v8;
  sub_100463778(a1);
  v10 = *(void **)&v1[qword_1005DA258];
  v11 = a1[11];
  swift_bridgeObjectRetain(v11);
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v10, "setText:", v12, swift_bridgeObjectRelease(v11).n128_f64[0]);

  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v10, "setAccessibilityIdentifier:", v13);

  v14 = *(void **)&v2[qword_1005DA260];
  v15 = a1[9];
  swift_bridgeObjectRetain(v15);
  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v14, "setText:", v16, swift_bridgeObjectRelease(v15).n128_f64[0]);

  v17 = String._bridgeToObjectiveC()();
  objc_msgSend(v14, "setAccessibilityIdentifier:", v17);

  v18 = *(void **)&v2[qword_1005DA268];
  objc_msgSend(v18, "setText:", 0);
  v19 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  objc_msgSend(v18, "setTextColor:", v19);

  v20 = String._bridgeToObjectiveC()();
  objc_msgSend(v18, "setAccessibilityIdentifier:", v20);

  v21 = *(char **)&v2[qword_1005DA270];
  objc_msgSend(v21, "setHidden:", 1);
  *(_QWORD *)&v21[OBJC_IVAR____TtC6FindMy13FMBatteryView_level] = 0;
  sub_10004F220();
  v21[OBJC_IVAR____TtC6FindMy13FMBatteryView_shouldShowLowPowerWarning] = 0;
  sub_10004ED74();
  v21[OBJC_IVAR____TtC6FindMy13FMBatteryView_isLowPowerEnabled] = 0;
  sub_10004ED74();
  v21[OBJC_IVAR____TtC6FindMy13FMBatteryView_isCharging] = 0;
  objc_msgSend(*(id *)&v21[OBJC_IVAR____TtC6FindMy13FMBatteryView_chargingView], "setHidden:", 1);
  v22 = String._bridgeToObjectiveC()();
  objc_msgSend(v21, "setAccessibilityIdentifier:", v22);

  objc_msgSend(*(id *)&v2[qword_1005DA288], "setHidden:", 1);
  objc_msgSend(v18, "setHidden:", 0);
  v23 = *(void **)&v2[qword_1005DA278];
  objc_msgSend(v23, "setHidden:", 1);
  objc_msgSend(v23, "stopAnimating");
  if (qword_1005D1CE0 != -1)
    swift_once(&qword_1005D1CE0, sub_10000884C);
  if (byte_1005F5238 == 1)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v24 = type metadata accessor for Logger(0);
    sub_100056D88(v24, (uint64_t)qword_1005F5748);
    sub_10004FC74((uint64_t)a1, (uint64_t)v9, type metadata accessor for FMAllowLocationAlertCellViewModel);
    v25 = sub_10004FC74((uint64_t)a1, (uint64_t)v7, type metadata accessor for FMAllowLocationAlertCellViewModel);
    v26 = Logger.logObject.getter(v25);
    v27 = static os_log_type_t.default.getter(v26);
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc(44, -1);
      v50 = swift_slowAlloc(96, -1);
      v52 = v50;
      *(_DWORD *)v28 = 136316162;
      v29 = *((_QWORD *)v9 + 10);
      v30 = *((_QWORD *)v9 + 11);
      swift_bridgeObjectRetain(v30);
      v51 = sub_100056DA0(v29, v30, &v52);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52);
      swift_bridgeObjectRelease(v30);
      sub_10004FCB8((uint64_t)v9, type metadata accessor for FMAllowLocationAlertCellViewModel);
      *(_WORD *)(v28 + 12) = 2080;
      v32 = *((_QWORD *)v7 + 8);
      v31 = *((_QWORD *)v7 + 9);
      swift_bridgeObjectRetain(v31);
      v51 = sub_100056DA0(v32, v31, &v52);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52);
      swift_bridgeObjectRelease(v31);
      sub_10004FCB8((uint64_t)v7, type metadata accessor for FMAllowLocationAlertCellViewModel);
      *(_WORD *)(v28 + 22) = 2080;
      v51 = sub_100056DA0(7104878, 0xE300000000000000, &v52);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, &v52);
      *(_WORD *)(v28 + 32) = 1024;
      LODWORD(v51) = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, (char *)&v51 + 4);
      *(_WORD *)(v28 + 38) = 1024;
      LODWORD(v51) = 0;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v51, (char *)&v51 + 4);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "FMTableViewCell: Content\ntitle: %s\nsubtitle: %s\ndistance: %s\nlocating: %{BOOL}d\nbatteryIndicatorShowing: %{BOOL}d", (uint8_t *)v28, 0x2Cu);
      v33 = v50;
      swift_arrayDestroy(v50, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v33, -1, -1);
      swift_slowDealloc(v28, -1, -1);
    }
    else
    {
      sub_10004FCB8((uint64_t)v9, type metadata accessor for FMAllowLocationAlertCellViewModel);
      sub_10004FCB8((uint64_t)v7, type metadata accessor for FMAllowLocationAlertCellViewModel);
    }

  }
  v2[qword_1005DA2A0] = 0;
  v34 = (void *)objc_opt_self(UIScreen);
  v35 = objc_msgSend(v34, "mainScreen");
  v36 = UIRoundToScreenScale(0.3);

  v37 = objc_msgSend(v2, "containerView");
  objc_msgSend(v37, "bounds");
  v39 = v38;

  v40 = *(void **)&v2[qword_1005DA280];
  v41 = sub_10003B568(sub_100462EBC);
  objc_msgSend(v40, "setFrame:", v41, v39 - v36, sub_100462EBC(), v36);
  v42 = objc_msgSend(v34, "mainScreen");
  v43 = UIRoundToScreenScale(0.3);

  v44 = objc_msgSend(v2, "containerView");
  objc_msgSend(v44, "bounds");
  v46 = v45;

  v47 = sub_10003B568(sub_100462EBC);
  return objc_msgSend(v40, "setFrame:", v47, v46 - v43, sub_100462EBC(), v43);
}

id sub_10046363C(uint64_t a1)
{
  _BYTE *v1;
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;

  v1[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_hasBackplate] = *(_BYTE *)(a1 + 64);
  v3 = objc_msgSend((id)objc_opt_self(UIColor), "systemGray6Color");
  v4 = *(void **)&v1[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_backplateStrokeColor];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_backplateStrokeColor] = v3;

  v5 = *(void **)&v1[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_badgeView];
  v6 = *(_QWORD *)(a1 + 8);
  objc_msgSend(v5, "setImage:", v6);
  objc_msgSend(v5, "setBackgroundColor:", *(_QWORD *)(a1 + 16));
  objc_msgSend(v5, "setHidden:", v6 == 0);
  v7 = *(void **)&v1[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_imageView];
  objc_msgSend(v7, "setImage:", *(_QWORD *)a1);
  objc_msgSend(v7, "frame");
  objc_msgSend(v7, "setFrame:");
  objc_msgSend(v7, "setHidden:", 0);
  objc_msgSend(v1, "setHidden:", 0);
  return objc_msgSend(v1, "setNeedsLayout");
}

id sub_100463778(uint64_t *a1)
{
  _BYTE *v1;
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;

  v1[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_hasBackplate] = *((_BYTE *)a1 + 104);
  v3 = objc_msgSend((id)objc_opt_self(UIColor), "systemGray6Color");
  v4 = *(void **)&v1[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_backplateStrokeColor];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_backplateStrokeColor] = v3;

  v5 = *(void **)&v1[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_badgeView];
  v6 = *a1;
  objc_msgSend(v5, "setImage:", *a1);
  objc_msgSend(v5, "setBackgroundColor:", a1[1]);
  objc_msgSend(v5, "setHidden:", v6 == 0);
  v7 = *(void **)&v1[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_imageView];
  objc_msgSend(v7, "setImage:", *(uint64_t *)((char *)a1 + *(int *)(type metadata accessor for FMAllowLocationAlertCellViewModel(0) + 56)));
  objc_msgSend(v7, "frame");
  objc_msgSend(v7, "setFrame:");
  objc_msgSend(v7, "setHidden:", 0);
  objc_msgSend(v1, "setHidden:", 0);
  return objc_msgSend(v1, "setNeedsLayout");
}

void sub_1004638C0(uint64_t a1, void *a2, void *a3, void *aBlock)
{
  uint64_t v6;
  void (*v7)(id, id, uint64_t (*)(char), uint64_t);
  void *v8;
  uint64_t v9;
  id v10;
  id v11;

  v7 = *(void (**)(id, id, uint64_t (*)(char), uint64_t))(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v8 = _Block_copy(aBlock);
  v9 = swift_allocObject(&unk_100568818, 24, 7);
  *(_QWORD *)(v9 + 16) = v8;
  swift_retain(v6);
  v11 = a2;
  v10 = a3;
  v7(v11, v10, sub_10046AD74, v9);
  swift_release(v6);
  swift_release(v9);

}

id sub_100463970(uint64_t *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void *v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  __n128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  _QWORD *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t (*v58)(char *, uint64_t, uint64_t);
  _BYTE v59[24];

  v2 = v1;
  v4 = sub_100053F2C(&qword_1005E59B8);
  __chkstk_darwin(v4);
  v56 = (uint64_t)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100053F2C((uint64_t *)&unk_1005E59C0);
  v7 = __chkstk_darwin(v6);
  v54 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v52 - v9;
  v11 = sub_100053F2C(&qword_1005DC1B8);
  v12 = __chkstk_darwin(v11);
  v55 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v52 - v15;
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v52 - v18;
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v52 - v21;
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v52 - v24;
  v26 = *(void **)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x198));
  UIButton.configuration.getter(v23);
  v27 = type metadata accessor for UIButton.Configuration(0);
  v58 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48);
  v28 = v58(v25, 1, v27);
  v57 = a1;
  if (v28)
  {
    sub_100007464((uint64_t)v25, (uint64_t)v22, &qword_1005DC1B8);
    UIButton.configuration.setter(v22);
    v29 = sub_1000051EC((uint64_t)v25, &qword_1005DC1B8);
  }
  else
  {
    v30 = a1;
    v31 = a1[5];
    if (v31)
    {
      v52 = v30[4];
      v53 = v1;
      swift_bridgeObjectRetain(v31);
      sub_100463EE4(v52, v31);
      v32 = type metadata accessor for AttributedString(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v10, 0, 1, v32);

      v33 = swift_bridgeObjectRelease(v31);
    }
    else
    {
      v34 = type metadata accessor for AttributedString(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v10, 1, 1, v34);
    }
    UIButton.Configuration.attributedTitle.setter(v10, v33);
    v29 = UIButton.configuration.setter(v25);
  }
  UIButton.configuration.getter(v29);
  if (v58(v19, 1, v27))
  {
    sub_100007464((uint64_t)v19, (uint64_t)v22, &qword_1005DC1B8);
    UIButton.configuration.setter(v22);
    v35 = sub_1000051EC((uint64_t)v19, &qword_1005DC1B8);
  }
  else
  {
    UIButton.Configuration.showsActivityIndicator.setter();
    v35 = UIButton.configuration.setter(v19);
  }
  v36 = v57;
  v37 = *(void **)((char *)v1 + *(_QWORD *)((swift_isaMask & *v1) + 0x1A0));
  UIButton.configuration.getter(v35);
  if (v58(v16, 1, v27))
  {
    sub_100007464((uint64_t)v16, (uint64_t)v22, &qword_1005DC1B8);
    UIButton.configuration.setter(v22);
    v38 = sub_1000051EC((uint64_t)v16, &qword_1005DC1B8);
  }
  else
  {
    v39 = v36[7];
    if (v39)
    {
      v40 = v36[6];
      v41 = v2;
      swift_bridgeObjectRetain(v39);
      v42 = v54;
      sub_100463EE4(v40, v39);
      v43 = v42;
      v44 = type metadata accessor for AttributedString(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v42, 0, 1, v44);

      v36 = v57;
      v45 = swift_bridgeObjectRelease(v39);
    }
    else
    {
      v46 = type metadata accessor for AttributedString(0);
      v43 = v54;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v54, 1, 1, v46);
    }
    UIButton.Configuration.attributedTitle.setter(v43, v45);
    v38 = UIButton.configuration.setter(v16);
  }
  v47 = (uint64_t)v55;
  UIButton.configuration.getter(v38);
  if (v58((char *)v47, 1, v27))
  {
    sub_100007464(v47, (uint64_t)v22, &qword_1005DC1B8);
    UIButton.configuration.setter(v22);
    sub_1000051EC(v47, &qword_1005DC1B8);
  }
  else
  {
    UIButton.Configuration.showsActivityIndicator.setter();
    UIButton.configuration.setter(v47);
  }
  objc_msgSend(v26, "setEnabled:", 1);
  objc_msgSend(v37, "setEnabled:", 1);
  v48 = v56;
  sub_10004FC74((uint64_t)v36, v56, type metadata accessor for FMAllowLocationAlertCellViewModel);
  v49 = type metadata accessor for FMAllowLocationAlertCellViewModel(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v48, 0, 1, v49);
  v50 = (uint64_t)v2 + *(_QWORD *)((swift_isaMask & *v2) + 0x190);
  swift_beginAccess(v50, v59, 33, 0);
  sub_10046AED4(v48, v50);
  swift_endAccess(v59);
  return sub_100462EC8(v36);
}

uint64_t sub_100463EE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  double v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  __n128 v17;
  uint64_t KeyPath;
  id v20;

  v4 = type metadata accessor for AttributeContainer(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&KeyPath - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&KeyPath - v10;
  AttributeContainer.init()(v9);
  v12 = objc_msgSend(objc_allocWithZone((Class)NSMutableParagraphStyle), "init");
  objc_msgSend(v12, "setAlignment:", 1);
  LODWORD(v13) = 1.0;
  objc_msgSend(v12, "setHyphenationFactor:", v13);
  objc_msgSend(v12, "setLineBreakMode:", 0);
  KeyPath = swift_getKeyPath(&unk_100491E88);
  v14 = swift_getKeyPath(&unk_100491EB8);
  v20 = v12;
  v15 = sub_1002E3020();
  v16 = v12;
  AttributeContainer.subscript.setter(&v20, v14, v15);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v11, v4);
  v17 = swift_bridgeObjectRetain(a2);
  AttributedString.init(_:attributes:)(a1, a2, v8, v17);

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v11, v4);
}

uint64_t sub_10046406C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = *a2;
  v5 = *a1;
  v6 = v2;
  v3 = sub_100053F2C(&qword_1005E59D8);
  return dispatch thunk of static Equatable.== infix(_:_:)(&v6, &v5, v3, &protocol witness table for AnyKeyPath) & 1;
}

uint64_t sub_1004640C4()
{
  uint64_t v0;

  v0 = sub_100053F2C(&qword_1005E59D8);
  return dispatch thunk of Hashable.hashValue.getter(v0, &protocol witness table for AnyKeyPath);
}

void sub_100464108(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_1002E3020();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

void sub_10046412C()
{
  AttributeScopes.UIKitAttributes.paragraphStyle.getter();
  __break(1u);
}

uint64_t sub_100464144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t sub_100464164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  char v33;
  void (*v34)(_BYTE *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(_BYTE *, uint64_t);
  _BYTE *v43;
  uint64_t v44;
  void (*v45)(_BYTE *, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  void (*v49)(_BYTE *, uint64_t);
  uint64_t v50;
  _BYTE *v51;
  __n128 v52;
  void (*v53)(_BYTE *, uint64_t, __n128);
  char v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char v67;
  __n128 v69;
  void (*v70)(_BYTE *, uint64_t, __n128);
  uint64_t v71;
  _BYTE *v72;
  uint64_t v73;
  unsigned int (*v74)(uint64_t, uint64_t, uint64_t);
  _BYTE *v75;
  _BYTE *v76;
  uint64_t v77;
  void (*v78)(_BYTE *, uint64_t);
  _BYTE v79[12];
  int v80;
  uint64_t v81;
  _BYTE *v82;
  _BYTE *v83;
  _BYTE *v84;
  _BYTE *v85;
  _BYTE *v86;
  _BYTE *v87;
  _BYTE *v88;
  uint64_t v89;
  _BYTE *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _BYTE *v96;
  _BYTE *v97;
  uint64_t v98;
  _BYTE *v99;
  void (*v100)(_BYTE *, uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;

  v1 = type metadata accessor for FMFLocationAlertAcceptanceStatus(0);
  v91 = *(_QWORD *)(v1 - 8);
  v92 = v1;
  __chkstk_darwin(v1);
  v84 = &v79[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v89 = sub_100053F2C((uint64_t *)&unk_1005D2A30);
  __chkstk_darwin(v89);
  v88 = &v79[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_100053F2C((uint64_t *)&unk_1005DF470);
  v5 = __chkstk_darwin(v4);
  v86 = &v79[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __chkstk_darwin(v5);
  v87 = &v79[-v8];
  __chkstk_darwin(v7);
  v90 = &v79[-v9];
  v10 = type metadata accessor for FMFLocationAlertTriggerType(0);
  v93 = *(_QWORD *)(v10 - 8);
  v94 = v10;
  v11 = __chkstk_darwin(v10);
  v96 = &v79[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  v97 = &v79[-v13];
  v14 = type metadata accessor for FMFLocationAlertTarget(0);
  v95 = *(_QWORD *)(v14 - 8);
  v15 = __chkstk_darwin(v14);
  v17 = &v79[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  v19 = &v79[-v18];
  v20 = type metadata accessor for FMFLocationAlert(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = __chkstk_darwin(v20);
  v99 = &v79[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = __chkstk_darwin(v22);
  v26 = &v79[-v25];
  v27 = __chkstk_darwin(v24);
  v29 = &v79[-v28];
  v30 = __chkstk_darwin(v27);
  v32 = &v79[-v31];
  v33 = FMFLocationAlert.setOnMe.getter(v30);
  v34 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v21 + 16);
  v98 = v0;
  v100 = v34;
  v101 = v20;
  v35 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v34)(v32, v0, v20);
  if ((v33 & 1) == 0)
  {
    v49 = *(void (**)(_BYTE *, uint64_t))(v21 + 8);
    v50 = v98;
    v51 = v99;
    v45 = v100;
    v44 = v101;
    v49(v32, v101);
    goto LABEL_13;
  }
  v83 = v26;
  v85 = v29;
  v81 = v21;
  v36 = v93;
  v37 = v94;
  FMFLocationAlert.locationAlertTarget.getter(v35);
  v38 = v95;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v95 + 104))(v17, enum case for FMFLocationAlertTarget.alertMe(_:), v14);
  v39 = sub_100008000((unint64_t *)&unk_1005E5A00, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocationAlertTarget, (uint64_t)&protocol conformance descriptor for FMFLocationAlertTarget);
  dispatch thunk of RawRepresentable.rawValue.getter(&v104, v14, v39);
  dispatch thunk of RawRepresentable.rawValue.getter(&v102, v14, v39);
  v40 = v105;
  v41 = v103;
  v82 = v32;
  if (v104 != v102 || v105 != v103)
  {
    v80 = _stringCompareWithSmolCheck(_:_:expecting:)(v104, v105, v102, v103, 0);
    swift_bridgeObjectRelease(v40);
    v52 = swift_bridgeObjectRelease(v41);
    v53 = *(void (**)(_BYTE *, uint64_t, __n128))(v38 + 8);
    v53(v17, v14, v52);
    ((void (*)(_BYTE *, uint64_t))v53)(v19, v14);
    v43 = v85;
    v45 = v100;
    v44 = v101;
    v46 = ((uint64_t (*)(_BYTE *, _BYTE *, uint64_t))v100)(v85, v32, v101);
    v47 = v36;
    v48 = v96;
    if ((v80 & 1) != 0)
      goto LABEL_7;
    v49 = *(void (**)(_BYTE *, uint64_t))(v81 + 8);
    v49(v43, v44);
    v50 = v98;
    v51 = v99;
    v49(v82, v44);
LABEL_13:
    v45(v51, v50, v44);
    goto LABEL_14;
  }
  swift_bridgeObjectRelease_n(v105, 2);
  v42 = *(void (**)(_BYTE *, uint64_t))(v38 + 8);
  v42(v17, v14);
  v42(v19, v14);
  v43 = v85;
  v45 = v100;
  v44 = v101;
  v46 = ((uint64_t (*)(_BYTE *, _BYTE *, uint64_t))v100)(v85, v32, v101);
  v47 = v36;
  v48 = v96;
LABEL_7:
  v54 = FMFLocationAlert.repeating.getter(v46);
  v55 = v83;
  v56 = ((uint64_t (*)(_BYTE *, _BYTE *, uint64_t))v45)(v83, v43, v44);
  if ((v54 & 1) != 0)
  {
    v49 = *(void (**)(_BYTE *, uint64_t))(v81 + 8);
    v49(v55, v44);
    v49(v43, v44);
    v49(v82, v44);
    v51 = v99;
    v57 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v45)(v99, v98, v44);
    v59 = v91;
    v58 = v92;
    v60 = v89;
    v61 = (uint64_t)v90;
    goto LABEL_18;
  }
  FMFLocationAlert.triggerType.getter(v56);
  v62 = v37;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v47 + 104))(v48, enum case for FMFLocationAlertTriggerType.scheduled(_:), v37);
  v63 = sub_100008000(&qword_1005D33D8, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocationAlertTriggerType, (uint64_t)&protocol conformance descriptor for FMFLocationAlertTriggerType);
  dispatch thunk of RawRepresentable.rawValue.getter(&v104, v37, v63);
  dispatch thunk of RawRepresentable.rawValue.getter(&v102, v37, v63);
  v64 = v105;
  v65 = v103;
  v59 = v91;
  v58 = v92;
  v60 = v89;
  v61 = (uint64_t)v90;
  if (v104 == v102 && v105 == v103)
  {
    v66 = 1;
    v65 = v105;
  }
  else
  {
    v66 = _stringCompareWithSmolCheck(_:_:expecting:)(v104, v105, v102, v103, 0);
  }
  swift_bridgeObjectRelease(v64);
  v69 = swift_bridgeObjectRelease(v65);
  v70 = *(void (**)(_BYTE *, uint64_t, __n128))(v47 + 8);
  v70(v48, v62, v69);
  ((void (*)(_BYTE *, uint64_t))v70)(v97, v62);
  v49 = *(void (**)(_BYTE *, uint64_t))(v81 + 8);
  v44 = v101;
  v49(v83, v101);
  v49(v85, v44);
  v49(v82, v44);
  v51 = v99;
  v57 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v100)(v99, v98, v44);
  if ((v66 & 1) != 0)
  {
LABEL_18:
    FMFLocationAlert.acceptanceStatus.getter(v57);
    v71 = (uint64_t)v87;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v59 + 104))(v87, enum case for FMFLocationAlertAcceptanceStatus.pending(_:), v58);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v59 + 56))(v71, 0, 1, v58);
    v72 = v88;
    v73 = (uint64_t)&v88[*(int *)(v60 + 48)];
    sub_100007464(v61, (uint64_t)v88, (uint64_t *)&unk_1005DF470);
    sub_100007464(v71, v73, (uint64_t *)&unk_1005DF470);
    v74 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
    if (v74((uint64_t)v72, 1, v58) == 1)
    {
      sub_1000051EC(v71, (uint64_t *)&unk_1005DF470);
      sub_1000051EC(v61, (uint64_t *)&unk_1005DF470);
      if (v74(v73, 1, v58) == 1)
      {
        sub_1000051EC((uint64_t)v72, (uint64_t *)&unk_1005DF470);
        v67 = 1;
        v44 = v101;
        goto LABEL_15;
      }
    }
    else
    {
      v75 = v86;
      sub_100007464((uint64_t)v72, (uint64_t)v86, (uint64_t *)&unk_1005DF470);
      if (v74(v73, 1, v58) != 1)
      {
        v76 = v84;
        (*(void (**)(_BYTE *, uint64_t, uint64_t))(v59 + 32))(v84, v73, v58);
        v77 = sub_100008000((unint64_t *)&unk_1005D2A70, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocationAlertAcceptanceStatus, (uint64_t)&protocol conformance descriptor for FMFLocationAlertAcceptanceStatus);
        v67 = dispatch thunk of static Equatable.== infix(_:_:)(v75, v76, v58, v77);
        v78 = *(void (**)(_BYTE *, uint64_t))(v59 + 8);
        v78(v76, v58);
        sub_1000051EC(v71, (uint64_t *)&unk_1005DF470);
        sub_1000051EC(v61, (uint64_t *)&unk_1005DF470);
        v78(v86, v58);
        sub_1000051EC((uint64_t)v72, (uint64_t *)&unk_1005DF470);
        v44 = v101;
        goto LABEL_15;
      }
      sub_1000051EC(v71, (uint64_t *)&unk_1005DF470);
      sub_1000051EC(v61, (uint64_t *)&unk_1005DF470);
      (*(void (**)(_BYTE *, uint64_t))(v59 + 8))(v75, v58);
    }
    sub_1000051EC((uint64_t)v72, (uint64_t *)&unk_1005D2A30);
    v67 = 0;
    v44 = v101;
    goto LABEL_15;
  }
LABEL_14:
  v67 = 0;
LABEL_15:
  v49(v51, v44);
  return v67 & 1;
}

void sub_100464984(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[24];

  v3 = v2;
  if (IndexPath.section.getter(a1) == 2)
  {
    v5 = IndexPath.row.getter(2);
    v6 = (uint64_t *)(v3 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_cellsViewModel);
    swift_beginAccess(v3 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_cellsViewModel, v14, 0, 0);
    if ((v5 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v7 = *v6;
      if (v5 < *(_QWORD *)(v7 + 16))
      {
        v8 = type metadata accessor for FMPeopleCellViewModel(0);
        v9 = (uint64_t *)(v7
                       + ((*(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80))
                       + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * v5);
        v10 = *(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator) + 48);
        v11 = *v9;
        v12 = v9[1];
        swift_retain(v10);
        sub_10009AF28(v11, v12, a2);
        swift_release(v10);
        return;
      }
    }
    __break(1u);
  }
  else
  {
    v13 = type metadata accessor for FMFFriend(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a2, 1, 1, v13);
  }
}

uint64_t sub_100464A94@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(char *, unint64_t, uint64_t);
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  __n128 v57;
  void (*v58)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  __n128 v61;
  __n128 v62;
  unsigned int (*v63)(_QWORD, _QWORD, _QWORD, __n128);
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t i;
  __n128 v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  Swift::Int v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  BOOL v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  BOOL v87;
  __n128 v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v92)(char *, uint64_t, uint64_t);
  char *v93;
  __n128 v94;
  void (*v95)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v96)(char *);
  char *v97;
  __n128 v98;
  void (*v99)(char *, char *, uint64_t);
  char *v100;
  __n128 v101;
  uint64_t (*v102)(uint64_t, _QWORD, uint64_t, uint64_t);
  void (*v103)(char *, uint64_t, uint64_t, __n128);
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  uint64_t v109;
  void (*v110)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unsigned int (*v116)(_QWORD, _QWORD, _QWORD, __n128);
  uint64_t v117;
  char *v118;
  char *v119;
  char *v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t (*v123)(char *, unint64_t, uint64_t);
  uint64_t v124;
  unint64_t v125;
  char *v126;
  uint64_t v127;
  _QWORD v128[10];

  v2 = v1;
  v107 = a1;
  v3 = sub_100053F2C(&qword_1005D3380);
  v4 = __chkstk_darwin(v3);
  v120 = (char *)&v106 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v118 = (char *)&v106 - v7;
  v8 = __chkstk_darwin(v6);
  v119 = (char *)&v106 - v9;
  __chkstk_darwin(v8);
  v11 = (char *)&v106 - v10;
  v12 = type metadata accessor for FMFFriend(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v126 = (char *)&v106 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v108 = (char *)&v106 - v17;
  v18 = __chkstk_darwin(v16);
  v112 = (char *)&v106 - v19;
  v20 = __chkstk_darwin(v18);
  v111 = (char *)&v106 - v21;
  v22 = __chkstk_darwin(v20);
  v106 = (char *)&v106 - v23;
  v24 = __chkstk_darwin(v22);
  v26 = (char *)&v106 - v25;
  v27 = FMFLocationAlert.friendId.getter(v24);
  if (v28)
  {
    v29 = v27;
    v30 = v28;
    v31 = *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator) + 48);
    swift_retain(v31);
    sub_10009AF28(v29, v30, v11);
    swift_release(v31);
    v32 = swift_bridgeObjectRelease(v30);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v13 + 48))(v11, 1, v12, v32) != 1)
    {
      v99 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
      v99(v26, v11, v12);
      v100 = v107;
      v99(v107, v26, v12);
      return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v100, 0, 1, v12);
    }
    v27 = sub_1000051EC((uint64_t)v11, &qword_1005D3380);
  }
  result = FMFLocationAlert.followerIds.getter(v27);
  if (!result)
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v107, 1, 1, v12);
  v34 = result;
  v36 = (uint64_t)v119;
  v35 = (uint64_t)v120;
  v117 = *(_QWORD *)(result + 16);
  if (!v117)
  {
LABEL_51:
    swift_bridgeObjectRelease(v34);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v107, 1, 1, v12);
  }
  v37 = 0;
  v115 = *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator);
  v114 = result + 32;
  v127 = v13;
  v113 = result;
  while (v37 < *(_QWORD *)(v34 + 16))
  {
    v121 = v37;
    v38 = (uint64_t *)(v114 + 16 * v37);
    v39 = *v38;
    v40 = v38[1];
    v41 = *(_QWORD *)(v115 + 48);
    v42 = *(_QWORD *)(v41 + 40);
    swift_bridgeObjectRetain(v40);
    v122 = v41;
    swift_retain(v41);
    v125 = v42;
    v44 = dispatch thunk of FMFManager.friends.getter(v43);
    v45 = v44;
    v46 = *(_QWORD *)(v44 + 16);
    if (v46)
    {
      v47 = v44 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
      v124 = v44;
      swift_bridgeObjectRetain(v44);
      v48 = v13;
      v49 = *(_QWORD *)(v13 + 72);
      v50 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v48 + 16);
      v51 = v112;
      while (1)
      {
        v52 = v50(v51, v47, v12);
        v53 = FMFFriend.identifier.getter(v52);
        v55 = v54;
        if (v53 == v39 && v54 == v40)
        {
          v45 = v124;
          swift_bridgeObjectRelease(v124);
          v60 = v40;
          goto LABEL_18;
        }
        v56 = _stringCompareWithSmolCheck(_:_:expecting:)(v53, v54, v39, v40, 0);
        v57 = swift_bridgeObjectRelease(v55);
        if ((v56 & 1) != 0)
          break;
        (*(void (**)(char *, uint64_t, __n128))(v127 + 8))(v51, v12, v57);
        v47 += v49;
        if (!--v46)
        {
          v45 = v124;
          swift_bridgeObjectRelease(v124);
          v36 = (uint64_t)v119;
          v35 = (uint64_t)v120;
          v13 = v127;
          goto LABEL_15;
        }
      }
      v45 = v124;
      v60 = v124;
LABEL_18:
      v61 = swift_bridgeObjectRelease(v60);
      v13 = v127;
      v59 = (uint64_t)v118;
      (*(void (**)(char *, char *, uint64_t, __n128))(v127 + 32))(v118, v51, v12, v61);
      v58 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56);
      v58(v59, 0, 1, v12);
      v36 = (uint64_t)v119;
      v35 = (uint64_t)v120;
    }
    else
    {
LABEL_15:
      v58 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56);
      v59 = (uint64_t)v118;
      v58((uint64_t)v118, 1, 1, v12);
    }
    v62 = swift_bridgeObjectRelease(v45);
    v63 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD, __n128))(v13 + 48);
    if (v63(v59, 1, v12, v62) == 1)
    {
      sub_1000051EC(v59, &qword_1005D3380);
      v65 = dispatch thunk of FMFManager.friends.getter(v64);
      v66 = v65;
      v67 = *(_QWORD *)(v65 + 16);
      v116 = v63;
      if (v67)
      {
        v68 = v67;
        v110 = v58;
        v125 = v65 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
        v109 = v65;
        swift_bridgeObjectRetain(v65);
        v69 = 0;
        v70 = *(_QWORD *)(v13 + 72);
        v123 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v13 + 16);
        v124 = v70;
        v71 = v68;
        for (i = v123(v126, v125, v12); ; i = v123(v74, v125 + v124 * v69, v12))
        {
          v75 = FMFFriend.contactHandles.getter(i);
          v76 = v75;
          if (*(_QWORD *)(v75 + 16))
          {
            Hasher.init(_seed:)(v128, *(_QWORD *)(v75 + 40));
            String.hash(into:)(v128, v39, v40);
            v77 = Hasher._finalize()();
            v78 = -1 << *(_BYTE *)(v76 + 32);
            v79 = v77 & ~v78;
            if (((*(_QWORD *)(v76 + 56 + ((v79 >> 3) & 0xFFFFFFFFFFFFF8)) >> v79) & 1) != 0)
            {
              v80 = *(_QWORD *)(v76 + 48);
              v81 = (_QWORD *)(v80 + 16 * v79);
              v82 = v81[1];
              v83 = *v81 == v39 && v82 == v40;
              if (v83 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v81, v82, v39, v40, 0) & 1) != 0)
              {
LABEL_38:
                v66 = v109;
                swift_bridgeObjectRelease(v109);
                v88 = swift_bridgeObjectRelease(v76);
                v13 = v127;
                v35 = (uint64_t)v120;
                (*(void (**)(char *, char *, uint64_t, __n128))(v127 + 32))(v120, v126, v12, v88);
                v89 = 0;
                goto LABEL_39;
              }
              v84 = ~v78;
              while (1)
              {
                v79 = (v79 + 1) & v84;
                if (((*(_QWORD *)(v76 + 56 + ((v79 >> 3) & 0xFFFFFFFFFFFFF8)) >> v79) & 1) == 0)
                  break;
                v85 = (_QWORD *)(v80 + 16 * v79);
                v86 = v85[1];
                v87 = *v85 == v39 && v86 == v40;
                if (v87 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v85, v86, v39, v40, 0) & 1) != 0)
                  goto LABEL_38;
              }
            }
          }
          ++v69;
          v73 = swift_bridgeObjectRelease(v76);
          v74 = v126;
          v13 = v127;
          (*(void (**)(char *, uint64_t, __n128))(v127 + 8))(v126, v12, v73);
          if (v69 == v71)
            break;
        }
        v66 = v109;
        swift_bridgeObjectRelease(v109);
        v89 = 1;
        v35 = (uint64_t)v120;
LABEL_39:
        v36 = (uint64_t)v119;
        v34 = v113;
        v90 = v122;
        v58 = v110;
        v63 = v116;
        v110(v35, v89, 1, v12);
      }
      else
      {
        v34 = v113;
        v90 = v122;
        v58(v35, 1, 1, v12);
      }
      v94 = swift_bridgeObjectRelease(v66);
      if (v63(v35, 1, v12, v94) == 1)
      {
        sub_1000051EC(v35, &qword_1005D3380);
        v58(v36, 1, 1, v12);
      }
      else
      {
        v95 = v58;
        v96 = *(void (**)(char *))(v13 + 32);
        v97 = v108;
        v96(v108);
        ((void (*)(uint64_t, char *, uint64_t))v96)(v36, v97, v12);
        v58 = v95;
        v63 = v116;
        v58(v36, 0, 1, v12);
      }
    }
    else
    {
      v91 = v58;
      v92 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 32);
      v93 = v111;
      v92(v111, v59, v12);
      v92((char *)v36, (uint64_t)v93, v12);
      v58 = v91;
      v34 = v113;
      v90 = v122;
      v58(v36, 0, 1, v12);
    }
    swift_release(v90);
    v98 = swift_bridgeObjectRelease(v40);
    if (v63(v36, 1, v12, v98) != 1)
    {
      v101 = swift_bridgeObjectRelease(v34);
      v102 = (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v58;
      v103 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 32);
      v104 = v106;
      v103(v106, v36, v12, v101);
      v105 = v107;
      ((void (*)(char *, char *, uint64_t))v103)(v107, v104, v12);
      return v102((uint64_t)v105, 0, 1, v12);
    }
    v37 = v121 + 1;
    result = sub_1000051EC(v36, &qword_1005D3380);
    if (v37 == v117)
      goto LABEL_51;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004652CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = sub_100053F2C(&qword_1005E59B0);
  __chkstk_darwin(v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007464(a1, (uint64_t)v4, &qword_1005E59B0);
  return EnvironmentValues.backgroundMaterial.setter(v4);
}

void sub_10046534C(char a1, uint64_t a2, uint64_t a3)
{
  id Strong;

  Strong = (id)swift_unknownObjectUnownedLoadStrong(a3 + 16);
  if ((a1 & 1) != 0)
    sub_10046871C(a2);
  else
    sub_100468D04(a2);

}

uint64_t sub_1004653A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v20;

  v4 = sub_100053F2C(&qword_1005E59B0);
  __chkstk_darwin(v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PeopleListPersonRow.State(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PeopleListPersonRow(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  PeopleListPersonRow.init(state:)(v10);
  KeyPath = swift_getKeyPath(&unk_100491E58);
  v16 = type metadata accessor for Material(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v6, 1, 1, v16);
  v17 = (uint64_t *)(a2 + *(int *)(sub_100053F2C(&qword_1005E5988) + 36));
  v18 = sub_100053F2C(&qword_1005E59A8);
  sub_100007464((uint64_t)v6, (uint64_t)v17 + *(int *)(v18 + 28), &qword_1005E59B0);
  *v17 = KeyPath;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(a2, v14, v11);
  sub_1000051EC((uint64_t)v6, &qword_1005E59B0);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

void sub_100465550(int a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint8_t *v23;
  void *Strong;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  LODWORD(v7) = a1;
  v8 = type metadata accessor for FMPeopleCellViewModel(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a3 + 16;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v12 = type metadata accessor for Logger(0);
  sub_100056D88(v12, (uint64_t)qword_1005F5748);
  v13 = sub_10004FC74((uint64_t)a2, (uint64_t)v10, type metadata accessor for FMPeopleCellViewModel);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v30 = a4;
    v16 = swift_slowAlloc(12, -1);
    v29 = (int)v7;
    v7 = (uint8_t *)v16;
    v17 = swift_slowAlloc(32, -1);
    *(_DWORD *)v7 = 136315138;
    v32 = v17;
    v18 = (uint64_t *)&v10[*(int *)(v8 + 24)];
    v28 = a2;
    v19 = v11;
    v21 = *v18;
    v20 = v18[1];
    swift_bridgeObjectRetain(v20);
    v31 = sub_100056DA0(v21, v20, &v32);
    a4 = v30;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, &v32);
    v22 = v20;
    v11 = v19;
    a2 = v28;
    swift_bridgeObjectRelease(v22);
    sub_10004FCB8((uint64_t)v10, type metadata accessor for FMPeopleCellViewModel);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "FMPeopleListDataSource: accept action for %s", v7, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    v23 = v7;
    LOBYTE(v7) = v29;
    swift_slowDealloc(v23, -1, -1);
  }
  else
  {
    sub_10004FCB8((uint64_t)v10, type metadata accessor for FMPeopleCellViewModel);
  }

  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v11);
  v26 = *a2;
  v25 = a2[1];
  if ((v7 & 1) != 0)
  {
    swift_retain(a4);
    sub_1004670C4(v26, v25, (void (*)(char *, uint64_t))sub_10046AFD0, a4);

    swift_release(a4);
  }
  else
  {
    sub_1004673B0(v26, v25);

  }
}

void sub_1004657CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *Strong;
  void *v12;
  _BYTE v14[24];

  v5 = type metadata accessor for FMFActionStatus(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, enum case for FMFActionStatus.success(_:), v5);
  v9 = sub_100008000((unint64_t *)&unk_1005E59E0, (uint64_t (*)(uint64_t))&type metadata accessor for FMFActionStatus, (uint64_t)&protocol conformance descriptor for FMFActionStatus);
  LOBYTE(a1) = dispatch thunk of static Equatable.== infix(_:_:)(a1, v8, v5, v9);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if ((a1 & 1) == 0)
  {
    v10 = a3 + 16;
    swift_beginAccess(v10, v14, 0, 0);
    Strong = (void *)swift_unknownObjectWeakLoadStrong(v10);
    if (Strong)
    {
      v12 = Strong;
      objc_msgSend(Strong, "reloadData");

    }
  }
}

id sub_1004658E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *Strong;
  void *v4;
  unsigned __int8 v5;
  char **v6;
  _BYTE v8[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = (void *)swift_unknownObjectWeakLoadStrong(v2);
  if (Strong
    && (v4 = Strong, v5 = objc_msgSend(Strong, "isHighlighted"), v4, (v5 & 1) != 0))
  {
    v6 = &selRef_systemFillColor;
  }
  else
  {
    v6 = &selRef_clearColor;
  }
  return objc_msgSend((id)objc_opt_self(UIColor), *v6);
}

uint64_t sub_10046596C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  char *v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD aBlock[5];
  uint64_t v36;

  v33 = type metadata accessor for DispatchWallTime(0);
  v31 = *(_QWORD *)(v33 - 8);
  v4 = __chkstk_darwin(v33);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v32 = (char *)&v31 - v7;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_delayedUpdateWorkItem;
  v12 = *(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_delayedUpdateWorkItem);
  if (v12)
  {
    v13 = swift_retain(*(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_delayedUpdateWorkItem));
    dispatch thunk of DispatchWorkItem.cancel()(v13);
    swift_release(v12);
  }
  v14 = swift_allocObject(&unk_100568430, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16);
  v15 = swift_allocObject(&unk_100568458, 32, 7);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = a2;
  aBlock[4] = sub_10046A9B4;
  v36 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_100568470;
  v16 = _Block_copy(aBlock);
  v34 = _swiftEmptyArrayStorage;
  v17 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  swift_retain(v14);
  swift_retain(a2);
  v18 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v19 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v34, v18, v19, v8, v17);
  v20 = type metadata accessor for DispatchWorkItem(0);
  swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  v21 = DispatchWorkItem.init(flags:block:)(v10, v16);
  v22 = v36;
  swift_release(v14);
  swift_release(v22);
  v23 = *(_QWORD *)(a1 + v11);
  *(_QWORD *)(a1 + v11) = v21;
  swift_retain(v21);
  swift_release(v23);
  v24 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v25 = (void *)static OS_dispatch_queue.main.getter(v24);
  static DispatchWallTime.now()();
  v26 = v32;
  + infix(_:_:)(v6, 0.5);
  v27 = *(void (**)(char *, uint64_t))(v31 + 8);
  v28 = v6;
  v29 = v33;
  v27(v28, v33);
  OS_dispatch_queue.asyncAfter(wallDeadline:execute:)(v26, v21);
  swift_release(v21);

  return ((uint64_t (*)(char *, uint64_t))v27)(v26, v29);
}

void sub_100465C44(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  __n128 v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  NSObject *v11;
  uint64_t v12;
  _BYTE v13[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = dispatch thunk of FMFManager.friends.getter(v3);
    swift_beginAccess(v1, &v12, 0, 0);
    v6 = swift_unknownObjectWeakLoadStrong(v1);
    if (v6)
    {
      v7 = (void *)v6;
      v8 = *(_QWORD *)(v6 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator);
      swift_retain(v8);

      v9 = (char *)*(id *)(v8 + 40);
      swift_release(v8);
      v10 = *(NSObject **)&v9[OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation];
      v11 = v10;

    }
    else
    {
      v10 = 0;
    }
    sub_10003E7B8(v5, v10, 0, 0);

    swift_bridgeObjectRelease(v5);
  }
}

void sub_100465D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  NSObject *v7;
  NSObject *v8;

  v3 = *(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator);
  v4 = *(_QWORD *)(v3 + 48);
  swift_retain(v4);
  v6 = dispatch thunk of FMFManager.friends.getter(v5);
  swift_release(v4);
  v7 = *(NSObject **)(*(_QWORD *)(v3 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
  v8 = v7;
  sub_10003E7B8(v6, v7, a2, 0);
  swift_bridgeObjectRelease(v6);

}

id sub_100465DE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  NSObject *v5;
  NSObject *v6;

  v1 = *(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator);
  v2 = *(_QWORD *)(v1 + 48);
  swift_retain(v2);
  v4 = dispatch thunk of FMFManager.friends.getter(v3);
  swift_release(v2);
  v5 = *(NSObject **)(*(_QWORD *)(v1 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
  v6 = v5;
  sub_10003E7B8(v4, v5, 0, 0);
  swift_bridgeObjectRelease(v4);

  return sub_100035AA4();
}

double sub_100465E7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __n128 v39;
  uint64_t v40;
  double result;
  uint64_t v42;
  uint64_t v43;
  uint8_t *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51[24];
  uint64_t v52;
  uint64_t v53;
  uint64_t v54[3];

  v2 = v1;
  v4 = type metadata accessor for IndexPath(0);
  v48 = *(_QWORD *)(v4 - 8);
  v49 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FMSelectedSection(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v44 - v11;
  v13 = sub_100053F2C(&qword_1005D3380);
  __chkstk_darwin(v13);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FMFFriend(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = a1;
  sub_100464984(a1, v15);
  v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  v47 = v7;
  if (v20 == 1)
  {
    v45 = v10;
    v46 = v12;
    sub_1000051EC((uint64_t)v15, &qword_1005D3380);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v21 = type metadata accessor for Logger(0);
    sub_100056D88(v21, (uint64_t)qword_1005F5748);
    v22 = v48;
    v23 = v49;
    v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 16))(v6, v50, v49);
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.error.getter(v25);
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc(12, -1);
      v28 = swift_slowAlloc(32, -1);
      v54[0] = v28;
      *(_DWORD *)v27 = 136315138;
      v44 = v27 + 4;
      v29 = sub_100008000(&qword_1005DA770, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
      v30 = dispatch thunk of CustomStringConvertible.description.getter(v23, v29);
      v32 = v31;
      v52 = sub_100056DA0(v30, v31, v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, &v53);
      v33 = swift_bridgeObjectRelease(v32);
      (*(void (**)(char *, uint64_t, __n128))(v22 + 8))(v6, v23, v33);
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "FMPeopleListDataSource: cannnot select person at indexPath: %s", v27, 0xCu);
      swift_arrayDestroy(v28, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v28, -1, -1);
      swift_slowDealloc(v27, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v23);
    }

    v10 = v45;
    v12 = v46;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    v34 = *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator);
    v35 = *(_QWORD *)(v34 + 56);
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v12, v19, v16);
    swift_storeEnumTagMultiPayload(v12, v7, 2);
    v36 = v35 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
    swift_beginAccess(v35 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, v51, 0, 0);
    sub_10004FC74(v36, (uint64_t)v10, type metadata accessor for FMSelectedSection);
    swift_beginAccess(v36, v54, 33, 0);
    swift_retain(v35);
    sub_100009DF8((uint64_t)v12, v36);
    swift_endAccess(v54);
    sub_10004C8A4((uint64_t)v10);
    sub_10004FCB8((uint64_t)v12, type metadata accessor for FMSelectedSection);
    sub_10004FCB8((uint64_t)v10, type metadata accessor for FMSelectedSection);
    swift_release(v35);
    v37 = *(_QWORD *)(v34 + 48);
    v38 = swift_retain(v37);
    dispatch thunk of FMFManager.updateLastActiveTimestamp()(v38);
    v39 = swift_release(v37);
    v40 = (*(uint64_t (**)(char *, uint64_t, __n128))(v17 + 8))(v19, v16, v39);
  }
  if (!IndexPath.section.getter(v40))
  {
    v42 = *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator) + 56);
    swift_storeEnumTagMultiPayload(v12, v47, 12);
    v43 = v42 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
    swift_beginAccess(v42 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, v54, 0, 0);
    sub_10004FC74(v43, (uint64_t)v10, type metadata accessor for FMSelectedSection);
    swift_beginAccess(v43, &v52, 33, 0);
    swift_retain(v42);
    sub_100009DF8((uint64_t)v12, v43);
    swift_endAccess(&v52);
    sub_10004C8A4((uint64_t)v10);
    sub_10004FCB8((uint64_t)v12, type metadata accessor for FMSelectedSection);
    sub_10004FCB8((uint64_t)v10, type metadata accessor for FMSelectedSection);
    *(_QWORD *)&result = swift_release(v42).n128_u64[0];
  }
  return result;
}

double sub_100466370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  double result;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  _BYTE v25[24];
  _BYTE v26[24];

  v1 = type metadata accessor for FMSelectedSection(0);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v23 - v5;
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator);
  v8 = *(_QWORD *)(v7 + 48);
  v9 = swift_retain(v8);
  v10 = dispatch thunk of FMFManager.friendsOperationsRestricted.getter(v9);
  swift_release(v8);
  if ((v10 & 1) != 0)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v11 = type metadata accessor for Logger(0);
    v12 = sub_100056D88(v11, (uint64_t)qword_1005F5748);
    v24 = Logger.logObject.getter(v12);
    v13 = static os_log_type_t.default.getter(v24);
    if (os_log_type_enabled(v24, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v13, "Add friend operation is restricted.", v14, 2u);
      swift_slowDealloc(v14, -1, -1);
    }

  }
  else
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v16 = type metadata accessor for Logger(0);
    v17 = sub_100056D88(v16, (uint64_t)qword_1005F5748);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.default.getter(v18);
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "FMPeopleListDataSource: add person requested", v20, 2u);
      swift_slowDealloc(v20, -1, -1);
    }

    v21 = *(_QWORD *)(v7 + 56);
    swift_storeEnumTagMultiPayload(v6, v1, 10);
    v22 = v21 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
    swift_beginAccess(v21 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, v26, 0, 0);
    sub_10004FC74(v22, (uint64_t)v4, type metadata accessor for FMSelectedSection);
    swift_beginAccess(v22, v25, 33, 0);
    swift_retain(v21);
    sub_100009DF8((uint64_t)v6, v22);
    swift_endAccess(v25);
    sub_10004C8A4((uint64_t)v4);
    sub_10004FCB8((uint64_t)v6, type metadata accessor for FMSelectedSection);
    sub_10004FCB8((uint64_t)v4, type metadata accessor for FMSelectedSection);
    *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  }
  return result;
}

_QWORD *sub_100466670(unint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *result;
  unint64_t v20;
  unint64_t *v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  id v50;
  id v51;
  NSString v52;
  id v53;
  id v54;
  uint64_t v55;
  id v56;
  Swift::String v57;
  Swift::String v58;
  void *object;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  id v68;
  NSString v69;
  void *v70;
  id v71;
  NSString v72;
  id v73;
  id v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  Swift::String v80;
  Swift::String v81;
  void *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  id v91;
  NSString v92;
  void *v93;
  id v94;
  NSString v95;
  id v96;
  id v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  int v101;
  int v102;
  char *v103;
  void *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  void **aBlock;
  unint64_t v113;
  void (*v114)(uint64_t, void *, void *, void *);
  void *v115;
  uint64_t (*v116)();
  uint64_t v117;
  char v118[24];
  unint64_t v119;
  Swift::String v120;
  Swift::String v121;

  v2 = v1;
  v107 = type metadata accessor for IndexPath(0);
  v4 = *(_QWORD *)(v107 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  __chkstk_darwin(v107);
  v106 = (char *)&v100 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100053F2C(&qword_1005D3380);
  __chkstk_darwin(v6);
  v8 = (char *)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FMFFriend(0);
  v110 = *(_QWORD *)(v9 - 8);
  v111 = v9;
  v10 = *(_QWORD *)(v110 + 64);
  v11 = __chkstk_darwin(v9);
  v12 = (char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v109 = (char *)&v100 - v13;
  v14 = (int *)type metadata accessor for FMPeopleCellViewModel(0);
  v15 = *((_QWORD *)v14 - 1);
  v16 = __chkstk_darwin(v14);
  v108 = (uint64_t)&v100 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = IndexPath.section.getter(v16);
  result = 0;
  if (v18 == 2)
  {
    v105 = v10;
    v119 = (unint64_t)_swiftEmptyArrayStorage;
    v20 = IndexPath.row.getter(0);
    v21 = (unint64_t *)&v2[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_cellsViewModel];
    swift_beginAccess(&v2[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_cellsViewModel], v118, 0, 0);
    if ((v20 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v22 = *v21;
      if (v20 < *(_QWORD *)(*v21 + 16))
      {
        v103 = v12;
        v23 = v2;
        v24 = v108;
        sub_10004FC74(v22+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(_QWORD *)(v15 + 72) * v20, v108, type metadata accessor for FMPeopleCellViewModel);
        v25 = *(unsigned __int8 *)(v24 + v14[20]);
        v101 = *(unsigned __int8 *)(v24 + v14[21]);
        v102 = v25;
        v26 = *(_QWORD *)(*(_QWORD *)&v23[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator] + 48);
        v27 = swift_retain(v26);
        v28 = dispatch thunk of FMFManager.friendsOperationsRestricted.getter(v27);
        swift_release(v26);
        v29 = *(_BYTE *)(v24 + v14[22]);
        v104 = v23;
        sub_100464984(a1, v8);
        v31 = v110;
        v30 = v111;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48))(v8, 1, v111) == 1)
        {
          sub_10004FCB8(v24, type metadata accessor for FMPeopleCellViewModel);
          sub_1000051EC((uint64_t)v8, &qword_1005D3380);
          return _swiftEmptyArrayStorage;
        }
        v32 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
        v32(v109, v8, v30);
        v33 = v28 | ~v29;
        v14 = (int *)_NSConcreteStackBlock;
        if ((v33 & 1) != 0)
        {
LABEL_9:
          if (v102)
          {
            aBlock = 0;
            v113 = 0xE000000000000000;
            _StringGuts.grow(_:)(20);
            swift_bridgeObjectRelease(v113);
            v56 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
            v120._countAndFlagsBits = 0xD00000000000003BLL;
            v120._object = (void *)0x80000001004ABD40;
            v57._object = (void *)0x80000001004ABD10;
            v57._countAndFlagsBits = 0xD000000000000029;
            v58._countAndFlagsBits = 0;
            v58._object = (void *)0xE000000000000000;
            object = NSLocalizedString(_:tableName:bundle:value:comment:)(v57, (Swift::String_optional)0, (NSBundle)v56, v58, v120)._object;

            v60 = v110;
            v61 = v103;
            v62 = v111;
            (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v103, v109, v111);
            v63 = *(unsigned __int8 *)(v60 + 80);
            v64 = (v63 + 24) & ~v63;
            v65 = swift_allocObject(&unk_100568728, v64 + v105, v63 | 7);
            v66 = v104;
            *(_QWORD *)(v65 + 16) = v104;
            v32((char *)(v65 + v64), v61, v62);
            v67 = swift_allocObject(&unk_100568750, 32, 7);
            *(_QWORD *)(v67 + 16) = sub_10046AB8C;
            *(_QWORD *)(v67 + 24) = v65;
            v68 = v66;
            v69 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(object);
            v116 = sub_10003FFE0;
            v117 = v67;
            aBlock = (void **)v14;
            v113 = 1107296256;
            v114 = sub_1004638C0;
            v115 = &unk_100568768;
            v70 = _Block_copy(&aBlock);
            v71 = objc_msgSend((id)objc_opt_self(UIContextualAction), "contextualActionWithStyle:title:handler:", 0, v69, v70);

            _Block_release(v70);
            swift_release(v117);
            v72 = String._bridgeToObjectiveC()();
            v73 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v72);

            objc_msgSend(v71, "setImage:", v73);
            v74 = v71;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v74);
            v76 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v75 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18);
            v77 = v108;
            if (v76 >= v75 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v75 > 1, v76 + 1, 1);
            v78 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v76, v74);
          }
          else
          {
            v77 = v108;
            if (!v101)
            {
LABEL_18:
              (*(void (**)(char *, uint64_t))(v110 + 8))(v109, v111);
              sub_10004FCB8(v77, type metadata accessor for FMPeopleCellViewModel);
              return (_QWORD *)v119;
            }
            aBlock = 0;
            v113 = 0xE000000000000000;
            _StringGuts.grow(_:)(20);
            swift_bridgeObjectRelease(v113);
            v79 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
            v80._countAndFlagsBits = 0xD00000000000002CLL;
            v121._countAndFlagsBits = 0xD00000000000003ELL;
            v121._object = (void *)0x80000001004ABDB0;
            v80._object = (void *)0x80000001004ABD80;
            v81._countAndFlagsBits = 0;
            v81._object = (void *)0xE000000000000000;
            v82 = NSLocalizedString(_:tableName:bundle:value:comment:)(v80, (Swift::String_optional)0, (NSBundle)v79, v81, v121)._object;

            v83 = v110;
            v84 = v103;
            v85 = v111;
            (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v103, v109, v111);
            v86 = *(unsigned __int8 *)(v83 + 80);
            v87 = (v86 + 24) & ~v86;
            v88 = swift_allocObject(&unk_1005686B0, v87 + v105, v86 | 7);
            v89 = v104;
            *(_QWORD *)(v88 + 16) = v104;
            v32((char *)(v88 + v87), v84, v85);
            v90 = swift_allocObject(&unk_1005686D8, 32, 7);
            *(_QWORD *)(v90 + 16) = sub_10046AB08;
            *(_QWORD *)(v90 + 24) = v88;
            v91 = v89;
            v92 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(v82);
            v116 = sub_100021E58;
            v117 = v90;
            aBlock = (void **)v14;
            v113 = 1107296256;
            v114 = sub_1004638C0;
            v115 = &unk_1005686F0;
            v93 = _Block_copy(&aBlock);
            v94 = objc_msgSend((id)objc_opt_self(UIContextualAction), "contextualActionWithStyle:title:handler:", 0, v92, v93);

            _Block_release(v93);
            swift_release(v117);
            v95 = String._bridgeToObjectiveC()();
            v96 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v95);

            objc_msgSend(v94, "setImage:", v96);
            v97 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
            objc_msgSend(v94, "setBackgroundColor:", v97);

            v74 = v94;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v74);
            v99 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v98 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v99 >= v98 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v98 > 1, v99 + 1, 1);
            v78 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v99, v74);
            v77 = v108;
          }
          specialized Array._endMutation()(v78);

          goto LABEL_18;
        }
        v34 = v110;
        v35 = v103;
        (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v103, v109, v30);
        v36 = v106;
        v37 = v107;
        v38 = (char *)v32;
        (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v106, a1, v107);
        v39 = *(unsigned __int8 *)(v34 + 80);
        v40 = v104;
        v41 = (v39 + 24) & ~v39;
        v42 = *(unsigned __int8 *)(v4 + 80);
        v43 = (v105 + v42 + v41) & ~v42;
        v44 = swift_allocObject(&unk_1005687A0, v43 + v5, v39 | v42 | 7);
        *(_QWORD *)(v44 + 16) = v40;
        v45 = v35;
        v12 = v38;
        ((void (*)(uint64_t, char *, uint64_t))v38)(v44 + v41, v45, v111);
        v46 = v37;
        v14 = (int *)_NSConcreteStackBlock;
        (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v44 + v43, v36, v46);
        v47 = swift_allocObject(&unk_1005687C8, 32, 7);
        *(_QWORD *)(v47 + 16) = sub_10046ACC0;
        *(_QWORD *)(v47 + 24) = v44;
        v116 = sub_10003FFE0;
        v117 = v47;
        aBlock = _NSConcreteStackBlock;
        v113 = 1107296256;
        v114 = sub_1004638C0;
        v115 = &unk_1005687E0;
        v48 = _Block_copy(&aBlock);
        v49 = (void *)objc_opt_self(UIContextualAction);
        v50 = v40;
        v51 = objc_msgSend(v49, "contextualActionWithStyle:title:handler:", 1, 0, v48);
        _Block_release(v48);
        swift_release(v117);
        v52 = String._bridgeToObjectiveC()();
        v53 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v52);

        objc_msgSend(v51, "setImage:", v53);
        v54 = objc_msgSend((id)objc_opt_self(UIColor), "systemRedColor");
        objc_msgSend(v51, "setBackgroundColor:", v54);

        v8 = (char *)v51;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
        a1 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v22 = *(_QWORD *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (a1 < v22 >> 1)
        {
LABEL_8:
          v55 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(a1, v8);
          specialized Array._endMutation()(v55);

          v32 = (void (*)(char *, char *, uint64_t))v12;
          goto LABEL_9;
        }
LABEL_22:
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v22 > 1, a1 + 1, 1);
        goto LABEL_8;
      }
    }
    __break(1u);
    goto LABEL_22;
  }
  return result;
}

void sub_1004670C4(uint64_t a1, uint64_t a2, void (*a3)(char *, uint64_t), uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v34 = a3;
  v35 = a4;
  v7 = type metadata accessor for FMFRelationshipType(0);
  v37 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v34 - v11;
  v13 = sub_100053F2C(&qword_1005D3380);
  __chkstk_darwin(v13);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FMFFriend(0);
  v17 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = ((char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v36 = v4;
  v20 = *(_QWORD *)(*(_QWORD *)(v4 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator) + 48);
  swift_retain(v20);
  sub_10009AF28(a1, a2, v15);
  v21 = swift_release(v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v17 + 48))(v15, 1, v16, v21) == 1)
  {
    sub_1000051EC((uint64_t)v15, &qword_1005D3380);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v22 = type metadata accessor for Logger(0);
    v23 = sub_100056D88(v22, (uint64_t)qword_1005F5748);
    v24 = Logger.logObject.getter(v23);
    v25 = static os_log_type_t.default.getter(v24);
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "FMPeopleListDataSource: Cannot accept action for unknown friend", v26, 2u);
      swift_slowDealloc(v26, -1, -1);
    }

  }
  else
  {
    v27 = (*(uint64_t (**)(NSObject *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    v28 = FMFFriend.relationshipType.getter(v27);
    static FMFRelationshipType.willFollowMyLocation.getter(v28);
    v29 = sub_100008000((unint64_t *)&unk_1005D9C20, (uint64_t (*)(uint64_t))&type metadata accessor for FMFRelationshipType, (uint64_t)&protocol conformance descriptor for FMFRelationshipType);
    v30 = dispatch thunk of SetAlgebra.isSuperset(of:)(v10, v7, v29);
    v31 = *(void (**)(char *, uint64_t))(v37 + 8);
    v31(v10, v7);
    v32 = ((uint64_t (*)(char *, uint64_t))v31)(v12, v7);
    if ((v30 & 1) != 0)
    {
      sub_1004677DC(v19);
    }
    else
    {
      v33 = FMFFriend.optedNotToShare.getter(v32);
      if (v33 != 2 && (v33 & 1) == 0)
        sub_1004676BC((uint64_t)v19, v34, v35);
    }
    (*(void (**)(NSObject *, uint64_t))(v17 + 8))(v19, v16);
  }
}

void sub_1004673B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char v32;
  __n128 v33;
  uint64_t v34;
  uint64_t v35;

  v5 = type metadata accessor for FMFRelationshipType(0);
  v35 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v34 - v9;
  v11 = sub_100053F2C(&qword_1005D3380);
  __chkstk_darwin(v11);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FMFFriend(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator);
  v18 = *(_QWORD *)(v34 + 48);
  swift_retain(v18);
  sub_10009AF28(a1, a2, v13);
  v19 = swift_release(v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v15 + 48))(v13, 1, v14, v19) != 1)
  {
    v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    v26 = FMFFriend.relationshipType.getter(v25);
    static FMFRelationshipType.willFollowMyLocation.getter(v26);
    v27 = sub_100008000((unint64_t *)&unk_1005D9C20, (uint64_t (*)(uint64_t))&type metadata accessor for FMFRelationshipType, (uint64_t)&protocol conformance descriptor for FMFRelationshipType);
    v28 = dispatch thunk of SetAlgebra.isSuperset(of:)(v8, v5, v27);
    v29 = *(void (**)(char *, uint64_t))(v35 + 8);
    v29(v8, v5);
    v30 = ((uint64_t (*)(char *, uint64_t))v29)(v10, v5);
    if ((v28 & 1) != 0)
    {
      v31 = *(_QWORD *)(*(_QWORD *)(v34 + 48) + 56);
      swift_retain(v31);
      sub_1000D38F4((uint64_t)v17);
    }
    else
    {
      v32 = FMFFriend.optedNotToShare.getter(v30);
      if (v32 == 2 || (v32 & 1) != 0)
        goto LABEL_13;
      v31 = *(_QWORD *)(*(_QWORD *)(v34 + 48) + 56);
      swift_retain(v31);
      sub_1000D3BCC((uint64_t)v17);
    }
    v33 = swift_release(v31);
LABEL_13:
    (*(void (**)(char *, uint64_t, __n128))(v15 + 8))(v17, v14, v33);
    return;
  }
  sub_1000051EC((uint64_t)v13, &qword_1005D3380);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v20 = type metadata accessor for Logger(0);
  v21 = sub_100056D88(v20, (uint64_t)qword_1005F5748);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.default.getter(v22);
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v24 = 0;
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "FMPeopleListDataSource: Cannot decline action for unknown friend", v24, 2u);
    swift_slowDealloc(v24, -1, -1);
  }

}

void sub_1004676BC(uint64_t a1, void (*a2)(char *, uint64_t), uint64_t a3)
{
  uint64_t v3;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;

  v7 = *(void **)(v3 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_tableView);
  v8 = objc_msgSend(v7, "traitCollection");
  v9 = objc_msgSend(v8, "horizontalSizeClass");

  v10 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator) + 48) + 56);
  swift_retain(v10);
  v11 = v7;
  while (1)
  {
    v12 = v11;
    v15 = objc_msgSend(v11, "nextResponder");

    if (!v15)
      break;
    v13 = objc_opt_self(UIViewController);
    v14 = (void *)swift_dynamicCastObjCClass(v15, v13);
    v11 = v15;
    if (v14)
      goto LABEL_6;
  }
  v14 = 0;
LABEL_6:
  sub_1000D0EF8(a1, v9 != (id)1, v14, 0, a2, a3);
  swift_release(v10);

}

void sub_1004677DC(NSObject *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator) + 48) + 56);
  v4 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_tableView);
  swift_retain(v3);
  v5 = v4;
  while (1)
  {
    v6 = v5;
    v9 = objc_msgSend(v5, "nextResponder");

    if (!v9)
      break;
    v7 = objc_opt_self(UIViewController);
    v8 = swift_dynamicCastObjCClass(v9, v7);
    v5 = v9;
    if (v8)
      goto LABEL_6;
  }
  v8 = 0;
LABEL_6:
  sub_1000D3400(a1, v8);
  swift_release(v3);

}

uint64_t sub_1004678A8(uint64_t a1)
{
  return sub_1004678F0(a1, "FMPeopleListDataSource: Favorite button pressed", (uint64_t)&unk_100568638, (uint64_t)sub_10046AAB8, (void (*)(char *, uint64_t, uint64_t))sub_1000D5F44);
}

uint64_t sub_1004678CC(uint64_t a1)
{
  return sub_1004678F0(a1, "FMPeopleListDataSource: Unfavorite button pressed", (uint64_t)&unk_1005685C0, (uint64_t)sub_10046AA88, (void (*)(char *, uint64_t, uint64_t))sub_1000D5F64);
}

uint64_t sub_1004678F0(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, void (*a5)(char *, uint64_t, uint64_t))
{
  char *v5;
  char *v10;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v26;

  v10 = v5;
  v12 = sub_100053F2C(&qword_1005D3380);
  __chkstk_darwin(v12);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v15 = type metadata accessor for Logger(0);
  v16 = sub_100056D88(v15, (uint64_t)qword_1005F5748);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter(v17);
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, a2, v19, 2u);
    swift_slowDealloc(v19, -1, -1);
  }

  v20 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v10[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator] + 48) + 56);
  v21 = type metadata accessor for FMFFriend(0);
  v22 = *(_QWORD *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v14, a1, v21);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v14, 0, 1, v21);
  v23 = swift_allocObject(a3, 24, 7);
  *(_QWORD *)(v23 + 16) = v10;
  swift_retain(v20);
  v24 = v10;
  a5(v14, a4, v23);
  swift_release(v20);
  swift_release(v23);
  return sub_1000051EC((uint64_t)v14, &qword_1005D3380);
}

uint64_t sub_100467AC8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[5];
  uint64_t v30;

  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v28 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for DispatchQoS(0);
  v13 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v17 = (void *)static OS_dispatch_queue.main.getter(v16);
  v18 = swift_allocObject(a4, 24, 7);
  *(_QWORD *)(v18 + 16) = a3;
  aBlock[4] = a5;
  v30 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = a6;
  v19 = _Block_copy(aBlock);
  v20 = v30;
  v21 = a3;
  swift_release(v20);
  static DispatchQoS.unspecified.getter(v22);
  aBlock[0] = _swiftEmptyArrayStorage;
  v23 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v24 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v25 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v24, v25, v10, v23);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v12, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v27);
}

uint64_t sub_100467CD0(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  __n128 v30;
  uint8_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  __n128 v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  Class isa;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t, uint64_t);
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70[3];

  v3 = v2;
  v62 = a2;
  v5 = sub_100053F2C(&qword_1005D3380);
  __chkstk_darwin(v5);
  v67 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FMPeopleCellViewModel(0);
  __chkstk_darwin(v7);
  v61 = (uint64_t)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FMFFriend(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v64 = v12;
  v65 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v14 = (char *)&v60 - v13;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v15 = type metadata accessor for Logger(0);
  v16 = sub_100056D88(v15, (uint64_t)qword_1005F5748);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter(v17);
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "FMPeopleListDataSource: Remove button pressed", v19, 2u);
    swift_slowDealloc(v19, -1, -1);
  }

  v2[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_isRemovingCell] = 1;
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v66 = a1;
  v63 = v20;
  v21 = ((uint64_t (*)(char *, uint64_t, uint64_t))v20)(v14, a1, v9);
  v22 = Logger.logObject.getter(v21);
  v23 = static os_log_type_t.default.getter(v22);
  if (os_log_type_enabled(v22, v23))
  {
    v24 = swift_slowAlloc(12, -1);
    v60 = v2;
    v25 = (uint8_t *)v24;
    v26 = swift_slowAlloc(32, -1);
    v70[0] = v26;
    *(_DWORD *)v25 = 136315138;
    v27 = FMFFriend.debugDescription.getter();
    v29 = v28;
    v68 = sub_100056DA0(v27, v28, v70);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v68, &v69);
    v30 = swift_bridgeObjectRelease(v29);
    (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v14, v9, v30);
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "FMPeopleListDataSource: Continue action pressed for person: %s", v25, 0xCu);
    swift_arrayDestroy(v26, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v26, -1, -1);
    v31 = v25;
    v3 = v60;
    swift_slowDealloc(v31, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
  }

  v32 = (uint64_t *)&v3[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_cellsViewModel];
  swift_beginAccess(&v3[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_cellsViewModel], v70, 0, 0);
  v33 = *v32;
  swift_bridgeObjectRetain(*v32);
  v34 = v66;
  sub_100462C38(v66, v33);
  v36 = v35;
  v38 = v37;
  v39 = swift_bridgeObjectRelease(v33);
  if ((v38 & 1) == 0)
  {
    swift_beginAccess(v32, &v68, 33, 0);
    v40 = v61;
    sub_1001FFE48(v36, v61);
    sub_10004FCB8(v40, type metadata accessor for FMPeopleCellViewModel);
    swift_endAccess(&v68);
    v41 = *(void **)&v3[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_tableView];
    objc_msgSend(v41, "beginUpdates");
    v42 = sub_100053F2C(&qword_1005D33C8);
    v43 = type metadata accessor for IndexPath(0);
    v44 = *(_QWORD *)(v43 - 8);
    v45 = *(unsigned __int8 *)(v44 + 80);
    v46 = v3;
    v47 = (v45 + 32) & ~v45;
    v48 = swift_allocObject(v42, v47 + *(_QWORD *)(v44 + 72), v45 | 7);
    *(_OWORD *)(v48 + 16) = xmmword_100481740;
    v49 = v48 + v47;
    v3 = v46;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16))(v49, v62, v43);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v41, "deleteRowsAtIndexPaths:withRowAnimation:", isa, 2, swift_bridgeObjectRelease(v48).n128_f64[0]);

    objc_msgSend(v41, "endUpdates");
  }
  v51 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v3[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator] + 48) + 56);
  v52 = (uint64_t)v67;
  v53 = v63;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v63)(v67, v34, v9, v39);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v52, 0, 1, v9);
  v54 = v65;
  v53(v65, v34, v9);
  v55 = *(unsigned __int8 *)(v10 + 80);
  v56 = (v55 + 24) & ~v55;
  v57 = swift_allocObject(&unk_100568598, v56 + v64, v55 | 7);
  *(_QWORD *)(v57 + 16) = v3;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v57 + v56, v54, v9);
  swift_retain(v51);
  v58 = v3;
  sub_1000D5D80(v52, (uint64_t)sub_10046A9F0, v57);
  swift_release(v51);
  swift_release(v57);
  return sub_1000051EC(v52, &qword_1005D3380);
}

double sub_100468210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t Strong;
  double result;
  uint64_t v52;
  uint64_t v53;
  uint64_t ObjectType;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60[24];

  v55 = a4;
  v5 = type metadata accessor for FMFFriend(0);
  v6 = *(_QWORD *)(v5 - 8);
  v56 = v5;
  v57 = v6;
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v55 - v10;
  v12 = type metadata accessor for FMFActionStatus(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a3 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_itemAger);
  v17 = (uint64_t *)(a3 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_cellsViewModel);
  swift_beginAccess(a3 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_cellsViewModel, v60, 0, 0);
  v18 = *v17;
  swift_retain(v16);
  swift_bridgeObjectRetain(v18);
  v20 = sub_10003D218(v19, type metadata accessor for FMPeopleCellViewModel, (uint64_t)&off_100544300);
  swift_bridgeObjectRelease(v18);
  sub_100054D40((uint64_t)v20);
  swift_release(v16);
  v21 = swift_bridgeObjectRelease(v20);
  *(_BYTE *)(a3 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_isRemovingCell) = 0;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v13 + 104))(v15, enum case for FMFActionStatus.success(_:), v12, v21);
  v22 = sub_100008000(&qword_1005E5950, (uint64_t (*)(uint64_t))&type metadata accessor for FMFActionStatus, (uint64_t)&protocol conformance descriptor for FMFActionStatus);
  dispatch thunk of RawRepresentable.rawValue.getter(&v59, v12, v22);
  dispatch thunk of RawRepresentable.rawValue.getter(&v58, v12, v22);
  v24 = v58;
  v23 = v59;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (v23 == v24)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v25 = type metadata accessor for Logger(0);
    sub_100056D88(v25, (uint64_t)qword_1005F5748);
    v26 = v56;
    v27 = v57;
    v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v57 + 16))(v11, v55, v56);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.default.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(12, -1);
      v32 = swift_slowAlloc(32, -1);
      v59 = v32;
      *(_DWORD *)v31 = 136315138;
      v33 = FMFFriend.debugDescription.getter();
      v35 = v34;
      v58 = sub_100056DA0(v33, v34, &v59);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59);
      v36 = swift_bridgeObjectRelease(v35);
      (*(void (**)(char *, uint64_t, __n128))(v57 + 8))(v11, v26, v36);
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "FMPeopleListDataSource: Remove completed succesfully for person: %s", v31, 0xCu);
      swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1, -1);
      swift_slowDealloc(v31, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v26);
    }

  }
  else
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v37 = type metadata accessor for Logger(0);
    sub_100056D88(v37, (uint64_t)qword_1005F5748);
    v38 = v56;
    v39 = v57;
    v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v57 + 16))(v9, v55, v56);
    v41 = Logger.logObject.getter(v40);
    v42 = static os_log_type_t.default.getter(v41);
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc(12, -1);
      v44 = swift_slowAlloc(32, -1);
      v59 = v44;
      *(_DWORD *)v43 = 136315138;
      v45 = FMFFriend.debugDescription.getter();
      v47 = v46;
      v58 = sub_100056DA0(v45, v46, &v59);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59);
      v48 = swift_bridgeObjectRelease(v47);
      (*(void (**)(char *, uint64_t, __n128))(v57 + 8))(v9, v38, v48);
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "FMPeopleListDataSource: Remove failed for person: %s", v43, 0xCu);
      swift_arrayDestroy(v44, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v44, -1, -1);
      swift_slowDealloc(v43, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v39 + 8))(v9, v38);
    }

  }
  v49 = a3 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(a3 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_delegate);
  if (Strong)
  {
    v52 = Strong;
    v53 = *(_QWORD *)(v49 + 8);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v53 + 8))(a3, &off_1005681C0, ObjectType, v53);
    *(_QWORD *)&result = swift_unknownObjectRelease(v52).n128_u64[0];
  }
  return result;
}

uint64_t sub_10046871C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(char *, unint64_t, uint64_t, __n128);
  __n128 v41;
  char v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  __n128 v51;
  __n128 v52;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;

  v2 = v1;
  v4 = sub_100053F2C((uint64_t *)&unk_1005DF470);
  __chkstk_darwin(v4);
  v6 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100053F2C((uint64_t *)&unk_1005D3330);
  __chkstk_darwin(v7);
  v9 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100053F2C((uint64_t *)&unk_1005DF480);
  __chkstk_darwin(v10);
  v12 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100053F2C(&qword_1005D3370);
  __chkstk_darwin(v13);
  v74 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100053F2C((uint64_t *)&unk_1005E5940);
  __chkstk_darwin(v15);
  v75 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for FMFLocationAlert(0);
  v76 = *(_QWORD *)(v17 - 8);
  v18 = __chkstk_darwin(v17);
  v72 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v67 - v21;
  __chkstk_darwin(v20);
  v73 = (char *)&v67 - v23;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v24 = type metadata accessor for Logger(0);
  v25 = sub_100056D88(v24, (uint64_t)qword_1005F5748);
  v26 = Logger.logObject.getter(v25);
  v27 = static os_log_type_t.default.getter(v26);
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v28 = 0;
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "FMPeopleListDataSource: handleAllowFenceRequest()", v28, 2u);
    swift_slowDealloc(v28, -1, -1);
  }

  v30 = *(_QWORD *)(a1 + 16);
  v29 = *(_QWORD *)(a1 + 24);
  v71 = *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator);
  v31 = *(_QWORD *)(v71 + 48);
  v32 = swift_retain(v31);
  v33 = dispatch thunk of FMFManager.locationAlerts.getter(v32);
  v34 = swift_release(v31);
  if (!v33)
  {
    v48 = (uint64_t)v75;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v76 + 56))(v75, 1, 1, v17, v34);
    return sub_1000051EC(v48, (uint64_t *)&unk_1005E5940);
  }
  v70 = v12;
  v35 = *(_QWORD *)(v33 + 16);
  v36 = v76;
  if (v35)
  {
    v68 = v9;
    v69 = v6;
    v37 = v33 + ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80));
    v38 = *(_QWORD *)(v76 + 72);
    v39 = v33;
    v40 = *(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v76 + 16);
    v67 = v39;
    v41 = swift_bridgeObjectRetain(v39);
    while (1)
    {
      v44 = v40(v22, v37, v17, v41);
      v45 = FMFLocationAlert.identifier.getter(v44);
      if (v46)
      {
        v47 = v46;
        if (v45 == v30 && v46 == v29)
        {
          v33 = v67;
          swift_bridgeObjectRelease(v67);
          goto LABEL_19;
        }
        v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v45, v46, v30, v29, 0);
        v43 = swift_bridgeObjectRelease(v47);
        if ((v42 & 1) != 0)
          break;
      }
      v36 = v76;
      (*(void (**)(char *, uint64_t, __n128))(v76 + 8))(v22, v17, v43);
      v37 += v38;
      if (!--v35)
      {
        v33 = v67;
        v34 = swift_bridgeObjectRelease(v67);
        v49 = 1;
        v9 = v68;
        v6 = v69;
        goto LABEL_17;
      }
    }
    v33 = v67;
    v47 = v67;
LABEL_19:
    v51 = swift_bridgeObjectRelease(v47);
    v48 = (uint64_t)v75;
    v36 = v76;
    (*(void (**)(char *, char *, uint64_t, __n128))(v76 + 32))(v75, v22, v17, v51);
    v49 = 0;
    v9 = v68;
    v6 = v69;
    v50 = v70;
  }
  else
  {
    v49 = 1;
LABEL_17:
    v50 = v70;
    v48 = (uint64_t)v75;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v36 + 56))(v48, v49, 1, v17, v34);
  v52 = swift_bridgeObjectRelease(v33);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v36 + 48))(v48, 1, v17, v52) == 1)
    return sub_1000051EC(v48, (uint64_t *)&unk_1005E5940);
  v54 = v73;
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v73, v48, v17);
  v55 = v72;
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v72, v54, v17);
  v56 = type metadata accessor for FMFAddress(0);
  v57 = v74;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v74, 1, 1, v56);
  v58 = type metadata accessor for FMFLocationAlertTriggerType(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v50, 1, 1, v58);
  v59 = type metadata accessor for FMFSchedule(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v9, 1, 1, v59);
  v60 = enum case for FMFLocationAlertAcceptanceStatus.accepted(_:);
  v61 = type metadata accessor for FMFLocationAlertAcceptanceStatus(0);
  v62 = *(_QWORD *)(v61 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v62 + 104))(v6, v60, v61);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v6, 0, 1, v61);
  v63 = type metadata accessor for FMFUpdateLocationAlertAction(0);
  swift_allocObject(v63, *(unsigned int *)(v63 + 48), *(unsigned __int16 *)(v63 + 52));
  v64 = FMFUpdateLocationAlertAction.init(locationAlert:location:radius:address:label:triggerType:isOn:repeating:phoneNumbers:emails:schedule:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:)(v55, 0, 0, 1, v57, 0, 0, v50, 514, 0, 0, v9, 0, 0, 0, 0, v6);
  v65 = *(_QWORD *)(*(_QWORD *)(v71 + 48) + 56);
  swift_retain(v65);
  sub_1000D421C(v64, (uint64_t)sub_100450284, 0);
  swift_release(v64);
  v66 = swift_release(v65);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v76 + 8))(v54, v17, v66);
}

uint64_t sub_100468D04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(char *, unint64_t, uint64_t, __n128);
  __n128 v36;
  char v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  __n128 v46;
  void (*v47)(char *, char *, uint64_t, __n128);
  __n128 v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;

  v2 = v1;
  v4 = sub_100053F2C((uint64_t *)&unk_1005E5940);
  __chkstk_darwin(v4);
  v6 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for FMFLocationAlert(0);
  v7 = *(_QWORD *)(v60 - 8);
  v8 = __chkstk_darwin(v60);
  v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v55 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v55 - v14;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v16 = type metadata accessor for Logger(0);
  v17 = sub_100056D88(v16, (uint64_t)qword_1005F5748);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "FMPeopleListDataSource: handleDeclineFenceRequest()", v20, 2u);
    swift_slowDealloc(v20, -1, -1);
  }

  v22 = *(_QWORD *)(a1 + 16);
  v21 = *(_QWORD *)(a1 + 24);
  v23 = *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator);
  v24 = *(_QWORD *)(v23 + 48);
  v25 = swift_retain(v24);
  v26 = dispatch thunk of FMFManager.locationAlerts.getter(v25);
  v27 = v24;
  v28 = v26;
  v29 = swift_release(v27);
  if (!v28)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(v6, 1, 1, v60, v29);
    return sub_1000051EC((uint64_t)v6, (uint64_t *)&unk_1005E5940);
  }
  v59 = v10;
  v30 = *(_QWORD *)(v28 + 16);
  v31 = v60;
  if (v30)
  {
    v56 = v23;
    v57 = v6;
    v58 = v15;
    v32 = v28;
    v33 = v28 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v34 = *(_QWORD *)(v7 + 72);
    v35 = *(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v7 + 16);
    v55 = v32;
    v36 = swift_bridgeObjectRetain(v32);
    while (1)
    {
      v39 = v7;
      v40 = v35(v13, v33, v31, v36);
      v41 = FMFLocationAlert.identifier.getter(v40);
      if (v42)
      {
        v43 = v42;
        if (v41 == v22 && v42 == v21)
        {
          v28 = v55;
          swift_bridgeObjectRelease(v55);
          goto LABEL_18;
        }
        v37 = _stringCompareWithSmolCheck(_:_:expecting:)(v41, v42, v22, v21, 0);
        v38 = swift_bridgeObjectRelease(v43);
        if ((v37 & 1) != 0)
          break;
      }
      v7 = v39;
      v31 = v60;
      (*(void (**)(char *, uint64_t, __n128))(v39 + 8))(v13, v60, v38);
      v33 += v34;
      if (!--v30)
      {
        v28 = v55;
        v29 = swift_bridgeObjectRelease(v55);
        v44 = 1;
        v6 = v57;
        v15 = v58;
        goto LABEL_19;
      }
    }
    v28 = v55;
    v43 = v55;
LABEL_18:
    v46 = swift_bridgeObjectRelease(v43);
    v7 = v39;
    v47 = *(void (**)(char *, char *, uint64_t, __n128))(v39 + 32);
    v6 = v57;
    v31 = v60;
    v47(v57, v13, v60, v46);
    v44 = 0;
    v15 = v58;
LABEL_19:
    v45 = v59;
    v23 = v56;
  }
  else
  {
    v44 = 1;
    v45 = v59;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(v6, v44, 1, v31, v29);
  v48 = swift_bridgeObjectRelease(v28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v7 + 48))(v6, 1, v31, v48) == 1)
    return sub_1000051EC((uint64_t)v6, (uint64_t *)&unk_1005E5940);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v6, v31);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v45, v15, v31);
  v50 = type metadata accessor for FMFRemoveLocationAlertAction(0);
  swift_allocObject(v50, *(unsigned int *)(v50 + 48), *(unsigned __int16 *)(v50 + 52));
  v51 = v31;
  v52 = FMFRemoveLocationAlertAction.init(locationAlert:)(v45);
  v53 = *(_QWORD *)(*(_QWORD *)(v23 + 48) + 56);
  swift_retain(v53);
  sub_1000D421C(v52, (uint64_t)sub_100450644, 0);
  swift_release(v52);
  v54 = swift_release(v53);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v7 + 8))(v15, v51, v54);
}

id sub_100469130()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPeopleListDataSource();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_100469160(uint64_t a1, uint64_t a2)
{
  sub_10046A758(a2);
}

uint64_t sub_10046916C(uint64_t a1, uint64_t a2)
{
  return sub_100469D6C(a2);
}

uint64_t sub_100469174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10046A36C(a1, a3);
}

uint64_t sub_10046917C(uint64_t a1, char a2)
{
  return sub_10046A080(a2);
}

uint64_t sub_100469184(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_delegate + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease(a1);
}

char *sub_1004691BC(uint64_t a1, void *a2)
{
  id v4;

  v4 = objc_allocWithZone((Class)type metadata accessor for FMPeopleListDataSource());
  return sub_100042F7C(a1, a2);
}

uint64_t sub_100469204(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  Swift::String v11;
  void *object;
  Swift::String v13;
  uint64_t ObjectType;
  Swift::String v15;
  void *v16;
  __n128 v17;

  v4 = sub_100006C5C(0, (unint64_t *)&qword_1005DD6C0, _CDSuggestedPerson_ptr);
  if ((unint64_t)a2 >> 62)
  {
    if (a2 < 0)
      v8 = a2;
    else
      v8 = a2 & 0xFFFFFFFFFFFFFF8;
    a1 = _CocoaArrayWrapper.subscript.getter(a1, v8);
    v9 = objc_opt_self(_CDSuggestedPerson);
    if (swift_dynamicCastObjCClass(a1, v9))
      return a1;
LABEL_13:
    _StringGuts.grow(_:)(85);
    v7 = 0xD000000000000046;
    v6 = 0x80000001004C85C0;
    goto LABEL_14;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a1)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  a1 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 0x20);
  swift_unknownObjectRetain(a1);
  v5 = objc_opt_self(_CDSuggestedPerson);
  if (swift_dynamicCastObjCClass(a1, v5))
    return a1;
  _StringGuts.grow(_:)(82);
  v6 = 0x80000001004C8570;
  v7 = 0xD000000000000043;
LABEL_14:
  String.append(_:)(*(Swift::String *)&v7);
  v11._countAndFlagsBits = _typeName(_:qualified:)(v4, 0);
  object = v11._object;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(object);
  v13._countAndFlagsBits = 0x756F662074756220;
  v13._object = (void *)0xEB0000000020646ELL;
  String.append(_:)(v13);
  ObjectType = swift_getObjectType(a1);
  swift_unknownObjectRelease(a1);
  v15._countAndFlagsBits = _typeName(_:qualified:)(ObjectType, 0);
  v16 = v15._object;
  String.append(_:)(v15);
  v17 = swift_bridgeObjectRelease(v16);
  result = _assertionFailure(_:_:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, 0, v17);
  __break(1u);
  return result;
}

uint64_t sub_1004693EC(unint64_t a1, unint64_t a2, uint64_t *a3, unint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v28;
  double v29;
  double v30;
  BOOL v31;
  uint64_t v32;
  double v33;
  double v34;
  uint64_t *v35;
  uint64_t v36;
  int *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  Swift::String v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  Swift::String v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _BOOL4 v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  double v65;
  double v66;
  BOOL v67;
  uint64_t v68;
  double v69;
  double v70;
  uint64_t *v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  void *v75;
  Swift::String v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  Swift::String v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _BOOL4 v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t result;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t *v98;
  unint64_t v99;
  int *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;

  v99 = a4;
  v97 = a1;
  v6 = type metadata accessor for FMPeopleCellViewModel(0);
  v7 = __chkstk_darwin(v6);
  v98 = (uint64_t *)((char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __chkstk_darwin(v7);
  v95 = (uint64_t *)((char *)&v94 - v10);
  v11 = __chkstk_darwin(v9);
  v13 = (uint64_t *)((char *)&v94 - v12);
  v14 = __chkstk_darwin(v11);
  v16 = (uint64_t *)((char *)&v94 - v15);
  v18 = *(_QWORD *)(v17 + 72);
  if (!v18)
  {
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  if (a2 - v97 == 0x8000000000000000 && v18 == -1)
    goto LABEL_73;
  v19 = (uint64_t)a3 - a2;
  if ((uint64_t *)((char *)a3 - a2) == (uint64_t *)0x8000000000000000 && v18 == -1)
    goto LABEL_74;
  v20 = (uint64_t)(a2 - v97) / v18;
  v107 = v97;
  v106 = v99;
  v21 = v19 / v18;
  v100 = (int *)v14;
  if (v20 >= v19 / v18)
  {
    if ((v21 & 0x8000000000000000) == 0)
    {
      v23 = v21 * v18;
      v24 = v95;
      if (v99 < a2 || a2 + v23 <= v99)
      {
        v25 = (unint64_t)a3;
        swift_arrayInitWithTakeFrontToBack(v99, a2);
      }
      else
      {
        v25 = (unint64_t)a3;
        if (v99 != a2)
          swift_arrayInitWithTakeBackToFront(v99, a2);
      }
      v59 = (uint64_t)v98;
      v60 = v99 + v23;
      v105 = v99 + v23;
      v107 = a2;
      if (v23 >= 1 && v97 < a2)
      {
        v62 = -v18;
        v96 = -v18;
        do
        {
          sub_10004FC74(v60 + v62, (uint64_t)v24, type metadata accessor for FMPeopleCellViewModel);
          v63 = a2 + v62;
          sub_10004FC74(a2 + v62, v59, type metadata accessor for FMPeopleCellViewModel);
          v64 = v100[17];
          v65 = *(double *)((char *)v24 + v64);
          v66 = *(double *)(v59 + v64);
          v67 = v65 < v66;
          if (v65 == v66
            && (v68 = v100[16],
                v69 = *(double *)((char *)v24 + v68),
                v70 = *(double *)(v59 + v68),
                v67 = v69 < v70,
                v69 == v70))
          {
            v71 = (uint64_t *)((char *)v24 + v100[6]);
            v72 = v71[1];
            v73 = v100;
            v74 = *v24;
            v75 = (void *)v95[1];
            v103 = *v71;
            v104 = v72;
            swift_bridgeObjectRetain(v72);
            v76._countAndFlagsBits = v74;
            v76._object = v75;
            String.append(_:)(v76);
            v78 = v103;
            v77 = v104;
            v79 = (uint64_t *)((char *)v98 + v73[6]);
            v80 = v79[1];
            v81 = *v98;
            v82 = (void *)v98[1];
            v103 = *v79;
            v104 = v80;
            swift_bridgeObjectRetain(v80);
            v83._countAndFlagsBits = v81;
            v83._object = v82;
            String.append(_:)(v83);
            v84 = v103;
            v85 = v104;
            v103 = v78;
            v104 = v77;
            v59 = (uint64_t)v98;
            v101 = v84;
            v102 = v85;
            v86 = sub_1000517B8();
            v87 = StringProtocol.caseInsensitiveCompare<A>(_:)(&v101, &type metadata for String, &type metadata for String, v86, v86);
            v88 = v77;
            v24 = v95;
            swift_bridgeObjectRelease(v88);
            swift_bridgeObjectRelease(v85);
            v89 = v87 == -1;
          }
          else
          {
            v89 = v67;
          }
          v62 = v96;
          v90 = v25 + v96;
          sub_10004FCB8(v59, type metadata accessor for FMPeopleCellViewModel);
          sub_10004FCB8((uint64_t)v24, type metadata accessor for FMPeopleCellViewModel);
          if (v89)
          {
            if (v25 < a2 || v90 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack(v25 + v62, v63);
              v62 = v96;
            }
            else
            {
              v62 = v96;
              if (v25 != a2)
                swift_arrayInitWithTakeBackToFront(v90, v63);
            }
            v107 += v62;
          }
          else
          {
            v91 = v105;
            v92 = v105 + v62;
            v105 += v62;
            if (v25 < v91 || v90 >= v91)
            {
              swift_arrayInitWithTakeFrontToBack(v25 + v62, v92);
            }
            else if (v25 != v91)
            {
              swift_arrayInitWithTakeBackToFront(v25 + v62, v92);
            }
            v63 = a2;
          }
          v60 = v105;
          if (v105 <= v99)
            break;
          a2 = v63;
          v25 = v90;
        }
        while (v63 > v97);
      }
      goto LABEL_71;
    }
  }
  else if ((v20 & 0x8000000000000000) == 0)
  {
    v22 = v20 * v18;
    if (v99 < v97 || v97 + v22 <= v99)
    {
      swift_arrayInitWithTakeFrontToBack(v99, v97);
    }
    else if (v99 != v97)
    {
      swift_arrayInitWithTakeBackToFront(v99, v97);
    }
    v26 = v99 + v22;
    v105 = v99 + v22;
    v98 = a3;
    if (v22 >= 1 && a2 < (unint64_t)a3)
    {
      do
      {
        sub_10004FC74(a2, (uint64_t)v16, type metadata accessor for FMPeopleCellViewModel);
        sub_10004FC74(v99, (uint64_t)v13, type metadata accessor for FMPeopleCellViewModel);
        v28 = v100[17];
        v29 = *(double *)((char *)v16 + v28);
        v30 = *(double *)((char *)v13 + v28);
        v31 = v29 < v30;
        if (v29 == v30
          && (v32 = v100[16],
              v33 = *(double *)((char *)v16 + v32),
              v34 = *(double *)((char *)v13 + v32),
              v31 = v33 < v34,
              v33 == v34))
        {
          v35 = (uint64_t *)((char *)v16 + v100[6]);
          v36 = v35[1];
          v37 = v100;
          v38 = v26;
          v39 = v18;
          v40 = *v16;
          v41 = (void *)v16[1];
          v103 = *v35;
          v104 = v36;
          swift_bridgeObjectRetain(v36);
          v42._countAndFlagsBits = v40;
          v42._object = v41;
          String.append(_:)(v42);
          v43 = v103;
          v44 = v104;
          v45 = (uint64_t *)((char *)v13 + v37[6]);
          v46 = v45[1];
          v47 = *v13;
          v48 = (void *)v13[1];
          v103 = *v45;
          v104 = v46;
          swift_bridgeObjectRetain(v46);
          v49._countAndFlagsBits = v47;
          v49._object = v48;
          String.append(_:)(v49);
          v50 = v103;
          v51 = v104;
          v103 = v43;
          v104 = v44;
          v101 = v50;
          v102 = v51;
          v52 = sub_1000517B8();
          v53 = StringProtocol.caseInsensitiveCompare<A>(_:)(&v101, &type metadata for String, &type metadata for String, v52, v52);
          v54 = v44;
          v18 = v39;
          v26 = v38;
          swift_bridgeObjectRelease(v54);
          swift_bridgeObjectRelease(v51);
          v55 = v53 == -1;
        }
        else
        {
          v55 = v31;
        }
        sub_10004FCB8((uint64_t)v13, type metadata accessor for FMPeopleCellViewModel);
        sub_10004FCB8((uint64_t)v16, type metadata accessor for FMPeopleCellViewModel);
        v56 = v107;
        if (v55)
        {
          v57 = a2 + v18;
          if (v107 < a2 || v107 >= v57)
          {
            swift_arrayInitWithTakeFrontToBack(v107, a2);
          }
          else if (v107 == a2)
          {
            v56 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront(v107, a2);
          }
        }
        else
        {
          v58 = v106 + v18;
          if (v107 < v106 || v107 >= v58)
          {
            swift_arrayInitWithTakeFrontToBack(v107, v106);
          }
          else if (v107 != v106)
          {
            swift_arrayInitWithTakeBackToFront(v107, v106);
          }
          v106 = v58;
          v57 = a2;
        }
        v107 = v56 + v18;
        v99 = v106;
        if (v106 >= v26)
          break;
        a2 = v57;
      }
      while (v57 < (unint64_t)v98);
    }
LABEL_71:
    sub_10020CAA0(&v107, &v106, (uint64_t *)&v105);
    return 1;
  }
LABEL_75:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100469AB0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[5];
  uint64_t v28;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v26 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v9 = type metadata accessor for Logger(0);
  v10 = sub_100056D88(v9, (uint64_t)qword_1005F5748);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "FMPeopleListDataSource: didInitialize", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

  v14 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v15 = (void *)static OS_dispatch_queue.main.getter(v14);
  v16 = swift_allocObject(&unk_100568548, 24, 7);
  *(_QWORD *)(v16 + 16) = v1;
  aBlock[4] = sub_10046A9D0;
  v28 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_100568560;
  v17 = _Block_copy(aBlock);
  v18 = v28;
  v19 = v1;
  swift_release(v18);
  static DispatchQoS.unspecified.getter(v20);
  aBlock[0] = _swiftEmptyArrayStorage;
  v21 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v22 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v23 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v22, v23, v2, v21);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100469D6C(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  void **aBlock;
  _QWORD v30[4];
  uint64_t v31;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v28 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v11 = type metadata accessor for Logger(0);
  sub_100056D88(v11, (uint64_t)qword_1005F5748);
  swift_bridgeObjectRetain(a1);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v15 = 134217984;
    aBlock = *(void ***)(a1 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v30);
    swift_bridgeObjectRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "FMPeopleListDataSource: didUpdate %ld locationAlerts", v15, 0xCu);
    swift_slowDealloc(v15, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease(a1);
  }
  v16 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v17 = (void *)static OS_dispatch_queue.main.getter(v16);
  v18 = swift_allocObject(&unk_1005684A8, 32, 7);
  *(_QWORD *)(v18 + 16) = v2;
  *(_QWORD *)(v18 + 24) = a1;
  v30[3] = sub_10046A9C8;
  v31 = v18;
  aBlock = _NSConcreteStackBlock;
  v30[0] = 1107296256;
  v30[1] = sub_100037DF8;
  v30[2] = &unk_1005684C0;
  v19 = _Block_copy(&aBlock);
  v20 = v31;
  swift_bridgeObjectRetain(a1);
  v21 = v2;
  swift_release(v20);
  static DispatchQoS.unspecified.getter(v22);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v23 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v24 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v25 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v24, v25, v4, v23);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v10, v8);
}

uint64_t sub_10046A080(char a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[5];
  uint64_t v30;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v28 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v11 = type metadata accessor for Logger(0);
  v12 = sub_100056D88(v11, (uint64_t)qword_1005F5748);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v15 = 67109120;
    LODWORD(aBlock[0]) = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(aBlock, (char *)aBlock + 4);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "FMPeopleListDataSource: didUpdate friendsOperationsRestricted %{BOOL}d", v15, 8u);
    swift_slowDealloc(v15, -1, -1);
  }

  v16 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v17 = (void *)static OS_dispatch_queue.main.getter(v16);
  v18 = swift_allocObject(&unk_100568390, 24, 7);
  *(_QWORD *)(v18 + 16) = v2;
  aBlock[4] = sub_10046A994;
  v30 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_1005683A8;
  v19 = _Block_copy(aBlock);
  v20 = v30;
  v21 = v2;
  swift_release(v20);
  static DispatchQoS.unspecified.getter(v22);
  aBlock[0] = _swiftEmptyArrayStorage;
  v23 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v24 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v25 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v24, v25, v4, v23);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v10, v8);
}

uint64_t sub_10046A36C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  uint64_t v29;
  id v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t aBlock[5];
  uint64_t v49;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v46 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v45 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v43 = *(_QWORD *)(v6 - 8);
  v44 = v6;
  __chkstk_darwin(v6);
  v42 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FMFFriend(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v12 = type metadata accessor for Logger(0);
  sub_100056D88(v12, (uint64_t)qword_1005F5748);
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(12, -1);
    v17 = swift_slowAlloc(32, -1);
    v40 = v4;
    v18 = v17;
    aBlock[0] = v17;
    *(_DWORD *)v16 = 136315138;
    v39 = a1;
    v19 = FMFFriend.debugDescription.getter();
    v21 = v20;
    v47 = sub_100056DA0(v19, v20, aBlock);
    a1 = v39;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, aBlock);
    v22 = swift_bridgeObjectRelease(v21);
    (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v22);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "FMPeopleListDataSource: didUpdate image for %s", v16, 0xCu);
    swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
    v23 = v18;
    v4 = v40;
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v16, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }

  v24 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v25 = (void *)static OS_dispatch_queue.main.getter(v24);
  v26 = swift_allocObject(&unk_1005683E0, 32, 7);
  v27 = v41;
  *(_QWORD *)(v26 + 16) = v41;
  *(_QWORD *)(v26 + 24) = a1;
  aBlock[4] = (uint64_t)sub_10046A9A8;
  v49 = v26;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100037DF8;
  aBlock[3] = (uint64_t)&unk_1005683F8;
  v28 = _Block_copy(aBlock);
  v29 = v49;
  v30 = v27;
  swift_retain(a1);
  swift_release(v29);
  v31 = v42;
  static DispatchQoS.unspecified.getter(v32);
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  v33 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v34 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v35 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  v36 = v45;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v34, v35, v4, v33);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v31, v36, v28);
  _Block_release(v28);

  (*(void (**)(char *, uint64_t))(v46 + 8))(v36, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v31, v44);
}

void sub_10046A758(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  Class *v9;
  Class isa;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  NSObject *v16;
  NSObject *v17;
  Class v18;
  uint64_t v19;

  v2 = v1;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v4 = type metadata accessor for Logger(0);
  sub_100056D88(v4, (uint64_t)qword_1005F5748);
  swift_bridgeObjectRetain(a1);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (Class *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    sub_100053F2C((uint64_t *)&unk_1005D6750);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v18 = isa;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19);
    *v9 = isa;
    swift_bridgeObjectRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMPeopleListDataSource: itemAger itemsDidAge %@", v8, 0xCu);
    v11 = sub_100053F2C((uint64_t *)&unk_1005D9680);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease(a1);
  }
  v12 = *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator);
  v13 = *(_QWORD *)(v12 + 48);
  swift_retain(v13);
  v15 = dispatch thunk of FMFManager.friends.getter(v14);
  swift_release(v13);
  v16 = *(NSObject **)(*(_QWORD *)(v12 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
  v17 = v16;
  sub_10003E7B8(v15, v16, 0, 0);
  swift_bridgeObjectRelease(v15);

}

uint64_t sub_10046A964()
{
  return sub_1000090C4((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

uint64_t sub_10046A970()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_10046A994()
{
  uint64_t v0;

  return sub_100465DE0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10046A99C()
{
  return sub_1000090C4((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_10046A9A8()
{
  uint64_t v0;

  return sub_10046596C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_10046A9B4()
{
  uint64_t v0;

  sub_100465C44(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10046A9BC()
{
  return sub_1000090C4((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

void sub_10046A9C8()
{
  uint64_t v0;

  sub_100465D3C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_10046A9D0()
{
  uint64_t v0;

  sub_10003E714(*(_QWORD *)(v0 + 16), 1);
}

double sub_10046A9F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMFFriend(0) - 8) + 80);
  return sub_100468210(a1, a2, *(_QWORD *)(v2 + 16), v2 + ((v5 + 24) & ~v5));
}

uint64_t sub_10046AA40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C((uint64_t *)&unk_1005E5960);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10046AA88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100467AC8(a1, a2, *(void **)(v2 + 16), (uint64_t)&unk_1005685E8, (uint64_t)sub_10046B084, (uint64_t)&unk_100568600);
}

uint64_t sub_10046AAB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100467AC8(a1, a2, *(void **)(v2 + 16), (uint64_t)&unk_100568660, (uint64_t)sub_10046AAE8, (uint64_t)&unk_100568678);
}

id sub_10046AAE8()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_tableView), "reloadData");
}

uint64_t sub_10046AB08(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  return sub_10046AB98(a1, a2, a3, a4, sub_1004678CC);
}

uint64_t sub_10046AB18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for FMFFriend(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10046AB8C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  return sub_10046AB98(a1, a2, a3, a4, sub_1004678A8);
}

uint64_t sub_10046AB98(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;

  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMFFriend(0) - 8) + 80);
  v9 = v5 + ((v8 + 24) & ~v8);
  a3(1);
  return a5(v9);
}

uint64_t sub_10046AC04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = type metadata accessor for FMFFriend(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v4 + v5 + v8) & ~v8;
  v10 = v9 + *(_QWORD *)(v7 + 64);
  v11 = v3 | v8 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  return swift_deallocObject(v0, v10, v11);
}

uint64_t sub_10046ACC0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(type metadata accessor for FMFFriend(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  v9 = v3 + ((v6 + v7 + v8) & ~v8);
  a3(1);
  return sub_100467CD0(v3 + v6, v9);
}

uint64_t sub_10046AD50()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10046AD74(char a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v1 + 16) + 16))(*(_QWORD *)(v1 + 16), a1 & 1);
}

unint64_t sub_10046AD88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005E5990;
  if (!qword_1005E5990)
  {
    v1 = sub_10004058C(&qword_1005E5988);
    sub_100008000(&qword_1005E5998, (uint64_t (*)(uint64_t))&type metadata accessor for PeopleListPersonRow, (uint64_t)&protocol conformance descriptor for PeopleListPersonRow);
    sub_10003F774(&qword_1005E59A0, &qword_1005E59A8, (uint64_t)&protocol conformance descriptor for _EnvironmentKeyWritingModifier<A>);
    result = swift_getWitnessTable(&protocol conformance descriptor for <> ModifiedContent<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1005E5990);
  }
  return result;
}

id sub_10046AE24(uint64_t a1)
{
  uint64_t v1;

  return sub_1004658E0(a1, v1);
}

uint64_t sub_10046AE3C()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10046AE60()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10046AE88(int a1, uint64_t *a2)
{
  uint64_t v2;

  sub_100465550(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_10046AE90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1004653A4(*(_QWORD *)(v1 + 16), a1);
}

void sub_10046AEA8(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_10046534C(a1, a2, v2);
}

uint64_t sub_10046AEB0()
{
  return EnvironmentValues.backgroundMaterial.getter();
}

uint64_t sub_10046AED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C(&qword_1005E59B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_10046AF1C()
{
  AttributeScopes.UIKitAttributes.paragraphStyle.getter();
  __break(1u);
}

void sub_10046AF38(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_1002E3020();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

uint64_t sub_10046AF5C()
{
  return 8;
}

uint64_t sub_10046AF68(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_10046AF70(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_10046AF80()
{
  uint64_t v0;

  v0 = sub_100053F2C(&qword_1005E59D8);
  return dispatch thunk of Hashable.hashValue.getter(v0, &protocol witness table for AnyKeyPath);
}

_QWORD *sub_10046AFC4(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void sub_10046AFD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1004657CC(a1, a2, v2);
}

uint64_t sub_10046AFD8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  return swift_deallocObject(v0, 65, 7);
}

uint64_t sub_10046B024()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10046B048()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

void sub_10046B1D4(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  id v5;

  if (objc_msgSend(a1, "state") == (id)1)
  {
    *(_BYTE *)(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_darkenerBackground]
             + OBJC_IVAR____TtC6FindMy17FMPassthroughView_enabled) = 0;
    v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_passthroughView];
    if (!v3)
      goto LABEL_11;
    *(_BYTE *)(v3 + OBJC_IVAR____TtC6FindMy17FMPassthroughView_enabled) = 0;
  }
  if (objc_msgSend(a1, "state") == (id)2)
    sub_10046B2E8(a1);
  if (objc_msgSend(a1, "state") == (id)3)
    sub_10046B8A4(a1);
  objc_msgSend(a1, "setTranslation:inView:", *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardContainer], 0.0, 0.0);
  v4 = objc_msgSend(v1, "view");
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, "layoutIfNeeded");

    return;
  }
  __break(1u);
LABEL_11:
  __break(1u);
}

void sub_10046B2E8(void *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  id v4;
  id v5;
  uint64_t *v6;
  void *v7;
  _QWORD *v8;
  void *v9;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t (*v12)(uint64_t, uint64_t);
  id v13;
  void *v14;
  double v15;
  double v16;
  id v17;
  id v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  id v24;
  void *v25;
  double v26;
  double v27;
  id v28;
  void *v29;
  double v30;
  double v31;
  id v32;
  void *v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double *v41;
  __int128 v42;
  id v43;
  void *v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double *v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t);
  id v57;
  uint64_t v58;
  _BYTE *v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  _OWORD v66[2];
  double v67;

  v2 = v1;
  v4 = objc_msgSend(v1, "traitCollection");
  v5 = objc_msgSend(v4, "horizontalSizeClass");

  v6 = &OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_compactCardTopConstraint;
  if (v5 != (id)1)
    v6 = &OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_regularCardTopConstraint;
  v7 = *(void **)&v2[*v6];
  if (v7)
  {
    v8 = &v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController];
    v9 = *(void **)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController];
    if (v9)
    {
      v10 = v8[1];
      ObjectType = swift_getObjectType(*(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController]);
      v12 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
      v64 = v7;
      v13 = v9;
      v14 = (void *)v12(ObjectType, v10);

      if (!v14)
        goto LABEL_42;
      v15 = 0.0;
      v16 = 0.0;
      if ((v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_isPanFromScrollView] & 1) == 0)
        v16 = *(double *)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration + 24];
      v17 = objc_msgSend(v2, "traitCollection", v64);
      v18 = objc_msgSend(v17, "horizontalSizeClass");

      if (v18 == (id)1)
        v15 = *(double *)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration + 32];
      objc_msgSend(a1, "translationInView:", *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardContainer]);
      v20 = v19;
      objc_msgSend(v64, "constant");
      v22 = v20 + v21;
      if (v22 > v15 - v16)
        v23 = v22;
      else
        v23 = v15 - v16;
      v24 = objc_msgSend(v2, "view");
      if (v24)
      {
        v25 = v24;
        objc_msgSend(v24, "frame");
        v27 = v26;

        v28 = objc_msgSend(v2, "view");
        if (v28)
        {
          v29 = v28;
          objc_msgSend(v28, "safeAreaInsets");
          v31 = v30;

          v32 = objc_msgSend(v2, "view");
          if (v32)
          {
            v33 = v32;
            if (v16 + v27 - v31 >= v23)
              v34 = v23;
            else
              v34 = v16 + v27 - v31;
            objc_msgSend(v32, "frame");
            v36 = v35;

            sub_10004260C();
            v38 = v16 + v36 - v37;
            if (v38 >= v34)
              v39 = v34;
            else
              v39 = v38;
            objc_msgSend(v14, "contentOffset");
            if (v40 >= 1.0)
              goto LABEL_41;
            v41 = (double *)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration];
            v42 = *(_OWORD *)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration + 16];
            v66[0] = *(_OWORD *)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration];
            v66[1] = v42;
            v67 = *(double *)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration + 32];
            v43 = objc_msgSend(v2, "view");
            if (v43)
            {
              v44 = v43;
              sub_1000422D0();
              v46 = v45;
              sub_10004260C();
              v48 = v47;

              v49 = round((v39 - v67) / (v46 - v48) * 1000.0) / 1000.0;
              sub_100041F18(1, v49);
              v50 = 0.64 - v49;
              if (0.64 - v49 <= 0.0)
                v50 = 0.0;
              objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_darkenerBackground], "setAlpha:", *v41 * v50);
              v51 = (double *)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_startPosition];
              if ((v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_startPosition + 8] & 1) != 0)
              {
                *v51 = v39;
                *((_BYTE *)v51 + 8) = 0;
              }
              else if (vabdd_f64(*v51, v39) > 3.0)
              {
                v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_isPanningCard] = 1;
                v52 = *(void **)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_otherGesture];
                if (v52)
                  objc_msgSend(v52, "setEnabled:", 0);
              }
              if (v49 <= 1.0)
              {
                v53 = (void *)*v8;
                if (*v8)
                {
                  v54 = v8[1];
                  v55 = swift_getObjectType(*v8);
                  v56 = *(void (**)(uint64_t, uint64_t))(v54 + 48);
                  v57 = v53;
                  v56(v55, v54);

                }
              }
              if (objc_msgSend(v14, "isScrollEnabled") && v20 > 0.0)
              {
                objc_msgSend(v14, "setScrollEnabled:", v49 <= 0.005);
                objc_msgSend(v14, "setBounces:", v49 <= 0.005);
                if (qword_1005D1DE8 != -1)
                  swift_once(&qword_1005D1DE8, sub_100005ADC);
                v58 = type metadata accessor for Logger(0);
                sub_100056D88(v58, (uint64_t)qword_1005F5748);
                v59 = v2;
                v60 = Logger.logObject.getter(v59);
                v61 = static os_log_type_t.default.getter(v60);
                if (os_log_type_enabled(v60, v61))
                {
                  v62 = swift_slowAlloc(18, -1);
                  *(_DWORD *)v62 = 67109376;
                  LODWORD(v65) = v49 <= 0.005;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, (char *)&v65 + 4);
                  *(_WORD *)(v62 + 8) = 2048;
                  sub_1000421B0();
                  v65 = v63;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, v66);

                  _os_log_impl((void *)&_mh_execute_header, v60, v61, "FMCardContainerViewController: disabling scroll on drag %{BOOL}d, percent: %f", (uint8_t *)v62, 0x12u);
                  swift_slowDealloc(v62, -1, -1);

                  return;
                }

LABEL_42:
                return;
              }
LABEL_41:

              goto LABEL_42;
            }
LABEL_47:
            __break(1u);
            return;
          }
LABEL_46:
          __break(1u);
          goto LABEL_47;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      goto LABEL_46;
    }
  }
}

void sub_10046B8A4(void *a1)
{
  char *v1;
  void *v2;
  double v3;
  double v4;
  double v5;
  _BOOL4 v6;
  _BOOL4 v7;
  char v8;
  char v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t (*v14)(uint64_t, uint64_t);
  id v15;
  void *v16;
  double v17;
  uint64_t v18;
  char *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  os_log_type_t v27;
  uint8_t *v28;
  double v29;
  unsigned int v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  os_log_type_t v34;
  double v35;
  NSObject *v36;
  os_log_type_t v37;
  char v38;
  uint8_t *v39;
  os_log_type_t v40;
  uint64_t v41;
  char *v42;
  void *v43;
  unsigned int oslog;
  NSObject *osloga;
  double v46;
  uint64_t v47;

  v2 = v1;
  objc_msgSend(a1, "velocityInView:", *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardContainer]);
  v4 = v3;
  sub_1000421B0();
  v6 = v5 > 0.3 || v5 < -1.0;
  v7 = v5 >= 0.3 && v5 <= 0.85;
  if (v5 >= 0.3 && v5 <= 0.85)
    v8 = 1;
  else
    v8 = 2;
  if (v6)
    v9 = v8;
  else
    v9 = 0;
  v10 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_passthroughView];
  if (v10)
  {
    *(_BYTE *)(v10 + OBJC_IVAR____TtC6FindMy17FMPassthroughView_enabled) = 1;
    v11 = *(void **)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController];
    if (v11)
    {
      v12 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController + 8];
      ObjectType = swift_getObjectType(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController]);
      v14 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
      v15 = v11;
      v16 = (void *)v14(ObjectType, v12);

      if (v16)
      {
        objc_msgSend(v16, "contentOffset");
        if (v17 == 0.0)
        {
          if (qword_1005D1DE8 != -1)
            swift_once(&qword_1005D1DE8, sub_100005ADC);
          v18 = type metadata accessor for Logger(0);
          sub_100056D88(v18, (uint64_t)qword_1005F5748);
          v19 = v2;
          v20 = Logger.logObject.getter(v19);
          v21 = static os_log_type_t.info.getter();
          LOBYTE(oslog) = v9;
          if (os_log_type_enabled(v20, v21))
          {
            v22 = swift_slowAlloc(22, -1);
            *(_DWORD *)v22 = 134218240;
            sub_1000421B0();
            v46 = v23;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47);

            *(_WORD *)(v22 + 12) = 2048;
            v46 = v4;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47);
            _os_log_impl((void *)&_mh_execute_header, v20, v21, "FMCardContainerViewController: grabber didEnd percent: %f, velocity: %f", (uint8_t *)v22, 0x16u);
            swift_slowDealloc(v22, -1, -1);

          }
          else
          {

          }
          if (v19[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent])
          {
            if (v19[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent] == 1)
            {
              if (!v6 || !v7)
                goto LABEL_41;
            }
            else if (oslog != 2)
            {
              goto LABEL_41;
            }
          }
          else if (v6)
          {
LABEL_41:
            v35 = *(double *)&v19[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration + 16];
            if (v35 >= v4)
            {
              v38 = oslog;
              if (v4 >= -v35)
              {
LABEL_50:
                sub_1001FDC88(v38, fabs(v4 / 1000.0));
                *(_BYTE *)(*(_QWORD *)&v19[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_darkenerBackground]
                         + OBJC_IVAR____TtC6FindMy17FMPassthroughView_enabled) = 1;
                v19[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_isPanFromScrollView] = 0;
                v19[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_isPanningCard] = 0;
                v41 = OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_otherGesture;
                objc_msgSend(*(id *)&v19[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_otherGesture], "setEnabled:", 1);
                v42 = &v19[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_startPosition];
                *(_QWORD *)v42 = 0;
                v42[8] = 1;
                v43 = *(void **)&v19[v41];
                *(_QWORD *)&v19[v41] = 0;

                return;
              }
              v36 = Logger.logObject.getter(v24);
              v40 = static os_log_type_t.info.getter();
              if (!os_log_type_enabled(v36, v40))
              {
                v38 = 0;
                goto LABEL_49;
              }
              v39 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v39 = 0;
              _os_log_impl((void *)&_mh_execute_header, v36, v40, "FMCardContainerViewController: locking to top", v39, 2u);
              v38 = 0;
            }
            else
            {
              v36 = Logger.logObject.getter(v24);
              v37 = static os_log_type_t.info.getter();
              v38 = 2;
              if (!os_log_type_enabled(v36, v37))
              {
LABEL_49:

                goto LABEL_50;
              }
              v39 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v39 = 0;
              _os_log_impl((void *)&_mh_execute_header, v36, v37, "FMCardContainerViewController: locking to bottom", v39, 2u);
            }
            swift_slowDealloc(v39, -1, -1);
            goto LABEL_49;
          }
          v29 = *(double *)&v19[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration + 8];
          if (v29 >= v4)
          {
            if (v4 >= -v29)
              goto LABEL_41;
            v31 = Logger.logObject.getter(v24);
            v34 = static os_log_type_t.info.getter();
            if (!os_log_type_enabled(v31, v34))
            {
              v30 = 0x10000;
              goto LABEL_40;
            }
            v33 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v33 = 0;
            _os_log_impl((void *)&_mh_execute_header, v31, v34, "FMCardContainerViewController: next locking percent", v33, 2u);
            v30 = 0x10000;
          }
          else
          {
            v30 = 131585;
            v31 = Logger.logObject.getter(v24);
            v32 = static os_log_type_t.info.getter();
            if (!os_log_type_enabled(v31, v32))
            {
LABEL_40:

              oslog = v30 >> (8 * (oslog & 0x1F));
              goto LABEL_41;
            }
            v33 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v33 = 0;
            _os_log_impl((void *)&_mh_execute_header, v31, v32, "FMCardContainerViewController: previous locking percent", v33, 2u);
          }
          swift_slowDealloc(v33, -1, -1);
          goto LABEL_40;
        }

      }
    }
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v25 = type metadata accessor for Logger(0);
    v26 = sub_100056D88(v25, (uint64_t)qword_1005F5748);
    osloga = Logger.logObject.getter(v26);
    v27 = static os_log_type_t.default.getter(osloga);
    if (os_log_type_enabled(osloga, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, osloga, v27, "FMCardContainerViewController: disabling gesture end because scrollview is not at Zero", v28, 2u);
      swift_slowDealloc(v28, -1, -1);
    }

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10046BF44(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  id v10;
  char v11;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  id v17;
  void *v18;
  double v19;
  double v20;
  uint64_t ObjectType;

  v2 = v1;
  ObjectType = swift_getObjectType(a1);
  v4 = sub_100053F2C((uint64_t *)&unk_1005E5A10);
  v5 = String.init<A>(describing:)(&ObjectType, v4);
  v7 = v6;
  if (v5 == 0xD000000000000022 && v6 == 0x80000001004C8610)
  {
    swift_bridgeObjectRelease(0x80000001004C8610);
LABEL_5:
    v9 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_otherGesture);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_otherGesture) = a1;
    v10 = a1;

    v11 = *(_BYTE *)(v2 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_isPanningCard) ^ 1;
    return v11 & 1;
  }
  v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v5, v6, 0xD000000000000022, 0x80000001004C8610, 0);
  swift_bridgeObjectRelease(v7);
  if ((v8 & 1) != 0)
    goto LABEL_5;
  v13 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController);
  if (v13
    && (v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController + 8),
        v15 = swift_getObjectType(*(_QWORD *)(v2
                                            + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController)),
        v16 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8),
        v17 = v13,
        v18 = (void *)v16(v15, v14),
        v17,
        v18))
  {
    *(_BYTE *)(v2 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_isPanFromScrollView) = 1;
    objc_msgSend(v18, "contentOffset");
    v20 = v19;

    v11 = v20 <= 0.0;
  }
  else
  {
    v11 = 0;
  }
  return v11 & 1;
}

uint64_t sub_10046C0D0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t result;
  void *v10;
  uint64_t v11;
  void *v12;
  double v13;
  double v14;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType(a1);
  v3 = sub_100053F2C((uint64_t *)&unk_1005E5A10);
  v4 = String.init<A>(describing:)(&ObjectType, v3);
  v6 = v5;
  if (v4 == 0xD000000000000022 && v5 == 0x80000001004C8610)
  {
    v7 = swift_bridgeObjectRelease(0x80000001004C8610).n128_u64[0];
    v8 = 1;
  }
  else
  {
    v8 = _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, 0xD000000000000022, 0x80000001004C8610, 0);
    v7 = swift_bridgeObjectRelease(v6).n128_u64[0];
  }
  result = (uint64_t)objc_msgSend(a1, "view", *(double *)&v7);
  if (result)
  {
    v10 = (void *)result;
    v11 = objc_opt_self(UIScrollView);
    v12 = (void *)swift_dynamicCastObjCClass(v10, v11);
    if (v12 && (v8 & 1) == 0)
    {
      if (*(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent))
      {

        return 1;
      }
      else
      {
        objc_msgSend(v12, "contentOffset");
        v14 = v13;

        return v14 < 0.0;
      }
    }
    else
    {

      return 0;
    }
  }
  return result;
}

_QWORD *sub_10046C214(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  id v10;
  _BYTE v11[32];
  _QWORD *v12;

  v12 = _swiftEmptyArrayStorage;
  v2 = *(_QWORD *)(a1 + 16);
  specialized ContiguousArray.reserveCapacity(_:)(v2);
  if (!v2)
    return v12;
  for (i = a1 + 32; ; i += 32)
  {
    sub_100056E70(i, (uint64_t)v11);
    v4 = sub_100006C5C(0, &qword_1005E5A58, MFComposeRecipient_ptr);
    v5 = swift_dynamicCast(&v10, v11, (char *)&type metadata for Any + 8, v4, 6);
    if (!(_DWORD)v5)
      break;
    v6 = v10;
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v5);
    v7 = v12[2];
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v7);
    v8 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v6);
    specialized ContiguousArray._endMutation()(v8);
    if (!--v2)
      return v12;
  }
  v10 = 0;
  swift_release(v12);

  return 0;
}

_QWORD *sub_10046C32C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_18;
  specialized ContiguousArray.reserveCapacity(_:)(*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10));
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v1);
        v5 = i + 1;
        if (__OFADD__(i, 1))
          break;
        v6 = v4;
        v7 = objc_opt_self(UIImageView);
        v8 = swift_dynamicCastObjCClass(v6, v7);
        if (!v8)
        {
          swift_unknownObjectRelease(v6);
          goto LABEL_15;
        }
        v9 = v8;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v8);
        v10 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v10);
        v11 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v9);
        specialized ContiguousArray._endMutation()(v11);
        if (v5 == v2)
          return _swiftEmptyArrayStorage;
      }
      __break(1u);
    }
    else
    {
      v12 = 0;
      v13 = v1 + 32;
      while (1)
      {
        v14 = v12 + 1;
        if (__OFADD__(v12, 1))
          break;
        v15 = *(void **)(v13 + 8 * v12);
        v16 = objc_opt_self(UIImageView);
        v17 = swift_dynamicCastObjCClass(v15, v16);
        if (!v17)
        {
LABEL_15:
          swift_release(_swiftEmptyArrayStorage);
          return 0;
        }
        v1 = v17;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v15);
        v18 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v18);
        v19 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v1);
        specialized ContiguousArray._endMutation()(v19);
        ++v12;
        if (v14 == v2)
          return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_18:
    if (v1 < 0)
      v21 = v1;
    else
      v21 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v22 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(v1);
    specialized ContiguousArray.reserveCapacity(_:)(v22);
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(v1);
  }
  return _swiftEmptyArrayStorage;
}

_QWORD *sub_10046C510(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v1 = a1;
  if (a1 >> 62)
    goto LABEL_18;
  specialized ContiguousArray.reserveCapacity(_:)(*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10));
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        v4 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v1);
        v5 = i + 1;
        if (__OFADD__(i, 1))
          break;
        v6 = v4;
        v7 = type metadata accessor for FMFenceMapTableViewCell();
        v8 = swift_dynamicCastClass(v6, v7);
        if (!v8)
        {
          swift_unknownObjectRelease(v6);
          goto LABEL_15;
        }
        v9 = v8;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v8);
        v10 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v10);
        v11 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v9);
        specialized ContiguousArray._endMutation()(v11);
        if (v5 == v2)
          return _swiftEmptyArrayStorage;
      }
      __break(1u);
    }
    else
    {
      v12 = 0;
      v13 = v1 + 32;
      while (1)
      {
        v14 = v12 + 1;
        if (__OFADD__(v12, 1))
          break;
        v15 = *(void **)(v13 + 8 * v12);
        v16 = type metadata accessor for FMFenceMapTableViewCell();
        v17 = swift_dynamicCastClass(v15, v16);
        if (!v17)
        {
LABEL_15:
          swift_release(_swiftEmptyArrayStorage);
          return 0;
        }
        v1 = v17;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v15);
        v18 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v18);
        v19 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v1);
        specialized ContiguousArray._endMutation()(v19);
        ++v12;
        if (v14 == v2)
          return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_18:
    if (v1 < 0)
      v21 = v1;
    else
      v21 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v1);
    v22 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(v1);
    specialized ContiguousArray.reserveCapacity(_:)(v22);
    swift_bridgeObjectRetain(v1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(v1);
  }
  return _swiftEmptyArrayStorage;
}

id sub_10046C6EC(uint64_t a1, unint64_t a2)
{
  void *v4;
  id v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  Swift::String v16;
  Swift::String v17;
  void *object;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  NSString v23;
  unsigned int v24;
  id v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  NSString v32;
  NSString v33;
  id v34;
  id v35;
  id v36;
  Swift::String v37;
  Swift::String v38;
  void *v39;
  NSString v40;
  void *v41;
  id v42;
  _QWORD aBlock[5];
  uint64_t v45;
  Swift::String v46;
  Swift::String v47;
  Swift::String v48;
  Swift::String v49;

  aBlock[0] = 0;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v4 = (void *)objc_opt_self(NSBundle);
  v5 = objc_msgSend(v4, "mainBundle");
  v6._countAndFlagsBits = 0xD000000000000023;
  v46._countAndFlagsBits = 0xD000000000000035;
  v46._object = (void *)0x80000001004C37C0;
  v6._object = (void *)0x80000001004C3790;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v46);

  v9 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
  v10 = swift_allocObject(v9, 72, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100481740;
  *(_QWORD *)(v10 + 56) = &type metadata for String;
  v11 = sub_100071E88();
  *(_QWORD *)(v10 + 64) = v11;
  *(_QWORD *)(v10 + 32) = a1;
  *(_QWORD *)(v10 + 40) = a2;
  swift_bridgeObjectRetain(a2);
  String.init(format:_:)(v8._countAndFlagsBits, v8._object, v10);
  v13 = v12;
  swift_bridgeObjectRelease(v8._object);
  LOBYTE(v10) = sub_1003C06A0(a1, a2, 0);
  swift_bridgeObjectRelease(v14);
  if ((v10 & 1) != 0)
  {
    aBlock[0] = 0;
    _StringGuts.grow(_:)(20);
    v15 = objc_msgSend(v4, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
    v47._countAndFlagsBits = 0xD000000000000039;
    v47._object = (void *)0x80000001004C38A0;
    v16._object = (void *)0x80000001004C3870;
    v16._countAndFlagsBits = 0xD000000000000027;
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v47)._object;

    v19 = v4;
  }
  else
  {
    v20 = v4;
    sub_100006C5C(0, (unint64_t *)&qword_1005D8190, NSPredicate_ptr);
    v21 = swift_allocObject(v9, 72, 7);
    *(_OWORD *)(v21 + 16) = xmmword_100481740;
    *(_QWORD *)(v21 + 56) = &type metadata for String;
    *(_QWORD *)(v21 + 64) = v11;
    *(_QWORD *)(v21 + 32) = 0xD000000000000029;
    *(_QWORD *)(v21 + 40) = 0x80000001004ACC10;
    v22 = (void *)NSPredicate.init(format:_:)(0x54414D20464C4553, 0xEF40252053454843, v21);
    v23 = String._bridgeToObjectiveC()();
    v24 = objc_msgSend(v22, "evaluateWithObject:", v23);

    if (!v24)
    {
      swift_bridgeObjectRelease(v13);
      return 0;
    }
    aBlock[0] = 0;
    _StringGuts.grow(_:)(20);
    v25 = objc_msgSend(v20, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
    v48._countAndFlagsBits = 0xD000000000000039;
    v48._object = (void *)0x80000001004C3830;
    v26._object = (void *)0x80000001004C3800;
    v26._countAndFlagsBits = 0xD000000000000027;
    v27._countAndFlagsBits = 0;
    v27._object = (void *)0xE000000000000000;
    v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, (Swift::String_optional)0, (NSBundle)v25, v27, v48);

    v29 = v9;
    v19 = v20;
    v30 = swift_allocObject(v29, 72, 7);
    *(_OWORD *)(v30 + 16) = xmmword_100481740;
    *(_QWORD *)(v30 + 56) = &type metadata for String;
    *(_QWORD *)(v30 + 64) = v11;
    *(_QWORD *)(v30 + 32) = a1;
    *(_QWORD *)(v30 + 40) = a2;
    swift_bridgeObjectRetain(a2);
    String.init(format:_:)(v28._countAndFlagsBits, v28._object, v30);
    object = v31;
    swift_bridgeObjectRelease(v28._object);
  }
  v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v13);
  v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v34 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v32, v33, 1);

  if (v34)
  {
    v35 = v34;
    _StringGuts.grow(_:)(20);
    v36 = objc_msgSend(v19, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
    v49._countAndFlagsBits = 0xD000000000000021;
    v49._object = (void *)0x80000001004A5EE0;
    v37._countAndFlagsBits = 0x4F545455425F4B4FLL;
    v37._object = (void *)0xEF454C5449545F4ELL;
    v38._countAndFlagsBits = 0;
    v38._object = (void *)0xE000000000000000;
    v39 = NSLocalizedString(_:tableName:bundle:value:comment:)(v37, (Swift::String_optional)0, (NSBundle)v36, v38, v49)._object;

    v40 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v39);
    aBlock[4] = State.rawValue.getter;
    v45 = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100008B40;
    aBlock[3] = &unk_100568A28;
    v41 = _Block_copy(aBlock);
    swift_release(v45);
    v42 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v40, 0, v41);
    _Block_release(v41);

    objc_msgSend(v35, "addAction:", v42);
  }
  return v34;
}

void sub_10046CC88(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  Class *v20;
  char *v21;
  char *v22;
  char *v23;
  Class isa;
  uint64_t v25;
  uint8_t *v26;
  __n128 v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  char *v43;
  Class v44;
  uint64_t v45;

  v43 = a3;
  v4 = sub_100053F2C((uint64_t *)&unk_1005E5940);
  __chkstk_darwin(v4);
  v6 = (char *)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100053F2C(&qword_1005D3380);
  __chkstk_darwin(v7);
  v9 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FMFLocationAlertTarget(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16))
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v14 = type metadata accessor for Logger(0);
    sub_100056D88(v14, (uint64_t)qword_1005F5748);
    swift_bridgeObjectRetain(a2);
    v16 = Logger.logObject.getter(v15);
    v17 = static os_log_type_t.default.getter(v16);
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc(12, -1);
      v42 = v10;
      v19 = (uint8_t *)v18;
      v20 = (Class *)swift_slowAlloc(8, -1);
      v41 = v11;
      *(_DWORD *)v19 = 138412290;
      v40[1] = v19 + 4;
      v21 = v13;
      v22 = v9;
      v23 = v6;
      isa = Array._bridgeToObjectiveC()().super.isa;
      v44 = isa;
      v11 = v41;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45);
      *v20 = isa;
      v6 = v23;
      v9 = v22;
      v13 = v21;
      swift_bridgeObjectRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "FMRecipientsViewController: Sending location alerts to %@", v19, 0xCu);
      v25 = sub_100053F2C((uint64_t *)&unk_1005D9680);
      swift_arrayDestroy(v20, 1, v25);
      swift_slowDealloc(v20, -1, -1);
      v26 = v19;
      v10 = v42;
      swift_slowDealloc(v26, -1, -1);

    }
    else
    {

      v27 = swift_bridgeObjectRelease(a2);
    }
    v31 = v43;
    v32 = *(_QWORD *)&v43[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_mediator];
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v11 + 104))(v13, enum case for FMFLocationAlertTarget.alertFriends(_:), v10, v27);
    v33 = type metadata accessor for FMFFriend(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v9, 1, 1, v33);
    swift_bridgeObjectRetain(a2);
    swift_retain(v32);
    v34 = sub_1000CED00(a2);
    swift_bridgeObjectRelease(a2);
    v35 = type metadata accessor for FMFLocationAlert(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v6, 1, 1, v35);
    v36 = objc_allocWithZone((Class)type metadata accessor for FMLocationAlertViewController(0));
    v37 = (void *)sub_10007CF64(v32, (uint64_t)v13, (uint64_t)v9, v34, (uint64_t)v6, 1, 1);
    v38 = objc_msgSend(v31, "navigationController");
    if (v38)
    {
      v39 = v38;
      objc_msgSend(v38, "pushViewController:animated:", v37, 1);

    }
  }
  else
  {
    v28 = *(void **)&v43[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView];
    if (v28)
    {
      v29 = objc_msgSend(v28, "textView");
      if (v29)
      {
        v30 = v29;
        objc_msgSend(v29, "resignFirstResponder");

        objc_msgSend(v43, "dismissViewControllerAnimated:completion:", 1, 0);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

id sub_10046D11C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMSendLocationAlertViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10046D150()
{
  return type metadata accessor for FMSendLocationAlertViewController(0);
}

uint64_t type metadata accessor for FMSendLocationAlertViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1005E5A48;
  if (!qword_1005E5A48)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMSendLocationAlertViewController);
  return result;
}

void sub_10046D194()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  void *v15;

  v1 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView];
  if (!v2)
  {
    __break(1u);
    goto LABEL_15;
  }
  v3 = objc_msgSend(v2, "textView");
  if (!v3)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v4 = v3;
  objc_msgSend(v3, "resignFirstResponder");

  v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientText + 8];
  if (!v5
    || ((v5 & 0x2000000000000000) != 0
      ? (v6 = HIBYTE(v5) & 0xF)
      : (v6 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientText] & 0xFFFFFFFFFFFFLL),
        !v6 || (sub_1001558C0(0, 0) & 1) != 0))
  {
    v7 = *(void **)&v0[v1];
    if (v7)
    {
      v8 = objc_msgSend(v7, "recipients");
      if (v8)
      {
        v9 = v8;
        v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, (char *)&type metadata for Any + 8);

        v11 = sub_10046C214(v10);
        swift_bridgeObjectRelease(v10);
        if (v11)
        {
          v12 = swift_allocObject(&unk_100568A60, 24, 7);
          *(_QWORD *)(v12 + 16) = v0;
          v13 = v0;
          sub_10015AC70((uint64_t)v11, (uint64_t)sub_10046D310, v12);
          v15 = v14;
          swift_bridgeObjectRelease(v11);

          swift_release(v12);
        }
      }
      return;
    }
LABEL_16:
    __break(1u);
  }
}

uint64_t sub_10046D2EC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10046D310(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10046CC88(a1, a2, *(char **)(v2 + 16));
}

id LocateIntent.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LocateIntent();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for LocateIntent()
{
  return objc_opt_self(LocateIntent);
}

id Device.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithCoder:", a1);

  return v3;
}

id LocateIntent.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for LocateIntent();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id ToggleLocationSharingIntent.__allocating_init(identifier:backingStore:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  NSString v7;
  id v8;

  v4 = v3;
  if (a2)
  {
    v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v7 = 0;
  }
  v8 = objc_msgSend(objc_allocWithZone(v4), "initWithIdentifier:backingStore:", v7, a3);

  return v8;
}

id LocateIntent.init(identifier:backingStore:)(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  NSString v6;
  id v7;
  objc_super v9;

  if (a2)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v6 = 0;
  }
  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for LocateIntent();
  v7 = objc_msgSendSuper2(&v9, "initWithIdentifier:backingStore:", v6, a3);

  return v7;
}

id ToggleLocationSharingIntent.__allocating_init(domain:verb:parametersByName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  objc_class *v5;
  NSString v9;
  NSString v10;
  NSDictionary v11;
  id v12;

  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  if (a5)
  {
    v11.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a5);
  }
  else
  {
    v11.super.isa = 0;
  }
  v12 = objc_msgSend(objc_allocWithZone(v5), "initWithDomain:verb:parametersByName:", v9, v10, v11.super.isa);

  return v12;
}

id LocateIntent.init(domain:verb:parametersByName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  NSString v9;
  NSString v10;
  NSDictionary v11;
  id v12;
  objc_super v14;

  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  if (a5)
  {
    v11.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a5);
  }
  else
  {
    v11.super.isa = 0;
  }
  v14.receiver = v5;
  v14.super_class = (Class)type metadata accessor for LocateIntent();
  v12 = objc_msgSendSuper2(&v14, "initWithDomain:verb:parametersByName:", v9, v10, v11.super.isa);

  return v12;
}

id LocateIntent.__deallocating_deinit()
{
  return sub_1000E0A1C(type metadata accessor for LocateIntent);
}

unint64_t ToggleLocationSharingIntentResponseCode.init(rawValue:)(unint64_t a1)
{
  return sub_10046DF1C(a1);
}

unint64_t sub_10046D8FC@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_10046DF1C(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t LocateIntentResponse.code.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR___LocateIntentResponse_code;
  swift_beginAccess(v0 + OBJC_IVAR___LocateIntentResponse_code, v3, 0, 0);
  return *(_QWORD *)v1;
}

char *LocateIntentResponse.__allocating_init(code:userActivity:)(uint64_t a1, void *a2)
{
  objc_class *v2;
  char *v5;
  char *v6;
  char *v7;
  char v9[24];

  v5 = (char *)objc_msgSend(objc_allocWithZone(v2), "init");
  v6 = &v5[OBJC_IVAR___LocateIntentResponse_code];
  swift_beginAccess(&v5[OBJC_IVAR___LocateIntentResponse_code], v9, 1, 0);
  *(_QWORD *)v6 = a1;
  v7 = v5;
  objc_msgSend(v7, "setUserActivity:", a2);

  return v7;
}

char *LocateIntentResponse.init(code:userActivity:)(uint64_t a1, void *a2)
{
  void *v2;
  char *v5;
  char *v6;
  char *v7;
  char v9[24];

  v5 = (char *)objc_msgSend(v2, "init");
  v6 = &v5[OBJC_IVAR___LocateIntentResponse_code];
  swift_beginAccess(&v5[OBJC_IVAR___LocateIntentResponse_code], v9, 1, 0);
  *(_QWORD *)v6 = a1;
  v7 = v5;
  objc_msgSend(v7, "setUserActivity:", a2);

  return v7;
}

id LocateIntentResponse.init()()
{
  char *v0;
  objc_super v2;

  *(_QWORD *)&v0[OBJC_IVAR___LocateIntentResponse_code] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LocateIntentResponse();
  return objc_msgSendSuper2(&v2, "init");
}

id LocateIntentResponse.init(coder:)(void *a1)
{
  char *v1;
  id v3;
  objc_super v5;

  *(_QWORD *)&v1[OBJC_IVAR___LocateIntentResponse_code] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for LocateIntentResponse();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id ToggleLocationSharingIntentResponse.__allocating_init(backingStore:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), "initWithBackingStore:", a1);

  return v3;
}

id LocateIntentResponse.init(backingStore:)(void *a1)
{
  char *v1;
  id v3;
  objc_super v5;

  *(_QWORD *)&v1[OBJC_IVAR___LocateIntentResponse_code] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for LocateIntentResponse();
  v3 = objc_msgSendSuper2(&v5, "initWithBackingStore:", a1);

  return v3;
}

id sub_10046DD40(char *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  objc_super v7;

  *(_QWORD *)&a1[OBJC_IVAR___LocateIntentResponse_code] = 0;
  v7.receiver = a1;
  v7.super_class = (Class)type metadata accessor for LocateIntentResponse();
  return objc_msgSendSuper2(&v7, *a4, a3);
}

id ToggleLocationSharingIntentResponse.__allocating_init(propertiesByName:)(uint64_t a1)
{
  objc_class *v1;
  NSDictionary v3;
  id v4;

  if (a1)
  {
    v3.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v3.super.isa = 0;
  }
  v4 = objc_msgSend(objc_allocWithZone(v1), "initWithPropertiesByName:", v3.super.isa);

  return v4;
}

id LocateIntentResponse.init(propertiesByName:)(uint64_t a1)
{
  char *v1;
  NSDictionary v3;
  id v4;
  objc_super v6;

  *(_QWORD *)&v1[OBJC_IVAR___LocateIntentResponse_code] = 0;
  if (a1)
  {
    v3.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v3.super.isa = 0;
  }
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for LocateIntentResponse();
  v4 = objc_msgSendSuper2(&v6, "initWithPropertiesByName:", v3.super.isa);

  if (v4)
  return v4;
}

id LocateIntentResponse.__deallocating_deinit()
{
  return sub_1000E0A1C(type metadata accessor for LocateIntentResponse);
}

unint64_t sub_10046DF1C(unint64_t result)
{
  if (result > 6)
    return 0;
  return result;
}

uint64_t type metadata accessor for LocateIntentResponse()
{
  return objc_opt_self(LocateIntentResponse);
}

unint64_t sub_10046DF50()
{
  unint64_t result;

  result = qword_1005E5A68;
  if (!qword_1005E5A68)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LocateIntentResponseCode, &type metadata for LocateIntentResponseCode);
    atomic_store(result, (unint64_t *)&qword_1005E5A68);
  }
  return result;
}

uint64_t sub_10046DF94@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___LocateIntentResponse_code);
  result = swift_beginAccess(v3, v5, 0, 0);
  *a2 = *v3;
  return result;
}

uint64_t sub_10046DFE4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  _BYTE v5[24];

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR___LocateIntentResponse_code);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = v2;
  return result;
}

ValueMetadata *type metadata accessor for LocateIntentResponseCode()
{
  return &type metadata for LocateIntentResponseCode;
}

id ToggleLocationSharingIntent.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ToggleLocationSharingIntent();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for ToggleLocationSharingIntent()
{
  return objc_opt_self(ToggleLocationSharingIntent);
}

id ToggleLocationSharingIntent.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ToggleLocationSharingIntent();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id ToggleLocationSharingIntent.init(identifier:backingStore:)(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  NSString v6;
  id v7;
  objc_super v9;

  if (a2)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v6 = 0;
  }
  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for ToggleLocationSharingIntent();
  v7 = objc_msgSendSuper2(&v9, "initWithIdentifier:backingStore:", v6, a3);

  return v7;
}

id ToggleLocationSharingIntent.init(domain:verb:parametersByName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  NSString v9;
  NSString v10;
  NSDictionary v11;
  id v12;
  objc_super v14;

  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  if (a5)
  {
    v11.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a5);
  }
  else
  {
    v11.super.isa = 0;
  }
  v14.receiver = v5;
  v14.super_class = (Class)type metadata accessor for ToggleLocationSharingIntent();
  v12 = objc_msgSendSuper2(&v14, "initWithDomain:verb:parametersByName:", v9, v10, v11.super.isa);

  return v12;
}

id ToggleLocationSharingIntent.__deallocating_deinit()
{
  return sub_1000E0A1C(type metadata accessor for ToggleLocationSharingIntent);
}

uint64_t ToggleLocationSharingIntentResponse.code.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR___ToggleLocationSharingIntentResponse_code;
  swift_beginAccess(v0 + OBJC_IVAR___ToggleLocationSharingIntentResponse_code, v3, 0, 0);
  return *(_QWORD *)v1;
}

char *ToggleLocationSharingIntentResponse.__allocating_init(code:userActivity:)(uint64_t a1, void *a2)
{
  objc_class *v2;
  char *v5;
  char *v6;
  char *v7;
  char v9[24];

  v5 = (char *)objc_msgSend(objc_allocWithZone(v2), "init");
  v6 = &v5[OBJC_IVAR___ToggleLocationSharingIntentResponse_code];
  swift_beginAccess(&v5[OBJC_IVAR___ToggleLocationSharingIntentResponse_code], v9, 1, 0);
  *(_QWORD *)v6 = a1;
  v7 = v5;
  objc_msgSend(v7, "setUserActivity:", a2);

  return v7;
}

char *ToggleLocationSharingIntentResponse.init(code:userActivity:)(uint64_t a1, void *a2)
{
  void *v2;
  char *v5;
  char *v6;
  char *v7;
  char v9[24];

  v5 = (char *)objc_msgSend(v2, "init");
  v6 = &v5[OBJC_IVAR___ToggleLocationSharingIntentResponse_code];
  swift_beginAccess(&v5[OBJC_IVAR___ToggleLocationSharingIntentResponse_code], v9, 1, 0);
  *(_QWORD *)v6 = a1;
  v7 = v5;
  objc_msgSend(v7, "setUserActivity:", a2);

  return v7;
}

char *static ToggleLocationSharingIntentResponse.unspecified(state:)(uint64_t a1)
{
  char *v2;
  char *v3;
  double v4;
  char v6[24];

  v2 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ToggleLocationSharingIntentResponse()), "init");
  v3 = &v2[OBJC_IVAR___ToggleLocationSharingIntentResponse_code];
  *(_QWORD *)&v4 = swift_beginAccess(&v2[OBJC_IVAR___ToggleLocationSharingIntentResponse_code], v6, 1, 0).n128_u64[0];
  *(_QWORD *)v3 = 0;
  objc_msgSend(v2, "setUserActivity:", 0, v4);
  objc_msgSend(v2, "setState:", a1);
  return v2;
}

char *static ToggleLocationSharingIntentResponse.ready(state:)(uint64_t a1)
{
  char *v2;
  char *v3;
  double v4;
  char v6[24];

  v2 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ToggleLocationSharingIntentResponse()), "init");
  v3 = &v2[OBJC_IVAR___ToggleLocationSharingIntentResponse_code];
  *(_QWORD *)&v4 = swift_beginAccess(&v2[OBJC_IVAR___ToggleLocationSharingIntentResponse_code], v6, 1, 0).n128_u64[0];
  *(_QWORD *)v3 = 1;
  objc_msgSend(v2, "setUserActivity:", 0, v4);
  objc_msgSend(v2, "setState:", a1);
  return v2;
}

char *static ToggleLocationSharingIntentResponse.continueInApp(state:)(uint64_t a1)
{
  char *v2;
  char *v3;
  double v4;
  char v6[24];

  v2 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ToggleLocationSharingIntentResponse()), "init");
  v3 = &v2[OBJC_IVAR___ToggleLocationSharingIntentResponse_code];
  *(_QWORD *)&v4 = swift_beginAccess(&v2[OBJC_IVAR___ToggleLocationSharingIntentResponse_code], v6, 1, 0).n128_u64[0];
  *(_QWORD *)v3 = 2;
  objc_msgSend(v2, "setUserActivity:", 0, v4);
  objc_msgSend(v2, "setState:", a1);
  return v2;
}

char *static ToggleLocationSharingIntentResponse.inProgress(state:)(uint64_t a1)
{
  char *v2;
  char *v3;
  double v4;
  char v6[24];

  v2 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ToggleLocationSharingIntentResponse()), "init");
  v3 = &v2[OBJC_IVAR___ToggleLocationSharingIntentResponse_code];
  *(_QWORD *)&v4 = swift_beginAccess(&v2[OBJC_IVAR___ToggleLocationSharingIntentResponse_code], v6, 1, 0).n128_u64[0];
  *(_QWORD *)v3 = 3;
  objc_msgSend(v2, "setUserActivity:", 0, v4);
  objc_msgSend(v2, "setState:", a1);
  return v2;
}

char *static ToggleLocationSharingIntentResponse.success(state:)(uint64_t a1)
{
  char *v2;
  char *v3;
  double v4;
  char v6[24];

  v2 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ToggleLocationSharingIntentResponse()), "init");
  v3 = &v2[OBJC_IVAR___ToggleLocationSharingIntentResponse_code];
  *(_QWORD *)&v4 = swift_beginAccess(&v2[OBJC_IVAR___ToggleLocationSharingIntentResponse_code], v6, 1, 0).n128_u64[0];
  *(_QWORD *)v3 = 4;
  objc_msgSend(v2, "setUserActivity:", 0, v4);
  objc_msgSend(v2, "setState:", a1);
  return v2;
}

char *static ToggleLocationSharingIntentResponse.failureRequiringAppLaunch(state:)(uint64_t a1)
{
  char *v2;
  char *v3;
  double v4;
  char v6[24];

  v2 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ToggleLocationSharingIntentResponse()), "init");
  v3 = &v2[OBJC_IVAR___ToggleLocationSharingIntentResponse_code];
  *(_QWORD *)&v4 = swift_beginAccess(&v2[OBJC_IVAR___ToggleLocationSharingIntentResponse_code], v6, 1, 0).n128_u64[0];
  *(_QWORD *)v3 = 6;
  objc_msgSend(v2, "setUserActivity:", 0, v4);
  objc_msgSend(v2, "setState:", a1);
  return v2;
}

id ToggleLocationSharingIntentResponse.init()()
{
  char *v0;
  objc_super v2;

  *(_QWORD *)&v0[OBJC_IVAR___ToggleLocationSharingIntentResponse_code] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ToggleLocationSharingIntentResponse();
  return objc_msgSendSuper2(&v2, "init");
}

id ToggleLocationSharingIntentResponse.init(coder:)(void *a1)
{
  char *v1;
  id v3;
  objc_super v5;

  *(_QWORD *)&v1[OBJC_IVAR___ToggleLocationSharingIntentResponse_code] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ToggleLocationSharingIntentResponse();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id ToggleLocationSharingIntentResponse.init(backingStore:)(void *a1)
{
  char *v1;
  id v3;
  objc_super v5;

  *(_QWORD *)&v1[OBJC_IVAR___ToggleLocationSharingIntentResponse_code] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for ToggleLocationSharingIntentResponse();
  v3 = objc_msgSendSuper2(&v5, "initWithBackingStore:", a1);

  return v3;
}

id sub_10046EF7C(char *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  objc_super v7;

  *(_QWORD *)&a1[OBJC_IVAR___ToggleLocationSharingIntentResponse_code] = 0;
  v7.receiver = a1;
  v7.super_class = (Class)type metadata accessor for ToggleLocationSharingIntentResponse();
  return objc_msgSendSuper2(&v7, *a4, a3);
}

id ToggleLocationSharingIntentResponse.init(propertiesByName:)(uint64_t a1)
{
  char *v1;
  NSDictionary v3;
  id v4;
  objc_super v6;

  *(_QWORD *)&v1[OBJC_IVAR___ToggleLocationSharingIntentResponse_code] = 0;
  if (a1)
  {
    v3.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v3.super.isa = 0;
  }
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for ToggleLocationSharingIntentResponse();
  v4 = objc_msgSendSuper2(&v6, "initWithPropertiesByName:", v3.super.isa);

  if (v4)
  return v4;
}

id ToggleLocationSharingIntentResponse.__deallocating_deinit()
{
  return sub_1000E0A1C(type metadata accessor for ToggleLocationSharingIntentResponse);
}

uint64_t type metadata accessor for ToggleLocationSharingIntentResponse()
{
  return objc_opt_self(ToggleLocationSharingIntentResponse);
}

unint64_t sub_10046F0FC()
{
  unint64_t result;

  result = qword_1005E5AC8;
  if (!qword_1005E5AC8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for ToggleLocationSharingIntentResponseCode, &type metadata for ToggleLocationSharingIntentResponseCode);
    atomic_store(result, (unint64_t *)&qword_1005E5AC8);
  }
  return result;
}

uint64_t sub_10046F140@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___ToggleLocationSharingIntentResponse_code);
  result = swift_beginAccess(v3, v5, 0, 0);
  *a2 = *v3;
  return result;
}

uint64_t sub_10046F190(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  _BYTE v5[24];

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR___ToggleLocationSharingIntentResponse_code);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = v2;
  return result;
}

ValueMetadata *type metadata accessor for ToggleLocationSharingIntentResponseCode()
{
  return &type metadata for ToggleLocationSharingIntentResponseCode;
}

id LocateDeviceIntent.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LocateDeviceIntent();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for LocateDeviceIntent()
{
  return objc_opt_self(LocateDeviceIntent);
}

id LocateDeviceIntent.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for LocateDeviceIntent();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id LocateDeviceIntent.init(identifier:backingStore:)(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  NSString v6;
  id v7;
  objc_super v9;

  if (a2)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v6 = 0;
  }
  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for LocateDeviceIntent();
  v7 = objc_msgSendSuper2(&v9, "initWithIdentifier:backingStore:", v6, a3);

  return v7;
}

id LocateDeviceIntent.init(domain:verb:parametersByName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  NSString v9;
  NSString v10;
  NSDictionary v11;
  id v12;
  objc_super v14;

  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  if (a5)
  {
    v11.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a5);
  }
  else
  {
    v11.super.isa = 0;
  }
  v14.receiver = v5;
  v14.super_class = (Class)type metadata accessor for LocateDeviceIntent();
  v12 = objc_msgSendSuper2(&v14, "initWithDomain:verb:parametersByName:", v9, v10, v11.super.isa);

  return v12;
}

id LocateDeviceIntent.__deallocating_deinit()
{
  return sub_1000E0A1C(type metadata accessor for LocateDeviceIntent);
}

uint64_t LocateDeviceIntentResponse.code.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR___LocateDeviceIntentResponse_code;
  swift_beginAccess(v0 + OBJC_IVAR___LocateDeviceIntentResponse_code, v3, 0, 0);
  return *(_QWORD *)v1;
}

char *LocateDeviceIntentResponse.__allocating_init(code:userActivity:)(uint64_t a1, void *a2)
{
  objc_class *v2;
  char *v5;
  char *v6;
  char *v7;
  char v9[24];

  v5 = (char *)objc_msgSend(objc_allocWithZone(v2), "init");
  v6 = &v5[OBJC_IVAR___LocateDeviceIntentResponse_code];
  swift_beginAccess(&v5[OBJC_IVAR___LocateDeviceIntentResponse_code], v9, 1, 0);
  *(_QWORD *)v6 = a1;
  v7 = v5;
  objc_msgSend(v7, "setUserActivity:", a2);

  return v7;
}

char *LocateDeviceIntentResponse.init(code:userActivity:)(uint64_t a1, void *a2)
{
  void *v2;
  char *v5;
  char *v6;
  char *v7;
  char v9[24];

  v5 = (char *)objc_msgSend(v2, "init");
  v6 = &v5[OBJC_IVAR___LocateDeviceIntentResponse_code];
  swift_beginAccess(&v5[OBJC_IVAR___LocateDeviceIntentResponse_code], v9, 1, 0);
  *(_QWORD *)v6 = a1;
  v7 = v5;
  objc_msgSend(v7, "setUserActivity:", a2);

  return v7;
}

id LocateDeviceIntentResponse.init()()
{
  char *v0;
  objc_super v2;

  *(_QWORD *)&v0[OBJC_IVAR___LocateDeviceIntentResponse_code] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LocateDeviceIntentResponse();
  return objc_msgSendSuper2(&v2, "init");
}

id LocateDeviceIntentResponse.init(coder:)(void *a1)
{
  char *v1;
  id v3;
  objc_super v5;

  *(_QWORD *)&v1[OBJC_IVAR___LocateDeviceIntentResponse_code] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for LocateDeviceIntentResponse();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id LocateDeviceIntentResponse.init(backingStore:)(void *a1)
{
  char *v1;
  id v3;
  objc_super v5;

  *(_QWORD *)&v1[OBJC_IVAR___LocateDeviceIntentResponse_code] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for LocateDeviceIntentResponse();
  v3 = objc_msgSendSuper2(&v5, "initWithBackingStore:", a1);

  return v3;
}

id sub_10046FA08(char *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  objc_super v7;

  *(_QWORD *)&a1[OBJC_IVAR___LocateDeviceIntentResponse_code] = 0;
  v7.receiver = a1;
  v7.super_class = (Class)type metadata accessor for LocateDeviceIntentResponse();
  return objc_msgSendSuper2(&v7, *a4, a3);
}

id LocateDeviceIntentResponse.init(propertiesByName:)(uint64_t a1)
{
  char *v1;
  NSDictionary v3;
  id v4;
  objc_super v6;

  *(_QWORD *)&v1[OBJC_IVAR___LocateDeviceIntentResponse_code] = 0;
  if (a1)
  {
    v3.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v3.super.isa = 0;
  }
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for LocateDeviceIntentResponse();
  v4 = objc_msgSendSuper2(&v6, "initWithPropertiesByName:", v3.super.isa);

  if (v4)
  return v4;
}

id LocateDeviceIntentResponse.__deallocating_deinit()
{
  return sub_1000E0A1C(type metadata accessor for LocateDeviceIntentResponse);
}

uint64_t type metadata accessor for LocateDeviceIntentResponse()
{
  return objc_opt_self(LocateDeviceIntentResponse);
}

unint64_t sub_10046FB88()
{
  unint64_t result;

  result = qword_1005E5B28;
  if (!qword_1005E5B28)
  {
    result = swift_getWitnessTable("Yj\r", &type metadata for LocateDeviceIntentResponseCode);
    atomic_store(result, (unint64_t *)&qword_1005E5B28);
  }
  return result;
}

uint64_t sub_10046FBCC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___LocateDeviceIntentResponse_code);
  result = swift_beginAccess(v3, v5, 0, 0);
  *a2 = *v3;
  return result;
}

uint64_t sub_10046FC1C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  _BYTE v5[24];

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR___LocateDeviceIntentResponse_code);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = v2;
  return result;
}

ValueMetadata *type metadata accessor for LocateDeviceIntentResponseCode()
{
  return &type metadata for LocateDeviceIntentResponseCode;
}

id PlaySoundIntent.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaySoundIntent();
  return objc_msgSendSuper2(&v2, "init");
}

uint64_t type metadata accessor for PlaySoundIntent()
{
  return objc_opt_self(PlaySoundIntent);
}

id PlaySoundIntent.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for PlaySoundIntent();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id PlaySoundIntent.init(identifier:backingStore:)(uint64_t a1, uint64_t a2, void *a3)
{
  void *v3;
  NSString v6;
  id v7;
  objc_super v9;

  if (a2)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v6 = 0;
  }
  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for PlaySoundIntent();
  v7 = objc_msgSendSuper2(&v9, "initWithIdentifier:backingStore:", v6, a3);

  return v7;
}

id PlaySoundIntent.init(domain:verb:parametersByName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  NSString v9;
  NSString v10;
  NSDictionary v11;
  id v12;
  objc_super v14;

  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  if (a5)
  {
    v11.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a5);
  }
  else
  {
    v11.super.isa = 0;
  }
  v14.receiver = v5;
  v14.super_class = (Class)type metadata accessor for PlaySoundIntent();
  v12 = objc_msgSendSuper2(&v14, "initWithDomain:verb:parametersByName:", v9, v10, v11.super.isa);

  return v12;
}

id PlaySoundIntent.__deallocating_deinit()
{
  return sub_1000E0A1C(type metadata accessor for PlaySoundIntent);
}

uint64_t PlaySoundIntentResponse.code.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[24];

  v1 = v0 + OBJC_IVAR___PlaySoundIntentResponse_code;
  swift_beginAccess(v0 + OBJC_IVAR___PlaySoundIntentResponse_code, v3, 0, 0);
  return *(_QWORD *)v1;
}

char *PlaySoundIntentResponse.__allocating_init(code:userActivity:)(uint64_t a1, void *a2)
{
  objc_class *v2;
  char *v5;
  char *v6;
  char *v7;
  char v9[24];

  v5 = (char *)objc_msgSend(objc_allocWithZone(v2), "init");
  v6 = &v5[OBJC_IVAR___PlaySoundIntentResponse_code];
  swift_beginAccess(&v5[OBJC_IVAR___PlaySoundIntentResponse_code], v9, 1, 0);
  *(_QWORD *)v6 = a1;
  v7 = v5;
  objc_msgSend(v7, "setUserActivity:", a2);

  return v7;
}

char *PlaySoundIntentResponse.init(code:userActivity:)(uint64_t a1, void *a2)
{
  void *v2;
  char *v5;
  char *v6;
  char *v7;
  char v9[24];

  v5 = (char *)objc_msgSend(v2, "init");
  v6 = &v5[OBJC_IVAR___PlaySoundIntentResponse_code];
  swift_beginAccess(&v5[OBJC_IVAR___PlaySoundIntentResponse_code], v9, 1, 0);
  *(_QWORD *)v6 = a1;
  v7 = v5;
  objc_msgSend(v7, "setUserActivity:", a2);

  return v7;
}

id PlaySoundIntentResponse.init()()
{
  char *v0;
  objc_super v2;

  *(_QWORD *)&v0[OBJC_IVAR___PlaySoundIntentResponse_code] = 0;
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaySoundIntentResponse();
  return objc_msgSendSuper2(&v2, "init");
}

id PlaySoundIntentResponse.init(coder:)(void *a1)
{
  char *v1;
  id v3;
  objc_super v5;

  *(_QWORD *)&v1[OBJC_IVAR___PlaySoundIntentResponse_code] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for PlaySoundIntentResponse();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id PlaySoundIntentResponse.init(backingStore:)(void *a1)
{
  char *v1;
  id v3;
  objc_super v5;

  *(_QWORD *)&v1[OBJC_IVAR___PlaySoundIntentResponse_code] = 0;
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for PlaySoundIntentResponse();
  v3 = objc_msgSendSuper2(&v5, "initWithBackingStore:", a1);

  return v3;
}

id sub_100470494(char *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  objc_super v7;

  *(_QWORD *)&a1[OBJC_IVAR___PlaySoundIntentResponse_code] = 0;
  v7.receiver = a1;
  v7.super_class = (Class)type metadata accessor for PlaySoundIntentResponse();
  return objc_msgSendSuper2(&v7, *a4, a3);
}

id PlaySoundIntentResponse.init(propertiesByName:)(uint64_t a1)
{
  char *v1;
  NSDictionary v3;
  id v4;
  objc_super v6;

  *(_QWORD *)&v1[OBJC_IVAR___PlaySoundIntentResponse_code] = 0;
  if (a1)
  {
    v3.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v3.super.isa = 0;
  }
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for PlaySoundIntentResponse();
  v4 = objc_msgSendSuper2(&v6, "initWithPropertiesByName:", v3.super.isa);

  if (v4)
  return v4;
}

id PlaySoundIntentResponse.__deallocating_deinit()
{
  return sub_1000E0A1C(type metadata accessor for PlaySoundIntentResponse);
}

uint64_t type metadata accessor for PlaySoundIntentResponse()
{
  return objc_opt_self(PlaySoundIntentResponse);
}

unint64_t sub_100470614()
{
  unint64_t result;

  result = qword_1005E5B88;
  if (!qword_1005E5B88)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PlaySoundIntentResponseCode, &type metadata for PlaySoundIntentResponseCode);
    atomic_store(result, (unint64_t *)&qword_1005E5B88);
  }
  return result;
}

uint64_t sub_100470658@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t result;
  _BYTE v5[24];

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___PlaySoundIntentResponse_code);
  result = swift_beginAccess(v3, v5, 0, 0);
  *a2 = *v3;
  return result;
}

uint64_t sub_1004706A8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  _BYTE v5[24];

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR___PlaySoundIntentResponse_code);
  result = swift_beginAccess(v3, v5, 1, 0);
  *v3 = v2;
  return result;
}

ValueMetadata *type metadata accessor for PlaySoundIntentResponseCode()
{
  return &type metadata for PlaySoundIntentResponseCode;
}

unint64_t State.init(rawValue:)(unint64_t result)
{
  if (result > 2)
    return 0;
  return result;
}

uint64_t *sub_100470714@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  BOOL v3;

  v2 = *result;
  v3 = (unint64_t)*result > 2;
  if ((unint64_t)*result > 2)
    v2 = 0;
  *(_QWORD *)a2 = v2;
  *(_BYTE *)(a2 + 8) = v3;
  return result;
}

id static PlaySoundDeviceClassResolutionResult.success(with:)(uint64_t a1)
{
  return sub_100470774(a1, (SEL *)&selRef_successWithResolvedValue_);
}

id static PlaySoundDeviceClassResolutionResult.confirmationRequired(with:)(uint64_t a1)
{
  return sub_100470774(a1, (SEL *)&selRef_confirmationRequiredWithValueToConfirm_);
}

id sub_100470774(uint64_t a1, SEL *a2)
{
  uint64_t v2;

  return objc_msgSend((id)swift_getObjCClassFromMetadata(v2), *a2, a1);
}

id PlaySoundDeviceClassResolutionResult.__allocating_init(JSONDictionary:intent:)(uint64_t a1, void *a2)
{
  objc_class *v2;
  id v5;
  Class isa;
  id v7;

  v5 = objc_allocWithZone(v2);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v7 = objc_msgSend(v5, "initWithJSONDictionary:forIntent:", isa, a2);

  return v7;
}

id StateResolutionResult.init(JSONDictionary:intent:)(uint64_t a1, void *a2)
{
  void *v2;
  Class isa;
  id v6;
  id v7;
  objc_super v9;

  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for StateResolutionResult();
  v6 = objc_msgSendSuper2(&v9, "initWithJSONDictionary:forIntent:", isa, a2);

  v7 = v6;
  if (v7)

  return v7;
}

uint64_t type metadata accessor for StateResolutionResult()
{
  return objc_opt_self(StateResolutionResult);
}

id StateResolutionResult.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StateResolutionResult();
  return objc_msgSendSuper2(&v2, "dealloc");
}

unint64_t sub_100470A30()
{
  unint64_t result;

  result = qword_1005E5BE0;
  if (!qword_1005E5BE0)
  {
    result = swift_getWitnessTable("Ii\r", &type metadata for State);
    atomic_store(result, (unint64_t *)&qword_1005E5BE0);
  }
  return result;
}

ValueMetadata *type metadata accessor for State()
{
  return &type metadata for State;
}

unint64_t LocateDeviceClass.init(rawValue:)(unint64_t a1)
{
  return sub_100470CC4(a1);
}

unint64_t sub_100470A9C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_100470CC4(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

id LocateDeviceClassResolutionResult.init(JSONDictionary:intent:)(uint64_t a1, void *a2)
{
  void *v2;
  Class isa;
  id v6;
  id v7;
  objc_super v9;

  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for LocateDeviceClassResolutionResult();
  v6 = objc_msgSendSuper2(&v9, "initWithJSONDictionary:forIntent:", isa, a2);

  v7 = v6;
  if (v7)

  return v7;
}

id LocateDeviceClassResolutionResult.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LocateDeviceClassResolutionResult();
  return objc_msgSendSuper2(&v2, "dealloc");
}

unint64_t sub_100470CC4(unint64_t result)
{
  if (result > 7 || result == 5)
    return 0;
  return result;
}

uint64_t type metadata accessor for LocateDeviceClassResolutionResult()
{
  return objc_opt_self(LocateDeviceClassResolutionResult);
}

unint64_t sub_100470D00()
{
  unint64_t result;

  result = qword_1005E5C10;
  if (!qword_1005E5C10)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for LocateDeviceClass, &type metadata for LocateDeviceClass);
    atomic_store(result, (unint64_t *)&qword_1005E5C10);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocateDeviceClass()
{
  return &type metadata for LocateDeviceClass;
}

id PlaySoundDeviceClassResolutionResult.init(JSONDictionary:intent:)(uint64_t a1, void *a2)
{
  void *v2;
  Class isa;
  id v6;
  id v7;
  objc_super v9;

  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for PlaySoundDeviceClassResolutionResult();
  v6 = objc_msgSendSuper2(&v9, "initWithJSONDictionary:forIntent:", isa, a2);

  v7 = v6;
  if (v7)

  return v7;
}

id PlaySoundDeviceClassResolutionResult.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaySoundDeviceClassResolutionResult();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for PlaySoundDeviceClassResolutionResult()
{
  return objc_opt_self(PlaySoundDeviceClassResolutionResult);
}

unint64_t sub_100470F70()
{
  unint64_t result;

  result = qword_1005E5C40;
  if (!qword_1005E5C40)
  {
    result = swift_getWitnessTable("Yh\r", &type metadata for PlaySoundDeviceClass);
    atomic_store(result, (unint64_t *)&qword_1005E5C40);
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaySoundDeviceClass()
{
  return &type metadata for PlaySoundDeviceClass;
}

id Device.__allocating_init(identifier:display:pronunciationHint:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  objc_class *v6;
  NSString v10;
  NSString v11;
  NSString v12;
  id v13;

  if (a2)
  {
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v10 = 0;
  }
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  if (a6)
  {
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a6);
  }
  else
  {
    v12 = 0;
  }
  v13 = objc_msgSend(objc_allocWithZone(v6), "initWithIdentifier:displayString:pronunciationHint:", v10, v11, v12);

  return v13;
}

id Device.init(identifier:display:pronunciationHint:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  NSString v10;
  NSString v11;
  NSString v12;
  id v13;
  objc_super v15;

  if (a2)
  {
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v10 = 0;
  }
  v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  if (a6)
  {
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a6);
  }
  else
  {
    v12 = 0;
  }
  v15.receiver = v6;
  v15.super_class = (Class)type metadata accessor for Device();
  v13 = objc_msgSendSuper2(&v15, "initWithIdentifier:displayString:pronunciationHint:", v10, v11, v12);

  return v13;
}

uint64_t type metadata accessor for Device()
{
  return objc_opt_self(Device);
}

id Device.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for Device();
  v3 = objc_msgSendSuper2(&v5, "initWithCoder:", a1);

  return v3;
}

id Device.__deallocating_deinit()
{
  return sub_1000E0A1C(type metadata accessor for Device);
}

id static DeviceResolutionResult.success(with:)(uint64_t a1)
{
  uint64_t v1;
  objc_super v4;

  v4.receiver = (id)swift_getObjCClassFromMetadata(v1);
  v4.super_class = (Class)&OBJC_METACLASS___DeviceResolutionResult;
  return objc_msgSendSuper2(&v4, "successWithResolvedObject:", a1);
}

id static DeviceResolutionResult.disambiguation(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *ObjCClassFromMetadata;
  Class isa;
  double v7;
  id v8;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  objc_super v13;

  v2 = v1;
  v3 = a1;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v10 = a1;
    else
      v10 = a1 & 0xFFFFFFFFFFFFFF8;
    v11 = sub_10047144C();
    swift_bridgeObjectRetain(v3);
    v12 = _bridgeCocoaArray<A>(_:)(v10, v11);
    swift_bridgeObjectRelease(v3);
    v3 = v12;
  }
  else
  {
    swift_bridgeObjectRetain(a1);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v4);
    sub_10047144C();
  }
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata(v2);
  sub_10047144C();
  isa = Array._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v7 = swift_bridgeObjectRelease(v3).n128_u64[0];
  v13.receiver = ObjCClassFromMetadata;
  v13.super_class = (Class)&OBJC_METACLASS___DeviceResolutionResult;
  v8 = objc_msgSendSuper2(&v13, "disambiguationWithObjectsToDisambiguate:", isa, v7);

  return v8;
}

unint64_t sub_10047144C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005E5C98;
  if (!qword_1005E5C98)
  {
    v1 = objc_opt_self(INObject);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1005E5C98);
  }
  return result;
}

id static DeviceResolutionResult.confirmationRequired(with:)(uint64_t a1)
{
  uint64_t v1;
  objc_super v4;

  v4.receiver = (id)swift_getObjCClassFromMetadata(v1);
  v4.super_class = (Class)&OBJC_METACLASS___DeviceResolutionResult;
  return objc_msgSendSuper2(&v4, "confirmationRequiredWithObjectToConfirm:", a1);
}

void static DeviceResolutionResult.success(with:)()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "FindMy/Device.swift", 19, 2, 44, 0);
  __break(1u);
}

void static DeviceResolutionResult.disambiguation(with:)()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "FindMy/Device.swift", 19, 2, 49, 0);
  __break(1u);
}

void static DeviceResolutionResult.confirmationRequired(with:)()
{
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "FindMy/Device.swift", 19, 2, 54, 0);
  __break(1u);
}

id DeviceResolutionResult.init(JSONDictionary:intent:)(uint64_t a1, void *a2)
{
  void *v2;
  Class isa;
  id v6;
  id v7;
  objc_super v9;

  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(a1);
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for DeviceResolutionResult();
  v6 = objc_msgSendSuper2(&v9, "initWithJSONDictionary:forIntent:", isa, a2);

  v7 = v6;
  if (v7)

  return v7;
}

uint64_t type metadata accessor for DeviceResolutionResult()
{
  return objc_opt_self(DeviceResolutionResult);
}

id DeviceResolutionResult.__deallocating_deinit()
{
  return sub_1000E0A1C(type metadata accessor for DeviceResolutionResult);
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self(_TtC6FindMyP33_20864449BD49D8F5A41AA822C0CCB98619ResourceBundleClass);
}

id objc_msgSend_CGColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGColor");
}

id objc_msgSend_CGPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "CGPath");
}

id objc_msgSend_actionWithTitle_style_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "actionWithTitle:style:handler:");
}

id objc_msgSend_addAction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAction:");
}

id objc_msgSend_addAnimation_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addAnimation:forKey:");
}

id objc_msgSend_addCharactersInString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCharactersInString:");
}

id objc_msgSend_addGestureRecognizer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addGestureRecognizer:");
}

id objc_msgSend_addLineToPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addLineToPoint:");
}

id objc_msgSend_addSublayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSublayer:");
}

id objc_msgSend_addSubview_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addSubview:");
}

id objc_msgSend_alertControllerWithTitle_message_preferredStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alertControllerWithTitle:message:preferredStyle:");
}

id objc_msgSend_alertPresenterViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "alertPresenterViewController");
}

id objc_msgSend_animateHandleIn_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateHandleIn:");
}

id objc_msgSend_animateWithDuration_animations_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animateWithDuration:animations:completion:");
}

id objc_msgSend_animation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animation");
}

id objc_msgSend_animationWithKeyPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "animationWithKeyPath:");
}

id objc_msgSend_annotation(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "annotation");
}

id objc_msgSend_arrayWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:");
}

id objc_msgSend_beginningOfDocument(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginningOfDocument");
}

id objc_msgSend_bezierPath(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bezierPath");
}

id objc_msgSend_bezierPathWithEndPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bezierPathWithEndPoint:");
}

id objc_msgSend_boldSystemFontOfSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "boldSystemFontOfSize:");
}

id objc_msgSend_boundingMapRect(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "boundingMapRect");
}

id objc_msgSend_bounds(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bounds");
}

id objc_msgSend_center(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "center");
}

id objc_msgSend_clearColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "clearColor");
}

id objc_msgSend_colorWithAlphaComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "colorWithAlphaComponent:");
}

id objc_msgSend_contactFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contactFor:");
}

id objc_msgSend_convertCoordinate_toPointToView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertCoordinate:toPointToView:");
}

id objc_msgSend_convertPoint_toCoordinateFromView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertPoint:toCoordinateFromView:");
}

id objc_msgSend_convertRegion_toRectToView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertRegion:toRectToView:");
}

id objc_msgSend_coordinate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coordinate");
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "count");
}

id objc_msgSend_currentHandleDistance(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentHandleDistance");
}

id objc_msgSend_currentHandleDistanceNormalized(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentHandleDistanceNormalized");
}

id objc_msgSend_currentHandler(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "currentHandler");
}

id objc_msgSend_decimalDigitCharacterSet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decimalDigitCharacterSet");
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "delegate");
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_didStopDraggingHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didStopDraggingHandle:");
}

id objc_msgSend_dismissViewControllerAnimated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dismissViewControllerAnimated:completion:");
}

id objc_msgSend_displayNameFor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "displayNameFor:");
}

id objc_msgSend_distanceFromLocation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "distanceFromLocation:");
}

id objc_msgSend_drawInRect_withAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "drawInRect:withAttributes:");
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstObject");
}

id objc_msgSend_fmfOrangeColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fmfOrangeColor");
}

id objc_msgSend_fmfOverlayColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fmfOverlayColor");
}

id objc_msgSend_formatWithPhoneNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formatWithPhoneNumber:");
}

id objc_msgSend_frame(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "frame");
}

id objc_msgSend_functionWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "functionWithName:");
}

id objc_msgSend_handleFailureInMethod_object_file_lineNumber_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFailureInMethod:object:file:lineNumber:description:");
}

id objc_msgSend_handleImageView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleImageView");
}

id objc_msgSend_imageNamed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "imageNamed:");
}

id objc_msgSend_initWithImage_highlightedImage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithImage:highlightedImage:");
}

id objc_msgSend_initWithLatitude_longitude_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLatitude:longitude:");
}

id objc_msgSend_initWithTarget_action_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTarget:action:");
}

id objc_msgSend_initialize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initialize");
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "integerValue");
}

id objc_msgSend_isBeingDismissed(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isBeingDismissed");
}

id objc_msgSend_isDragging(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDragging");
}

id objc_msgSend_isEmailValidWithEmail_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEmailValidWithEmail:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isMaximum(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMaximum");
}

id objc_msgSend_isMinimum(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isMinimum");
}

id objc_msgSend_isPhoneNumberValidWithPhoneNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isPhoneNumberValidWithPhoneNumber:");
}

id objc_msgSend_keyWindow(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyWindow");
}

id objc_msgSend_layer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "layer");
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "length");
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForKey:value:table:");
}

id objc_msgSend_localizedStringFromNumber_numberStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringFromNumber:numberStyle:");
}

id objc_msgSend_locationInView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "locationInView:");
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mainBundle");
}

id objc_msgSend_mapView(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mapView");
}

id objc_msgSend_maxPoint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maxPoint");
}

id objc_msgSend_maximumRadiusNormalized(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maximumRadiusNormalized");
}

id objc_msgSend_measurementSystem(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "measurementSystem");
}

id objc_msgSend_minPoint(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minPoint");
}

id objc_msgSend_minimumInMeters(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minimumInMeters");
}

id objc_msgSend_minimumRadiusNormalized(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minimumRadiusNormalized");
}

id objc_msgSend_moveToPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "moveToPoint:");
}

id objc_msgSend_numberWithFloat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithFloat:");
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInteger:");
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_overlay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "overlay");
}

id objc_msgSend_performSelector_withObject_afterDelay_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performSelector:withObject:afterDelay:");
}

id objc_msgSend_popAnimateHandle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popAnimateHandle");
}

id objc_msgSend_popoverPresentationController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "popoverPresentationController");
}

id objc_msgSend_positionFromPosition_offset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "positionFromPosition:offset:");
}

id objc_msgSend_preferredContentSizeCategory(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "preferredContentSizeCategory");
}

id objc_msgSend_presentViewController_animated_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentViewController:animated:completion:");
}

id objc_msgSend_presentedViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentedViewController");
}

id objc_msgSend_presentingViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "presentingViewController");
}

id objc_msgSend_rangeOfCharacterFromSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfCharacterFromSet:");
}

id objc_msgSend_removeFromSuperlayer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeFromSuperlayer");
}

id objc_msgSend_removeFromSuperview(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeFromSuperview");
}

id objc_msgSend_rootViewController(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rootViewController");
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "set");
}

id objc_msgSend_setAlignment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlignment:");
}

id objc_msgSend_setAlpha_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAlpha:");
}

id objc_msgSend_setAnnotation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAnnotation:");
}

id objc_msgSend_setBarButtonItem_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBarButtonItem:");
}

id objc_msgSend_setCenter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCenter:");
}

id objc_msgSend_setConstrainMechanisms_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConstrainMechanisms:");
}

id objc_msgSend_setConstrainPersonIdType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setConstrainPersonIdType:");
}

id objc_msgSend_setCustomRadius_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCustomRadius:");
}

id objc_msgSend_setDamping_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDamping:");
}

id objc_msgSend_setDidZoomOnSelection_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDidZoomOnSelection:");
}

id objc_msgSend_setDuration_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDuration:");
}

id objc_msgSend_setFillColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFillColor:");
}

id objc_msgSend_setFillMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFillMode:");
}

id objc_msgSend_setFrame_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFrame:");
}

id objc_msgSend_setFromValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFromValue:");
}

id objc_msgSend_setHandleImageView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHandleImageView:");
}

id objc_msgSend_setHighlighted_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHighlighted:");
}

id objc_msgSend_setIsDragging_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsDragging:");
}

id objc_msgSend_setIsMaximum_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsMaximum:");
}

id objc_msgSend_setIsMinimum_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setIsMinimum:");
}

id objc_msgSend_setKeyTimes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKeyTimes:");
}

id objc_msgSend_setLineBreakMode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLineBreakMode:");
}

id objc_msgSend_setLineCap_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLineCap:");
}

id objc_msgSend_setLineCapStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLineCapStyle:");
}

id objc_msgSend_setLineDash_count_phase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLineDash:count:phase:");
}

id objc_msgSend_setLineDashPattern_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLineDashPattern:");
}

id objc_msgSend_setLineWidth_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLineWidth:");
}

id objc_msgSend_setMass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMass:");
}

id objc_msgSend_setNeedsDisplay(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNeedsDisplay");
}

id objc_msgSend_setPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPath:");
}

id objc_msgSend_setPermittedArrowDirections_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPermittedArrowDirections:");
}

id objc_msgSend_setRemovedOnCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setRemovedOnCompletion:");
}

id objc_msgSend_setSelectedTextRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelectedTextRange:");
}

id objc_msgSend_setShapeLayer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShapeLayer:");
}

id objc_msgSend_setShareActionsheet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setShareActionsheet:");
}

id objc_msgSend_setSourceRect_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSourceRect:");
}

id objc_msgSend_setSourceView_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSourceView:");
}

id objc_msgSend_setStiffness_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStiffness:");
}

id objc_msgSend_setStrokeColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStrokeColor:");
}

id objc_msgSend_setStrokeEnd_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStrokeEnd:");
}

id objc_msgSend_setStrokeStart_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStrokeStart:");
}

id objc_msgSend_setText_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setText:");
}

id objc_msgSend_setTimingFunction_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimingFunction:");
}

id objc_msgSend_setTimingFunctions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTimingFunctions:");
}

id objc_msgSend_setToValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setToValue:");
}

id objc_msgSend_setValues_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setValues:");
}

id objc_msgSend_setVelocity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setVelocity:");
}

id objc_msgSend_setWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithArray:");
}

id objc_msgSend_setZPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZPosition:");
}

id objc_msgSend_settings(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "settings");
}

id objc_msgSend_shapeLayer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shapeLayer");
}

id objc_msgSend_shapeLayerWithEndPoint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shapeLayerWithEndPoint:");
}

id objc_msgSend_shareActionsheet(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shareActionsheet");
}

id objc_msgSend_sharedApplication(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedApplication");
}

id objc_msgSend_showOfferAlertStyleInViewController_withTitle_message_popoverAnchoredAtView_orAnchoredOnBarButtonItem_withCompletion_cancelButtonTitle_cancelHandler_withStyle_showAlert_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showOfferAlertStyleInViewController:withTitle:message:popoverAnchoredAtView:orAnchoredOnBarButtonItem:withCompletion:cancelButtonTitle:cancelHandler:withStyle:showAlert:");
}

id objc_msgSend_showSimpleAlertWithTitle_message_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showSimpleAlertWithTitle:message:");
}

id objc_msgSend_showSimpleAlertWithTitle_message_okButtonTitle_sender_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showSimpleAlertWithTitle:message:okButtonTitle:sender:");
}

id objc_msgSend_showSimpleAlertWithTitle_message_okButtonTitle_sender_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "showSimpleAlertWithTitle:message:okButtonTitle:sender:handler:");
}

id objc_msgSend_standardUserDefaults(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "standardUserDefaults");
}

id objc_msgSend_state(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "state");
}

id objc_msgSend_stringByReplacingCharactersInRange_withString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByReplacingCharactersInRange:withString:");
}

id objc_msgSend_stringByReplacingOccurrencesOfString_withString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByReplacingOccurrencesOfString:withString:");
}

id objc_msgSend_stringByTrimmingCharactersInSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByTrimmingCharactersInSet:");
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_stroke(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stroke");
}

id objc_msgSend_substringToIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringToIndex:");
}

id objc_msgSend_substringWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringWithRange:");
}

id objc_msgSend_superlayer(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "superlayer");
}

id objc_msgSend_superview(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "superview");
}

id objc_msgSend_systemBlueColor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "systemBlueColor");
}

id objc_msgSend_text(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "text");
}

id objc_msgSend_textRangeFromPosition_toPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "textRangeFromPosition:toPosition:");
}

id objc_msgSend_tintedImageWithColor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tintedImageWithColor:");
}

id objc_msgSend_transform(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transform");
}

id objc_msgSend_transformedMapTypeForType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transformedMapTypeForType:");
}

id objc_msgSend_unformatWithPhoneNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unformatWithPhoneNumber:");
}

id objc_msgSend_usesMetric(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "usesMetric");
}

id objc_msgSend_valueWithCATransform3D_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithCATransform3D:");
}

id objc_msgSend_visibleMapRect(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "visibleMapRect");
}

id objc_msgSend_willStartDraggingHandle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "willStartDraggingHandle:");
}
