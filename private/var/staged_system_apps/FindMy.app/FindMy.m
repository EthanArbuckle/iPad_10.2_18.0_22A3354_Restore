uint64_t sub_1000051EC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_100053F2C(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100005228()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD aBlock[5];
  uint64_t v26;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  result = __chkstk_darwin(v6);
  v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v0[OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_isNoLocationShowing] == 1)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v11 = type metadata accessor for Logger(0);
    v12 = sub_100056D88(v11, (uint64_t)qword_1005F5748);
    v13 = Logger.logObject.getter(v12);
    v14 = static os_log_type_t.default.getter(v13);
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "FMNoLocationViewController: dismissing.", v15, 2u);
      swift_slowDealloc(v15, -1, -1);
    }

    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_visualEffectView], "setHidden:", 1);
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_darkenerView], "setHidden:", 1);
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_markerImageView], "setHidden:", 1);
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_iconImageView], "setHidden:", 1);
    sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
    v16 = (void *)static OS_dispatch_queue.main.getter();
    v17 = swift_allocObject(&unk_100546E00, 24, 7);
    *(_QWORD *)(v17 + 16) = v1;
    aBlock[4] = sub_100115B90;
    v26 = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100037DF8;
    aBlock[3] = &unk_100546E18;
    v18 = _Block_copy(aBlock);
    v19 = v26;
    v20 = v1;
    swift_release(v19);
    static DispatchQoS.unspecified.getter(v21);
    aBlock[0] = _swiftEmptyArrayStorage;
    v22 = sub_100056580();
    v23 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
    v24 = sub_1000555E4();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v23, v24, v2, v22);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v5, v18);
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return result;
}

uint64_t sub_100005524(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v5 = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for IndexPath(319);
    if (v4 <= 0x3F)
    {
      v6 = *(_QWORD *)(result - 8) + 64;
      v7 = v6;
      swift_initStructMetadata(a1, 0, 3, &v5, a1 + 32);
      return 0;
    }
  }
  return result;
}

uint64_t sub_1000055AC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_10048CEB8;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100005620(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for FMIPUnknownItem(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\b";
    v4[2] = &unk_10048BA10;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 416);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1000056AC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];

  result = type metadata accessor for IndexPath(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 0, 2, v5, a1 + 32);
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for FMConditionProvider()
{
  return objc_opt_self(_TtC6FindMy19FMConditionProvider);
}

uint64_t type metadata accessor for FMPersonImageCacheOperation()
{
  return objc_opt_self(_TtC6FindMy27FMPersonImageCacheOperation);
}

void sub_100005774(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[5];

  v2 = type metadata accessor for FMIPDevice(319);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_1000058E0(319);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = "\b";
      v6[3] = &unk_10048CA40;
      v6[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
      swift_updateClassMetadata2(a1, 256, 5, v6, a1 + 416);
    }
  }
}

uint64_t sub_10000581C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[12];

  v5[0] = "\b";
  v5[1] = "\b";
  v5[2] = &unk_100491920;
  v5[3] = &unk_100491938;
  v5[4] = &unk_100491938;
  v5[5] = &unk_100491920;
  v5[6] = &unk_100491920;
  v5[7] = (char *)&value witness table for Builtin.Int64 + 64;
  v5[8] = &unk_100491950;
  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v5[9] = *(_QWORD *)(result - 8) + 64;
    v5[10] = "\b";
    result = type metadata accessor for PeopleListPersonRow.State(319);
    if (v4 <= 0x3F)
    {
      v5[11] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 12, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

void sub_1000058E0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1005DD290)
  {
    v2 = type metadata accessor for FMIPItem(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1005DD290);
  }
}

uint64_t sub_100005934(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  result = type metadata accessor for FMIPItem(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\b";
    v4[2] = &unk_1004851D0;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 416);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1000059C0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  v4[0] = &unk_100489730;
  result = type metadata accessor for FMIPHawkeyeProductInformation.AssetType(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for FMCardContainerView()
{
  return objc_opt_self(_TtC6FindMy19FMCardContainerView);
}

uint64_t type metadata accessor for FMMapOptionsView()
{
  return objc_opt_self(_TtC6FindMy16FMMapOptionsView);
}

uint64_t sub_100005A74(uint64_t a1)
{
  _QWORD v2[16];

  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[12] = &unk_100487628;
  v2[13] = &unk_100487628;
  v2[14] = &unk_100487628;
  v2[15] = &unk_100487628;
  return swift_initClassMetadata2(a1, 0, 16, v2, a1 + 96);
}

uint64_t sub_100005ADC()
{
  uint64_t v0;

  v0 = type metadata accessor for Logger(0);
  sub_10005CFFC(v0, qword_1005F5748);
  sub_100056D88(v0, (uint64_t)qword_1005F5748);
  return Logger.init()();
}

uint64_t sub_100005B24(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_10048ECD8;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_100005B98(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1005D3180)
  {
    v2 = type metadata accessor for FMFFriend(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1005D3180);
  }
}

uint64_t sub_100005BEC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[9];

  v4[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[3] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[4] = &unk_1004826B8;
  v4[5] = (char *)&value witness table for Builtin.NativeObject + 64;
  v4[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
  result = type metadata accessor for FMIPBeaconSharingLimits(319);
  if (v3 <= 0x3F)
  {
    v4[7] = *(_QWORD *)(result - 8) + 64;
    v4[8] = (char *)&value witness table for Builtin.BridgeObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 9, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_100005C88(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  Swift::UInt64 v14;
  Swift::Int v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36[9];

  v3 = v2;
  v5 = *v2;
  if (*(_QWORD *)(*v2 + 24) <= a1)
    v6 = a1;
  else
    v6 = *(_QWORD *)(*v2 + 24);
  sub_100053F2C(&qword_1005D8EB8);
  v7 = static _DictionaryStorage.resize(original:capacity:move:)(v5, v6, a2);
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v33 = v3;
    v9 = 0;
    v35 = (_QWORD *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v34 = (unint64_t)(v10 + 63) >> 6;
    v13 = v7 + 64;
    while (1)
    {
      if (v12)
      {
        v20 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v21 = v20 | (v9 << 6);
      }
      else
      {
        v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
          return;
        }
        if (v22 >= v34)
          goto LABEL_39;
        v23 = v35[v22];
        ++v9;
        if (!v23)
        {
          v9 = v22 + 1;
          if (v22 + 1 >= v34)
            goto LABEL_39;
          v23 = v35[v9];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v34)
            {
LABEL_39:
              if ((a2 & 1) == 0)
              {
                swift_release(v5);
                v3 = v33;
                goto LABEL_46;
              }
              v32 = 1 << *(_BYTE *)(v5 + 32);
              if (v32 >= 64)
                bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v35 = -1 << v32;
              v3 = v33;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v23 = v35[v24];
            if (!v23)
            {
              while (1)
              {
                v9 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_48;
                if (v9 >= v34)
                  goto LABEL_39;
                v23 = v35[v9];
                ++v24;
                if (v23)
                  goto LABEL_36;
              }
            }
            v9 = v24;
          }
        }
LABEL_36:
        v12 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      v29 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v21);
      v30 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v21);
      if ((a2 & 1) == 0)
        v31 = v30;
      Hasher.init(_seed:)(v36, *(_QWORD *)(v8 + 40));
      if (v29)
        v14 = 0x4050800000000000;
      else
        v14 = 0x4043000000000000;
      Hasher._combine(_:)(v14);
      v15 = Hasher._finalize()();
      v16 = -1 << *(_BYTE *)(v8 + 32);
      v17 = v15 & ~v16;
      v18 = v17 >> 6;
      if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_47;
          }
          v27 = v18 == v26;
          if (v18 == v26)
            v18 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v18);
        }
        while (v28 == -1);
        v19 = __clz(__rbit64(~v28)) + (v18 << 6);
      }
      *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(_BYTE *)(*(_QWORD *)(v8 + 48) + v19) = v29;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v19) = v30;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  swift_release(v5);
LABEL_46:
  *v3 = v8;
}

uint64_t sub_100005F64(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[6];

  result = type metadata accessor for FMIPUnknownItem(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_100485B68;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = &unk_100485B80;
    v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 416);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100005FF4(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[7];

  v4[0] = &unk_100484E58;
  v4[1] = &unk_100484E58;
  v4[2] = &unk_100484E58;
  v4[3] = &unk_100484E58;
  v4[4] = &unk_100484E70;
  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[5] = *(_QWORD *)(result - 8) + 64;
    v4[6] = &unk_100484E88;
    swift_initEnumMetadataMultiPayload(a1, 256, 7, v4);
    return 0;
  }
  return result;
}

uint64_t sub_1000060D0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_10048A998;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for FMDefaultAuthenticationUIProvider()
{
  return objc_opt_self(_TtC6FindMy33FMDefaultAuthenticationUIProvider);
}

void sub_100006164()
{
  NSString v0;
  char v1;

  v0 = String._bridgeToObjectiveC()();
  v1 = MGGetBoolAnswer();

  byte_1005F5E31 = v1;
}

uint64_t sub_1000061B0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload(a1, 256, *(_QWORD *)(result - 8) + 64, 10);
    return 0;
  }
  return result;
}

uint64_t sub_100006204(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_10048B138;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

id sub_100006278(unsigned int a1)
{
  uint64_t v1;
  id v2;
  id v4;

  if ((a1 & 1) != 0)
  {
    if ((a1 & 0x10000) == 0)
      return objc_msgSend(objc_allocWithZone((Class)MKImageryMapConfiguration), "initWithElevationStyle:", 1);
    v1 = (a1 >> 8) & 1;
    v2 = objc_msgSend(objc_allocWithZone((Class)MKHybridMapConfiguration), "initWithElevationStyle:", 1);
  }
  else
  {
    v1 = (a1 >> 8) & 1;
    v2 = objc_msgSend(objc_allocWithZone((Class)MKStandardMapConfiguration), "initWithElevationStyle:emphasisStyle:", 1, 0);
  }
  v4 = v2;
  objc_msgSend(v2, "setShowsTraffic:", v1);
  return v4;
}

uint64_t type metadata accessor for FMPassthroughView()
{
  return objc_opt_self(_TtC6FindMy17FMPassthroughView);
}

uint64_t type metadata accessor for FMTerminalView()
{
  return objc_opt_self(_TtC6FindMy14FMTerminalView);
}

uint64_t sub_10000635C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 416);
    if (!result)
      return 0;
  }
  return result;
}

void sub_1000063D8(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void *);
  id v5;

  v4 = *(void (**)(void *))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4(a2);
  swift_release(v3);

}

id sub_10000642C()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)_UIVisualEffectBackdropView), "init");
  qword_1005F59F8 = (uint64_t)result;
  return result;
}

uint64_t type metadata accessor for FMLocationProvider()
{
  return objc_opt_self(_TtC6FindMy18FMLocationProvider);
}

uint64_t sub_1000064D4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject(*v2);
  *v2 = v5;
  v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
      return result;
    v7 = 1;
  }
  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v10 = v5;
    else
      v10 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v8 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1)
    v9 = a1;
  else
    v9 = v8;
  result = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v7, v9, a2 & 1, v5);
  *v2 = result;
  return result;
}

unint64_t sub_100006590()
{
  unint64_t result;
  uint64_t My;

  result = qword_1005D9690;
  if (!qword_1005D9690)
  {
    My = type metadata accessor for Feature.FindMy(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for Feature.FindMy, My);
    atomic_store(result, (unint64_t *)&qword_1005D9690);
  }
  return result;
}

uint64_t sub_1000065D8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];

  result = type metadata accessor for FMIPDevice(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for FMIPDeviceImageSize(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 2, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for FMPeopleProvider()
{
  return objc_opt_self(_TtC6FindMy16FMPeopleProvider);
}

uint64_t sub_10000667C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[3];

  result = type metadata accessor for URL(319);
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for FMIPHawkeyeProductInformation.AssetType(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      v5[2] = &unk_1004912D0;
      swift_initStructMetadata(a1, 256, 3, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for FMStatusBar()
{
  return objc_opt_self(_TtC6FindMy11FMStatusBar);
}

uint64_t type metadata accessor for FMInitialCardController()
{
  return objc_opt_self(_TtC6FindMy23FMInitialCardController);
}

_QWORD *sub_1000067A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  __n128 v34;
  __n128 v35;
  void (*v36)(char *, char *, uint64_t, __n128);
  char *v37;
  char *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v4 = type metadata accessor for UUID(0);
  v56 = *(_QWORD *)(v4 - 8);
  v57 = v4;
  __chkstk_darwin(v4);
  v55 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FMIPItem(0);
  v61 = *(_QWORD *)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v50 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v42 - v10;
  v12 = __chkstk_darwin(v9);
  v45 = (char *)&v42 - v13;
  __chkstk_darwin(v12);
  v44 = (char *)&v42 - v14;
  v52 = *(_QWORD *)(a1 + 16);
  if (!v52)
    return _swiftEmptyArrayStorage;
  v15 = *(_QWORD *)(type metadata accessor for FMIPBeaconShare(0) - 8);
  v16 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v17 = *(_QWORD *)(a2 + 16);
  v48 = *(_QWORD *)(v15 + 72);
  v49 = v16;
  v43 = a1;
  swift_bridgeObjectRetain(a1);
  v18 = 0;
  v19 = _swiftEmptyArrayStorage;
  v46 = v17;
  v47 = a2;
  v20 = v55;
  do
  {
    if (v17)
    {
      v53 = v18;
      v54 = v19;
      v59 = v49 + v48 * v18;
      v21 = v61;
      v51 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
      v22 = a2 + v51;
      swift_bridgeObjectRetain(a2);
      v60 = *(_QWORD *)(v21 + 72);
      v58 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 16);
      v23 = v17;
      while (1)
      {
        v24 = v6;
        v25 = v58(v11, v22, v6);
        v26 = FMIPItem.identifier.getter(v25);
        v28 = v27;
        v29 = FMIPBeaconShare.beaconIdentifier.getter(v26);
        v30 = UUID.uuidString.getter(v29);
        v32 = v31;
        (*(void (**)(char *, uint64_t))(v56 + 8))(v20, v57);
        if (v26 == v30 && v28 == v32)
        {
          a2 = v47;
          swift_bridgeObjectRelease(v47);
          swift_bridgeObjectRelease(v28);
          goto LABEL_15;
        }
        v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v28, v30, v32, 0);
        swift_bridgeObjectRelease(v32);
        v34 = swift_bridgeObjectRelease(v28);
        if ((v33 & 1) != 0)
          break;
        v6 = v24;
        (*(void (**)(char *, uint64_t, __n128))(v61 + 8))(v11, v24, v34);
        v22 += v60;
        if (!--v23)
        {
          a2 = v47;
          swift_bridgeObjectRelease(v47);
          v17 = v46;
          v19 = v54;
          goto LABEL_4;
        }
      }
      a2 = v47;
      v28 = v47;
LABEL_15:
      v6 = v24;
      v17 = v46;
      v35 = swift_bridgeObjectRelease(v28);
      v36 = *(void (**)(char *, char *, uint64_t, __n128))(v61 + 32);
      v37 = v45;
      v36(v45, v11, v6, v35);
      v38 = v44;
      ((void (*)(char *, char *, uint64_t))v36)(v44, v37, v6);
      ((void (*)(char *, char *, uint64_t))v36)(v50, v38, v6);
      v19 = v54;
      if ((swift_isUniquelyReferenced_nonNull_native(v54) & 1) == 0)
        v19 = (_QWORD *)sub_100070588(0, v19[2] + 1, 1, (unint64_t)v19);
      v40 = v19[2];
      v39 = v19[3];
      if (v40 >= v39 >> 1)
        v19 = (_QWORD *)sub_100070588(v39 > 1, v40 + 1, 1, (unint64_t)v19);
      v19[2] = v40 + 1;
      ((void (*)(char *, char *, uint64_t))v36)((char *)v19 + v51 + v40 * v60, v50, v6);
LABEL_4:
      v18 = v53;
    }
    ++v18;
  }
  while (v18 != v52);
  swift_bridgeObjectRelease(v43);
  return v19;
}

id sub_100006B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  char v9;
  uint64_t v11;

  v4 = type metadata accessor for FMSelectedSection(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void **)(a1 + OBJC_IVAR____TtC6FindMy16FMMapOptionsView_mapSettingsButton);
  swift_storeEnumTagMultiPayload(v6, v8, 15);
  sub_100024F80(a2, (uint64_t)v6);
  LOBYTE(a2) = v9;
  sub_100024F00((uint64_t)v6);
  return objc_msgSend(v7, "setSelected:", a2 & 1);
}

uint64_t sub_100006C5C(uint64_t a1, unint64_t *a2, _QWORD *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a2;
  if (!*a2)
  {
    v5 = objc_opt_self(*a3);
    result = swift_getObjCClassMetadata(v5);
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_100006C94(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_10053F650, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 5)
    return 5;
  else
    return v3;
}

uint64_t type metadata accessor for FMNoLocationBackgroundView()
{
  return objc_opt_self(_TtC6FindMy26FMNoLocationBackgroundView);
}

uint64_t type metadata accessor for FMApplication()
{
  return objc_opt_self(_TtC6FindMy13FMApplication);
}

void sub_100006D70(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1005D3F50)
  {
    v2 = type metadata accessor for IndexPath(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1005D3F50);
  }
}

void sub_100006DC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  id v10;
  NSString v11;
  uint64_t v12;

  v2 = v1;
  v4 = sub_100053F2C((uint64_t *)&unk_1005E59F0);
  __chkstk_darwin(v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005DA58(a1, (uint64_t)v6);
  v7 = type metadata accessor for FMFPreferences(0);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1000051EC((uint64_t)v6, (uint64_t *)&unk_1005E59F0);
  }
  else
  {
    v9 = FMFPreferences.hideLocation.getter();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
    if ((v9 & 1) != 0)
    {
      v10 = *(id *)(v2 + OBJC_IVAR____TtC6FindMy8FMTabBar_meTab);
      v11 = String._bridgeToObjectiveC()();
      objc_msgSend(v10, "setBadgeValue:", v11);

      return;
    }
  }
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC6FindMy8FMTabBar_meTab), "setBadgeValue:", 0);
}

uint64_t sub_100006EF8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[29];

  v5[0] = &unk_1004827F8;
  result = type metadata accessor for Date(319);
  if (v3 <= 0x3F)
  {
    v5[1] = *(_QWORD *)(result - 8) + 64;
    v5[2] = &unk_1004827F8;
    v5[3] = &unk_100482810;
    v5[4] = &unk_100482828;
    v5[5] = &unk_100482828;
    v5[6] = &unk_100482840;
    v5[7] = &unk_100482840;
    v5[8] = &unk_100482840;
    v5[9] = (char *)&value witness table for Builtin.Int64 + 64;
    v5[10] = &unk_100482810;
    v5[11] = &unk_100482810;
    v5[12] = (char *)&value witness table for Builtin.Int64 + 64;
    v5[13] = (char *)&value witness table for Builtin.Int64 + 64;
    v5[14] = &unk_1004827F8;
    v5[15] = &unk_100482810;
    v5[16] = &unk_100482810;
    v5[17] = &unk_100482810;
    v5[18] = &unk_100482810;
    v5[19] = &unk_100482810;
    v5[20] = &unk_100482828;
    v5[21] = &unk_100482828;
    v5[22] = &unk_100482810;
    v5[23] = &unk_100482810;
    v5[24] = &unk_100482858;
    v5[25] = &unk_100482810;
    v5[26] = &unk_100482810;
    v5[27] = &unk_100482810;
    result = type metadata accessor for PeopleListPersonRow.State(319);
    if (v4 <= 0x3F)
    {
      v5[28] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 256, 29, v5, a1 + 16);
      return 0;
    }
  }
  return result;
}

uint64_t sub_100006FF0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_10048E518;
    result = swift_updateClassMetadata2(a1, 256, 2, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_100007064(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[7];

  v10[0] = &unk_100487F38;
  sub_100007178(319, &qword_1005DADF8, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPSeparationLocation);
  if (v3 <= 0x3F)
  {
    v10[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_100007178(319, (unint64_t *)&qword_1005E2C20, (uint64_t (*)(uint64_t))&type metadata accessor for UUID);
    if (v5 <= 0x3F)
    {
      v10[2] = *(_QWORD *)(v4 - 8) + 64;
      sub_100007178(319, (unint64_t *)&qword_1005D7210, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
      if (v7 <= 0x3F)
      {
        v10[3] = *(_QWORD *)(v6 - 8) + 64;
        v10[4] = &unk_100487F50;
        v10[5] = &unk_100487F50;
        sub_100007178(319, (unint64_t *)&unk_1005DAE00, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPUTAlertEvent);
        if (v9 <= 0x3F)
        {
          v10[6] = *(_QWORD *)(v8 - 8) + 64;
          swift_initStructMetadata(a1, 256, 7, v10, a1 + 16);
        }
      }
    }
  }
}

void sub_100007178(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v5 = a3(255);
    v6 = type metadata accessor for Optional(a1, v5);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_10000723C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t DeviceIntent;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  _QWORD aBlock[5];
  uint64_t v24;

  v2 = type metadata accessor for FMIPDevice(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100053F2C(&qword_1005D6710);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)aBlock - v10;
  sub_100007464(a1, (uint64_t)aBlock - v10, &qword_1005D6710);
  FMIPManager.selectedDevice.setter(v11);
  sub_100007464(a1, (uint64_t)v9, &qword_1005D6710);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2) == 1)
    return sub_1000051EC((uint64_t)v9, &qword_1005D6710);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
  DeviceIntent = type metadata accessor for LocateDeviceIntent();
  v14 = FMIPDevice.identifier.getter(DeviceIntent);
  v16 = v15;
  v17 = FMIPDevice.locateDeviceClass.getter();
  v18 = FMIPDevice.name.getter();
  v20 = LocateDeviceIntent.__allocating_init(identifier:class:name:)(v14, v16, v17, v18, v19);
  v21 = objc_msgSend(objc_allocWithZone((Class)INInteraction), "initWithIntent:response:", v20, 0);
  aBlock[4] = sub_100183EBC;
  v24 = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000063D8;
  aBlock[3] = &unk_100544130;
  v22 = _Block_copy(aBlock);
  objc_msgSend(v21, "donateInteractionWithCompletion:", v22, swift_release(v24).n128_f64[0]);
  _Block_release(v22);

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100007464(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100053F2C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100007550(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, uint64_t))
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v18 = a1;
    else
      v18 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v5 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v6 < 0)
    v19 = *v2;
  else
    v19 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v2);
  v7 = _CocoaArrayWrapper.endIndex.getter(v19);
  swift_bridgeObjectRelease(v6);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_29;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v2);
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if ((unint64_t)v6 >> 62)
    goto LABEL_31;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain(v6);
    v6 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v7, v11, 1, v6);
    swift_bridgeObjectRelease(*v2);
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v6 < 0)
      v20 = v6;
    else
      v20 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v6);
    v11 = _CocoaArrayWrapper.endIndex.getter(v20);
    swift_bridgeObjectRelease(v6);
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    v17 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v17);
  }
  __break(1u);
  return result;
}

void sub_1000077D0()
{
  void *v0;
  NSString v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v1 = String._bridgeToObjectiveC()();
  v2 = objc_msgSend(v0, "dataForKey:", v1);

  if (v2)
  {
    v3 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v5 = v4;

    v6 = type metadata accessor for JSONDecoder(0);
    swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
    v7 = JSONDecoder.init()();
    v8 = sub_1001E16F4();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)(&v9, &type metadata for FMMapMode.Mode, v3, v5, &type metadata for FMMapMode.Mode, v8);
    sub_100027BDC(v3, v5);
    swift_release(v7);
  }
}

double sub_1000078B8(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  objc_class *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  char v13;
  double result;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[24];
  _BYTE v18[24];
  objc_super v19;

  v3 = type metadata accessor for FMSelectedSection(0);
  v4 = __chkstk_darwin(v3);
  v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v8 = &v17[-v7];
  v9 = (objc_class *)type metadata accessor for FMMainViewController();
  v19.receiver = v1;
  v19.super_class = v9;
  objc_msgSendSuper2(&v19, "viewWillAppear:", a1 & 1);
  v10 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator];
  v11 = qword_1005D1F68;
  v12 = *(id *)(v10 + 16);
  if (v11 != -1)
    swift_once(&qword_1005D1F68, sub_100006164);
  if (byte_1005F5E31 != 1)
  {

    goto LABEL_7;
  }
  v13 = *((_BYTE *)v12 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_FMFRestricted);

  if ((v13 & 1) != 0)
  {
LABEL_7:
    v15 = *(_QWORD *)(v10 + 56);
    swift_storeEnumTagMultiPayload(v8, v3, 11);
    v16 = v15 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
    swift_beginAccess(v15 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, v18, 0, 0);
    sub_100024F3C(v16, (uint64_t)v6);
    swift_beginAccess(v16, v17, 33, 0);
    swift_retain(v15);
    sub_100009DF8((uint64_t)v8, v16);
    swift_endAccess(v17);
    sub_10004C8A4((uint64_t)v6);
    sub_100024F00((uint64_t)v8);
    sub_100024F00((uint64_t)v6);
    *(_QWORD *)&result = swift_release(v15).n128_u64[0];
  }
  return result;
}

void sub_100007B48(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  NSString v5;
  id v6;

  v5 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend((id)objc_opt_self(UIColor), "colorNamed:", v5);

  *a4 = v6;
}

uint64_t sub_100007BAC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  void *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = &unk_100488940;
  result = type metadata accessor for FMIPDiscoveredAccessory(319);
  if (v3 <= 0x3F)
  {
    v7 = *(_QWORD *)(result - 8) + 64;
    v8 = (char *)&value witness table for Builtin.BridgeObject + 64;
    v9 = v7;
    v10 = v7;
    result = type metadata accessor for UUID(319);
    if (v4 <= 0x3F)
    {
      v11 = *(_QWORD *)(result - 8) + 64;
      result = type metadata accessor for FMIPAccessoryError(319);
      if (v5 <= 0x3F)
      {
        v12 = *(_QWORD *)(result - 8) + 64;
        swift_initEnumMetadataMultiPayload(a1, 256, 7, &v6);
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_100007C64(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t i;
  id v5;
  void *v6;
  uint64_t v7;

  if (!((unint64_t)a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(a1);
    if (v2)
      goto LABEL_3;
    return swift_bridgeObjectRelease(a1);
  }
  if (a1 < 0)
    v7 = a1;
  else
    v7 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  result = _CocoaArrayWrapper.endIndex.getter(v7);
  v2 = result;
  if (!result)
    return swift_bridgeObjectRelease(a1);
LABEL_3:
  if (v2 >= 1)
  {
    for (i = 0; i != v2; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      else
        v5 = *(id *)(a1 + 8 * i + 32);
      v6 = v5;
      objc_msgSend(v5, "setAlpha:", 1.0);

    }
    return swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

uint64_t sub_100007D30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 88);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 88);
  }
  else
  {
    v3 = type metadata accessor for FMURLHandler();
    v2 = swift_allocObject(v3, 24, 7);
    *(_QWORD *)(v2 + 16) = v0;
    *(_QWORD *)(v0 + 88) = v2;
    swift_retain(v0);
    swift_retain(v2);
    v1 = 0;
  }
  swift_retain(v1);
  return v2;
}

uint64_t type metadata accessor for FMNoLocationViewController()
{
  return objc_opt_self(_TtC6FindMy26FMNoLocationViewController);
}

uint64_t type metadata accessor for FMMainViewController()
{
  return objc_opt_self(_TtC6FindMy20FMMainViewController);
}

uint64_t sub_100007E98(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[11];

  v4[0] = &unk_10048B740;
  result = type metadata accessor for Optional(319, *(_QWORD *)(a1 + 376));
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[6] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[7] = (char *)&value witness table for Builtin.Int64 + 64;
    v4[8] = &unk_10048B758;
    v4[9] = &unk_10048B758;
    v4[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
    result = swift_initClassMetadata2(a1, 0, 11, v4, a1 + 392);
    if (!result)
      return 0;
  }
  return result;
}

id sub_100007F8C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC6FindMy8FMTabBar____lazy_storage___largeContentInteraction;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy8FMTabBar____lazy_storage___largeContentInteraction);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC6FindMy8FMTabBar____lazy_storage___largeContentInteraction);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone((Class)UILargeContentViewerInteraction), "initWithDelegate:", v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

uint64_t sub_100008000(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_100008040(uint64_t a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  char v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v7 = a2 & 1;
  v8 = *v3;
  v10 = sub_100036280(a2 & 1);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_10017B738();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];

      *(_QWORD *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = v7;
    *(_QWORD *)(v16[7] + 8 * v10) = a1;
    v20 = v16[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return;
    }
    goto LABEL_14;
  }
  sub_100005C88(v13, a3 & 1);
  v18 = sub_100036280(v7);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = v18;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for FMPersonImageSize);
  __break(1u);
}

id sub_100008174()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  objc_class *v6;
  _BYTE *v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  objc_super v13;
  uint64_t v14;

  v1 = v0;
  v2 = sub_100053F2C(&qword_1005D2F10);
  v3 = swift_allocObject(v2, 40, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100481B00;
  v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardContainer];
  *(_QWORD *)(v3 + 32) = v4;
  v14 = v3;
  specialized Array._endMutation()(v3);
  v5 = v14;
  v6 = (objc_class *)type metadata accessor for FMPassthroughView();
  v7 = objc_allocWithZone(v6);
  v7[OBJC_IVAR____TtC6FindMy17FMPassthroughView_enabled] = 1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC6FindMy17FMPassthroughView_exemptViews] = v5;
  v13.receiver = v7;
  v13.super_class = v6;
  v8 = v4;
  v9 = objc_msgSendSuper2(&v13, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v10 = OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_passthroughView;
  v11 = *(void **)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_passthroughView];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_passthroughView] = v9;

  return objc_msgSend(v1, "setView:", *(_QWORD *)&v1[v10]);
}

uint64_t sub_10000826C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v6 = a3;
    v3 = a2;
    v5 = a1;
    v7 = *v4;
    if (!((unint64_t)*v4 >> 62))
    {
      v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v9 >= a2)
        goto LABEL_4;
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
  }
  if (v7 < 0)
    v28 = v7;
  else
    v28 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v9 = _CocoaArrayWrapper.endIndex.getter(v28);
  swift_bridgeObjectRelease(v7);
  if (v9 < v3)
    goto LABEL_34;
LABEL_4:
  v7 = v3 - v5;
  if (__OFSUB__(v3, v5))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v8 = v5 - v3;
  if (__OFSUB__(0, v7))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v9 = *v4;
  if (!((unint64_t)*v4 >> 62))
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    v11 = v10 - v7;
    if (!__OFADD__(v10, v8))
      goto LABEL_8;
LABEL_42:
    __break(1u);
LABEL_43:
    if (v9 < 0)
      v30 = v9;
    else
      v30 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v14 = _CocoaArrayWrapper.endIndex.getter(v30);
    swift_bridgeObjectRelease(v9);
    v9 = *v4;
    goto LABEL_15;
  }
LABEL_37:
  if (v9 < 0)
    v29 = v9;
  else
    v29 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v9);
  v10 = _CocoaArrayWrapper.endIndex.getter(v29);
  swift_bridgeObjectRelease(v9);
  v11 = v10 + v8;
  if (__OFADD__(v10, v8))
    goto LABEL_42;
LABEL_8:
  v9 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v4);
  *v4 = v9;
  v10 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v9 & 0x8000000000000000) == 0 && (v9 & 0x4000000000000000) == 0)
  {
    v13 = v9 & 0xFFFFFFFFFFFFFF8;
    if (v11 <= *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v10 = 1;
  }
  if ((unint64_t)v9 >> 62)
    goto LABEL_43;
  v14 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v11)
    v14 = v11;
  swift_bridgeObjectRetain(v9);
  v15 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v10, v14, 1, v9);
  v16 = *v4;
  *v4 = v15;
  swift_bridgeObjectRelease(v16);
  v13 = *v4 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v17 = v13 + 32;
  v18 = (char *)(v13 + 32 + 8 * v5);
  v19 = v6(0);
  v20 = (void *)swift_arrayDestroy(v18, v7, v19);
  if (!v8)
    return specialized Array._endMutation()(v20);
  v21 = *v4;
  if (!((unint64_t)*v4 >> 62))
  {
    v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    v23 = v22 - v3;
    if (!__OFSUB__(v22, v3))
      goto LABEL_21;
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v21 < 0)
    v31 = *v4;
  else
    v31 = v21 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v4);
  v32 = _CocoaArrayWrapper.endIndex.getter(v31);
  v20 = (void *)swift_bridgeObjectRelease(v21);
  v23 = v32 - v3;
  if (__OFSUB__(v32, v3))
    goto LABEL_52;
LABEL_21:
  if ((v23 & 0x8000000000000000) == 0)
  {
    v24 = (char *)(v17 + 8 * v3);
    if (v5 != v3 || v18 >= &v24[8 * v23])
      v20 = memmove(v18, v24, 8 * v23);
    v3 = *v4;
    if (!((unint64_t)*v4 >> 62))
    {
      v25 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      v26 = v25 + v8;
      if (!__OFADD__(v25, v8))
      {
LABEL_27:
        *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10) = v26;
        return specialized Array._endMutation()(v20);
      }
      goto LABEL_58;
    }
LABEL_53:
    if (v3 < 0)
      v33 = v3;
    else
      v33 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    v34 = _CocoaArrayWrapper.endIndex.getter(v33);
    v20 = (void *)swift_bridgeObjectRelease(v3);
    v26 = v34 + v8;
    if (!__OFADD__(v34, v8))
      goto LABEL_27;
LABEL_58:
    __break(1u);
  }
  v35 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v35, 1046, 0);
  __break(1u);
  return result;
}

void sub_100008568(uint64_t a1, id *a2, BOOL *a3)
{
  id v5;
  void *v6;
  id v7;
  unsigned int v8;
  BOOL v9;

  v5 = objc_msgSend((id)objc_opt_self(MCProfileConnection), "sharedConnection");
  if (v5)
  {
    v6 = v5;
    v7 = *a2;
    v8 = objc_msgSend(v6, "effectiveBoolValueForSetting:", v7);

    v9 = v8 == 2;
  }
  else
  {
    v9 = 0;
  }
  *a3 = v9;
}

void sub_1000086B4(void *a1, void *a2, void *a3)
{
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  _QWORD v10[5];
  uint64_t v11;

  v5 = objc_msgSend(a1, "authorizationStatus");
  v6 = swift_allocObject(&unk_100542738, 32, 7);
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = a3;
  v10[4] = sub_10005F6D8;
  v11 = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_100008B40;
  v10[3] = &unk_100542750;
  v7 = _Block_copy(v10);
  v8 = v11;
  v9 = a3;
  objc_msgSend(a2, "getNotificationSettingsWithCompletionHandler:", v7, swift_release(v8).n128_f64[0]);
  _Block_release(v7);
}

uint64_t sub_10000877C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v6 = type metadata accessor for FMIPNotificationAuthLaunchEvent(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin();
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  FMIPNotificationAuthLaunchEvent.init(findMyNotificationAuthStatus:utAlertAuthStatus:)(a2, objc_msgSend(a1, "authorizationStatus"));
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + OBJC_IVAR____TtC6FindMy13FMAppDelegate_mediator) + 24);
  swift_retain(v10);
  FMIPManager.enqueue(notificationLaunchEvent:)(v9);
  swift_release(v10);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_10000884C()
{
  void *v0;
  NSString v1;
  NSString v2;

  v0 = (void *)objc_opt_self(FMPreferencesUtil);
  v1 = String._bridgeToObjectiveC()();
  v2 = String._bridgeToObjectiveC()();
  LOBYTE(v0) = objc_msgSend(v0, "BOOLForKey:inDomain:", v1, v2);

  byte_1005F5238 = (char)v0;
}

uint64_t sub_1000088EC(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;
  _QWORD v5[2];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v5[0] = *(_QWORD *)(result - 8) + 64;
    result = type metadata accessor for IndexPath(319);
    if (v4 <= 0x3F)
    {
      v5[1] = *(_QWORD *)(result - 8) + 64;
      swift_initStructMetadata(a1, 0, 2, v5, a1 + 32);
      return 0;
    }
  }
  return result;
}

double sub_100008974()
{
  id v0;
  double v1;
  CGFloat v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  BOOL v9;
  double v10;
  double result;
  CGRect v12;

  v0 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v0, "bounds");
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;

  v12.origin.x = v2;
  v12.origin.y = v4;
  v12.size.width = v6;
  v12.size.height = v8;
  v9 = CGRectGetWidth(v12) > 385.0;
  v10 = 20.0;
  if (!v9)
    v10 = 16.0;
  xmmword_1005F5940 = xmmword_10048B810;
  unk_1005F5950 = vdupq_n_s64(0x4075400000000000uLL);
  xmmword_1005F5960 = xmmword_10048B820;
  qword_1005F5970 = 0x4020000000000000;
  qword_1005F5978 = *(_QWORD *)&v10;
  qword_1005F5980 = 0;
  result = 1000.0;
  *(_OWORD *)algn_1005F5988 = xmmword_10048B830;
  return result;
}

id sub_100008A58()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  objc_super v6;

  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy13FMAppDelegate_application] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy13FMAppDelegate_window] = 0;
  v1 = OBJC_IVAR____TtC6FindMy13FMAppDelegate_mediator;
  v2 = type metadata accessor for FMMediator();
  swift_allocObject(v2, 96, 7);
  v3 = v0;
  *(_QWORD *)&v0[v1] = sub_100022ABC();
  v3[OBJC_IVAR____TtC6FindMy13FMAppDelegate_didHandleOpenURL] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC6FindMy13FMAppDelegate_alertQueue] = _swiftEmptyArrayStorage;
  v3[OBJC_IVAR____TtC6FindMy13FMAppDelegate_isShowingAlert] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC6FindMy13FMAppDelegate_mainViewController] = 0;
  v4 = OBJC_IVAR____TtC6FindMy13FMAppDelegate_dateFormatter;
  *(_QWORD *)&v3[v4] = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");

  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for FMAppDelegate();
  return objc_msgSendSuper2(&v6, "init");
}

void sub_100008B40(uint64_t a1, void *a2)
{
  uint64_t v3;
  void (*v4)(void);
  id v5;

  v4 = *(void (**)(void))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = a2;
  v4();
  swift_release(v3);

}

void sub_100008B90()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(CNAvatarImageRendererSettings), "defaultSettings");
  v1 = objc_msgSend(objc_allocWithZone((Class)CNAvatarImageRenderer), "initWithSettings:", v0);

  qword_1005D38E0 = (uint64_t)v1;
}

void sub_100008C5C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _BYTE v14[32];
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;

  v2 = type metadata accessor for FMIPDevice(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8);
    sub_1000058E0(319);
    if (v6 <= 0x3F)
    {
      v7 = v4 + 64;
      swift_getTupleTypeLayout2(v14, v7, *(_QWORD *)(v5 - 8) + 64);
      v15[0] = v14;
      v15[1] = v7;
      v8 = type metadata accessor for FMFFriend(319);
      if (v9 <= 0x3F)
      {
        v15[2] = *(_QWORD *)(v8 - 8) + 64;
        v10 = type metadata accessor for FMIPItem(319);
        if (v11 <= 0x3F)
        {
          v16 = *(_QWORD *)(v10 - 8) + 64;
          v17 = v16;
          v18 = &unk_100487D08;
          v19 = &unk_100487D08;
          v20 = v7;
          v12 = type metadata accessor for FMIPUnknownItem(319);
          if (v13 <= 0x3F)
          {
            v21 = *(_QWORD *)(v12 - 8) + 64;
            v22 = &unk_100487D20;
            swift_initEnumMetadataMultiPayload(a1, 256, 10, v15);
          }
        }
      }
    }
  }
}

double sub_100008DD0()
{
  id v0;
  id v1;
  double result;

  v0 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 1100);
  v1 = objc_msgSend((id)objc_opt_self(UIColor), "separatorColor");
  xmmword_1005F51C0 = xmmword_1004875B0;
  unk_1005F51D0 = xmmword_1004875C0;
  xmmword_1005F51E0 = xmmword_1004875D0;
  *(_OWORD *)&qword_1005F51F0 = xmmword_1004875E0;
  result = 10.0;
  xmmword_1005F5200 = xmmword_1004875F0;
  *(_OWORD *)&qword_1005F5210 = xmmword_1004875F0;
  qword_1005F5220 = 0x4000000000000000;
  qword_1005F5228 = (uint64_t)v0;
  qword_1005F5230 = (uint64_t)v1;
  return result;
}

uint64_t sub_100008E78()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100008EA4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100008ED8(uint64_t (*a1)(_QWORD), void (*a2)(_QWORD), void (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v6 = a1(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = v8 | 7;
  v11 = (*(_QWORD *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v3 + 24));
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3 + v9, v6);
  a2(*(_QWORD *)(v3 + v11));
  a3(*(_QWORD *)(v3 + v12));
  return swift_deallocObject(v3, v12 + 8, v10);
}

uint64_t sub_100008F8C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100008FB8()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100008FE4()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100009010()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));

  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10000904C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = *(_QWORD *)(v2 + 64) + v4 + 1;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1000090C4(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 24));
  return swift_deallocObject(v1, 32, 7);
}

uint64_t sub_1000090FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for FMIPDevice(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10000915C(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release(*(_QWORD *)(v1 + 16));
  a1(*(_QWORD *)(v1 + 24));
  return swift_deallocObject(v1, 32, 7);
}

void sub_100009194(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_1005DD830 + 8));
  swift_unknownObjectRelease(*(_QWORD *)(a1 + qword_1005DD838));

  swift_release(*(_QWORD *)(a1 + qword_1005DD870));
}

void sub_100009250()
{
  char *v0;
  void *v1;
  uint64_t v2;
  char *v3;
  uint64_t *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_class *v10;
  uint64_t v11;
  _BYTE v12[24];
  objc_super v13;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy14FMTerminalView_conditionSubcription];
  if (!v2)
    goto LABEL_5;
  v3 = *(char **)(*(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy15FMEmptyListView_mediator] + 16);
  v4 = (uint64_t *)&v3[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions];
  swift_beginAccess(&v3[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions], v12, 33, 0);
  swift_retain(v2);
  v5 = v3;
  v6 = sub_10005D558(v4, v2);
  v7 = v6;
  v8 = *v4;
  if ((unint64_t)*v4 >> 62)
  {
    if (v8 < 0)
      v11 = *v4;
    else
      v11 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v4);
    v9 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(v8);
    if (v9 >= v7)
      goto LABEL_4;
  }
  else
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9 >= v6)
    {
LABEL_4:
      sub_10005D32C(v7, v9);
      swift_endAccess(v12);
      swift_release(v2);

LABEL_5:
      v10 = (objc_class *)type metadata accessor for FMTerminalView();
      v13.receiver = v1;
      v13.super_class = v10;
      objc_msgSendSuper2(&v13, "dealloc");
      return;
    }
  }
  __break(1u);
}

double sub_100009380()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  double result;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator);
  v2 = *(_QWORD *)(v1 + 48);
  swift_retain(v2);
  v4 = dispatch thunk of FMFManager.friends.getter(v3);
  swift_release(v2);
  v5 = *(_QWORD *)(v1 + 48);
  v6 = *(NSObject **)(*(_QWORD *)(v1 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
  v7 = v6;
  v8 = swift_retain(v5);
  v9 = dispatch thunk of FMFManager.locationAlerts.getter(v8);
  swift_release(v5);
  sub_10003E7B8(v4, v6, v9, 0);
  swift_bridgeObjectRelease(v4);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v9).n128_u64[0];
  return result;
}

void sub_100009440(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  NSString v8;

  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_isLocationAuthorized) & 1) != 0)
  {
    v2 = *(_BYTE *)(a1 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_limitedPrecision);
    if (v2)
      v3 = 2;
    else
      v3 = 0;
    *(_BYTE *)(a2 + OBJC_IVAR____TtC6FindMy11FMStatusBar_state) = v3;
    if ((v2 & 1) == 0)
    {
      v4 = *(void **)(*(_QWORD *)(a2 + OBJC_IVAR____TtC6FindMy11FMStatusBar_mediator) + 16);
      v5 = (void *)objc_opt_self(NSUserDefaults);
      v6 = v4;
      v7 = objc_msgSend(v5, "standardUserDefaults");
      v8 = String._bridgeToObjectiveC()();
      objc_msgSend(v7, "setBool:forKey:", 0, v8);

      return;
    }
  }
  else
  {
    *(_BYTE *)(a2 + OBJC_IVAR____TtC6FindMy11FMStatusBar_state) = 1;
  }
  sub_1002CEA54();
}

void sub_100009550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t Strong;
  uint64_t v18;
  _BYTE v19[24];

  v1 = v0;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100056D88(v2, (uint64_t)qword_1005F5748);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMDevicesProvider: fmipManagerDidInitialize", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v8 = (_QWORD *)FMIPManager.devices.getter(v7);
  sub_1000311B0(v8);
  swift_bridgeObjectRelease(v8);
  swift_beginAccess(v1 + 16, v19, 0, 0);
  v9 = *(_QWORD *)(v1 + 16);
  if (!((unint64_t)v9 >> 62))
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(v1 + 16));
    if (v10)
      goto LABEL_7;
LABEL_20:
    swift_bridgeObjectRelease(v9);
    return;
  }
  if (v9 < 0)
    v18 = *(_QWORD *)(v1 + 16);
  else
    v18 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(v1 + 16));
  v10 = _CocoaArrayWrapper.endIndex.getter(v18);
  if (!v10)
    goto LABEL_20;
LABEL_7:
  if (v10 >= 1)
  {
    for (i = 0; i != v10; ++i)
    {
      if ((v9 & 0xC000000000000001) != 0)
      {
        v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v9);
      }
      else
      {
        v15 = *(_QWORD *)(v9 + 8 * i + 32);
        swift_retain(v15);
      }
      v16 = v15 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
      Strong = swift_unknownObjectWeakLoadStrong(v15 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber);
      if (Strong)
      {
        v12 = Strong;
        v13 = *(_QWORD *)(v16 + 8);
        ObjectType = swift_getObjectType(Strong);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 8))(v1, ObjectType, v13);
        swift_release(v15);
        swift_unknownObjectRelease(v12);
      }
      else
      {
        swift_release(v15);
      }
    }
    goto LABEL_20;
  }
  __break(1u);
}

void sub_100009768()
{
  char *v0;
  void *v1;
  id v2;

  v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy11FMStatusBar_pillView];
  v2 = objc_msgSend(v1, "layer");
  objc_msgSend(v2, "setMasksToBounds:", 1);

  objc_msgSend(v1, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy11FMStatusBar_textLabel]);
  objc_msgSend(v1, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy11FMStatusBar_chevron]);
  objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy11FMStatusBar_blurView]);
  objc_msgSend(v0, "addSubview:", v1);
  sub_1000160A4();
}

id sub_100009820()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  id result;

  v0 = type metadata accessor for FMAccessoryProductImageCache();
  v1 = (_QWORD *)swift_allocObject(v0, 48, 7);
  v1[2] = sub_10005D89C((uint64_t)_swiftEmptyArrayStorage);
  v1[3] = sub_10005D878((uint64_t)_swiftEmptyArrayStorage);
  v2 = sub_100053F2C(&qword_1005D3E38);
  v3 = swift_allocObject(v2, 20, 7);
  *(_DWORD *)(v3 + 16) = 0;
  v1[4] = v3;
  result = objc_msgSend(objc_allocWithZone((Class)NSOperationQueue), "init");
  v1[5] = result;
  qword_1005F4D50 = (uint64_t)v1;
  return result;
}

unint64_t sub_1000098B0(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(char *), uint64_t (*a5)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t result;
  char v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t (*v34)(char *);

  v33 = a2;
  v34 = a4;
  v8 = sub_100053F2C(a2);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
  {
    v14 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v30 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v30);
    return (unint64_t)v14;
  }
  sub_100053F2C(a3);
  v13 = static _DictionaryStorage.allocate(capacity:)(v12);
  v14 = (_QWORD *)v13;
  v15 = *(_QWORD *)(a1 + 16);
  if (!v15)
    goto LABEL_9;
  v16 = *(int *)(v8 + 48);
  v17 = a1;
  v18 = v13 + 64;
  v19 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v32 = v17;
  v20 = v17 + v19;
  v21 = *(_QWORD *)(v9 + 72);
  swift_retain(v13);
  while (1)
  {
    sub_100007464(v20, (uint64_t)v11, v33);
    result = v34(v11);
    if ((v23 & 1) != 0)
      break;
    v24 = result;
    *(_QWORD *)(v18 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v25 = v14[6];
    v26 = a5(0);
    result = sub_100051774((uint64_t)v11, v25 + *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72) * v24, a5);
    *(_QWORD *)(v14[7] + 8 * v24) = *(_QWORD *)&v11[v16];
    v27 = v14[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
      goto LABEL_12;
    v14[2] = v29;
    v20 += v21;
    if (!--v15)
    {
      swift_release(v14);
      v30 = v32;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

void sub_100009A44(char a1, SEL *a2)
{
  void *v2;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  id v10;
  void *v11;
  uint64_t v12;
  objc_super v13;

  v5 = objc_msgSend(v2, "childViewControllers");
  v6 = sub_100006C5C(0, (unint64_t *)&qword_1005D6558, UIViewController_ptr);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if (!((unint64_t)v7 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v7);
    if (v8)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease_n(v7, 2);
    v13.receiver = v2;
    v13.super_class = (Class)type metadata accessor for FMCardContainerViewController();
    objc_msgSendSuper2(&v13, *a2, a1 & 1);
    return;
  }
  if (v7 < 0)
    v12 = v7;
  else
    v12 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v8 = _CocoaArrayWrapper.endIndex.getter(v12);
  if (!v8)
    goto LABEL_13;
LABEL_3:
  if (v8 >= 1)
  {
    for (i = 0; i != v8; ++i)
    {
      if ((v7 & 0xC000000000000001) != 0)
        v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v7);
      else
        v10 = *(id *)(v7 + 8 * i + 32);
      v11 = v10;
      objc_msgSend(v10, *a2, a1 & 1);

    }
    goto LABEL_13;
  }
  __break(1u);
}

void sub_100009B88(char a1)
{
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  NSObject *oslog;
  int v7;
  uint64_t v8;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100056D88(v2, (uint64_t)qword_1005F5748);
  oslog = Logger.logObject.getter(v3);
  v4 = static os_log_type_t.default.getter(oslog);
  if (os_log_type_enabled(oslog, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v5 = 67109120;
    v7 = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v7, &v8);
    _os_log_impl((void *)&_mh_execute_header, oslog, v4, "FMMainViewController: updated account status %{BOOL}d", v5, 8u);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_100009CA8(void *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  char v9;
  uint64_t v10;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100056D88(v4, (uint64_t)qword_1005F5748);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMMapMode: Load from UserDefaults", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  if ((a2 & 1) != 0 && (sub_1000077D0(), v9 != 2))
    LODWORD(v10) = sub_1001E0FF8(v9 & 1) & 0x10101;
  else
    v10 = sub_10000B4A0(a1);
  return v10 & 0xFFFFFF;
}

uint64_t sub_100009DF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMSelectedSection(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

_QWORD *sub_100009E3C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if (a1 != a2)
  {
    sub_10004FCB8((uint64_t)a1, type metadata accessor for FMSelectedSection);
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        v6 = type metadata accessor for FMIPDevice(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        v7 = *(int *)(sub_100053F2C(&qword_1005DE9B0) + 48);
        v8 = (char *)a1 + v7;
        v9 = (char *)a2 + v7;
        v10 = type metadata accessor for FMIPItem(0);
        v11 = *(_QWORD *)(v10 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
        {
          v12 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
        }
        v14 = a1;
        v15 = a3;
        v16 = 0;
        goto LABEL_22;
      case 1u:
        v13 = type metadata accessor for FMIPDevice(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
        v14 = a1;
        v15 = a3;
        v16 = 1;
        goto LABEL_22;
      case 2u:
        v17 = type metadata accessor for FMFFriend(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
        v14 = a1;
        v15 = a3;
        v16 = 2;
        goto LABEL_22;
      case 3u:
        v18 = type metadata accessor for FMIPItem(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a1, a2, v18);
        v14 = a1;
        v15 = a3;
        v16 = 3;
        goto LABEL_22;
      case 4u:
        v19 = type metadata accessor for FMIPItem(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a1, a2, v19);
        v14 = a1;
        v15 = a3;
        v16 = 4;
        goto LABEL_22;
      case 5u:
        v20 = *a2;
        *a1 = *a2;
        v21 = a2[2];
        swift_bridgeObjectRetain(v20);
        if (v21 >= 4)
        {
          a1[1] = a2[1];
          v26 = a2[2];
          a1[2] = v26;
          swift_bridgeObjectRetain(v26);
        }
        else
        {
          *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
        }
        v14 = a1;
        v15 = a3;
        v16 = 5;
        goto LABEL_22;
      case 6u:
        v22 = *a2;
        *a1 = *a2;
        v23 = a2[2];
        swift_bridgeObjectRetain(v22);
        if (v23 >= 4)
        {
          a1[1] = a2[1];
          v27 = a2[2];
          a1[2] = v27;
          swift_bridgeObjectRetain(v27);
        }
        else
        {
          *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
        }
        v14 = a1;
        v15 = a3;
        v16 = 6;
        goto LABEL_22;
      case 7u:
        v24 = type metadata accessor for FMIPDevice(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(a1, a2, v24);
        v14 = a1;
        v15 = a3;
        v16 = 7;
        goto LABEL_22;
      case 8u:
        v25 = type metadata accessor for FMIPUnknownItem(0);
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(a1, a2, v25);
        v14 = a1;
        v15 = a3;
        v16 = 8;
LABEL_22:
        swift_storeEnumTagMultiPayload(v14, v15, v16);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void sub_10000A154()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD aBlock[5];
  uint64_t v23;
  _BYTE v24[24];

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v20 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for DispatchQoS(0);
  v4 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FMSelectedSection(0);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v19 - v11;
  v13 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v13, v24, 0, 0);
  sub_10004FC74(v13, (uint64_t)v12, type metadata accessor for FMSelectedSection);
  sub_10004FC74((uint64_t)v12, (uint64_t)v10, type metadata accessor for FMSelectedSection);
  if ((swift_getEnumCaseMultiPayload(v10, v7) & 0xFFFFFFFE) == 0xC)
  {
    aBlock[4] = sub_100415BE8;
    v23 = v0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100037DF8;
    aBlock[3] = &unk_100565150;
    v14 = _Block_copy(aBlock);
    v15 = swift_retain(v0);
    static DispatchQoS.unspecified.getter(v15);
    v21 = _swiftEmptyArrayStorage;
    v16 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v17 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
    v18 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v21, v17, v18, v1, v16);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v6, v3, v14);
    _Block_release(v14);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v3, v1);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v19);
    sub_10004FCB8((uint64_t)v12, type metadata accessor for FMSelectedSection);
    swift_release(v23);
  }
  else
  {
    sub_10004FCB8((uint64_t)v12, type metadata accessor for FMSelectedSection);
    sub_10004FCB8((uint64_t)v10, type metadata accessor for FMSelectedSection);
  }
}

_QWORD *sub_10000A60C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;

  v1 = v0;
  v17 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v2 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[2] = objc_msgSend(objc_allocWithZone((Class)NSOperationQueue), "init");
  v11 = sub_1000555A8();
  static DispatchQoS.unspecified.getter(v11);
  v18 = _swiftEmptyArrayStorage;
  v12 = sub_100008000((unint64_t *)&unk_1005D3970, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v13 = sub_100053F2C((uint64_t *)&unk_1005D20F0);
  v14 = sub_10003F774((unint64_t *)&unk_1005D3980, (uint64_t *)&unk_1005D20F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v18, v13, v14, v5, v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v17);
  v1[3] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000003BLL, 0x80000001004B7BF0, v10, v7, v4, 0);
  if (qword_1005D1BB8 != -1)
    swift_once(&qword_1005D1BB8, sub_100009820);
  v15 = qword_1005F4D50;
  v1[4] = qword_1005F4D50;
  swift_retain(v15);
  v1[5] = sub_10005D6E0((uint64_t)_swiftEmptyArrayStorage);
  return v1;
}

void sub_10000A838(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  objc_class *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  NSString v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD aBlock[3];
  ValueMetadata *v47;
  unint64_t v48;
  uint64_t v49;
  objc_super v50;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v43 = *(_QWORD *)(v4 - 8);
  v44 = v4;
  __chkstk_darwin(v4);
  v42 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v40 = *(_QWORD *)(v6 - 8);
  v41 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS.QoSClass(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (objc_class *)type metadata accessor for FMMainViewController();
  v50.receiver = v2;
  v50.super_class = v13;
  objc_msgSendSuper2(&v50, "viewDidAppear:", a1 & 1);
  v14 = *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator];
  v15 = *(void **)(v14 + 16);
  v16 = (void *)objc_opt_self(NSUserDefaults);
  v17 = v15;
  v18 = objc_msgSend(v16, "standardUserDefaults");
  v19 = String._bridgeToObjectiveC()();
  LOBYTE(v15) = objc_msgSend(v18, "BOOLForKey:", v19);

  if ((v15 & 1) != 0)
  {
    v20 = v9;
    v39 = v8;
    v21 = v44;
    v47 = &type metadata for UserNotifications;
    v48 = sub_10005EED8();
    v22 = isFeatureEnabled(_:)(aBlock);
    sub_100029574(aBlock);
    if ((v22 & 1) != 0)
    {
      sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
      (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for DispatchQoS.QoSClass.default(_:), v20);
      v23 = (void *)static OS_dispatch_queue.global(qos:)(v12);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v20);
      v24 = swift_allocObject(&unk_1005582A8, 24, 7);
      swift_unknownObjectWeakInit(v24 + 16);
      v25 = swift_allocObject(&unk_1005582D0, 32, 7);
      *(_QWORD *)(v25 + 16) = v14;
      *(_QWORD *)(v25 + 24) = v24;
      v48 = (unint64_t)sub_1002E8218;
      v49 = v25;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100037DF8;
      v47 = (ValueMetadata *)&unk_1005582E8;
      v26 = _Block_copy(aBlock);
      swift_retain(v14);
      v27 = swift_retain(v24);
      v28 = v39;
      static DispatchQoS.unspecified.getter(v27);
      v45 = _swiftEmptyArrayStorage;
      v29 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v30 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
      v31 = sub_1000555E4();
      v32 = v42;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v45, v30, v31, v21, v29);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v28, v32, v26);
      _Block_release(v26);

      (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v21);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v28, v41);
      v33 = v49;
      swift_release(v24);
      swift_release(v33);
    }
  }
  else
  {
    v34 = *(void **)(v14 + 16);
    v35 = swift_allocObject(&unk_100558280, 24, 7);
    *(_QWORD *)(v35 + 16) = v2;
    sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
    v36 = v34;
    v37 = (void *)static OS_dispatch_queue.main.getter(v2);
    sub_1003790C0((uint64_t)sub_1002E81A4, v35, (uint64_t)v37);

    swift_release(v35);
  }
}

id sub_10000AC4C(uint64_t a1)
{
  char *v1;
  id v3;
  id v4;
  double v5;
  double v6;
  double v7;
  objc_super v9;

  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for FMCardContainerViewController();
  objc_msgSendSuper2(&v9, "traitCollectionDidChange:", a1);
  sub_100018FD0();
  v3 = objc_msgSend(v1, "traitCollection");
  v4 = objc_msgSend(v3, "horizontalSizeClass");

  sub_10005DE50((uint64_t)v4);
  sub_1000421B0();
  sub_100041F18(0, v5);
  sub_1000421B0();
  v7 = 0.64 - v6;
  if (v7 <= 0.0)
    v7 = 0.0;
  return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_darkenerBackground], "setAlpha:", v7 * *(double *)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration]);
}

void sub_10000AD54()
{
  char *v0;
  uint64_t v1;
  id v2;
  id v3;
  double v4;
  _BOOL4 v5;
  double v6;
  double v7;
  objc_super v8;

  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for FMCardContainerViewController();
  objc_msgSendSuper2(&v8, "viewDidLayoutSubviews");
  v1 = OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_isFirstLayoutCompleted;
  if ((v0[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_isFirstLayoutCompleted] & 1) == 0)
  {
    v2 = objc_msgSend(v0, "traitCollection");
    v3 = objc_msgSend(v2, "horizontalSizeClass");

    v4 = 0.64;
    v5 = 1;
    if (v3 != (id)1)
    {
      v4 = 0.64;
      if ((v0[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_dismissable] & 1) != 0)
        v4 = 0.0;
      v5 = (v0[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_dismissable] & 1) == 0;
    }
    sub_100041F18(0, v4);
    v6 = 0.0;
    if (v5)
      v7 = 0.0;
    else
      v7 = 0.64;
    if (v7 > 0.0)
      v6 = v7;
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_darkenerBackground], "setAlpha:", v6 * *(double *)&v0[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration]);
    v0[v1] = 1;
    v0[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent] = v5;
    sub_10000EF20();
  }
}

uint64_t sub_10000AE7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint8_t *v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = v1;
  v4 = type metadata accessor for FMIPBeaconSharingLimits(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v8 = type metadata accessor for Logger(0);
  sub_100056D88(v8, (uint64_t)qword_1005F5748);
  v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v18 = v1;
    v13 = v12;
    *(_DWORD *)v12 = 134217984;
    v14 = FMIPBeaconSharingLimits.maxCircleMembers.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v19 = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "FMDevicesProvider: didUpdate sharingLimits, maxCircleMembers = %lu", v13, 0xCu);
    v15 = v13;
    v2 = v18;
    swift_slowDealloc(v15, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

  v16 = v2 + OBJC_IVAR____TtC6FindMy17FMDevicesProvider_sharingLimits;
  swift_beginAccess(v2 + OBJC_IVAR____TtC6FindMy17FMDevicesProvider_sharingLimits, &v19, 33, 0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(v16, a1, v4);
  return swift_endAccess(&v19);
}

void sub_10000B060()
{
  _BYTE *v0;
  void *v1;
  double v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;

  v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy19FMCardContainerView_darkeningView];
  v2 = 0.1;
  if (!v0[OBJC_IVAR____TtC6FindMy19FMCardContainerView_appearance])
    v2 = 0.0;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy19FMCardContainerView_darkeningView], "setAlpha:", v2);
  v3 = objc_msgSend(v0, "traitCollection");
  v4 = objc_msgSend(v3, "horizontalSizeClass");

  v5 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy19FMCardContainerView_bluredBackground], "layer");
  v6 = v5;
  if (v4 == (id)1)
  {
    objc_msgSend(v5, "setMaskedCorners:", 3);

    v7 = objc_msgSend(v1, "layer");
    objc_msgSend(v7, "setMaskedCorners:", 3);
  }
  else
  {
    objc_msgSend(v5, "setMaskedCorners:", 15);

    v7 = objc_msgSend(v1, "layer");
    objc_msgSend(v7, "setMaskedCorners:", 15);
  }

}

uint64_t sub_10000B194()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[5];
  uint64_t v22;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v20 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000555A8();
  v9 = (void *)static OS_dispatch_queue.main.getter();
  v10 = swift_allocObject(&unk_100561088, 24, 7);
  *(_QWORD *)(v10 + 16) = v0;
  aBlock[4] = sub_10005E244;
  v22 = v10;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_1005610A0;
  v11 = _Block_copy(aBlock);
  v12 = v22;
  v13 = v1;
  swift_release(v12);
  static DispatchQoS.unspecified.getter(v14);
  aBlock[0] = _swiftEmptyArrayStorage;
  v15 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v16 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v17 = sub_1000555E4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v16, v17, v2, v15);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v11);
  _Block_release(v11);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_10000B380()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  double v5;
  double v6;
  id v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  objc_super v13;

  v13.receiver = v0;
  v13.super_class = (Class)type metadata accessor for FMNoLocationViewController();
  objc_msgSendSuper2(&v13, "viewDidLayoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_markerImageViewTopConstraint];
  if (!v1)
    return;
  v2 = v1;
  v3 = objc_msgSend(v0, "view");
  if (!v3)
  {
    __break(1u);
    goto LABEL_9;
  }
  v4 = v3;
  objc_msgSend(v3, "frame");
  v6 = v5;

  v7 = objc_msgSend(v0, "view");
  if (!v7)
  {
LABEL_9:
    __break(1u);
    return;
  }
  v8 = v7;
  v9 = v6 / 3.0;
  objc_msgSend(v7, "safeAreaInsets");
  v11 = v10;

  v12 = v9 - v11;
  if (qword_1005D1C00 != -1)
    swift_once(&qword_1005D1C00, sub_10005E580);
  objc_msgSend(v2, "setConstant:", v12 + *(double *)&xmmword_1005F4E50);

}

uint64_t sub_10000B4A0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  NSString v7;
  id v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t My;
  _QWORD *v13;
  char v14;
  _QWORD v16[3];
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _OWORD v20[2];

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100056D88(v2, (uint64_t)qword_1005F5748);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMMapMode: Load Legacy type from UserDefaults", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = String._bridgeToObjectiveC()();
  v8 = objc_msgSend(a1, "valueForKey:", v7);

  if (v8)
  {
    _bridgeAnyObjectToAny(_:)(v20, v8);
    swift_unknownObjectRelease(v8);
  }
  else
  {
    memset(v20, 0, sizeof(v20));
  }
  sub_10005D07C((uint64_t)v20, (uint64_t)v16);
  if (!v17)
  {
    sub_10005D03C((uint64_t)v16);
    return 2;
  }
  if ((swift_dynamicCast(&v19, v16, (char *)&type metadata for Any + 8, &type metadata for UInt, 6) & 1) == 0)
    return 2;
  switch(v19)
  {
    case 1:
    case 3:
      if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x74696C6C65746173, 0xE900000000000065, 0x65726F6C707865, 0xE700000000000000, 0) & 1) != 0)v9 = 0x10000;
      else
        v9 = 0;
      goto LABEL_17;
    case 2:
    case 4:
      v9 = 0x10000;
LABEL_17:
      v11 = 1;
      break;
    default:
      v11 = 0;
      v9 = 0x10000;
      break;
  }
  My = type metadata accessor for Feature.FindMy(0);
  v17 = My;
  v18 = sub_100006590();
  v13 = sub_10003D370(v16);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(My - 8) + 104))(v13, enum case for Feature.FindMy.springfieldIntegration(_:), My);
  v14 = isFeatureEnabled(_:)(v16);
  sub_100029574(v16);
  v10 = v9 | v11;
  sub_1001E097C(a1, v14 & 1, v9 | v11);
  return v10;
}

void sub_10000B71C()
{
  uint64_t v0;
  id v1;
  unsigned int v2;
  id v3;
  NSString v4;
  unsigned int v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  _QWORD v12[5];
  uint64_t v13;

  v1 = objc_msgSend((id)objc_opt_self(FMSystemInfo), "sharedInstance");
  v2 = objc_msgSend(v1, "isInternalBuild");

  if (v2)
  {
    v3 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v4 = String._bridgeToObjectiveC()();
    v5 = objc_msgSend(v3, "BOOLForKey:", v4);

    if (v5)
    {
      v6 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_locationManager);
      if (v6)
      {
        v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_poiFidelity);
        v8 = swift_allocObject(&unk_100567FA8, 24, 7);
        swift_unknownObjectWeakInit(v8 + 16, v0);
        v12[4] = sub_100461AA8;
        v13 = v8;
        v12[0] = _NSConcreteStackBlock;
        v12[1] = 1107296256;
        v12[2] = sub_100461950;
        v12[3] = &unk_100567FC0;
        v9 = _Block_copy(v12);
        v10 = v13;
        v11 = v6;
        objc_msgSend(v11, "_fetchPlaceInferencesWithFidelityPolicy:handler:", v7, v9, swift_release(v10).n128_f64[0]);
        _Block_release(v9);

      }
    }
  }
}

uint64_t sub_10000B8A8(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[5];
  uint64_t v32;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v30 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v28 = *(_QWORD *)(v7 - 8);
  v29 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FMSelectedSection(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  v13 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v14 = (void *)static OS_dispatch_queue.main.getter(v13);
  sub_100024F3C(a1, (uint64_t)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = *(unsigned __int8 *)(v11 + 80);
  v16 = (v15 + 16) & ~v15;
  v17 = (v12 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject(&unk_1005573D0, v17 + 8, v15 | 7);
  sub_10004C860((uint64_t)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v16);
  *(_QWORD *)(v18 + v17) = v2;
  aBlock[4] = sub_10005F80C;
  v32 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_1005573E8;
  v19 = _Block_copy(aBlock);
  v20 = v32;
  v21 = v2;
  swift_release(v20);
  static DispatchQoS.unspecified.getter(v22);
  aBlock[0] = _swiftEmptyArrayStorage;
  v23 = sub_100056580();
  v24 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v25 = sub_1000555E4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v24, v25, v4, v23);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v6, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v9, v29);
}

void sub_10000BAF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t Strong;
  uint64_t v18;
  _BYTE v19[24];

  v1 = v0;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100056D88(v2, (uint64_t)qword_1005F5748);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMPeopleProvider: fmfManagerDidInitialize", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v8 = dispatch thunk of FMFManager.friends.getter(v7);
  sub_10002B498(v8);
  swift_bridgeObjectRelease(v8);
  swift_beginAccess(v1 + 16, v19, 0, 0);
  v9 = *(_QWORD *)(v1 + 16);
  if (!((unint64_t)v9 >> 62))
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(v1 + 16));
    if (v10)
      goto LABEL_7;
LABEL_20:
    swift_bridgeObjectRelease(v9);
    return;
  }
  if (v9 < 0)
    v18 = *(_QWORD *)(v1 + 16);
  else
    v18 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(v1 + 16));
  v10 = _CocoaArrayWrapper.endIndex.getter(v18);
  if (!v10)
    goto LABEL_20;
LABEL_7:
  if (v10 >= 1)
  {
    for (i = 0; i != v10; ++i)
    {
      if ((v9 & 0xC000000000000001) != 0)
      {
        v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v9);
      }
      else
      {
        v15 = *(_QWORD *)(v9 + 8 * i + 32);
        swift_retain(v15);
      }
      v16 = v15 + OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_subscriber;
      Strong = swift_unknownObjectWeakLoadStrong(v15 + OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_subscriber);
      if (Strong)
      {
        v12 = Strong;
        v13 = *(_QWORD *)(v16 + 8);
        ObjectType = swift_getObjectType(Strong);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 8))(v1, ObjectType, v13);
        swift_release(v15);
        swift_unknownObjectRelease(v12);
      }
      else
      {
        swift_release(v15);
      }
    }
    goto LABEL_20;
  }
  __break(1u);
}

void sub_10000BD0C()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  int v8;
  int v9;

  v1 = v0;
  v2 = OBJC_IVAR____TtC6FindMy19FMConditionProvider_areFriendsInitialized;
  HIBYTE(v9) = v0[OBJC_IVAR____TtC6FindMy19FMConditionProvider_areFriendsInitialized];
  CurrentValueSubject.send(_:)((char *)&v9 + 3);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v3 = type metadata accessor for Logger(0);
  sub_100056D88(v3, (uint64_t)qword_1005F5748);
  v4 = v0;
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v7 = 67109120;
    v8 = v1[v2];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v8, &v9);

    _os_log_impl((void *)&_mh_execute_header, v5, v6, "FMConditionProvider: Friends init state updated %{BOOL}d", v7, 8u);
    swift_slowDealloc(v7, -1, -1);
  }
  else
  {

    v5 = v4;
  }

  *((_BYTE *)&v4->isa + OBJC_IVAR____TtC6FindMy19FMConditionProvider_didFriendsFailToInitialize) = 0;
  sub_10001FBF8(&OBJC_IVAR____TtC6FindMy19FMConditionProvider_didFriendsFailToInitialize, "FMConditionProvider: Friends failed to initialize %{BOOL}d");
  sub_100016C48();
}

uint64_t sub_10000BE80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  _QWORD *v13;
  void *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[5];
  _QWORD *v24;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v22 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000555A8();
  v12 = (void *)static OS_dispatch_queue.main.getter();
  v13 = (_QWORD *)swift_allocObject(&unk_10055E1D8, 40, 7);
  v13[2] = a2;
  v13[3] = a3;
  v13[4] = a1;
  aBlock[4] = sub_10005EB90;
  v24 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_10055E1F0;
  v14 = _Block_copy(aBlock);
  v15 = v24;
  swift_retain(a2);
  swift_retain(a3);
  v16 = swift_release(v15);
  static DispatchQoS.unspecified.getter(v16);
  aBlock[0] = _swiftEmptyArrayStorage;
  v17 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v18 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v19 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v18, v19, v6, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v21);
}

void sub_10000C09C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t Strong;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  _BYTE v13[24];

  v4 = a2 + 16;
  dispatch thunk of DispatchWorkItem.cancel()();
  swift_beginAccess(v4, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (char *)Strong;
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_100056D88(v7, (uint64_t)qword_1005F5748);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v11 = 134217984;
      v12 = a3;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, v13);
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "FMConditionProvider: Stewie state did change to %ld", v11, 0xCu);
      swift_slowDealloc(v11, -1, -1);
    }

    *(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy19FMConditionProvider_stewieServiceState] = a3;
    sub_100023A38((uint64_t)&unk_10055E228, (uint64_t)sub_10005EBE0, (uint64_t)&unk_10055E240);

  }
}

void sub_10000C24C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  unsigned int v4;
  int v5;
  int v6;
  unsigned int v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  uint64_t Strong;
  uint64_t v19;
  unsigned int v20;
  int v21;
  int v22;
  unsigned int v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[24];
  _BYTE v37[24];

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(MCProfileConnection), "sharedConnection");
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, "effectiveBoolValueForSetting:", MCFeatureFindMyFriendsAllowed);
    v5 = v4 == 2;
    v6 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_FMFRestricted);
    *(_BYTE *)(v0 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_FMFRestricted) = v5;
    if (v5 == v6)
      goto LABEL_19;
    v7 = v4;
    v8 = (uint64_t *)(v1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions);
    swift_beginAccess(v1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions, v37, 0, 0);
    v9 = *v8;
    if ((unint64_t)v9 >> 62)
    {
      if (v9 < 0)
        v19 = v9;
      else
        v19 = v9 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v9);
      v10 = _CocoaArrayWrapper.endIndex.getter(v19);
      if (v10)
        goto LABEL_5;
    }
    else
    {
      v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v9);
      if (v10)
      {
LABEL_5:
        if (v10 < 1)
        {
          __break(1u);
          goto LABEL_40;
        }
        v11 = 0;
        v12 = v7 != 2;
        do
        {
          if ((v9 & 0xC000000000000001) != 0)
          {
            v16 = specialized _ArrayBuffer._getElementSlowPath(_:)(v11, v9);
          }
          else
          {
            v16 = *(_QWORD *)(v9 + 8 * v11 + 32);
            swift_retain(v16);
          }
          v17 = v16 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber;
          Strong = swift_unknownObjectWeakLoadStrong(v16 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber);
          if (Strong)
          {
            v13 = Strong;
            v14 = *(_QWORD *)(v17 + 8);
            ObjectType = swift_getObjectType();
            (*(void (**)(uint64_t, _BOOL8, uint64_t, uint64_t))(v14 + 96))(v1, v12, ObjectType, v14);
            swift_release(v16);
            swift_unknownObjectRelease(v13);
          }
          else
          {
            swift_release(v16);
          }
          ++v11;
        }
        while (v10 != v11);
      }
    }
    swift_bridgeObjectRelease(v9);
LABEL_19:
    v20 = objc_msgSend(v3, "effectiveBoolValueForSetting:", MCFeatureFindMyDeviceAllowed);
    v21 = v20 == 2;
    v22 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_FMIPRestricted);
    *(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_FMIPRestricted) = v21;
    if (v21 == v22)
    {

      return;
    }
    v23 = v20;
    v24 = (uint64_t *)(v1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions);
    swift_beginAccess(v1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions, v36, 0, 0);
    v25 = *v24;
    if ((unint64_t)v25 >> 62)
    {
      if (v25 < 0)
        v35 = v25;
      else
        v35 = v25 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v25);
      v26 = _CocoaArrayWrapper.endIndex.getter(v35);
      if (v26)
      {
LABEL_22:
        if (v26 >= 1)
        {
          v27 = 0;
          v28 = v23 != 2;
          do
          {
            if ((v25 & 0xC000000000000001) != 0)
            {
              v32 = specialized _ArrayBuffer._getElementSlowPath(_:)(v27, v25);
            }
            else
            {
              v32 = *(_QWORD *)(v25 + 8 * v27 + 32);
              swift_retain(v32);
            }
            v33 = v32 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber;
            v34 = swift_unknownObjectWeakLoadStrong(v32 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber);
            if (v34)
            {
              v29 = v34;
              v30 = *(_QWORD *)(v33 + 8);
              v31 = swift_getObjectType();
              (*(void (**)(uint64_t, _BOOL8, uint64_t, uint64_t))(v30 + 104))(v1, v28, v31, v30);
              swift_release(v32);
              swift_unknownObjectRelease(v29);
            }
            else
            {
              swift_release(v32);
            }
            ++v27;
          }
          while (v26 != v27);
          goto LABEL_37;
        }
LABEL_40:
        __break(1u);
        return;
      }
    }
    else
    {
      v26 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v25);
      if (v26)
        goto LABEL_22;
    }
LABEL_37:

    swift_bridgeObjectRelease(v25);
  }
}

uint64_t sub_10000C590(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[5];
  uint64_t v30;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v28 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v26 = *(_QWORD *)(v7 - 8);
  v27 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FMSelectedSection(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v13 = (void *)static OS_dispatch_queue.main.getter();
  sub_100024F3C(a1, (uint64_t)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(unsigned __int8 *)(v11 + 80);
  v15 = (v14 + 24) & ~v14;
  v16 = swift_allocObject(&unk_10054F5B8, v15 + v12, v14 | 7);
  *(_QWORD *)(v16 + 16) = v2;
  sub_10004C860((uint64_t)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15);
  aBlock[4] = sub_10005DB38;
  v30 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_10054F5D0;
  v17 = _Block_copy(aBlock);
  v18 = v30;
  v19 = v2;
  swift_release(v18);
  static DispatchQoS.unspecified.getter(v20);
  aBlock[0] = _swiftEmptyArrayStorage;
  v21 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v22 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v23 = sub_1000555E4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v22, v23, v4, v21);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v6, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v9, v27);
}

void sub_10000C7E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  id v7;

  v1 = v0;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100056D88(v2, (uint64_t)qword_1005F5748);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMConditionProvider: mm start account monitoring", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v7, "addObserver:selector:name:object:", v1, "accountChangedNotificationReceivedWithNotification:", ACAccountStoreDidChangeNotification, 0);

}

void sub_10000C910(uint64_t a1, uint64_t a2)
{
  uint64_t My;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  _QWORD v12[4];

  My = type metadata accessor for Feature.FindMy(0);
  v12[2] = My;
  v12[3] = sub_100006590();
  v5 = sub_10003D370(&v11);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(My - 8) + 104))(v5, enum case for Feature.FindMy.fmNiftyCurve(_:), My);
  LOBYTE(My) = isFeatureEnabled(_:)(&v11);
  sub_100029574(&v11);
  if ((My & 1) != 0)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_100056D88(v6, (uint64_t)qword_1005F5748);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v10 = 134217984;
      v11 = a2;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, v12);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "FMTerminalView: Stewie state did change to %ld", v10, 0xCu);
      swift_slowDealloc(v10, -1, -1);
    }

  }
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_areFriendsInitialized) != 1
    || (*(_BYTE *)(a1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_areDevicesInitialized) & 1) == 0)
  {
    sub_100044D70();
  }
  sub_100043DD4();
}

void sub_10000CAB8()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  int v8;
  int v9;

  v1 = v0;
  v2 = OBJC_IVAR____TtC6FindMy19FMConditionProvider_areDevicesInitialized;
  HIBYTE(v9) = v0[OBJC_IVAR____TtC6FindMy19FMConditionProvider_areDevicesInitialized];
  CurrentValueSubject.send(_:)((char *)&v9 + 3);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v3 = type metadata accessor for Logger(0);
  sub_100056D88(v3, (uint64_t)qword_1005F5748);
  v4 = v0;
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v7 = 67109120;
    v8 = v1[v2];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v8, &v9);

    _os_log_impl((void *)&_mh_execute_header, v5, v6, "FMConditionProvider: Devices init state updated: %{BOOL}d", v7, 8u);
    swift_slowDealloc(v7, -1, -1);
  }
  else
  {

    v5 = v4;
  }

  *((_BYTE *)&v4->isa + OBJC_IVAR____TtC6FindMy19FMConditionProvider_didDevicesFailToInitialize) = 0;
  sub_10001FBF8(&OBJC_IVAR____TtC6FindMy19FMConditionProvider_didDevicesFailToInitialize, "FMConditionProvider: Devices failed to initialize %{BOOL}d");
  sub_100016C48();
}

id sub_10000CC2C(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_super v10;

  v3 = OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_visualEffectView;
  v4 = objc_allocWithZone((Class)UIVisualEffectView);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_darkenerView;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v7 = OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_markerImageView;
  if (qword_1005D1C00 != -1)
    swift_once(&qword_1005D1C00, sub_10005E580);
  *(_QWORD *)&v5[v7] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMNoLocationBackgroundView()), "initWithFrame:", 0.0, 0.0, *(double *)&qword_1005F4E80, *(double *)&qword_1005F4E80);
  v8 = OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_iconImageView;
  *(_QWORD *)&v5[v8] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_iconImageViewWidthConstraint] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_markerImageViewTopConstraint] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_selectionSubscription] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_devicesSubscription] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_peopleSubscription] = 0;
  v5[OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_isNoLocationShowing] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_compactConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_regularConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_mediator] = a1;
  swift_retain(a1);

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for FMNoLocationViewController();
  return objc_msgSendSuper2(&v10, "initWithNibName:bundle:", 0, 0);
}

unint64_t sub_10000CE74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100053F2C(&qword_1005D6C88);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    result = sub_10004C348(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_10000CF8C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  int v14;
  uint64_t v15;

  v2 = v1;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v4 = type metadata accessor for Logger(0);
  sub_100056D88(v4, (uint64_t)qword_1005F5748);
  v5 = swift_retain(v1);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 67109120;
    v14 = *(unsigned __int8 *)(v1 + 72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v14, &v15);
    swift_release(v1);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMMediator: Start refreshing. already refreshing?: %{BOOL}d", v8, 8u);
    swift_slowDealloc(v8, -1, -1);

    if ((*(_BYTE *)(v1 + 72) & 1) != 0)
      return;
  }
  else
  {

    v9 = swift_release(v1);
    if ((*(_BYTE *)(v1 + 72) & 1) != 0)
      return;
  }
  v10 = *(_QWORD *)(v1 + 48);
  if (*(_BYTE *)(v10 + 80) == 1)
  {
    *(_BYTE *)(v10 + 80) = 0;
    dispatch thunk of FMFManager.startRefreshing()();
  }
  else
  {
    v11 = Logger.logObject.getter(v9);
    v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "FMPeopleProvider: Skipping startRefreshing since it has already started", v13, 2u);
      swift_slowDealloc(v13, -1, -1);
    }

  }
  sub_10000E978();
  *(_BYTE *)(*(_QWORD *)(v2 + 24) + 48) = 0;
  if ((a1 & 1) != 0)
    FMIPManager.forceStartRefreshing()();
  else
    FMIPManager.startRefreshing()();
  sub_10000ED88(1);
  *(_BYTE *)(v2 + 72) = 1;
}

id sub_10000D198()
{
  return objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
}

void sub_10000D1C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  v4 = type metadata accessor for FMSelectedSection(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v7 = type metadata accessor for Logger(0);
  sub_100056D88(v7, (uint64_t)qword_1005F5748);
  v8 = sub_100024F3C(a1, (uint64_t)v6);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(12, -1);
    v12 = swift_slowAlloc(32, -1);
    *(_DWORD *)v11 = 136315138;
    v15 = 0;
    v16 = 0xE000000000000000;
    v17 = v12;
    _print_unlocked<A, B>(_:_:)(v6, &v15, v4, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v13 = v16;
    v15 = sub_100056DA0(v15, v16, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16);
    swift_bridgeObjectRelease(v13);
    sub_100024F00((uint64_t)v6);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "FMStatusBar: selection changed %s", v11, 0xCu);
    swift_arrayDestroy(v12, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v12, -1, -1);
    swift_slowDealloc(v11, -1, -1);
  }
  else
  {
    sub_100024F00((uint64_t)v6);
  }

  if ((*(_BYTE *)(a2 + OBJC_IVAR____TtC6FindMy11FMStatusBar_initialState) & 1) == 0
    && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a2 + OBJC_IVAR____TtC6FindMy11FMStatusBar_mediator) + 40)
                + OBJC_IVAR____TtC6FindMy18FMLocationProvider_limitedPrecision) == 1)
  {
    *(_BYTE *)(a2 + OBJC_IVAR____TtC6FindMy11FMStatusBar_state) = 3;
    sub_1002CEA54();
  }
}

void sub_10000D410(void *a1, void (*a2)(id), uint64_t a3, double a4)
{
  _BYTE *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  double v23;
  CLLocationDegrees v24;
  double v25;
  CLLocationDegrees v26;
  MKMapPoint v27;
  _BYTE *v28;
  id v29;
  double v30;
  double v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  double v39;
  void ***p_aBlock;
  uint64_t v41;
  double v42;
  void *v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  _BYTE *v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  id v54;
  BOOL v55;
  void *v56;
  char *v57;
  char *v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  _BYTE *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  char *v72;
  double v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  void (*v84)(id);
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  void **aBlock;
  uint64_t v93;
  void *v94;
  void *v95;
  void *v96;
  uint64_t v97;
  CLLocationCoordinate2D v98;
  CLLocationCoordinate2D v99;
  MKMapPoint v100;

  v83 = a3;
  v84 = a2;
  v89 = a1;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v82 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = type metadata accessor for DispatchTime(0);
  v13 = *(_QWORD *)(v90 - 8);
  v14 = __chkstk_darwin(v90);
  v16 = (char *)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v88 = (char *)&v75 - v17;
  v18 = type metadata accessor for FMFConfigValue(0);
  v86 = *(_QWORD *)(v18 - 8);
  v87 = v18;
  __chkstk_darwin(v18);
  v85 = (char *)&v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(void **)&v4[OBJC_IVAR____TtC6FindMy19FMMapViewController_mapView];
  if (!objc_msgSend(v20, "userTrackingMode"))
  {
    v75 = v16;
    v76 = v13;
    v77 = v12;
    v78 = v10;
    v79 = v9;
    v80 = v7;
    v81 = v6;
    v21 = v20;
    v22 = objc_msgSend(v20, "camera");
    objc_msgSend(v22, "centerCoordinate");
    v24 = v23;
    v26 = v25;

    v98.latitude = v24;
    v98.longitude = v26;
    v27 = MKMapPointForCoordinate(v98);
    v28 = v4;
    v29 = v89;
    objc_msgSend(v89, "centerCoordinate");
    v100 = MKMapPointForCoordinate(v99);
    v30 = MKMetersBetweenMapPoints(v27, v100);
    v34 = v90;
    v35 = v87;
    v36 = v88;
    v38 = v85;
    v37 = v86;
    if (v4[OBJC_IVAR____TtC6FindMy19FMMapViewController_isAnimationEnabled] != 1)
      goto LABEL_12;
    if (qword_1005D1F30 != -1)
    {
      v73 = v30;
      v74 = v86;
      swift_once(&qword_1005D1F30, sub_10005F428);
      v37 = v74;
      v30 = v73;
    }
    HIDWORD(v39) = 1091070464;
    if (v30 < 200000.0)
    {
      if (v28[OBJC_IVAR____TtC6FindMy19FMMapViewController_cameraDidReachLiveLocation] == 1
        && *(_BYTE *)(*(_QWORD *)&v28[OBJC_IVAR____TtC6FindMy19FMMapViewController_dataSource] + 57) == 1
        && v28[OBJC_IVAR____TtC6FindMy19FMMapViewController_lastMode] == 1)
      {
        p_aBlock = (void ***)&v28[OBJC_IVAR____TtC6FindMy19FMMapViewController_overrideLiveAnimationDuration];
        if (v28[OBJC_IVAR____TtC6FindMy19FMMapViewController_overrideLiveAnimationDuration + 8] == 1)
        {
          v41 = v37;
          (*(void (**)(char *, _QWORD, uint64_t))(v37 + 104))(v38, enum case for FMFConfigValue.liveAnimationInterval(_:), v35);
          v91 = 0x4000000000000000;
          p_aBlock = &aBlock;
          FMFGlobalConfig<A>(_:fallback:)(&aBlock, v38, &v91, &type metadata for Double);
          (*(void (**)(char *, uint64_t))(v41 + 8))(v38, v35);
        }
        v42 = *(double *)p_aBlock;
        v43 = (void *)objc_opt_self(UIView);
        v44 = swift_allocObject(&unk_10055D2C0, 32, 7);
        *(_QWORD *)(v44 + 16) = v28;
        *(_QWORD *)(v44 + 24) = v29;
        v96 = sub_100362FD8;
        v97 = v44;
        aBlock = _NSConcreteStackBlock;
        v93 = 1107296256;
        v94 = sub_100037DF8;
        v95 = &unk_10055D2D8;
        v45 = _Block_copy(&aBlock);
        v46 = v97;
        v47 = v28;
        v48 = v29;
        swift_release(v46);
        v49 = swift_allocObject(&unk_10055D310, 32, 7);
        v50 = v83;
        v51 = (uint64_t)v84;
        *(_QWORD *)(v49 + 16) = v84;
        *(_QWORD *)(v49 + 24) = v50;
        v96 = sub_100363028;
        v97 = v49;
        aBlock = _NSConcreteStackBlock;
        v93 = 1107296256;
        v94 = sub_10005D218;
        v95 = &unk_10055D328;
        v52 = _Block_copy(&aBlock);
        v53 = v97;
        sub_1000A190C(v51, v50);
        swift_release(v53);
        objc_msgSend(v43, "animateWithDuration:delay:options:animations:completion:", 196614, v45, v52, v42, 0.0);
        _Block_release(v52);
        _Block_release(v45);
      }
      else
      {
        v28[OBJC_IVAR____TtC6FindMy19FMMapViewController_cameraDidReachLiveLocation] = 0;
        LODWORD(v31) = 1128792064;
        LODWORD(v32) = 1120403456;
        LODWORD(v39) = 1.0;
        LODWORD(v33) = 0;
        objc_msgSend(v21, "setCamera:duration:springMass:springStiffness:springDamping:springVelocity:", v29, a4, v39, v31, v32, v33);
        v55 = 0;
        if (*(_BYTE *)(*(_QWORD *)&v28[OBJC_IVAR____TtC6FindMy19FMMapViewController_dataSource] + 57) == 1)
          v55 = v28[OBJC_IVAR____TtC6FindMy19FMMapViewController_lastMode] == 1;
        sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
        v56 = (void *)static OS_dispatch_queue.main.getter();
        v57 = v75;
        static DispatchTime.now()(v56);
        + infix(_:_:)(v57, a4);
        v58 = v36;
        v59 = *(void (**)(char *, uint64_t))(v76 + 8);
        v59(v57, v34);
        v60 = swift_allocObject(&unk_10055D270, 48, 7);
        *(_BYTE *)(v60 + 16) = v55;
        v61 = v83;
        v62 = (uint64_t)v84;
        *(_QWORD *)(v60 + 24) = v28;
        *(_QWORD *)(v60 + 32) = v62;
        *(_QWORD *)(v60 + 40) = v61;
        v96 = sub_100362F64;
        v97 = v60;
        aBlock = _NSConcreteStackBlock;
        v93 = 1107296256;
        v94 = sub_100037DF8;
        v95 = &unk_10055D288;
        v63 = _Block_copy(&aBlock);
        v64 = v97;
        v65 = v28;
        sub_1000A190C(v62, v61);
        swift_release(v64);
        v66 = v77;
        static DispatchQoS.unspecified.getter(v67);
        aBlock = (void **)_swiftEmptyArrayStorage;
        v68 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v69 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
        v70 = sub_1000555E4();
        v71 = v81;
        v72 = v82;
        dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v69, v70, v81, v68);
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v58, v66, v72, v63);
        _Block_release(v63);

        (*(void (**)(char *, uint64_t))(v80 + 8))(v72, v71);
        (*(void (**)(char *, uint64_t))(v78 + 8))(v66, v79);
        v59(v58, v90);
      }
    }
    else
    {
LABEL_12:
      v54 = objc_msgSend(v21, "setCamera:animated:", v29, 0, v30);
      if (v84)
        v84(v54);
    }
    v28[OBJC_IVAR____TtC6FindMy19FMMapViewController_lastMode] = *(_BYTE *)(*(_QWORD *)&v28[OBJC_IVAR____TtC6FindMy19FMMapViewController_dataSource]
                                                                          + 56);
  }
}

id sub_10000DAFC(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  objc_class *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  NSString v19;
  id v20;
  objc_super v22;
  objc_super v23;

  *(_QWORD *)&v3[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_tabBar] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_tabBarTopConstraint] = 0;
  v6 = &v3[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration];
  v7 = qword_1005D1D00;
  v8 = v3;
  if (v7 != -1)
    swift_once(&qword_1005D1D00, sub_10005DE04);
  v9 = qword_1005F5310;
  v10 = unk_1005F5300;
  *(_OWORD *)v6 = xmmword_1005F52F0;
  *((_OWORD *)v6 + 1) = v10;
  *((_QWORD *)v6 + 4) = v9;
  v8[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent] = 1;
  v8[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_dismissable] = 1;
  v11 = OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_darkenerBackground;
  v12 = (objc_class *)type metadata accessor for FMPassthroughView();
  v13 = objc_allocWithZone(v12);
  v13[OBJC_IVAR____TtC6FindMy17FMPassthroughView_enabled] = 1;
  *(_QWORD *)&v13[OBJC_IVAR____TtC6FindMy17FMPassthroughView_exemptViews] = _swiftEmptyArrayStorage;
  v23.receiver = v13;
  v23.super_class = v12;
  *(_QWORD *)&v8[v11] = objc_msgSendSuper2(&v23, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v14 = OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardShadow;
  *(_QWORD *)&v8[v14] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v15 = OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_closeButton;
  *(_QWORD *)&v8[v15] = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 7);
  v16 = OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardContainer;
  *(_QWORD *)&v8[v16] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMCardContainerView()), "init");
  *(_QWORD *)&v8[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_passthroughView] = 0;
  v8[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_isFirstLayoutCompleted] = 0;
  v8[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_isPanFromScrollView] = 0;
  v8[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_isPanningCard] = 0;
  v17 = &v8[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_startPosition];
  *(_QWORD *)v17 = 0;
  v17[8] = 1;
  *(_QWORD *)&v8[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_otherGesture] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_compactConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v8[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_regularConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v8[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_compactCardTopConstraint] = 0;
  *(_QWORD *)&v8[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_regularCardTopConstraint] = 0;
  v18 = &v8[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController];
  *(_QWORD *)v18 = 0;
  *((_QWORD *)v18 + 1) = 0;

  if (a2)
  {
    v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v19 = 0;
  }
  v22.receiver = v8;
  v22.super_class = (Class)type metadata accessor for FMCardContainerViewController();
  v20 = objc_msgSendSuper2(&v22, "initWithNibName:bundle:", v19, a3);

  return v20;
}

void sub_10000DD8C(char *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  char v10;
  uint64_t v11;
  char v12;
  int v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  void *v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  id v39;
  uint64_t v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;

  v4 = type metadata accessor for FMSelectedSection(0);
  __chkstk_darwin(v4);
  v6 = (uint64_t)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OBJC_IVAR____TtC6FindMy8FMTabBar_mediator;
  v8 = qword_1005D1F68;
  v9 = *(id *)(*(_QWORD *)&a1[OBJC_IVAR____TtC6FindMy8FMTabBar_mediator] + 16);
  if (v8 != -1)
    swift_once(&qword_1005D1F68, sub_100006164);
  if (byte_1005F5E31 == 1)
  {
    v10 = v9[OBJC_IVAR____TtC6FindMy19FMConditionProvider_FMFRestricted];

    v12 = v10 ^ 1;
  }
  else
  {

    v12 = 0;
  }
  v13 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)&a1[v7] + 16)
                           + OBJC_IVAR____TtC6FindMy19FMConditionProvider_FMIPRestricted);
  v14 = FMIPItemsTabEnabled.getter(v11);
  if (v13)
    v15 = 2;
  else
    v15 = 3;
  if ((v14 & 1) != 0)
    v16 = v15;
  else
    v16 = 2;
  v17 = objc_msgSend(a1, "selectedItem");
  sub_100024F3C(a2, v6);
  v18 = (v12 & 1) - 1;
  switch(swift_getEnumCaseMultiPayload(v6, v4))
  {
    case 0u:
      goto LABEL_17;
    case 2u:
      sub_100024F00(v6);
      goto LABEL_25;
    case 3u:
      sub_100024F00(v6);
      goto LABEL_31;
    case 0xBu:
      goto LABEL_18;
    case 0xCu:
    case 0xDu:
      v19 = objc_msgSend(a1, "items");
      if (!v19)
        goto LABEL_56;
      v20 = v19;
      v21 = sub_100006C5C(0, (unint64_t *)&unk_1005D9C10, UITabBarItem_ptr);
      v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v21);

      v22 = v16 + v18;
      if ((v6 & 0xC000000000000001) != 0)
        goto LABEL_58;
      if (v22 < *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_53;
      __break(1u);
LABEL_17:
      v23 = sub_100053F2C(&qword_1005DE9B0);
      sub_1000051EC(v6 + *(int *)(v23 + 48), (uint64_t *)&unk_1005D3AA0);
      v24 = type metadata accessor for FMIPDevice(0);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v6, v24);
LABEL_18:
      v25 = objc_msgSend(a1, "items");
      v6 = (uint64_t)v25;
      if ((v13 & 1) == 0)
        goto LABEL_36;
      if (!v25)
        goto LABEL_56;
      v26 = sub_100006C5C(0, (unint64_t *)&unk_1005D9C10, UITabBarItem_ptr);
      v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v26);

      v28 = v16 + v18;
      if ((v27 & 0xC000000000000001) != 0)
        goto LABEL_60;
      if (v28 < *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_44;
      __break(1u);
LABEL_23:
      sub_100024F00(v6);
      goto LABEL_57;
    case 0xEu:
LABEL_25:
      v29 = objc_msgSend(a1, "items");
      v30 = v29;
      if ((v12 & 1) != 0)
      {
        if (!v29)
          goto LABEL_56;
        v31 = sub_100006C5C(0, (unint64_t *)&unk_1005D9C10, UITabBarItem_ptr);
        v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v30, v31);

        if ((v27 & 0xC000000000000001) == 0)
        {
          if (*(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            v33 = *(void **)(v27 + 32);
LABEL_45:
            v41 = v33;
LABEL_46:
            v42 = v41;
            v43 = v27;
            goto LABEL_55;
          }
          __break(1u);
LABEL_62:
          v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v32, v18);
LABEL_40:
          v39 = v38;
          swift_bridgeObjectRelease(v18);

          v17 = v39;
          goto LABEL_57;
        }
        v28 = (v12 & 1) - 1;
      }
      else
      {
        if (!v29)
          goto LABEL_56;
        v40 = sub_100006C5C(0, (unint64_t *)&unk_1005D9C10, UITabBarItem_ptr);
        v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v30, v40);

        v28 = v16 + v18;
        if ((v27 & 0xC000000000000001) == 0)
        {
          if (v28 >= *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_64;
LABEL_44:
          v33 = *(void **)(v27 + 8 * v28 + 32);
          goto LABEL_45;
        }
      }
LABEL_60:
      v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v28, v27);
      goto LABEL_46;
    case 0x10u:
LABEL_31:
      v34 = objc_msgSend(a1, "items");
      v35 = v34;
      if ((v13 & 1) != 0)
      {
        if (!v34)
          goto LABEL_56;
        v36 = sub_100006C5C(0, (unint64_t *)&unk_1005D9C10, UITabBarItem_ptr);
        v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v35, v36);

        v22 = v12 & 1;
        if ((v6 & 0xC000000000000001) == 0)
        {
          if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10) <= v22)
          {
            __break(1u);
LABEL_36:
            if (v6)
            {
              v37 = sub_100006C5C(0, (unint64_t *)&unk_1005D9C10, UITabBarItem_ptr);
              v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v6, v37);

              v32 = v12 & 1;
              if ((v18 & 0xC000000000000001) != 0)
                goto LABEL_62;
              if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10) > v32)
              {
                v38 = *(id *)(v18 + 8 * v32 + 32);
                goto LABEL_40;
              }
              __break(1u);
LABEL_64:
              __break(1u);
              goto LABEL_65;
            }
LABEL_56:

            v17 = 0;
            goto LABEL_57;
          }
          goto LABEL_53;
        }
LABEL_58:
        v45 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v22, v6);
LABEL_54:
        v42 = v45;
        v43 = v6;
LABEL_55:
        swift_bridgeObjectRelease(v43);

        v17 = v42;
LABEL_57:
        objc_msgSend(a1, "setSelectedItem:", v17);

        return;
      }
      if (!v34)
        goto LABEL_56;
      v44 = sub_100006C5C(0, (unint64_t *)&unk_1005D9C10, UITabBarItem_ptr);
      v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v35, v44);

      if ((v12 & 1) != 0)
        v22 = 2;
      else
        v22 = 1;
      if ((v6 & 0xC000000000000001) != 0)
        goto LABEL_58;
      if (v22 < *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_53:
        v45 = *(id *)(v6 + 8 * v22 + 32);
        goto LABEL_54;
      }
LABEL_65:
      __break(1u);
      return;
    default:
      goto LABEL_23;
  }
}

uint64_t sub_10000E2B4@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100056D88(v4, (uint64_t)qword_1005F5748);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v17 = v9;
    *(_DWORD *)v8 = 136315138;
    LOBYTE(v16) = a1;
    v10 = String.init<A>(describing:)(&v16, &type metadata for FMRestoreState);
    v12 = v11;
    v16 = sub_100056DA0(v10, v11, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17);
    swift_bridgeObjectRelease(v12);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMRestoreState: selection(%s)...", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }

  v13 = dword_100487E7C[a1];
  v14 = type metadata accessor for FMSelectedSection(0);
  return swift_storeEnumTagMultiPayload(a2, v14, v13);
}

uint64_t type metadata accessor for FMAnnotation()
{
  return objc_opt_self(_TtC6FindMy12FMAnnotation);
}

char *sub_10000E5FC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  char *v6;
  id v7;
  NSString v8;
  id v9;
  int v10;
  uint64_t v11;
  uint64_t v13;
  _OWORD v14[2];
  objc_super v15[2];
  objc_super v16;

  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentHeading] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy18FMLocationProvider_poiLocations] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy18FMLocationProvider_poiFidelity] = 2;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy18FMLocationProvider_locationManager] = 0;
  v1 = OBJC_IVAR____TtC6FindMy18FMLocationProvider_locationShifter;
  v2 = type metadata accessor for FMLocationShifter(0);
  swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v3 = v0;
  *(_QWORD *)&v0[v1] = FMLocationShifter.init()();
  v3[OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLimitedPrecision] = 0;
  v3[OBJC_IVAR____TtC6FindMy18FMLocationProvider_includeHeading] = 0;
  v3[OBJC_IVAR____TtC6FindMy18FMLocationProvider_isLocationAuthorized] = 0;
  v3[OBJC_IVAR____TtC6FindMy18FMLocationProvider_limitedPrecision] = 0;

  v16.receiver = v3;
  v16.super_class = (Class)type metadata accessor for FMLocationProvider();
  v4 = objc_msgSendSuper2(&v16, "init");
  v5 = (void *)objc_opt_self(NSUserDefaults);
  v6 = (char *)v4;
  v7 = objc_msgSend(v5, "standardUserDefaults");
  v8 = String._bridgeToObjectiveC()();
  v9 = objc_msgSend(v7, "objectForKey:", v8);

  if (v9)
  {
    _bridgeAnyObjectToAny(_:)(v14, v9);
    swift_unknownObjectRelease(v9);

    sub_10004C850(v14, v15);
    sub_10004C850(v15, v14);
    v10 = swift_dynamicCast(&v13, v14, (char *)&type metadata for Any + 8, &type metadata for UInt, 6);
    v11 = v13;
    if (!v10)
      v11 = 2;
    *(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy18FMLocationProvider_poiFidelity] = v11;
  }
  else
  {

    *(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy18FMLocationProvider_poiFidelity] = 2;
  }
  return v6;
}

id sub_10000E808(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[24];
  objc_super v16;

  v16.receiver = v1;
  v16.super_class = (Class)type metadata accessor for FMMapViewController(0);
  objc_msgSendSuper2(&v16, "viewDidAppear:", a1 & 1);
  v3 = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator] + 56);
  v4 = type metadata accessor for FMSelectionSubscription(0);
  v5 = swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v6 = v5 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
  *(_QWORD *)(v6 + 8) = 0;
  swift_unknownObjectWeakInit(v6);
  swift_retain(v3);
  v7 = v1;
  UUID.init()(v7);
  v8 = v5 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
  *(_QWORD *)(v8 + 8) = &off_10055CE28;
  swift_unknownObjectWeakAssign(v8, v7);

  swift_beginAccess(v3 + 16, v15, 33, 0);
  v9 = swift_retain(v5);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v9);
  v11 = *(_QWORD *)((*(_QWORD *)(v3 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v10 = *(_QWORD *)((*(_QWORD *)(v3 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v11 >= v10 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v10 > 1, v11 + 1, 1);
  v12 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v11, v5);
  specialized Array._endMutation()(v12);
  swift_endAccess(v15);
  swift_release(v3);
  v13 = *(_QWORD *)&v7[OBJC_IVAR____TtC6FindMy19FMMapViewController_selectionSubscription];
  *(_QWORD *)&v7[OBJC_IVAR____TtC6FindMy19FMMapViewController_selectionSubscription] = v5;
  swift_release(v13);
  return sub_100026698();
}

id sub_10000E978()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  unsigned __int8 v7;

  v1 = (void *)objc_opt_self(NSNotificationCenter);
  v2 = objc_msgSend(v1, "defaultCenter");
  objc_msgSend(v2, "addObserver:selector:name:object:", v0, "refreshRestrictions", UIApplicationDidBecomeActiveNotification, 0);

  v3 = objc_msgSend(v1, "defaultCenter");
  objc_msgSend(v3, "addObserver:selector:name:object:", v0, "refreshRestrictions", MCEffectiveSettingsChangedNotification, 0);

  sub_10000C24C();
  sub_10000C7E8();
  v4 = objc_msgSend(v1, "defaultCenter");
  objc_msgSend(v4, "addObserver:selector:name:object:", v0, "checkNetworkState", FMLocalNetworkStatusChangedNotification, 0);
  v5 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_networkMonitor);
  objc_msgSend(v5, "startMonitoring");

  sub_10001AD6C();
  v6 = OBJC_IVAR____TtC6FindMy19FMConditionProvider_wasAccountCheckedOnce;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_wasAccountCheckedOnce) == 1)
  {
    sub_100377D6C();
  }
  else
  {
    sub_10001F440();
    *(_BYTE *)(v0 + v6) = 1;
  }
  v7 = objc_msgSend(v5, "isNetworkUp");
  *(_BYTE *)(v0 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_isNetworkUp) = v7;
  sub_100023C30();
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_radioPreferences), "setDelegate:", v0);
}

void sub_10000EAFC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[24];

  v1 = v0;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100056D88(v2, (uint64_t)qword_1005F5748);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMMapViewDataSource: unsubscribing all providers", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = v1[8];
  if (v7)
  {
    v8 = *(_QWORD *)(v1[2] + 24);
    swift_beginAccess(v8 + 16, v20, 33, 0);
    swift_retain(v7);
    swift_retain(v8);
    v9 = 0;
    v10 = sub_1001138E0((uint64_t *)(v8 + 16), v7);
    v11 = v10;
    v12 = *(_QWORD *)(v8 + 16);
    if ((unint64_t)v12 >> 62)
    {
      if (v12 < 0)
        v18 = *(_QWORD *)(v8 + 16);
      else
        v18 = v12 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(v8 + 16));
      v13 = _CocoaArrayWrapper.endIndex.getter(v18);
      swift_bridgeObjectRelease(v12);
      if (v13 >= v11)
      {
LABEL_8:
        sub_1002006EC(v11, v13);
        swift_endAccess(v20);
        swift_release(v8);
        swift_release(v7);
        v14 = v1[8];
        v1[8] = 0;
        swift_release(v14);
        v7 = v1[9];
        if (!v7)
          return;
        goto LABEL_11;
      }
    }
    else
    {
      v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v13 >= v10)
        goto LABEL_8;
    }
    __break(1u);
LABEL_20:
    if (v13 < 0)
      v19 = v13;
    else
      v19 = v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v13);
    v16 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(v13);
    if (v16 >= v9)
      goto LABEL_13;
LABEL_24:
    __break(1u);
    return;
  }
  v7 = v1[9];
  if (!v7)
    return;
LABEL_11:
  v8 = *(_QWORD *)(v1[2] + 48);
  swift_beginAccess(v8 + 16, v20, 33, 0);
  swift_retain(v7);
  swift_retain(v8);
  v15 = sub_10005D57C((uint64_t *)(v8 + 16), v7);
  v9 = v15;
  v13 = *(_QWORD *)(v8 + 16);
  if ((unint64_t)v13 >> 62)
    goto LABEL_20;
  v16 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v16 < v15)
    goto LABEL_24;
LABEL_13:
  sub_10005D338(v9, v16);
  swift_endAccess(v20);
  swift_release(v8);
  swift_release(v7);
  v17 = v1[9];
  v1[9] = 0;
  swift_release(v17);
}

id sub_10000ED88(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  id result;

  v2 = v1;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100056D88(v4, (uint64_t)qword_1005F5748);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMLocationProvider: startLocationMonitoring", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  v9 = OBJC_IVAR____TtC6FindMy18FMLocationProvider_locationManager;
  v10 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_locationManager);
  if (v10
    || (v11 = objc_msgSend(objc_allocWithZone((Class)CLLocationManager), "init"),
        v12 = *(void **)(v2 + v9),
        *(_QWORD *)(v2 + v9) = v11,
        v12,
        (v10 = *(void **)(v2 + v9)) != 0)
    && (objc_msgSend(v10, "setDelegate:", v2), (v10 = *(void **)(v2 + v9)) != 0))
  {
    objc_msgSend(v10, "setDesiredAccuracy:", kCLLocationAccuracyHundredMeters);
    v10 = *(void **)(v2 + v9);
    if (v10)
    {
      objc_msgSend(v10, "setDistanceFilter:", 100.0);
      v10 = *(void **)(v2 + v9);
    }
  }
  objc_msgSend(v10, "requestWhenInUseAuthorization");
  result = objc_msgSend(*(id *)(v2 + v9), "startUpdatingLocation");
  *(_BYTE *)(v2 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_includeHeading) = a1 & 1;
  return result;
}

void sub_10000EF20()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  uint64_t ObjectType;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  id v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  id v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  id v25;

  v1 = v0;
  v2 = (_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController);
  v3 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController);
  if (v3)
  {
    v4 = v2[1];
    ObjectType = swift_getObjectType(v3);
    v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
    v7 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent);
    v8 = v3;
    v6(v7, ObjectType, v4);

    v9 = (void *)*v2;
    if (*v2)
    {
      v10 = v2[1];
      v11 = swift_getObjectType(*v2);
      v12 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
      v13 = v9;
      v14 = (void *)v12(v11, v10);

      if (v14)
      {
        objc_msgSend(v14, "setScrollEnabled:", (*(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent) & 7) == 0);

      }
      v15 = (void *)*v2;
      if (*v2)
      {
        v16 = v2[1];
        v17 = swift_getObjectType(*v2);
        v18 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8);
        v19 = v15;
        v20 = (void *)v18(v17, v16);

        if (v20)
        {
          objc_msgSend(v20, "setBounces:", (*(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent) & 7) == 0);

        }
      }
    }
  }
  if (*(unsigned __int8 *)(v1 + OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent) >= 2u)
  {
    v21 = (void *)*v2;
    if (*v2)
    {
      v22 = v2[1];
      v23 = swift_getObjectType(*v2);
      v24 = *(void (**)(uint64_t, uint64_t))(v22 + 40);
      v25 = v21;
      v24(v23, v22);

    }
  }
}

id sub_10000F0DC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;

  if ((*(_BYTE *)(v0 + qword_1005DD888) & 1) != 0)
  {
    v1 = &qword_1005DD848;
  }
  else
  {
    if ((sub_100056B04() & 1) == 0)
    {
      v2 = &qword_1005DD850;
      return *(id *)(v0 + *v2);
    }
    v1 = &qword_1005DD840;
  }
  v0 = *(_QWORD *)(v0 + *v1);
  v2 = &OBJC_IVAR____TtC6FindMy15FMEmptyListView_scrollView;
  return *(id *)(v0 + *v2);
}

uint64_t sub_10000F144(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int EnumCaseMultiPayload;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = type metadata accessor for FMSelectedSection(0);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v3);
  v8 = (char *)&v24 - v7;
  __chkstk_darwin(v6);
  v10 = (char *)&v24 - v9;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v11 = type metadata accessor for Logger(0);
  sub_100056D88(v11, (uint64_t)qword_1005F5748);
  v12 = sub_10004FC74(a1, (uint64_t)v10, type metadata accessor for FMSelectedSection);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v25 = a1;
    v15 = (uint8_t *)swift_slowAlloc(12, -1);
    v16 = swift_slowAlloc(32, -1);
    v27 = v16;
    *(_DWORD *)v15 = 136315138;
    sub_10004FC74((uint64_t)v10, (uint64_t)v8, type metadata accessor for FMSelectedSection);
    v17 = String.init<A>(describing:)(v8, v2);
    v19 = v18;
    v26 = sub_100056DA0(v17, v18, &v27);
    a1 = v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v26, &v27);
    swift_bridgeObjectRelease(v19);
    sub_10004FCB8((uint64_t)v10, type metadata accessor for FMSelectedSection);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "FMRestoreState: restoreState(%s)", v15, 0xCu);
    swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v16, -1, -1);
    swift_slowDealloc(v15, -1, -1);
  }
  else
  {
    sub_10004FCB8((uint64_t)v10, type metadata accessor for FMSelectedSection);
  }

  sub_10004FC74(a1, (uint64_t)v5, type metadata accessor for FMSelectedSection);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v2);
  result = 0;
  switch(EnumCaseMultiPayload)
  {
    case 0:
      v22 = sub_100053F2C(&qword_1005DE9B0);
      sub_1000051EC((uint64_t)&v5[*(int *)(v22 + 48)], (uint64_t *)&unk_1005D3AA0);
      v23 = type metadata accessor for FMIPDevice(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v5, v23);
      return 0;
    case 1:
    case 7:
      sub_10004FCB8((uint64_t)v5, type metadata accessor for FMSelectedSection);
      return 0;
    case 3:
    case 4:
      sub_10004FCB8((uint64_t)v5, type metadata accessor for FMSelectedSection);
      return 4;
    case 11:
      return result;
    case 12:
      return 2;
    case 13:
      return 3;
    case 14:
      return 1;
    case 16:
    case 18:
      return 4;
    default:
      sub_10004FCB8((uint64_t)v5, type metadata accessor for FMSelectedSection);
      return 1;
  }
}

uint64_t sub_10000F468()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  __n128 v15;

  v1 = v0;
  v2 = v0 + qword_1005D9258;
  *(_QWORD *)(v2 + 8) = 0;
  swift_unknownObjectWeakInit(v2);
  v3 = qword_1005D1DE8;
  swift_retain(v1);
  if (v3 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100056D88(v4, (uint64_t)qword_1005F5748);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMItemImageCache: initialized", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  v9 = objc_msgSend((id)objc_opt_self(FMSystemInfo), "sharedInstance");
  v10 = objc_msgSend(v9, "osBuildVersion");

  if (v10)
  {
    v11 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
    v13 = v12;

  }
  else
  {
    v13 = 0xE700000000000000;
    v11 = 0x6E776F6E6B6E75;
  }
  v14 = (uint64_t *)(v1 + qword_1005D9250);
  *v14 = v11;
  v14[1] = v13;
  v15 = swift_release(v1);
  return FMIPItemImageCache.init(converter:)(sub_100027AC0, 0, v15);
}

void sub_10000F5EC(uint64_t a1, const char *a2, const char *a3)
{
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  NSObject *oslog;
  uint64_t v19;
  _QWORD v20[3];
  _BYTE v21[8];
  uint64_t v22;

  if (a1)
  {
    swift_errorRetain(a1);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v5 = type metadata accessor for Logger(0);
    sub_100056D88(v5, (uint64_t)qword_1005F5748);
    swift_errorRetain(a1);
    v6 = swift_errorRetain(a1);
    oslog = Logger.logObject.getter(v6);
    v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(12, -1);
      v9 = swift_slowAlloc(32, -1);
      v22 = v9;
      *(_DWORD *)v8 = 136315138;
      swift_getErrorValue(a1, v21, v20);
      v10 = Error.localizedDescription.getter(v20[1], v20[2]);
      v12 = v11;
      v19 = sub_100056DA0(v10, v11, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, v20);
      swift_bridgeObjectRelease(v12);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, oslog, v7, a2, v8, 0xCu);
      swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v9, -1, -1);
      swift_slowDealloc(v8, -1, -1);

      swift_errorRelease(a1);
      return;
    }
    swift_errorRelease(a1);
    swift_errorRelease(a1);
    swift_errorRelease(a1);
  }
  else
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v14 = type metadata accessor for Logger(0);
    v15 = sub_100056D88(v14, (uint64_t)qword_1005F5748);
    oslog = Logger.logObject.getter(v15);
    v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v16, a3, v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }
  }

}

void sub_10000F888()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  NSObject *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD v11[5];
  uint64_t v12;

  v1 = v0;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100056D88(v2, (uint64_t)qword_1005F5748);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMImageCache: Purging stale cache...", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(NSObject **)(v1 + qword_1005D38F0);
  v8 = swift_allocObject(&unk_1005424D0, 32, 7);
  *(_QWORD *)(v8 + 16) = sub_10005ECD4;
  *(_QWORD *)(v8 + 24) = v1;
  v11[4] = sub_100021E78;
  v12 = v8;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_100021E38;
  v11[3] = &unk_1005424E8;
  v9 = _Block_copy(v11);
  v10 = v12;
  swift_retain(v1);
  swift_retain(v8);
  swift_release(v10);
  dispatch_sync(v7, v9);
  _Block_release(v9);
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation(v8, "", 98, 166, 26, 1);
  swift_release(v1);
  swift_release(v8);
  if ((v7 & 1) != 0)
    __break(1u);
}

void sub_10000FA48(void *a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t ObjectType;
  uint64_t v13;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v2 = type metadata accessor for Logger(0);
  sub_100056D88(v2, (uint64_t)qword_1005F5748);
  v11 = a1;
  v3 = Logger.logObject.getter(v11);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v13 = v6;
    *(_DWORD *)v5 = 136446210;
    ObjectType = swift_getObjectType(v11);
    v7 = sub_100053F2C((uint64_t *)&unk_1005DF440);
    v8 = String.init<A>(describing:)(&ObjectType, v7);
    v10 = v9;
    ObjectType = sub_100056DA0(v8, v9, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&ObjectType, &v13);

    swift_bridgeObjectRelease(v10);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%{public}s: completed initial reload of friends from server", v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
}

void sub_10000FC1C()
{
  char *v0;
  id v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "userInterfaceStyle");

  v3 = (void *)objc_opt_self(UIColor);
  v4 = v3;
  if (v2 == (id)2)
  {
    v5 = objc_msgSend(v3, "systemGray2Color");
    v6 = objc_msgSend(v5, "CGColor");

    v7 = objc_msgSend(v4, "systemGray3Color");
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy26FMNoLocationBackgroundView_centerCircle], "setBackgroundColor:", v6);
    v8 = *(void **)&v0[OBJC_IVAR____TtC6FindMy26FMNoLocationBackgroundView_centerPlaceholder];
    v12 = objc_msgSend(v7, "CGColor");
    objc_msgSend(v8, "setBackgroundColor:");

  }
  else
  {
    v9 = objc_msgSend(v3, "systemGray6Color");
    v7 = objc_msgSend(v9, "CGColor");

    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy26FMNoLocationBackgroundView_centerCircle], "setBackgroundColor:", v7);
    v10 = *(void **)&v0[OBJC_IVAR____TtC6FindMy26FMNoLocationBackgroundView_centerPlaceholder];
    v11 = objc_msgSend(v4, "whiteColor");
    v12 = objc_msgSend(v11, "CGColor");

    objc_msgSend(v10, "setBackgroundColor:", v12);
  }

}

char *sub_10000FDEC(void *a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSString v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  id v27;
  NSString v28;
  uint64_t object;
  uint64_t v30;
  SEL *v31;
  unint64_t v32;
  id v33;
  void *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  SEL *v42;
  char *v43;
  uint64_t v44;
  void *v45;
  void *v46;
  Swift::String v47;
  void *v48;
  id v49;
  Swift::String v50;
  Swift::String v51;
  Swift::String v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  void *v60;
  Swift::String v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSString v70;
  id v71;
  void (**v72)(_QWORD, _QWORD, uint64_t);
  uint64_t v73;
  uint64_t v74;
  id v75;
  id v76;
  NSString v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  Swift::String v83;
  unint64_t v84;
  uint64_t v85;
  id v86;
  Swift::String v87;
  Swift::String v88;
  Swift::String v89;
  unint64_t v90;
  NSString v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  NSString v97;
  id v98;
  uint64_t v99;
  void (**v100)(void *, _QWORD, uint64_t);
  void *v101;
  uint64_t v102;
  id v103;
  id v104;
  NSString v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t v109;
  Swift::String v110;
  unint64_t v111;
  uint64_t v112;
  id v113;
  Swift::String v114;
  Swift::String v115;
  Swift::String v116;
  unint64_t v117;
  NSString v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  NSObject *v125;
  os_log_type_t v126;
  uint8_t *v127;
  NSString v128;
  id v129;
  uint64_t v130;
  id v131;
  NSString v132;
  id v133;
  uint64_t v134;
  NSString v135;
  double v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  NSString v140;
  id v141;
  uint64_t v142;
  id v143;
  id v144;
  NSString v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  unint64_t v152;
  Swift::String v153;
  unint64_t v154;
  uint64_t v155;
  id v156;
  Swift::String v157;
  Swift::String v158;
  Swift::String v159;
  unint64_t v160;
  NSString v161;
  uint64_t v162;
  uint64_t v163;
  NSObject *v164;
  os_log_type_t v165;
  uint8_t *v166;
  uint64_t v167;
  id v168;
  NSString v169;
  id v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  id v175;
  NSString v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  id v181;
  Swift::String v182;
  Swift::String v183;
  void *v184;
  uint64_t v185;
  uint64_t v186;
  id v187;
  uint64_t v188;
  NSString v189;
  id v190;
  uint64_t v191;
  id v192;
  id v193;
  NSString v194;
  char *v195;
  uint64_t v196;
  unint64_t v197;
  unint64_t v198;
  Swift::String v199;
  unint64_t v200;
  uint64_t v201;
  id v202;
  Swift::String v203;
  Swift::String v204;
  Swift::String v205;
  unint64_t v206;
  NSString v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  id v211;
  NSString v212;
  id v213;
  uint64_t v214;
  id v215;
  Swift::String v216;
  Swift::String v217;
  Swift::String v218;
  unint64_t v219;
  NSString v220;
  uint64_t v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  __int128 v226;
  void *v227;
  void *v228;
  uint64_t v229;
  id v230;
  uint64_t v231;
  uint64_t v232;
  id v233;
  Swift::String v234;
  uint64_t v235;
  unint64_t v236;
  _BYTE v237[32];
  Swift::String v238;
  Swift::String v239;
  Swift::String v240;
  Swift::String v241;
  Swift::String v242;
  Swift::String v243;
  Swift::String v244;

  v233 = a1;
  v3 = sub_100053F2C(&qword_1005D3380);
  __chkstk_darwin(v3);
  v231 = (uint64_t)&v222 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v232 = type metadata accessor for FMFFriend(0);
  v5 = *(_QWORD *)(v232 - 8);
  __chkstk_darwin(v232);
  v7 = (char *)&v222 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FMIPUnknownItem(0);
  v9 = *(void **)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v222 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FMIPItem(0);
  v13 = *(void **)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v222 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FMIPDevice(0);
  v224 = *(_QWORD *)(v16 - 8);
  v225 = v16;
  __chkstk_darwin(v16);
  v223 = (char *)&v222 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for FMClusterAnnotation();
  v19 = a2;
  v20 = swift_dynamicCastClass(a2, v18);
  if (v20)
  {
    v21 = v20;
    swift_unknownObjectRetain(a2);
    v22 = String._bridgeToObjectiveC()();
    v23 = objc_msgSend(v233, "dequeueReusableAnnotationViewWithIdentifier:", v22);

    v24 = v19;
    if (v23)
    {
      v25 = type metadata accessor for FMClusteredAnnotationView();
      v26 = (char *)swift_dynamicCastClass(v23, v25);
      if (v26)
        goto LABEL_6;

    }
    v27 = objc_allocWithZone((Class)type metadata accessor for FMClusteredAnnotationView());
    swift_unknownObjectRetain(v19);
    v28 = String._bridgeToObjectiveC()();
    v26 = (char *)objc_msgSend(v27, "initWithAnnotation:reuseIdentifier:", v21, v28);

    swift_unknownObjectRelease(v19);
LABEL_6:
    v235 = 0;
    v236 = 0xE000000000000000;
    v229 = OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_annotations;
    object = *(_QWORD *)&v26[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_annotations];
    if ((unint64_t)object >> 62)
    {
      if (object < 0)
        v214 = *(_QWORD *)&v26[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_annotations];
      else
        v214 = object & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(object);
      v30 = _CocoaArrayWrapper.endIndex.getter(v214);
      v31 = (SEL *)&unk_1005AA000;
      if (v30)
      {
LABEL_8:
        v222 = v24;
        v32 = 0;
        v233 = (id)(object & 0xC000000000000001);
        v227 = (void *)0x80000001004C10A0;
        v228 = (void *)0x80000001004C10D0;
        v226 = xmmword_100481740;
        v231 = v30;
        v232 = object;
        while (1)
        {
          v33 = v233
              ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v32, object)
              : *(id *)(object + 8 * v32 + 32);
          v34 = v33;
          v35 = v32 + 1;
          if (__OFADD__(v32, 1))
            break;
          if (v32 > 1)
          {
            v234._countAndFlagsBits = 0;
            v234._object = (void *)0xE000000000000000;
            _StringGuts.grow(_:)(20);
            swift_bridgeObjectRelease(v234._object);
            v49 = objc_msgSend((id)objc_opt_self(NSBundle), v31[208]);
            v50._countAndFlagsBits = 0xD000000000000023;
            v238._countAndFlagsBits = 0xD000000000000035;
            v238._object = v228;
            v50._object = v227;
            v51._countAndFlagsBits = 0;
            v51._object = (void *)0xE000000000000000;
            v52 = NSLocalizedString(_:tableName:bundle:value:comment:)(v50, (Swift::String_optional)0, (NSBundle)v49, v51, v238);
            object = (uint64_t)v52._object;

            v53 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
            v54 = swift_allocObject(v53, 72, 7);
            *(_OWORD *)(v54 + 16) = v226;
            v55 = *(_QWORD *)&v26[v229];
            if ((unint64_t)v55 >> 62)
            {
              if (v55 < 0)
                v63 = *(_QWORD *)&v26[v229];
              else
                v63 = v55 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(*(_QWORD *)&v26[v229]);
              v64 = _CocoaArrayWrapper.endIndex.getter(v63);
              swift_bridgeObjectRelease(v55);
              v57 = v64 - 2;
              if (__OFSUB__(v64, 2))
              {
LABEL_27:
                __break(1u);
LABEL_28:
                swift_bridgeObjectRelease(object);
                v24 = v222;
                goto LABEL_87;
              }
            }
            else
            {
              v56 = *(_QWORD *)((v55 & 0xFFFFFFFFFFFFF8) + 0x10);
              v57 = v56 - 2;
              if (__OFSUB__(v56, 2))
                goto LABEL_27;
            }
            *(_QWORD *)(v54 + 56) = &type metadata for Int;
            *(_QWORD *)(v54 + 64) = &protocol witness table for Int;
            *(_QWORD *)(v54 + 32) = v57;
            v58 = String.init(format:_:)(v52._countAndFlagsBits, v52._object, v54);
            v60 = v59;
            swift_bridgeObjectRelease(v52._object);
            v234._countAndFlagsBits = v58;
            v234._object = v60;
            swift_bridgeObjectRetain(v60);
            v61._countAndFlagsBits = 8236;
            v61._object = (void *)0xE200000000000000;
            String.append(_:)(v61);
            swift_bridgeObjectRelease(v60);
            v62 = v234._object;
            String.append(_:)(v234);
            swift_bridgeObjectRelease(v62);

            v30 = v231;
            object = v232;
            if (v32 == 2)
              goto LABEL_28;
          }
          else
          {
            v36 = type metadata accessor for FMDeviceAnnotation(0);
            v37 = swift_dynamicCastClass(v34, v36);
            if (v37)
            {
              v38 = v37 + OBJC_IVAR____TtC6FindMy18FMDeviceAnnotation_device;
              swift_beginAccess(v37 + OBJC_IVAR____TtC6FindMy18FMDeviceAnnotation_device, v237, 0, 0);
              v39 = v223;
              v40 = v224;
              v41 = v225;
              (*(void (**)(char *, uint64_t, uint64_t))(v224 + 16))(v223, v38, v225);
              v230 = v34;
              v42 = v31;
              v43 = v26;
              v44 = FMIPDevice.name.getter();
              v46 = v45;
              (*(void (**)(char *, uint64_t))(v40 + 8))(v39, v41);
              v234._countAndFlagsBits = v44;
              v234._object = v46;
              v26 = v43;
              v31 = v42;
              v30 = v231;
              swift_bridgeObjectRetain(v46);
              v47._countAndFlagsBits = 8236;
              v47._object = (void *)0xE200000000000000;
              String.append(_:)(v47);
              swift_bridgeObjectRelease(v46);
              v48 = v234._object;
              String.append(_:)(v234);
              object = v232;
              swift_bridgeObjectRelease(v48);

            }
          }
          ++v32;
          if (v35 == v30)
            goto LABEL_28;
        }
        __break(1u);
        goto LABEL_71;
      }
    }
    else
    {
      v30 = *(_QWORD *)((object & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(object);
      v31 = (SEL *)&unk_1005AA000;
      if (v30)
        goto LABEL_8;
    }
    swift_bridgeObjectRelease(object);
LABEL_87:
    v234._countAndFlagsBits = 0;
    v234._object = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v234._object);
    v215 = objc_msgSend((id)objc_opt_self(NSBundle), v31[208]);
    v244._object = (void *)0x80000001004C1020;
    v216._countAndFlagsBits = 0x4E49505F50414DLL;
    v216._object = (void *)0xE700000000000000;
    v217._countAndFlagsBits = 0;
    v217._object = (void *)0xE000000000000000;
    v244._countAndFlagsBits = 0xD000000000000019;
    v218 = NSLocalizedString(_:tableName:bundle:value:comment:)(v216, (Swift::String_optional)0, (NSBundle)v215, v217, v244);

    String.append(_:)(v218);
    swift_bridgeObjectRelease(v218._object);
    v219 = v236;
    v79 = v26;
    v220 = String._bridgeToObjectiveC()();
    objc_msgSend(v79, "setAccessibilityLabel:", v220, swift_bridgeObjectRelease(v219).n128_f64[0]);

    v92 = v24;
    goto LABEL_88;
  }
  v229 = (uint64_t)v15;
  v230 = v13;
  v227 = v11;
  v228 = v9;
  *(_QWORD *)&v226 = v7;
  v222 = v5;
  v65 = v232;
  v66 = type metadata accessor for FMItemAnnotation(0);
  v67 = v19;
  v68 = swift_dynamicCastClass(v19, v66);
  if (v68)
  {
    v69 = v68;
    swift_unknownObjectRetain(v67);
    v70 = String._bridgeToObjectiveC()();
    v71 = objc_msgSend(v233, "dequeueReusableAnnotationViewWithIdentifier:", v70);

    v32 = v67;
    v73 = v229;
    v72 = (void (**)(_QWORD, _QWORD, uint64_t))v230;
    if (v71)
    {
      v74 = type metadata accessor for FMItemAnnotationView();
      v75 = (id)swift_dynamicCastClass(v71, v74);
      if (v75)
      {
LABEL_34:
        v78 = v69 + OBJC_IVAR____TtC6FindMy16FMItemAnnotation_item;
        swift_beginAccess(v69 + OBJC_IVAR____TtC6FindMy16FMItemAnnotation_item, v237, 0, 0);
        v72[2](v73, v78, v12);
        v79 = (char *)v75;
        v80 = FMIPItem.name.getter();
        v82 = v81;
        ((void (*)(uint64_t, uint64_t))v72[1])(v73, v12);
        v235 = v80;
        v236 = v82;
        swift_bridgeObjectRetain(v82);
        v83._countAndFlagsBits = 44;
        v83._object = (void *)0xE100000000000000;
        String.append(_:)(v83);
        swift_bridgeObjectRelease(v82);
        v85 = v235;
        v84 = v236;
        v235 = 0;
        v236 = 0xE000000000000000;
        _StringGuts.grow(_:)(20);
        swift_bridgeObjectRelease(v236);
        v86 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v239._object = (void *)0x80000001004C1020;
        v87._countAndFlagsBits = 0x4E49505F50414DLL;
        v87._object = (void *)0xE700000000000000;
        v88._countAndFlagsBits = 0;
        v88._object = (void *)0xE000000000000000;
        v239._countAndFlagsBits = 0xD000000000000019;
        v89 = NSLocalizedString(_:tableName:bundle:value:comment:)(v87, (Swift::String_optional)0, (NSBundle)v86, v88, v239);

        v235 = v85;
        v236 = v84;
        swift_bridgeObjectRetain(v84);
        String.append(_:)(v89);
        swift_bridgeObjectRelease(v84);
        swift_bridgeObjectRelease(v89._object);
        v90 = v236;
        v91 = String._bridgeToObjectiveC()();
        objc_msgSend(v79, "setAccessibilityLabel:", v91, swift_bridgeObjectRelease(v90).n128_f64[0]);

LABEL_35:
        goto LABEL_36;
      }

    }
    v76 = objc_allocWithZone((Class)type metadata accessor for FMItemAnnotationView());
    swift_unknownObjectRetain(v67);
    v77 = String._bridgeToObjectiveC()();
    v75 = objc_msgSend(v76, "initWithAnnotation:reuseIdentifier:", v69, v77);

    swift_unknownObjectRelease(v67);
    goto LABEL_34;
  }
  v93 = type metadata accessor for FMUnknownItemAnnotation(0);
  v94 = swift_dynamicCastClass(v19, v93);
  if (v94)
  {
    v95 = v94;
    v96 = v67;
    swift_unknownObjectRetain(v67);
    v97 = String._bridgeToObjectiveC()();
    v98 = objc_msgSend(v233, "dequeueReusableAnnotationViewWithIdentifier:", v97);

    v99 = v8;
    v101 = v227;
    v100 = (void (**)(void *, _QWORD, uint64_t))v228;
    if (v98)
    {
      v102 = type metadata accessor for FMItemAnnotationView();
      v103 = (id)swift_dynamicCastClass(v98, v102);
      if (v103)
      {
LABEL_42:
        v106 = v95 + OBJC_IVAR____TtC6FindMy23FMUnknownItemAnnotation_item;
        swift_beginAccess(v95 + OBJC_IVAR____TtC6FindMy23FMUnknownItemAnnotation_item, v237, 0, 0);
        v100[2](v101, v106, v99);
        v79 = (char *)v103;
        v107 = FMIPUnknownItem.name.getter();
        v109 = v108;
        ((void (*)(void *, uint64_t))v100[1])(v101, v99);
        v235 = v107;
        v236 = v109;
        swift_bridgeObjectRetain(v109);
        v110._countAndFlagsBits = 44;
        v110._object = (void *)0xE100000000000000;
        String.append(_:)(v110);
        swift_bridgeObjectRelease(v109);
        v112 = v235;
        v111 = v236;
        v235 = 0;
        v236 = 0xE000000000000000;
        _StringGuts.grow(_:)(20);
        swift_bridgeObjectRelease(v236);
        v113 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v240._object = (void *)0x80000001004C1020;
        v114._countAndFlagsBits = 0x4E49505F50414DLL;
        v114._object = (void *)0xE700000000000000;
        v115._countAndFlagsBits = 0;
        v115._object = (void *)0xE000000000000000;
        v240._countAndFlagsBits = 0xD000000000000019;
        v116 = NSLocalizedString(_:tableName:bundle:value:comment:)(v114, (Swift::String_optional)0, (NSBundle)v113, v115, v240);

        v235 = v112;
        v236 = v111;
        swift_bridgeObjectRetain(v111);
        String.append(_:)(v116);
        swift_bridgeObjectRelease(v111);
        swift_bridgeObjectRelease(v116._object);
        v117 = v236;
        v118 = String._bridgeToObjectiveC()();
        objc_msgSend(v79, "setAccessibilityLabel:", v118, swift_bridgeObjectRelease(v117).n128_f64[0]);

        v92 = v96;
        goto LABEL_88;
      }

    }
    v104 = objc_allocWithZone((Class)type metadata accessor for FMItemAnnotationView());
    swift_unknownObjectRetain(v96);
    v105 = String._bridgeToObjectiveC()();
    v103 = objc_msgSend(v104, "initWithAnnotation:reuseIdentifier:", v95, v105);

    swift_unknownObjectRelease(v96);
    goto LABEL_42;
  }
  v119 = type metadata accessor for FMInfoAnnotation(0);
  v120 = swift_dynamicCastClass(v19, v119);
  v32 = v19;
  if (v120)
  {
    v121 = v120;
    v122 = qword_1005D1DE8;
    swift_unknownObjectRetain(v19);
    if (v122 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v123 = type metadata accessor for Logger(0);
    v124 = sub_100056D88(v123, (uint64_t)qword_1005F5748);
    v125 = Logger.logObject.getter(v124);
    v126 = static os_log_type_t.default.getter(v125);
    if (os_log_type_enabled(v125, v126))
    {
      v127 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v127 = 0;
      _os_log_impl((void *)&_mh_execute_header, v125, v126, "FMMapViewController: Info annotation added", v127, 2u);
      swift_slowDealloc(v127, -1, -1);
    }

    v128 = String._bridgeToObjectiveC()();
    v129 = objc_msgSend(v233, "dequeueReusableAnnotationViewWithIdentifier:", v128);

    if (v129)
    {
      v130 = objc_opt_self(MKMarkerAnnotationView);
      v79 = (char *)swift_dynamicCastObjCClass(v129, v130);
      if (v79)
      {
LABEL_52:
        v133 = objc_msgSend((id)objc_opt_self(UIColor), "systemRedColor");
        objc_msgSend(v79, "setTintColor:", v133);

        v134 = *(_QWORD *)(v121 + OBJC_IVAR____TtC6FindMy16FMInfoAnnotation_icon + 8);
        swift_bridgeObjectRetain(v134);
        v135 = String._bridgeToObjectiveC()();
        objc_msgSend(v79, "setGlyphText:", v135, swift_bridgeObjectRelease(v134).n128_f64[0]);

        objc_msgSend(v79, "setTitleVisibility:", 2);
        LODWORD(v136) = 1148846080;
        objc_msgSend(v79, "setDisplayPriority:", v136);
        objc_msgSend(v79, "setUserInteractionEnabled:", 0);
        goto LABEL_36;
      }

    }
    v131 = objc_allocWithZone((Class)MKMarkerAnnotationView);
    swift_unknownObjectRetain(v32);
    v132 = String._bridgeToObjectiveC()();
    v79 = (char *)objc_msgSend(v131, "initWithAnnotation:reuseIdentifier:", v121, v132);

    swift_unknownObjectRelease(v32);
    goto LABEL_52;
  }
  v137 = type metadata accessor for FMDeviceAnnotation(0);
  v138 = swift_dynamicCastClass(v19, v137);
  if (v138)
  {
    v139 = v138;
    swift_unknownObjectRetain(v19);
    v140 = String._bridgeToObjectiveC()();
    v141 = objc_msgSend(v233, "dequeueReusableAnnotationViewWithIdentifier:", v140);

    if (v141)
    {
      v142 = type metadata accessor for FMDeviceAnnotationView();
      v143 = (id)swift_dynamicCastClass(v141, v142);
      if (v143)
      {
LABEL_58:
        v146 = v139 + OBJC_IVAR____TtC6FindMy18FMDeviceAnnotation_device;
        swift_beginAccess(v146, v237, 0, 0);
        v147 = v223;
        v148 = v224;
        v149 = v225;
        (*(void (**)(char *, uint64_t, uint64_t))(v224 + 16))(v223, v146, v225);
        v79 = (char *)v143;
        v150 = FMIPDevice.name.getter();
        v152 = v151;
        (*(void (**)(char *, uint64_t))(v148 + 8))(v147, v149);
        v235 = v150;
        v236 = v152;
        swift_bridgeObjectRetain(v152);
        v153._countAndFlagsBits = 44;
        v153._object = (void *)0xE100000000000000;
        String.append(_:)(v153);
        swift_bridgeObjectRelease(v152);
        v155 = v235;
        v154 = v236;
        v235 = 0;
        v236 = 0xE000000000000000;
        _StringGuts.grow(_:)(20);
        swift_bridgeObjectRelease(v236);
        v156 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v241._object = (void *)0x80000001004C1020;
        v157._countAndFlagsBits = 0x4E49505F50414DLL;
        v157._object = (void *)0xE700000000000000;
        v158._countAndFlagsBits = 0;
        v158._object = (void *)0xE000000000000000;
        v241._countAndFlagsBits = 0xD000000000000019;
        v159 = NSLocalizedString(_:tableName:bundle:value:comment:)(v157, (Swift::String_optional)0, (NSBundle)v156, v158, v241);

        v235 = v155;
        v236 = v154;
        swift_bridgeObjectRetain(v154);
        String.append(_:)(v159);
        swift_bridgeObjectRelease(v154);
        swift_bridgeObjectRelease(v159._object);
        v160 = v236;
        v161 = String._bridgeToObjectiveC()();
        objc_msgSend(v79, "setAccessibilityLabel:", v161, swift_bridgeObjectRelease(v160).n128_f64[0]);

        if (qword_1005D1DE8 != -1)
          swift_once(&qword_1005D1DE8, sub_100005ADC);
        v162 = type metadata accessor for Logger(0);
        v163 = sub_100056D88(v162, (uint64_t)qword_1005F5748);
        v164 = Logger.logObject.getter(v163);
        v165 = static os_log_type_t.default.getter(v164);
        if (os_log_type_enabled(v164, v165))
        {
          v166 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v166 = 0;
          _os_log_impl((void *)&_mh_execute_header, v164, v165, "FMMapViewController: Device annotation added", v166, 2u);
          swift_slowDealloc(v166, -1, -1);
          swift_unknownObjectRelease(v32);

          return v79;
        }

LABEL_36:
        v92 = v32;
LABEL_88:
        swift_unknownObjectRelease(v92);
        return v79;
      }

    }
    v144 = objc_allocWithZone((Class)type metadata accessor for FMDeviceAnnotationView());
    swift_unknownObjectRetain(v19);
    v145 = String._bridgeToObjectiveC()();
    v143 = objc_msgSend(v144, "initWithAnnotation:reuseIdentifier:", v139, v145);

    swift_unknownObjectRelease(v19);
    goto LABEL_58;
  }
  v167 = type metadata accessor for FMPersonAnnotation(0);
  v33 = (id)swift_dynamicCastClass(v19, v167);
  if (v33)
  {
    v168 = v33;
    swift_unknownObjectRetain(v19);
    v169 = String._bridgeToObjectiveC()();
    v170 = objc_msgSend(v233, "dequeueReusableAnnotationViewWithIdentifier:", v169);

    v32 = v19;
    v171 = v65;
    v172 = v222;
    v173 = v226;
    if (v170)
    {
      v174 = type metadata accessor for FMPersonAnnotationView();
      v79 = (char *)swift_dynamicCastClass(v170, v174);
      if (v79)
      {
LABEL_67:
        v177 = (uint64_t)v168 + OBJC_IVAR____TtC6FindMy18FMPersonAnnotation_person;
        swift_beginAccess(v177, v237, 0, 0);
        v178 = v177;
        v179 = v231;
        sub_100007464(v178, v231, &qword_1005D3380);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v172 + 48))(v179, 1, v171) != 1)
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v172 + 32))(v173, v231, v171);
          v195 = v79;
          v196 = FMFFriend.name.getter(v195);
          v198 = v197;
          v235 = v196;
          v236 = v197;
          swift_bridgeObjectRetain(v197);
          v199._countAndFlagsBits = 44;
          v199._object = (void *)0xE100000000000000;
          String.append(_:)(v199);
          swift_bridgeObjectRelease(v198);
          v201 = v235;
          v200 = v236;
          v235 = 0;
          v236 = 0xE000000000000000;
          _StringGuts.grow(_:)(20);
          swift_bridgeObjectRelease(v236);
          v202 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
          v243._object = (void *)0x80000001004C1020;
          v203._countAndFlagsBits = 0x4E49505F50414DLL;
          v203._object = (void *)0xE700000000000000;
          v204._countAndFlagsBits = 0;
          v204._object = (void *)0xE000000000000000;
          v243._countAndFlagsBits = 0xD000000000000019;
          v205 = NSLocalizedString(_:tableName:bundle:value:comment:)(v203, (Swift::String_optional)0, (NSBundle)v202, v204, v243);

          v235 = v201;
          v236 = v200;
          swift_bridgeObjectRetain(v200);
          String.append(_:)(v205);
          swift_bridgeObjectRelease(v200);
          swift_bridgeObjectRelease(v205._object);
          v206 = v236;
          v207 = String._bridgeToObjectiveC()();
          objc_msgSend(v195, "setAccessibilityLabel:", v207, swift_bridgeObjectRelease(v206).n128_f64[0]);
          swift_unknownObjectRelease(v67);

          (*(void (**)(_QWORD, uint64_t))(v172 + 8))(v226, v171);
          return v79;
        }
        sub_1000051EC(v231, &qword_1005D3380);
        v235 = 0;
        v236 = 0xE000000000000000;
        v180 = v79;
        _StringGuts.grow(_:)(20);
        swift_bridgeObjectRelease(v236);
        v181 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v242._object = (void *)0x80000001004C1020;
        v182._countAndFlagsBits = 0x4E49505F50414DLL;
        v182._object = (void *)0xE700000000000000;
        v183._countAndFlagsBits = 0;
        v183._object = (void *)0xE000000000000000;
        v242._countAndFlagsBits = 0xD000000000000019;
        v184 = NSLocalizedString(_:tableName:bundle:value:comment:)(v182, (Swift::String_optional)0, (NSBundle)v181, v183, v242)._object;

        v91 = String._bridgeToObjectiveC()();
        objc_msgSend(v180, "setAccessibilityLabel:", v91, swift_bridgeObjectRelease(v184).n128_f64[0]);

        goto LABEL_35;
      }

    }
    v175 = objc_allocWithZone((Class)type metadata accessor for FMPersonAnnotationView());
    swift_unknownObjectRetain(v67);
    v176 = String._bridgeToObjectiveC()();
    v79 = (char *)objc_msgSend(v175, "initWithAnnotation:reuseIdentifier:", v168, v176);

    swift_unknownObjectRelease(v67);
    goto LABEL_67;
  }
LABEL_71:
  v185 = type metadata accessor for FMTrackAnnotation((uint64_t)v33);
  v186 = swift_dynamicCastClass(v32, v185);
  v187 = v233;
  if (v186)
  {
    v188 = v186;
    swift_unknownObjectRetain(v32);
    v189 = String._bridgeToObjectiveC()();
    v190 = objc_msgSend(v187, "dequeueReusableAnnotationViewWithIdentifier:", v189);

    if (v190)
    {
      v191 = type metadata accessor for FMTrackAnnotationView();
      v192 = (id)swift_dynamicCastClass(v190, v191);
      if (v192)
      {
LABEL_76:
        v79 = (char *)v192;
        objc_msgSend(v79, "setUserInteractionEnabled:", 0, v222);
LABEL_80:

        goto LABEL_36;
      }

    }
    v193 = objc_allocWithZone((Class)type metadata accessor for FMTrackAnnotationView());
    swift_unknownObjectRetain(v32);
    v194 = String._bridgeToObjectiveC()();
    v192 = objc_msgSend(v193, "initWithAnnotation:reuseIdentifier:", v188, v194);

    swift_unknownObjectRelease(v32);
    goto LABEL_76;
  }
  v208 = objc_opt_self(MKUserLocation);
  v209 = swift_dynamicCastObjCClass(v32, v208);
  if (v209)
  {
    v210 = v209;
    v211 = objc_allocWithZone((Class)MKUserLocationView);
    swift_unknownObjectRetain(v32);
    v212 = String._bridgeToObjectiveC()();
    v213 = objc_msgSend(v211, "initWithAnnotation:reuseIdentifier:", v210, v212);

    v79 = (char *)v213;
    objc_msgSend(v79, "setEnabled:", 0, v222);
    goto LABEL_80;
  }
  return 0;
}

_QWORD *sub_100011464()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  id v20;
  NSString v21;
  unint64_t v23;
  _QWORD *v24;

  v1 = v0;
  v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[2] = _swiftEmptyArrayStorage;
  v23 = sub_1000555A8();
  static DispatchQoS.utility.getter(v23);
  v24 = _swiftEmptyArrayStorage;
  v12 = sub_100008000((unint64_t *)&unk_1005D3970, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v13 = sub_100053F2C((uint64_t *)&unk_1005D20F0);
  v14 = sub_10003F734((unint64_t *)&unk_1005D3980, (uint64_t *)&unk_1005D20F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v24, v13, v14, v6, v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v2);
  v1[3] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000022, 0x80000001004B38D0, v11, v8, v5, 0);
  v1[4] = &_swiftEmptyDictionarySingleton;
  v1[5] = &_swiftEmptyDictionarySingleton;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v15 = type metadata accessor for Logger(0);
  v16 = sub_100056D88(v15, (uint64_t)qword_1005F5748);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter(v17);
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "FMETACache: initialized", v19, 2u);
    swift_slowDealloc(v19, -1, -1);
  }

  v20 = objc_msgSend(objc_allocWithZone((Class)NSOperationQueue), "init");
  v21 = String._bridgeToObjectiveC()();
  objc_msgSend(v20, "setName:", v21);

  objc_msgSend(v20, "setMaxConcurrentOperationCount:", 2);
  v1[6] = v20;
  return v1;
}

void sub_100011750()
{
  id v0;
  Class isa;
  id v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  id v12;

  v0 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), "init");
  sub_100053F2C(&qword_1005D2410);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v12 = 0;
  v2 = objc_msgSend(v0, "_crossPlatformUnifiedMeContactWithKeysToFetch:error:", isa, &v12);

  v3 = v12;
  if (v2)
  {
    v4 = v12;
  }
  else
  {
    v5 = v12;
    v6 = _convertNSErrorToError(_:)(v3);

    swift_willThrow();
    swift_errorRelease(v6);
  }
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v7 = type metadata accessor for Logger(0);
  v8 = sub_100056D88(v7, (uint64_t)qword_1005F5748);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Prewarmed CNContactStore.", v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }

}

void sub_1000118F8(uint64_t a1, void *a2, void (*a3)(id))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;

  if (!((unint64_t)a1 >> 62))
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v6)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease(a1);
    v9 = a2;
    goto LABEL_12;
  }
  if (a1 < 0)
    v10 = a1;
  else
    v10 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  if (!_CocoaArrayWrapper.endIndex.getter(v10))
    goto LABEL_11;
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    goto LABEL_6;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v7 = *(_QWORD *)(a1 + 32);
    swift_retain(v7);
LABEL_6:
    v8 = swift_bridgeObjectRelease(a1);
    v9 = (id)FMLocationShiftingRequest.location.getter(v8);
    swift_release(v7);
LABEL_12:
    v11 = v9;
    a3(v9);

    return;
  }
  __break(1u);
}

uint64_t sub_100011A00(void *a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  _QWORD *v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[5];
  _QWORD *v31;

  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v29 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  v27 = *(_QWORD *)(v11 - 8);
  v28 = v11;
  __chkstk_darwin(v11);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v14 = (void *)static OS_dispatch_queue.main.getter();
  v15 = (_QWORD *)swift_allocObject(&unk_100568098, 48, 7);
  v15[2] = a1;
  v15[3] = a2;
  v15[4] = a3;
  v15[5] = a4;
  aBlock[4] = sub_10005EDD0;
  v31 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_1005680B0;
  v16 = _Block_copy(aBlock);
  v17 = v31;
  v18 = a1;
  v19 = a2;
  v20 = a3;
  swift_bridgeObjectRetain(a4);
  swift_release(v17);
  static DispatchQoS.unspecified.getter(v21);
  aBlock[0] = _swiftEmptyArrayStorage;
  v22 = sub_100056580();
  v23 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v24 = sub_1000555E4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v23, v24, v8, v22);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v10, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v13, v28);
}

uint64_t sub_100011C00(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint8_t *v23;
  uint8_t *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD aBlock[5];
  uint64_t v43;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v41 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v39 = *(_QWORD *)(v7 - 8);
  v40 = v7;
  __chkstk_darwin(v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FMSelectedSection(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  __chkstk_darwin(v10);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v13 = type metadata accessor for Logger(0);
  v14 = sub_100056D88(v13, (uint64_t)qword_1005F5748);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(2, -1);
    v38 = v11;
    v18 = v9;
    v19 = v6;
    v20 = v4;
    v21 = v2;
    v22 = a1;
    v23 = v17;
    *(_WORD *)v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "FMMapOptionView: Update section selection", v17, 2u);
    v24 = v23;
    a1 = v22;
    v2 = v21;
    v4 = v20;
    v6 = v19;
    v9 = v18;
    v11 = v38;
    swift_slowDealloc(v24, -1, -1);
  }

  v25 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v26 = (void *)static OS_dispatch_queue.main.getter(v25);
  sub_100024F3C(a1, (uint64_t)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = *(unsigned __int8 *)(v11 + 80);
  v28 = (v27 + 24) & ~v27;
  v29 = swift_allocObject(&unk_100553858, v28 + v12, v27 | 7);
  *(_QWORD *)(v29 + 16) = v2;
  sub_10004C860((uint64_t)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v29 + v28);
  aBlock[4] = sub_10005F190;
  v43 = v29;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_100553870;
  v30 = _Block_copy(aBlock);
  v31 = v43;
  v32 = v2;
  swift_release(v31);
  static DispatchQoS.unspecified.getter(v33);
  aBlock[0] = _swiftEmptyArrayStorage;
  v34 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v35 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v36 = sub_1000555E4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v35, v36, v4, v34);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v6, v30);
  _Block_release(v30);

  (*(void (**)(char *, uint64_t))(v41 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v9, v40);
}

uint64_t sub_100011F34(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  objc_class *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v25[24];
  objc_super v26;

  v2 = v1;
  v4 = type metadata accessor for FMSelectedSection(0);
  __chkstk_darwin(v4);
  v6 = &v25[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = (objc_class *)type metadata accessor for FMInitialCardController();
  v26.receiver = v2;
  v26.super_class = v7;
  objc_msgSendSuper2(&v26, "viewWillAppear:", a1 & 1);
  v8 = OBJC_IVAR____TtC6FindMy23FMInitialCardController_mediator;
  v9 = *(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy23FMInitialCardController_mediator] + 56);
  v10 = type metadata accessor for FMSelectionSubscription(0);
  v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  v12 = v11 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
  *(_QWORD *)(v12 + 8) = 0;
  swift_unknownObjectWeakInit(v12);
  swift_retain(v9);
  v13 = v2;
  UUID.init()(v13);
  v14 = v11 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
  *(_QWORD *)(v14 + 8) = &off_100560F70;
  swift_unknownObjectWeakAssign(v14, v13);

  swift_beginAccess(v9 + 16, v25, 33, 0);
  v15 = swift_retain(v11);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
  v17 = *(_QWORD *)((*(_QWORD *)(v9 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v16 = *(_QWORD *)((*(_QWORD *)(v9 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v17 >= v16 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
  v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v11);
  specialized Array._endMutation()(v18);
  swift_endAccess(v25);
  swift_release(v9);
  v19 = *(_QWORD *)&v13[OBJC_IVAR____TtC6FindMy23FMInitialCardController_selectionSubscription];
  *(_QWORD *)&v13[OBJC_IVAR____TtC6FindMy23FMInitialCardController_selectionSubscription] = v11;
  swift_release(v19);
  v20 = *(_QWORD *)(*(_QWORD *)&v2[v8] + 56);
  v21 = v20 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v20 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, v25, 0, 0);
  sub_10004FC74(v21, (uint64_t)v6, type metadata accessor for FMSelectedSection);
  v22 = swift_retain(v20);
  sub_1000405D0(v22, (uint64_t)v6);
  swift_release(v20);
  return sub_10004FCB8((uint64_t)v6, type metadata accessor for FMSelectedSection);
}

id sub_100012140(uint64_t a1)
{
  _BYTE *v1;
  _QWORD *v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  id v12;
  id v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  id v17;
  objc_super v19;

  v1[OBJC_IVAR____TtC6FindMy20FMMainViewController_isLastLocationPromptShowing] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy20FMMainViewController_alertQueue] = _swiftEmptyArrayStorage;
  v3 = &v1[OBJC_IVAR____TtC6FindMy20FMMainViewController_currentAlert];
  *v3 = 0;
  v3[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy20FMMainViewController_compactConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy20FMMainViewController_regularConstraints] = _swiftEmptyArrayStorage;
  v1[OBJC_IVAR____TtC6FindMy20FMMainViewController_isShowingAlert] = 0;
  v4 = qword_1005D1E80;
  v5 = v1;
  if (v4 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v6 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v7 = objc_msgSend(v6, "userInterfaceLayoutDirection");

  qword_1005F5980 = (uint64_t)v7;
  v8 = objc_allocWithZone((Class)type metadata accessor for FMMapViewController(0));
  v9 = swift_retain(a1);
  v10 = sub_10001E714(v9);
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy20FMMainViewController_mapController] = v10;
  objc_allocWithZone((Class)type metadata accessor for FMNoLocationViewController());
  swift_retain(a1);
  v11 = v10;
  v12 = sub_10000CC2C(a1);
  swift_release(a1);
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy20FMMainViewController_noLocationController] = v12;
  v13 = objc_allocWithZone((Class)type metadata accessor for FMTabBar());
  v14 = (_QWORD *)swift_retain(a1);
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy20FMMainViewController_tabBar] = sub_100026E88(v14);
  v15 = objc_allocWithZone((Class)type metadata accessor for FMInitialCardController());
  v16 = swift_retain(a1);
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy20FMMainViewController_initialCardContainer] = sub_1003C8E00(v16);

  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator] = a1;
  v19.receiver = v5;
  v19.super_class = (Class)type metadata accessor for FMMediatedViewController();
  v17 = objc_msgSendSuper2(&v19, "initWithNibName:bundle:", 0, 0);

  return v17;
}

uint64_t sub_100012404(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  void **v21;
  void **v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  __n128 v26;
  void (*v27)(char *, uint64_t, __n128);
  void **v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char v34;
  __n128 v35;
  uint64_t result;
  void *v37;
  uint64_t v38;
  void *v39;
  void *v40;
  uint64_t v41;
  id v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void **aBlock;
  uint64_t v60;
  uint64_t (*v61)(uint64_t);
  void *v62;
  void (*v63)();
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v57 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v55 = *(_QWORD *)(v5 - 8);
  v56 = v5;
  __chkstk_darwin(v5);
  v54 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FMIPConfigValue(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v49 - v12;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v14 = type metadata accessor for Logger(0);
  sub_100056D88(v14, (uint64_t)qword_1005F5748);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v58 = a1;
  v16 = v15(v13, a1, v7);
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter(v17);
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc(12, -1);
    v52 = v2;
    v20 = (uint8_t *)v19;
    v21 = (void **)swift_slowAlloc(32, -1);
    v50 = v11;
    v22 = v21;
    aBlock = v21;
    *(_DWORD *)v20 = 136315138;
    v51 = v3;
    v23 = FMIPConfigValue.rawValue.getter();
    v25 = v24;
    v65 = sub_100056DA0(v23, v24, (uint64_t *)&aBlock);
    v3 = v51;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, &v66);
    v26 = swift_bridgeObjectRelease(v25);
    v27 = *(void (**)(char *, uint64_t, __n128))(v8 + 8);
    v27(v13, v7, v26);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "FMTabBar: didReceive serverConfiguration %s", v20, 0xCu);
    swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
    v28 = v22;
    v11 = v50;
    swift_slowDealloc(v28, -1, -1);
    v29 = v20;
    v2 = v52;
    swift_slowDealloc(v29, -1, -1);
  }
  else
  {
    v27 = *(void (**)(char *, uint64_t, __n128))(v8 + 8);
    ((void (*)(char *, uint64_t))v27)(v13, v7);
  }

  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v11, enum case for FMIPConfigValue.itemsTabEnabled(_:), v7);
  v30 = sub_100008000((unint64_t *)&unk_1005D9C00, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPConfigValue, (uint64_t)&protocol conformance descriptor for FMIPConfigValue);
  dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v7, v30);
  dispatch thunk of RawRepresentable.rawValue.getter(&v65, v7, v30);
  v31 = v60;
  v32 = v66;
  if (aBlock == (void **)v65 && v60 == v66)
  {
    swift_bridgeObjectRelease_n(v60, 2);
    ((void (*)(char *, uint64_t))v27)(v11, v7);
  }
  else
  {
    v33 = v11;
    v34 = _stringCompareWithSmolCheck(_:_:expecting:)(aBlock, v60, v65, v66, 0);
    swift_bridgeObjectRelease(v31);
    v35 = swift_bridgeObjectRelease(v32);
    result = ((uint64_t (*)(char *, uint64_t, __n128))v27)(v33, v7, v35);
    if ((v34 & 1) == 0)
      return result;
  }
  sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v37 = (void *)static OS_dispatch_queue.main.getter();
  v38 = swift_allocObject(&unk_10054F568, 24, 7);
  v39 = v53;
  *(_QWORD *)(v38 + 16) = v53;
  v63 = sub_1001D7AAC;
  v64 = v38;
  aBlock = _NSConcreteStackBlock;
  v60 = 1107296256;
  v61 = sub_100037DF8;
  v62 = &unk_10054F580;
  v40 = _Block_copy(&aBlock);
  v41 = v64;
  v42 = v39;
  swift_release(v41);
  v43 = v54;
  static DispatchQoS.unspecified.getter(v44);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v45 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v46 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v47 = sub_1000555E4();
  v48 = v57;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v46, v47, v2, v45);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v43, v48, v40);
  _Block_release(v40);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v48, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v43, v56);
}

id sub_1000128B8(double a1, double a2, double a3, double a4)
{
  void *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64x2_t *v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  objc_super v29;

  v9 = OBJC_IVAR____TtC6FindMy26FMNoLocationBackgroundView_appliedStyle;
  v10 = qword_1005D1DD0;
  v11 = v4;
  if (v10 != -1)
    swift_once(&qword_1005D1DD0, sub_10005E180);
  v12 = (int64x2_t *)&v11[v9];
  v13 = qword_1005F5670;
  v14 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
  v15 = objc_msgSend(v14, "colorWithAlphaComponent:", 0.2);

  v16 = objc_msgSend(v15, "CGColor");
  v12->i64[0] = 0x4054000000000000;
  v12->i64[1] = v13;
  v12[1] = (int64x2_t)xmmword_10048ABE0;
  v12[2] = (int64x2_t)xmmword_10048A330;
  __asm { FMOV            V1.2D, #20.0 }
  v12[3] = (int64x2_t)xmmword_100481930;
  v12[4] = _Q1;
  __asm { FMOV            V0.2D, #15.0 }
  v12[5] = _Q0;
  v12[6] = (int64x2_t)xmmword_10048A340;
  __asm { FMOV            V1.2D, #30.0 }
  v12[7] = vdupq_n_s64(0x3FD999999999999AuLL);
  v12[8] = _Q1;
  v12[9] = (int64x2_t)xmmword_10048A350;
  v12[10].i64[0] = (uint64_t)v16;
  v12[10].i8[8] = 1;
  v24 = OBJC_IVAR____TtC6FindMy26FMNoLocationBackgroundView_centerCircle;
  *(_QWORD *)&v11[v24] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  v25 = OBJC_IVAR____TtC6FindMy26FMNoLocationBackgroundView_centerPlaceholder;
  *(_QWORD *)&v11[v25] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  v26 = OBJC_IVAR____TtC6FindMy26FMNoLocationBackgroundView_centerImage;
  *(_QWORD *)&v11[v26] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");

  v29.receiver = v11;
  v29.super_class = (Class)type metadata accessor for FMNoLocationBackgroundView();
  v27 = objc_msgSendSuper2(&v29, "initWithFrame:", a1, a2, a3, a4);
  sub_100015D84();
  sub_10000FC1C();

  return v27;
}

uint64_t sub_100012AC4(void *a1, char a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  char v18;
  uint64_t v19;
  uint8_t *v20;
  uint8_t *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[5];
  uint64_t v36;

  v3 = v2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v34 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v13 = type metadata accessor for Logger(0);
  v14 = sub_100056D88(v13, (uint64_t)qword_1005F5748);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(8, -1);
    v18 = a2;
    v19 = v10;
    v20 = v17;
    *(_DWORD *)v17 = 67109120;
    LODWORD(aBlock[0]) = v18 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(aBlock, (char *)aBlock + 4);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "FMStatusBar: changed authorization status? %{BOOL}d", v20, 8u);
    v21 = v20;
    v10 = v19;
    swift_slowDealloc(v21, -1, -1);
  }

  sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v22 = (void *)static OS_dispatch_queue.main.getter();
  v23 = swift_allocObject(&unk_100557470, 32, 7);
  *(_QWORD *)(v23 + 16) = a1;
  *(_QWORD *)(v23 + 24) = v3;
  aBlock[4] = sub_10005F804;
  v36 = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_100557488;
  v24 = _Block_copy(aBlock);
  v25 = v36;
  v26 = a1;
  v27 = v3;
  swift_release(v25);
  static DispatchQoS.unspecified.getter(v28);
  aBlock[0] = _swiftEmptyArrayStorage;
  v29 = sub_100056580();
  v30 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v31 = sub_1000555E4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v30, v31, v6, v29);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v9, v24);
  _Block_release(v24);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v12, v10);
}

uint64_t sub_100012D94(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(_QWORD, _QWORD, _QWORD);
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  __n128 v46;
  void (*v47)(char *, uint64_t, __n128);
  uint64_t v48;
  int EnumCaseMultiPayload;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(char *, uint64_t, _QWORD);
  char *v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint64_t v57;
  char *v58;
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  __n128 v64;
  void (*v65)(_QWORD, _QWORD, __n128);
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint8_t *v74;
  uint64_t v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t (*v89)(_QWORD, _QWORD, _QWORD);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93[3];

  v83 = a1;
  v3 = type metadata accessor for FMFFriend(0);
  v4 = *(_QWORD *)(v3 - 8);
  v89 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v3;
  v90 = v4;
  v5 = __chkstk_darwin(v3);
  v82 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v85 = (char *)&v81 - v8;
  __chkstk_darwin(v7);
  v10 = (char *)&v81 - v9;
  v11 = sub_100053F2C(&qword_1005D3380);
  __chkstk_darwin(v11);
  v88 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v13);
  v87 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FMSelectedSection(0);
  v16 = __chkstk_darwin(v15);
  v18 = (char *)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v16);
  v21 = (char *)&v81 - v20;
  __chkstk_darwin(v19);
  v23 = (char *)&v81 - v22;
  v24 = type metadata accessor for FMIPDevice(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = __chkstk_darwin(v24);
  v28 = (char *)&v81 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v30 = (char *)&v81 - v29;
  v84 = a2;
  sub_10004FC74(a2, (uint64_t)v23, type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload(v23, v15))
  {
    v86 = v24;
    sub_10004FCB8((uint64_t)v23, type metadata accessor for FMSelectedSection);
    v31 = v83 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection;
    swift_beginAccess(v83 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection, v93, 0, 0);
    sub_10004FC74(v31, (uint64_t)v21, type metadata accessor for FMSelectedSection);
    if (swift_getEnumCaseMultiPayload(v21, v15) == 2)
    {
      v33 = v89;
      v32 = v90;
      (*(void (**)(char *, char *, uint64_t (*)(_QWORD, _QWORD, _QWORD)))(v90 + 32))(v10, v21, v89);
      sub_10009BCFC((uint64_t)v10);
      (*(void (**)(char *, uint64_t (*)(_QWORD, _QWORD, _QWORD)))(v32 + 8))(v10, v33);
    }
    else
    {
      sub_10004FCB8((uint64_t)v21, type metadata accessor for FMSelectedSection);
      v33 = v89;
      v32 = v90;
    }
    sub_10004FC74(v84, (uint64_t)v18, type metadata accessor for FMSelectedSection);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v18, v15);
    v50 = (uint64_t)v85;
    if (EnumCaseMultiPayload == 2)
    {
      (*(void (**)(char *, char *, uint64_t (*)(_QWORD, _QWORD, _QWORD)))(v32 + 32))(v85, v18, v33);
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v51 = type metadata accessor for Logger(0);
      sub_100056D88(v51, (uint64_t)qword_1005F5748);
      v52 = *(uint64_t (**)(char *, uint64_t, _QWORD))(v32 + 16);
      v53 = v82;
      v54 = v52(v82, v50, v33);
      v55 = Logger.logObject.getter(v54);
      v56 = static os_log_type_t.default.getter(v55);
      if (os_log_type_enabled(v55, v56))
      {
        v57 = swift_slowAlloc(12, -1);
        v89 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v52;
        v58 = v53;
        v59 = (uint8_t *)v57;
        v60 = swift_slowAlloc(32, -1);
        v92 = v60;
        *(_DWORD *)v59 = 136315138;
        v61 = FMFFriend.identifier.getter(v60);
        v63 = v62;
        v91 = sub_100056DA0(v61, v62, &v92);
        v32 = v90;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, &v92);
        v64 = swift_bridgeObjectRelease(v63);
        v65 = *(void (**)(_QWORD, _QWORD, __n128))(v32 + 8);
        v66 = v58;
        v52 = (uint64_t (*)(char *, uint64_t, _QWORD))v89;
        v65(v66, v33, v64);
        _os_log_impl((void *)&_mh_execute_header, v55, v56, "FMMediator: Selection: Friend selected - %s", v59, 0xCu);
        swift_arrayDestroy(v60, 1, (char *)&type metadata for Any + 8);
        v67 = v60;
        v50 = (uint64_t)v85;
        swift_slowDealloc(v67, -1, -1);
        swift_slowDealloc(v59, -1, -1);
      }
      else
      {
        v65 = *(void (**)(_QWORD, _QWORD, __n128))(v32 + 8);
        ((void (*)(char *, uint64_t (*)(_QWORD, _QWORD, _QWORD)))v65)(v53, v33);
      }

      v79 = (uint64_t)v87;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v87, 1, 1, v86);
      sub_10000723C(v79);
      sub_1000051EC(v79, &qword_1005D6710);
      v80 = (uint64_t)v88;
      v52(v88, v50, v33);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t (*)(_QWORD, _QWORD, _QWORD)))(v32 + 56))(v80, 0, 1, v33);
      sub_10001DF68(v80);
      sub_1000051EC(v80, &qword_1005D3380);
      sub_10009BAEC(v50);
      return ((uint64_t (*)(uint64_t, uint64_t (*)(_QWORD, _QWORD, _QWORD)))v65)(v50, v33);
    }
    else
    {
      sub_10004FCB8((uint64_t)v18, type metadata accessor for FMSelectedSection);
      v68 = (uint64_t)v88;
      v69 = v86;
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v70 = type metadata accessor for Logger(0);
      v71 = sub_100056D88(v70, (uint64_t)qword_1005F5748);
      v72 = Logger.logObject.getter(v71);
      v73 = static os_log_type_t.default.getter(v72);
      if (os_log_type_enabled(v72, v73))
      {
        v74 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v74 = 0;
        _os_log_impl((void *)&_mh_execute_header, v72, v73, "FMMediator: Selection: Nothing selected", v74, 2u);
        swift_slowDealloc(v74, -1, -1);
      }

      v75 = (uint64_t)v87;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v87, 1, 1, v69);
      sub_10000723C(v75);
      sub_1000051EC(v75, &qword_1005D6710);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t (*)(_QWORD, _QWORD, _QWORD)))(v32 + 56))(v68, 1, 1, v33);
      sub_10001DF68(v68);
      return sub_1000051EC(v68, &qword_1005D3380);
    }
  }
  else
  {
    v34 = (uint64_t)&v23[*(int *)(sub_100053F2C(&qword_1005DE9B0) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v30, v23, v24);
    sub_1000051EC(v34, (uint64_t *)&unk_1005D3AA0);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v35 = type metadata accessor for Logger(0);
    sub_100056D88(v35, (uint64_t)qword_1005F5748);
    v36 = *(uint64_t (**)(char *, char *, uint64_t))(v25 + 16);
    v37 = v36(v28, v30, v24);
    v38 = Logger.logObject.getter(v37);
    v39 = static os_log_type_t.default.getter(v38);
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc(12, -1);
      v41 = swift_slowAlloc(32, -1);
      v86 = v24;
      v42 = v41;
      v93[0] = v41;
      *(_DWORD *)v40 = 136315138;
      v85 = v30;
      v43 = FMIPDevice.identifier.getter(v41);
      v45 = v44;
      v92 = sub_100056DA0(v43, v44, v93);
      v30 = v85;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v92, v93);
      v46 = swift_bridgeObjectRelease(v45);
      v47 = *(void (**)(char *, uint64_t, __n128))(v25 + 8);
      v47(v28, v86, v46);
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "FMMediator: Selection: Device selected - %s", v40, 0xCu);
      swift_arrayDestroy(v42, 1, (char *)&type metadata for Any + 8);
      v48 = v42;
      v24 = v86;
      swift_slowDealloc(v48, -1, -1);
      swift_slowDealloc(v40, -1, -1);
    }
    else
    {
      v47 = *(void (**)(char *, uint64_t, __n128))(v25 + 8);
      ((void (*)(char *, uint64_t))v47)(v28, v24);
    }

    v78 = (uint64_t)v87;
    v77 = (uint64_t)v88;
    v36(v87, v30, v24);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v78, 0, 1, v24);
    sub_10000723C(v78);
    sub_1000051EC(v78, &qword_1005D6710);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t (*)(_QWORD, _QWORD, _QWORD)))(v90 + 56))(v77, 1, 1, v89);
    sub_10001DF68(v77);
    sub_1000051EC(v77, &qword_1005D3380);
    return ((uint64_t (*)(char *, uint64_t))v47)(v30, v24);
  }
}

uint64_t sub_100013658(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t i;
  uint64_t v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  _BYTE v17[24];

  v2 = v1;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentHeading);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentHeading) = a1;
  v4 = a1;

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions);
  swift_beginAccess(v2 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions, v17, 0, 0);
  v6 = *v5;
  if (!((unint64_t)*v5 >> 62))
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(*v5);
    if (v7)
      goto LABEL_3;
    return swift_bridgeObjectRelease(v6);
  }
  if (v6 < 0)
    v16 = *v5;
  else
    v16 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v6);
  result = _CocoaArrayWrapper.endIndex.getter(v16);
  v7 = result;
  if (!result)
    return swift_bridgeObjectRelease(v6);
LABEL_3:
  if (v7 >= 1)
  {
    for (i = 0; i != v7; ++i)
    {
      if ((v6 & 0xC000000000000001) != 0)
      {
        v10 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v6);
      }
      else
      {
        v10 = *(_QWORD *)(v6 + 8 * i + 32);
        swift_retain(v10);
      }
      v11 = v10 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber;
      Strong = swift_unknownObjectWeakLoadStrong(v10 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber);
      if (Strong)
      {
        v13 = Strong;
        v14 = *(_QWORD *)(v11 + 8);
        ObjectType = swift_getObjectType(Strong);
        (*(void (**)(uint64_t, id, uint64_t, uint64_t))(v14 + 16))(v2, v4, ObjectType, v14);
        swift_release(v10);
        swift_unknownObjectRelease(v13);
      }
      else
      {
        swift_release(v10);
      }
    }
    return swift_bridgeObjectRelease(v6);
  }
  __break(1u);
  return result;
}

void sub_1000137D0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  _BYTE v15[24];
  objc_super v16;

  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for FMNoLocationViewController();
  objc_msgSendSuper2(&v16, "viewDidLoad");
  v1 = *(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_mediator] + 56);
  v2 = type metadata accessor for FMSelectionSubscription(0);
  v3 = swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v4 = v3 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
  *(_QWORD *)(v4 + 8) = 0;
  swift_unknownObjectWeakInit(v4);
  swift_retain(v1);
  v5 = v0;
  UUID.init()(v5);
  v6 = v3 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
  *(_QWORD *)(v6 + 8) = &off_100546B30;
  swift_unknownObjectWeakAssign(v6, v5);

  swift_beginAccess(v1 + 16, v15, 33, 0);
  v7 = swift_retain(v3);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
  v9 = *(_QWORD *)((*(_QWORD *)(v1 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v8 = *(_QWORD *)((*(_QWORD *)(v1 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v9 >= v8 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v8 > 1, v9 + 1, 1);
  v10 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v3);
  specialized Array._endMutation()(v10);
  swift_endAccess(v15);
  swift_release(v1);
  v11 = *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_selectionSubscription];
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_selectionSubscription] = v3;
  swift_release(v11);
  sub_10001C100();
  sub_10002F6E0();
  v12 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v5, "previousSelection");
  v13 = objc_msgSend(v5, "view");
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v13, "addGestureRecognizer:", v12);

  }
  else
  {
    __break(1u);
  }
}

_QWORD *sub_10001399C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  if (a4)
  {
    a4 = static String._unconditionallyBridgeFromObjectiveC(_:)(a4);
    v6 = v5;
  }
  else
  {
    v6 = 0;
  }
  return sub_10003B90C(a3, a4, v6);
}

_BYTE *sub_1000139E4()
{
  _BYTE *v0;
  uint64_t v1;
  id v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  void *v7;
  double v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  objc_super v15;

  v0[OBJC_IVAR____TtC6FindMy19FMCardContainerView_appearance] = 0;
  v1 = OBJC_IVAR____TtC6FindMy19FMCardContainerView_bluredBackground;
  v2 = objc_allocWithZone((Class)UIVisualEffectView);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, "init");
  v4 = OBJC_IVAR____TtC6FindMy19FMCardContainerView_darkeningView;
  *(_QWORD *)&v3[v4] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v5 = OBJC_IVAR____TtC6FindMy19FMCardContainerView_grabber;
  *(_QWORD *)&v3[v5] = objc_msgSend(objc_allocWithZone((Class)_UIGrabber), "init");

  v15.receiver = v3;
  v15.super_class = (Class)type metadata accessor for FMCardContainerView();
  v6 = objc_msgSendSuper2(&v15, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_10001802C();
  sub_100026050();
  v7 = *(void **)&v6[OBJC_IVAR____TtC6FindMy19FMCardContainerView_darkeningView];
  v8 = 0.1;
  if (!v6[OBJC_IVAR____TtC6FindMy19FMCardContainerView_appearance])
    v8 = 0.0;
  objc_msgSend(v7, "setAlpha:", v8);
  v9 = objc_msgSend(v6, "traitCollection");
  v10 = objc_msgSend(v9, "horizontalSizeClass");

  v11 = objc_msgSend(*(id *)&v6[OBJC_IVAR____TtC6FindMy19FMCardContainerView_bluredBackground], "layer");
  v12 = v11;
  if (v10 == (id)1)
  {
    objc_msgSend(v11, "setMaskedCorners:", 3);

    v13 = objc_msgSend(v7, "layer");
    objc_msgSend(v13, "setMaskedCorners:", 3);
  }
  else
  {
    objc_msgSend(v11, "setMaskedCorners:", 15);

    v13 = objc_msgSend(v7, "layer");
    objc_msgSend(v13, "setMaskedCorners:", 15);
  }

  return v6;
}

void sub_100013BE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  char *v21;
  double v22;
  uint64_t i;
  id v24;
  void *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[5];
  uint64_t v32;

  if ((unint64_t)a1 >> 62)
    goto LABEL_34;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v3; v3 = _CocoaArrayWrapper.endIndex.getter(v30))
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v4 = 0;
      while (1)
      {
        v5 = specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
        v6 = v4 + 1;
        if (__OFADD__(v4, 1))
          break;
        v7 = (id)v5;
        v8 = objc_opt_self(MKUserLocationView);
        if (swift_dynamicCastObjCClass(v7, v8))
          goto LABEL_15;
        swift_unknownObjectRelease(v7);
        ++v4;
        if (v6 == v3)
          goto LABEL_13;
      }
      __break(1u);
    }
    else
    {
      v9 = 0;
      while (1)
      {
        v10 = v9 + 1;
        if (__OFADD__(v9, 1))
          break;
        v11 = *(void **)(a1 + 8 * v9 + 32);
        v12 = objc_opt_self(MKUserLocationView);
        if (swift_dynamicCastObjCClass(v11, v12))
        {
          v7 = v11;
LABEL_15:
          swift_bridgeObjectRelease(a1);
          v14 = OBJC_IVAR____TtC6FindMy19FMMapViewController_userTrackingAnnotationView;
          v15 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy19FMMapViewController_userTrackingAnnotationView);
          v13 = v7;
          goto LABEL_16;
        }
        ++v9;
        if (v10 == v3)
          goto LABEL_13;
      }
    }
    __break(1u);
LABEL_34:
    if (a1 < 0)
      v30 = a1;
    else
      v30 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_13:
  swift_bridgeObjectRelease(a1);
  v13 = 0;
  v14 = OBJC_IVAR____TtC6FindMy19FMMapViewController_userTrackingAnnotationView;
  v7 = *(id *)(v1 + OBJC_IVAR____TtC6FindMy19FMMapViewController_userTrackingAnnotationView);
  v15 = v7;
LABEL_16:
  v16 = v7;
  *(_QWORD *)(v1 + v14) = v7;
  v17 = v16;

  v18 = *(void **)(v1 + v14);
  if (v18)
  {
    v19 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy19FMMapViewController_mapView);
    v20 = v18;
    v21 = (char *)objc_msgSend(v19, "userTrackingMode");
    if ((unint64_t)(v21 - 1) >= 2)
    {
      if (!v21)
      {
        LODWORD(v22) = 0;
        objc_msgSend(v20, "setZPriority:", v22);
      }
    }
    else
    {
      LODWORD(v22) = 1148846080;
      objc_msgSend(v20, "setZPriority:", v22);
    }

    if (!v3)
      goto LABEL_31;
  }
  else
  {

    if (!v3)
    {
LABEL_31:
      v26 = (void *)objc_opt_self(UIView);
      v27 = swift_allocObject(&unk_10055D090, 24, 7);
      *(_QWORD *)(v27 + 16) = a1;
      v31[4] = sub_10005EB54;
      v32 = v27;
      v31[0] = _NSConcreteStackBlock;
      v31[1] = 1107296256;
      v31[2] = sub_100037DF8;
      v31[3] = &unk_10055D0A8;
      v28 = _Block_copy(v31);
      v29 = v32;
      swift_bridgeObjectRetain(a1);
      swift_release(v29);
      objc_msgSend(v26, "animateWithDuration:animations:", v28, 0.3);
      _Block_release(v28);

      return;
    }
  }
  if (v3 >= 1)
  {
    swift_bridgeObjectRetain(a1);
    for (i = 0; i != v3; ++i)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
      else
        v24 = *(id *)(a1 + 8 * i + 32);
      v25 = v24;
      objc_msgSend(v24, "setAlpha:", 0.0);

    }
    swift_bridgeObjectRelease(a1);
    goto LABEL_31;
  }
  __break(1u);
}

void sub_100013EE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  uint64_t v26;
  uint64_t Strong;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32[3];

  v2 = v1;
  v4 = type metadata accessor for FMIPUTAlertState(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v8 = type metadata accessor for Logger(0);
  sub_100056D88(v8, (uint64_t)qword_1005F5748);
  v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v30 = v13;
    v32[0] = v13;
    *(_DWORD *)v12 = 136315138;
    v29 = v12 + 4;
    v14 = FMIPUTAlertState.rawValue.getter(v13);
    v16 = v15;
    v31 = sub_100056DA0(v14, v15, v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, v32);
    v17 = swift_bridgeObjectRelease(v16);
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v17);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "FMDevicesProvider: utAlertStateDidChange: %s", v12, 0xCu);
    v18 = v30;
    swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

  swift_beginAccess(v2 + 16, v32, 0, 0);
  v19 = *(_QWORD *)(v2 + 16);
  if (!((unint64_t)v19 >> 62))
  {
    v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(v2 + 16));
    if (v20)
      goto LABEL_8;
LABEL_21:
    swift_bridgeObjectRelease(v19);
    return;
  }
  if (v19 < 0)
    v28 = *(_QWORD *)(v2 + 16);
  else
    v28 = v19 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(v2 + 16));
  v20 = _CocoaArrayWrapper.endIndex.getter(v28);
  if (!v20)
    goto LABEL_21;
LABEL_8:
  if (v20 >= 1)
  {
    for (i = 0; i != v20; ++i)
    {
      if ((v19 & 0xC000000000000001) != 0)
      {
        v25 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v19);
      }
      else
      {
        v25 = *(_QWORD *)(v19 + 8 * i + 32);
        swift_retain(v25);
      }
      v26 = v25 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
      Strong = swift_unknownObjectWeakLoadStrong(v25 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber);
      if (Strong)
      {
        v22 = Strong;
        v23 = *(_QWORD *)(v26 + 8);
        ObjectType = swift_getObjectType(Strong);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 120))(v2, a1, ObjectType, v23);
        swift_release(v25);
        swift_unknownObjectRelease(v22);
      }
      else
      {
        swift_release(v25);
      }
    }
    goto LABEL_21;
  }
  __break(1u);
}

uint64_t sub_1000141E4(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  _BYTE v15[24];

  v2 = (uint64_t *)(a1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions);
  swift_beginAccess(a1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions, v15, 0, 0);
  v3 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(*v2);
    if (v4)
      goto LABEL_3;
    return swift_bridgeObjectRelease(v3);
  }
  if (v3 < 0)
    v14 = *v2;
  else
    v14 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  result = _CocoaArrayWrapper.endIndex.getter(v14);
  v4 = result;
  if (!result)
    return swift_bridgeObjectRelease(v3);
LABEL_3:
  if (v4 >= 1)
  {
    v6 = 0;
    v7 = OBJC_IVAR____TtC6FindMy19FMConditionProvider_stewieServiceState;
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v3);
      }
      else
      {
        v8 = *(_QWORD *)(v3 + 8 * v6 + 32);
        swift_retain(v8);
      }
      v9 = v8 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber;
      Strong = swift_unknownObjectWeakLoadStrong(v8 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber);
      if (Strong)
      {
        v11 = Strong;
        v12 = *(_QWORD *)(v9 + 8);
        ObjectType = swift_getObjectType(Strong);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 40))(a1, *(_QWORD *)(a1 + v7), ObjectType, v12);
        swift_release(v8);
        swift_unknownObjectRelease(v11);
      }
      else
      {
        swift_release(v8);
      }
      ++v6;
    }
    while (v4 != v6);
    return swift_bridgeObjectRelease(v3);
  }
  __break(1u);
  return result;
}

uint64_t sub_100014344(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  NSString v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[24];
  _BYTE v34[24];
  Swift::String v35;

  v2 = type metadata accessor for FMSelectedSection(0);
  v3 = __chkstk_darwin(v2);
  v32 = (uint64_t)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v31 - v6;
  __chkstk_darwin(v5);
  v9 = (char *)&v31 - v8;
  v10 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v11 = String._bridgeToObjectiveC()();
  v12 = objc_msgSend(v10, "stringForKey:", v11);

  if (v12)
  {
    v31 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v14 = v13;

  }
  else
  {
    v31 = 0;
    v14 = 0;
  }
  v15 = OBJC_IVAR____TtC6FindMy23FMInitialCardController_mediator;
  v16 = qword_1005D1F68;
  v17 = *(id *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy23FMInitialCardController_mediator) + 16);
  if (v16 != -1)
    swift_once(&qword_1005D1F68, sub_100006164);
  v18 = a1;
  if (byte_1005F5E31 != 1)
  {

    goto LABEL_10;
  }
  v19 = *((_BYTE *)v17 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_FMFRestricted);

  if ((v19 & 1) != 0)
  {
LABEL_10:
    v20 = 11;
    goto LABEL_11;
  }
  v20 = 14;
LABEL_11:
  swift_storeEnumTagMultiPayload(v9, v2, v20);
  v21 = v18;
  if (v14)
  {
    v35._countAndFlagsBits = v31;
    v35._object = v14;
    v22 = sub_100006C94(v35);
    if (v22 != 5)
    {
      sub_10000E2B4(v22, (uint64_t)v7);
      sub_1000667C0((uint64_t)v7, (uint64_t)v9);
    }
  }
  if (byte_1005F5E31 != 1
    || *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v18 + v15) + 16) + OBJC_IVAR____TtC6FindMy19FMConditionProvider_FMFRestricted) == 1)
  {
    swift_storeEnumTagMultiPayload(v7, v2, 14);
    sub_100024F80((uint64_t)v9, (uint64_t)v7);
    v24 = v23;
    sub_10004FCB8((uint64_t)v7, type metadata accessor for FMSelectedSection);
    if ((v24 & 1) != 0)
    {
      sub_10004FCB8((uint64_t)v9, type metadata accessor for FMSelectedSection);
      swift_storeEnumTagMultiPayload(v9, v2, 11);
    }
  }
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v21 + v15) + 16)
                + OBJC_IVAR____TtC6FindMy19FMConditionProvider_FMIPRestricted) == 1)
  {
    swift_storeEnumTagMultiPayload(v7, v2, 11);
    sub_100024F80((uint64_t)v9, (uint64_t)v7);
    v26 = v25;
    sub_10004FCB8((uint64_t)v7, type metadata accessor for FMSelectedSection);
    if ((v26 & 1) != 0)
    {
      sub_10004FCB8((uint64_t)v9, type metadata accessor for FMSelectedSection);
      swift_storeEnumTagMultiPayload(v9, v2, 14);
    }
  }
  v27 = *(_QWORD *)(*(_QWORD *)(v21 + v15) + 56);
  sub_10004FC74((uint64_t)v9, (uint64_t)v7, type metadata accessor for FMSelectedSection);
  v28 = v27 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v27 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, v34, 0, 0);
  v29 = v32;
  sub_10004FC74(v28, v32, type metadata accessor for FMSelectedSection);
  swift_beginAccess(v28, v33, 33, 0);
  swift_retain(v27);
  sub_100009DF8((uint64_t)v7, v28);
  swift_endAccess(v33);
  sub_10004C8A4(v29);
  sub_10004FCB8((uint64_t)v7, type metadata accessor for FMSelectedSection);
  sub_10004FCB8(v29, type metadata accessor for FMSelectedSection);
  swift_release(v27);
  return sub_10004FCB8((uint64_t)v9, type metadata accessor for FMSelectedSection);
}

void sub_1000147E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  uint64_t v26;
  uint64_t Strong;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32[3];

  v2 = v1;
  v4 = type metadata accessor for FMFMyInfo(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v8 = type metadata accessor for Logger(0);
  sub_100056D88(v8, (uint64_t)qword_1005F5748);
  v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v30 = v13;
    v32[0] = v13;
    *(_DWORD *)v12 = 136315138;
    v29 = v12 + 4;
    v14 = FMFMyInfo.debugDescription.getter(v13);
    v16 = v15;
    v31 = sub_100056DA0(v14, v15, v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, v32);
    v17 = swift_bridgeObjectRelease(v16);
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v17);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "FMPeopleProvider: myInfos changed: %s", v12, 0xCu);
    v18 = v30;
    swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

  swift_beginAccess(v2 + 16, v32, 0, 0);
  v19 = *(_QWORD *)(v2 + 16);
  if (!((unint64_t)v19 >> 62))
  {
    v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(v2 + 16));
    if (v20)
      goto LABEL_8;
LABEL_21:
    swift_bridgeObjectRelease(v19);
    return;
  }
  if (v19 < 0)
    v28 = *(_QWORD *)(v2 + 16);
  else
    v28 = v19 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(v2 + 16));
  v20 = _CocoaArrayWrapper.endIndex.getter(v28);
  if (!v20)
    goto LABEL_21;
LABEL_8:
  if (v20 >= 1)
  {
    for (i = 0; i != v20; ++i)
    {
      if ((v19 & 0xC000000000000001) != 0)
      {
        v25 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v19);
      }
      else
      {
        v25 = *(_QWORD *)(v19 + 8 * i + 32);
        swift_retain(v25);
      }
      v26 = v25 + OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_subscriber;
      Strong = swift_unknownObjectWeakLoadStrong(v25 + OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_subscriber);
      if (Strong)
      {
        v22 = Strong;
        v23 = *(_QWORD *)(v26 + 8);
        ObjectType = swift_getObjectType(Strong);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 72))(v2, a1, ObjectType, v23);
        swift_release(v25);
        swift_unknownObjectRelease(v22);
      }
      else
      {
        swift_release(v25);
      }
    }
    goto LABEL_21;
  }
  __break(1u);
}

_QWORD *sub_100014ADC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[3];

  v2 = v1;
  v34 = a1;
  v33 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v3 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[3] = sub_10005D8C0((uint64_t)_swiftEmptyArrayStorage);
  v1[4] = 0;
  v12 = type metadata accessor for FMAccessoryProductImageFetchingCoordinator();
  swift_allocObject(v12, 48, 7);
  v1[5] = sub_10000A60C();
  sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  static DispatchQoS.userInteractive.getter();
  v35[0] = _swiftEmptyArrayStorage;
  v13 = sub_100008000((unint64_t *)&unk_1005D3970, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v14 = sub_100053F2C((uint64_t *)&unk_1005D20F0);
  v15 = sub_10003F774((unint64_t *)&unk_1005D3980, (uint64_t *)&unk_1005D20F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v35, v14, v15, v6, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v33);
  v1[6] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000027, 0x80000001004B02C0, v11, v8, v5, 0);
  v16 = objc_msgSend((id)objc_opt_self(NSURLSessionConfiguration), "defaultSessionConfiguration");
  v17 = objc_msgSend((id)objc_opt_self(NSURLSession), "sessionWithConfiguration:", v16);

  v2[7] = v17;
  v18 = v34;
  v2[2] = v34;
  v19 = type metadata accessor for FMDevicesSubscription(0);
  v20 = swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
  v21 = v20 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
  *(_QWORD *)(v21 + 8) = 0;
  swift_unknownObjectWeakInit(v21);
  swift_retain(v18);
  v22 = swift_retain(v2);
  UUID.init()(v22);
  v23 = v18;
  v24 = v20 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
  *(_QWORD *)(v24 + 8) = &off_10054A5B0;
  swift_unknownObjectWeakAssign(v24, v2);
  swift_beginAccess(v18 + 16, v35, 33, 0);
  v25 = swift_retain(v20);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
  v26 = *(_QWORD *)(v18 + 16) & 0xFFFFFFFFFFFFFF8;
  v28 = *(_QWORD *)(v26 + 0x10);
  v27 = *(_QWORD *)(v26 + 24);
  if (v28 >= v27 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v27 > 1, v28 + 1, 1);
  v29 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v28, v20);
  specialized Array._endMutation()(v29);
  swift_endAccess(v35);
  swift_release(v2);
  swift_release(v23);
  v30 = v2[4];
  v2[4] = v20;
  swift_release(v30);
  return v2;
}

void sub_100014E44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  uint64_t v26;
  uint64_t Strong;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32[3];

  v2 = v1;
  v4 = type metadata accessor for FMFPreferences(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v8 = type metadata accessor for Logger(0);
  sub_100056D88(v8, (uint64_t)qword_1005F5748);
  v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v30 = v13;
    v32[0] = v13;
    *(_DWORD *)v12 = 136315138;
    v29 = v12 + 4;
    v14 = FMFPreferences.debugDescription.getter(v13);
    v16 = v15;
    v31 = sub_100056DA0(v14, v15, v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, v32);
    v17 = swift_bridgeObjectRelease(v16);
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v17);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "FMPeopleProvider: preferences changed: %s", v12, 0xCu);
    v18 = v30;
    swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

  swift_beginAccess(v2 + 16, v32, 0, 0);
  v19 = *(_QWORD *)(v2 + 16);
  if (!((unint64_t)v19 >> 62))
  {
    v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(v2 + 16));
    if (v20)
      goto LABEL_8;
LABEL_21:
    swift_bridgeObjectRelease(v19);
    return;
  }
  if (v19 < 0)
    v28 = *(_QWORD *)(v2 + 16);
  else
    v28 = v19 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(v2 + 16));
  v20 = _CocoaArrayWrapper.endIndex.getter(v28);
  if (!v20)
    goto LABEL_21;
LABEL_8:
  if (v20 >= 1)
  {
    for (i = 0; i != v20; ++i)
    {
      if ((v19 & 0xC000000000000001) != 0)
      {
        v25 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v19);
      }
      else
      {
        v25 = *(_QWORD *)(v19 + 8 * i + 32);
        swift_retain(v25);
      }
      v26 = v25 + OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_subscriber;
      Strong = swift_unknownObjectWeakLoadStrong(v25 + OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_subscriber);
      if (Strong)
      {
        v22 = Strong;
        v23 = *(_QWORD *)(v26 + 8);
        ObjectType = swift_getObjectType(Strong);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 64))(v2, a1, ObjectType, v23);
        swift_release(v25);
        swift_unknownObjectRelease(v22);
      }
      else
      {
        swift_release(v25);
      }
    }
    goto LABEL_21;
  }
  __break(1u);
}

uint64_t sub_100015140(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t aBlock[5];
  uint64_t v56;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v53 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v51 = *(_QWORD *)(v7 - 8);
  v52 = v7;
  __chkstk_darwin(v7);
  v50 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100053F2C((uint64_t *)&unk_1005D3350);
  v48 = *(_QWORD *)(v9 - 8);
  v10 = *(_QWORD *)(v48 + 64);
  v11 = __chkstk_darwin(v9);
  v49 = (uint64_t)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v43 - v13;
  __chkstk_darwin(v12);
  v16 = (char *)&v43 - v15;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v17 = type metadata accessor for Logger(0);
  sub_100056D88(v17, (uint64_t)qword_1005F5748);
  v18 = sub_100007464(a1, (uint64_t)v16, (uint64_t *)&unk_1005D3350);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v44 = a1;
    v45 = v1;
    v46 = v5;
    v47 = v4;
    v21 = (uint8_t *)swift_slowAlloc(12, -1);
    v43 = swift_slowAlloc(32, -1);
    aBlock[0] = v43;
    *(_DWORD *)v21 = 136315138;
    sub_100007464((uint64_t)v16, (uint64_t)v14, (uint64_t *)&unk_1005D3350);
    v22 = type metadata accessor for FMFLocation(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v14, 1, v22) == 1)
    {
      sub_1000051EC((uint64_t)v14, (uint64_t *)&unk_1005D3350);
      v24 = 0;
      v25 = 0xE000000000000000;
    }
    else
    {
      v24 = FMFLocation.debugDescription.getter();
      v25 = v26;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v22);
    }
    v54 = sub_100056DA0(v24, v25, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v54, aBlock);
    swift_bridgeObjectRelease(v25);
    sub_1000051EC((uint64_t)v16, (uint64_t *)&unk_1005D3350);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "FMMapViewDataSource: didUpdate myLocation %s", v21, 0xCu);
    v27 = v43;
    swift_arrayDestroy(v43, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v21, -1, -1);

    v5 = v46;
    v4 = v47;
    a1 = v44;
    v2 = v45;
  }
  else
  {
    sub_1000051EC((uint64_t)v16, (uint64_t *)&unk_1005D3350);

  }
  v28 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v29 = (void *)static OS_dispatch_queue.main.getter(v28);
  v30 = v49;
  sub_100007464(a1, v49, (uint64_t *)&unk_1005D3350);
  v31 = *(unsigned __int8 *)(v48 + 80);
  v32 = (v31 + 24) & ~v31;
  v33 = swift_allocObject(&unk_1005650C0, v32 + v10, v31 | 7);
  *(_QWORD *)(v33 + 16) = v2;
  sub_10005DAA0(v30, v33 + v32, (uint64_t *)&unk_1005D3350);
  aBlock[4] = (uint64_t)sub_10005E8A0;
  v56 = v33;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100037DF8;
  aBlock[3] = (uint64_t)&unk_1005650D8;
  v34 = _Block_copy(aBlock);
  v35 = v56;
  swift_retain(v2);
  swift_release(v35);
  v36 = v50;
  static DispatchQoS.unspecified.getter(v37);
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  v38 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v39 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v40 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  v41 = v53;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v39, v40, v4, v38);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v36, v41, v34);
  _Block_release(v34);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v41, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v36, v52);
}

void sub_10001560C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  uint64_t i;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  char *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  NSString v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t (*v47)(char *, uint64_t, uint64_t);
  unint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;

  v2 = type metadata accessor for FMIPBeaconShare(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v44 - v7;
  v9 = (char *)_swiftEmptyArrayStorage;
  v50 = (char *)_swiftEmptyArrayStorage;
  v10 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain(a1);
  if (v10)
  {
    v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v12 = *(_QWORD *)(v3 + 72);
    v45 = a1;
    v48 = v11;
    v49 = v6;
    v13 = a1 + v11;
    v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v14 = v47;
    for (i = v47(v8, v13, v2); ; i = v14(v8, v13, v2))
    {
      if ((FMIPBeaconShare.requiresResponse.getter(i) & 1) != 0)
      {
        v16 = v3;
        v17 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
        v17(v6, v8, v2);
        v18 = v50;
        if ((swift_isUniquelyReferenced_nonNull_native(v50) & 1) == 0)
        {
          sub_100111DFC(0, *((_QWORD *)v18 + 2) + 1, 1);
          v18 = v50;
        }
        v20 = *((_QWORD *)v18 + 2);
        v19 = *((_QWORD *)v18 + 3);
        if (v20 >= v19 >> 1)
        {
          sub_100111DFC(v19 > 1, v20 + 1, 1);
          v18 = v50;
        }
        *((_QWORD *)v18 + 2) = v20 + 1;
        v6 = v49;
        v17(&v18[v48 + v20 * v12], v49, v2);
        v50 = v18;
        v3 = v16;
        v14 = v47;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      }
      v13 += v12;
      if (!--v10)
        break;
    }
    v9 = v50;
    a1 = v45;
  }
  swift_bridgeObjectRelease(a1);
  v21 = OBJC_IVAR____TtC6FindMy8FMTabBar_mediator;
  v22 = v46;
  v23 = *(_QWORD *)(*(_QWORD *)&v46[OBJC_IVAR____TtC6FindMy8FMTabBar_mediator] + 24);
  v24 = swift_retain(v23);
  v25 = FMIPManager.items.getter(v24);
  swift_release(v23);
  swift_bridgeObjectRetain(v25);
  v26 = sub_1000067A8((uint64_t)v9, v25);
  swift_release(v9);
  swift_bridgeObjectRelease_n(v25, 2);
  v27 = v26[2];
  if (v27
    && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)&v22[v21] + 16) + OBJC_IVAR____TtC6FindMy19FMConditionProvider_isUnderAgeUser) != 1)
  {
    v31 = *(void **)&v22[OBJC_IVAR____TtC6FindMy8FMTabBar_itemsTab];
    v50 = (char *)v26[2];
    v32 = v31;
    dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v34 = v33;
    v35 = String._bridgeToObjectiveC()();
    objc_msgSend(v32, "setBadgeValue:", v35, swift_bridgeObjectRelease(v34).n128_f64[0]);

    v28 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v36 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v22[v21] + 16)
                    + OBJC_IVAR____TtC6FindMy19FMConditionProvider_pushInfoBadgeNumber);
    v30 = v36 + v27;
    if (__OFADD__(v36, v27))
    {
      __break(1u);
      return;
    }
    v29 = v28;
  }
  else
  {
    objc_msgSend(*(id *)&v22[OBJC_IVAR____TtC6FindMy8FMTabBar_itemsTab], "setBadgeValue:", 0);
    v28 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    v29 = v28;
    v30 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v22[v21] + 16)
                    + OBJC_IVAR____TtC6FindMy19FMConditionProvider_pushInfoBadgeNumber);
  }
  objc_msgSend(v28, "setApplicationIconBadgeNumber:", v30);

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v37 = type metadata accessor for Logger(0);
  sub_100056D88(v37, (uint64_t)qword_1005F5748);
  v38 = v22;
  v39 = swift_bridgeObjectRetain(v26);
  v40 = Logger.logObject.getter(v39);
  v41 = static os_log_type_t.default.getter(v40);
  if (os_log_type_enabled(v40, v41))
  {
    v42 = swift_slowAlloc(22, -1);
    *(_DWORD *)v42 = 134218240;
    v50 = *(char **)(*(_QWORD *)(*(_QWORD *)&v22[v21] + 16)
                   + OBJC_IVAR____TtC6FindMy19FMConditionProvider_pushInfoBadgeNumber);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51);

    *(_WORD *)(v42 + 12) = 2048;
    v43 = (char *)v26[2];
    swift_bridgeObjectRelease(v26);
    v50 = v43;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v50, &v51);
    swift_bridgeObjectRelease(v26);
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "FMTabBar: update items tab badge: pushInfo number %ld, invites number: %ld", (uint8_t *)v42, 0x16u);
    swift_slowDealloc(v42, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v26, 2);
  }
}

void sub_100015AC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  Class *v9;
  Class isa;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;
  uint64_t Strong;
  uint64_t v22;
  Class v23;
  uint64_t v24;

  v2 = v1;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v4 = type metadata accessor for Logger(0);
  sub_100056D88(v4, (uint64_t)qword_1005F5748);
  swift_bridgeObjectRetain(a1);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (Class *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    type metadata accessor for FMFDevice(0);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v23 = isa;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24);
    *v9 = isa;
    swift_bridgeObjectRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMPeopleProvider: devices changed: %@", v8, 0xCu);
    v11 = sub_100053F2C((uint64_t *)&unk_1005D9680);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease(a1);
  }
  v12 = *(unsigned __int8 *)(v2 + 48);
  if (v12 != 2 && (v12 & 1) == 0)
  {
    *(_BYTE *)(v2 + 48) = 1;
    dispatch_group_leave(*(dispatch_group_t *)(v2 + 24));
  }
  swift_beginAccess(v2 + 16, &v23, 0, 0);
  v13 = *(_QWORD *)(v2 + 16);
  if (!((unint64_t)v13 >> 62))
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(v2 + 16));
    if (v14)
      goto LABEL_11;
LABEL_24:
    swift_bridgeObjectRelease(v13);
    return;
  }
  if (v13 < 0)
    v22 = *(_QWORD *)(v2 + 16);
  else
    v22 = v13 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(v2 + 16));
  v14 = _CocoaArrayWrapper.endIndex.getter(v22);
  if (!v14)
    goto LABEL_24;
LABEL_11:
  if (v14 >= 1)
  {
    for (i = 0; i != v14; ++i)
    {
      if ((v13 & 0xC000000000000001) != 0)
      {
        v19 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v13);
      }
      else
      {
        v19 = *(_QWORD *)(v13 + 8 * i + 32);
        swift_retain(v19);
      }
      v20 = v19 + OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_subscriber;
      Strong = swift_unknownObjectWeakLoadStrong(v19 + OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_subscriber);
      if (Strong)
      {
        v16 = Strong;
        v17 = *(_QWORD *)(v20 + 8);
        ObjectType = swift_getObjectType(Strong);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 80))(v2, a1, ObjectType, v17);
        swift_release(v19);
        swift_unknownObjectRelease(v16);
      }
      else
      {
        swift_release(v19);
      }
    }
    goto LABEL_24;
  }
  __break(1u);
}

id sub_100015D84()
{
  _BYTE *v0;
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  void *v6;
  double v7;
  CGPathRef v8;
  id v9;
  id v10;
  double v11;
  id v12;
  id v13;
  CGAffineTransform transform;
  CGRect v16;

  v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy26FMNoLocationBackgroundView_centerCircle];
  v2 = *(double *)&v0[OBJC_IVAR____TtC6FindMy26FMNoLocationBackgroundView_appliedStyle];
  v3 = *(double *)&v0[OBJC_IVAR____TtC6FindMy26FMNoLocationBackgroundView_appliedStyle + 8];
  v4 = v3 + v3;
  if (!v0[OBJC_IVAR____TtC6FindMy26FMNoLocationBackgroundView_appliedStyle + 168])
    v4 = 0.0;
  v5 = v2 - v4;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy26FMNoLocationBackgroundView_centerCircle], "setFrame:", *(double *)&v0[OBJC_IVAR____TtC6FindMy26FMNoLocationBackgroundView_appliedStyle + 8], *(double *)&v0[OBJC_IVAR____TtC6FindMy26FMNoLocationBackgroundView_appliedStyle + 8], v5, v5);
  objc_msgSend(v1, "setCornerRadius:", v5 * 0.5);
  objc_msgSend(v1, "setAnchorPoint:", 0.5, 0.5);
  v6 = *(void **)&v0[OBJC_IVAR____TtC6FindMy26FMNoLocationBackgroundView_centerPlaceholder];
  v7 = v5 + -4.0;
  objc_msgSend(v6, "setCornerRadius:", v7 * 0.5);
  objc_msgSend(v1, "addSublayer:", v6);
  objc_msgSend(v1, "addSublayer:", *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy26FMNoLocationBackgroundView_centerImage]);
  transform.a = 1.0;
  transform.b = 0.0;
  transform.c = 0.0;
  transform.d = 1.0;
  transform.tx = 0.0;
  transform.ty = 0.0;
  objc_msgSend(v1, "bounds");
  v8 = CGPathCreateWithEllipseInRect(v16, &transform);
  objc_msgSend(v1, "setShadowPath:", v8);

  v9 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  v10 = objc_msgSend(v9, "CGColor");

  objc_msgSend(v1, "setShadowColor:", v10);
  objc_msgSend(v1, "setShadowOffset:", 0.0, 0.0);
  LODWORD(v11) = 1045220557;
  objc_msgSend(v1, "setShadowOpacity:", v11);
  objc_msgSend(v1, "setShadowRadius:", v3);
  v12 = objc_msgSend(v0, "layer");
  objc_msgSend(v12, "addSublayer:", v1);

  v13 = objc_msgSend(v0, "layer");
  objc_msgSend(v13, "setFrame:", 0.0, 0.0, v2, v2);

  return objc_msgSend(v6, "setFrame:", 2.0, 2.0, v7, v7);
}

void sub_1000160A4()
{
  void *v0;
  uint64_t v1;
  _BYTE *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  NSString v15;
  double v16;
  double v17;
  double v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  Swift::String v25;
  Swift::String v26;
  void *object;
  NSString v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t inited;
  NSString *v33;
  unint64_t v34;
  id v35;
  void *v36;
  NSString v37;
  id v38;
  id v39;
  id v40;
  id v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  id v46;
  void *v47;
  id v48;
  Swift::String v49;
  Swift::String v50;
  void *v51;
  NSString v52;
  id v53;
  id v54;
  NSString v55;
  id v56;
  id v57;
  id v58;
  id v59;
  char v60;
  uint64_t v61;
  _BYTE v62[48];
  uint64_t v63;
  unint64_t v64;
  Swift::String v65;
  Swift::String v66;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v1 = type metadata accessor for Logger(0);
  sub_100056D88(v1, (uint64_t)qword_1005F5748);
  v2 = v0;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = swift_slowAlloc(32, -1);
    v61 = v6;
    *(_DWORD *)v5 = 136315138;
    v63 = 0;
    v64 = 0xE000000000000000;
    v60 = v2[OBJC_IVAR____TtC6FindMy11FMStatusBar_state];
    _print_unlocked<A, B>(_:_:)(&v60, &v63, &type metadata for FMStatusBarLocationState, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v7 = v64;
    v63 = sub_100056DA0(v63, v64, &v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v63, &v64);

    swift_bridgeObjectRelease(v7);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FMStatusBar: updateAppearance for state %s", v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
  if (qword_1005D1E40 != -1)
    swift_once(&qword_1005D1E40, sub_10005E104);
  v8 = v2[OBJC_IVAR____TtC6FindMy11FMStatusBar_state];
  if (v8 >= 2)
  {
    v16 = *(double *)&xmmword_1005F58F0;
    v17 = *(double *)&qword_1005F5900;
    if (v8 == 2)
    {
      v18 = *((double *)&xmmword_1005F58F0 + 1);
      v41 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithScale:", -1);
      v19 = *(void **)&v2[OBJC_IVAR____TtC6FindMy11FMStatusBar_pillView];
      objc_msgSend(v19, "setAlpha:", 1.0);
      objc_msgSend(v19, "setUserInteractionEnabled:", 1);
      objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC6FindMy11FMStatusBar_pillBottomConstraint], "setConstant:", v18);
      objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC6FindMy11FMStatusBar_pillHeightConstraint], "setConstant:", v16);
      objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC6FindMy11FMStatusBar_textLabelTopConstraint], "setConstant:", v17);
      v20 = *(void **)&v2[OBJC_IVAR____TtC6FindMy11FMStatusBar_textLabelBottomConstraint];
      if (v20)
        objc_msgSend(v20, "setConstant:", -v17);
      v21 = (void *)objc_opt_self(UIColor);
      v22 = objc_msgSend(v21, "systemBlueColor");
      objc_msgSend(v19, "setBackgroundColor:", v22);

      v23 = *(void **)&v2[OBJC_IVAR____TtC6FindMy11FMStatusBar_textLabel];
      v63 = 0;
      v64 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(v64);
      v24 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v65._countAndFlagsBits = 0xD000000000000026;
      v65._object = (void *)0x80000001004BC880;
      v25._object = (void *)0x80000001004BC860;
      v25._countAndFlagsBits = 0xD000000000000014;
      v26._countAndFlagsBits = 0;
      v26._object = (void *)0xE000000000000000;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, (Swift::String_optional)0, (NSBundle)v24, v26, v65)._object;

      v28 = String._bridgeToObjectiveC()();
      objc_msgSend(v23, "setText:", v28, swift_bridgeObjectRelease(object).n128_f64[0]);

      v29 = objc_msgSend(v21, "whiteColor");
      objc_msgSend(v23, "setTextColor:", v29);

      v30 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:", 15.0);
      v31 = sub_100053F2C((uint64_t *)&unk_1005D7EA0);
      inited = swift_initStackObject(v31, v62);
      *(_OWORD *)(inited + 16) = xmmword_100481740;
      *(_QWORD *)(inited + 32) = UIFontWeightTrait;
      *(UIFontWeight *)(inited + 40) = UIFontWeightMedium;
      v33 = UIFontWeightTrait;
      v34 = sub_10004907C(inited);
      v35 = sub_100049188(v34);

      objc_msgSend(v23, "setFont:", v35, swift_bridgeObjectRelease(v34).n128_f64[0]);
      v36 = *(void **)&v2[OBJC_IVAR____TtC6FindMy11FMStatusBar_chevron];
      v37 = String._bridgeToObjectiveC()();
      v38 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v37);

      v39 = objc_msgSend(v38, "imageByApplyingSymbolConfiguration:", v41);
      objc_msgSend(v36, "setImage:", v39);

      v40 = objc_msgSend(v21, "whiteColor");
    }
    else
    {
      v41 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:", 11.0);
      v42 = *(void **)&v2[OBJC_IVAR____TtC6FindMy11FMStatusBar_pillView];
      objc_msgSend(v42, "setAlpha:", 1.0);
      objc_msgSend(v42, "setUserInteractionEnabled:", 1);
      v43 = *(void **)&v2[OBJC_IVAR____TtC6FindMy11FMStatusBar_pillBottomConstraint];
      if (v43)
        objc_msgSend(v43, "setConstant:", 0.0);
      objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC6FindMy11FMStatusBar_pillHeightConstraint], "setConstant:", v16);
      objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC6FindMy11FMStatusBar_textLabelTopConstraint], "setConstant:", v17);
      v44 = *(void **)&v2[OBJC_IVAR____TtC6FindMy11FMStatusBar_textLabelBottomConstraint];
      if (v44)
        objc_msgSend(v44, "setConstant:", -v17);
      v45 = (void *)objc_opt_self(UIColor);
      v46 = objc_msgSend(v45, "clearColor");
      objc_msgSend(v42, "setBackgroundColor:", v46);

      v47 = *(void **)&v2[OBJC_IVAR____TtC6FindMy11FMStatusBar_textLabel];
      v63 = 0;
      v64 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(v64);
      v48 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v66._countAndFlagsBits = 0xD000000000000026;
      v66._object = (void *)0x80000001004BC880;
      v49._object = (void *)0x80000001004BC860;
      v49._countAndFlagsBits = 0xD000000000000014;
      v50._countAndFlagsBits = 0;
      v50._object = (void *)0xE000000000000000;
      v51 = NSLocalizedString(_:tableName:bundle:value:comment:)(v49, (Swift::String_optional)0, (NSBundle)v48, v50, v66)._object;

      v52 = String._bridgeToObjectiveC()();
      objc_msgSend(v47, "setText:", v52, swift_bridgeObjectRelease(v51).n128_f64[0]);

      v53 = objc_msgSend(v45, "labelColor");
      objc_msgSend(v47, "setTextColor:", v53);

      v54 = objc_msgSend((id)objc_opt_self(UIFont), "systemFontOfSize:", 13.0);
      objc_msgSend(v47, "setFont:", v54);

      v36 = *(void **)&v2[OBJC_IVAR____TtC6FindMy11FMStatusBar_chevron];
      v55 = String._bridgeToObjectiveC()();
      v56 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v55);

      v57 = objc_msgSend(v56, "imageByApplyingSymbolConfiguration:", v41);
      objc_msgSend(v36, "setImage:", v57);

      v40 = objc_msgSend(v45, "labelColor");
    }
    v15 = v40;
    objc_msgSend(v36, "setTintColor:", v15);

  }
  else
  {
    v9 = *(void **)&v2[OBJC_IVAR____TtC6FindMy11FMStatusBar_pillBottomConstraint];
    if (v9)
      objc_msgSend(v9, "setConstant:", 0.0);
    v10 = *(void **)&v2[OBJC_IVAR____TtC6FindMy11FMStatusBar_pillHeightConstraint];
    if (v10)
      objc_msgSend(v10, "setConstant:", 0.0);
    v11 = *(void **)&v2[OBJC_IVAR____TtC6FindMy11FMStatusBar_textLabelTopConstraint];
    if (v11)
      objc_msgSend(v11, "setConstant:", 0.0);
    v12 = *(void **)&v2[OBJC_IVAR____TtC6FindMy11FMStatusBar_textLabelBottomConstraint];
    if (v12)
      objc_msgSend(v12, "setConstant:", 0.0);
    v13 = *(void **)&v2[OBJC_IVAR____TtC6FindMy11FMStatusBar_pillView];
    objc_msgSend(v13, "setAlpha:", 0.0);
    objc_msgSend(v13, "setUserInteractionEnabled:", 0);
    v14 = *(void **)&v2[OBJC_IVAR____TtC6FindMy11FMStatusBar_textLabel];
    v15 = String._bridgeToObjectiveC()();
    objc_msgSend(v14, "setText:", v15);
  }

  v58 = objc_msgSend(v2, "superview");
  objc_msgSend(v58, "setNeedsLayout");

  v59 = objc_msgSend(v2, "superview");
  objc_msgSend(v59, "layoutIfNeeded");

}

uint64_t sub_100016A98(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _BYTE v19[24];

  v2 = (uint64_t *)(a1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions);
  swift_beginAccess(a1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions, v19, 0, 0);
  v3 = *v2;
  if ((unint64_t)*v2 >> 62)
  {
    if (v3 < 0)
      v14 = *v2;
    else
      v14 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v3);
    result = _CocoaArrayWrapper.endIndex.getter(v14);
    v4 = result;
    if (!result)
      goto LABEL_16;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(*v2);
    if (!v4)
      goto LABEL_16;
  }
  if (v4 < 1)
  {
    __break(1u);
    return result;
  }
  v6 = 0;
  v7 = OBJC_IVAR____TtC6FindMy19FMConditionProvider_accountsAreSignedIn;
  do
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v3);
    }
    else
    {
      v8 = *(_QWORD *)(v3 + 8 * v6 + 32);
      swift_retain(v8);
    }
    v9 = v8 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber;
    Strong = swift_unknownObjectWeakLoadStrong(v8 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber);
    if (Strong)
    {
      v11 = Strong;
      v12 = *(_QWORD *)(v9 + 8);
      ObjectType = swift_getObjectType(Strong);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 48))(a1, *(unsigned __int8 *)(a1 + v7), ObjectType, v12);
      swift_release(v8);
      swift_unknownObjectRelease(v11);
    }
    else
    {
      swift_release(v8);
    }
    ++v6;
  }
  while (v4 != v6);
LABEL_16:
  result = swift_bridgeObjectRelease(v3);
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_accountsAreSignedIn) & 1) == 0)
  {
    v15 = (_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_fmfAccountIdentifier);
    v16 = *(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_fmfAccountIdentifier + 8);
    *v15 = 0;
    v15[1] = 0;
    swift_bridgeObjectRelease(v16);
    v17 = (_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_fmipAccountIdentifier);
    v18 = *(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_fmipAccountIdentifier + 8);
    *v17 = 0;
    v17[1] = 0;
    return swift_bridgeObjectRelease(v18);
  }
  return result;
}

void sub_100016C3C(uint64_t a1, char a2)
{
  sub_1000439DC(a1, a2, "FMTerminalView: updated account status %{BOOL}d");
}

void sub_100016C48()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  NSObject *v12;
  os_log_type_t v13;
  __objc2_meth_list **p_opt_inst_meths;
  _DWORD *v15;
  _DWORD *v16;
  _DWORD *v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  unsigned __int8 *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  char *v34;
  _QWORD aBlock[5];
  uint64_t v36;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v34 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v9 = type metadata accessor for Logger(0);
  v10 = sub_100056D88(v9, (uint64_t)qword_1005F5748);
  v11 = v1;
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  p_opt_inst_meths = &OBJC_PROTOCOL___MKUserTrackingView.opt_inst_meths;
  if (os_log_type_enabled(v12, v13))
  {
    v15 = (_DWORD *)swift_slowAlloc(14, -1);
    v33 = v10;
    v16 = v15;
    *v15 = 67109376;
    LODWORD(aBlock[0]) = v11[OBJC_IVAR____TtC6FindMy19FMConditionProvider_areFriendsInitialized];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(aBlock, (char *)aBlock + 4);
    *((_WORD *)v16 + 4) = 1024;
    LODWORD(aBlock[0]) = v11[OBJC_IVAR____TtC6FindMy19FMConditionProvider_areDevicesInitialized];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(aBlock, (char *)aBlock + 4);

    _os_log_impl((void *)&_mh_execute_header, v12, v13, "FMConditionProvider: updateAppInitializedStatus friend: %{BOOL}d, device: %{BOOL}d", (uint8_t *)v16, 0xEu);
    v17 = v16;
    p_opt_inst_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___MKUserTrackingView + 40);
    swift_slowDealloc(v17, -1, -1);

  }
  else
  {

  }
  if (*((_BYTE *)&p_opt_inst_meths[242]->entrysize + (_QWORD)v11) == 1
    && v11[OBJC_IVAR____TtC6FindMy19FMConditionProvider_areDevicesInitialized] == 1)
  {
    v19 = Logger.logObject.getter(v18);
    v20 = static os_log_type_t.default.getter(v19);
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "FMConditionProvider: App is now initialized", v21, 2u);
      swift_slowDealloc(v21, -1, -1);
    }

    v22 = sub_1000555A8();
    v33 = static OS_dispatch_queue.main.getter(v22);
    v23 = swift_allocObject(&unk_10055E098, 24, 7);
    *(_QWORD *)(v23 + 16) = v11;
    aBlock[4] = sub_10037B270;
    v36 = v23;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100037DF8;
    aBlock[3] = &unk_10055E0B0;
    v24 = _Block_copy(aBlock);
    v25 = v36;
    v26 = v11;
    swift_release(v25);
    v27 = v34;
    static DispatchQoS.unspecified.getter(v28);
    aBlock[0] = _swiftEmptyArrayStorage;
    v29 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v30 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
    v31 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v30, v31, v2, v29);
    v32 = (void *)v33;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v27, v5, v24);
    _Block_release(v24);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v27, v6);
  }
}

uint64_t sub_100017034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  void *v30;
  id v31;
  _QWORD v33[2];
  uint64_t v34;
  _QWORD *v35;

  v1 = v0;
  v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v6);
  v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v9);
  v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = qword_1005D38F0;
  v33[1] = sub_1000555A8();
  v12 = swift_retain(v1);
  static DispatchQoS.utility.getter(v12);
  v35 = _swiftEmptyArrayStorage;
  v13 = sub_100008000((unint64_t *)&unk_1005D3970, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v14 = sub_100053F2C((uint64_t *)&unk_1005D20F0);
  v15 = sub_10003F774((unint64_t *)&unk_1005D3980, (uint64_t *)&unk_1005D20F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v35, v14, v15, v6, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v2);
  v16 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000021, 0x80000001004A7910, v11, v8, v5, 0);
  *(_QWORD *)(v1 + v34) = v16;
  v17 = objc_msgSend((id)objc_opt_self(FMSystemInfo), "sharedInstance");
  v18 = objc_msgSend(v17, "osBuildVersion");

  if (v18)
  {
    v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v18);
    v21 = v20;

  }
  else
  {
    v21 = 0xE700000000000000;
    v19 = 0x6E776F6E6B6E75;
  }
  v22 = (uint64_t *)(v1 + qword_1005D38F8);
  *v22 = v19;
  v22[1] = v21;
  *(_QWORD *)(v1 + qword_1005D3900) = &_swiftEmptyDictionarySingleton;
  *(_QWORD *)(v1 + qword_1005D3908) = &_swiftEmptyDictionarySingleton;
  v23 = v1 + qword_1005D3910;
  *(_QWORD *)(v23 + 8) = 0;
  swift_unknownObjectWeakInit(v23);
  swift_release(v1);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v24 = type metadata accessor for Logger(0);
  v25 = sub_100056D88(v24, (uint64_t)qword_1005F5748);
  v26 = Logger.logObject.getter(v25);
  v27 = static os_log_type_t.default.getter(v26);
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v28 = 0;
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "FMPersonImageCache: initialized", v28, 2u);
    swift_slowDealloc(v28, -1, -1);
  }

  v29 = FMImageCache.init(converter:)(sub_10009F854, 0);
  v30 = (void *)objc_opt_self(NSNotificationCenter);
  swift_retain(v29);
  v31 = objc_msgSend(v30, "defaultCenter");
  objc_msgSend(v31, "addObserver:selector:name:object:", v29, "contactStoreChangedWithNotification:", CNContactStoreDidChangeNotification, 0);

  sub_10000F888();
  swift_release(v29);
  return v29;
}

uint64_t *sub_100017404(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain(v15);
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload(a2, a3))
    {
      case 0u:
        v8 = type metadata accessor for FMIPDevice(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        v9 = *(int *)(sub_100053F2C(&qword_1005DE9B0) + 48);
        v10 = (char *)a1 + v9;
        v11 = (char *)a2 + v9;
        v12 = type metadata accessor for FMIPItem(0);
        v13 = *(_QWORD *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
        {
          v14 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
        }
        swift_storeEnumTagMultiPayload(a1, a3, 0);
        break;
      case 1u:
        v17 = type metadata accessor for FMIPDevice(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
        swift_storeEnumTagMultiPayload(a1, a3, 1);
        break;
      case 2u:
        v18 = type metadata accessor for FMFFriend(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a1, a2, v18);
        swift_storeEnumTagMultiPayload(a1, a3, 2);
        break;
      case 3u:
        v19 = type metadata accessor for FMIPItem(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a1, a2, v19);
        swift_storeEnumTagMultiPayload(a1, a3, 3);
        break;
      case 4u:
        v20 = type metadata accessor for FMIPItem(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(a1, a2, v20);
        swift_storeEnumTagMultiPayload(a1, a3, 4);
        break;
      case 5u:
        v21 = *a2;
        *a1 = *a2;
        v22 = a2 + 1;
        v23 = a2[2];
        swift_bridgeObjectRetain(v21);
        if (v23 >= 4)
        {
          a1[1] = *v22;
          a1[2] = v23;
          swift_bridgeObjectRetain(v23);
        }
        else
        {
          *(_OWORD *)(a1 + 1) = *(_OWORD *)v22;
        }
        swift_storeEnumTagMultiPayload(a1, a3, 5);
        break;
      case 6u:
        v24 = *a2;
        *a1 = *a2;
        v25 = a2 + 1;
        v26 = a2[2];
        swift_bridgeObjectRetain(v24);
        if (v26 >= 4)
        {
          a1[1] = *v25;
          a1[2] = v26;
          swift_bridgeObjectRetain(v26);
        }
        else
        {
          *(_OWORD *)(a1 + 1) = *(_OWORD *)v25;
        }
        swift_storeEnumTagMultiPayload(a1, a3, 6);
        break;
      case 7u:
        v27 = type metadata accessor for FMIPDevice(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(a1, a2, v27);
        swift_storeEnumTagMultiPayload(a1, a3, 7);
        break;
      case 8u:
        v28 = type metadata accessor for FMIPUnknownItem(0);
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(a1, a2, v28);
        swift_storeEnumTagMultiPayload(a1, a3, 8);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

id sub_100017744(int a1)
{
  uint64_t v1;
  uint64_t v2;
  __objc2_class **p_superclass;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  const char *v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  void *v25;
  uint64_t *v26;
  uint64_t v27;
  id result;
  uint64_t i;
  uint64_t v30;
  uint64_t v31;
  uint64_t Strong;
  uint64_t v33;
  uint64_t v34;
  uint64_t ObjectType;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  void *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t j;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  char v66;
  uint64_t v67;
  uint64_t k;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  _BYTE v77[24];
  char v78[24];

  v2 = v1;
  p_superclass = &OBJC_METACLASS____TtC6FindMy23FMNoveltyViewController.superclass;
  switch(a1)
  {
    case 0:
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v17 = type metadata accessor for Logger(0);
      v18 = sub_100056D88(v17, (uint64_t)qword_1005F5748);
      v13 = Logger.logObject.getter(v18);
      v19 = static os_log_type_t.default.getter();
      v8 = v19;
      if (!os_log_type_enabled(v13, v19))
        goto LABEL_17;
      v15 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v15 = 0;
      v16 = "FMLocationProvider: location manager didChangeAuthorization: NOT DETERMINED";
      goto LABEL_16;
    case 1:
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v20 = type metadata accessor for Logger(0);
      v21 = sub_100056D88(v20, (uint64_t)qword_1005F5748);
      v22 = Logger.logObject.getter(v21);
      v23 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v24 = 0;
        _os_log_impl((void *)&_mh_execute_header, v22, v23, "FMLocationProvider: location manager didChangeAuthorization: RESTRICTED", v24, 2u);
        swift_slowDealloc(v24, -1, -1);
      }

      v25 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
      *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation) = 0;

      *(_BYTE *)(v2 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_isLocationAuthorized) = 0;
      v26 = (uint64_t *)(v2 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions);
      swift_beginAccess(v2 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions, v77, 0, 0);
      v8 = *v26;
      if ((unint64_t)*v26 >> 62)
      {
        if (v8 < 0)
          v51 = *v26;
        else
          v51 = v8 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v8);
        result = (id)_CocoaArrayWrapper.endIndex.getter(v51);
        v27 = (uint64_t)result;
        if (!result)
          goto LABEL_58;
      }
      else
      {
        v27 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
        result = (id)swift_bridgeObjectRetain(*v26);
        if (!v27)
          goto LABEL_58;
      }
      if (v27 < 1)
        goto LABEL_97;
      for (i = 0; i != v27; ++i)
      {
        if ((v8 & 0xC000000000000001) != 0)
        {
          v30 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v8);
        }
        else
        {
          v30 = *(_QWORD *)(v8 + 8 * i + 32);
          swift_retain(v30);
        }
        v31 = v30 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber;
        Strong = swift_unknownObjectWeakLoadStrong(v30 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber);
        if (Strong)
        {
          v33 = Strong;
          v34 = *(_QWORD *)(v31 + 8);
          ObjectType = swift_getObjectType(Strong);
          (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v34 + 8))(v2, _swiftEmptyArrayStorage, ObjectType, v34);
          swift_release(v30);
          swift_unknownObjectRelease(v33);
        }
        else
        {
          swift_release(v30);
        }
      }
      goto LABEL_48;
    case 2:
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v36 = type metadata accessor for Logger(0);
      v37 = sub_100056D88(v36, (uint64_t)qword_1005F5748);
      v38 = Logger.logObject.getter(v37);
      v39 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v38, v39))
      {
        v40 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v40 = 0;
        _os_log_impl((void *)&_mh_execute_header, v38, v39, "FMLocationProvider: location manager didChangeAuthorization: DENIED", v40, 2u);
        swift_slowDealloc(v40, -1, -1);
      }

      v41 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
      *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation) = 0;

      *(_BYTE *)(v2 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_isLocationAuthorized) = 0;
      v42 = (uint64_t *)(v2 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions);
      swift_beginAccess(v2 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions, v77, 0, 0);
      v8 = *v42;
      if ((unint64_t)*v42 >> 62)
      {
        if (v8 < 0)
          v52 = *v42;
        else
          v52 = v8 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v8);
        result = (id)_CocoaArrayWrapper.endIndex.getter(v52);
        v43 = (uint64_t)result;
        if (result)
          goto LABEL_39;
LABEL_58:
        swift_bridgeObjectRelease(v8);
        goto LABEL_59;
      }
      v43 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = (id)swift_bridgeObjectRetain(*v42);
      if (!v43)
        goto LABEL_58;
LABEL_39:
      if (v43 < 1)
        goto LABEL_98;
      for (j = 0; j != v43; ++j)
      {
        if ((v8 & 0xC000000000000001) != 0)
        {
          v45 = specialized _ArrayBuffer._getElementSlowPath(_:)(j, v8);
        }
        else
        {
          v45 = *(_QWORD *)(v8 + 8 * j + 32);
          swift_retain(v45);
        }
        v46 = v45 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber;
        v47 = swift_unknownObjectWeakLoadStrong(v45 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber);
        if (v47)
        {
          v48 = v47;
          v49 = *(_QWORD *)(v46 + 8);
          v50 = swift_getObjectType(v47);
          (*(void (**)(uint64_t, _QWORD *, uint64_t, uint64_t))(v49 + 8))(v2, _swiftEmptyArrayStorage, v50, v49);
          swift_release(v45);
          swift_unknownObjectRelease(v48);
        }
        else
        {
          swift_release(v45);
        }
      }
LABEL_48:
      swift_bridgeObjectRelease(v8);
      p_superclass = (__objc2_class **)(&OBJC_METACLASS____TtC6FindMy23FMNoveltyViewController + 8);
LABEL_59:
      v53 = (uint64_t *)((char *)p_superclass[212] + v2);
      swift_beginAccess(v53, v78, 0, 0);
      v76 = v53;
      v54 = *v53;
      if ((unint64_t)*v53 >> 62)
      {
        if (v54 < 0)
          v64 = *v53;
        else
          v64 = v54 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v54);
        v55 = _CocoaArrayWrapper.endIndex.getter(v64);
        if (!v55)
          goto LABEL_74;
      }
      else
      {
        v55 = *(_QWORD *)((v54 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(*v53);
        if (!v55)
          goto LABEL_74;
      }
      if (v55 < 1)
      {
        __break(1u);
        goto LABEL_90;
      }
      v56 = 0;
      v57 = OBJC_IVAR____TtC6FindMy18FMLocationProvider_isLocationAuthorized;
      do
      {
        if ((v54 & 0xC000000000000001) != 0)
        {
          v61 = specialized _ArrayBuffer._getElementSlowPath(_:)(v56, v54);
        }
        else
        {
          v61 = *(_QWORD *)(v54 + 8 * v56 + 32);
          swift_retain(v61);
        }
        v62 = v61 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber;
        v63 = swift_unknownObjectWeakLoadStrong(v61 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber);
        if (v63)
        {
          v58 = v63;
          v59 = *(_QWORD *)(v62 + 8);
          v60 = swift_getObjectType(v63);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v59 + 40))(v2, *(unsigned __int8 *)(v2 + v57), v60, v59);
          swift_release(v61);
          swift_unknownObjectRelease(v58);
        }
        else
        {
          swift_release(v61);
        }
        ++v56;
      }
      while (v55 != v56);
LABEL_74:
      swift_bridgeObjectRelease(v54);
      result = *(id *)(v2 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_locationManager);
      if (result)
      {
        result = objc_msgSend(result, "accuracyAuthorization");
        v54 = result != 0;
        v65 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_limitedPrecision);
        *(_BYTE *)(v2 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_limitedPrecision) = v54;
        if ((_DWORD)v54 == v65)
          return result;
      }
      else
      {
        v66 = *(_BYTE *)(v2 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_limitedPrecision);
        v54 = 1;
        *(_BYTE *)(v2 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_limitedPrecision) = 1;
        if ((v66 & 1) != 0)
          return result;
      }
      v8 = *v76;
      if ((unint64_t)*v76 >> 62)
      {
LABEL_90:
        if (v8 < 0)
          v75 = v8;
        else
          v75 = v8 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v8);
        result = (id)_CocoaArrayWrapper.endIndex.getter(v75);
        v67 = (uint64_t)result;
        if (result)
          goto LABEL_80;
        return (id)swift_bridgeObjectRelease(v8);
      }
      v67 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = (id)swift_bridgeObjectRetain(*v76);
      if (!v67)
        return (id)swift_bridgeObjectRelease(v8);
LABEL_80:
      if (v67 >= 1)
      {
        for (k = 0; k != v67; ++k)
        {
          if ((v8 & 0xC000000000000001) != 0)
          {
            v69 = specialized _ArrayBuffer._getElementSlowPath(_:)(k, v8);
          }
          else
          {
            v69 = *(_QWORD *)(v8 + 8 * k + 32);
            swift_retain(v69);
          }
          v70 = v69 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber;
          v71 = swift_unknownObjectWeakLoadStrong(v69 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber);
          if (v71)
          {
            v72 = v71;
            v73 = *(_QWORD *)(v70 + 8);
            v74 = swift_getObjectType(v71);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 32))(v2, v54, v74, v73);
            swift_release(v69);
            swift_unknownObjectRelease(v72);
          }
          else
          {
            swift_release(v69);
          }
        }
        return (id)swift_bridgeObjectRelease(v8);
      }
      __break(1u);
LABEL_97:
      __break(1u);
LABEL_98:
      __break(1u);
      return result;
    case 3:
    case 4:
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v4 = type metadata accessor for Logger(0);
      v5 = sub_100056D88(v4, (uint64_t)qword_1005F5748);
      v6 = Logger.logObject.getter(v5);
      v7 = static os_log_type_t.default.getter();
      v8 = v7;
      if (os_log_type_enabled(v6, v7))
      {
        v9 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v9 = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, (os_log_type_t)v8, "FMLocationProvider: location manager didChangeAuthorization: AUTHORIZED", v9, 2u);
        swift_slowDealloc(v9, -1, -1);
      }

      *(_BYTE *)(v2 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_isLocationAuthorized) = 1;
      v10 = OBJC_IVAR____TtC6FindMy18FMLocationProvider_locationManager;
      objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_locationManager), "startUpdatingLocation");
      if (*(_BYTE *)(v2 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_includeHeading) == 1)
        objc_msgSend(*(id *)(v2 + v10), "startUpdatingHeading");
      goto LABEL_59;
    default:
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v11 = type metadata accessor for Logger(0);
      v12 = sub_100056D88(v11, (uint64_t)qword_1005F5748);
      v13 = Logger.logObject.getter(v12);
      v14 = static os_log_type_t.default.getter();
      v8 = v14;
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v15 = 0;
        v16 = "FMLocationProvider: location manager didChangeAuthorization: UNKNOWN!!!";
LABEL_16:
        _os_log_impl((void *)&_mh_execute_header, v13, (os_log_type_t)v8, v16, v15, 2u);
        swift_slowDealloc(v15, -1, -1);
      }
LABEL_17:

      goto LABEL_59;
  }
}

id sub_10001802C()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  double v4;
  NSString v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;

  objc_msgSend(v0, "setPreservesSuperviewLayoutMargins:", 1);
  v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy19FMCardContainerView_bluredBackground];
  objc_msgSend(v1, "setPreservesSuperviewLayoutMargins:", 1);
  v2 = objc_msgSend(v1, "layer");
  objc_msgSend(v2, "setMasksToBounds:", 1);

  v3 = objc_msgSend(v1, "layer");
  v4 = _UISheetCornerRadius;
  objc_msgSend(v3, "setCornerRadius:", _UISheetCornerRadius);

  v5 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "_setGroupName:", v5);

  if (qword_1005D1E90 != -1)
    swift_once(&qword_1005D1E90, sub_10000642C);
  objc_msgSend(v1, "_setCaptureView:", qword_1005F59F8);
  v6 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 1100);
  objc_msgSend(v1, "setEffect:", v6);

  v7 = *(void **)&v0[OBJC_IVAR____TtC6FindMy19FMCardContainerView_darkeningView];
  objc_msgSend(v7, "setUserInteractionEnabled:", 0);
  v8 = objc_msgSend(v7, "layer");
  objc_msgSend(v8, "setMasksToBounds:", 1);

  v9 = objc_msgSend(v7, "layer");
  objc_msgSend(v9, "setCornerRadius:", v4);

  v10 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  objc_msgSend(v7, "setBackgroundColor:", v10);

  objc_msgSend(v7, "setAlpha:", 0.0);
  objc_msgSend(v0, "addSubview:", v1);
  objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy19FMCardContainerView_grabber]);
  return objc_msgSend(v0, "addSubview:", v7);
}

void sub_1000182B4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  Class isa;
  uint64_t v26;

  v1 = v0;
  v2 = OBJC_IVAR____TtC6FindMy8FMTabBar_mediator;
  v3 = qword_1005D1F68;
  v4 = *(id *)(*(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy8FMTabBar_mediator] + 16);
  if (v3 != -1)
    swift_once(&qword_1005D1F68, sub_100006164);
  if (byte_1005F5E31 == 1)
  {
    v5 = v4[OBJC_IVAR____TtC6FindMy19FMConditionProvider_FMFRestricted];

    v6 = v5 ^ 1;
  }
  else
  {

    v6 = 0;
  }
  v7 = *(_BYTE *)(*(_QWORD *)(*(_QWORD *)&v1[v2] + 16) + OBJC_IVAR____TtC6FindMy19FMConditionProvider_FMIPRestricted);
  v8 = sub_100053F2C(&qword_1005D2F10);
  v9 = swift_allocObject(v8, 40, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100481B00;
  v10 = *(void **)&v1[OBJC_IVAR____TtC6FindMy8FMTabBar_meTab];
  *(_QWORD *)(v9 + 32) = v10;
  v26 = v9;
  specialized Array._endMutation()(v9);
  v11 = v26;
  if ((FMIPItemsTabEnabled.getter(v10) & 1) != 0)
  {
    v12 = *(void **)&v1[OBJC_IVAR____TtC6FindMy8FMTabBar_itemsTab];
    if ((unint64_t)v26 >> 62)
    {
      if (v26 < 0)
        v16 = v26;
      else
        v16 = v26 & 0xFFFFFFFFFFFFFF8;
      v17 = v12;
      swift_bridgeObjectRetain(v26);
      v18 = _CocoaArrayWrapper.endIndex.getter(v16);
      swift_bridgeObjectRelease(v26);
      if (v18 < 0)
      {
        __break(1u);
LABEL_24:
        if (v11 < 0)
          v19 = v11;
        else
          v19 = v11 & 0xFFFFFFFFFFFFFF8;
        v20 = v12;
        swift_bridgeObjectRetain(v11);
        v21 = _CocoaArrayWrapper.endIndex.getter(v19);
        swift_bridgeObjectRelease(v11);
        if (v21 < 0)
        {
          __break(1u);
          goto LABEL_29;
        }
        goto LABEL_13;
      }
    }
    else
    {
      v13 = v12;
    }
    sub_100018838(0, 0, (uint64_t)v12);
    v11 = v26;
  }
  if ((v7 & 1) != 0)
    goto LABEL_14;
  v12 = *(void **)&v1[OBJC_IVAR____TtC6FindMy8FMTabBar_devicesTab];
  if ((unint64_t)v11 >> 62)
    goto LABEL_24;
  v14 = v12;
LABEL_13:
  sub_100018838(0, 0, (uint64_t)v12);
  v11 = v26;
LABEL_14:
  if ((v6 & 1) == 0)
  {
LABEL_18:
    sub_100006C5C(0, (unint64_t *)&unk_1005D9C10, UITabBarItem_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v1, "setItems:animated:", isa, 1, swift_bridgeObjectRelease(v11).n128_f64[0]);

    return;
  }
  v12 = *(void **)&v1[OBJC_IVAR____TtC6FindMy8FMTabBar_peopleTab];
  if (!((unint64_t)v11 >> 62))
  {
    v15 = v12;
LABEL_17:
    sub_100018838(0, 0, (uint64_t)v12);
    v11 = v26;
    goto LABEL_18;
  }
LABEL_29:
  if (v11 < 0)
    v22 = v11;
  else
    v22 = v11 & 0xFFFFFFFFFFFFFF8;
  v23 = v12;
  swift_bridgeObjectRetain(v11);
  v24 = _CocoaArrayWrapper.endIndex.getter(v22);
  swift_bridgeObjectRelease(v11);
  if ((v24 & 0x8000000000000000) == 0)
    goto LABEL_17;
  __break(1u);
}

uint64_t sub_100018544(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t *v36;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v9 = a5;
    v8 = a4;
    v12 = a3;
    v7 = a2;
    v11 = a1;
    v10 = *v6;
    if (!((unint64_t)*v6 >> 62))
    {
      v13 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v13 >= a2)
        goto LABEL_4;
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
  }
  if (v10 < 0)
    v28 = v10;
  else
    v28 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v10);
  v13 = _CocoaArrayWrapper.endIndex.getter(v28);
  swift_bridgeObjectRelease(v10);
  if (v13 < v7)
    goto LABEL_34;
LABEL_4:
  v13 = v7 - v11;
  if (__OFSUB__(v7, v11))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v5 = 1 - v13;
  if (__OFSUB__(1, v13))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v10 = *v6;
  v36 = v8;
  if (!((unint64_t)*v6 >> 62))
  {
    v14 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    v15 = v14 + v5;
    if (!__OFADD__(v14, v5))
      goto LABEL_8;
LABEL_42:
    __break(1u);
LABEL_43:
    if (v10 < 0)
      v30 = v10;
    else
      v30 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v10);
    v18 = _CocoaArrayWrapper.endIndex.getter(v30);
    swift_bridgeObjectRelease(v10);
    goto LABEL_15;
  }
LABEL_37:
  if (v10 < 0)
    v29 = v10;
  else
    v29 = v10 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v10);
  v14 = _CocoaArrayWrapper.endIndex.getter(v29);
  swift_bridgeObjectRelease(v10);
  v15 = v14 + v5;
  if (__OFADD__(v14, v5))
    goto LABEL_42;
LABEL_8:
  v10 = *v6;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v6);
  *v6 = v10;
  v35 = v12;
  v14 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v10 & 0x8000000000000000) == 0
    && (v10 & 0x4000000000000000) == 0)
  {
    v17 = v10 & 0xFFFFFFFFFFFFFF8;
    if (v15 <= *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v14 = 1;
  }
  if ((unint64_t)v10 >> 62)
    goto LABEL_43;
  v18 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v18 <= v15)
    v18 = v15;
  swift_bridgeObjectRetain(v10);
  v10 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v14, v18, 1, v10);
  swift_bridgeObjectRelease(*v6);
  *v6 = v10;
  v17 = v10 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v19 = (_QWORD *)(v17 + 32 + 8 * v11);
  v20 = sub_100006C5C(0, v36, v9);
  v21 = (char *)swift_arrayDestroy(v19, v13, v20);
  if (!v5)
  {
LABEL_28:
    *v19 = v35;
    return specialized Array._endMutation()(v21);
  }
  if (!((unint64_t)v10 >> 62))
  {
    v22 = *(_QWORD *)(v17 + 16);
    v23 = v22 - v7;
    if (!__OFSUB__(v22, v7))
      goto LABEL_21;
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  if (v10 < 0)
    v31 = v10;
  else
    v31 = v17;
  swift_bridgeObjectRetain(v10);
  v32 = _CocoaArrayWrapper.endIndex.getter(v31);
  swift_bridgeObjectRelease(v10);
  v23 = v32 - v7;
  if (__OFSUB__(v32, v7))
    goto LABEL_52;
LABEL_21:
  if ((v23 & 0x8000000000000000) == 0)
  {
    v21 = (char *)(v19 + 1);
    v24 = (char *)(v17 + 32 + 8 * v7);
    if (v19 + 1 != (_QWORD *)v24 || v21 >= &v24[8 * v23])
      v21 = (char *)memmove(v21, v24, 8 * v23);
    if (!((unint64_t)v10 >> 62))
    {
      v25 = *(_QWORD *)(v17 + 16);
      v26 = v25 + v5;
      if (!__OFADD__(v25, v5))
      {
LABEL_27:
        *(_QWORD *)(v17 + 16) = v26;
        goto LABEL_28;
      }
      goto LABEL_58;
    }
LABEL_53:
    if (v10 < 0)
      v33 = v10;
    else
      v33 = v17;
    swift_bridgeObjectRetain(v10);
    v34 = _CocoaArrayWrapper.endIndex.getter(v33);
    swift_bridgeObjectRelease(v10);
    v26 = v34 + v5;
    if (!__OFADD__(v34, v5))
      goto LABEL_27;
LABEL_58:
    __break(1u);
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100018838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100018544(a1, a2, a3, (unint64_t *)&unk_1005D9C10, UITabBarItem_ptr);
}

double sub_10001884C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  void (*v18)(void);
  void (*v19)(char *, uint64_t);
  NSURL *v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  void *v34;
  void *v35;
  void *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  double v41;
  id v42;
  NSURL *v43;
  void *v44;
  void *v45;
  unsigned int v46;
  id v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  char *v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  __n128 v62;
  char *v63;
  void (*v64)(char *, uint64_t);
  void *v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  os_log_type_t v71;
  uint8_t *v72;
  void *v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  double result;
  uint64_t v78;
  id v79;
  uint64_t v80;
  char *v81;
  __int128 v82;
  char *v83;
  char *v84;
  char *v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  void (*v90)(char *, uint64_t);
  void (*v91)(char *, unint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  _QWORD v94[3];
  char v95[16];
  id v96[2];

  v2 = sub_100053F2C((uint64_t *)&unk_1005D3470);
  __chkstk_darwin(v2);
  v4 = (char *)&v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v85 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v84 = (char *)&v80 - v10;
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v80 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v80 - v14;
  v86 = (id)objc_opt_self(NSFileManager);
  v16 = objc_msgSend(v86, "defaultManager");
  v17 = sub_100053F2C(&qword_1005D3990);
  v18 = (void (*)(void))method lookup function for FMImageCache(v17, &method descriptor for FMImageCache.cacheRoot.getter);
  v18();
  URL.appendingPathComponent(_:isDirectory:)(0x656C706F6570, 0xE600000000000000, 1);
  v87 = v6;
  v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v13, v5);
  URL._bridgeToObjectiveC()(v20);
  v22 = v21;
  v90 = v19;
  v19(v15, v5);
  v96[0] = 0;
  v23 = objc_msgSend(v16, "contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:", v22, 0, 5, v96);

  v24 = v96[0];
  if (!v23)
  {
    v66 = v24;
    v67 = _convertNSErrorToError(_:)(v24);

    swift_willThrow();
    goto LABEL_17;
  }
  v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v23, v5);

  v27 = *(_QWORD *)(v25 + 16);
  if (!v27)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v87 + 56))(v4, 1, 1, v5);
LABEL_25:
    v78 = v25;
LABEL_26:
    *(_QWORD *)&result = swift_bridgeObjectRelease(v78).n128_u64[0];
    return result;
  }
  v89 = (uint64_t *)(a1 + qword_1005D38F8);
  v28 = v87;
  v29 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v80 = v25;
  v30 = v25 + v29;
  v88 = *(_QWORD *)(v87 + 72);
  v91 = *(void (**)(char *, unint64_t, uint64_t))(v87 + 16);
  *(_QWORD *)&v26 = 136315138;
  v82 = v26;
  v81 = (char *)&type metadata for Any + 8;
  v31 = v84;
  v83 = v4;
  v91(v4, v25 + v29, v5);
  while (1)
  {
    v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
    v32(v4, 0, 1, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v4, 1, v5) == 1)
    {
      v78 = v80;
      goto LABEL_26;
    }
    v33 = (*(uint64_t (**)(char *, char *, uint64_t))(v28 + 32))(v31, v4, v5);
    v34 = (void *)URL.lastPathComponent.getter(v33);
    v36 = v35;
    v96[0] = v34;
    v96[1] = v35;
    v37 = v89[1];
    v92 = *v89;
    v93 = v37;
    v38 = sub_1000A0CB8();
    v39 = sub_1000A0CFC();
    v40 = BidirectionalCollection<>.starts<A>(with:)(&v92, &type metadata for String, &type metadata for String, v38, v39);
    *(_QWORD *)&v41 = swift_bridgeObjectRelease(v36).n128_u64[0];
    if ((v40 & 1) != 0)
    {
      v90(v31, v5);
      goto LABEL_5;
    }
    v42 = objc_msgSend(v86, "defaultManager", v41);
    URL._bridgeToObjectiveC()(v43);
    v45 = v44;
    v96[0] = 0;
    v46 = objc_msgSend(v42, "removeItemAtURL:error:", v44, v96);

    v47 = v96[0];
    if (!v46)
      break;
    v48 = qword_1005D1DE8;
    v49 = v96[0];
    if (v48 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v50 = type metadata accessor for Logger(0);
    sub_100056D88(v50, (uint64_t)qword_1005F5748);
    v51 = v85;
    v52 = ((uint64_t (*)(char *, char *, uint64_t))v91)(v85, v31, v5);
    v53 = Logger.logObject.getter(v52);
    v54 = static os_log_type_t.default.getter(v53);
    if (os_log_type_enabled(v53, v54))
    {
      v55 = v51;
      v56 = swift_slowAlloc(12, -1);
      v57 = (void *)swift_slowAlloc(32, -1);
      v96[0] = v57;
      *(_DWORD *)v56 = v82;
      v58 = sub_100008000((unint64_t *)&unk_1005D39D0, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t)&protocol conformance descriptor for URL);
      v59 = dispatch thunk of CustomStringConvertible.description.getter(v5, v58);
      v61 = v60;
      *(_QWORD *)(v56 + 4) = sub_100056DA0(v59, v60, (uint64_t *)v96);
      v62 = swift_bridgeObjectRelease(v61);
      v63 = v55;
      v4 = v83;
      v64 = v90;
      ((void (*)(char *, uint64_t, __n128))v90)(v63, v5, v62);
      _os_log_impl((void *)&_mh_execute_header, v53, v54, "FMImageCache: Deleting stale file: %s", (uint8_t *)v56, 0xCu);
      swift_arrayDestroy(v57, 1, v81);
      v65 = v57;
      v31 = v84;
      swift_slowDealloc(v65, -1, -1);
      swift_slowDealloc(v56, -1, -1);

    }
    else
    {

      v64 = v90;
      v90(v51, v5);
    }
    v64(v31, v5);
    v28 = v87;
LABEL_5:
    v30 += v88;
    if (!--v27)
    {
      v25 = v80;
      v32(v4, 1, 1, v5);
      goto LABEL_25;
    }
    v91(v4, v30, v5);
  }
  v79 = v96[0];
  swift_bridgeObjectRelease(v80);
  v67 = _convertNSErrorToError(_:)(v47);

  swift_willThrow();
  v90(v31, v5);
LABEL_17:
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v68 = type metadata accessor for Logger(0);
  sub_100056D88(v68, (uint64_t)qword_1005F5748);
  swift_errorRetain(v67);
  v69 = swift_errorRetain(v67);
  v70 = Logger.logObject.getter(v69);
  v71 = static os_log_type_t.default.getter(v70);
  if (os_log_type_enabled(v70, v71))
  {
    v72 = (uint8_t *)swift_slowAlloc(12, -1);
    v73 = (void *)swift_slowAlloc(32, -1);
    v96[0] = v73;
    *(_DWORD *)v72 = 136315138;
    swift_getErrorValue(v67, v95, v94);
    v74 = Error.localizedDescription.getter(v94[1], v94[2]);
    v76 = v75;
    v92 = sub_100056DA0(v74, v75, (uint64_t *)v96);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v92, &v93);
    swift_bridgeObjectRelease(v76);
    swift_errorRelease(v67);
    swift_errorRelease(v67);
    _os_log_impl((void *)&_mh_execute_header, v70, v71, "FMImageCache: Error deleting file: %s", v72, 0xCu);
    swift_arrayDestroy(v73, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v73, -1, -1);
    swift_slowDealloc(v72, -1, -1);

    swift_errorRelease(v67);
  }
  else
  {
    swift_errorRelease(v67);
    swift_errorRelease(v67);
    swift_errorRelease(v67);

  }
  return result;
}

void sub_100018FD0()
{
  char *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  double v7;
  id v8;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "userInterfaceStyle");

  objc_msgSend(*(id *)(*(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardContainer]+ OBJC_IVAR____TtC6FindMy19FMCardContainerView_grabber), "setHidden:", 0);
  v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardShadow];
  v4 = objc_msgSend(v3, "layer");
  objc_msgSend(v4, "setShadowOffset:", 0.0, -2.0);

  v5 = objc_msgSend(v3, "layer");
  v6 = v5;
  LODWORD(v7) = 1046428516;
  if (v2 == (id)1)
    *(float *)&v7 = 0.08;
  objc_msgSend(v5, "setShadowOpacity:", v7);

  v8 = objc_msgSend(v3, "layer");
  objc_msgSend(v8, "setShadowRadius:", 15.0);

}

void sub_100019108(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  __n128 v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t i;
  uint64_t v26;
  uint64_t v27;
  uint64_t Strong;
  uint64_t v29;
  uint64_t ObjectType;
  uint64_t v31;
  _QWORD v32[2];
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[3];

  v2 = v1;
  v4 = type metadata accessor for FMIPSeparationMonitoringState(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)v32 - v9;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v11 = type metadata accessor for Logger(0);
  sub_100056D88(v11, (uint64_t)qword_1005F5748);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v13 = v12(v10, a1, v4);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(12, -1);
    v34 = swift_slowAlloc(32, -1);
    v36[0] = v34;
    v33 = v16;
    *(_DWORD *)v16 = 136315138;
    v32[1] = v16 + 4;
    v12(v8, (uint64_t)v10, v4);
    v17 = String.init<A>(describing:)(v8, v4);
    v19 = v18;
    v35 = sub_100056DA0(v17, v18, v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, v36);
    v20 = swift_bridgeObjectRelease(v19);
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v10, v4, v20);
    v21 = v33;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "FMDevicesProvider: separationMonitoringStateDidChange: %s", v33, 0xCu);
    v22 = v34;
    swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v21, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }

  swift_beginAccess(v2 + 16, v36, 0, 0);
  v23 = *(_QWORD *)(v2 + 16);
  if (!((unint64_t)v23 >> 62))
  {
    v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(v2 + 16));
    if (v24)
      goto LABEL_8;
LABEL_20:
    swift_bridgeObjectRelease(v23);
    return;
  }
  if (v23 < 0)
    v31 = *(_QWORD *)(v2 + 16);
  else
    v31 = v23 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(v2 + 16));
  v24 = _CocoaArrayWrapper.endIndex.getter(v31);
  if (!v24)
    goto LABEL_20;
LABEL_8:
  if (v24 >= 1)
  {
    for (i = 0; i != v24; ++i)
    {
      if ((v23 & 0xC000000000000001) != 0)
      {
        v26 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v23);
      }
      else
      {
        v26 = *(_QWORD *)(v23 + 8 * i + 32);
        swift_retain(v26);
      }
      v27 = v26 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
      Strong = swift_unknownObjectWeakLoadStrong(v26 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber);
      v29 = *(_QWORD *)(v27 + 8);
      swift_release(v26);
      if (Strong)
      {
        ObjectType = swift_getObjectType(Strong);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 144))(v2, a1, ObjectType, v29);
        swift_unknownObjectRelease(Strong);
      }
    }
    goto LABEL_20;
  }
  __break(1u);
}

uint64_t sub_100019438(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t result;
  char *v30;
  _QWORD v31[4];
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;

  v4 = type metadata accessor for FMIPDevice(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FMSelectedSection(0);
  v9 = __chkstk_darwin(v8);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)v31 - v11;
  __chkstk_darwin(v10);
  v35 = (char *)v31 - v13;
  v37 = 0;
  v38 = 0xE000000000000000;
  v34 = v14;
  _print_unlocked<A, B>(_:_:)(a2, &v37, v14, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v15 = v38;
  v33 = v37;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v16 = type metadata accessor for Logger(0);
  sub_100056D88(v16, (uint64_t)qword_1005F5748);
  swift_bridgeObjectRetain(v15);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    v31[2] = v7;
    v20 = swift_slowAlloc(12, -1);
    v32 = v12;
    v21 = (uint8_t *)v20;
    v22 = swift_slowAlloc(32, -1);
    v31[3] = v5;
    v23 = v22;
    v37 = v22;
    v31[1] = a1;
    *(_DWORD *)v21 = 136315138;
    swift_bridgeObjectRetain(v15);
    v36 = sub_100056DA0(v33, v15, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37);
    swift_bridgeObjectRelease_n(v15, 3);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "FMMapViewDataSource: didUpdate selectedSection %s", v21, 0xCu);
    swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    v24 = v21;
    v12 = v32;
    swift_slowDealloc(v24, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v15, 2);
  }
  v26 = v34;
  v25 = (uint64_t)v35;
  swift_storeEnumTagMultiPayload(v35, v34, 10);
  sub_100024F80(a2, v25);
  v28 = v27;
  result = sub_10004FCB8(v25, type metadata accessor for FMSelectedSection);
  if ((v28 & 1) == 0)
  {
    sub_10000EAFC();
    sub_10004FC74(a2, (uint64_t)v12, type metadata accessor for FMSelectedSection);
    v30 = (char *)&loc_100019730 + 4 * (unsigned __int16)aRR[swift_getEnumCaseMultiPayload(v12, v26)];
    __asm { BR              X10 }
  }
  return result;
}

_QWORD *sub_10001A6E4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v35[5];

  v1 = (_QWORD *)v0;
  v2 = type metadata accessor for Locale(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v35[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FMIPManagerSubsystem(0);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v35[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v0 + 16) = _swiftEmptyArrayStorage;
  *(_BYTE *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 64) = _swiftEmptyArrayStorage;
  static FMIPBeaconSharingLimits.default.getter(v6);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy17FMDevicesProvider_unknownItemsDetectedNearYou) = _swiftEmptyArrayStorage;
  v9 = type metadata accessor for FMDeviceImageCache(0);
  v10 = swift_allocObject(v9, *(unsigned int *)(v9 + 48), *(unsigned __int16 *)(v9 + 52)) + qword_1005D9018;
  *(_QWORD *)(v10 + 8) = 0;
  swift_unknownObjectWeakInit(v10);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v11 = type metadata accessor for Logger(0);
  v12 = sub_100056D88(v11, (uint64_t)qword_1005F5748);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "FMDeviceImageCache: initialized", v15, 2u);
    swift_slowDealloc(v15, -1, -1);
  }

  v1[3] = FMIPDeviceImageCache.init(converter:)(sub_100027AC0, 0);
  v16 = type metadata accessor for FMItemImageCache(0);
  swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
  v1[5] = sub_10000F468();
  type metadata accessor for FMIPManagerConfiguration(0);
  v17 = type metadata accessor for FMDefaultAuthenticationUIProvider();
  v18 = swift_allocObject(v17, 16, 7);
  v35[3] = v17;
  v35[4] = sub_100008000(&qword_1005D45C0, (uint64_t (*)(uint64_t))type metadata accessor for FMDefaultAuthenticationUIProvider, (uint64_t)&unk_10048F2D4);
  v35[0] = v18;
  v19 = ((uint64_t (*)(void))static FMIPManagerConfiguration.default.getter)();
  FMIPManagerConfiguration.enabledSubsystems.getter();
  v20 = swift_release(v19);
  v21 = static FMIPManagerConfiguration.default.getter(v20);
  FMIPManagerConfiguration.preferredLocale.getter();
  v22 = swift_release(v21);
  v23 = FMIPManagerConfiguration.__allocating_init(enabledSubsystems:preferredLocale:authenticationUIProvider:snapshotHandlers:)(v8, v4, v35, 0, v22);
  v24 = objc_msgSend(objc_allocWithZone((Class)SPOwnerSession), "init");
  v25 = type metadata accessor for FMIPManager(0);
  swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  v26 = FMIPManager.init(configuration:ownerSession:)(v23, v24);
  v1[7] = v26;
  v27 = type metadata accessor for FMDevicesActionController();
  v28 = swift_allocObject(v27, 32, 7);
  *(_QWORD *)(v28 + 16) = v26;
  *(_QWORD *)(v28 + 24) = 0;
  v1[4] = v28;
  v29 = sub_100008000(&qword_1005D45C8, type metadata accessor for FMDevicesProvider, (uint64_t)&unk_1004826F0);
  swift_retain_n(v26, 2);
  v30 = swift_retain(v1);
  FMIPManager.delegate.setter(v30, v29);
  swift_release(v26);
  v31 = v1[3] + qword_1005D9018;
  *(_QWORD *)(v31 + 8) = &off_100544120;
  swift_unknownObjectWeakAssign(v31, v1);
  v32 = v1[5] + qword_1005D9258;
  *(_QWORD *)(v32 + 8) = &off_10055C698;
  swift_unknownObjectWeakAssign(v32, v1);
  return v1;
}

void sub_10001AA70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  uint64_t v26;
  uint64_t Strong;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32[3];

  v2 = v1;
  v4 = type metadata accessor for FMIPConfigValue(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v8 = type metadata accessor for Logger(0);
  sub_100056D88(v8, (uint64_t)qword_1005F5748);
  v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v30 = v13;
    v32[0] = v13;
    *(_DWORD *)v12 = 136315138;
    v29 = v12 + 4;
    v14 = FMIPConfigValue.rawValue.getter(v13);
    v16 = v15;
    v31 = sub_100056DA0(v14, v15, v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, v32);
    v17 = swift_bridgeObjectRelease(v16);
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v17);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "FMDevicesProvider: serverConfigurationChanged key %s", v12, 0xCu);
    v18 = v30;
    swift_arrayDestroy(v30, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v12, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

  swift_beginAccess(v2 + 16, v32, 0, 0);
  v19 = *(_QWORD *)(v2 + 16);
  if (!((unint64_t)v19 >> 62))
  {
    v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(v2 + 16));
    if (v20)
      goto LABEL_8;
LABEL_21:
    swift_bridgeObjectRelease(v19);
    return;
  }
  if (v19 < 0)
    v28 = *(_QWORD *)(v2 + 16);
  else
    v28 = v19 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(v2 + 16));
  v20 = _CocoaArrayWrapper.endIndex.getter(v28);
  if (!v20)
    goto LABEL_21;
LABEL_8:
  if (v20 >= 1)
  {
    for (i = 0; i != v20; ++i)
    {
      if ((v19 & 0xC000000000000001) != 0)
      {
        v25 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v19);
      }
      else
      {
        v25 = *(_QWORD *)(v19 + 8 * i + 32);
        swift_retain(v25);
      }
      v26 = v25 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
      Strong = swift_unknownObjectWeakLoadStrong(v25 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber);
      if (Strong)
      {
        v22 = Strong;
        v23 = *(_QWORD *)(v26 + 8);
        ObjectType = swift_getObjectType(Strong);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 64))(v2, a1, ObjectType, v23);
        swift_release(v25);
        swift_unknownObjectRelease(v22);
      }
      else
      {
        swift_release(v25);
      }
    }
    goto LABEL_21;
  }
  __break(1u);
}

void sub_10001AD6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t My;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  void **aBlock;
  uint64_t v46;
  void *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;

  v1 = type metadata accessor for DispatchTimeInterval(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (uint64_t *)((char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for DispatchTime(0);
  v43 = *(_QWORD *)(v5 - 8);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v39 - v9;
  v11 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  My = type metadata accessor for Feature.FindMy(0);
  v48 = (void *)My;
  v49 = sub_100008000((unint64_t *)&qword_1005D9690, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.FindMy, (uint64_t)&protocol conformance descriptor for Feature.FindMy);
  v15 = sub_10003D370(&aBlock);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(My - 8) + 104))(v15, enum case for Feature.FindMy.fmNiftyCurve(_:), My);
  LOBYTE(My) = isFeatureEnabled(_:)(&aBlock);
  sub_100029574(&aBlock);
  if ((My & 1) != 0)
  {
    v40 = v1;
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v41 = v5;
    v42 = v0;
    v16 = type metadata accessor for Logger(0);
    v17 = sub_100056D88(v16, (uint64_t)qword_1005F5748);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "FMConditionProvider: Starting monitoring Stewie...", v20, 2u);
      swift_slowDealloc(v20, -1, -1);
    }

    v49 = (uint64_t)sub_100378564;
    v50 = 0;
    aBlock = _NSConcreteStackBlock;
    v46 = 1107296256;
    v47 = sub_100037DF8;
    v48 = &unk_10055E100;
    v21 = _Block_copy(&aBlock);
    v44 = _swiftEmptyArrayStorage;
    v22 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v23 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
    v24 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v44, v23, v24, v11, v22);
    v25 = type metadata accessor for DispatchWorkItem(0);
    swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
    v26 = DispatchWorkItem.init(flags:block:)(v13, v21);
    sub_1000555A8();
    v27 = (void *)static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    *v4 = 30;
    v28 = v40;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for DispatchTimeInterval.seconds(_:), v40);
    + infix(_:_:)(v8, v4);
    (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v28);
    v29 = *(void (**)(char *, uint64_t))(v43 + 8);
    v30 = v41;
    v29(v8, v41);
    OS_dispatch_queue.asyncAfter(deadline:execute:)(v10, v26);

    v29(v10, v30);
    v31 = v42;
    v32 = *(void **)(v42 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_secureLocationsManager);
    v33 = swift_allocObject(&unk_10055E138, 24, 7);
    swift_unknownObjectWeakInit(v33 + 16, v31);
    v34 = swift_allocObject(&unk_10055E160, 32, 7);
    *(_QWORD *)(v34 + 16) = v26;
    *(_QWORD *)(v34 + 24) = v33;
    v49 = (uint64_t)sub_10005EB9C;
    v50 = v34;
    aBlock = _NSConcreteStackBlock;
    v46 = 1107296256;
    v47 = sub_10005D218;
    v48 = &unk_10055E178;
    v35 = _Block_copy(&aBlock);
    v36 = v50;
    v37 = v32;
    swift_retain(v26);
    swift_release(v36);
    v49 = (uint64_t)sub_10005EB7C;
    v50 = 0;
    aBlock = _NSConcreteStackBlock;
    v46 = 1107296256;
    v47 = sub_1000063D8;
    v48 = &unk_10055E1A0;
    v38 = _Block_copy(&aBlock);
    objc_msgSend(v37, "startMonitoringStewieStateWithBlock:completion:", v35, v38);
    _Block_release(v38);
    _Block_release(v35);
    swift_release(v26);

  }
}

void sub_10001B224(void *a1, uint64_t a2, void *a3)
{
  id v5;
  id v6;

  v5 = a3;
  v6 = a1;
  sub_10001B27C((uint64_t)a3);

}

void sub_10001B27C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  __int128 v4;
  objc_class *v5;
  id v6;
  id v7;
  double left;
  double top;
  double right;
  double bottom;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  id v17;
  void *v18;
  _OWORD v19[2];
  objc_super v20;

  v2 = v1;
  v4 = *(_OWORD *)((swift_isaMask & *v2) + 0x70);
  v19[0] = *(_OWORD *)((swift_isaMask & *v2) + 0x60);
  v19[1] = v4;
  v5 = (objc_class *)type metadata accessor for FMListViewController(0, (uint64_t)v19);
  v20.receiver = v2;
  v20.super_class = v5;
  objc_msgSendSuper2(&v20, "traitCollectionDidChange:", a1);
  v6 = objc_msgSend(v2, "traitCollection");
  v7 = objc_msgSend(v6, "horizontalSizeClass");

  if ((unint64_t)v7 >= 2)
  {
    if (v7 == (id)2)
    {
      if (qword_1005D1DC8 != -1)
        swift_once(&qword_1005D1DC8, sub_10005F330);
      right = *(double *)&qword_1005F5648;
      bottom = 0.0;
      left = *(double *)&qword_1005F5648;
      top = 0.0;
    }
    else
    {
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      top = UIEdgeInsetsZero.top;
      left = UIEdgeInsetsZero.left;
      bottom = UIEdgeInsetsZero.bottom;
      right = UIEdgeInsetsZero.right;
      v12 = type metadata accessor for Logger(0);
      v13 = sub_100056D88(v12, (uint64_t)qword_1005F5748);
      v14 = Logger.logObject.getter(v13);
      v15 = static os_log_type_t.default.getter(v14);
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v16 = 0;
        _os_log_impl((void *)&_mh_execute_header, v14, v15, "FMListViewController: unhandled trait collection size class", v16, 2u);
        swift_slowDealloc(v16, -1, -1);
      }

    }
  }
  else
  {
    top = UIEdgeInsetsZero.top;
    left = UIEdgeInsetsZero.left;
    bottom = UIEdgeInsetsZero.bottom;
    right = UIEdgeInsetsZero.right;
  }
  v17 = objc_msgSend(v2, "view");
  if (v17)
  {
    v18 = v17;
    objc_msgSend(v17, "setLayoutMargins:", top, left, bottom, right);

  }
  else
  {
    __break(1u);
  }
}

void sub_10001B48C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;
  uint64_t Strong;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[3];

  v2 = v1;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v4 = type metadata accessor for Logger(0);
  sub_100056D88(v4, (uint64_t)qword_1005F5748);
  v5 = swift_bridgeObjectRetain_n(a1, 2);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v26[0] = v9;
    *(_DWORD *)v8 = 136315138;
    v10 = type metadata accessor for FMIPItemGroup(0);
    swift_bridgeObjectRetain(a1);
    v12 = Array.description.getter(v11, v10);
    v14 = v13;
    swift_bridgeObjectRelease(a1);
    v25 = sub_100056DA0(v12, v14, v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, v26);
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMDevicesProvider: itemGroupsDidChange: %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a1, 2);
  }
  swift_beginAccess(v2 + 16, v26, 0, 0);
  v15 = *(_QWORD *)(v2 + 16);
  if (!((unint64_t)v15 >> 62))
  {
    v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(v2 + 16));
    if (v16)
      goto LABEL_8;
LABEL_21:
    swift_bridgeObjectRelease(v15);
    return;
  }
  if (v15 < 0)
    v24 = *(_QWORD *)(v2 + 16);
  else
    v24 = v15 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(v2 + 16));
  v16 = _CocoaArrayWrapper.endIndex.getter(v24);
  if (!v16)
    goto LABEL_21;
LABEL_8:
  if (v16 >= 1)
  {
    for (i = 0; i != v16; ++i)
    {
      if ((v15 & 0xC000000000000001) != 0)
      {
        v21 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v15);
      }
      else
      {
        v21 = *(_QWORD *)(v15 + 8 * i + 32);
        swift_retain(v21);
      }
      v22 = v21 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
      Strong = swift_unknownObjectWeakLoadStrong(v21 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber);
      if (Strong)
      {
        v18 = Strong;
        v19 = *(_QWORD *)(v22 + 8);
        ObjectType = swift_getObjectType(Strong);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 88))(v2, a1, ObjectType, v19);
        swift_release(v21);
        swift_unknownObjectRelease(v18);
      }
      else
      {
        swift_release(v21);
      }
    }
    goto LABEL_21;
  }
  __break(1u);
}

void sub_10001B764()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  Class isa;
  NSString v12;
  id v13;
  id v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = v0;
  v2 = sub_100053F2C((uint64_t *)&unk_1005E59F0);
  __chkstk_darwin(v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v0, "setShowsLargeContentViewer:", 1);
  v5 = sub_100007F8C();
  objc_msgSend(v1, "addInteraction:", v5);

  v6 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 1100);
  v7 = sub_100053F2C(&qword_1005D2F10);
  v8 = swift_allocObject(v7, 40, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100481B00;
  *(_QWORD *)(v8 + 32) = v6;
  v29 = v8;
  specialized Array._endMutation()(v8);
  v9 = v29;
  sub_100006C5C(0, (unint64_t *)&unk_1005D9C30, UIVisualEffect_ptr);
  v10 = v6;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v1, "setBackgroundEffects:", isa, swift_bridgeObjectRelease(v9).n128_f64[0]);

  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "_setBackdropGroupName:", v12);

  v13 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
  objc_msgSend(v1, "setTintColor:", v13);

  sub_1000182B4();
  v14 = objc_msgSend(v1, "items");
  if (!v14)
    goto LABEL_9;
  v16 = sub_100006C5C(0, (unint64_t *)&unk_1005D9C10, UITabBarItem_ptr);
  v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v14, v16);

  if ((unint64_t)v17 >> 62)
  {
    if (v17 < 0)
      v27 = v17;
    else
      v27 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v17);
    v14 = (id)_CocoaArrayWrapper.endIndex.getter(v27);
    swift_bridgeObjectRelease(v17);
    if (!v14)
      goto LABEL_8;
  }
  else
  {
    v14 = *(id *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v14)
    {
LABEL_8:
      *(_QWORD *)&v15 = swift_bridgeObjectRelease(v17).n128_u64[0];
LABEL_9:
      objc_msgSend(v1, "setSelectedItem:", v14, v15);

      objc_msgSend(v1, "setDelegate:", v1);
      v19 = OBJC_IVAR____TtC6FindMy8FMTabBar_mediator;
      v20 = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy8FMTabBar_mediator] + 48);
      v21 = swift_retain(v20);
      dispatch thunk of FMFManager.preferences.getter(v21);
      swift_release(v20);
      sub_100006DC4((uint64_t)v4);
      sub_1000051EC((uint64_t)v4, (uint64_t *)&unk_1005E59F0);
      v22 = *(_QWORD *)(*(_QWORD *)&v1[v19] + 48);
      swift_retain(v22);
      v24 = dispatch thunk of FMFManager.friends.getter(v23);
      swift_release(v22);
      sub_10003F7B4(v24);
      swift_bridgeObjectRelease(v24);
      v25 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v1[v19] + 24) + 64);
      v26 = swift_bridgeObjectRetain(v25);
      sub_10001560C(v26);
      swift_bridgeObjectRelease(v25);
      return;
    }
  }
  if ((v17 & 0xC000000000000001) != 0)
  {
    v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v17);
    goto LABEL_7;
  }
  if (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v18 = *(id *)(v17 + 32);
LABEL_7:
    v14 = v18;
    goto LABEL_8;
  }
  __break(1u);
}

void sub_10001BAD8(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  void *v7;
  BOOL v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  Class isa;
  uint64_t v13;
  Class v14;

  v7 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
  v8 = a1 == 2;
  if (a1 == 2)
    v9 = a2;
  else
    v9 = a3;
  v10 = *v9;
  v11 = *(_QWORD *)(v3 + v10);
  if (v8)
    a2 = a3;
  swift_bridgeObjectRetain(*(_QWORD *)(v3 + v10));
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v11);
  objc_msgSend(v7, "deactivateConstraints:", isa);

  v13 = *(_QWORD *)(v3 + *a2);
  swift_bridgeObjectRetain(v13);
  v14 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v13);
  objc_msgSend(v7, "activateConstraints:", v14);

}

void sub_10001BBC4(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  unint64_t v28;
  Class isa;
  uint64_t v30;
  void *v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  void *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t ObjectType;
  uint64_t aBlock[5];
  uint64_t v57;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v53 = *(_QWORD *)(v3 - 8);
  v54 = v3;
  __chkstk_darwin(v3);
  v52 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v50 = *(_QWORD *)(v5 - 8);
  v51 = v5;
  __chkstk_darwin(v5);
  v49 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for DispatchTime(0);
  v7 = *(_QWORD *)(v48 - 8);
  v8 = __chkstk_darwin(v48);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v47 = (char *)&v46 - v11;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v12 = type metadata accessor for Logger(0);
  sub_100056D88(v12, (uint64_t)qword_1005F5748);
  v13 = v1;
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc(22, -1);
    v17 = swift_slowAlloc(64, -1);
    v46 = a1;
    v18 = v17;
    aBlock[0] = v17;
    *(_DWORD *)v16 = 136446466;
    ObjectType = swift_getObjectType(v13);
    v19 = sub_100053F2C((uint64_t *)&unk_1005DF440);
    v20 = String.init<A>(describing:)(&ObjectType, v19);
    v22 = v21;
    ObjectType = sub_100056DA0(v20, v21, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&ObjectType, aBlock);

    swift_bridgeObjectRelease(v22);
    *(_WORD *)(v16 + 12) = 2082;
    ObjectType = sub_100056DA0(0xD00000000000001ELL, 0x80000001004C01C0, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&ObjectType, aBlock);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "%{public}s %{public}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy(v18, 2, (char *)&type metadata for Any + 8);
    v23 = v18;
    a1 = v46;
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v16, -1, -1);

  }
  else
  {

  }
  v24 = *(void **)&v13[OBJC_IVAR____TtC6FindMy13FMAppDelegate_application];
  if (v24)
  {
    v25 = (void *)UIApp;
    if (UIApp)
    {
      v26 = v24;
      v27 = objc_msgSend(v25, "_launchTestName");
      v28 = sub_10005D5A0((uint64_t)_swiftEmptyArrayStorage);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v28);
      objc_msgSend(v26, "finishedTest:extraResults:", v27, isa);

      objc_msgSend(a1, "setApplicationIconBadgeNumber:", 0);
      v30 = *(_QWORD *)&v13[OBJC_IVAR____TtC6FindMy13FMAppDelegate_mediator];
      sub_10000CF8C(0);
      *(_BYTE *)(*(_QWORD *)(v30 + 16) + OBJC_IVAR____TtC6FindMy19FMConditionProvider_wasNoNetworkAlertShown) = 0;
      sub_1000555A8();
      v31 = (void *)static OS_dispatch_queue.main.getter();
      static DispatchTime.now()(v31);
      v32 = v47;
      + infix(_:_:)(v10, 0.2);
      v33 = *(void (**)(char *, uint64_t))(v7 + 8);
      v34 = v48;
      v33(v10, v48);
      v35 = swift_allocObject(&unk_10055C240, 24, 7);
      *(_QWORD *)(v35 + 16) = v13;
      aBlock[4] = (uint64_t)sub_100345D24;
      v57 = v35;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_100037DF8;
      aBlock[3] = (uint64_t)&unk_10055C258;
      v36 = _Block_copy(aBlock);
      v37 = v57;
      v38 = v13;
      v39 = swift_release(v37);
      v40 = v49;
      static DispatchQoS.unspecified.getter(v39);
      aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
      v41 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v42 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
      v43 = sub_1000555E4();
      v44 = v52;
      v45 = v54;
      dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v42, v43, v54, v41);
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v32, v40, v44, v36);
      _Block_release(v36);

      (*(void (**)(char *, uint64_t))(v53 + 8))(v44, v45);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v40, v51);
      v33(v32, v34);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_10001C100()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  NSString v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  id v21;

  v1 = objc_msgSend(v0, "view");
  if (!v1)
  {
    __break(1u);
    goto LABEL_11;
  }
  v2 = v1;
  objc_msgSend(v1, "setUserInteractionEnabled:", 0);

  v3 = objc_msgSend(v0, "view");
  if (!v3)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v4 = v3;
  v5 = (void *)objc_opt_self(UIColor);
  v6 = objc_msgSend(v5, "clearColor");
  objc_msgSend(v4, "setBackgroundColor:", v6);

  v7 = *(void **)&v0[OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_visualEffectView];
  v8 = objc_msgSend((id)objc_opt_self(UIBlurEffect), "effectWithStyle:", 1100);
  objc_msgSend(v7, "setEffect:", v8);

  v9 = *(void **)&v0[OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_darkenerView];
  v10 = objc_msgSend(v5, "blackColor");
  objc_msgSend(v9, "setBackgroundColor:", v10);

  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "_setGroupName:", v11);

  if (qword_1005D1E90 != -1)
    swift_once(&qword_1005D1E90, sub_10000642C);
  objc_msgSend(v7, "_setCaptureView:", qword_1005F59F8);
  objc_msgSend(v7, "setAlpha:", 0.0);
  objc_msgSend(v7, "setHidden:", 1);
  objc_msgSend(v9, "setAlpha:", 0.0);
  objc_msgSend(v9, "setHidden:", 1);
  v12 = *(void **)&v0[OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_markerImageView];
  objc_msgSend(v12, "setAlpha:", 0.0);
  objc_msgSend(v12, "setHidden:", 1);
  v13 = *(void **)&v0[OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_iconImageView];
  objc_msgSend(v13, "setAlpha:", 0.0);
  objc_msgSend(v13, "setHidden:", 1);
  objc_msgSend(v13, "setContentMode:", 1);
  v14 = objc_msgSend(v0, "view");
  if (!v14)
    goto LABEL_12;
  v15 = v14;
  objc_msgSend(v14, "addSubview:", v7);

  v16 = objc_msgSend(v0, "view");
  if (!v16)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v17 = v16;
  objc_msgSend(v16, "addSubview:", v9);

  v18 = objc_msgSend(v0, "view");
  if (!v18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v19 = v18;
  objc_msgSend(v18, "addSubview:", v12);

  v20 = objc_msgSend(v0, "view");
  if (v20)
  {
    v21 = v20;
    objc_msgSend(v20, "addSubview:", v13);

    return;
  }
LABEL_15:
  __break(1u);
}

void sub_10001C454()
{
  char *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _BYTE v35[24];
  objc_super v36;

  v36.receiver = v0;
  v36.super_class = (Class)type metadata accessor for FMMainViewController();
  objc_msgSendSuper2(&v36, "viewDidLoad");
  sub_10001CA70();
  sub_100030320();
  v1 = *(_QWORD **)&v0[OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator];
  v2 = v1[3];
  v3 = type metadata accessor for FMDevicesSubscription(0);
  v4 = swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  v5 = v4 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
  *(_QWORD *)(v5 + 8) = 0;
  swift_unknownObjectWeakInit(v5);
  swift_retain(v2);
  v6 = v0;
  UUID.init()(v6);
  v7 = v4 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
  *(_QWORD *)(v7 + 8) = &off_100557C60;
  swift_unknownObjectWeakAssign(v7, v6);

  swift_beginAccess(v2 + 16, v35, 33, 0);
  v8 = swift_retain(v4);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
  v10 = *(_QWORD *)((*(_QWORD *)(v2 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v9 = *(_QWORD *)((*(_QWORD *)(v2 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v10 >= v9 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v9 > 1, v10 + 1, 1);
  v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v4);
  specialized Array._endMutation()(v11);
  swift_endAccess(v35);
  swift_release(v4);
  swift_release(v2);
  v12 = v1[6];
  v13 = type metadata accessor for FMPeopleSubscription(0);
  v14 = swift_allocObject(v13, *(unsigned int *)(v13 + 48), *(unsigned __int16 *)(v13 + 52));
  v15 = v14 + OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_subscriber;
  *(_QWORD *)(v15 + 8) = 0;
  swift_unknownObjectWeakInit(v15);
  v16 = v6;
  v17 = swift_retain(v12);
  UUID.init()(v17);
  v18 = v14 + OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_subscriber;
  *(_QWORD *)(v18 + 8) = &off_100557BF8;
  swift_unknownObjectWeakAssign(v18, v16);

  swift_beginAccess(v12 + 16, v35, 33, 0);
  v19 = swift_retain(v14);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v19);
  v21 = *(_QWORD *)((*(_QWORD *)(v12 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v20 = *(_QWORD *)((*(_QWORD *)(v12 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v21 >= v20 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v20 > 1, v21 + 1, 1);
  v22 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v21, v14);
  specialized Array._endMutation()(v22);
  swift_endAccess(v35);
  swift_release(v14);
  swift_release(v12);
  v23 = (void *)v1[2];
  v24 = type metadata accessor for FMConditionSubscription(0);
  v25 = swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  v26 = v25 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber;
  *(_QWORD *)(v26 + 8) = 0;
  swift_unknownObjectWeakInit(v26);
  v27 = v16;
  v28 = v23;
  UUID.init()(v28);
  v29 = v25 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber;
  *(_QWORD *)(v29 + 8) = &off_100557B78;
  swift_unknownObjectWeakAssign(v29, v27);

  v30 = &v28[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions];
  swift_beginAccess(&v28[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions], v35, 33, 0);
  v31 = swift_retain(v25);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v31);
  v33 = *(_QWORD *)((*(_QWORD *)v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v32 = *(_QWORD *)((*(_QWORD *)v30 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v33 >= v32 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v32 > 1, v33 + 1, 1);
  v34 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v33, v25);
  specialized Array._endMutation()(v34);
  swift_endAccess(v35);
  swift_release(v25);

}

void sub_10001C7E0()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  double v20;
  id v21;
  objc_super v22;

  v22.receiver = v0;
  v22.super_class = (Class)type metadata accessor for FMTabBar();
  objc_msgSendSuper2(&v22, "layoutSubviews");
  v1 = objc_msgSend(v0, "superview");
  if (v1
    && (v2 = v1,
        v3 = objc_msgSend(v1, "traitCollection"),
        v2,
        v4 = objc_msgSend(v3, "horizontalSizeClass"),
        v3,
        v4 == (id)2))
  {
    objc_msgSend(v0, "bounds");
    v6 = v5;
    objc_msgSend(v0, "bounds");
    v8 = v7 + -1.0;
    objc_msgSend(v0, "bounds");
    v10 = v9;
    objc_msgSend(v0, "bounds");
    v12 = v11 + 2.0;
    v13 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:", 12, v6, v8, v10, v11 + 2.0, 12.0, 12.0);
    v14 = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
    objc_msgSend(v14, "setFrame:", v6, v8, v10, v12);
    v15 = objc_msgSend(v13, "CGPath");
    objc_msgSend(v14, "setPath:", v15);

    v16 = objc_msgSend(v0, "layer");
    objc_msgSend(v16, "setMask:", v14);

  }
  else
  {
    v16 = objc_msgSend(v0, "layer");
    objc_msgSend(v16, "setMask:", 0);
  }

  v17 = objc_msgSend(v0, "traitCollection");
  v18 = objc_msgSend(v17, "userInterfaceStyle");

  v19 = objc_allocWithZone((Class)UIColor);
  v20 = 1.0;
  if (v18 == (id)2)
    v20 = 0.0;
  v21 = objc_msgSend(v19, "initWithWhite:alpha:", v20, 0.7);
  objc_msgSend(v0, "setBackgroundColor:", v21);

}

id sub_10001CA70()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  char *v4;
  char *v5;
  void *v6;
  void *v7;
  id result;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if (qword_1005D1E90 != -1)
    swift_once(&qword_1005D1E90, sub_10000642C);
  objc_msgSend((id)qword_1005F59F8, "setRenderMode:", 1);
  v1 = *(char **)&v0[OBJC_IVAR____TtC6FindMy20FMMainViewController_initialCardContainer];
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy20FMMainViewController_tabBar];
  v3 = *(void **)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_tabBar];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_tabBar] = v2;
  v4 = v2;

  v5 = &v4[OBJC_IVAR____TtC6FindMy8FMTabBar_contentDelegate];
  *((_QWORD *)v5 + 1) = &off_100557D38;
  swift_unknownObjectWeakAssign(v5, v0);
  objc_msgSend(v0, "addChildViewController:", v1);
  v6 = *(void **)&v0[OBJC_IVAR____TtC6FindMy20FMMainViewController_mapController];
  objc_msgSend(v0, "addChildViewController:", v6);
  v7 = *(void **)&v0[OBJC_IVAR____TtC6FindMy20FMMainViewController_noLocationController];
  objc_msgSend(v0, "addChildViewController:", v7);
  result = objc_msgSend(v0, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_25;
  }
  v9 = result;
  result = objc_msgSend(v6, "view");
  if (!result)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v10 = result;
  objc_msgSend(v9, "addSubview:", result);

  result = objc_msgSend(v0, "view");
  if (!result)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v11 = result;
  objc_msgSend(result, "addSubview:", qword_1005F59F8);

  result = objc_msgSend(v0, "view");
  if (!result)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v12 = result;
  result = objc_msgSend(v7, "view");
  if (!result)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v13 = result;
  objc_msgSend(v12, "addSubview:", result);

  result = objc_msgSend(v0, "view");
  if (!result)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v14 = result;
  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v15 = result;
  objc_msgSend(v14, "addSubview:", result);

  result = objc_msgSend(v0, "view");
  if (!result)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v16 = result;
  v17 = objc_msgSend(result, "traitCollection");

  v18 = objc_msgSend(v17, "horizontalSizeClass");
  result = objc_msgSend(v0, "view");
  v19 = result;
  if (v18 != (id)2)
    goto LABEL_14;
  if (!result)
  {
    __break(1u);
LABEL_14:
    if (result)
      goto LABEL_15;
LABEL_32:
    __break(1u);
    return result;
  }
LABEL_15:
  objc_msgSend(result, "addSubview:", v4);

  v20 = (uint64_t)objc_msgSend(v4, "items");
  if (v20)
  {
    v22 = sub_100006C5C(0, (unint64_t *)&unk_1005D9C10, UITabBarItem_ptr);
    v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v20, v22);

    if ((unint64_t)v23 >> 62)
    {
      if (v23 < 0)
        v24 = v23;
      else
        v24 = v23 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v23);
      v20 = _CocoaArrayWrapper.endIndex.getter(v24);
      swift_bridgeObjectRelease(v23);
    }
    else
    {
      v20 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    *(_QWORD *)&v21 = swift_bridgeObjectRelease(v23).n128_u64[0];
  }
  objc_msgSend(v4, "setHidden:", v20 < 2, v21);
  objc_msgSend(v6, "didMoveToParentViewController:", v0);
  objc_msgSend(v7, "didMoveToParentViewController:", v0);
  return objc_msgSend(v1, "didMoveToParentViewController:", v0);
}

id sub_10001CE40(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id result;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  uint64_t v24;
  uint64_t Strong;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28[3];

  v2 = v1;
  result = objc_msgSend(a1, "state");
  if (result != (id)1)
  {
    if (objc_msgSend(a1, "state") == (id)5 || objc_msgSend(a1, "state") == (id)10)
    {
      v5 = 0;
      v6 = 0xE200000000000000;
      v7 = 28271;
    }
    else
    {
      v5 = 1;
      v6 = 0xE300000000000000;
      v7 = 6710895;
    }
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v8 = type metadata accessor for Logger(0);
    sub_100056D88(v8, (uint64_t)qword_1005F5748);
    v9 = a1;
    v10 = swift_bridgeObjectRetain(v6);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc(22, -1);
      v14 = swift_slowAlloc(32, -1);
      v28[0] = v14;
      *(_DWORD *)v13 = 136315394;
      swift_bridgeObjectRetain(v6);
      v27 = sub_100056DA0(v7, v6, v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, v28);
      swift_bridgeObjectRelease_n(v6, 3);
      *(_WORD *)(v13 + 12) = 2048;
      v15 = objc_msgSend(v9, "state");

      v27 = (uint64_t)v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v27, v28);

      _os_log_impl((void *)&_mh_execute_header, v11, v12, "FMConditionProvider: BT is %s (new state=%ld", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v14, -1, -1);
      swift_slowDealloc(v13, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(v6, 2);
    }
    v16 = (uint64_t *)(v2 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions);
    swift_beginAccess(v2 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions, v28, 0, 0);
    v17 = *v16;
    if ((unint64_t)*v16 >> 62)
    {
      if (v17 < 0)
        v26 = *v16;
      else
        v26 = v17 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v17);
      result = (id)_CocoaArrayWrapper.endIndex.getter(v26);
      v18 = (uint64_t)result;
      if (result)
        goto LABEL_13;
    }
    else
    {
      v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = (id)swift_bridgeObjectRetain(*v16);
      if (v18)
      {
LABEL_13:
        if (v18 < 1)
        {
          __break(1u);
          return result;
        }
        for (i = 0; i != v18; ++i)
        {
          if ((v17 & 0xC000000000000001) != 0)
          {
            v23 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v17);
          }
          else
          {
            v23 = *(_QWORD *)(v17 + 8 * i + 32);
            swift_retain(v23);
          }
          v24 = v23 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber;
          Strong = swift_unknownObjectWeakLoadStrong(v23 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber);
          if (Strong)
          {
            v20 = Strong;
            v21 = *(_QWORD *)(v24 + 8);
            ObjectType = swift_getObjectType(Strong);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 32))(v2, v5, ObjectType, v21);
            swift_release(v23);
            swift_unknownObjectRelease(v20);
          }
          else
          {
            swift_release(v23);
          }
        }
      }
    }
    return (id)swift_bridgeObjectRelease(v17);
  }
  return result;
}

uint64_t sub_10001D1A4(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  _QWORD v51[3];

  v3 = v2;
  v49 = a2;
  v50 = a1;
  v48 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v4 = *(_QWORD *)(v48 - 8);
  __chkstk_darwin(v48);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v3 + 32) = 0;
  swift_unknownObjectWeakInit(v3 + 24, 0);
  *(_QWORD *)(v3 + 48) = &_swiftEmptyDictionarySingleton;
  sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  *(_DWORD *)(v3 + 56) = 0;
  *(_QWORD *)(v3 + 72) = 0;
  *(_QWORD *)(v3 + 80) = 0;
  *(_QWORD *)(v3 + 64) = 0;
  static DispatchQoS.userInitiated.getter();
  v51[0] = _swiftEmptyArrayStorage;
  v13 = sub_100008000((unint64_t *)&unk_1005D3970, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v14 = sub_100053F2C((uint64_t *)&unk_1005D20F0);
  v15 = sub_10003F774((unint64_t *)&unk_1005D3980, (uint64_t *)&unk_1005D20F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v51, v14, v15, v7, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v48);
  *(_QWORD *)(v3 + 88) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000022, 0x80000001004C5E20, v12, v9, v6, 0);
  *(_QWORD *)(v3 + 96) = 0;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v16 = type metadata accessor for Logger(0);
  v17 = sub_100056D88(v16, (uint64_t)qword_1005F5748);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "FMMapViewDataSource: initialized", v20, 2u);
    swift_slowDealloc(v20, -1, -1);
  }

  v21 = v49;
  v22 = v50;
  *(_QWORD *)(v3 + 16) = v50;
  *(_QWORD *)(v3 + 40) = v21;
  v23 = *(_QWORD *)(v22 + 56);
  v24 = type metadata accessor for FMSelectionSubscription(0);
  v25 = swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
  v26 = v25 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
  *(_QWORD *)(v26 + 8) = 0;
  swift_unknownObjectWeakInit(v26, 0);
  swift_retain(v22);
  v27 = v21;
  swift_retain(v23);
  v28 = swift_retain(v3);
  UUID.init()(v28);
  *(_QWORD *)(v25 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber + 8) = &off_100564F30;
  swift_unknownObjectWeakAssign();
  swift_beginAccess(v23 + 16, v51, 33, 0);
  v29 = swift_retain(v25);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v29);
  v31 = *(_QWORD *)((*(_QWORD *)(v23 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v30 = *(_QWORD *)((*(_QWORD *)(v23 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v31 >= v30 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v30 > 1, v31 + 1, 1);
  v32 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v31, v25);
  specialized Array._endMutation()(v32);
  swift_endAccess(v51);
  swift_release(v23);
  swift_release(v3);
  v33 = *(_QWORD *)(v3 + 80);
  *(_QWORD *)(v3 + 80) = v25;
  swift_release(v33);
  v34 = *(_QWORD *)(v22 + 48);
  v35 = type metadata accessor for FMPeopleSubscription(0);
  v36 = swift_allocObject(v35, *(unsigned int *)(v35 + 48), *(unsigned __int16 *)(v35 + 52));
  v37 = v36 + OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_subscriber;
  *(_QWORD *)(v37 + 8) = 0;
  swift_unknownObjectWeakInit(v37, 0);
  swift_retain(v3);
  v38 = swift_retain(v34);
  UUID.init()(v38);
  *(_QWORD *)(v36 + OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_subscriber + 8) = &off_100564E28;
  swift_unknownObjectWeakAssign();
  swift_beginAccess(v34 + 16, v51, 33, 0);
  v39 = swift_retain(v36);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v39);
  v41 = *(_QWORD *)((*(_QWORD *)(v34 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v40 = *(_QWORD *)((*(_QWORD *)(v34 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v41 >= v40 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v40 > 1, v41 + 1, 1);
  v42 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v41, v36);
  specialized Array._endMutation()(v42);
  swift_endAccess(v51);
  swift_release(v34);
  swift_release(v3);
  v43 = *(_QWORD *)(v3 + 72);
  *(_QWORD *)(v3 + 72) = v36;
  v44 = swift_release(v43);
  v45 = dispatch thunk of FMFManager.friends.getter(v44);
  v46 = v45;
  if (*(unsigned __int8 *)(v3 + 56) - 1 >= 2)
  {
    *(_BYTE *)(v3 + 57) = 0;
    sub_10003F4F8(v45);
  }
  else
  {
    sub_100406EC4(v45);
  }
  swift_release(v22);

  swift_bridgeObjectRelease(v46);
  return v3;
}

_QWORD *sub_10001D6C4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  id v30;
  uint64_t My;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  void (*v35)(_QWORD *, uint64_t, uint64_t);
  char v36;
  int v37;
  _QWORD *v38;
  char v39;
  _QWORD *v40;
  int *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void *v50;
  id v51;
  id v52;
  _QWORD v54[3];
  uint64_t v55;
  unint64_t v56;
  char v57[80];
  char v58[80];
  char v59[80];
  char v60[80];

  v1 = v0;
  v0[2] = _swiftEmptyArrayStorage;
  v2 = sub_100053F2C(&qword_1005DAF10);
  inited = swift_initStackObject(v2, v60);
  *(_OWORD *)(inited + 16) = xmmword_100481730;
  *(_QWORD *)(inited + 32) = FMTabInfoLastVisited.getter(inited);
  *(_QWORD *)(inited + 40) = v4;
  *(_QWORD *)(inited + 48) = 0xBFF0000000000000;
  *(_QWORD *)(inited + 56) = FMTabInfoTimeSpent.getter(v5);
  *(_QWORD *)(inited + 64) = v6;
  *(_QWORD *)(inited + 72) = 0xBFF0000000000000;
  v1[3] = sub_10004C104(inited);
  v7 = swift_initStackObject(v2, v59);
  *(_OWORD *)(v7 + 16) = xmmword_100481730;
  *(_QWORD *)(v7 + 32) = FMTabInfoLastVisited.getter(v7);
  *(_QWORD *)(v7 + 40) = v8;
  *(_QWORD *)(v7 + 48) = 0xBFF0000000000000;
  *(_QWORD *)(v7 + 56) = FMTabInfoTimeSpent.getter(v9);
  *(_QWORD *)(v7 + 64) = v10;
  *(_QWORD *)(v7 + 72) = 0xBFF0000000000000;
  v1[4] = sub_10004C104(v7);
  v11 = swift_initStackObject(v2, v58);
  *(_OWORD *)(v11 + 16) = xmmword_100481730;
  *(_QWORD *)(v11 + 32) = FMTabInfoLastVisited.getter(v11);
  *(_QWORD *)(v11 + 40) = v12;
  *(_QWORD *)(v11 + 48) = 0xBFF0000000000000;
  *(_QWORD *)(v11 + 56) = FMTabInfoTimeSpent.getter(v13);
  *(_QWORD *)(v11 + 64) = v14;
  *(_QWORD *)(v11 + 72) = 0xBFF0000000000000;
  v1[5] = sub_10004C104(v11);
  v15 = swift_initStackObject(v2, v57);
  *(_OWORD *)(v15 + 16) = xmmword_100481730;
  *(_QWORD *)(v15 + 32) = FMTabInfoLastVisited.getter(v15);
  *(_QWORD *)(v15 + 40) = v16;
  *(_QWORD *)(v15 + 48) = 0xBFF0000000000000;
  *(_QWORD *)(v15 + 56) = FMTabInfoTimeSpent.getter(v17);
  *(_QWORD *)(v15 + 64) = v18;
  *(_QWORD *)(v15 + 72) = 0xBFF0000000000000;
  v1[6] = sub_10004C104(v15);
  v19 = (char *)v1 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection;
  v20 = type metadata accessor for FMSelectedSection(0);
  swift_storeEnumTagMultiPayload(v19, v20, 14);
  swift_storeEnumTagMultiPayload((char *)v1 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, v20, 14);
  v21 = (char *)v1 + OBJC_IVAR____TtC6FindMy21FMSelectionController_selectedMapMode;
  *(_WORD *)v21 = 0;
  v21[2] = 1;
  v22 = OBJC_IVAR____TtC6FindMy21FMSelectionController_selectedUnit;
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC6FindMy21FMSelectionController_selectedUnit) = 1;
  *((_BYTE *)v1 + OBJC_IVAR____TtC6FindMy21FMSelectionController_mapZoomFactor) = 2;
  v23 = (char *)v1 + OBJC_IVAR____TtC6FindMy21FMSelectionController_pendingAction;
  v24 = type metadata accessor for FMSelectionPendingAction(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v25 = type metadata accessor for Logger(0);
  v26 = sub_100056D88(v25, (uint64_t)qword_1005F5748);
  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.default.getter(v27);
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v29 = 0;
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "FMSelectionController: initialized", v29, 2u);
    swift_slowDealloc(v29, -1, -1);
  }

  v30 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  My = type metadata accessor for Feature.FindMy(0);
  v55 = My;
  v32 = sub_100006590();
  v56 = v32;
  v33 = sub_10003D370(v54);
  v34 = enum case for Feature.FindMy.springfieldIntegration(_:);
  v35 = *(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(My - 8) + 104);
  v35(v33, enum case for Feature.FindMy.springfieldIntegration(_:), My);
  v36 = isFeatureEnabled(_:)(v54);
  sub_100029574(v54);
  v37 = sub_100009CA8(v30, v36 & 1);

  if (v37 != 2)
  {
    *v21 = v37 & 1;
    v21[1] = BYTE1(v37) & 1;
    v21[2] = BYTE2(v37) & 1;
  }
  v55 = My;
  v56 = v32;
  v38 = sub_10003D370(v54);
  v35(v38, v34, My);
  v39 = isFeatureEnabled(_:)(v54);
  sub_100029574(v54);
  if ((v39 & 1) == 0)
  {
    if (qword_1005D1ED0 != -1)
      swift_once(&qword_1005D1ED0, sub_10032D1AC);
    *(_QWORD *)((char *)v1 + v22) = objc_msgSend((id)qword_1005F5AB8, "measurementSystem", 2, 4);
  }
  v40 = (_QWORD *)((char *)v1 + OBJC_IVAR____TtC6FindMy21FMSelectionController_pendingActionInfo);
  v41 = (int *)type metadata accessor for FMPendingActionInfo(0);
  *v40 = 0;
  v40[1] = 0;
  v42 = (char *)v40 + v41[5];
  v43 = type metadata accessor for FMIPSeparationLocation(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v42, 1, 1, v43);
  v44 = (char *)v40 + v41[6];
  v45 = type metadata accessor for UUID(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v44, 1, 1, v45);
  v46 = (char *)v40 + v41[7];
  v47 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 1, 1, v47);
  *(_QWORD *)((char *)v40 + v41[8]) = 0;
  *(_QWORD *)((char *)v40 + v41[9]) = 0;
  v48 = (char *)v40 + v41[10];
  v49 = type metadata accessor for FMIPUTAlertEvent(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v48, 1, 1, v49);
  v50 = (void *)objc_opt_self(NSNotificationCenter);
  v51 = objc_msgSend(v50, "defaultCenter");
  objc_msgSend(v51, "addObserver:selector:name:object:", v1, "applicationDidEnterBackground", UIApplicationDidEnterBackgroundNotification, 0);

  v52 = objc_msgSend(v50, "defaultCenter");
  objc_msgSend(v52, "addObserver:selector:name:object:", v1, "applicationWillEnterForeground", UIApplicationWillEnterForegroundNotification, 0);

  return v1;
}

uint64_t sub_10001DC04(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata(a1, a3);
  return result;
}

void sub_10001DC38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  uint64_t v26;
  uint64_t Strong;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t v31[3];

  v2 = v1;
  v4 = sub_100053F2C((uint64_t *)&unk_1005D3350);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)v29 - v8;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v10 = type metadata accessor for Logger(0);
  sub_100056D88(v10, (uint64_t)qword_1005F5748);
  v11 = sub_100007464(a1, (uint64_t)v9, (uint64_t *)&unk_1005D3350);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v31[0] = v15;
    *(_DWORD *)v14 = 136315138;
    v29[1] = v14 + 4;
    sub_100007464((uint64_t)v9, (uint64_t)v7, (uint64_t *)&unk_1005D3350);
    v16 = String.init<A>(describing:)(v7, v4);
    v18 = v17;
    v30 = sub_100056DA0(v16, v17, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v30, v31);
    swift_bridgeObjectRelease(v18);
    sub_1000051EC((uint64_t)v9, (uint64_t *)&unk_1005D3350);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "FMPeopleProvider: my location changed: %s", v14, 0xCu);
    swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v15, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }
  else
  {
    sub_1000051EC((uint64_t)v9, (uint64_t *)&unk_1005D3350);
  }

  swift_beginAccess(v2 + 16, v31, 0, 0);
  v19 = *(_QWORD *)(v2 + 16);
  if (!((unint64_t)v19 >> 62))
  {
    v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(v2 + 16));
    if (v20)
      goto LABEL_8;
LABEL_21:
    swift_bridgeObjectRelease(v19);
    return;
  }
  if (v19 < 0)
    v28 = *(_QWORD *)(v2 + 16);
  else
    v28 = v19 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(v2 + 16));
  v20 = _CocoaArrayWrapper.endIndex.getter(v28);
  if (!v20)
    goto LABEL_21;
LABEL_8:
  if (v20 >= 1)
  {
    for (i = 0; i != v20; ++i)
    {
      if ((v19 & 0xC000000000000001) != 0)
      {
        v25 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v19);
      }
      else
      {
        v25 = *(_QWORD *)(v19 + 8 * i + 32);
        swift_retain(v25);
      }
      v26 = v25 + OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_subscriber;
      Strong = swift_unknownObjectWeakLoadStrong(v25 + OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_subscriber);
      if (Strong)
      {
        v22 = Strong;
        v23 = *(_QWORD *)(v26 + 8);
        ObjectType = swift_getObjectType(Strong);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 48))(v2, a1, ObjectType, v23);
        swift_release(v25);
        swift_unknownObjectRelease(v22);
      }
      else
      {
        swift_release(v25);
      }
    }
    goto LABEL_21;
  }
  __break(1u);
}

uint64_t sub_10001DF68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD aBlock[5];
  uint64_t v38;

  v2 = sub_100053F2C(&qword_1005D38C0);
  __chkstk_darwin(v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FMFFriend(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100053F2C(&qword_1005D3380);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v33 - v13;
  sub_100007464(a1, (uint64_t)&v33 - v13, &qword_1005D3380);
  dispatch thunk of FMFManager.selectedFriend.setter(v14);
  sub_100007464(a1, (uint64_t)v12, &qword_1005D3380);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v12, 1, v5) == 1)
    return sub_1000051EC((uint64_t)v12, &qword_1005D3380);
  v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v8, v12, v5);
  v17 = FMFFriend.name.getter(v16);
  v35 = v18;
  v36 = v17;
  v34 = FMFFriend.identifier.getter(v17);
  v20 = v19;
  v21 = FMFFriend.contactHandles.getter(v34);
  v22 = sub_1000587F0(v21);
  v23 = swift_bridgeObjectRelease(v21);
  FMFFriend.contact.getter(v23);
  v24 = type metadata accessor for FMFContact(0);
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v4, 1, v24) == 1)
  {
    sub_1000051EC((uint64_t)v4, &qword_1005D38C0);
    v26 = 0;
    v27 = 0;
  }
  else
  {
    v26 = FMFContact.storeUUID.getter();
    v27 = v28;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v4, v24);
  }
  type metadata accessor for LocateIntent();
  LocateIntent.__allocating_init(friendName:friendId:handles:contactId:)(v36, v35, v34, v20, (uint64_t)v22, v26, v27);
  v30 = v29;
  v31 = objc_msgSend(objc_allocWithZone((Class)INInteraction), "initWithIntent:response:", v29, 0);
  aBlock[4] = sub_100183EC8;
  v38 = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000063D8;
  aBlock[3] = &unk_1005423D0;
  v32 = _Block_copy(aBlock);
  objc_msgSend(v31, "donateInteractionWithCompletion:", v32, swift_release(v38).n128_f64[0]);
  _Block_release(v32);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_10001E25C(uint64_t a1)
{
  void *v1;
  uint8_t *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  unint64_t v13;
  uint64_t v14;
  id i;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  id v25;
  void *v26;
  _QWORD *v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  id v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v3 = v1;
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v9 = type metadata accessor for Logger(0);
  sub_100056D88(v9, (uint64_t)qword_1005F5748);
  v10 = swift_bridgeObjectRetain_n(a1, 2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  v13 = (unint64_t)a1 >> 62;
  if (!os_log_type_enabled(v11, v12))
  {

    swift_bridgeObjectRelease_n(a1, 2);
    goto LABEL_17;
  }
  v43 = v3;
  v44 = v6;
  v2 = (uint8_t *)swift_slowAlloc(12, -1);
  v6 = swift_slowAlloc(32, -1);
  v48 = v6;
  *(_DWORD *)v2 = 136315138;
  if (!v13)
  {
    v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    v45 = v5;
    if (v14)
      goto LABEL_6;
LABEL_15:
    swift_bridgeObjectRelease(a1);
    v19 = 0;
    goto LABEL_16;
  }
  if (a1 < 0)
    v20 = a1;
  else
    v20 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v14 = _CocoaArrayWrapper.endIndex.getter(v20);
  v45 = v5;
  if (!v14)
    goto LABEL_15;
LABEL_6:
  if ((a1 & 0xC000000000000001) != 0)
    goto LABEL_30;
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    for (i = *(id *)(a1 + 32); ; i = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1))
    {
      v16 = i;
      v17 = objc_msgSend(i, "debugDescription", swift_bridgeObjectRelease(a1).n128_f64[0]);

      v14 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
      v19 = v18;

LABEL_16:
      v46 = v14;
      v47 = v19;
      v21 = sub_100053F2C(&qword_1005D2BD0);
      v22 = String.init<A>(describing:)(&v46, v21);
      v24 = v23;
      v46 = sub_100056DA0(v22, v23, &v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v46, &v47);
      swift_bridgeObjectRelease_n(a1, 2);
      swift_bridgeObjectRelease(v24);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "FMLocationProvider: location manager didUpdateLocations: %s", v2, 0xCu);
      swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v6, -1, -1);
      swift_slowDealloc(v2, -1, -1);

      v6 = v44;
      v5 = v45;
      v3 = v43;
LABEL_17:
      sub_10000B71C();
      if (v13)
      {
        if (a1 < 0)
          v42 = a1;
        else
          v42 = a1 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(a1);
        v11 = _CocoaArrayWrapper.endIndex.getter(v42);
        if (!v11)
        {
LABEL_27:
          swift_bridgeObjectRelease(a1);
          return;
        }
      }
      else
      {
        v11 = *(NSObject **)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(a1);
        if (!v11)
          goto LABEL_27;
      }
      if ((a1 & 0xC000000000000001) != 0)
        break;
      if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v25 = *(id *)(a1 + 32);
LABEL_22:
        v26 = v25;
        swift_bridgeObjectRelease(a1);
        v27 = (_QWORD *)swift_allocObject(&unk_100568048, 40, 7);
        v27[2] = v26;
        v27[3] = v3;
        v27[4] = a1;
        v28 = v26;
        swift_bridgeObjectRetain(a1);
        v29 = v28;
        v30 = UUID.init()(v3);
        v31 = UUID.uuidString.getter(v30);
        v33 = v32;
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        v34 = type metadata accessor for FMLocationShiftingRequest(0);
        swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
        v35 = v29;
        v36 = FMLocationShiftingRequest.init(identifier:location:)(v31, v33, v35);
        v37 = sub_100053F2C(&qword_1005D2F10);
        v38 = swift_allocObject(v37, 40, 7);
        *(_OWORD *)(v38 + 16) = xmmword_100481B00;
        *(_QWORD *)(v38 + 32) = v36;
        v46 = v38;
        specialized Array._endMutation()(v38);
        v39 = v46;
        v40 = (_QWORD *)swift_allocObject(&unk_100568070, 40, 7);
        v40[2] = v35;
        v40[3] = sub_10005EDDC;
        v40[4] = v27;
        v41 = v35;
        swift_retain(v36);
        swift_retain(v27);
        dispatch thunk of FMLocationShifter.shift(requests:completion:)(v39, sub_10005EDC4, v40);
        swift_release(v27);

        swift_release(v36);
        swift_bridgeObjectRelease(v39);
        swift_release(v40);
        return;
      }
      __break(1u);
LABEL_30:
      ;
    }
    v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
    goto LABEL_22;
  }
  __break(1u);
}

char *sub_10001E714(uint64_t a1)
{
  _BYTE *v1;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  char *v24;
  id v25;
  char *v26;
  char *v27;
  void *v28;
  uint64_t v29;
  id v30;
  id v31;
  NSString v32;
  double v33;
  double v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  double *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  double v45;
  objc_super v46;

  v1[OBJC_IVAR____TtC6FindMy19FMMapViewController_isAnimationEnabled] = 0;
  v1[OBJC_IVAR____TtC6FindMy19FMMapViewController_isAutomaticCenteringEnabled] = 1;
  v3 = &v1[OBJC_IVAR____TtC6FindMy19FMMapViewController_lastCenterAnimationDisableDate];
  v4 = type metadata accessor for Date(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v1[OBJC_IVAR____TtC6FindMy19FMMapViewController_isUserActionEnabled] = 1;
  v1[OBJC_IVAR____TtC6FindMy19FMMapViewController_isExiting3DMode] = 0;
  v1[OBJC_IVAR____TtC6FindMy19FMMapViewController_isPOISelected] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy19FMMapViewController_selectionSubscription] = 0;
  v5 = &v1[OBJC_IVAR____TtC6FindMy19FMMapViewController_previousSelectedSection];
  v6 = type metadata accessor for FMSelectedSection(0);
  swift_storeEnumTagMultiPayload(v5, v6, 14);
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy19FMMapViewController_mapOptionsView] = 0;
  v1[OBJC_IVAR____TtC6FindMy19FMMapViewController_lastMode] = 0;
  v1[OBJC_IVAR____TtC6FindMy19FMMapViewController_cameraDidReachLiveLocation] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy19FMMapViewController_userTrackingAnnotationView] = 0;
  v7 = &v1[OBJC_IVAR____TtC6FindMy19FMMapViewController_overrideLiveAnimationDuration];
  *(_QWORD *)v7 = 0;
  v7[8] = 1;
  v8 = qword_1005D1DE8;
  v9 = v1;
  if (v8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v10 = type metadata accessor for Logger(0);
  v11 = sub_100056D88(v10, (uint64_t)qword_1005F5748);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "FMMapViewController: initialized", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  v15 = objc_msgSend(objc_allocWithZone((Class)MKMapView), "init");
  v16 = objc_msgSend((id)objc_opt_self(MKCompassButton), "compassButtonWithMapView:", v15);
  *(_QWORD *)&v9[OBJC_IVAR____TtC6FindMy19FMMapViewController_compassButton] = v16;
  v17 = objc_allocWithZone((Class)type metadata accessor for FMStatusBar());
  v18 = swift_retain(a1);
  *(_QWORD *)&v9[OBJC_IVAR____TtC6FindMy19FMMapViewController_statusBar] = sub_100020080(v18);
  v19 = type metadata accessor for FMMapViewDataSource();
  swift_allocObject(v19, 104, 7);
  swift_retain(a1);
  v20 = v15;
  *(_QWORD *)&v9[OBJC_IVAR____TtC6FindMy19FMMapViewController_dataSource] = sub_10001D1A4(a1, v20);
  *(_QWORD *)&v9[OBJC_IVAR____TtC6FindMy19FMMapViewController_mapView] = v20;
  v21 = v20;

  *(_QWORD *)&v9[OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator] = a1;
  v46.receiver = v9;
  v46.super_class = (Class)type metadata accessor for FMMediatedViewController();
  swift_retain(a1);
  v22 = objc_msgSendSuper2(&v46, "initWithNibName:bundle:", 0, 0);
  v23 = swift_allocObject(&unk_10055CFC8, 24, 7);
  swift_unknownObjectWeakInit(v23 + 16, v22);
  v24 = (char *)objc_allocWithZone((Class)type metadata accessor for FMMapOptionsView());
  v25 = v22;
  swift_retain(a1);
  v26 = (char *)v25;
  v27 = sub_100022080(a1, v26, (uint64_t)sub_1003630A0, v23, v24);
  v28 = *(void **)&v26[OBJC_IVAR____TtC6FindMy19FMMapViewController_mapOptionsView];
  *(_QWORD *)&v26[OBJC_IVAR____TtC6FindMy19FMMapViewController_mapOptionsView] = v27;

  v29 = *(_QWORD *)&v26[OBJC_IVAR____TtC6FindMy19FMMapViewController_dataSource];
  *(_QWORD *)(v29 + 32) = &off_10055CE10;
  swift_unknownObjectWeakAssign(v29 + 24, v26);
  v30 = objc_msgSend((id)objc_opt_self(FMSystemInfo), "sharedInstance");
  LODWORD(v23) = objc_msgSend(v30, "isInternalBuild");

  if (!(_DWORD)v23)
    goto LABEL_11;
  v31 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
  v32 = String._bridgeToObjectiveC()();
  objc_msgSend(v31, "doubleForKey:", v32);
  v34 = v33;

  v36 = Logger.logObject.getter(v35);
  v37 = static os_log_type_t.default.getter(v36);
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v38 = 134217984;
    v45 = v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46);
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "liveAnimationDuration from defaults %f", v38, 0xCu);
    swift_slowDealloc(v38, -1, -1);
  }

  if (v34 > 0.0)
  {
    v40 = (double *)&v26[OBJC_IVAR____TtC6FindMy19FMMapViewController_overrideLiveAnimationDuration];
    *v40 = v34;
    *((_BYTE *)v40 + 8) = 0;
    v41 = Logger.logObject.getter(v39);
    v42 = static os_log_type_t.default.getter(v41);
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v43 = 134217984;
      v45 = v34;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, &v46);
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "FMMapViewController: overriding liveAnimationDuration %f", v43, 0xCu);
      swift_slowDealloc(v43, -1, -1);

      swift_release(a1);
    }
    else
    {

      swift_release(a1);
    }
  }
  else
  {
LABEL_11:

    swift_release(a1);
  }
  return v26;
}

char *sub_10001ECCC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  unsigned int v26;
  id v27;
  unsigned int v28;
  char *result;
  void *v30;
  uint64_t v31;
  uint64_t inited;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  id v36;
  Class isa;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  objc_class *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  objc_super v57;
  char v58[128];
  _QWORD v59[2];

  v54 = sub_100053F2C(&qword_1005E19A8);
  v52 = *(_QWORD *)(v54 - 8);
  __chkstk_darwin(v54);
  v53 = (char *)&v51 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v55 = *(_QWORD *)(v2 - 8);
  v56 = v2;
  __chkstk_darwin(v2);
  v4 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v5);
  v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions] = _swiftEmptyArrayStorage;
  v11 = OBJC_IVAR____TtC6FindMy19FMConditionProvider_accountStore;
  v12 = objc_allocWithZone((Class)ACAccountStore);
  v13 = v0;
  *(_QWORD *)&v0[v11] = objc_msgSend(v12, "init");
  v14 = OBJC_IVAR____TtC6FindMy19FMConditionProvider_accountManager;
  *(_QWORD *)&v13[v14] = objc_msgSend((id)objc_opt_self(AKAccountManager), "sharedInstance");
  v15 = OBJC_IVAR____TtC6FindMy19FMConditionProvider_networkMonitor;
  *(_QWORD *)&v13[v15] = objc_msgSend(objc_allocWithZone((Class)FMNetworkMonitor), "init");
  v16 = OBJC_IVAR____TtC6FindMy19FMConditionProvider_secureLocationsManager;
  *(_QWORD *)&v13[v16] = objc_msgSend(objc_allocWithZone((Class)SPSecureLocationsManager), "init");
  v17 = &v13[OBJC_IVAR____TtC6FindMy19FMConditionProvider_fmfAccountIdentifier];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;
  v18 = &v13[OBJC_IVAR____TtC6FindMy19FMConditionProvider_fmipAccountIdentifier];
  *(_QWORD *)v18 = 0;
  *((_QWORD *)v18 + 1) = 0;
  v13[OBJC_IVAR____TtC6FindMy19FMConditionProvider_isAccountCheckPending] = 0;
  v13[OBJC_IVAR____TtC6FindMy19FMConditionProvider_wasNoNetworkAlertShown] = 0;
  v13[OBJC_IVAR____TtC6FindMy19FMConditionProvider_preventOnboarding] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC6FindMy19FMConditionProvider_pushInfoBadgeNumber] = 0;
  v19 = OBJC_IVAR____TtC6FindMy19FMConditionProvider_radioPreferencesQueue;
  sub_1000555A8();
  static DispatchQoS.default.getter();
  v59[0] = _swiftEmptyArrayStorage;
  v20 = sub_100008000((unint64_t *)&unk_1005D3970, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v21 = sub_100053F2C((uint64_t *)&unk_1005D20F0);
  v22 = sub_10003F774((unint64_t *)&unk_1005D3980, (uint64_t *)&unk_1005D20F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(v59, v21, v22, v5, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v55 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v56);
  *(_QWORD *)&v13[v19] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000035, 0x80000001004C2900, v10, v7, v4, 0);
  v23 = OBJC_IVAR____TtC6FindMy19FMConditionProvider_notificationSettingsObserver;
  *(_QWORD *)&v13[v23] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for NotificationSettingsObserver(0)), "init");
  v13[OBJC_IVAR____TtC6FindMy19FMConditionProvider_isUnderAgeUser] = 0;
  v13[OBJC_IVAR____TtC6FindMy19FMConditionProvider_isAccountManaged] = 0;
  v13[OBJC_IVAR____TtC6FindMy19FMConditionProvider_accountsAreInitialized] = 0;
  v13[OBJC_IVAR____TtC6FindMy19FMConditionProvider_accountsAreSignedIn] = 0;
  v13[OBJC_IVAR____TtC6FindMy19FMConditionProvider_isNetworkUp] = 1;
  *(_QWORD *)&v13[OBJC_IVAR____TtC6FindMy19FMConditionProvider_stewieServiceState] = 0;
  v13[OBJC_IVAR____TtC6FindMy19FMConditionProvider_areServerAlertsPostponed] = 0;
  v13[OBJC_IVAR____TtC6FindMy19FMConditionProvider_areFriendsInitialized] = 0;
  v13[OBJC_IVAR____TtC6FindMy19FMConditionProvider_didFriendsFailToInitialize] = 0;
  v13[OBJC_IVAR____TtC6FindMy19FMConditionProvider_areDevicesInitialized] = 0;
  v13[OBJC_IVAR____TtC6FindMy19FMConditionProvider_didDevicesFailToInitialize] = 0;
  v13[OBJC_IVAR____TtC6FindMy19FMConditionProvider_wasAccountCheckedOnce] = 0;
  v24 = objc_msgSend((id)objc_opt_self(MCProfileConnection), "sharedConnection");
  if (v24)
  {
    v25 = v24;
    v26 = objc_msgSend(v24, "effectiveBoolValueForSetting:", MCFeatureFindMyFriendsAllowed);
    v27 = MCFeatureFindMyDeviceAllowed;
    v28 = objc_msgSend(v25, "effectiveBoolValueForSetting:", v27);

    v13[OBJC_IVAR____TtC6FindMy19FMConditionProvider_FMFRestricted] = v26 == 2;
    v13[OBJC_IVAR____TtC6FindMy19FMConditionProvider_FMIPRestricted] = v28 == 2;
  }
  else
  {
    v13[OBJC_IVAR____TtC6FindMy19FMConditionProvider_FMFRestricted] = 0;
    v13[OBJC_IVAR____TtC6FindMy19FMConditionProvider_FMIPRestricted] = 0;
  }
  result = (char *)objc_msgSend(objc_allocWithZone((Class)RadiosPreferences), "initWithQueue:", *(_QWORD *)&v13[v19]);
  if (result)
  {
    *(_QWORD *)&v13[OBJC_IVAR____TtC6FindMy19FMConditionProvider_radioPreferences] = result;
    v30 = (void *)static OS_dispatch_queue.main.getter(result);
    v31 = sub_100053F2C(&qword_1005D4F70);
    inited = swift_initStackObject(v31, v58);
    *(_OWORD *)(inited + 16) = xmmword_100481730;
    *(_QWORD *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)(CBCentralManagerOptionShowPowerAlertKey);
    *(_QWORD *)(inited + 40) = v33;
    *(_QWORD *)(inited + 72) = &type metadata for Bool;
    *(_BYTE *)(inited + 48) = 0;
    *(_QWORD *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)(CBManagerNeedsRestrictedStateOperation);
    *(_QWORD *)(inited + 88) = v34;
    *(_QWORD *)(inited + 120) = &type metadata for Bool;
    *(_BYTE *)(inited + 96) = 1;
    v35 = sub_10004C214(inited);
    v36 = objc_allocWithZone((Class)CBCentralManager);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    v38 = objc_msgSend(v36, "initWithDelegate:queue:options:", 0, v30, isa, swift_bridgeObjectRelease(v35).n128_f64[0]);

    *(_QWORD *)&v13[OBJC_IVAR____TtC6FindMy19FMConditionProvider_coreBluetoothMgr] = v38;
    LOBYTE(v59[0]) = 0;
    v39 = sub_100053F2C(&qword_1005E19B0);
    swift_allocObject(v39, *(unsigned int *)(v39 + 48), *(unsigned __int16 *)(v39 + 52));
    v40 = CurrentValueSubject.init(_:)(v59);
    LOBYTE(v59[0]) = 0;
    swift_allocObject(v39, *(unsigned int *)(v39 + 48), *(unsigned __int16 *)(v39 + 52));
    v41 = CurrentValueSubject.init(_:)(v59);
    *(_QWORD *)&v13[OBJC_IVAR____TtC6FindMy19FMConditionProvider_areFriendsInitializedSubject] = v40;
    *(_QWORD *)&v13[OBJC_IVAR____TtC6FindMy19FMConditionProvider_areDevicesInitializedSubject] = v41;
    v59[0] = v40;
    v42 = sub_10003F774(&qword_1005E19B8, &qword_1005E19B0, (uint64_t)&protocol conformance descriptor for CurrentValueSubject<A, B>);
    swift_retain(v40);
    swift_retain(v41);
    v43 = v53;
    Publisher<>.removeDuplicates()(v39, v42, &protocol witness table for Bool);
    v44 = sub_10003F774((unint64_t *)&unk_1005E19C0, &qword_1005E19A8, (uint64_t)&protocol conformance descriptor for Publishers.RemoveDuplicates<A>);
    v45 = v54;
    v46 = Publisher.eraseToAnyPublisher()(v54, v44);
    v47 = *(void (**)(char *, uint64_t))(v52 + 8);
    v47(v43, v45);
    *(_QWORD *)&v13[OBJC_IVAR____TtC6FindMy19FMConditionProvider_areFriendsInitializedPublisher] = v46;
    v59[0] = v41;
    Publisher<>.removeDuplicates()(v39, v42, &protocol witness table for Bool);
    v48 = Publisher.eraseToAnyPublisher()(v45, v44);
    v47(v43, v45);
    *(_QWORD *)&v13[OBJC_IVAR____TtC6FindMy19FMConditionProvider_areDevicesInitializedPublisher] = v48;

    v49 = (objc_class *)type metadata accessor for FMConditionProvider();
    v57.receiver = v13;
    v57.super_class = v49;
    v50 = (char *)objc_msgSendSuper2(&v57, "init");
    objc_msgSend(*(id *)&v50[OBJC_IVAR____TtC6FindMy19FMConditionProvider_coreBluetoothMgr], "setDelegate:", v50);
    swift_release(v40);
    swift_release(v41);
    return v50;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10001F440()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  char v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  unsigned __int8 v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  _QWORD *v37;
  uint64_t v38;
  NSObject *v39;
  uint64_t v40;
  uint8_t *v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint8_t *v45;
  _QWORD *v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  id v57;
  void *v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  void *v62;
  id v63;

  v1 = v0;
  type metadata accessor for FMDemoManager(0);
  if ((static FMDemoManager.devicesDemoEnabled.getter() & 1) != 0)
  {
    v2 = 1;
  }
  else
  {
    type metadata accessor for FMDemoManager(0);
    v2 = static FMDemoManager.peopleDemoEnabled.getter();
  }
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_100056D88(v3, (uint64_t)qword_1005F5748);
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "FMConditionProvider: checking account state", v7, 2u);
    swift_slowDealloc(v7, -1, -1);
  }

  v8 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_accountStore);
  v9 = objc_msgSend(v8, "aa_primaryAppleAccount");
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend((id)objc_opt_self(AKAccountManager), "sharedInstance");
    v12 = objc_msgSend(v11, "primaryAuthKitAccount");

    if (v12)
    {
      v14 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_accountManager), "userUnderAgeForAccount:", v12);
      v15 = (char)v14;
      if ((_DWORD)v14)
      {
        v16 = Logger.logObject.getter(v14);
        v17 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v16, v17))
        {
          v18 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v18 = 0;
          _os_log_impl((void *)&_mh_execute_header, v16, v17, "FMConditionProvider: Account is isUnderAge (U13), hiding necessary features", v18, 2u);
          swift_slowDealloc(v18, -1, -1);
        }

      }
      *(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_isUnderAgeUser) = v15;
      v19 = objc_msgSend(v10, "aa_fmfAccount");
      v20 = objc_msgSend(v8, "credentialForAccount:", v19);
      v21 = v20;
      if (v20
        && (v20 = objc_msgSend(v20, "credentialItemForKey:", ACFindMyFriendsAppTokenKey)) != 0)
      {

        v63 = objc_msgSend(v10, "aa_fmipAccount");
        v22 = objc_msgSend(v8, "credentialForAccount:");
        v23 = v22;
        if (v22)
        {
          v22 = objc_msgSend(v22, "credentialItemForKey:", ACFindMyiPhoneAppTokenKey);
          if (v22)
          {

            v24 = objc_msgSend(v10, "aa_isManagedAppleID");
            *(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_isAccountManaged) = v24;
            *(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_accountsAreSignedIn) = 1;
            sub_100023A38((uint64_t)&unk_10055E318, (uint64_t)sub_10005EBD8, (uint64_t)&unk_10055E330);
            if (v19)
            {
              v25 = objc_msgSend(v19, "identifier");
              if (v25)
              {
                v26 = v25;
                v27 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
                v29 = v28;

              }
              else
              {
                v27 = 0;
                v29 = 0;
              }
              v55 = (uint64_t *)(v1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_fmfAccountIdentifier);
              v56 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_fmfAccountIdentifier + 8);
              *v55 = v27;
              v55[1] = v29;
              swift_bridgeObjectRelease(v56);
              v57 = objc_msgSend(v19, "identifier");
              if (v57)
              {
                v58 = v57;
                v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v57);
                v54 = v59;

              }
              else
              {
                v53 = 0;
                v54 = 0;
              }
            }
            else
            {
              v51 = (_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_fmfAccountIdentifier);
              v52 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_fmfAccountIdentifier + 8);
              *v51 = 0;
              v51[1] = 0;
              swift_bridgeObjectRelease(v52);
              v53 = 0;
              v54 = 0;
            }
            v60 = (uint64_t *)(v1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_fmipAccountIdentifier);
            v61 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_fmipAccountIdentifier + 8);
            *v60 = v53;
            v60[1] = v54;

            v47 = v61;
            goto LABEL_34;
          }
        }
        v42 = Logger.logObject.getter(v22);
        v43 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v42, v43))
        {
          v62 = v23;
          v44 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v44 = 0;
          _os_log_impl((void *)&_mh_execute_header, v42, v43, "FMConditionProvider: Missing find my friend credentials", v44, 2u);
          v45 = v44;
          v23 = v62;
          swift_slowDealloc(v45, -1, -1);
        }

        *(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_accountsAreSignedIn) = v2 & 1;
        sub_100023A38((uint64_t)&unk_10055E318, (uint64_t)sub_10005EBD8, (uint64_t)&unk_10055E330);
        v46 = (_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_fmipAccountIdentifier);
        v38 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_fmipAccountIdentifier + 8);
        *v46 = 0;
        v46[1] = 0;

      }
      else
      {
        v34 = Logger.logObject.getter(v20);
        v35 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v34, v35))
        {
          v36 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v36 = 0;
          _os_log_impl((void *)&_mh_execute_header, v34, v35, "FMConditionProvider: Missing find my friend credentials", v36, 2u);
          swift_slowDealloc(v36, -1, -1);
        }

        *(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_accountsAreSignedIn) = v2 & 1;
        sub_100023A38((uint64_t)&unk_10055E318, (uint64_t)sub_10005EBD8, (uint64_t)&unk_10055E330);
        v37 = (_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_fmfAccountIdentifier);
        v38 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_fmfAccountIdentifier + 8);
        *v37 = 0;
        v37[1] = 0;

      }
      v47 = v38;
LABEL_34:
      v33 = swift_bridgeObjectRelease(v47);
      goto LABEL_35;
    }
    v39 = Logger.logObject.getter(v13);
    v40 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v39, (os_log_type_t)v40))
    {
      v41 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v41 = 0;
      _os_log_impl((void *)&_mh_execute_header, v39, (os_log_type_t)v40, "FMConditionProvider: error retrieving primary authkit account", v41, 2u);
      swift_slowDealloc(v41, -1, -1);
    }

    *(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_accountsAreSignedIn) = v2 & 1;
    sub_100023A38((uint64_t)&unk_10055E318, (uint64_t)sub_10005EBD8, (uint64_t)&unk_10055E330);

  }
  else
  {
    v30 = Logger.logObject.getter(0);
    v31 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "FMConditionProvider: error retrieving primary account", v32, 2u);
      swift_slowDealloc(v32, -1, -1);
    }

    *(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_accountsAreSignedIn) = v2 & 1;
    v33 = sub_100023A38((uint64_t)&unk_10055E318, (uint64_t)sub_10005EBD8, (uint64_t)&unk_10055E330);
  }
LABEL_35:
  v48 = Logger.logObject.getter(v33);
  v49 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v48, v49))
  {
    v50 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v50 = 0;
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "FMConditionProvider: finished checking account state", v50, 2u);
    swift_slowDealloc(v50, -1, -1);
  }

  *(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_accountsAreInitialized) = 1;
}

void sub_10001FBF8(_QWORD *a1, const char *a2)
{
  void *v2;
  uint64_t v5;
  unsigned __int8 *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  int v10;
  uint64_t v11;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v5 = type metadata accessor for Logger(0);
  sub_100056D88(v5, (uint64_t)qword_1005F5748);
  v6 = v2;
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v9 = 67109120;
    v10 = v6[*a1];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v10, &v11);

    _os_log_impl((void *)&_mh_execute_header, v7, v8, a2, v9, 8u);
    swift_slowDealloc(v9, -1, -1);

  }
  else
  {

  }
  sub_10001FD34();
}

void sub_10001FD34()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unsigned __int8 *v8;
  NSObject *v9;
  os_log_type_t v10;
  __objc2_meth_list **p_opt_inst_meths;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  unsigned __int8 *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[5];
  uint64_t v28;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v26 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v24 = *(_QWORD *)(v4 - 8);
  v25 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v7 = type metadata accessor for Logger(0);
  sub_100056D88(v7, (uint64_t)qword_1005F5748);
  v8 = v0;
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter(v9);
  p_opt_inst_meths = &OBJC_PROTOCOL___MKUserTrackingView.opt_inst_meths;
  if (os_log_type_enabled(v9, v10))
  {
    v12 = swift_slowAlloc(14, -1);
    *(_DWORD *)v12 = 67109376;
    LODWORD(aBlock[0]) = v8[OBJC_IVAR____TtC6FindMy19FMConditionProvider_didFriendsFailToInitialize];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(aBlock, (char *)aBlock + 4);
    *(_WORD *)(v12 + 8) = 1024;
    LODWORD(aBlock[0]) = v8[OBJC_IVAR____TtC6FindMy19FMConditionProvider_didDevicesFailToInitialize];
    p_opt_inst_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___MKUserTrackingView + 40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(aBlock, (char *)aBlock + 4);

    _os_log_impl((void *)&_mh_execute_header, v9, v10, "FMConditionProvider: updateAppInitializationFailureStatus friend: %{BOOL}d, device: %{BOOL}d", (uint8_t *)v12, 0xEu);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {

  }
  if ((*((_BYTE *)&p_opt_inst_meths[243]->entrysize + (_QWORD)v8) & 1) != 0
    || v8[OBJC_IVAR____TtC6FindMy19FMConditionProvider_didDevicesFailToInitialize] == 1)
  {
    v13 = sub_1000555A8();
    v14 = (void *)static OS_dispatch_queue.main.getter(v13);
    v15 = swift_allocObject(&unk_10055E048, 24, 7);
    *(_QWORD *)(v15 + 16) = v8;
    aBlock[4] = sub_10037B268;
    v28 = v15;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100037DF8;
    aBlock[3] = &unk_10055E060;
    v16 = _Block_copy(aBlock);
    v17 = v28;
    v18 = v8;
    swift_release(v17);
    static DispatchQoS.unspecified.getter(v19);
    aBlock[0] = _swiftEmptyArrayStorage;
    v20 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v21 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
    v22 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v21, v22, v1, v20);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v6, v3, v16);
    _Block_release(v16);

    (*(void (**)(char *, uint64_t))(v26 + 8))(v3, v1);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v25);
  }
}

char *sub_100020080(uint64_t a1)
{
  void *v1;
  void *v3;
  void *v4;
  _BYTE *v5;
  id v6;
  double v7;
  double v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  unsigned __int8 *v38;
  int v39;
  char v40;
  _BYTE v42[24];
  objc_super v43;

  v3 = (void *)objc_opt_self(UIBlurEffect);
  v4 = (void *)objc_opt_self(UIScreen);
  v5 = v1;
  v6 = objc_msgSend(v4, "mainScreen");
  objc_msgSend(v6, "scale");
  v8 = v7;

  v9 = objc_msgSend(v3, "_effectWithBlurRadius:scale:", 10.0, v8);
  v10 = OBJC_IVAR____TtC6FindMy11FMStatusBar_blurView;
  v11 = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "initWithEffect:", v9);

  *(_QWORD *)&v5[v10] = v11;
  v12 = OBJC_IVAR____TtC6FindMy11FMStatusBar_pillView;
  *(_QWORD *)&v5[v12] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v13 = OBJC_IVAR____TtC6FindMy11FMStatusBar_textLabel;
  *(_QWORD *)&v5[v13] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v14 = OBJC_IVAR____TtC6FindMy11FMStatusBar_chevron;
  *(_QWORD *)&v5[v14] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy11FMStatusBar_pillHeightConstraint] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy11FMStatusBar_pillBottomConstraint] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy11FMStatusBar_textLabelTopConstraint] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy11FMStatusBar_textLabelBottomConstraint] = 0;
  v5[OBJC_IVAR____TtC6FindMy11FMStatusBar_initialState] = 1;
  v5[OBJC_IVAR____TtC6FindMy11FMStatusBar_state] = 0;
  v5[OBJC_IVAR____TtC6FindMy11FMStatusBar_userDidInteractWithMap] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy11FMStatusBar_mediator] = a1;
  swift_retain(a1);

  v43.receiver = v5;
  v43.super_class = (Class)type metadata accessor for FMStatusBar();
  v15 = objc_msgSendSuper2(&v43, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v16 = *(_QWORD *)(a1 + 56);
  v17 = type metadata accessor for FMSelectionSubscription(0);
  v18 = swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  v19 = v18 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
  *(_QWORD *)(v19 + 8) = 0;
  swift_unknownObjectWeakInit(v19, 0);
  v20 = v15;
  v21 = swift_retain(v16);
  UUID.init()(v21);
  *(_QWORD *)(v18 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber + 8) = &off_100557380;
  swift_unknownObjectWeakAssign();
  swift_beginAccess(v16 + 16, v42, 33, 0);
  v22 = swift_retain(v18);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v22);
  v24 = *(_QWORD *)((*(_QWORD *)(v16 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v23 = *(_QWORD *)((*(_QWORD *)(v16 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v24 >= v23 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v23 > 1, v24 + 1, 1);
  v25 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v18);
  specialized Array._endMutation()(v25);
  swift_endAccess(v42);
  swift_release(v18);
  swift_release(v16);

  v26 = *(void **)(a1 + 40);
  v27 = type metadata accessor for FMLocationSubscription(0);
  v28 = swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
  v29 = v28 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber;
  *(_QWORD *)(v29 + 8) = 0;
  swift_unknownObjectWeakInit(v29, 0);
  v30 = (char *)v20;
  v31 = v26;
  UUID.init()(v31);
  *(_QWORD *)(v28 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber + 8) = &off_100557350;
  swift_unknownObjectWeakAssign();
  v32 = &v31[OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions];
  swift_beginAccess(&v31[OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions], v42, 33, 0);
  v33 = swift_retain(v28);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v33);
  v35 = *(_QWORD *)((*(_QWORD *)v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v34 = *(_QWORD *)((*(_QWORD *)v32 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v35 >= v34 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1);
  v36 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v28);
  specialized Array._endMutation()(v36);
  swift_endAccess(v42);
  swift_release(v28);

  sub_100009768();
  sub_100029E48();
  v37 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v30, "handleTapWithSender:");
  objc_msgSend(*(id *)&v30[OBJC_IVAR____TtC6FindMy11FMStatusBar_pillView], "addGestureRecognizer:", v37);

  v38 = (unsigned __int8 *)*(id *)(a1 + 40);
  swift_release(a1);
  v39 = v38[OBJC_IVAR____TtC6FindMy18FMLocationProvider_limitedPrecision];

  if (v39)
    v40 = 2;
  else
    v40 = 0;
  v30[OBJC_IVAR____TtC6FindMy11FMStatusBar_state] = v40;
  return v30;
}

void sub_10002050C(uint64_t a1)
{

}

void sub_1000205E4()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  uint64_t My;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void (*v12)(_QWORD *, uint64_t, uint64_t);
  char v13;
  char **v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  char v18;
  unsigned __int8 *v19;
  int v20;
  int v21;
  int v22;
  int v23;
  id v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t ObjCClassFromMetadata;
  NSString v30;
  uint64_t v31;
  uint64_t v32;
  NSString v33;
  uint64_t v34;
  uint64_t v35;
  NSString v36;
  uint64_t v37;
  uint64_t v38;
  NSString v39;
  uint64_t v40;
  uint64_t v41;
  NSString v42;
  uint64_t v43;
  uint64_t v44;
  NSString v45;
  id v46;
  void *v47;
  id v48;
  void *v49;
  id v50;
  void *v51;
  id v52;
  void *v53;
  _QWORD v54[3];
  uint64_t v55;
  uint64_t v56;

  v1 = v0;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100056D88(v2, (uint64_t)qword_1005F5748);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMMapViewController: setupSubviews", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(void **)&v1[OBJC_IVAR____TtC6FindMy19FMMapViewController_mapView];
  objc_msgSend(v7, "setDelegate:", v1);
  My = type metadata accessor for Feature.FindMy(0);
  v55 = My;
  v9 = sub_100008000((unint64_t *)&qword_1005D9690, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.FindMy, (uint64_t)&protocol conformance descriptor for Feature.FindMy);
  v56 = v9;
  v10 = sub_10003D370(v54);
  v11 = enum case for Feature.FindMy.springfieldIntegration(_:);
  v12 = *(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(My - 8) + 104);
  v12(v10, enum case for Feature.FindMy.springfieldIntegration(_:), My);
  v13 = isFeatureEnabled(_:)(v54);
  sub_100029574(v54);
  if ((v13 & 1) != 0)
  {
    objc_msgSend(v7, "setSelectableMapFeatures:", 1);
    v14 = &selRef__setAlwaysShowHeadingIndicatorIfSupported_;
  }
  else
  {
    v14 = &selRef_setShowsBuildings_;
  }
  objc_msgSend(v7, *v14, 1);
  objc_msgSend(v7, "setShowsUserLocation:", 1);
  v15 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
  objc_msgSend(v7, "setTintColor:", v15);

  objc_msgSend(v7, "setShowsAttribution:", 0);
  objc_msgSend(v7, "setShowsCompass:", 0);
  v16 = OBJC_IVAR____TtC6FindMy19FMMapViewController_compassButton;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy19FMMapViewController_compassButton], "setCompassVisibility:", 0);
  v55 = My;
  v56 = v9;
  v17 = sub_10003D370(v54);
  v12(v17, v11, My);
  v18 = isFeatureEnabled(_:)(v54);
  sub_100029574(v54);
  v19 = (unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator] + 56)
                          + OBJC_IVAR____TtC6FindMy21FMSelectionController_selectedMapMode);
  v20 = *v19;
  if ((v18 & 1) != 0)
  {
    v21 = v19[1];
    if (v19[2])
      v22 = 0x10000;
    else
      v22 = 0;
    if (v21)
      v23 = 256;
    else
      v23 = 0;
    v24 = sub_100006278(v23 | v20 | v22);
    objc_msgSend(v7, "setPreferredConfiguration:", v24);

  }
  else
  {
    v25 = v19[2] == 0;
    v26 = 3;
    if (!v25)
      v26 = 4;
    if (v20)
      v27 = v26;
    else
      v27 = 0;
    objc_msgSend(v7, "setMapType:", v27);
  }
  sub_100031F08(0);
  v28 = type metadata accessor for FMDeviceAnnotationView();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v28);
  v30 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "registerClass:forAnnotationViewWithReuseIdentifier:", ObjCClassFromMetadata, v30);

  v31 = type metadata accessor for FMPersonAnnotationView();
  v32 = swift_getObjCClassFromMetadata(v31);
  v33 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "registerClass:forAnnotationViewWithReuseIdentifier:", v32, v33);

  v34 = type metadata accessor for FMTrackAnnotationView();
  v35 = swift_getObjCClassFromMetadata(v34);
  v36 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "registerClass:forAnnotationViewWithReuseIdentifier:", v35, v36);

  v37 = type metadata accessor for FMClusteredAnnotationView();
  v38 = swift_getObjCClassFromMetadata(v37);
  v39 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "registerClass:forAnnotationViewWithReuseIdentifier:", v38, v39);

  v40 = sub_100006C5C(0, &qword_1005E1190, MKMarkerAnnotationView_ptr);
  v41 = swift_getObjCClassFromMetadata(v40);
  v42 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "registerClass:forAnnotationViewWithReuseIdentifier:", v41, v42);

  v43 = type metadata accessor for FMItemAnnotationView();
  v44 = swift_getObjCClassFromMetadata(v43);
  v45 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "registerClass:forAnnotationViewWithReuseIdentifier:", v44, v45);

  v46 = objc_msgSend(v1, "view");
  if (!v46)
  {
    __break(1u);
    goto LABEL_29;
  }
  v47 = v46;
  objc_msgSend(v46, "addSubview:", v7);

  v48 = objc_msgSend(v1, "view");
  if (!v48)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (!*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy19FMMapViewController_mapOptionsView])
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v49 = v48;
  objc_msgSend(v48, "addSubview:");

  v50 = objc_msgSend(v1, "view");
  if (!v50)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v51 = v50;
  objc_msgSend(v50, "addSubview:", *(_QWORD *)&v1[v16]);

  v52 = objc_msgSend(v1, "view");
  if (v52)
  {
    v53 = v52;
    objc_msgSend(v52, "addSubview:", *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy19FMMapViewController_statusBar]);

    return;
  }
LABEL_32:
  __break(1u);
}

uint64_t sub_100020BA0(void *a1, id a2)
{
  void *v2;
  uint64_t MyAppCoreTester;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  uint64_t v26;
  void **v27;
  void **v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  void **v35;
  char *v36;
  id v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  void *v41;
  id v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  NSString v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  void *v61;
  void *v62;
  char *v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  void *v77;
  uint64_t v78;
  void *v79;
  char *v80;
  __n128 v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t (*v85)(char *, char *, uint64_t);
  uint64_t v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  uint8_t *v90;
  char *v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  __n128 v95;
  void (*v96)(char *, uint64_t, __n128);
  void **v97;
  void (*v98)(char *, uint64_t);
  char *v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(char *, void **);
  unint64_t v104;
  char *v105;
  id v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  void **v119;
  _QWORD *ObjectType;
  void **aBlock;
  uint64_t v122;
  uint64_t (*v123)(uint64_t);
  void *v124;
  void *v125;
  uint64_t v126;

  MyAppCoreTester = type metadata accessor for FindMyAppCoreTester(0);
  v6 = *(_QWORD *)(MyAppCoreTester - 8);
  v7 = __chkstk_darwin(MyAppCoreTester);
  v100 = (char *)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v115 = (char *)&v100 - v10;
  __chkstk_darwin(v9);
  v12 = (char *)&v100 - v11;
  v114 = type metadata accessor for DispatchWorkItemFlags(0);
  v110 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v112 = (char *)&v100 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = type metadata accessor for DispatchQoS(0);
  v109 = *(_QWORD *)(v113 - 8);
  __chkstk_darwin(v113);
  v108 = (char *)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = (void **)type metadata accessor for DispatchTime(0);
  v15 = (unint64_t)*(v119 - 1);
  v16 = __chkstk_darwin(v119);
  v18 = (char *)&v100 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v107 = (char *)&v100 - v19;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v20 = type metadata accessor for Logger(0);
  v21 = sub_100056D88(v20, (uint64_t)qword_1005F5748);
  v22 = v2;
  v111 = v21;
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.default.getter(v23);
  v25 = os_log_type_enabled(v23, v24);
  v118 = MyAppCoreTester;
  v116 = v6;
  if (v25)
  {
    v26 = swift_slowAlloc(22, -1);
    v27 = (void **)swift_slowAlloc(64, -1);
    v106 = a2;
    v28 = v27;
    aBlock = v27;
    *(_DWORD *)v26 = 136446466;
    v105 = v18;
    v104 = v15;
    ObjectType = (_QWORD *)swift_getObjectType(v22);
    v29 = sub_100053F2C((uint64_t *)&unk_1005DF440);
    v30 = String.init<A>(describing:)(&ObjectType, v29);
    v31 = v12;
    v33 = v32;
    ObjectType = (_QWORD *)sub_100056DA0(v30, v32, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&ObjectType, &aBlock);

    v34 = v33;
    v12 = v31;
    swift_bridgeObjectRelease(v34);
    *(_WORD *)(v26 + 12) = 2082;
    ObjectType = (_QWORD *)sub_100056DA0(0xD00000000000002DLL, 0x80000001004C0200, (uint64_t *)&aBlock);
    v15 = v104;
    v18 = v105;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&ObjectType, &aBlock);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "%{public}s %{public}s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy(v28, 2, (char *)&type metadata for Any + 8);
    v35 = v28;
    a2 = v106;
    swift_slowDealloc(v35, -1, -1);
    swift_slowDealloc(v26, -1, -1);

  }
  else
  {

  }
  v36 = *(char **)&v22[OBJC_IVAR____TtC6FindMy13FMAppDelegate_mediator];
  v37 = objc_allocWithZone((Class)type metadata accessor for FMMainViewController());
  v38 = swift_retain(v36);
  v105 = v36;
  v39 = sub_100012140(v38);
  v40 = OBJC_IVAR____TtC6FindMy13FMAppDelegate_mainViewController;
  v41 = *(void **)&v22[OBJC_IVAR____TtC6FindMy13FMAppDelegate_mainViewController];
  *(_QWORD *)&v22[OBJC_IVAR____TtC6FindMy13FMAppDelegate_mainViewController] = v39;

  v42 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v42, "bounds");
  v44 = v43;
  v46 = v45;
  v48 = v47;
  v50 = v49;

  v51 = objc_msgSend(objc_allocWithZone((Class)UIWindow), "initWithFrame:", v44, v46, v48, v50);
  v52 = (void *)objc_opt_self(UIColor);
  v53 = v51;
  v54 = objc_msgSend(v52, "systemBlueColor");
  objc_msgSend(v53, "setTintColor:", v54);

  objc_msgSend(v53, "setRootViewController:", *(_QWORD *)&v22[v40]);
  objc_msgSend(v53, "makeKeyAndVisible");
  v55 = v53;
  v56 = String._bridgeToObjectiveC()();
  objc_msgSend(v55, "setAccessibilityIdentifier:", v56);

  v57 = *(void **)&v22[OBJC_IVAR____TtC6FindMy13FMAppDelegate_window];
  *(_QWORD *)&v22[OBJC_IVAR____TtC6FindMy13FMAppDelegate_window] = v55;
  v106 = v55;

  v58 = type metadata accessor for FMApplication();
  v59 = swift_dynamicCastClass(a1, v58);
  v117 = v12;
  if (v59)
    v60 = a1;
  v61 = *(void **)&v22[OBJC_IVAR____TtC6FindMy13FMAppDelegate_application];
  *(_QWORD *)&v22[OBJC_IVAR____TtC6FindMy13FMAppDelegate_application] = v59;

  sub_100032800();
  v104 = sub_1000555A8();
  v62 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()(v62);
  v63 = v107;
  + infix(_:_:)(v18, 0.3);
  v103 = *(void (**)(char *, void **))(v15 + 8);
  v103(v18, v119);
  v64 = swift_allocObject(&unk_10055C290, 32, 7);
  *(_QWORD *)(v64 + 16) = a2;
  *(_QWORD *)(v64 + 24) = v22;
  v125 = sub_100345D58;
  v126 = v64;
  aBlock = _NSConcreteStackBlock;
  v122 = 1107296256;
  v123 = sub_100037DF8;
  v124 = &unk_10055C2A8;
  v65 = _Block_copy(&aBlock);
  v66 = v126;
  swift_bridgeObjectRetain(a2);
  v67 = v22;
  swift_release(v66);
  v68 = v108;
  static DispatchQoS.unspecified.getter(v69);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v70 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v102 = v70;
  v71 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v101 = v71;
  v72 = sub_1000555E4();
  v73 = v112;
  v74 = v114;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v71, v72, v114, v70);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v63, v68, v73, v65);
  _Block_release(v65);

  v110 = *(_QWORD *)(v110 + 8);
  ((void (*)(char *, uint64_t))v110)(v73, v74);
  v109 = *(_QWORD *)(v109 + 8);
  v75 = v113;
  ((void (*)(char *, uint64_t))v109)(v68, v113);
  v103(v63, v119);
  v76 = *(id *)(*((_QWORD *)v105 + 6) + 24);
  v77 = (void *)static OS_dispatch_queue.main.getter();
  v78 = swift_allocObject(&unk_10055C2E0, 24, 7);
  *(_QWORD *)(v78 + 16) = v67;
  v125 = sub_10005F6E8;
  v126 = v78;
  aBlock = _NSConcreteStackBlock;
  v122 = 1107296256;
  v123 = sub_100037DF8;
  v124 = &unk_10055C2F8;
  v79 = _Block_copy(&aBlock);
  v80 = v67;
  static DispatchQoS.unspecified.getter(v80);
  ObjectType = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)(&ObjectType, v101, v72, v74, v102);
  OS_dispatch_group.notify(qos:flags:queue:execute:)(v68, v73, v77, v79);
  _Block_release(v79);

  ((void (*)(char *, uint64_t))v110)(v73, v74);
  ((void (*)(char *, uint64_t))v109)(v68, v75);
  v81 = swift_release(v126);
  v80[OBJC_IVAR____TtC6FindMy13FMAppDelegate_didHandleOpenURL] = 0;
  v82 = v117;
  FindMyAppCoreTester.init(text:)(0x2073692073696854, 0xEE00747365742061, v81);
  v83 = v115;
  v84 = v116;
  v85 = *(uint64_t (**)(char *, char *, uint64_t))(v116 + 16);
  v86 = v118;
  v87 = v85(v115, v82, v118);
  v88 = Logger.logObject.getter(v87);
  v89 = static os_log_type_t.default.getter(v88);
  if (os_log_type_enabled(v88, v89))
  {
    v90 = (uint8_t *)swift_slowAlloc(12, -1);
    v119 = (void **)swift_slowAlloc(32, -1);
    aBlock = v119;
    *(_DWORD *)v90 = 136315138;
    v114 = (uint64_t)(v90 + 4);
    v91 = v100;
    v85(v100, v83, v86);
    v92 = String.init<A>(describing:)(v91, v86);
    v94 = v93;
    ObjectType = (_QWORD *)sub_100056DA0(v92, v93, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&ObjectType, &aBlock);
    v95 = swift_bridgeObjectRelease(v94);
    v96 = *(void (**)(char *, uint64_t, __n128))(v84 + 8);
    v96(v83, v86, v95);
    _os_log_impl((void *)&_mh_execute_header, v88, v89, "FindMyClient: %s", v90, 0xCu);
    v97 = v119;
    swift_arrayDestroy(v119, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v97, -1, -1);
    swift_slowDealloc(v90, -1, -1);

    ((void (*)(char *, uint64_t))v96)(v82, v86);
  }
  else
  {

    v98 = *(void (**)(char *, uint64_t))(v84 + 8);
    v98(v83, v86);

    v98(v82, v86);
  }
  return 1;
}

uint64_t sub_1000215E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  NSString v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  void *v28;
  Class isa;
  Class v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  unint64_t v42;
  char *v43;
  char v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  __n128 v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v88;
  char *v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id v94[4];

  v1 = v0;
  v2 = type metadata accessor for InitialTabInfo(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v88 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v88 - v7;
  *(_QWORD *)(v0 + 16) = _swiftEmptyArrayStorage;
  *(_QWORD *)(v0 + 24) = dispatch_group_create();
  *(_QWORD *)(v0 + 32) = dispatch_group_create();
  *(_WORD *)(v0 + 48) = 258;
  *(_QWORD *)(v0 + 72) = 0;
  *(_BYTE *)(v0 + 80) = 1;
  v9 = sub_100053F2C(&qword_1005D67A0);
  v10 = swift_allocObject(v9, 256, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100481DE0;
  v11 = sub_100006C5C(0, &qword_1005D3838, NSArray_ptr);
  *(_QWORD *)(v10 + 56) = sub_100053F2C(&qword_1005D3840);
  *(_QWORD *)(v10 + 32) = v11;
  v12 = sub_100006C5C(0, &qword_1005D3848, NSString_ptr);
  *(_QWORD *)(v10 + 88) = sub_100053F2C(&qword_1005D3850);
  *(_QWORD *)(v10 + 64) = v12;
  v13 = sub_100006C5C(0, &qword_1005D3858, NSNumber_ptr);
  *(_QWORD *)(v10 + 120) = sub_100053F2C(&qword_1005D3860);
  *(_QWORD *)(v10 + 96) = v13;
  v14 = sub_100006C5C(0, &qword_1005D3868, NSDictionary_ptr);
  *(_QWORD *)(v10 + 152) = sub_100053F2C(&qword_1005D3870);
  *(_QWORD *)(v10 + 128) = v14;
  v15 = sub_100006C5C(0, &qword_1005D3878, NSMutableArray_ptr);
  *(_QWORD *)(v10 + 184) = sub_100053F2C(&qword_1005D3880);
  *(_QWORD *)(v10 + 160) = v15;
  v16 = sub_100006C5C(0, &qword_1005D3888, NSMutableDictionary_ptr);
  *(_QWORD *)(v10 + 216) = sub_100053F2C(&qword_1005D3890);
  *(_QWORD *)(v10 + 192) = v16;
  v17 = sub_100006C5C(0, &qword_1005D3898, NSMutableString_ptr);
  *(_QWORD *)(v10 + 248) = sub_100053F2C(&qword_1005D38A0);
  *(_QWORD *)(v10 + 224) = v17;
  sub_100006C5C(0, &qword_1005D38A8, NSSet_ptr);
  v18 = (void *)NSSet.init(arrayLiteral:)(v10);
  v94[0] = 0;
  static Set._conditionallyBridgeFromObjectiveC(_:result:)(v18, v94, &type metadata for AnyHashable, &protocol witness table for AnyHashable);
  v19 = v94[0];
  if (v94[0])
  {
    v20 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v21 = String._bridgeToObjectiveC()();
    v22 = objc_msgSend(v20, "dataForKey:", v21);

    if (v22)
    {
      v89 = v6;
      v23 = v18;
      v24 = v2;
      v25 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v22);
      v27 = v26;

      v28 = (void *)objc_opt_self(NSKeyedUnarchiver);
      isa = Set._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v19);
      v90 = v27;
      v91 = v25;
      v30 = Data._bridgeToObjectiveC()().super.isa;
      v94[0] = 0;
      v31 = objc_msgSend(v28, "_strictlyUnarchivedObjectOfClasses:fromData:error:", isa, v30, v94);

      v32 = v94[0];
      v92 = v3;
      if (v31)
      {
        v33 = v94[0];
        _bridgeAnyObjectToAny(_:)(v94, v31);
        swift_unknownObjectRelease(v31);
        v34 = sub_100053F2C(&qword_1005D38B8);
        v35 = v24;
        if (swift_dynamicCast(&v93, v94, (char *)&type metadata for Any + 8, v34, 6))
        {
          v36 = v93;
          swift_bridgeObjectRetain(v93);
          v38 = FMTabInfoLastVisited.getter(v37);
          v40 = v39;
          v41 = v23;
          if (*(_QWORD *)(v36 + 16))
          {
            v42 = sub_10004C348(v38, v39);
            v43 = v89;
            if ((v44 & 1) != 0)
            {
              v45 = *(_QWORD **)(*(_QWORD *)(v36 + 56) + 8 * v42);
              swift_bridgeObjectRetain(v45);
            }
            else
            {
              v45 = _swiftEmptyArrayStorage;
            }
          }
          else
          {
            v45 = _swiftEmptyArrayStorage;
            v43 = v89;
          }
          swift_bridgeObjectRelease(v40);
          swift_bridgeObjectRelease(v36);
          v64 = swift_bridgeObjectRetain(v36);
          v65 = FMTabInfoCurrentTab.getter(v64);
          v67 = v66;
          if (*(_QWORD *)(v36 + 16) && (v68 = sub_10004C348(v65, v66), (v69 & 1) != 0))
          {
            v63 = *(_QWORD **)(*(_QWORD *)(v36 + 56) + 8 * v68);
            swift_bridgeObjectRetain(v63);
          }
          else
          {
            v63 = _swiftEmptyArrayStorage;
          }
          swift_bridgeObjectRelease(v67);
          v70 = swift_bridgeObjectRelease(v36);
          v71 = FMTabInfoTimeSpent.getter(v70);
          v73 = v72;
          if (*(_QWORD *)(v36 + 16) && (v74 = sub_10004C348(v71, v72), (v75 & 1) != 0))
          {
            v62 = *(_QWORD **)(*(_QWORD *)(v36 + 56) + 8 * v74);
            swift_bridgeObjectRetain(v62);
            swift_bridgeObjectRelease(v73);
            swift_bridgeObjectRelease(v36);
          }
          else
          {
            swift_bridgeObjectRelease(v73);
            swift_bridgeObjectRelease(v36);
            v62 = _swiftEmptyArrayStorage;
          }
          goto LABEL_27;
        }
        v62 = _swiftEmptyArrayStorage;
        v63 = _swiftEmptyArrayStorage;
        v45 = _swiftEmptyArrayStorage;
      }
      else
      {
        v60 = v94[0];
        v61 = _convertNSErrorToError(_:)(v32);

        swift_willThrow();
        swift_errorRelease(v61);
        v62 = _swiftEmptyArrayStorage;
        v63 = _swiftEmptyArrayStorage;
        v45 = _swiftEmptyArrayStorage;
        v35 = v24;
      }
      v41 = v23;
      v43 = v89;
LABEL_27:
      InitialTabInfo.init(lastVisitedTimes:currentTab:timeSpent:)(v45, v63, v62);
      *(_BYTE *)(v1 + 48) = 0;
      dispatch_group_enter(*(dispatch_group_t *)(v1 + 24));
      v76 = type metadata accessor for FMPersonImageCache(0);
      swift_allocObject(v76, *(unsigned int *)(v76 + 48), *(unsigned __int16 *)(v76 + 52));
      *(_QWORD *)(v1 + 64) = sub_100017034();
      v77 = v92;
      (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v43, v8, v35);
      type metadata accessor for FMFManagerConfiguration(0);
      v78 = static FMFManagerConfiguration.default.getter();
      v79 = type metadata accessor for FMFManager(0);
      swift_allocObject(v79, *(unsigned int *)(v79 + 48), *(unsigned __int16 *)(v79 + 52));
      v80 = FMFManager.init(configuration:tabInfo:)(v78, v43);
      *(_QWORD *)(v1 + 40) = v80;
      v81 = type metadata accessor for FMPeopleActionController();
      v82 = swift_allocObject(v81, 32, 7);
      *(_QWORD *)(v82 + 16) = v80;
      *(_QWORD *)(v82 + 24) = 0;
      *(_QWORD *)(v1 + 56) = v82;
      v84 = sub_10003FAF4(&qword_1005D38B0, v83, (uint64_t (*)(uint64_t))type metadata accessor for FMPeopleProvider, (uint64_t)&unk_100481E84);
      swift_retain(v80);
      v85 = swift_retain(v1);
      dispatch thunk of FMFManager.delegate.setter(v85, v84);

      sub_100027BDC(v91, v90);
      (*(void (**)(char *, uint64_t))(v77 + 8))(v8, v35);
      goto LABEL_28;
    }
    swift_bridgeObjectRelease(v19);
  }
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v46 = type metadata accessor for Logger(0);
  v47 = sub_100056D88(v46, (uint64_t)qword_1005F5748);
  v48 = Logger.logObject.getter(v47);
  v49 = static os_log_type_t.default.getter(v48);
  if (os_log_type_enabled(v48, v49))
  {
    v50 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v50 = 0;
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "FMPeopleProvider: no tab info, proceeding without", v50, 2u);
    swift_slowDealloc(v50, -1, -1);
  }

  *(_BYTE *)(v1 + 48) = 0;
  dispatch_group_enter(*(dispatch_group_t *)(v1 + 24));
  v51 = type metadata accessor for FMPersonImageCache(0);
  swift_allocObject(v51, *(unsigned int *)(v51 + 48), *(unsigned __int16 *)(v51 + 52));
  *(_QWORD *)(v1 + 64) = sub_100017034();
  type metadata accessor for FMFManagerConfiguration(0);
  v52 = static FMFManagerConfiguration.default.getter();
  InitialTabInfo.init()();
  v53 = type metadata accessor for FMFManager(0);
  swift_allocObject(v53, *(unsigned int *)(v53 + 48), *(unsigned __int16 *)(v53 + 52));
  v54 = FMFManager.init(configuration:tabInfo:)(v52, v8);
  *(_QWORD *)(v1 + 40) = v54;
  v55 = type metadata accessor for FMPeopleActionController();
  v56 = swift_allocObject(v55, 32, 7);
  *(_QWORD *)(v56 + 16) = v54;
  *(_QWORD *)(v56 + 24) = 0;
  *(_QWORD *)(v1 + 56) = v56;
  v58 = sub_10003FAF4(&qword_1005D38B0, v57, (uint64_t (*)(uint64_t))type metadata accessor for FMPeopleProvider, (uint64_t)&unk_100481E84);
  swift_retain_n(v54, 2);
  v59 = swift_retain(v1);
  dispatch thunk of FMFManager.delegate.setter(v59, v58);
  swift_release(v54);

LABEL_28:
  v86 = *(_QWORD *)(v1 + 64) + qword_1005D3910;
  *(_QWORD *)(v86 + 8) = &off_100542320;
  swift_unknownObjectWeakAssign(v86, v1);
  return v1;
}

uint64_t sub_100021E38(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_100021E58()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100021E78()
{
  uint64_t v0;

  return sub_100021E80(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_100021E80(uint64_t (*a1)(void))
{
  return a1();
}

id sub_100021EA0(double a1, double a2, double a3)
{
  uint64_t v3;

  return sub_100021EA8(*(char **)(v3 + 16), a1, a2, a3);
}

id sub_100021EA8(char *a1, double a2, double a3, double a4)
{
  double *v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  void *v10;
  double v11;

  v5 = (double *)&a1[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_style];
  LODWORD(a4) = 1148846080;
  objc_msgSend(a1, "setLayoutSize:withContentPriority:", *(double *)&a1[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_style + 24], *(double *)&a1[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_style + 32], a4);
  v6 = *(void **)&a1[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_maskableContainer];
  objc_msgSend(*(id *)&a1[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_backplateLayer], "frame");
  v8 = v7;
  LODWORD(v7) = 1148846080;
  objc_msgSend(v6, "setLayoutSize:withContentPriority:", v8, v9, v7);
  v10 = *(void **)&a1[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_badgeView];
  LODWORD(v11) = 1148846080;
  objc_msgSend(v10, "setLayoutSize:withContentPriority:", v5[1], v5[1], v11);
  objc_msgSend(a1, "setAlignment:forView:inAxis:", 4, v10, 1);
  return objc_msgSend(a1, "setAlignment:forView:inAxis:", 4, v10, 0);
}

uint64_t sub_100021F8C(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v1;

  return a1(*(_QWORD *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

id sub_100021FA4(id a1, char a2, id a3, void *a4, void *a5)
{
  if (a2 != 2 && objc_msgSend(a3, "isHidden"))
  {
    if ((a2 == 0) != objc_msgSend(a4, "isHidden"))
      objc_msgSend(a4, "setHidden:", a2 == 0);
    if ((((a2 == 0) ^ objc_msgSend(a5, "isHidden")) & 1) == 0)
      objc_msgSend(a5, "setHidden:", a2 != 0);
  }
  return objc_msgSend(a1, "layoutIfNeeded");
}

uint64_t sub_100022074()
{
  return sub_100021F8C((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100021FA4);
}

char *sub_100022080(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  objc_class *ObjCClassFromMetadata;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  void *v24;
  char *result;
  char *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  _BYTE v53[24];
  objc_super v54;

  v10 = OBJC_IVAR____TtC6FindMy16FMMapOptionsView_platterContainer;
  v11 = objc_allocWithZone((Class)UIStackView);
  v12 = a5;
  *(_QWORD *)&a5[v10] = objc_msgSend(v11, "init");
  v13 = OBJC_IVAR____TtC6FindMy16FMMapOptionsView_firstPlatter;
  v14 = type metadata accessor for FMMapOptionsView.PlatterView();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v14);
  *(_QWORD *)&v12[v13] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v16 = OBJC_IVAR____TtC6FindMy16FMMapOptionsView_firstPlatterSeparatorView;
  *(_QWORD *)&v12[v16] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v17 = OBJC_IVAR____TtC6FindMy16FMMapOptionsView_secondPlatter;
  *(_QWORD *)&v12[v17] = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), "init");
  v12[OBJC_IVAR____TtC6FindMy16FMMapOptionsView_currentPerspectiveButtonState] = 2;
  v18 = OBJC_IVAR____TtC6FindMy16FMMapOptionsView_mapSettingsButton;
  *(_QWORD *)&v12[v18] = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
  v19 = OBJC_IVAR____TtC6FindMy16FMMapOptionsView_perspectiveButtonContainer;
  *(_QWORD *)&v12[v19] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v20 = OBJC_IVAR____TtC6FindMy16FMMapOptionsView_perspective2dButton;
  *(_QWORD *)&v12[v20] = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
  v21 = OBJC_IVAR____TtC6FindMy16FMMapOptionsView_perspective3dButton;
  *(_QWORD *)&v12[v21] = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
  v22 = &v12[OBJC_IVAR____TtC6FindMy16FMMapOptionsView_selectionSubscription];
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  v23 = &v12[OBJC_IVAR____TtC6FindMy16FMMapOptionsView_locationSubscription];
  *(_QWORD *)v23 = 0;
  *((_QWORD *)v23 + 1) = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC6FindMy16FMMapOptionsView_mediator] = a1;
  v24 = (void *)objc_opt_self(_MKUserTrackingButton);
  swift_retain(a1);
  result = (char *)objc_msgSend(v24, "buttonWithUserTrackingView:", a2);
  if (result)
  {
    *(_QWORD *)&v12[OBJC_IVAR____TtC6FindMy16FMMapOptionsView_userLocationButton] = result;
    v26 = &v12[OBJC_IVAR____TtC6FindMy16FMMapOptionsView_set3DPerspectiveEnabled];
    *(_QWORD *)v26 = a3;
    *((_QWORD *)v26 + 1) = a4;
    swift_retain(a4);

    v54.receiver = v12;
    v54.super_class = (Class)type metadata accessor for FMMapOptionsView();
    v27 = objc_msgSendSuper2(&v54, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
    sub_10002A734();
    sub_100034408();
    v28 = *(_QWORD *)(a1 + 56);
    v29 = type metadata accessor for FMSelectionSubscription(0);
    v30 = swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
    v31 = v30 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
    *(_QWORD *)(v31 + 8) = 0;
    swift_unknownObjectWeakInit(v31, 0);
    v32 = (char *)v27;
    v33 = swift_retain(v28);
    UUID.init()(v33);
    *(_QWORD *)(v30 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber + 8) = &off_1005537B8;
    swift_unknownObjectWeakAssign();
    swift_beginAccess(v28 + 16, v53, 33, 0);
    v34 = swift_retain(v30);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v34);
    v36 = *(_QWORD *)((*(_QWORD *)(v28 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
    v35 = *(_QWORD *)((*(_QWORD *)(v28 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v36 >= v35 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v35 > 1, v36 + 1, 1);
    v37 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v36, v30);
    specialized Array._endMutation()(v37);
    swift_endAccess(v53);
    swift_release(v28);

    v38 = (uint64_t *)&v32[OBJC_IVAR____TtC6FindMy16FMMapOptionsView_selectionSubscription];
    v39 = *(_QWORD *)&v32[OBJC_IVAR____TtC6FindMy16FMMapOptionsView_selectionSubscription];
    *v38 = v30;
    v38[1] = (uint64_t)&off_100557258;
    swift_unknownObjectRelease(v39);
    v40 = *(void **)(a1 + 40);
    v41 = type metadata accessor for FMLocationSubscription(0);
    v42 = swift_allocObject(v41, *(unsigned int *)(v41 + 48), *(unsigned __int16 *)(v41 + 52));
    v43 = v42 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber;
    *(_QWORD *)(v43 + 8) = 0;
    swift_unknownObjectWeakInit(v43, 0);
    v44 = v32;
    v45 = v40;
    UUID.init()(v45);
    *(_QWORD *)(v42 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber + 8) = &off_100553788;
    swift_unknownObjectWeakAssign();
    v46 = &v45[OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions];
    swift_beginAccess(&v45[OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions], v53, 33, 0);
    v47 = swift_retain(v42);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v47);
    v49 = *(_QWORD *)((*(_QWORD *)v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v48 = *(_QWORD *)((*(_QWORD *)v46 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v49 >= v48 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v48 > 1, v49 + 1, 1);
    v50 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v49, v42);
    specialized Array._endMutation()(v50);
    swift_endAccess(v53);

    swift_release(a1);
    swift_release(a4);
    v51 = (uint64_t *)&v44[OBJC_IVAR____TtC6FindMy16FMMapOptionsView_locationSubscription];
    v52 = *(_QWORD *)&v44[OBJC_IVAR____TtC6FindMy16FMMapOptionsView_locationSubscription];
    *v51 = v42;
    v51[1] = (uint64_t)&off_10055EF88;
    swift_unknownObjectRelease(v52);
    return v44;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1000225DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = v1;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v4 = type metadata accessor for Logger(0);
  sub_100056D88(v4, (uint64_t)qword_1005F5748);
  swift_bridgeObjectRetain(a1);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v8 = 134217984;
    v19 = *(_QWORD *)(a1 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20);
    swift_bridgeObjectRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMDevicesProvider: didReceive items: %ld", v8, 0xCu);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease(a1);
  }
  sub_100022830(a1);
  swift_beginAccess(v2 + 16, &v19, 0, 0);
  v9 = *(_QWORD *)(v2 + 16);
  if (!((unint64_t)v9 >> 62))
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(v2 + 16));
    if (v10)
      goto LABEL_8;
LABEL_21:
    swift_bridgeObjectRelease(v9);
    return;
  }
  if (v9 < 0)
    v18 = *(_QWORD *)(v2 + 16);
  else
    v18 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(v2 + 16));
  v10 = _CocoaArrayWrapper.endIndex.getter(v18);
  if (!v10)
    goto LABEL_21;
LABEL_8:
  if (v10 >= 1)
  {
    for (i = 0; i != v10; ++i)
    {
      if ((v9 & 0xC000000000000001) != 0)
      {
        v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v9);
      }
      else
      {
        v15 = *(_QWORD *)(v9 + 8 * i + 32);
        swift_retain(v15);
      }
      v16 = v15 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
      Strong = swift_unknownObjectWeakLoadStrong(v15 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber);
      if (Strong)
      {
        v12 = Strong;
        v13 = *(_QWORD *)(v16 + 8);
        ObjectType = swift_getObjectType(Strong);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 80))(v2, a1, ObjectType, v13);
        swift_release(v15);
        swift_unknownObjectRelease(v12);
      }
      else
      {
        swift_release(v15);
      }
    }
    goto LABEL_21;
  }
  __break(1u);
}

double sub_100022830(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;
  __n128 v10;
  double result;
  uint64_t v12;
  uint64_t v13;

  v2 = v1;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v4 = type metadata accessor for Logger(0);
  sub_100056D88(v4, (uint64_t)qword_1005F5748);
  swift_bridgeObjectRetain(a1);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v8 = 134217984;
    v12 = *(_QWORD *)(a1 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13);
    swift_bridgeObjectRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMItemImageCache: preloadImages for %ld", v8, 0xCu);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease(a1);
  }
  swift_retain(v2);
  v9 = sub_100188A48(a1, v2);
  v10 = swift_release(v2);
  dispatch thunk of FMImageCache.preload(requests:)(v9, v10);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v9).n128_u64[0];
  return result;
}

id sub_100022998()
{
  char *v0;
  double v1;
  double v2;
  double v3;
  id v4;
  id v5;
  double v6;
  double v7;
  CGRect v9;

  v1 = *(double *)&v0[OBJC_IVAR____TtC6FindMy13FMBatteryView_level];
  if (qword_1005D1FA0 != -1)
    swift_once(&qword_1005D1FA0, sub_10005EEBC);
  if (v1 * *(double *)&qword_1005F5E68 > 4.0)
    v2 = v1 * *(double *)&qword_1005F5E68;
  else
    v2 = 4.0;
  v3 = *(double *)&xmmword_1005F5E50;
  v4 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v5 = objc_msgSend(v4, "userInterfaceLayoutDirection");

  if (v5 == (id)1)
  {
    objc_msgSend(v0, "bounds");
    v3 = CGRectGetWidth(v9) - *(double *)&xmmword_1005F5E50 - v2;
  }
  v6 = *((double *)&xmmword_1005F5E50 + 1);
  objc_msgSend(v0, "bounds");
  return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy13FMBatteryView_levelView], "setFrame:", v3, v6, v2, v7 - (*(double *)&xmmword_1005F5E50 + *(double *)&xmmword_1005F5E50));
}

uint64_t sub_100022ABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  _BYTE *v53;
  _BYTE v55[24];

  v1 = v0;
  *(_QWORD *)(v0 + 16) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMConditionProvider()), "init");
  v2 = type metadata accessor for FMETAProvider();
  swift_allocObject(v2, 56, 7);
  *(_QWORD *)(v0 + 32) = sub_100011464();
  *(_QWORD *)(v0 + 40) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMLocationProvider()), "init");
  v3 = type metadata accessor for FMPeopleProvider();
  swift_allocObject(v3, 81, 7);
  *(_QWORD *)(v0 + 48) = sub_1000215E0();
  v4 = type metadata accessor for FMSelectionController(0);
  swift_allocObject(v4, *(unsigned int *)(v4 + 48), *(unsigned __int16 *)(v4 + 52));
  v5 = sub_10001D6C4();
  *(_QWORD *)(v0 + 56) = v5;
  *(_BYTE *)(v0 + 72) = 0;
  v6 = type metadata accessor for FMDevicesProvider(0);
  *(_QWORD *)(v0 + 80) = 0;
  *(_QWORD *)(v0 + 88) = 0;
  swift_allocObject(v6, *(unsigned int *)(v6 + 48), *(unsigned __int16 *)(v6 + 52));
  v7 = sub_10001A6E4();
  *(_QWORD *)(v0 + 24) = v7;
  v8 = type metadata accessor for FMProductAssetProvider();
  swift_allocObject(v8, 64, 7);
  v9 = swift_retain_n(v7, 2);
  *(_QWORD *)(v0 + 64) = sub_100014ADC(v9);
  v10 = type metadata accessor for FMSelectionSubscription(0);
  v11 = swift_allocObject(v10, *(unsigned int *)(v10 + 48), *(unsigned __int16 *)(v10 + 52));
  v12 = v11 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
  *(_QWORD *)(v12 + 8) = 0;
  swift_unknownObjectWeakInit(v12);
  swift_retain(v5);
  v13 = swift_retain(v0);
  UUID.init()(v13);
  v14 = v11 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
  *(_QWORD *)(v14 + 8) = &off_100545C50;
  swift_unknownObjectWeakAssign(v14, v0);
  swift_beginAccess(v5 + 2, v55, 33, 0);
  v15 = swift_retain(v11);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
  v17 = *(_QWORD *)((v5[2] & 0xFFFFFFFFFFFFFF8) + 0x10);
  v16 = *(_QWORD *)((v5[2] & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v17 >= v16 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
  v18 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v11);
  specialized Array._endMutation()(v18);
  swift_endAccess(v55);
  swift_release(v11);
  swift_release(v5);
  swift_release(v0);
  v19 = type metadata accessor for FMDevicesSubscription(0);
  v20 = swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
  v21 = v20 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
  *(_QWORD *)(v21 + 8) = 0;
  swift_unknownObjectWeakInit(v21);
  v22 = swift_retain(v0);
  UUID.init()(v22);
  v23 = v20 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
  *(_QWORD *)(v23 + 8) = &off_100545BB0;
  swift_unknownObjectWeakAssign(v23, v0);
  swift_beginAccess(v7 + 2, v55, 33, 0);
  v24 = swift_retain(v20);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v24);
  v26 = *(_QWORD *)((v7[2] & 0xFFFFFFFFFFFFFF8) + 0x10);
  v25 = *(_QWORD *)((v7[2] & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v26 >= v25 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v25 > 1, v26 + 1, 1);
  v27 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v26, v20);
  specialized Array._endMutation()(v27);
  swift_endAccess(v55);
  swift_release(v20);
  swift_release(v0);
  v28 = *(_QWORD *)(v0 + 48);
  v29 = type metadata accessor for FMPeopleSubscription(0);
  v30 = swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
  v31 = v30 + OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_subscriber;
  *(_QWORD *)(v31 + 8) = 0;
  swift_unknownObjectWeakInit(v31);
  swift_retain(v0);
  v32 = swift_retain(v28);
  UUID.init()(v32);
  v33 = v30 + OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_subscriber;
  *(_QWORD *)(v33 + 8) = &off_100545B48;
  swift_unknownObjectWeakAssign(v33, v0);
  swift_beginAccess(v28 + 16, v55, 33, 0);
  v34 = swift_retain(v30);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v34);
  v36 = *(_QWORD *)((*(_QWORD *)(v28 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v35 = *(_QWORD *)((*(_QWORD *)(v28 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v36 >= v35 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v35 > 1, v36 + 1, 1);
  v37 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v36, v30);
  specialized Array._endMutation()(v37);
  swift_endAccess(v55);
  swift_release(v30);
  swift_release(v28);
  swift_release(v0);
  v38 = *(void **)(v0 + 16);
  v39 = type metadata accessor for FMConditionSubscription(0);
  v40 = swift_allocObject(v39, *(unsigned int *)(v39 + 48), *(unsigned __int16 *)(v39 + 52));
  v41 = v40 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber;
  *(_QWORD *)(v41 + 8) = 0;
  swift_unknownObjectWeakInit(v41);
  swift_retain(v0);
  v42 = v38;
  UUID.init()(v42);
  v43 = v40 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber;
  *(_QWORD *)(v43 + 8) = &off_100545AC8;
  swift_unknownObjectWeakAssign(v43, v0);
  v44 = &v42[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions];
  swift_beginAccess(&v42[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions], v55, 33, 0);
  v45 = swift_retain(v40);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v45);
  v47 = *(_QWORD *)((*(_QWORD *)v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v46 = *(_QWORD *)((*(_QWORD *)v44 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v47 >= v46 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v46 > 1, v47 + 1, 1);
  v48 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v47, v40);
  specialized Array._endMutation()(v48);
  swift_endAccess(v55);
  swift_release(v40);

  swift_release(v1);
  v49 = *(_QWORD *)(v1 + 48);
  swift_retain(v49);
  v50 = sub_100007D30();
  v51 = *(_QWORD *)(v49 + 72);
  *(_QWORD *)(v49 + 72) = v50;
  swift_release(v49);
  swift_release(v51);
  v52 = *(id *)(v1 + 16);
  v52[OBJC_IVAR____TtC6FindMy19FMConditionProvider_areFriendsInitialized] = dispatch thunk of FMFManager.isInitialized.getter(v52) & 1;
  sub_10000BD0C();

  v53 = *(id *)(v1 + 16);
  v53[OBJC_IVAR____TtC6FindMy19FMConditionProvider_areDevicesInitialized] = FMIPManager.isInitialized.getter(v53) & 1;
  sub_10000CAB8();
  swift_release(v7);

  return v1;
}

uint64_t sub_100023064(uint64_t *a1, uint64_t a2, _QWORD *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v8 = *a1;
  v9 = swift_bridgeObjectRetain(*a1);
  v10 = sub_1000233B8(v9, a2, a3);
  v12 = v11;
  v13 = v4;
  swift_bridgeObjectRelease(v8);
  if (v4)
    return v10;
  if ((v12 & 1) == 0)
  {
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_57;
    v12 = *a1;
    if ((unint64_t)*a1 >> 62)
    {
LABEL_58:
      if (v12 < 0)
        v33 = v12;
      else
        v33 = v12 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v12);
      v34 = _CocoaArrayWrapper.endIndex.getter(v33);
      swift_bridgeObjectRelease(v12);
      if (v14 != v34)
        goto LABEL_6;
    }
    else if (v14 != *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      a2 += *a3;
      v14 = v10 + 5;
      v37 = v13;
      while (1)
      {
        v15 = v14 - 4;
        v16 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          v12 = specialized _ArrayBuffer._getElementSlowPath(_:)(v14 - 4, v16);
        }
        else
        {
          if ((v15 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
LABEL_55:
            __break(1u);
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
            goto LABEL_58;
          }
          if (v15 >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_48;
          v12 = *(_QWORD *)(v16 + 8 * v14);
          swift_retain(v12);
        }
        v17 = static UUID.== infix(_:_:)(v12 + *a3, a2);
        swift_release(v12);
        if ((v17 & 1) == 0)
          break;
LABEL_32:
        v28 = v14 - 3;
        if (__OFADD__(v15, 1))
          goto LABEL_49;
        v12 = *a1;
        if ((unint64_t)*a1 >> 62)
        {
          if (v12 < 0)
            v30 = *a1;
          else
            v30 = v12 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(*a1);
          v29 = _CocoaArrayWrapper.endIndex.getter(v30);
          swift_bridgeObjectRelease(v12);
        }
        else
        {
          v29 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        ++v14;
        if (v28 == v29)
          return v10;
      }
      if (v15 == v10)
      {
LABEL_31:
        if (__OFADD__(v10++, 1))
          goto LABEL_50;
        goto LABEL_32;
      }
      v13 = *a1;
      if ((*a1 & 0xC000000000000001) != 0)
      {
        v18 = specialized _ArrayBuffer._getElementSlowPath(_:)(v10, *a1);
        v13 = *a1;
        if ((*a1 & 0xC000000000000001) == 0)
        {
LABEL_17:
          if ((v15 & 0x8000000000000000) != 0)
            goto LABEL_53;
          if (v15 >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_54;
          v19 = *(_QWORD *)(v13 + 8 * v14);
          swift_retain(v19);
          goto LABEL_20;
        }
      }
      else
      {
        if ((v10 & 0x8000000000000000) != 0)
          goto LABEL_51;
        if (v10 >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_52;
        v18 = *(_QWORD *)(v13 + 8 * v10 + 32);
        swift_retain(v18);
        if ((v13 & 0xC000000000000001) == 0)
          goto LABEL_17;
      }
      v19 = specialized _ArrayBuffer._getElementSlowPath(_:)(v14 - 4, v13);
      v13 = *a1;
LABEL_20:
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(v13);
      *a1 = v13;
      if (!isUniquelyReferenced_nonNull_bridgeObject || v13 < 0 || (v13 & 0x4000000000000000) != 0)
      {
        v13 = a4(v13);
        *a1 = v13;
      }
      v21 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 8 * v10 + 0x20);
      *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 8 * v10 + 0x20) = v19;
      swift_release(v21);
      specialized Array._endMutation()(v22);
      v12 = *a1;
      v23 = swift_isUniquelyReferenced_nonNull_bridgeObject(*a1);
      *a1 = v12;
      if (!v23 || v12 < 0 || (v12 & 0x4000000000000000) != 0)
      {
        v12 = a4(v12);
        *a1 = v12;
      }
      v13 = v37;
      if ((v15 & 0x8000000000000000) != 0)
        goto LABEL_55;
      v24 = v12 & 0xFFFFFFFFFFFFFF8;
      if (v15 >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_56;
      v25 = *(_QWORD *)(v24 + 8 * v14);
      *(_QWORD *)(v24 + 8 * v14) = v18;
      swift_release(v25);
      specialized Array._endMutation()(v26);
      goto LABEL_31;
    }
    return v10;
  }
  v31 = *a1;
  if (!((unint64_t)v31 >> 62))
    return *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v31 < 0)
    v35 = v31;
  else
    v35 = v31 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v31);
  v36 = _CocoaArrayWrapper.endIndex.getter(v35);
  swift_bridgeObjectRelease(v31);
  return v36;
}

uint64_t sub_1000233B8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  if ((unint64_t)a1 >> 62)
  {
LABEL_13:
    if (a1 < 0)
      v11 = a1;
    else
      v11 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v6 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(a1);
    v7 = 0;
    if (!v6)
      return v7;
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v7 = 0;
    if (!v6)
      return v7;
  }
  a2 += *a3;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v7, a1);
    }
    else
    {
      v8 = *(_QWORD *)(a1 + 8 * v7 + 32);
      swift_retain(v8);
    }
    v9 = static UUID.== infix(_:_:)(v8 + *a3, a2);
    swift_release(v8);
    if ((v9 & 1) != 0)
      return v7;
    v10 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    ++v7;
    if (v10 == v6)
      return 0;
  }
}

void sub_1000234D0(void *a1)
{
  uint64_t v1;

  sub_1000234D8(a1, v1);
}

void sub_1000234D8(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  _BYTE v6[24];

  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v6, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    sub_100023530(a1);

  }
}

void sub_100023530(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t My;
  _QWORD *v21;
  int v22;
  unint64_t v23;
  NSString v24;
  id v25;
  double v26;
  NSString v27;
  char v28;
  id v29;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  char *v36;
  id v37;
  void (*v38)(_QWORD *, _QWORD);
  uint64_t v39;
  char *v40;
  char *v41;
  _QWORD v42[5];

  v3 = type metadata accessor for UIBackgroundConfiguration(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100053F2C(&qword_1005DC1B8);
  v7 = __chkstk_darwin(v6);
  v41 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v39 - v10;
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v39 - v13;
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v39 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v39 - v18;
  My = type metadata accessor for Feature.FindMy(0);
  v42[3] = My;
  v42[4] = sub_100008000((unint64_t *)&qword_1005D9690, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.FindMy, (uint64_t)&protocol conformance descriptor for Feature.FindMy);
  v21 = sub_10003D370(v42);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(My - 8) + 104))(v21, enum case for Feature.FindMy.springfieldIntegration(_:), My);
  LOBYTE(My) = isFeatureEnabled(_:)(v42);
  sub_100029574(v42);
  v40 = v5;
  if ((My & 1) != 0)
  {
    v22 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy16FMMapOptionsView_mediator) + 56)
                             + OBJC_IVAR____TtC6FindMy21FMSelectionController_selectedMapMode);
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy16FMMapOptionsView_mediator) + 56)
                  + OBJC_IVAR____TtC6FindMy21FMSelectionController_selectedMapMode))
      v23 = 0x80000001004B87C0;
    else
      v23 = 0xE800000000000000;
    v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v23);
    v25 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v24);

    if (v22)
    {
      swift_bridgeObjectRelease(0xE900000000000065);
      v26 = 18.0;
    }
    else
    {
      v28 = _stringCompareWithSmolCheck(_:_:expecting:)(0x65726F6C707865, 0xE700000000000000, 0x74696C6C65746173, 0xE900000000000065, 0);
      swift_bridgeObjectRelease(0xE700000000000000);
      if ((v28 & 1) != 0)
        v26 = 18.0;
      else
        v26 = 17.0;
    }
  }
  else
  {
    v27 = String._bridgeToObjectiveC()();
    v25 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v27);

    v26 = 22.0;
  }
  v29 = objc_msgSend((id)objc_opt_self(_UIImageSymbolConfiguration), "configurationWithPointSize:weight:scale:", 5, 2, v26);
  ((void (*)(void))UIButton.configuration.getter)();
  v30 = type metadata accessor for UIButton.Configuration(0);
  v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48);
  if (v31(v19, 1, v30))
  {
    sub_10022CFA4((uint64_t)v19, (uint64_t)v11);
    UIButton.configuration.setter(v11);
    v32 = sub_100264E0C((uint64_t)v19);
  }
  else
  {
    v33 = v25;
    UIButton.Configuration.image.setter(v25);
    v32 = UIButton.configuration.setter(v19);
  }
  UIButton.configuration.getter(v32);
  if (v31(v17, 1, v30))
  {
    sub_10022CFA4((uint64_t)v17, (uint64_t)v11);
    UIButton.configuration.setter(v11);
    sub_100264E0C((uint64_t)v17);
  }
  else
  {
    v34 = v29;
    UIButton.Configuration.preferredSymbolConfigurationForImage.setter(v29);
    UIButton.configuration.setter(v17);
  }
  v35 = objc_msgSend(a1, "state");
  if ((v35 & 1) != 0 || (v35 = objc_msgSend(a1, "state"), (v35 & 4) != 0))
  {
    UIButton.configuration.getter(v35);
    if (!v31(v14, 1, v30))
    {
      v37 = objc_msgSend((id)objc_opt_self(UIColor), "tertiarySystemFillColor");
      v38 = (void (*)(_QWORD *, _QWORD))UIButton.Configuration.background.modify(v42);
      UIBackgroundConfiguration.backgroundColor.setter(v37);
      v38(v42, 0);
      goto LABEL_24;
    }
LABEL_22:
    sub_10022CFA4((uint64_t)v14, (uint64_t)v11);
    UIButton.configuration.setter(v11);

    sub_100264E0C((uint64_t)v14);
    return;
  }
  v14 = v41;
  UIButton.configuration.getter(v35);
  if (v31(v14, 1, v30))
    goto LABEL_22;
  v36 = v40;
  static UIBackgroundConfiguration.clear()();
  UIButton.Configuration.background.setter(v36);
LABEL_24:
  UIButton.configuration.setter(v14);

}

uint64_t sub_100023A38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  _QWORD aBlock[5];
  uint64_t v27;

  v7 = v3;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v25 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000555A8();
  v14 = (void *)static OS_dispatch_queue.main.getter();
  v15 = swift_allocObject(a1, 24, 7);
  *(_QWORD *)(v15 + 16) = v3;
  aBlock[4] = a2;
  v27 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = a3;
  v16 = _Block_copy(aBlock);
  v17 = v27;
  v18 = v7;
  v19 = swift_release(v17);
  static DispatchQoS.unspecified.getter(v19);
  aBlock[0] = _swiftEmptyArrayStorage;
  v20 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v21 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v22 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v21, v22, v8, v20);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v10, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v24);
}

uint64_t sub_100023C30()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unsigned __int8 *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  unsigned __int8 *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[5];
  uint64_t v26;

  v1 = type metadata accessor for DispatchWorkItemFlags(0);
  v24 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DispatchQoS(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v8 = type metadata accessor for Logger(0);
  sub_100056D88(v8, (uint64_t)qword_1005F5748);
  v9 = v0;
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v12 = 67109120;
    LODWORD(aBlock[0]) = v9[OBJC_IVAR____TtC6FindMy19FMConditionProvider_isNetworkUp];
    UnsafeMutableRawBufferPointer.copyMemory(from:)(aBlock, (char *)aBlock + 4);

    _os_log_impl((void *)&_mh_execute_header, v10, v11, "FMConditionProvider: isNetworkUp=%{BOOL}d", v12, 8u);
    swift_slowDealloc(v12, -1, -1);

  }
  else
  {

  }
  sub_1000555A8();
  v13 = (void *)static OS_dispatch_queue.main.getter();
  v14 = swift_allocObject(&unk_10055E368, 24, 7);
  *(_QWORD *)(v14 + 16) = v9;
  aBlock[4] = sub_1000401E0;
  v26 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_10055E380;
  v15 = _Block_copy(aBlock);
  v16 = v26;
  v17 = v9;
  v18 = swift_release(v16);
  static DispatchQoS.unspecified.getter(v18);
  aBlock[0] = _swiftEmptyArrayStorage;
  v19 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v20 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v21 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v20, v21, v1, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v3, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v3, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_100023F28(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  char v10;

  v2 = *a2;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*a1);
  v5 = v4;
  v6 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
  if (v3 == v6 && v5 == v7)
  {
    v10 = 1;
    v9 = v5;
  }
  else
  {
    v9 = v7;
    v10 = _stringCompareWithSmolCheck(_:_:expecting:)(v3, v5, v6, v7, 0);
  }
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v9);
  return v10 & 1;
}

uint64_t sub_100023FB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, _QWORD *);
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t result;
  char v51;
  char v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  char v58;
  char *v59;
  __n128 v60;
  char v61;
  char *v62;
  uint64_t v63;
  int EnumCaseMultiPayload;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(uint64_t, uint64_t, uint64_t);
  int v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  __n128 v103;
  char v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  id v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  __n128 v138;
  char *v139;
  __n128 v140;
  uint64_t v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  NSObject *v157;
  os_log_type_t v158;
  _BOOL4 v159;
  char *v160;
  uint8_t *v161;
  uint8_t *v162;
  void (*v163)(char *, uint64_t);
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  char *v169;
  uint64_t v170;
  char *v171;
  char *v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  _QWORD *v189;
  uint64_t v190;
  _BYTE v191[32];

  v2 = v1;
  v190 = a1;
  v3 = 0;
  v4 = sub_100053F2C((uint64_t *)&unk_1005D3350);
  __chkstk_darwin(v4);
  v171 = (char *)&v166 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FMFFriend(0);
  v175 = *(_QWORD *)(v6 - 8);
  v176 = v6;
  __chkstk_darwin(v6);
  v174 = (char *)&v166 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  __chkstk_darwin(v8);
  v169 = (char *)&v166 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100053F2C((uint64_t *)&unk_1005D6700);
  v11 = __chkstk_darwin(v10);
  v167 = (char *)&v166 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v172 = (char *)&v166 - v13;
  v14 = type metadata accessor for FMIPItem(0);
  v15 = *(_QWORD *)(v14 - 8);
  v179 = v14;
  v180 = v15;
  v16 = __chkstk_darwin(v14);
  v168 = (char *)&v166 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v178 = (char *)&v166 - v18;
  v189 = (_QWORD *)type metadata accessor for FMIPDevice(0);
  v186 = *(v189 - 1);
  v19 = __chkstk_darwin(v189);
  v173 = (char *)&v166 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v19);
  v181 = (char *)&v166 - v22;
  v23 = __chkstk_darwin(v21);
  v182 = (char *)&v166 - v24;
  __chkstk_darwin(v23);
  v187 = (char *)&v166 - v25;
  v26 = type metadata accessor for FMSelectedSection(0);
  v27 = __chkstk_darwin(v26);
  v177 = (uint64_t)&v166 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __chkstk_darwin(v27);
  v185 = (char *)&v166 - v30;
  v31 = __chkstk_darwin(v29);
  v183 = (uint64_t)&v166 - v32;
  v33 = __chkstk_darwin(v31);
  v188 = (uint64_t)&v166 - v34;
  __chkstk_darwin(v33);
  v36 = (char *)&v166 - v35;
  v184 = OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_devicesSubscription;
  v37 = *(void (**)(char *, _QWORD *))(v1
                                                + OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_devicesSubscription);
  if (v37)
  {
    v38 = v26;
    v39 = v1;
    v40 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_mediator) + 24);
    swift_beginAccess(v40 + 16, v191, 33, 0);
    swift_retain(v37);
    swift_retain(v40);
    v41 = sub_1001138E0((uint64_t *)(v40 + 16), (uint64_t)v37);
    v42 = v41;
    v2 = *(_QWORD *)(v40 + 16);
    if ((unint64_t)v2 >> 62)
    {
      if (v2 < 0)
        v164 = *(_QWORD *)(v40 + 16);
      else
        v164 = v2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(v40 + 16));
      v43 = _CocoaArrayWrapper.endIndex.getter(v164);
      swift_bridgeObjectRelease(v2);
      if (v43 >= v42)
        goto LABEL_4;
    }
    else
    {
      v43 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v43 >= v41)
      {
LABEL_4:
        v2 = v1;
        sub_1002006EC(v42, v43);
        swift_endAccess(v191);
        swift_release(v37);
        swift_release(v40);
        v26 = v38;
        goto LABEL_5;
      }
    }
    __break(1u);
    goto LABEL_64;
  }
LABEL_5:
  v170 = OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_peopleSubscription;
  v37 = *(void (**)(char *, _QWORD *))(v2
                                                + OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_peopleSubscription);
  if (v37)
  {
    v38 = v26;
    v39 = v2;
    v40 = *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_mediator) + 48);
    swift_beginAccess(v40 + 16, v191, 33, 0);
    swift_retain(v37);
    swift_retain(v40);
    v44 = sub_10005D57C((uint64_t *)(v40 + 16), (uint64_t)v37);
    v42 = v44;
    v2 = *(_QWORD *)(v40 + 16);
    if (!((unint64_t)v2 >> 62))
    {
      v45 = v2 & 0xFFFFFFFFFFFFF8;
      v46 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v46 >= v44)
      {
LABEL_8:
        v2 = v39;
        sub_10005D338(v42, v46);
        swift_endAccess(v191);
        swift_release(v37);
        swift_release(v40);
        v26 = v38;
        goto LABEL_9;
      }
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
LABEL_64:
    if (v2 < 0)
      v165 = v2;
    else
      v165 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v46 = _CocoaArrayWrapper.endIndex.getter(v165);
    swift_bridgeObjectRelease(v2);
    if (v46 >= v42)
      goto LABEL_8;
    goto LABEL_68;
  }
LABEL_9:
  swift_storeEnumTagMultiPayload(v36, v26, 10);
  v47 = v190;
  sub_100024F80(v190, (uint64_t)v36);
  v49 = v48;
  result = sub_100024F00((uint64_t)v36);
  if ((v49 & 1) != 0)
    return result;
  swift_storeEnumTagMultiPayload(v36, v26, 18);
  sub_100024F80(v47, (uint64_t)v36);
  v52 = v51;
  result = sub_100024F00((uint64_t)v36);
  if ((v52 & 1) != 0)
    return result;
  v53 = v188;
  sub_100024F3C(v47, v188);
  if (swift_getEnumCaseMultiPayload(v53, v26) == 7)
  {
    v55 = v186;
    v54 = v187;
    v56 = v189;
    v57 = (*(uint64_t (**)(char *, uint64_t, _QWORD *))(v186 + 32))(v187, v53, v189);
    v58 = FMIPDevice.hasLocation.getter(v57);
    v59 = v182;
    (*(void (**)(char *, char *, _QWORD *))(v55 + 16))(v182, v54, v56);
    if ((v58 & 1) != 0)
    {
      v61 = FMIPDevice.pairingIncomplete.getter(v60);
      v62 = v59;
      v37 = *(void (**)(char *, _QWORD *))(v55 + 8);
      v37(v62, v56);
      if ((v61 & 1) == 0)
      {
        v37(v187, v56);
        v47 = v190;
        goto LABEL_16;
      }
    }
    else
    {
      v88 = v59;
      v37 = *(void (**)(char *, _QWORD *))(v55 + 8);
      v37(v88, v56);
    }
    v36 = *(char **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_mediator) + 24);
    v89 = type metadata accessor for FMDevicesSubscription(0);
    v3 = swift_allocObject(v89, *(unsigned int *)(v89 + 48), *(unsigned __int16 *)(v89 + 52));
    v90 = v3 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
    *(_QWORD *)(v90 + 8) = 0;
    swift_unknownObjectWeakInit(v90);
    swift_retain(v36);
    v91 = (id)v2;
    UUID.init()(v91);
    v92 = v3 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
    *(_QWORD *)(v92 + 8) = &off_100546A90;
    swift_unknownObjectWeakAssign(v92, v91);

    swift_beginAccess(v36 + 16, v191, 33, 0);
    v93 = swift_retain(v3);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v93);
    v40 = *(_QWORD *)((*((_QWORD *)v36 + 2) & 0xFFFFFFFFFFFFFF8) + 0x10);
    v45 = *(_QWORD *)((*((_QWORD *)v36 + 2) & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v40 < v45 >> 1)
    {
LABEL_24:
      v94 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v40, v3);
      specialized Array._endMutation()(v94);
      swift_endAccess(v191);
      swift_release(v36);
      v95 = *(_QWORD *)(v2 + v184);
      *(_QWORD *)(v2 + v184) = v3;
      swift_release(v95);
      sub_1001105BC();
      sub_100113C20();
      v96 = v187;
      return ((uint64_t (*)(char *, _QWORD *))v37)(v96, v189);
    }
LABEL_69:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v45 > 1, v40 + 1, 1);
    goto LABEL_24;
  }
  sub_100024F00(v53);
  v56 = v189;
LABEL_16:
  v63 = v183;
  sub_100024F3C(v47, v183);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v63, v26);
  v65 = (uint64_t)v185;
  if (EnumCaseMultiPayload)
  {
    sub_100024F00(v63);
    goto LABEL_18;
  }
  v97 = v63 + *(int *)(sub_100053F2C(&qword_1005DE9B0) + 48);
  v98 = v186;
  v99 = v63;
  v100 = v181;
  (*(void (**)(char *, uint64_t, _QWORD *))(v186 + 32))(v181, v99, v56);
  v101 = sub_1000051EC(v97, (uint64_t *)&unk_1005D3AA0);
  LOBYTE(v97) = FMIPDevice.hasLocation.getter(v101);
  v102 = v173;
  (*(void (**)(char *, char *, _QWORD *))(v98 + 16))(v173, v100, v56);
  if ((v97 & 1) == 0)
  {
    v106 = v102;
    v37 = *(void (**)(char *, _QWORD *))(v98 + 8);
    v37(v106, v56);
    goto LABEL_30;
  }
  v104 = FMIPDevice.pairingIncomplete.getter(v103);
  v105 = v102;
  v37 = *(void (**)(char *, _QWORD *))(v98 + 8);
  v37(v105, v56);
  if ((v104 & 1) != 0)
  {
LABEL_30:
    v107 = *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_mediator) + 24);
    v108 = type metadata accessor for FMDevicesSubscription(0);
    v109 = swift_allocObject(v108, *(unsigned int *)(v108 + 48), *(unsigned __int16 *)(v108 + 52));
    v110 = v109 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
    *(_QWORD *)(v110 + 8) = 0;
    swift_unknownObjectWeakInit(v110);
    v111 = (id)v2;
    v112 = swift_retain(v107);
    UUID.init()(v112);
    v113 = v109 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
    *(_QWORD *)(v113 + 8) = &off_100546A90;
    swift_unknownObjectWeakAssign(v113, v111);

    swift_beginAccess(v107 + 16, v191, 33, 0);
    v114 = swift_retain(v109);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v114);
    v116 = *(_QWORD *)((*(_QWORD *)(v107 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
    v115 = *(_QWORD *)((*(_QWORD *)(v107 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v116 >= v115 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v115 > 1, v116 + 1, 1);
    v117 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v116, v109);
    specialized Array._endMutation()(v117);
    swift_endAccess(v191);
    swift_release(v107);
    v118 = *(_QWORD *)(v2 + v184);
    *(_QWORD *)(v2 + v184) = v109;
    swift_release(v118);
    sub_1001105BC();
    sub_100113C20();
    v96 = v181;
    return ((uint64_t (*)(char *, _QWORD *))v37)(v96, v189);
  }
  v37(v181, v56);
  v47 = v190;
  v65 = (uint64_t)v185;
LABEL_18:
  sub_100024F3C(v47, v65);
  if (swift_getEnumCaseMultiPayload(v65, v26) != 3)
  {
    sub_100024F00(v65);
    goto LABEL_35;
  }
  v66 = v179;
  v67 = v180;
  v68 = v178;
  v189 = *(_QWORD **)(v180 + 32);
  v69.n128_f64[0] = ((double (*)(char *, uint64_t, uint64_t))v189)(v178, v65, v179);
  v70 = (uint64_t)v172;
  FMIPItem.location.getter(v69);
  v71 = type metadata accessor for FMIPLocation(0);
  v72 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 48);
  v73 = v72(v70, 1, v71);
  sub_1000051EC(v70, (uint64_t *)&unk_1005D6700);
  if (v73 != 1)
  {
    (*(void (**)(char *, uint64_t))(v67 + 8))(v68, v66);
    v47 = v190;
LABEL_35:
    v119 = v177;
    sub_100024F3C(v47, v177);
    if (swift_getEnumCaseMultiPayload(v119, v26) == 2)
    {
      v120 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v175 + 32))(v174, v119, v176);
      v121 = (uint64_t)v171;
      FMFFriend.location.getter(v120);
      v122 = type metadata accessor for FMFLocation(0);
      v123 = *(_QWORD *)(v122 - 8);
      v124 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v123 + 48))(v121, 1, v122);
      if ((_DWORD)v124 == 1)
      {
        sub_1000051EC(v121, (uint64_t *)&unk_1005D3350);
LABEL_42:
        v126 = *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_mediator) + 48);
        v127 = type metadata accessor for FMPeopleSubscription(0);
        v128 = swift_allocObject(v127, *(unsigned int *)(v127 + 48), *(unsigned __int16 *)(v127 + 52));
        v129 = v128 + OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_subscriber;
        *(_QWORD *)(v129 + 8) = 0;
        swift_unknownObjectWeakInit(v129);
        v130 = (id)v2;
        v131 = swift_retain(v126);
        UUID.init()(v131);
        v132 = v128 + OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_subscriber;
        *(_QWORD *)(v132 + 8) = &off_100546A28;
        swift_unknownObjectWeakAssign(v132, v130);

        swift_beginAccess(v126 + 16, v191, 33, 0);
        v133 = swift_retain(v128);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v133);
        v135 = *(_QWORD *)((*(_QWORD *)(v126 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
        v134 = *(_QWORD *)((*(_QWORD *)(v126 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v135 >= v134 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v134 > 1, v135 + 1, 1);
        v136 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v135, v128);
        specialized Array._endMutation()(v136);
        swift_endAccess(v191);
        swift_release(v126);
        v137 = *(_QWORD *)(v2 + v170);
        *(_QWORD *)(v2 + v170) = v128;
        swift_release(v137);
        sub_100111644();
        sub_100113C20();
        return (*(uint64_t (**)(char *, uint64_t))(v175 + 8))(v174, v176);
      }
      v125 = (void *)FMFLocation.location.getter(v124);
      (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v121, v122);
      if (!v125)
        goto LABEL_42;

      (*(void (**)(char *, uint64_t))(v175 + 8))(v174, v176);
    }
    else
    {
      sub_100024F00(v119);
    }
    return sub_100005228();
  }
  v74 = OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_mediator;
  v75 = (char *)v2;
  v76 = *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_mediator) + 24);
  v77 = swift_retain(v76);
  v78 = FMIPItem.identifier.getter(v77);
  v80 = v79;
  v81 = FMIPManager.items.getter(v78);
  swift_bridgeObjectRetain(v80);
  v82 = sub_100114030(v81, v78, v80);
  swift_bridgeObjectRelease(v81);
  v83 = swift_bridgeObjectRelease(v80);
  if (v82[2])
  {
    v85 = v179;
    v84 = v180;
    v86 = (uint64_t)v169;
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v180 + 16))(v169, (unint64_t)v82+ ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80)), v179, v83);
    v87 = 0;
  }
  else
  {
    v87 = 1;
    v85 = v179;
    v84 = v180;
    v86 = (uint64_t)v169;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v84 + 56))(v86, v87, 1, v85);
  swift_bridgeObjectRelease(v80);
  swift_bridgeObjectRelease(v82);
  v138 = swift_release(v76);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v84 + 48))(v86, 1, v85, v138) == 1)
  {
    sub_1000051EC(v86, (uint64_t *)&unk_1005D3AA0);
LABEL_50:
    v143 = *(_QWORD *)(*(_QWORD *)&v75[v74] + 24);
    v144 = type metadata accessor for FMDevicesSubscription(0);
    v145 = swift_allocObject(v144, *(unsigned int *)(v144 + 48), *(unsigned __int16 *)(v144 + 52));
    v146 = v145 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
    *(_QWORD *)(v146 + 8) = 0;
    swift_unknownObjectWeakInit(v146);
    v147 = v75;
    v148 = swift_retain(v143);
    UUID.init()(v148);
    v149 = v145 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
    *(_QWORD *)(v149 + 8) = &off_100546A90;
    swift_unknownObjectWeakAssign(v149, v147);

    swift_beginAccess(v143 + 16, v191, 33, 0);
    v150 = swift_retain(v145);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v150);
    v152 = *(_QWORD *)((*(_QWORD *)(v143 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
    v151 = *(_QWORD *)((*(_QWORD *)(v143 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v152 >= v151 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v151 > 1, v152 + 1, 1);
    v153 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v152, v145);
    specialized Array._endMutation()(v153);
    swift_endAccess(v191);
    swift_release(v143);
    v154 = *(_QWORD *)&v75[v184];
    *(_QWORD *)&v75[v184] = v145;
    swift_release(v154);
    sub_100110E6C();
    sub_100113C20();
    return (*(uint64_t (**)(char *, uint64_t))(v180 + 8))(v178, v85);
  }
  v139 = v168;
  v140.n128_f64[0] = ((double (*)(char *, uint64_t, uint64_t))v189)(v168, v86, v85);
  v141 = (uint64_t)v167;
  FMIPItem.location.getter(v140);
  v142 = v72(v141, 1, v71);
  sub_1000051EC(v141, (uint64_t *)&unk_1005D6700);
  if (v142 == 1)
  {
    (*(void (**)(char *, uint64_t))(v84 + 8))(v139, v85);
    goto LABEL_50;
  }
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v155 = type metadata accessor for Logger(0);
  v156 = sub_100056D88(v155, (uint64_t)qword_1005F5748);
  v157 = Logger.logObject.getter(v156);
  v158 = static os_log_type_t.default.getter(v157);
  v159 = os_log_type_enabled(v157, v158);
  v160 = v178;
  if (v159)
  {
    v161 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v161 = 0;
    _os_log_impl((void *)&_mh_execute_header, v157, v158, "FMNoLocationViewController: Refreshed selected item has location. Hiding", v161, 2u);
    v162 = v161;
    v84 = v180;
    swift_slowDealloc(v162, -1, -1);
  }

  sub_100005228();
  v163 = *(void (**)(char *, uint64_t))(v84 + 8);
  v163(v139, v85);
  return ((uint64_t (*)(char *, uint64_t))v163)(v160, v85);
}

uint64_t sub_100024F00(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FMSelectedSection(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100024F3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMSelectedSection(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_100024F80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD v42[2];
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v64 = a1;
  v65 = a2;
  v57 = type metadata accessor for FMIPUnknownItem(0);
  v54 = *(_QWORD *)(v57 - 8);
  v2 = __chkstk_darwin(v57);
  v49 = (char *)v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v48 = (char *)v42 - v4;
  v5 = type metadata accessor for FMIPItem(0);
  v60 = *(_QWORD *)(v5 - 8);
  v61 = v5;
  v6 = __chkstk_darwin(v5);
  v55 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v56 = (char *)v42 - v8;
  v53 = type metadata accessor for FMFFriend(0);
  v50 = *(_QWORD *)(v53 - 8);
  v9 = __chkstk_darwin(v53);
  v47 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v46 = (char *)v42 - v11;
  v12 = type metadata accessor for FMIPDevice(0);
  v13 = *(_QWORD *)(v12 - 8);
  v62 = v12;
  v63 = v13;
  v14 = __chkstk_darwin(v12);
  v51 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v52 = (char *)v42 - v16;
  v43 = sub_100053F2C(&qword_1005DE9B0);
  v17 = __chkstk_darwin(v43);
  v44 = (char *)v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v45 = (char *)v42 - v20;
  v21 = __chkstk_darwin(v19);
  v42[1] = (char *)v42 - v22;
  __chkstk_darwin(v21);
  v42[0] = (char *)v42 - v23;
  v24 = type metadata accessor for FMSelectedSection(0);
  v25 = __chkstk_darwin(v24);
  v59 = (char *)v42 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v25);
  v58 = (char *)v42 - v28;
  v29 = __chkstk_darwin(v27);
  v30 = __chkstk_darwin(v29);
  v31 = __chkstk_darwin(v30);
  v32 = __chkstk_darwin(v31);
  v33 = __chkstk_darwin(v32);
  v34 = __chkstk_darwin(v33);
  __chkstk_darwin(v34);
  v35 = sub_100053F2C(&qword_1005DAAF8);
  v36 = __chkstk_darwin(v35);
  v38 = (char *)v42 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = (uint64_t)&v38[*(int *)(v36 + 48)];
  sub_10004FC74(v64, (uint64_t)v38, type metadata accessor for FMSelectedSection);
  v40 = v65;
  v65 = v39;
  sub_10004FC74(v40, v39, type metadata accessor for FMSelectedSection);
  v41 = (char *)sub_100025384 + 4 * word_100487C6C[swift_getEnumCaseMultiPayload(v38, v24)];
  __asm { BR              X10 }
}

uint64_t sub_100025384()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);

  sub_10004FC74(v1, v2, type metadata accessor for FMSelectedSection);
  v4 = *(_QWORD *)(v3 - 96);
  if (swift_getEnumCaseMultiPayload(v4, v0))
  {
    sub_1000051EC(v2, &qword_1005DE9B0);
    sub_1000051EC(v1, &qword_1005DAAF8);
    v5 = 0;
  }
  else
  {
    v7 = *(_QWORD *)(v3 - 272);
    v8 = *(int *)(v7 + 48);
    v9 = *(_QWORD *)(v3 - 288);
    v10 = v9 + v8;
    *(_QWORD *)(v3 - 104) = v9 + v8;
    v11 = v2 + v8;
    v13 = *(_QWORD *)(v3 - 120);
    v12 = *(_QWORD *)(v3 - 112);
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32);
    v14(v9, v2, v13);
    sub_1000E5AE4(v11, v10);
    v15 = *(int *)(v7 + 48);
    v16 = *(_QWORD *)(v3 - 280);
    v17 = v16 + v15;
    *(_QWORD *)(v3 - 128) = v16 + v15;
    v18 = v4 + v15;
    v14(v16, v4, v13);
    sub_1000E5AE4(v18, v17);
    v19 = *(_QWORD *)(v3 - 256);
    v20 = v19 + *(int *)(v7 + 48);
    v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
    v21(v19, v9, v13);
    sub_1000E5B2C(*(_QWORD *)(v3 - 104), v20);
    v22 = *(_QWORD *)(v3 - 264);
    v23 = v22 + *(int *)(v7 + 48);
    v21(v22, v16, v13);
    sub_1000E5B2C(*(_QWORD *)(v3 - 128), v23);
    v5 = sub_1001F3F8C(v19, v20, v22, v23);
    sub_1000051EC(v16, &qword_1005DE9B0);
    sub_1000051EC(v9, &qword_1005DE9B0);
    sub_1000051EC(v23, (uint64_t *)&unk_1005D3AA0);
    v24 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 112) + 8);
    v24(v22, v13);
    sub_1000051EC(v20, (uint64_t *)&unk_1005D3AA0);
    v24(v19, v13);
    sub_10004FCB8(v1, type metadata accessor for FMSelectedSection);
  }
  return v5 & 1;
}

void sub_100025B5C(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  __n128 v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  void *v32;
  uint64_t aBlock[5];
  uint64_t v34;
  _QWORD v35[2];
  __int128 v36;
  __int128 v37;

  v2 = v1;
  v4 = type metadata accessor for Notification(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v8 = type metadata accessor for Logger(0);
  sub_100056D88(v8, (uint64_t)qword_1005F5748);
  v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v31 = a1;
    v12 = swift_slowAlloc(12, -1);
    v32 = v1;
    v13 = (uint8_t *)v12;
    v14 = swift_slowAlloc(32, -1);
    aBlock[0] = v14;
    *(_DWORD *)v13 = 136315138;
    *(_QWORD *)&v36 = Notification.userInfo.getter();
    v15 = sub_100053F2C((uint64_t *)&unk_1005E1180);
    v16 = String.init<A>(describing:)(&v36, v15);
    v18 = v17;
    *(_QWORD *)&v36 = sub_100056DA0(v16, v17, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, (char *)&v36 + 8);
    v19 = swift_bridgeObjectRelease(v18);
    (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v7, v4, v19);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "FMMapViewController: cardPositionChanged %s", v13, 0xCu);
    swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v14, -1, -1);
    v20 = v13;
    v2 = v32;
    swift_slowDealloc(v20, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

  v21 = Notification.userInfo.getter();
  if (v21)
  {
    v22 = v21;
    v35[0] = 0x6E6F697469736F70;
    v35[1] = 0xE800000000000000;
    AnyHashable.init<A>(_:)(aBlock, v35, &type metadata for String, &protocol witness table for String);
    if (*(_QWORD *)(v22 + 16) && (v23 = sub_100025F20((uint64_t)aBlock), (v24 & 1) != 0))
    {
      sub_100056E70(*(_QWORD *)(v22 + 56) + 32 * v23, (uint64_t)&v36);
    }
    else
    {
      v36 = 0u;
      v37 = 0u;
    }
    swift_bridgeObjectRelease(v22);
    sub_100025EEC((uint64_t)aBlock);
    if (*((_QWORD *)&v37 + 1))
    {
      if ((swift_dynamicCast(v35, &v36, (char *)&type metadata for Any + 8, &type metadata for CGFloat, 6) & 1) != 0)
      {
        v25 = v35[0];
        v26 = (void *)objc_opt_self(UIView);
        v27 = swift_allocObject(&unk_10055D360, 32, 7);
        *(_QWORD *)(v27 + 16) = v2;
        *(_QWORD *)(v27 + 24) = v25;
        aBlock[4] = (uint64_t)sub_10003FFE4;
        v34 = v27;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_100037DF8;
        aBlock[3] = (uint64_t)&unk_10055D378;
        v28 = _Block_copy(aBlock);
        v29 = v34;
        v30 = v2;
        swift_release(v29);
        objc_msgSend(v26, "animateWithDuration:animations:", v28, 0.2);
        _Block_release(v28);
      }
    }
    else
    {
      sub_1000051EC((uint64_t)&v36, &qword_1005D3AB0);
    }
  }
}

uint64_t sub_100025EEC(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for AnyHashable - 1) + 8))();
  return a1;
}

unint64_t sub_100025F20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::Int v4;

  v2 = v1;
  v4 = AnyHashable._rawHashValue(seed:)(*(_QWORD *)(v2 + 40));
  return sub_100025F50(a1, v4);
}

unint64_t sub_100025F50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_100026014(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = static AnyHashable.== infix(_:_:)(v9, a1);
      sub_100025EEC((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_100026014(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for AnyHashable - 1) + 16))(a2, a1);
  return a2;
}

void sub_100026050()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  double v8;
  double top;
  double v10;
  double left;
  double v12;
  double bottom;
  double v14;
  double right;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  Class isa;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  Class v39;
  uint64_t v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  Class v56;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy19FMCardContainerView_bluredBackground];
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy19FMCardContainerView_darkeningView];
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMy19FMCardContainerView_grabber];
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = objc_msgSend(v2, "contentView");
  v6 = objc_msgSend(v1, "superview");
  if (v6)
  {
    v7 = v6;
    objc_msgSend(v6, "layoutMargins");
    top = v8;
    left = v10;
    bottom = v12;
    right = v14;

  }
  else
  {
    top = UIEdgeInsetsZero.top;
    left = UIEdgeInsetsZero.left;
    bottom = UIEdgeInsetsZero.bottom;
    right = UIEdgeInsetsZero.right;
  }
  objc_msgSend(v5, "setLayoutMargins:", top, left, bottom, right);

  v55 = (id)objc_opt_self(NSLayoutConstraint);
  v54 = sub_100053F2C(&qword_1005D2F10);
  v16 = swift_allocObject(v54, 48, 7);
  *(_OWORD *)(v16 + 16) = xmmword_1004820B0;
  v17 = objc_msgSend(v4, "topAnchor");
  v18 = objc_msgSend(v1, "topAnchor");
  v19 = objc_msgSend(v17, "constraintEqualToAnchor:constant:", v18, _UISheetGrabberTopSpacing);

  *(_QWORD *)(v16 + 32) = v19;
  v20 = objc_msgSend(v4, "centerXAnchor");
  v21 = objc_msgSend(v1, "centerXAnchor");
  v22 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

  *(_QWORD *)(v16 + 40) = v22;
  specialized Array._endMutation()(v23);
  sub_100048C64();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v55, "activateConstraints:", isa, swift_bridgeObjectRelease(v16).n128_f64[0]);

  v25 = swift_allocObject(v54, 64, 7);
  *(_OWORD *)(v25 + 16) = xmmword_100481720;
  v26 = objc_msgSend(v3, "topAnchor");
  v27 = objc_msgSend(v2, "topAnchor");
  v28 = objc_msgSend(v26, "constraintEqualToAnchor:", v27);

  *(_QWORD *)(v25 + 32) = v28;
  v29 = objc_msgSend(v3, "bottomAnchor");
  v30 = objc_msgSend(v2, "bottomAnchor");
  v31 = objc_msgSend(v29, "constraintEqualToAnchor:", v30);

  *(_QWORD *)(v25 + 40) = v31;
  v32 = objc_msgSend(v3, "leadingAnchor");
  v33 = objc_msgSend(v2, "leadingAnchor");
  v34 = objc_msgSend(v32, "constraintEqualToAnchor:", v33);

  *(_QWORD *)(v25 + 48) = v34;
  v35 = objc_msgSend(v3, "trailingAnchor");
  v36 = objc_msgSend(v2, "trailingAnchor");
  v37 = objc_msgSend(v35, "constraintEqualToAnchor:", v36);

  *(_QWORD *)(v25 + 56) = v37;
  specialized Array._endMutation()(v38);
  v39 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v55, "activateConstraints:", v39, swift_bridgeObjectRelease(v25).n128_f64[0]);

  v40 = swift_allocObject(v54, 64, 7);
  *(_OWORD *)(v40 + 16) = xmmword_100481720;
  v41 = objc_msgSend(v2, "topAnchor");
  v42 = objc_msgSend(v1, "topAnchor");
  v43 = objc_msgSend(v41, "constraintEqualToAnchor:", v42);

  *(_QWORD *)(v40 + 32) = v43;
  v44 = objc_msgSend(v2, "bottomAnchor");
  v45 = objc_msgSend(v1, "bottomAnchor");
  v46 = objc_msgSend(v44, "constraintEqualToAnchor:", v45);

  *(_QWORD *)(v40 + 40) = v46;
  v47 = objc_msgSend(v2, "leadingAnchor");
  v48 = objc_msgSend(v1, "leadingAnchor");
  v49 = objc_msgSend(v47, "constraintEqualToAnchor:", v48);

  *(_QWORD *)(v40 + 48) = v49;
  v50 = objc_msgSend(v2, "trailingAnchor");
  v51 = objc_msgSend(v1, "trailingAnchor");
  v52 = objc_msgSend(v50, "constraintEqualToAnchor:", v51);

  *(_QWORD *)(v40 + 56) = v52;
  specialized Array._endMutation()(v53);
  v56 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v55, "activateConstraints:", v56, swift_bridgeObjectRelease(v40).n128_f64[0]);

}

id sub_100026698()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id result;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  void *v16;
  double v17;
  double v18;
  double v19;

  v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy19FMMapViewController_mapView];
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = objc_msgSend(v2, "horizontalSizeClass");

  if (v3 == (id)2)
    sub_1003571BC();
  else
    sub_1000268BC();
  objc_msgSend(v1, "setLayoutMargins:");
  v4 = objc_msgSend(v0, "traitCollection");
  v5 = objc_msgSend(v4, "horizontalSizeClass");

  if (v5 == (id)2)
    sub_1003571BC();
  else
    sub_1000268BC();
  objc_msgSend(v1, "_setEdgeInsets:");
  v6 = objc_msgSend(v0, "traitCollection");
  v7 = objc_msgSend(v6, "horizontalSizeClass");

  result = objc_msgSend(v0, "view");
  v9 = result;
  if (v7 == (id)2)
  {
    if (result)
    {
      objc_msgSend(result, "safeAreaInsets");
      v11 = v10;

      v12 = v11 + 40.0;
      v13 = -50.0;
      return objc_msgSend(v1, "_setCompassInsets:", v12, 0.0, 0.0, v13);
    }
    __break(1u);
    goto LABEL_20;
  }
  if (!result)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  objc_msgSend(result, "safeAreaInsets");
  v15 = v14;

  result = objc_msgSend(v0, "view");
  if (result)
  {
    v16 = result;
    if (v15 > 40.0)
      v17 = 70.0;
    else
      v17 = 90.0;
    objc_msgSend(result, "safeAreaInsets");
    v19 = v18;

    if (qword_1005D1E80 != -1)
      swift_once(&qword_1005D1E80, sub_100008974);
    v12 = v17 + v19;
    v13 = -*(double *)&qword_1005F5978;
    return objc_msgSend(v1, "_setCompassInsets:", v12, 0.0, 0.0, v13);
  }
LABEL_21:
  __break(1u);
  return result;
}

void sub_1000268BC()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;

  if (qword_1005D1F30 != -1)
    swift_once(&qword_1005D1F30, sub_10005F428);
  v1 = objc_msgSend(v0, "view");
  if (!v1)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v2 = v1;
  objc_msgSend(v1, "frame");

  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v3 = objc_msgSend(v0, "view");
  if (!v3)
    goto LABEL_11;
  v4 = v3;
  objc_msgSend(v3, "safeAreaInsets");

  v5 = objc_msgSend(v0, "view");
  if (!v5)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v6 = v5;
  objc_msgSend(v5, "safeAreaInsets");

  v7 = objc_msgSend(v0, "view");
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, "safeAreaInsets");

    return;
  }
LABEL_13:
  __break(1u);
}

void sub_100026A7C()
{
  char *v0;
  void *v1;
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  NSString v10;
  objc_super v11;

  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for FMBatteryView();
  objc_msgSendSuper2(&v11, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy13FMBatteryView_outlineView];
  objc_msgSend(v0, "bounds");
  objc_msgSend(v1, "setFrame:");
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy13FMBatteryView_levelView], "setAutoresizingMask:", 20);
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy13FMBatteryView_chargingView];
  objc_msgSend(v0, "bounds");
  v4 = v3;
  v6 = v5;
  if (qword_1005D1FA0 != -1)
    swift_once(&qword_1005D1FA0, sub_10005EEBC);
  v7 = v4 + v6 * 0.5 - *(double *)&qword_1005F5E60;
  objc_msgSend(v0, "bounds");
  objc_msgSend(v2, "setCenter:", v7, v9 + v8 * 0.5);
  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setAccessibilityIdentifier:", v10);

}

void sub_100026BD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = v1;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v4 = type metadata accessor for Logger(0);
  sub_100056D88(v4, (uint64_t)qword_1005F5748);
  swift_bridgeObjectRetain(a1);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v8 = 134217984;
    v19 = *(_QWORD *)(a1 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20);
    swift_bridgeObjectRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMDevicesProvider: devicesDidChange %ld", v8, 0xCu);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease(a1);
  }
  swift_beginAccess(v2 + 16, &v19, 0, 0);
  v9 = *(_QWORD *)(v2 + 16);
  if (!((unint64_t)v9 >> 62))
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(v2 + 16));
    if (v10)
      goto LABEL_8;
LABEL_21:
    swift_bridgeObjectRelease(v9);
    return;
  }
  if (v9 < 0)
    v18 = *(_QWORD *)(v2 + 16);
  else
    v18 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(v2 + 16));
  v10 = _CocoaArrayWrapper.endIndex.getter(v18);
  if (!v10)
    goto LABEL_21;
LABEL_8:
  if (v10 >= 1)
  {
    for (i = 0; i != v10; ++i)
    {
      if ((v9 & 0xC000000000000001) != 0)
      {
        v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v9);
      }
      else
      {
        v15 = *(_QWORD *)(v9 + 8 * i + 32);
        swift_retain(v15);
      }
      v16 = v15 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
      Strong = swift_unknownObjectWeakLoadStrong(v15 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber);
      if (Strong)
      {
        v12 = Strong;
        v13 = *(_QWORD *)(v16 + 8);
        ObjectType = swift_getObjectType(Strong);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 24))(v2, a1, ObjectType, v13);
        swift_release(v15);
        swift_unknownObjectRelease(v12);
      }
      else
      {
        swift_release(v15);
      }
    }
    goto LABEL_21;
  }
  __break(1u);
}

Swift::Int sub_100026E18(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  Swift::Int v6;
  _QWORD v8[9];

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  Hasher.init(_seed:)(v8, a1);
  String.hash(into:)(v8, v3, v5);
  v6 = Hasher._finalize()();
  swift_bridgeObjectRelease(v5);
  return v6;
}

char *sub_100026E88(_QWORD *a1)
{
  char *v1;
  char *v2;
  char *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  Swift::String v9;
  Swift::String v10;
  void *object;
  NSString v12;
  void *v13;
  id v14;
  id v15;
  NSString v16;
  id v17;
  id v18;
  Swift::String v19;
  Swift::String v20;
  void *v21;
  NSString v22;
  id v23;
  id v24;
  NSString v25;
  id v26;
  uint64_t v27;
  id v28;
  Swift::String v29;
  Swift::String v30;
  void *v31;
  NSString v32;
  id v33;
  id v34;
  NSString v35;
  id v36;
  uint64_t v37;
  id v38;
  Swift::String_optional v39;
  Swift::String v40;
  Swift::String v41;
  void *v42;
  NSString v43;
  id v44;
  id v45;
  NSString v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  NSString v87;
  void *v88;
  id v89;
  id v90;
  Swift::String v91;
  Swift::String v92;
  void *v93;
  NSString v94;
  void *v95;
  id v96;
  id v97;
  Swift::String v98;
  Swift::String v99;
  void *v100;
  NSString v101;
  void *v102;
  id v103;
  id v104;
  Swift::String v105;
  Swift::String v106;
  void *v107;
  NSString v108;
  id v109;
  id v110;
  Swift::String_optional v111;
  Swift::String v112;
  Swift::String v113;
  void *v114;
  NSString v115;
  uint64_t v117;
  uint64_t v119;
  unint64_t v120;
  objc_super v121;
  Swift::String v122;
  Swift::String v123;
  Swift::String v124;
  Swift::String v125;
  Swift::String v126;
  Swift::String v127;
  Swift::String v128;
  Swift::String v129;

  v2 = v1;
  v3 = &v1[OBJC_IVAR____TtC6FindMy8FMTabBar_contentDelegate];
  *((_QWORD *)v3 + 1) = 0;
  swift_unknownObjectWeakInit(v3, 0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy8FMTabBar_peopleSubscription] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy8FMTabBar_devicesSubscription] = 0;
  v4 = &v1[OBJC_IVAR____TtC6FindMy8FMTabBar_selectionSubscription];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  v5 = OBJC_IVAR____TtC6FindMy8FMTabBar_peopleTab;
  v6 = v1;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v7 = (void *)objc_opt_self(NSBundle);
  v8 = objc_msgSend(v7, "mainBundle");
  v122._countAndFlagsBits = 0xD00000000000001CLL;
  v122._object = (void *)0x80000001004B2E20;
  v9._countAndFlagsBits = 0x545F454C504F4550;
  v9._object = (void *)0xEA00000000004241;
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v122)._object;

  v12 = String._bridgeToObjectiveC()();
  v13 = (void *)objc_opt_self(UIImage);
  v14 = objc_msgSend(v13, "_systemImageNamed:", v12);

  v15 = objc_allocWithZone((Class)UITabBarItem);
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v15, "initWithTitle:image:selectedImage:", v16, v14, 0, swift_bridgeObjectRelease(object).n128_f64[0]);

  *(_QWORD *)&v2[v5] = v17;
  v117 = OBJC_IVAR____TtC6FindMy8FMTabBar_devicesTab;
  _StringGuts.grow(_:)(20);
  v18 = objc_msgSend(v7, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
  v123._countAndFlagsBits = 0xD00000000000001DLL;
  v123._object = (void *)0x80000001004B2E40;
  v19._countAndFlagsBits = 0x5F53454349564544;
  v19._object = (void *)0xEB00000000424154;
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  v21 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, (Swift::String_optional)0, (NSBundle)v18, v20, v123)._object;

  v22 = String._bridgeToObjectiveC()();
  v23 = objc_msgSend(v13, "_systemImageNamed:", v22);

  v24 = objc_allocWithZone((Class)UITabBarItem);
  v25 = String._bridgeToObjectiveC()();
  v26 = objc_msgSend(v24, "initWithTitle:image:selectedImage:", v25, v23, 0, swift_bridgeObjectRelease(v21).n128_f64[0]);

  *(_QWORD *)&v6[v117] = v26;
  v27 = OBJC_IVAR____TtC6FindMy8FMTabBar_meTab;
  v119 = 0;
  v120 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v28 = objc_msgSend(v7, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
  v124._object = (void *)0x80000001004B2E80;
  v29._countAndFlagsBits = 0x4241545F454DLL;
  v29._object = (void *)0xE600000000000000;
  v30._countAndFlagsBits = 0;
  v30._object = (void *)0xE000000000000000;
  v124._countAndFlagsBits = 0xD000000000000018;
  v31 = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, (Swift::String_optional)0, (NSBundle)v28, v30, v124)._object;

  v32 = String._bridgeToObjectiveC()();
  v33 = objc_msgSend(v13, "_systemImageNamed:", v32);

  v34 = objc_allocWithZone((Class)UITabBarItem);
  v35 = String._bridgeToObjectiveC()();
  v36 = objc_msgSend(v34, "initWithTitle:image:selectedImage:", v35, v33, 0, swift_bridgeObjectRelease(v31).n128_f64[0]);

  *(_QWORD *)&v6[v27] = v36;
  v37 = OBJC_IVAR____TtC6FindMy8FMTabBar_itemsTab;
  v38 = objc_msgSend(v7, "mainBundle");
  v39.value._countAndFlagsBits = 0xD000000000000013;
  v125._object = (void *)0x80000001004A5660;
  v39.value._object = (void *)0x80000001004A5640;
  v40._countAndFlagsBits = 0x41545F534D455449;
  v40._object = (void *)0xE900000000000042;
  v41._countAndFlagsBits = 0;
  v41._object = (void *)0xE000000000000000;
  v125._countAndFlagsBits = 0xD000000000000018;
  v42 = NSLocalizedString(_:tableName:bundle:value:comment:)(v40, v39, (NSBundle)v38, v41, v125)._object;

  v43 = String._bridgeToObjectiveC()();
  v44 = objc_msgSend(v13, "_systemImageNamed:", v43);

  v45 = objc_allocWithZone((Class)UITabBarItem);
  v46 = String._bridgeToObjectiveC()();
  v47 = objc_msgSend(v45, "initWithTitle:image:selectedImage:", v46, v44, 0, swift_bridgeObjectRelease(v42).n128_f64[0]);

  *(_QWORD *)&v6[v37] = v47;
  *(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy8FMTabBar____lazy_storage___largeContentInteraction] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy8FMTabBar_mediator] = a1;
  swift_retain(a1);

  v121.receiver = v6;
  v121.super_class = (Class)type metadata accessor for FMTabBar();
  v48 = objc_msgSendSuper2(&v121, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_10001B764();
  v49 = a1[6];
  v50 = type metadata accessor for FMPeopleSubscription(0);
  v51 = swift_allocObject(v50, *(unsigned int *)(v50 + 48), *(unsigned __int16 *)(v50 + 52));
  v52 = v51 + OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_subscriber;
  *(_QWORD *)(v52 + 8) = 0;
  swift_unknownObjectWeakInit(v52, 0);
  v53 = (char *)v48;
  v54 = swift_retain(v49);
  UUID.init()(v54);
  v55 = v51 + OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_subscriber;
  *(_QWORD *)(v55 + 8) = &off_10054F3E8;
  swift_unknownObjectWeakAssign(v55, v53);
  swift_beginAccess(v49 + 16, &v119, 33, 0);
  v56 = swift_retain(v51);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v56);
  v58 = *(_QWORD *)((*(_QWORD *)(v49 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v57 = *(_QWORD *)((*(_QWORD *)(v49 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v58 >= v57 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v57 > 1, v58 + 1, 1);
  v59 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v58, v51);
  specialized Array._endMutation()(v59);
  swift_endAccess(&v119);
  swift_release(v49);

  v60 = *(_QWORD *)&v53[OBJC_IVAR____TtC6FindMy8FMTabBar_peopleSubscription];
  *(_QWORD *)&v53[OBJC_IVAR____TtC6FindMy8FMTabBar_peopleSubscription] = v51;
  swift_release(v60);
  v61 = a1[7];
  v62 = type metadata accessor for FMSelectionSubscription(0);
  v63 = swift_allocObject(v62, *(unsigned int *)(v62 + 48), *(unsigned __int16 *)(v62 + 52));
  v64 = v63 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
  *(_QWORD *)(v64 + 8) = 0;
  swift_unknownObjectWeakInit(v64, 0);
  v65 = v53;
  v66 = swift_retain(v61);
  UUID.init()(v66);
  v67 = v63 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
  *(_QWORD *)(v67 + 8) = &off_10054F320;
  swift_unknownObjectWeakAssign(v67, v65);
  swift_beginAccess(v61 + 16, &v119, 33, 0);
  v68 = swift_retain(v63);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v68);
  v70 = *(_QWORD *)((*(_QWORD *)(v61 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v69 = *(_QWORD *)((*(_QWORD *)(v61 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v70 >= v69 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v69 > 1, v70 + 1, 1);
  v71 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v70, v63);
  specialized Array._endMutation()(v71);
  swift_endAccess(&v119);
  swift_release(v61);

  v72 = (uint64_t *)&v65[OBJC_IVAR____TtC6FindMy8FMTabBar_selectionSubscription];
  v73 = *(_QWORD *)&v65[OBJC_IVAR____TtC6FindMy8FMTabBar_selectionSubscription];
  *v72 = v63;
  v72[1] = (uint64_t)&off_100557258;
  swift_unknownObjectRelease(v73);
  v74 = a1[3];
  v75 = type metadata accessor for FMDevicesSubscription(0);
  v76 = swift_allocObject(v75, *(unsigned int *)(v75 + 48), *(unsigned __int16 *)(v75 + 52));
  v77 = v76 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
  *(_QWORD *)(v77 + 8) = 0;
  swift_unknownObjectWeakInit(v77, 0);
  v78 = v65;
  v79 = swift_retain(v74);
  UUID.init()(v79);
  v80 = v76 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
  *(_QWORD *)(v80 + 8) = &off_10054F348;
  swift_unknownObjectWeakAssign(v80, v78);
  swift_beginAccess(v74 + 16, &v119, 33, 0);
  v81 = swift_retain(v76);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v81);
  v83 = *(_QWORD *)((*(_QWORD *)(v74 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v82 = *(_QWORD *)((*(_QWORD *)(v74 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v83 >= v82 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v82 > 1, v83 + 1, 1);
  v84 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v83, v76);
  specialized Array._endMutation()(v84);
  swift_endAccess(&v119);
  swift_release(v74);

  v85 = *(_QWORD *)&v78[OBJC_IVAR____TtC6FindMy8FMTabBar_devicesSubscription];
  *(_QWORD *)&v78[OBJC_IVAR____TtC6FindMy8FMTabBar_devicesSubscription] = v76;
  swift_release(v85);
  v86 = v78;
  v87 = String._bridgeToObjectiveC()();
  objc_msgSend(v86, "setAccessibilityIdentifier:", v87);

  v88 = *(void **)&v86[OBJC_IVAR____TtC6FindMy8FMTabBar_peopleTab];
  v119 = 0;
  v120 = 0xE000000000000000;
  v89 = v88;
  _StringGuts.grow(_:)(20);
  v90 = objc_msgSend(v7, "mainBundle", swift_bridgeObjectRelease(v120).n128_f64[0]);
  v126._countAndFlagsBits = 0xD00000000000001CLL;
  v126._object = (void *)0x80000001004B2E20;
  v91._countAndFlagsBits = 0x545F454C504F4550;
  v91._object = (void *)0xEA00000000004241;
  v92._countAndFlagsBits = 0;
  v92._object = (void *)0xE000000000000000;
  v93 = NSLocalizedString(_:tableName:bundle:value:comment:)(v91, (Swift::String_optional)0, (NSBundle)v90, v92, v126)._object;

  v94 = String._bridgeToObjectiveC()();
  objc_msgSend(v89, "setAccessibilityIdentifier:", v94, swift_bridgeObjectRelease(v93).n128_f64[0]);

  v95 = *(void **)&v86[OBJC_IVAR____TtC6FindMy8FMTabBar_devicesTab];
  v119 = 0;
  v120 = 0xE000000000000000;
  v96 = v95;
  _StringGuts.grow(_:)(20);
  v97 = objc_msgSend(v7, "mainBundle", swift_bridgeObjectRelease(v120).n128_f64[0]);
  v127._countAndFlagsBits = 0xD00000000000001DLL;
  v127._object = (void *)0x80000001004B2E40;
  v98._countAndFlagsBits = 0x5F53454349564544;
  v98._object = (void *)0xEB00000000424154;
  v99._countAndFlagsBits = 0;
  v99._object = (void *)0xE000000000000000;
  v100 = NSLocalizedString(_:tableName:bundle:value:comment:)(v98, (Swift::String_optional)0, (NSBundle)v97, v99, v127)._object;

  v101 = String._bridgeToObjectiveC()();
  objc_msgSend(v96, "setAccessibilityIdentifier:", v101, swift_bridgeObjectRelease(v100).n128_f64[0]);

  v102 = *(void **)&v86[OBJC_IVAR____TtC6FindMy8FMTabBar_meTab];
  v119 = 0;
  v120 = 0xE000000000000000;
  v103 = v102;
  _StringGuts.grow(_:)(20);
  v104 = objc_msgSend(v7, "mainBundle", swift_bridgeObjectRelease(v120).n128_f64[0]);
  v128._object = (void *)0x80000001004B2E80;
  v105._countAndFlagsBits = 0x4241545F454DLL;
  v105._object = (void *)0xE600000000000000;
  v106._countAndFlagsBits = 0;
  v106._object = (void *)0xE000000000000000;
  v128._countAndFlagsBits = 0xD000000000000018;
  v107 = NSLocalizedString(_:tableName:bundle:value:comment:)(v105, (Swift::String_optional)0, (NSBundle)v104, v106, v128)._object;

  v108 = String._bridgeToObjectiveC()();
  objc_msgSend(v103, "setAccessibilityIdentifier:", v108, swift_bridgeObjectRelease(v107).n128_f64[0]);

  v109 = *(id *)&v86[OBJC_IVAR____TtC6FindMy8FMTabBar_itemsTab];
  v110 = objc_msgSend(v7, "mainBundle");
  v111.value._countAndFlagsBits = 0xD000000000000013;
  v129._object = (void *)0x80000001004A5660;
  v111.value._object = (void *)0x80000001004A5640;
  v112._countAndFlagsBits = 0x41545F534D455449;
  v112._object = (void *)0xE900000000000042;
  v113._countAndFlagsBits = 0;
  v113._object = (void *)0xE000000000000000;
  v129._countAndFlagsBits = 0xD000000000000018;
  v114 = NSLocalizedString(_:tableName:bundle:value:comment:)(v112, v111, (NSBundle)v110, v113, v129)._object;

  v115 = String._bridgeToObjectiveC()();
  objc_msgSend(v109, "setAccessibilityIdentifier:", v115, swift_bridgeObjectRelease(v114).n128_f64[0]);

  swift_release(a1);
  return v86;
}

void sub_100027AC0(uint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  void *v6;
  id v7;
  double v8;
  double v9;
  id v10;
  Class isa;
  id v12;

  v6 = (void *)objc_opt_self(UIScreen);
  sub_100027B98(a1, a2);
  v7 = objc_msgSend(v6, "mainScreen");
  objc_msgSend(v7, "scale");
  v9 = v8;

  v10 = objc_allocWithZone((Class)UIImage);
  isa = Data._bridgeToObjectiveC()().super.isa;
  v12 = objc_msgSend(v10, "initWithData:scale:", isa, v9);
  sub_100027BDC(a1, a2);

  *a3 = v12;
}

uint64_t sub_100027B98(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain(result);
  }
  return swift_retain(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

uint64_t sub_100027BDC(uint64_t result, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release(result);
  }
  return swift_release(a2 & 0x3FFFFFFFFFFFFFFFLL);
}

void sub_100027C20(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  id v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t i;
  uint64_t v25;
  uint64_t v26;
  uint64_t Strong;
  uint64_t v28;
  uint64_t v29;
  uint64_t ObjectType;
  uint64_t v31;
  uint8_t *buf;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36[3];

  v7 = a1;
  if (!a1)
    v7 = a2;
  v8 = qword_1005D1DE8;
  v9 = a1;
  if (v8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v10 = type metadata accessor for Logger(0);
  sub_100056D88(v10, (uint64_t)qword_1005F5748);
  v11 = v7;
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v33 = swift_slowAlloc(32, -1);
    v36[0] = v33;
    *(_DWORD *)v14 = 136315138;
    buf = v14;
    v15 = v11;
    v16 = objc_msgSend(v15, "description");
    v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v16);
    v19 = v18;

    v35 = sub_100056DA0(v17, v19, v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, v36);

    swift_bridgeObjectRelease(v19);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "FMLocationProvider: location manager didUpdateLocations after shifting: %s", buf, 0xCu);
    swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1, -1);
    swift_slowDealloc(buf, -1, -1);

  }
  else
  {

  }
  v20 = *(void **)(a3 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
  *(_QWORD *)(a3 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation) = v11;
  v34 = v11;

  v21 = (uint64_t *)(a3 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions);
  swift_beginAccess(a3 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions, v36, 0, 0);
  v22 = *v21;
  if (!((unint64_t)*v21 >> 62))
  {
    v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*v21);
    if (v23)
      goto LABEL_10;
LABEL_23:

    swift_bridgeObjectRelease(v22);
    return;
  }
  if (v22 < 0)
    v31 = *v21;
  else
    v31 = v22 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v22);
  v23 = _CocoaArrayWrapper.endIndex.getter(v31);
  if (!v23)
    goto LABEL_23;
LABEL_10:
  if (v23 >= 1)
  {
    for (i = 0; i != v23; ++i)
    {
      if ((v22 & 0xC000000000000001) != 0)
      {
        v25 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v22);
      }
      else
      {
        v25 = *(_QWORD *)(v22 + 8 * i + 32);
        swift_retain(v25);
      }
      v26 = v25 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber;
      Strong = swift_unknownObjectWeakLoadStrong(v25 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber);
      if (Strong)
      {
        v28 = Strong;
        v29 = *(_QWORD *)(v26 + 8);
        ObjectType = swift_getObjectType(Strong);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8))(a3, a4, ObjectType, v29);
        swift_release(v25);
        swift_unknownObjectRelease(v28);
      }
      else
      {
        swift_release(v25);
      }
    }
    goto LABEL_23;
  }
  __break(1u);
}

uint64_t sub_100027F50(uint64_t a1, uint64_t a2)
{
  return sub_100027F58(a2);
}

uint64_t sub_100027F58(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t aBlock[5];
  uint64_t v42;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v39 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v38 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v10 = type metadata accessor for Logger(0);
  sub_100056D88(v10, (uint64_t)qword_1005F5748);
  v11 = swift_bridgeObjectRetain_n(a1, 2);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc(12, -1);
    v35 = v2;
    v15 = (uint8_t *)v14;
    v16 = swift_slowAlloc(32, -1);
    v36 = v8;
    v17 = v16;
    aBlock[0] = v16;
    *(_DWORD *)v15 = 136315138;
    v37 = v7;
    v18 = sub_100006C5C(0, (unint64_t *)&unk_1005DF4B0, CLLocation_ptr);
    v19 = Array.debugDescription.getter(a1, v18);
    v21 = v20;
    v40 = sub_100056DA0(v19, v20, aBlock);
    v7 = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, aBlock);
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v21);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "FMPeopleListDataSource: locationProvider didUpdate locations %s", v15, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    v22 = v17;
    v8 = v36;
    swift_slowDealloc(v22, -1, -1);
    v23 = v15;
    v2 = v35;
    swift_slowDealloc(v23, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a1, 2);
  }
  sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v24 = (void *)static OS_dispatch_queue.main.getter();
  v25 = swift_allocObject(&unk_100568340, 32, 7);
  *(_QWORD *)(v25 + 16) = v2;
  *(_QWORD *)(v25 + 24) = a1;
  aBlock[4] = (uint64_t)sub_10003FEC0;
  v42 = v25;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100037DF8;
  aBlock[3] = (uint64_t)&unk_100568358;
  v26 = _Block_copy(aBlock);
  v27 = v42;
  swift_bridgeObjectRetain(a1);
  v28 = v2;
  swift_release(v27);
  v29 = v38;
  static DispatchQoS.unspecified.getter(v30);
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  v31 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v32 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v33 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v32, v33, v4, v31);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v29, v7, v26);
  _Block_release(v26);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v29, v8);
}

void sub_100028320(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  void **v10;
  void *v11;
  uint64_t v12;
  id v13[2];

  v2 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v12 = a1;
    else
      v12 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v12);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = sub_100006C5C(0, (unint64_t *)&qword_1005D39F8, UNNotificationCategory_ptr);
  v5 = sub_10005D280();
  v13[1] = (id)Set.init(minimumCapacity:)(v3, v4, v5);
  if (!v2)
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v6)
      return;
    goto LABEL_10;
  }
  if (a1 < 0)
    v7 = a1;
  else
    v7 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v6 = _CocoaArrayWrapper.endIndex.getter(v7);
  swift_bridgeObjectRelease(a1);
  if (v6)
  {
LABEL_10:
    if (v6 < 1)
    {
      __break(1u);
    }
    else if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v6; ++i)
      {
        v9 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(i, a1);
        sub_100028478((Swift::Int *)v13, v9);

      }
    }
    else
    {
      v10 = (void **)(a1 + 32);
      do
      {
        v11 = *v10++;
        sub_100028478((Swift::Int *)v13, v11);

        --v6;
      }
      while (v6);
    }
  }
}

uint64_t sub_100028478(Swift::Int *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  Swift::Int v12;
  Swift::Int v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  char v17;
  uint64_t v18;
  id v19;
  char v20;
  void *v21;
  id v22;
  Swift::Int v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  Swift::Int v32;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*v2);
    v8 = a2;
    v9 = __CocoaSet.member(for:)();

    if (v9)
    {
      swift_bridgeObjectRelease(v6);

      v31 = v9;
      v10 = sub_100028868();
      swift_unknownObjectRetain(v9);
      swift_dynamicCast(&v32, &v31, (char *)&type metadata for Swift.AnyObject + 8, v10, 7);
      *a1 = v32;
      swift_unknownObjectRelease(v9);
      return 0;
    }
    result = __CocoaSet.count.getter(v7);
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v23 = sub_100204754(v7, result + 1);
    v32 = v23;
    v24 = *(_QWORD *)(v23 + 16);
    if (*(_QWORD *)(v23 + 24) <= v24)
    {
      v29 = v24 + 1;
      v30 = v8;
      sub_100204C98(v29);
      v25 = v32;
    }
    else
    {
      v25 = v23;
      v26 = v8;
    }
    sub_10020561C((uint64_t)v8, v25);
    v28 = *v3;
    *v3 = v25;
  }
  else
  {
    v12 = *(_QWORD *)(v6 + 40);
    swift_bridgeObjectRetain(v6);
    v13 = NSObject._rawHashValue(seed:)(v12);
    v14 = -1 << *(_BYTE *)(v6 + 32);
    v15 = v13 & ~v14;
    if (((*(_QWORD *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
    {
      sub_100028868();
      v16 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v15);
      v17 = static NSObject.== infix(_:_:)(v16, a2);

      if ((v17 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease(v6);
        v21 = *(void **)(*(_QWORD *)(*v3 + 48) + 8 * v15);
        *a1 = (Swift::Int)v21;
        v22 = v21;
        return 0;
      }
      v18 = ~v14;
      while (1)
      {
        v15 = (v15 + 1) & v18;
        if (((*(_QWORD *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
          break;
        v19 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v15);
        v20 = static NSObject.== infix(_:_:)(v19, a2);

        if ((v20 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease(v6);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v3);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    v8 = a2;
    sub_1000286F4((uint64_t)v8, v15, isUniquelyReferenced_nonNull_native);
    v28 = *v3;
    *v3 = v32;
  }
  swift_bridgeObjectRelease(v28);
  *a1 = (Swift::Int)v8;
  return 1;
}

void sub_1000286F4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v7 = *(_QWORD *)(*v3 + 16);
  v8 = *(_QWORD *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0)
    goto LABEL_14;
  v9 = v7 + 1;
  if ((a3 & 1) != 0)
  {
    sub_100204C98(v9);
  }
  else
  {
    if (v8 > v7)
    {
      sub_100206918();
      goto LABEL_14;
    }
    sub_1002074FC(v9);
  }
  v10 = *v3;
  v11 = NSObject._rawHashValue(seed:)(*(_QWORD *)(*v3 + 40));
  v12 = -1 << *(_BYTE *)(v10 + 32);
  a2 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v13 = sub_100028868();
    v14 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * a2);
    v15 = static NSObject.== infix(_:_:)(v14, a1);

    if ((v15 & 1) != 0)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v13);
      __break(1u);
    }
    else
    {
      v16 = ~v12;
      while (1)
      {
        a2 = (a2 + 1) & v16;
        if (((*(_QWORD *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * a2);
        v18 = static NSObject.== infix(_:_:)(v17, a1);

        if ((v18 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v19 = *v4;
  *(_QWORD *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v19 + 48) + 8 * a2) = a1;
  v20 = *(_QWORD *)(v19 + 16);
  v21 = __OFADD__(v20, 1);
  v22 = v20 + 1;
  if (v21)
    __break(1u);
  else
    *(_QWORD *)(v19 + 16) = v22;
}

unint64_t sub_100028868()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D39F8;
  if (!qword_1005D39F8)
  {
    v1 = objc_opt_self(UNNotificationCategory);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1005D39F8);
  }
  return result;
}

void sub_1000288A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = v1;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v4 = type metadata accessor for Logger(0);
  sub_100056D88(v4, (uint64_t)qword_1005F5748);
  swift_bridgeObjectRetain(a1);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v8 = 134217984;
    v19 = *(_QWORD *)(a1 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20);
    swift_bridgeObjectRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMPeopleProvider: didReceive: locations %ld", v8, 0xCu);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease(a1);
  }
  swift_beginAccess(v2 + 16, &v19, 0, 0);
  v9 = *(_QWORD *)(v2 + 16);
  if (!((unint64_t)v9 >> 62))
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(v2 + 16));
    if (v10)
      goto LABEL_8;
LABEL_21:
    swift_bridgeObjectRelease(v9);
    return;
  }
  if (v9 < 0)
    v18 = *(_QWORD *)(v2 + 16);
  else
    v18 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(v2 + 16));
  v10 = _CocoaArrayWrapper.endIndex.getter(v18);
  if (!v10)
    goto LABEL_21;
LABEL_8:
  if (v10 >= 1)
  {
    for (i = 0; i != v10; ++i)
    {
      if ((v9 & 0xC000000000000001) != 0)
      {
        v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v9);
      }
      else
      {
        v15 = *(_QWORD *)(v9 + 8 * i + 32);
        swift_retain(v15);
      }
      v16 = v15 + OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_subscriber;
      Strong = swift_unknownObjectWeakLoadStrong(v15 + OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_subscriber);
      if (Strong)
      {
        v12 = Strong;
        v13 = *(_QWORD *)(v16 + 8);
        ObjectType = swift_getObjectType(Strong);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 40))(v2, a1, ObjectType, v13);
        swift_release(v15);
        swift_unknownObjectRelease(v12);
      }
      else
      {
        swift_release(v15);
      }
    }
    goto LABEL_21;
  }
  __break(1u);
}

void sub_100028AEC()
{
  char *v0;
  char *v1;
  id v2;
  char *v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  Swift::String v8;
  Swift::String v9;
  void *object;
  NSString v11;
  id v12;
  id v13;
  Swift::String v14;
  Swift::String v15;
  void *v16;
  NSString v17;
  id v18;
  NSString v19;
  Class isa;
  id v21;
  Swift::String v22;
  Swift::String v23;
  Swift::String v24;
  uint64_t v25;
  char *v26;
  id v27;
  id v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;
  char *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  Swift::String v51;
  Swift::String v52;
  void *v53;
  NSString v54;
  void *v55;
  id v56;
  id v57;
  void *v58;
  NSString v59;
  id v60;
  void *v61;
  id v62;
  void *v63;
  id v64;
  void *v65;
  id v66;
  id v67;
  void *v68;
  char *v69;
  unint64_t v70;
  uint64_t v71;
  Swift::String v72;
  Swift::String v73;
  Swift::String v74;
  Swift::String v75;
  Swift::String v76;

  v1 = v0;
  v2 = objc_msgSend(objc_allocWithZone((Class)UIPanGestureRecognizer), "initWithTarget:action:", v0, "handlePanGestureWithSender:");
  objc_msgSend(v2, "setMaximumNumberOfTouches:", 1);
  objc_msgSend(v2, "setDelegate:", v0);
  v3 = *(char **)&v0[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardContainer];
  v68 = v2;
  objc_msgSend(v3, "addGestureRecognizer:", v2);
  objc_msgSend(v3, "setLayoutMargins:", 0.0, 14.0, 0.0, 14.0);
  objc_msgSend(v3, "setShouldGroupAccessibilityChildren:", 1);
  objc_msgSend(v3, "setAccessibilityContainerType:", 4);
  v4 = *(id *)&v3[OBJC_IVAR____TtC6FindMy19FMCardContainerView_grabber];
  objc_msgSend(v4, "setAccessibilityRespondsToUserInteraction:", 1);
  objc_msgSend(v4, "setIsAccessibilityElement:", 1);
  v5 = v4;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v6 = (void *)objc_opt_self(NSBundle);
  v7 = objc_msgSend(v6, "mainBundle");
  v72._countAndFlagsBits = 0xD000000000000023;
  v72._object = (void *)0x80000001004B4E60;
  v8._object = (void *)0x80000001004B4E40;
  v8._countAndFlagsBits = 0xD000000000000011;
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v72)._object;

  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v5, "setAccessibilityLabel:", v11, swift_bridgeObjectRelease(object).n128_f64[0]);

  v69 = 0;
  v70 = 0xE000000000000000;
  v12 = v5;
  _StringGuts.grow(_:)(20);
  v13 = objc_msgSend(v6, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
  v14._countAndFlagsBits = 0xD000000000000016;
  v73._countAndFlagsBits = 0xD000000000000028;
  v73._object = (void *)0x80000001004B4EB0;
  v14._object = (void *)0x80000001004B4E90;
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, (NSBundle)v13, v15, v73)._object;

  v17 = String._bridgeToObjectiveC()();
  objc_msgSend(v12, "setAccessibilityHint:", v17, swift_bridgeObjectRelease(v16).n128_f64[0]);

  v18 = v12;
  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v18, "setAccessibilityIdentifier:", v19);

  isa = (Class)objc_msgSend(v18, "accessibilityCustomActions");
  if (!isa)
  {
    sub_100006C5C(0, &qword_1005DB488, UIAccessibilityCustomAction_ptr);
    v70 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    v21 = objc_msgSend(v6, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
    v74._countAndFlagsBits = 0xD00000000000001DLL;
    v74._object = (void *)0x80000001004B4EE0;
    v22._countAndFlagsBits = 0x435F444E41505845;
    v22._object = (void *)0xEB00000000445241;
    v23._countAndFlagsBits = 0;
    v23._object = (void *)0xE000000000000000;
    v24 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, (Swift::String_optional)0, (NSBundle)v21, v23, v74);

    v25 = type metadata accessor for FMCardContainerViewController();
    v71 = v25;
    v69 = v1;
    v26 = v1;
    v27 = sub_100029430(v24._countAndFlagsBits, (uint64_t)v24._object, &v69, (uint64_t)"expandCard");
    v69 = 0;
    v70 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    v28 = objc_msgSend(v6, "mainBundle", swift_bridgeObjectRelease(v70).n128_f64[0]);
    v75._countAndFlagsBits = 0xD00000000000001FLL;
    v75._object = (void *)0x80000001004B4F00;
    v29._countAndFlagsBits = 0x455350414C4C4F43;
    v29._object = (void *)0xED0000445241435FLL;
    v30._countAndFlagsBits = 0;
    v30._object = (void *)0xE000000000000000;
    v31 = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, (Swift::String_optional)0, (NSBundle)v28, v30, v75);

    v71 = v25;
    v69 = v26;
    v32 = v26;
    v33 = sub_100029430(v31._countAndFlagsBits, (uint64_t)v31._object, &v69, (uint64_t)"collapseCard");
    v34 = sub_100053F2C(&qword_1005D2F10);
    v35 = swift_allocObject(v34, 48, 7);
    *(_OWORD *)(v35 + 16) = xmmword_1004820B0;
    *(_QWORD *)(v35 + 32) = v27;
    *(_QWORD *)(v35 + 40) = v33;
    v69 = (char *)v35;
    specialized Array._endMutation()(v35);
    v36 = v69;
    v37 = v18;
    v38 = v27;
    v39 = v33;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v37, "setAccessibilityCustomActions:", isa, swift_bridgeObjectRelease(v36).n128_f64[0]);

  }
  v40 = *(void **)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardShadow];
  v41 = objc_msgSend(v40, "layer");
  objc_msgSend(v41, "setCornerRadius:", _UISheetCornerRadius);

  v42 = objc_msgSend(v40, "layer");
  v43 = (void *)objc_opt_self(UIColor);
  v44 = objc_msgSend(v43, "blackColor");
  v45 = objc_msgSend(v44, "CGColor");

  objc_msgSend(v42, "setShadowColor:", v45);
  v46 = objc_msgSend(v40, "layer");
  objc_msgSend(v46, "setMasksToBounds:", 0);

  v47 = objc_msgSend(v40, "layer");
  objc_msgSend(v47, "setShadowPathIsBounds:", 1);

  v48 = objc_msgSend(v43, "systemBackgroundColor");
  objc_msgSend(v40, "setBackgroundColor:", v48);

  v49 = *(void **)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_closeButton];
  objc_msgSend(v49, "addTarget:action:forControlEvents:", v1, "handleCloseAction", 64);
  v69 = 0;
  v70 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v50 = objc_msgSend(v6, "mainBundle", swift_bridgeObjectRelease(v70).n128_f64[0]);
  v76._countAndFlagsBits = 0xD00000000000001ELL;
  v76._object = (void *)0x80000001004AFFB0;
  v51._countAndFlagsBits = 0x55425F45534F4C43;
  v51._object = (void *)0xEC0000004E4F5454;
  v52._countAndFlagsBits = 0;
  v52._object = (void *)0xE000000000000000;
  v53 = NSLocalizedString(_:tableName:bundle:value:comment:)(v51, (Swift::String_optional)0, (NSBundle)v50, v52, v76)._object;

  v54 = String._bridgeToObjectiveC()();
  objc_msgSend(v49, "setAccessibilityLabel:", v54, swift_bridgeObjectRelease(v53).n128_f64[0]);

  v55 = *(void **)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_darkenerBackground];
  v56 = objc_msgSend(v43, "blackColor");
  objc_msgSend(v55, "setBackgroundColor:", v56);

  objc_msgSend(v55, "setAlpha:", 0.0);
  v57 = objc_msgSend(v1, "view");
  if (!v57)
  {
    __break(1u);
    goto LABEL_10;
  }
  v58 = v57;
  v59 = String._bridgeToObjectiveC()();
  objc_msgSend(v58, "setAccessibilityIdentifier:", v59);

  v60 = objc_msgSend(v1, "view");
  if (!v60)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v61 = v60;
  objc_msgSend(v60, "addSubview:", v55);

  v62 = objc_msgSend(v1, "view");
  if (!v62)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v63 = v62;
  objc_msgSend(v62, "addSubview:", v40);

  v64 = objc_msgSend(v1, "view");
  if (!v64)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v65 = v64;
  objc_msgSend(v64, "addSubview:", v3);

  v66 = objc_msgSend(v1, "view");
  if (v66)
  {
    v67 = v66;
    objc_msgSend(v66, "addSubview:", v49);

    return;
  }
LABEL_13:
  __break(1u);
}

id sub_100029430(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  NSString v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v18;

  v5 = v4;
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v10 = a3[3];
  if (v10)
  {
    v11 = sub_100029550(a3, a3[3]);
    v12 = *(_QWORD *)(v10 - 8);
    __chkstk_darwin(v11);
    v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v12 + 16))(v14);
    v15 = _bridgeAnythingToObjectiveC<A>(_:)(v14, v10);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v10);
    sub_100029574(a3);
  }
  else
  {
    v15 = 0;
  }
  v16 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v5)), "initWithName:target:selector:", v9, v15, a4);

  swift_unknownObjectRelease(v15);
  return v16;
}

_QWORD *sub_100029550(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_100029574(_QWORD *a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1[3] - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release(*a1);
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

void sub_100029594()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  Class isa;
  uint64_t v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  id v44;
  id v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  Class v53;
  uint64_t v54;
  void *v55;
  id v56;
  id v57;
  id v58;
  void *v59;
  id v60;
  id v61;
  void *v62;
  id v63;
  id v64;
  id v65;
  uint64_t v66;
  Class v67;
  uint64_t v68;
  id v69;
  void *v70;
  id v71;
  id v72;
  id v73;
  void *v74;
  id v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  Class v81;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy19FMMapViewController_mapView];
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = OBJC_IVAR____TtC6FindMy19FMMapViewController_mapOptionsView;
  v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMy19FMMapViewController_mapOptionsView];
  if (!v4)
  {
    __break(1u);
    goto LABEL_19;
  }
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = OBJC_IVAR____TtC6FindMy19FMMapViewController_statusBar;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy19FMMapViewController_statusBar], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v80 = (id)sub_100053F2C(&qword_1005D2F10);
  v6 = swift_allocObject(v80, 64, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100481720;
  v7 = objc_msgSend(v2, "topAnchor");
  v8 = objc_msgSend(v1, "view");
  if (!v8)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = v8;
  v10 = objc_msgSend(v8, "topAnchor");

  v11 = objc_msgSend(v7, "constraintEqualToAnchor:", v10);
  *(_QWORD *)(v6 + 32) = v11;
  v12 = objc_msgSend(v2, "bottomAnchor");
  v13 = objc_msgSend(v1, "view");
  if (!v13)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v14 = v13;
  v15 = objc_msgSend(v13, "bottomAnchor");

  v16 = objc_msgSend(v12, "constraintEqualToAnchor:", v15);
  *(_QWORD *)(v6 + 40) = v16;
  v17 = objc_msgSend(v2, "leadingAnchor");
  v18 = objc_msgSend(v1, "view");
  if (!v18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v19 = v18;
  v79 = v3;
  v20 = objc_msgSend(v18, "leadingAnchor");

  v21 = objc_msgSend(v17, "constraintEqualToAnchor:", v20);
  *(_QWORD *)(v6 + 48) = v21;
  v22 = objc_msgSend(v2, "trailingAnchor");
  v23 = objc_msgSend(v1, "view");
  if (!v23)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v24 = v23;
  v25 = (void *)objc_opt_self(NSLayoutConstraint);
  v26 = objc_msgSend(v24, "trailingAnchor");

  v27 = objc_msgSend(v22, "constraintEqualToAnchor:", v26);
  *(_QWORD *)(v6 + 56) = v27;
  specialized Array._endMutation()(v28);
  sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v25, "activateConstraints:", isa, swift_bridgeObjectRelease(v6).n128_f64[0]);

  v78 = OBJC_IVAR____TtC6FindMy19FMMapViewController_compassButton;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy19FMMapViewController_compassButton], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v30 = swift_allocObject(v80, 64, 7);
  *(_OWORD *)(v30 + 16) = xmmword_100481720;
  v31 = objc_msgSend(*(id *)&v1[v5], "topAnchor");
  v32 = objc_msgSend(v1, "view");
  if (!v32)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v33 = v32;
  v34 = objc_msgSend(v32, "topAnchor");

  v35 = objc_msgSend(v31, "constraintEqualToAnchor:", v34);
  *(_QWORD *)(v30 + 32) = v35;
  v36 = objc_msgSend(*(id *)&v1[v5], "leadingAnchor");
  v37 = objc_msgSend(v1, "view");
  if (!v37)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v38 = v37;
  v39 = objc_msgSend(v37, "leadingAnchor");

  v40 = objc_msgSend(v36, "constraintEqualToAnchor:", v39);
  *(_QWORD *)(v30 + 40) = v40;
  v41 = objc_msgSend(*(id *)&v1[v5], "trailingAnchor");
  v42 = objc_msgSend(v1, "view");
  if (!v42)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v43 = v42;
  v44 = objc_msgSend(v42, "trailingAnchor");

  v45 = objc_msgSend(v41, "constraintEqualToAnchor:", v44);
  *(_QWORD *)(v30 + 48) = v45;
  v46 = objc_msgSend(*(id *)&v1[v5], "bottomAnchor");
  v47 = objc_msgSend(v1, "view");
  if (!v47)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v48 = v47;
  v49 = objc_msgSend(v47, "safeAreaLayoutGuide");

  v50 = objc_msgSend(v49, "topAnchor");
  v51 = objc_msgSend(v46, "constraintGreaterThanOrEqualToAnchor:", v50);

  *(_QWORD *)(v30 + 56) = v51;
  specialized Array._endMutation()(v52);
  v53 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v25, "activateConstraints:", v53, swift_bridgeObjectRelease(v30).n128_f64[0]);

  v54 = swift_allocObject(v80, 48, 7);
  *(_OWORD *)(v54 + 16) = xmmword_1004820B0;
  v55 = *(void **)&v1[v79];
  if (!v55)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v56 = objc_msgSend(v55, "topAnchor");
  v57 = objc_msgSend(*(id *)&v1[v5], "bottomAnchor");
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v58 = objc_msgSend(v56, "constraintEqualToAnchor:constant:", v57, *(double *)&qword_1005F5970);

  *(_QWORD *)(v54 + 32) = v58;
  v59 = *(void **)&v1[v79];
  if (!v59)
    goto LABEL_28;
  v60 = objc_msgSend(v59, "trailingAnchor");
  v61 = objc_msgSend(v1, "view");
  if (!v61)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v62 = v61;
  v63 = objc_msgSend(v61, "safeAreaLayoutGuide");

  v64 = objc_msgSend(v63, "trailingAnchor");
  v65 = objc_msgSend(v60, "constraintEqualToAnchor:constant:", v64, -*(double *)&qword_1005F5970);

  *(_QWORD *)(v54 + 40) = v65;
  specialized Array._endMutation()(v66);
  v67 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v25, "activateConstraints:", v67, swift_bridgeObjectRelease(v54).n128_f64[0]);

  v68 = swift_allocObject(v80, 48, 7);
  *(_OWORD *)(v68 + 16) = xmmword_1004820B0;
  v69 = objc_msgSend(*(id *)&v1[v78], "topAnchor");
  v70 = *(void **)&v1[v79];
  if (!v70)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v71 = objc_msgSend(v70, "bottomAnchor");
  v72 = objc_msgSend(v69, "constraintEqualToAnchor:constant:", v71, *(double *)&qword_1005F5970);

  *(_QWORD *)(v68 + 32) = v72;
  v73 = objc_msgSend(*(id *)&v1[v78], "centerXAnchor");
  v74 = *(void **)&v1[v79];
  if (v74)
  {
    v75 = objc_msgSend(v74, "centerXAnchor");
    v76 = objc_msgSend(v73, "constraintEqualToAnchor:", v75);

    *(_QWORD *)(v68 + 40) = v76;
    specialized Array._endMutation()(v77);
    v81 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v25, "activateConstraints:", v81, swift_bridgeObjectRelease(v68).n128_f64[0]);

    return;
  }
LABEL_31:
  __break(1u);
}

void sub_100029E48()
{
  char *v0;
  char *v1;
  double v2;
  double v3;
  double v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  Class isa;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  double v26;
  uint64_t v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  Class v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  Class v48;
  uint64_t v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  Class v60;
  void *v61;
  id v62;
  void *v63;
  id v64;
  void *v65;
  id v66;
  id v67;
  id v68;
  uint64_t v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;

  v1 = v0;
  if (qword_1005D1E40 != -1)
    swift_once(&qword_1005D1E40, sub_10005E104);
  v3 = *(double *)&qword_1005F5908;
  v2 = unk_1005F5910;
  v4 = *(double *)&qword_1005F5918;
  v5 = *(void **)&v0[OBJC_IVAR____TtC6FindMy11FMStatusBar_blurView];
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy11FMStatusBar_blurView], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v75 = *(id *)&v1[OBJC_IVAR____TtC6FindMy11FMStatusBar_pillView];
  objc_msgSend(v75, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v72 = *(id *)&v1[OBJC_IVAR____TtC6FindMy11FMStatusBar_textLabel];
  objc_msgSend(v72, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v73 = *(id *)&v1[OBJC_IVAR____TtC6FindMy11FMStatusBar_chevron];
  objc_msgSend(v73, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v74 = (id)objc_opt_self(NSLayoutConstraint);
  v69 = sub_100053F2C(&qword_1005D2F10);
  v6 = swift_allocObject(v69, 64, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100481720;
  v7 = objc_msgSend(v5, "topAnchor");
  v8 = objc_msgSend(v1, "topAnchor");
  v9 = objc_msgSend(v7, "constraintEqualToAnchor:", v8);

  *(_QWORD *)(v6 + 32) = v9;
  v10 = objc_msgSend(v5, "bottomAnchor");
  v11 = objc_msgSend(v1, "bottomAnchor");
  v12 = objc_msgSend(v10, "constraintEqualToAnchor:", v11);

  *(_QWORD *)(v6 + 40) = v12;
  v13 = objc_msgSend(v5, "leadingAnchor");
  v14 = objc_msgSend(v1, "leadingAnchor");
  v15 = objc_msgSend(v13, "constraintEqualToAnchor:", v14);

  *(_QWORD *)(v6 + 48) = v15;
  v16 = objc_msgSend(v5, "trailingAnchor");
  v17 = objc_msgSend(v1, "trailingAnchor");
  v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

  *(_QWORD *)(v6 + 56) = v18;
  specialized Array._endMutation()(v19);
  sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v74, "activateConstraints:", isa, swift_bridgeObjectRelease(v6).n128_f64[0]);

  v21 = objc_msgSend(v75, "bottomAnchor");
  v22 = objc_msgSend(v1, "bottomAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

  v24 = objc_msgSend(v75, "heightAnchor");
  v25 = objc_msgSend(v24, "constraintEqualToConstant:", 0.0);

  LODWORD(v26) = 1148846080;
  objc_msgSend(v25, "setPriority:", v26);
  v27 = swift_allocObject(v69, 64, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100481720;
  v28 = objc_msgSend(v75, "topAnchor");
  v29 = objc_msgSend(v1, "safeAreaLayoutGuide");
  v30 = objc_msgSend(v29, "topAnchor");

  v31 = objc_msgSend(v28, "constraintEqualToAnchor:", v30);
  *(_QWORD *)(v27 + 32) = v31;
  v32 = objc_msgSend(v75, "centerXAnchor");
  v33 = objc_msgSend(v1, "centerXAnchor");
  v34 = objc_msgSend(v32, "constraintEqualToAnchor:", v33);

  *(_QWORD *)(v27 + 40) = v34;
  *(_QWORD *)(v27 + 48) = v23;
  *(_QWORD *)(v27 + 56) = v25;
  specialized Array._endMutation()(v35);
  v70 = v23;
  v71 = v25;
  v36 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v74, "activateConstraints:", v36, swift_bridgeObjectRelease(v27).n128_f64[0]);

  v37 = objc_msgSend(v72, "topAnchor");
  v38 = objc_msgSend(v75, "topAnchor");
  v39 = objc_msgSend(v37, "constraintEqualToAnchor:", v38);

  v40 = objc_msgSend(v72, "bottomAnchor");
  v41 = objc_msgSend(v75, "bottomAnchor");
  v42 = objc_msgSend(v40, "constraintEqualToAnchor:", v41);

  v43 = swift_allocObject(v69, 56, 7);
  *(_OWORD *)(v43 + 16) = xmmword_1004820C0;
  v44 = objc_msgSend(v72, "leadingAnchor");
  v45 = objc_msgSend(v75, "leadingAnchor");
  v46 = objc_msgSend(v44, "constraintEqualToAnchor:constant:", v45, v3);

  *(_QWORD *)(v43 + 32) = v46;
  *(_QWORD *)(v43 + 40) = v39;
  *(_QWORD *)(v43 + 48) = v42;
  specialized Array._endMutation()(v47);
  v67 = v39;
  v68 = v42;
  v48 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v74, "activateConstraints:", v48, swift_bridgeObjectRelease(v43).n128_f64[0]);

  v49 = swift_allocObject(v69, 56, 7);
  *(_OWORD *)(v49 + 16) = xmmword_1004820C0;
  v50 = objc_msgSend(v73, "leadingAnchor");
  v51 = objc_msgSend(v72, "trailingAnchor");
  v52 = objc_msgSend(v50, "constraintEqualToAnchor:constant:", v51, v2);

  *(_QWORD *)(v49 + 32) = v52;
  v53 = objc_msgSend(v73, "trailingAnchor");
  v54 = objc_msgSend(v75, "trailingAnchor");
  v55 = objc_msgSend(v53, "constraintEqualToAnchor:constant:", v54, v4);

  *(_QWORD *)(v49 + 40) = v55;
  v56 = objc_msgSend(v73, "centerYAnchor");
  v57 = objc_msgSend(v72, "centerYAnchor");
  v58 = objc_msgSend(v56, "constraintEqualToAnchor:", v57);

  *(_QWORD *)(v49 + 48) = v58;
  specialized Array._endMutation()(v59);
  v60 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v74, "activateConstraints:", v60, swift_bridgeObjectRelease(v49).n128_f64[0]);

  v61 = *(void **)&v1[OBJC_IVAR____TtC6FindMy11FMStatusBar_pillBottomConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy11FMStatusBar_pillBottomConstraint] = v70;
  v62 = v70;

  v63 = *(void **)&v1[OBJC_IVAR____TtC6FindMy11FMStatusBar_pillHeightConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy11FMStatusBar_pillHeightConstraint] = v71;
  v64 = v71;

  v65 = *(void **)&v1[OBJC_IVAR____TtC6FindMy11FMStatusBar_textLabelTopConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy11FMStatusBar_textLabelTopConstraint] = v67;
  v66 = v67;

  v76 = *(id *)&v1[OBJC_IVAR____TtC6FindMy11FMStatusBar_textLabelBottomConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy11FMStatusBar_textLabelBottomConstraint] = v68;

}

uint64_t sub_10002A734()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  Swift::String v19;
  Swift::String v20;
  void *object;
  NSString v22;
  id v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  NSString v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  NSString v33;
  id v34;
  void *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  id v42;
  uint64_t v44;
  void *v45;
  id v46;
  void *v47;
  void *v48;
  void *v49;
  uint64_t v50;
  void *v51;
  void **aBlock;
  unint64_t v53;
  void (*v54)(uint64_t, void *);
  void *v55;
  void (*v56)(void *);
  uint64_t v57;
  Swift::String v58;

  v1 = v0;
  v2 = sub_100053F2C(&qword_1005E5970);
  __chkstk_darwin(v2);
  v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100053F2C(&qword_1005DC1B8);
  __chkstk_darwin(v5);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void **)&v0[OBJC_IVAR____TtC6FindMy16FMMapOptionsView_platterContainer];
  objc_msgSend(v8, "setAxis:", 1);
  objc_msgSend(v8, "setDistribution:", 0);
  objc_msgSend(v8, "setAlignment:", 3);
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  objc_msgSend(v8, "setSpacing:", *(double *)&qword_1005F5970);
  v9 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy16FMMapOptionsView_firstPlatter];
  v49 = v8;
  v50 = v9;
  sub_10002AE24();
  v51 = *(void **)&v1[OBJC_IVAR____TtC6FindMy16FMMapOptionsView_firstPlatterSeparatorView];
  v10 = v51;
  v11 = objc_msgSend((id)objc_opt_self(UIColor), "separatorColor");
  objc_msgSend(v10, "setBackgroundColor:", v11);

  v48 = *(void **)&v1[OBJC_IVAR____TtC6FindMy16FMMapOptionsView_secondPlatter];
  v12 = sub_10002AE24();
  v13 = *(void **)&v1[OBJC_IVAR____TtC6FindMy16FMMapOptionsView_mapSettingsButton];
  static UIButton.Configuration.plain()(v12);
  UIConfigurationColorTransformer.init(_:)(sub_10000D198, 0);
  v14 = type metadata accessor for UIConfigurationColorTransformer(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v4, 0, 1, v14);
  UIButton.Configuration.imageColorTransformer.setter(v4);
  v15 = type metadata accessor for UIButton.Configuration(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v7, 0, 1, v15);
  UIButton.configuration.setter(v7);
  v16 = swift_allocObject(&unk_100553970, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16, v1);
  v56 = sub_1000234D0;
  v57 = v16;
  aBlock = _NSConcreteStackBlock;
  v53 = 1107296256;
  v54 = sub_100008B40;
  v55 = &unk_100553988;
  v17 = _Block_copy(&aBlock);
  objc_msgSend(v13, "setConfigurationUpdateHandler:", v17, swift_release(v57).n128_f64[0]);
  _Block_release(v17);
  v47 = v13;
  objc_msgSend(v13, "addTarget:action:forControlEvents:", v1, "mapSettingsButtonAction", 64);
  aBlock = 0;
  v53 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v53);
  v18 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v58._countAndFlagsBits = 0xD000000000000023;
  v58._object = (void *)0x80000001004AA810;
  v19._object = (void *)0x80000001004AA7F0;
  v19._countAndFlagsBits = 0xD000000000000011;
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, (Swift::String_optional)0, (NSBundle)v18, v20, v58)._object;

  v22 = String._bridgeToObjectiveC()();
  objc_msgSend(v13, "setAccessibilityLabel:", v22, swift_bridgeObjectRelease(object).n128_f64[0]);

  v46 = *(id *)&v1[OBJC_IVAR____TtC6FindMy16FMMapOptionsView_userLocationButton];
  v23 = v46;
  objc_msgSend(v46, "_setSelectsWhenTracking:", 0);
  objc_msgSend(v23, "setEnabled:", *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy16FMMapOptionsView_mediator] + 40)+ OBJC_IVAR____TtC6FindMy18FMLocationProvider_isLocationAuthorized));
  v24 = *(void **)&v1[OBJC_IVAR____TtC6FindMy16FMMapOptionsView_perspectiveButtonContainer];
  objc_msgSend(v24, "setAxis:", 1);
  objc_msgSend(v24, "setDistribution:", 1);
  objc_msgSend(v24, "setAlignment:", 3);
  objc_msgSend(v24, "setClipsToBounds:", 1);
  v25 = *(void **)&v1[OBJC_IVAR____TtC6FindMy16FMMapOptionsView_perspective2dButton];
  v26 = (void *)objc_opt_self(_UIImageSymbolConfiguration);
  v27 = objc_msgSend(v26, "configurationWithPointSize:weight:", 5, 17.0);
  v28 = String._bridgeToObjectiveC()();
  v29 = (void *)objc_opt_self(UIImage);
  v30 = objc_msgSend(v29, "systemImageNamed:withConfiguration:", v28, v27);

  v45 = v25;
  objc_msgSend(v25, "setImage:forState:", v30, 0);

  v31 = *(void **)&v1[OBJC_IVAR____TtC6FindMy16FMMapOptionsView_perspective3dButton];
  v32 = objc_msgSend(v26, "configurationWithPointSize:weight:", 5, 17.0);
  v33 = String._bridgeToObjectiveC()();
  v34 = objc_msgSend(v29, "systemImageNamed:withConfiguration:", v33, v32);

  objc_msgSend(v31, "setImage:forState:", v34, 0);
  objc_msgSend(v25, "addTarget:action:forControlEvents:", v1, "perspectiveButtonActionWithSender:", 64);
  objc_msgSend(v31, "addTarget:action:forControlEvents:", v1, "perspectiveButtonActionWithSender:", 64);
  v35 = v49;
  objc_msgSend(v1, "addSubview:", v49);
  v36 = v50;
  objc_msgSend(v35, "addArrangedSubview:", v50);
  v37 = v48;
  objc_msgSend(v35, "addArrangedSubview:", v48);
  v38 = OBJC_IVAR____TtCC6FindMy16FMMapOptionsViewP33_4FBFA1E850653445CBAB4C80170F66AB11PlatterView_blurredBackground;
  v39 = v36;
  v40 = objc_msgSend(*(id *)(v36+ OBJC_IVAR____TtCC6FindMy16FMMapOptionsViewP33_4FBFA1E850653445CBAB4C80170F66AB11PlatterView_blurredBackground), "contentView");
  objc_msgSend(v40, "addSubview:", v47);

  v41 = objc_msgSend(*(id *)(v39 + v38), "contentView");
  objc_msgSend(v41, "addSubview:", v46);

  v42 = objc_msgSend(*(id *)(v39 + v38), "contentView");
  objc_msgSend(v42, "addSubview:", v51);

  objc_msgSend(v24, "addArrangedSubview:", v45);
  objc_msgSend(v24, "addArrangedSubview:", v31);
  objc_msgSend(v37, "addSubview:", v24);
  return sub_100032374(2, 0);
}

id sub_10002AE24()
{
  char *v0;
  void *v1;
  id v2;
  double v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  double v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  NSString v16;

  v1 = *(void **)&v0[OBJC_IVAR____TtCC6FindMy16FMMapOptionsViewP33_4FBFA1E850653445CBAB4C80170F66AB11PlatterView_shadowView];
  v2 = objc_msgSend(v1, "layer");
  v3 = _UISheetCornerRadius;
  objc_msgSend(v2, "setCornerRadius:", _UISheetCornerRadius);

  v4 = objc_msgSend(v1, "layer");
  objc_msgSend(v4, "setMasksToBounds:", 0);

  v5 = objc_msgSend(v1, "layer");
  v6 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  v7 = objc_msgSend(v6, "CGColor");

  objc_msgSend(v5, "setShadowColor:", v7);
  v8 = objc_msgSend(v1, "layer");
  LODWORD(v9) = 1036831949;
  objc_msgSend(v8, "setShadowOpacity:", v9);

  v10 = objc_msgSend(v1, "layer");
  objc_msgSend(v10, "setShadowRadius:", 3.0);

  v11 = objc_msgSend(v1, "layer");
  objc_msgSend(v11, "setShadowPathIsBounds:", 1);

  v12 = objc_msgSend(v1, "layer");
  objc_msgSend(v12, "setShadowOffset:", 0.0, 0.0);

  v13 = *(void **)&v0[OBJC_IVAR____TtCC6FindMy16FMMapOptionsViewP33_4FBFA1E850653445CBAB4C80170F66AB11PlatterView_blurredBackground];
  v14 = objc_msgSend(v13, "layer");
  objc_msgSend(v14, "setMasksToBounds:", 1);

  v15 = objc_msgSend(v13, "layer");
  objc_msgSend(v15, "setCornerRadius:", v3);

  if (qword_1005D1CD8 != -1)
    swift_once(&qword_1005D1CD8, sub_100008DD0);
  objc_msgSend(v13, "setEffect:", qword_1005F5228);
  if (qword_1005D1E90 != -1)
    swift_once(&qword_1005D1E90, sub_10000642C);
  objc_msgSend(v13, "_setCaptureView:", qword_1005F59F8);
  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v13, "_setGroupName:", v16);

  objc_msgSend(v0, "addSubview:", v1);
  return objc_msgSend(v0, "addSubview:", v13);
}

void sub_10002B190(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[24];

  v2 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  __chkstk_darwin(v2);
  v4 = &v25[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = objc_msgSend(a1, "subviews");
  v6 = sub_100006C5C(0, (unint64_t *)&qword_1005DB470, UIView_ptr);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v21 = v7;
    else
      v21 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v22 = _CocoaArrayWrapper.endIndex.getter(v21);
    swift_bridgeObjectRelease(v7);
    if (!v22)
      goto LABEL_32;
  }
  else if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_32;
  }
  if ((v7 & 0xC000000000000001) != 0)
  {
    v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v7);
  }
  else
  {
    if (!*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_28;
    }
    v8 = *(id *)(v7 + 32);
  }
  v9 = v8;
  v10 = objc_msgSend(v8, "gestureRecognizers", swift_bridgeObjectRelease(v7).n128_f64[0]);

  if (!v10)
    return;
  v11 = sub_100006C5C(0, &qword_1005D3CE0, UIGestureRecognizer_ptr);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v10, v11);

  if (!((unint64_t)v7 >> 62))
  {
    v12 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v12)
      goto LABEL_9;
LABEL_32:
    swift_bridgeObjectRelease(v7);
    return;
  }
LABEL_28:
  if (v7 < 0)
    v23 = v7;
  else
    v23 = v7 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v7);
  v12 = _CocoaArrayWrapper.endIndex.getter(v23);
  swift_bridgeObjectRelease(v7);
  if (!v12)
    goto LABEL_32;
LABEL_9:
  if (v12 < 1)
  {
    __break(1u);
  }
  else
  {
    v13 = 0;
    v14 = OBJC_IVAR____TtC6FindMy19FMMapViewController_statusBar;
    v15 = OBJC_IVAR____TtC6FindMy19FMMapViewController_isAutomaticCenteringEnabled;
    v16 = v24 + OBJC_IVAR____TtC6FindMy19FMMapViewController_lastCenterAnimationDisableDate;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
        v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v13, v7);
      else
        v19 = *(id *)(v7 + 8 * v13 + 32);
      v20 = v19;
      if (objc_msgSend(v19, "state") == (id)1 || objc_msgSend(v20, "state") == (id)3)
      {
        v17 = v24;
        *(_BYTE *)(*(_QWORD *)(v24 + v14) + OBJC_IVAR____TtC6FindMy11FMStatusBar_userDidInteractWithMap) = 1;
        *(_BYTE *)(v17 + v15) = 0;
        v18 = type metadata accessor for Date(0);
        (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v4, 1, 1, v18);
        swift_beginAccess(v16, v25, 33, 0);
        sub_100362788((uint64_t)v4, v16);
        swift_endAccess(v25);
      }
      ++v13;

    }
    while (v12 != v13);
    swift_bridgeObjectRelease(v7);
  }
}

void sub_10002B498(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  id v9;
  double v10;
  double v11;
  uint64_t v12;
  _QWORD *v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v4 = type metadata accessor for Logger(0);
  sub_100056D88(v4, (uint64_t)qword_1005F5748);
  v5 = swift_bridgeObjectRetain(a1);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v8 = 134217984;
    v15 = *(_QWORD *)(a1 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, &v16);
    swift_bridgeObjectRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMPersonImageCache: preloadImages for %ld", v8, 0xCu);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease(a1);
  }
  v9 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v9, "scale");
  v11 = v10;

  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v12 = qword_1005F5980;
  swift_retain(v2);
  v13 = sub_1000A07EC(a1, v2, v12, v11);
  v14 = swift_release(v2);
  dispatch thunk of FMImageCache.preload(requests:)(v13, v14);
  swift_bridgeObjectRelease(v13);
}

_QWORD *sub_10002B678(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100053F2C(&qword_1005D2C38);
      v11 = (_QWORD *)swift_allocObject(v10, 104 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 104);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[13 * v8 + 4])
          memmove(v13, a4 + 4, 104 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_10002B7A0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_10002B7A0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v5 = a4 + 104 * a1 + 32;
  v6 = a3 + 104 * v4;
  if (v5 >= v6 || v5 + 104 * v4 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v6;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

void sub_10002B890(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>, double a4@<D0>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  _QWORD *v53;

  v52 = a3;
  v8 = sub_100053F2C(&qword_1005D38C0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = FMFFriend.contactHandles.getter(v9);
  v13 = swift_bridgeObjectRetain(v12);
  v14 = sub_1000587F0(v13);
  swift_bridgeObjectRelease(v12);
  v53 = v14;
  sub_10005880C((uint64_t *)&v53);
  if (v4)
  {
    swift_release(v53);
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease(v12);
    v15 = v53;
    if (!v53[2])
    {
      swift_release(v53);
      goto LABEL_6;
    }
    v16 = v53[4];
    v17 = v53[5];
    v50 = a1;
    v51 = v16;
    swift_bridgeObjectRetain(v17);
    v18 = swift_release(v15);
    FMFFriend.contact.getter(v18);
    v19 = type metadata accessor for FMFContact(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v11, 1, v19) == 1)
    {
      swift_bridgeObjectRelease(v17);
      sub_1000051EC((uint64_t)v11, &qword_1005D38C0);
LABEL_6:
      *v52 = (uint64_t)_swiftEmptyArrayStorage;
      return;
    }
    v21 = FMFContact.storeUUID.getter();
    v49 = a2;
    v23 = v22;
    (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v19);
    v24 = swift_bridgeObjectRetain(v23);
    v25 = FMFFriend.identifier.getter(v24);
    v27 = v26;
    v28 = v21;
    v47 = v21;
    v29 = v50;
    v30 = sub_10009F918(v21, v23, v25, v26);
    v46 = v30;
    v48 = v31;
    swift_bridgeObjectRelease(v23);
    swift_bridgeObjectRelease(v27);
    v32 = sub_100053F2C(&qword_1005D2C38);
    v33 = swift_allocObject(v32, 240, 7);
    *(_OWORD *)(v33 + 16) = xmmword_100481730;
    v34 = FMFFriend.identifier.getter(v33);
    v35 = *(_QWORD *)(v29 + qword_1005D38F8);
    v36 = *(_QWORD *)(v29 + qword_1005D38F8 + 8);
    v45 = v35;
    *(_QWORD *)(v33 + 32) = v34;
    *(_QWORD *)(v33 + 40) = v37;
    *(_QWORD *)(v33 + 48) = v28;
    *(_QWORD *)(v33 + 56) = v23;
    v38 = v51;
    *(_QWORD *)(v33 + 64) = v51;
    *(_QWORD *)(v33 + 72) = v17;
    *(_BYTE *)(v33 + 80) = 0;
    v39 = v48;
    *(_QWORD *)(v33 + 88) = v30;
    *(_QWORD *)(v33 + 96) = v39;
    *(double *)(v33 + 104) = a4;
    v40 = v49;
    *(_QWORD *)(v33 + 112) = v49;
    *(_QWORD *)(v33 + 120) = v35;
    *(_QWORD *)(v33 + 128) = v36;
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v23);
    v50 = 0;
    swift_bridgeObjectRetain(v39);
    v41 = swift_bridgeObjectRetain(v36);
    *(_QWORD *)(v33 + 136) = FMFFriend.identifier.getter(v41);
    *(_QWORD *)(v33 + 144) = v42;
    *(_QWORD *)(v33 + 152) = v47;
    *(_QWORD *)(v33 + 160) = v23;
    *(_QWORD *)(v33 + 168) = v38;
    *(_QWORD *)(v33 + 176) = v17;
    *(_BYTE *)(v33 + 184) = 1;
    *(_QWORD *)(v33 + 192) = v46;
    *(_QWORD *)(v33 + 200) = v39;
    *(double *)(v33 + 208) = a4;
    v43 = v45;
    *(_QWORD *)(v33 + 216) = v40;
    *(_QWORD *)(v33 + 224) = v43;
    *(_QWORD *)(v33 + 232) = v36;
    *v52 = v33;
    swift_bridgeObjectRetain(v36);
  }
}

void sub_10002BB68()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  id v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  uint64_t v58;
  Class isa;
  uint64_t v60;
  id v61;
  id v62;
  void *v63;
  id v64;
  id v65;
  id v66;
  id v67;
  void *v68;
  id v69;
  id v70;
  id v71;
  id v72;
  void *v73;
  id v74;
  id v75;
  uint64_t v76;
  Class v77;
  double v78;
  uint64_t v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  uint64_t v86;
  Class v87;
  void *v88;
  void *v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  id v94;
  uint64_t v95;
  id v96;
  uint64_t v97;
  id v98;
  id v99;
  id v100;
  id v101;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_darkenerBackground];
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = *(void **)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardShadow];
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = *(void **)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardContainer];
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v5 = *(void **)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_closeButton];
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v6 = objc_msgSend(v4, "topAnchor");
  v7 = objc_msgSend(v1, "view");
  if (!v7)
  {
    __break(1u);
    goto LABEL_16;
  }
  v8 = v7;
  v99 = v5;
  v9 = objc_msgSend(v7, "safeAreaLayoutGuide");

  v10 = objc_msgSend(v9, "topAnchor");
  v11 = objc_msgSend(v6, "constraintEqualToAnchor:", v10);

  v12 = objc_msgSend(v4, "topAnchor");
  v13 = objc_msgSend(v1, "view");
  if (!v13)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v14 = v13;
  v15 = objc_msgSend(v13, "topAnchor");

  v16 = objc_msgSend(v12, "constraintEqualToAnchor:", v15);
  v100 = (id)sub_100053F2C(&qword_1005D2F10);
  v17 = swift_allocObject(v100, 80, 7);
  *(_OWORD *)(v17 + 16) = xmmword_100484130;
  *(_QWORD *)(v17 + 32) = v11;
  v98 = v11;
  v18 = objc_msgSend(v3, "topAnchor");
  v19 = objc_msgSend(v4, "topAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:constant:", v19, 10.0);

  *(_QWORD *)(v17 + 40) = v20;
  v21 = objc_msgSend(v2, "topAnchor");
  v22 = objc_msgSend(v1, "view");
  if (!v22)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v23 = v22;
  v24 = objc_msgSend(v22, "topAnchor");

  v25 = objc_msgSend(v21, "constraintEqualToAnchor:", v24);
  *(_QWORD *)(v17 + 48) = v25;
  v26 = objc_msgSend(v2, "bottomAnchor");
  v27 = objc_msgSend(v1, "view");
  if (!v27)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v28 = v27;
  v29 = objc_msgSend(v27, "bottomAnchor");

  v30 = objc_msgSend(v26, "constraintEqualToAnchor:", v29);
  *(_QWORD *)(v17 + 56) = v30;
  v31 = objc_msgSend(v2, "leadingAnchor");
  v32 = objc_msgSend(v1, "view");
  if (!v32)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v33 = v32;
  v34 = objc_msgSend(v32, "leadingAnchor");

  v35 = objc_msgSend(v31, "constraintEqualToAnchor:", v34);
  *(_QWORD *)(v17 + 64) = v35;
  v36 = objc_msgSend(v2, "trailingAnchor");
  v37 = objc_msgSend(v1, "view");
  if (!v37)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v38 = v37;
  v39 = objc_msgSend(v37, "trailingAnchor");

  v40 = objc_msgSend(v36, "constraintEqualToAnchor:", v39);
  *(_QWORD *)(v17 + 72) = v40;
  specialized Array._endMutation()(v41);
  v97 = v17;
  v42 = swift_allocObject(v100, 48, 7);
  *(_OWORD *)(v42 + 16) = xmmword_1004820B0;
  *(_QWORD *)(v42 + 32) = v16;
  v96 = v16;
  v43 = objc_msgSend(v3, "topAnchor");
  v44 = objc_msgSend(v4, "topAnchor");
  v45 = objc_msgSend(v43, "constraintEqualToAnchor:constant:", v44, 10.0);

  *(_QWORD *)(v42 + 40) = v45;
  specialized Array._endMutation()(v46);
  v95 = v42;
  v47 = (void *)objc_opt_self(NSLayoutConstraint);
  v48 = swift_allocObject(v100, 56, 7);
  *(_OWORD *)(v48 + 16) = xmmword_1004820C0;
  v49 = objc_msgSend(v3, "bottomAnchor");
  v50 = objc_msgSend(v4, "bottomAnchor");
  v51 = objc_msgSend(v49, "constraintEqualToAnchor:", v50);

  *(_QWORD *)(v48 + 32) = v51;
  v52 = objc_msgSend(v3, "leadingAnchor");
  v53 = objc_msgSend(v4, "leadingAnchor");
  v54 = objc_msgSend(v52, "constraintEqualToAnchor:", v53);

  *(_QWORD *)(v48 + 40) = v54;
  v55 = objc_msgSend(v3, "trailingAnchor");
  v56 = objc_msgSend(v4, "trailingAnchor");
  v57 = objc_msgSend(v55, "constraintEqualToAnchor:", v56);

  *(_QWORD *)(v48 + 48) = v57;
  specialized Array._endMutation()(v58);
  sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v47, "activateConstraints:", isa, swift_bridgeObjectRelease(v48).n128_f64[0]);

  v60 = swift_allocObject(v100, 56, 7);
  *(_OWORD *)(v60 + 16) = xmmword_1004820C0;
  v61 = objc_msgSend(v4, "bottomAnchor");
  v62 = objc_msgSend(v1, "view");
  if (!v62)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v63 = v62;
  v64 = objc_msgSend(v62, "bottomAnchor");

  v65 = objc_msgSend(v61, "constraintEqualToAnchor:", v64);
  *(_QWORD *)(v60 + 32) = v65;
  v66 = objc_msgSend(v4, "leadingAnchor");
  v67 = objc_msgSend(v1, "view");
  if (!v67)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v68 = v67;
  v69 = objc_msgSend(v67, "leadingAnchor");

  v70 = objc_msgSend(v66, "constraintEqualToAnchor:", v69);
  *(_QWORD *)(v60 + 40) = v70;
  v71 = objc_msgSend(v4, "trailingAnchor");
  v72 = objc_msgSend(v1, "view");
  if (!v72)
  {
LABEL_23:
    __break(1u);
    return;
  }
  v73 = v72;
  v74 = objc_msgSend(v72, "trailingAnchor");

  v75 = objc_msgSend(v71, "constraintEqualToAnchor:", v74);
  *(_QWORD *)(v60 + 48) = v75;
  specialized Array._endMutation()(v76);
  v77 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v47, "activateConstraints:", v77, swift_bridgeObjectRelease(v60).n128_f64[0]);

  if (qword_1005D1DC8 != -1)
    swift_once(&qword_1005D1DC8, sub_10005F330);
  v78 = *(double *)&qword_1005F5648;
  v79 = swift_allocObject(v100, 48, 7);
  *(_OWORD *)(v79 + 16) = xmmword_1004820B0;
  v80 = objc_msgSend(v99, "topAnchor");
  v81 = objc_msgSend(v4, "topAnchor");
  v82 = objc_msgSend(v80, "constraintEqualToAnchor:constant:", v81, v78);

  *(_QWORD *)(v79 + 32) = v82;
  v83 = objc_msgSend(v99, "trailingAnchor");
  v84 = objc_msgSend(v4, "trailingAnchor");
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v85 = objc_msgSend(v83, "constraintEqualToAnchor:constant:", v84, -*(double *)&qword_1005F5978, 2, 5);

  *(_QWORD *)(v79 + 40) = v85;
  specialized Array._endMutation()(v86);
  v87 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v47, "activateConstraints:", v87, swift_bridgeObjectRelease(v79).n128_f64[0]);

  v88 = *(void **)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_compactCardTopConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_compactCardTopConstraint] = v98;
  v101 = v98;

  v89 = *(void **)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_regularCardTopConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_regularCardTopConstraint] = v96;
  v90 = v96;

  v91 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_compactConstraints];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_compactConstraints] = v97;
  swift_bridgeObjectRelease(v91);
  v92 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_regularConstraints];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_regularConstraints] = v95;
  v93 = objc_msgSend(v1, "traitCollection", swift_bridgeObjectRelease(v92).n128_f64[0]);
  v94 = objc_msgSend(v93, "horizontalSizeClass");

  sub_10005DE50((uint64_t)v94);
}

void sub_10002C688(int a1, void (*a2)(id), uint64_t a3)
{
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unsigned __int8 *v17;
  uint64_t v18;
  void (*v19)(id);
  uint64_t v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  int v36;
  void *v37;
  uint64_t v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  const char *v52;
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 *v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint64_t v76;
  _BYTE *v77;
  _BYTE *v78;
  NSObject *v79;
  os_log_type_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  NSObject *v87;
  _BOOL8 v88;
  id v89;
  double v90;
  double v91;
  uint64_t v92;
  NSObject *v93;
  os_log_type_t v94;
  uint8_t *v95;
  const char *v96;
  NSObject *v97;
  os_log_type_t v98;
  uint8_t *v99;
  uint32_t v100;
  os_log_type_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(id);
  uint64_t v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  double v109;
  _BYTE v110[16];
  char v111[24];
  uint64_t v112;
  uint64_t v113;
  CLLocationCoordinate2D v114;

  v4 = v3;
  v108 = a3;
  LODWORD(v6) = a1;
  v7 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v104 - v11;
  v13 = type metadata accessor for Date(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v104 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(unsigned __int8 **)&v4[OBJC_IVAR____TtC6FindMy19FMMapViewController_dataSource];
  if (v17[57] == 1 && (v4[OBJC_IVAR____TtC6FindMy19FMMapViewController_isAutomaticCenteringEnabled] & 1) == 0)
  {
    v107 = *(_QWORD *)&v4[OBJC_IVAR____TtC6FindMy19FMMapViewController_dataSource];
    v18 = (uint64_t)&v4[OBJC_IVAR____TtC6FindMy19FMMapViewController_lastCenterAnimationDisableDate];
    swift_beginAccess(&v4[OBJC_IVAR____TtC6FindMy19FMMapViewController_lastCenterAnimationDisableDate], v111, 0, 0);
    sub_100007464(v18, (uint64_t)v12, (uint64_t *)&unk_1005D3320);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    {
      sub_1000051EC((uint64_t)v12, (uint64_t *)&unk_1005D3320);
LABEL_21:
      v17 = (unsigned __int8 *)v107;
      goto LABEL_22;
    }
    v106 = v6;
    v19 = a2;
    v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    v21 = -Date.timeIntervalSinceNow.getter(v20);
    if (qword_1005D1F30 != -1)
      swift_once(&qword_1005D1F30, sub_10005F428);
    if (*(double *)&xmmword_1005F5CA0 >= v21)
    {
      (*(void (**)(char *, uint64_t, double))(v14 + 8))(v16, v13, *(double *)&xmmword_1005F5CA0);
LABEL_20:
      LODWORD(v6) = v106;
      goto LABEL_21;
    }
    sub_10002D68C();
    v23 = v22;
    if ((unint64_t)v22 >> 62)
    {
      if (v22 >= 0)
        v22 &= 0xFFFFFFFFFFFFFF8uLL;
      if (_CocoaArrayWrapper.endIndex.getter(v22))
        goto LABEL_10;
    }
    else if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_10:
      if ((v23 & 0xC000000000000001) != 0)
      {
        v24 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v23);
      }
      else
      {
        if (!*(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return;
        }
        v24 = *(void **)(v23 + 32);
        swift_unknownObjectRetain(v24);
      }
      swift_bridgeObjectRelease(v23);
      v25 = *(void **)&v4[OBJC_IVAR____TtC6FindMy19FMMapViewController_mapView];
      objc_msgSend(v24, "coordinate");
      objc_msgSend(v25, "setCenterCoordinate:animated:", 1);
      swift_unknownObjectRelease(v24);
      a2 = v19;
      goto LABEL_19;
    }
    swift_bridgeObjectRelease(v23);
LABEL_19:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v10, 1, 1, v13);
    swift_beginAccess(v18, &v109, 33, 0);
    sub_100362788((uint64_t)v10, v18);
    swift_endAccess(&v109);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    goto LABEL_20;
  }
LABEL_22:
  if (v4[OBJC_IVAR____TtC6FindMy19FMMapViewController_isAutomaticCenteringEnabled] != 1
    || (v4[OBJC_IVAR____TtC6FindMy19FMMapViewController_isPOISelected] & 1) != 0)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v26 = type metadata accessor for Logger(0);
    v27 = sub_100056D88(v26, (uint64_t)qword_1005F5748);
    v28 = Logger.logObject.getter(v27);
    v29 = static os_log_type_t.default.getter(v28);
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "FMMapViewController: center camera isAutomaticCenteringEnabled disabled", v30, 2u);
      swift_slowDealloc(v30, -1, -1);
    }
    goto LABEL_28;
  }
  v104 = a2;
  if (v17[56] > 1u)
    v31 = sub_100357BC0();
  else
    sub_10002D68C();
  v32 = v31;
  v33 = (unint64_t)v31 >> 62;
  if (v17[56])
  {
    v34 = 1;
  }
  else
  {
    if (v33)
    {
      if (v31 < 0)
        v103 = v31;
      else
        v103 = v31 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v31);
      v35 = _CocoaArrayWrapper.endIndex.getter(v103);
      swift_bridgeObjectRelease(v32);
    }
    else
    {
      v35 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v34 = v35 < 2;
  }
  v36 = v17[58] & v34;
  v37 = *(void **)&v4[OBJC_IVAR____TtC6FindMy19FMMapViewController_mapView];
  if (v33)
  {
    if (v32 < 0)
      v102 = v32;
    else
      v102 = v32 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v32);
    v38 = _CocoaArrayWrapper.endIndex.getter(v102);
    swift_bridgeObjectRelease(v32);
  }
  else
  {
    v38 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  sub_10002D190(v32, v38 > 1, v36);
  v40 = v39;
  v42 = v41;
  v44 = v43;
  v46 = v45;
  v105 = v38;
  if (v36)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v47 = type metadata accessor for Logger(0);
    v48 = sub_100056D88(v47, (uint64_t)qword_1005F5748);
    v49 = Logger.logObject.getter(v48);
    v50 = static os_log_type_t.default.getter(v49);
    if (!os_log_type_enabled(v49, v50))
      goto LABEL_52;
    v51 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v51 = 0;
    v52 = "FMMapViewController: Normalizing map";
    goto LABEL_51;
  }
  if (v17[56] || v38 > 2)
    goto LABEL_58;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v53 = type metadata accessor for Logger(0);
  v54 = sub_100056D88(v53, (uint64_t)qword_1005F5748);
  v49 = Logger.logObject.getter(v54);
  v50 = static os_log_type_t.default.getter(v49);
  if (os_log_type_enabled(v49, v50))
  {
    v51 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v51 = 0;
    v52 = "FMMapViewController: Normalizing single annotation";
LABEL_51:
    _os_log_impl((void *)&_mh_execute_header, v49, v50, v52, v51, 2u);
    swift_slowDealloc(v51, -1, -1);
  }
LABEL_52:

  if (v44 < 4000.0 || v46 < 4000.0)
  {
    v42 = v42 - (4000.0 - v46) * 0.5;
    v40 = v40 - (4000.0 - v44) * 0.5;
    v44 = 4000.0;
    v46 = 4000.0;
  }
LABEL_58:
  v56 = v17;
  sub_10002E768();
  objc_msgSend(v37, "mapRectThatFits:edgePadding:", v40, v42, v44, v46, v57, v58, v59, v60);
  v62 = v61;
  v64 = v63;
  v66 = v65;
  v68 = v67;
  objc_msgSend(v37, "frame");
  v70 = v69;
  v72 = v71;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v73 = type metadata accessor for Logger(0);
  v107 = sub_100056D88(v73, (uint64_t)qword_1005F5748);
  v74 = Logger.logObject.getter(v107);
  v75 = static os_log_type_t.default.getter(v74);
  if (os_log_type_enabled(v74, v75))
  {
    v76 = swift_slowAlloc(22, -1);
    *(_DWORD *)v76 = 134218240;
    v109 = v68;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, v110);
    *(_WORD *)(v76 + 12) = 2048;
    v109 = v66;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, v110);
    _os_log_impl((void *)&_mh_execute_header, v74, v75, "FMMapViewController: padded map rect height: %f, width: %f", (uint8_t *)v76, 0x16u);
    swift_slowDealloc(v76, -1, -1);
  }

  v77 = v4;
  swift_bridgeObjectRetain(v32);
  v78 = v77;
  v79 = Logger.logObject.getter(v78);
  v80 = static os_log_type_t.default.getter(v79);
  if (os_log_type_enabled(v79, v80))
  {
    v81 = swift_slowAlloc(22, -1);
    v106 = v6;
    v6 = v81;
    v82 = swift_slowAlloc(32, -1);
    v109 = *(double *)&v82;
    *(_DWORD *)v6 = 136315394;
    LOBYTE(v112) = v56[56];
    v83 = String.init<A>(describing:)(&v112, &type metadata for FMMapViewMode);
    v85 = v84;
    v112 = sub_100056DA0(v83, v84, (uint64_t *)&v109);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v112, &v113);

    swift_bridgeObjectRelease(v85);
    *(_WORD *)(v6 + 12) = 2048;
    swift_bridgeObjectRelease(v32);
    v112 = v105;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v112, &v113);
    swift_bridgeObjectRelease(v32);
    _os_log_impl((void *)&_mh_execute_header, v79, v80, "FMMapViewController: center camera dataSource.mode: %s, annotations count: %ld", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy(v82, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v82, -1, -1);
    v86 = v6;
    LOBYTE(v6) = v106;
    swift_slowDealloc(v86, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v32, 2);
  }
  v87 = objc_msgSend((id)objc_opt_self(MKMapCamera), "_cameraLookingAtMapRect:forViewSize:", v62, v64, v66, v68, v70, v72);
  if (v87)
  {
    v28 = v87;
    -[NSObject centerCoordinate](v87, "centerCoordinate");
    v88 = CLLocationCoordinate2DIsValid(v114);
    if (!v88)
    {
LABEL_28:

      return;
    }
    if ((v6 & 1) != 0)
    {
      v89 = objc_msgSend(v37, "camera", v104);
      objc_msgSend(v89, "pitch");
      v91 = v90;

      v93 = Logger.logObject.getter(v92);
      v94 = static os_log_type_t.default.getter(v93);
      if (os_log_type_enabled(v93, v94))
      {
        v95 = (uint8_t *)swift_slowAlloc(12, -1);
        *(_DWORD *)v95 = 134217984;
        v109 = v91;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v109, v110);
        v96 = "FMMapViewController: center camera preserving pitch: %f";
        v97 = v93;
        v98 = v94;
        v99 = v95;
        v100 = 12;
LABEL_72:
        _os_log_impl((void *)&_mh_execute_header, v97, v98, v96, v99, v100);
        swift_slowDealloc(v95, -1, -1);
      }
    }
    else
    {
      v93 = Logger.logObject.getter(v88);
      v101 = static os_log_type_t.default.getter(v93);
      v91 = 0.0;
      if (os_log_type_enabled(v93, v101))
      {
        v95 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v95 = 0;
        v96 = "FMMapViewController: center camera reset pitch to zero";
        v97 = v93;
        v98 = v101;
        v99 = v95;
        v100 = 2;
        goto LABEL_72;
      }
    }

    -[NSObject setPitch:](v28, "setPitch:", v91);
    sub_10000D410(v28, v104, v108, 0.6);
    goto LABEL_28;
  }
}

uint64_t sub_10002D190(uint64_t a1, int a2, int a3)
{
  uint8_t *v4;
  uint64_t v6;
  uint64_t result;
  double x;
  double y;
  double width;
  double height;
  uint64_t v12;
  SEL *v13;
  void *v14;
  uint64_t ObjectType;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[5];
  int v48;
  int v49;
  uint64_t v50;
  CLLocationCoordinate2D v51;
  MKMapRect v52;
  MKMapRect v53;
  MKMapRect v54;
  MKMapRect v55;
  MKMapRect v56;
  MKMapRect v57;
  MKMapRect v58;
  MKMapRect v59;
  MKMapRect v60;

  LODWORD(v4) = a2;
  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v46 = a1;
    else
      v46 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    result = _CocoaArrayWrapper.endIndex.getter(v46);
    v6 = result;
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(a1);
  }
  x = MKMapRectNull.origin.x;
  y = MKMapRectNull.origin.y;
  width = MKMapRectNull.size.width;
  height = MKMapRectNull.size.height;
  if (!v6)
    return swift_bridgeObjectRelease(a1);
  if (v6 < 1)
    goto LABEL_44;
  v12 = 0;
  v13 = (SEL *)&unk_1005AA000;
  v48 = a3;
  v49 = (int)v4;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      v14 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, a1);
      if ((v4 & 1) == 0)
        goto LABEL_13;
    }
    else
    {
      v14 = *(void **)(a1 + 8 * v12 + 32);
      swift_unknownObjectRetain(v14);
      if ((v4 & 1) == 0)
        goto LABEL_13;
    }
    ObjectType = swift_getObjectType(v14);
    if (ObjectType == sub_10033E8C4())
    {
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v25 = type metadata accessor for Logger(0);
      v26 = sub_100056D88(v25, (uint64_t)qword_1005F5748);
      v27 = Logger.logObject.getter(v26);
      v28 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v27, v28))
      {
        v4 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v4 = 0;
        _os_log_impl((void *)&_mh_execute_header, v27, v28, "MKMapView: mapRectForAnnotations ignoring user location", v4, 2u);
        v29 = v4;
        LOBYTE(v4) = v49;
        swift_slowDealloc(v29, -1, -1);
        swift_unknownObjectRelease(v14);

      }
      else
      {

        swift_unknownObjectRelease(v14);
      }
      goto LABEL_30;
    }
LABEL_13:
    objc_msgSend(v14, v13[167]);
    if (CLLocationCoordinate2DIsValid(v51))
      break;
    swift_unknownObjectRelease(v14);
LABEL_7:
    if (v6 == ++v12)
      return swift_bridgeObjectRelease(a1);
  }
  v16 = type metadata accessor for FMAnnotation();
  v17 = swift_dynamicCastClass(v14, v16);
  if (v17 && (a3 & 1) != 0)
  {
    v18 = (void *)v17;
    swift_unknownObjectRetain(v14);
    v19 = objc_msgSend(v18, v13[167]);
LABEL_32:
    v59.origin.x = MKMapRectMakeWithRadialDistance(v19);
    v59.origin.y = v39;
    v59.size.width = v40;
    v59.size.height = v41;
    v54.origin.x = x;
    v54.origin.y = y;
    v54.size.width = width;
    v54.size.height = height;
    v55 = MKMapRectUnion(v54, v59);
    x = v55.origin.x;
    y = v55.origin.y;
    width = v55.size.width;
    height = v55.size.height;
    swift_unknownObjectRelease_n(v14, 2);
    goto LABEL_7;
  }
  v20 = objc_opt_self(MKUserLocation);
  v21 = swift_dynamicCastObjCClass(v14, v20);
  if (v21)
  {
    v22 = (void *)v21;
    swift_unknownObjectRetain(v14);
    v23 = objc_msgSend(v22, "location");
    if (v23)
    {
      v24 = v23;
      objc_msgSend(v23, "horizontalAccuracy");

    }
    v13 = (SEL *)&unk_1005AA000;
    v19 = objc_msgSend(v22, "coordinate");
    goto LABEL_32;
  }
  v30 = type metadata accessor for FMClusterAnnotation();
  v31 = swift_dynamicCastClass(v14, v30);
  if (!v31)
  {
    v60.origin.x = MKMapRectMakeWithRadialDistance(objc_msgSend(v14, v13[167]));
    v60.origin.y = v42;
    v60.size.width = v43;
    v60.size.height = v44;
    v56.origin.x = x;
    v56.origin.y = y;
    v56.size.width = width;
    v56.size.height = height;
    v57 = MKMapRectUnion(v56, v60);
    x = v57.origin.x;
    y = v57.origin.y;
    width = v57.size.width;
    height = v57.size.height;
    swift_unknownObjectRelease(v14);
    LOBYTE(v4) = v49;
    goto LABEL_7;
  }
  v32 = (void *)v31;
  swift_unknownObjectRetain(v14);
  __chkstk_darwin(objc_msgSend(v32, v13[167]));
  v47[2] = v32;
  v33 = sub_100053F2C(&qword_1005E3BC0);
  OS_dispatch_queue.sync<A>(execute:)(&v50, sub_1000758EC, v47, v33);
  v34 = v50;
  if ((unint64_t)v50 >> 62)
  {
    if (v50 < 0)
      v45 = v50;
    else
      v45 = v50 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v50);
    v35 = _CocoaArrayWrapper.endIndex.getter(v45);
    swift_bridgeObjectRelease(v34);
  }
  else
  {
    v35 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  result = swift_bridgeObjectRelease(v34);
  LOBYTE(a3) = v48;
  LOBYTE(v4) = v49;
  if ((unsigned __int128)(v35 * (__int128)300) >> 64 == (300 * v35) >> 63)
  {
    v58.origin.x = MKMapRectMakeWithRadialDistance(result);
    v58.origin.y = v36;
    v58.size.width = v37;
    v58.size.height = v38;
    v52.origin.x = x;
    v52.origin.y = y;
    v52.size.width = width;
    v52.size.height = height;
    v53 = MKMapRectUnion(v52, v58);
    x = v53.origin.x;
    y = v53.origin.y;
    width = v53.size.width;
    height = v53.size.height;
    swift_unknownObjectRelease_n(v14, 2);
LABEL_30:
    v13 = (SEL *)&unk_1005AA000;
    goto LABEL_7;
  }
  __break(1u);
LABEL_44:
  __break(1u);
  return result;
}

void sub_10002D68C()
{
  unint64_t v0;
  double x;
  double y;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *p_base_prots;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  void *v40;
  uint64_t v41;
  int v42;
  char *v43;
  SEL *v44;
  MKMapPoint v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  void *v49;
  CLLocationDistance v50;
  unint64_t v51;
  unint64_t v52;
  CLLocationDistance *v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int EnumCaseMultiPayload;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  BOOL v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  char v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  char v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  char v128;
  char v129;
  uint64_t *v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  double v138;
  uint64_t v139;
  double v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t *v153;
  uint64_t *v154;
  uint64_t *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  char *v174;
  unint64_t v175;
  _QWORD *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  CLLocationCoordinate2D v181;
  CLLocationCoordinate2D v182;
  MKMapPoint v183;
  MKMapPoint v184;

  v163 = sub_100053F2C((uint64_t *)&unk_1005D7A50);
  v3 = __chkstk_darwin(v163);
  v160 = (uint64_t)&v147 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v159 = (uint64_t)&v147 - v5;
  v6 = sub_100053F2C((uint64_t *)&unk_1005E1110);
  __chkstk_darwin(v6);
  p_base_prots = (uint64_t *)((char *)&v147 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = type metadata accessor for FMAnnotationIdentifier(0);
  v173 = *(_QWORD *)(v9 - 8);
  v10 = __chkstk_darwin(v9);
  v171 = (char *)&v147 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v170 = (uint64_t)&v147 - v13;
  v14 = __chkstk_darwin(v12);
  v154 = (uint64_t *)((char *)&v147 - v15);
  v16 = __chkstk_darwin(v14);
  v162 = (char *)&v147 - v17;
  v18 = __chkstk_darwin(v16);
  v157 = (uint64_t)&v147 - v19;
  v20 = __chkstk_darwin(v18);
  v153 = (uint64_t *)((char *)&v147 - v21);
  v22 = __chkstk_darwin(v20);
  v161 = (char *)&v147 - v23;
  v24 = __chkstk_darwin(v22);
  v156 = (uint64_t)&v147 - v25;
  v26 = __chkstk_darwin(v24);
  v158 = (uint64_t)&v147 - v27;
  v28 = __chkstk_darwin(v26);
  v167 = (uint64_t)&v147 - v29;
  v30 = __chkstk_darwin(v28);
  v155 = (uint64_t *)((char *)&v147 - v31);
  v32 = __chkstk_darwin(v30);
  v166 = (char *)&v147 - v33;
  __chkstk_darwin(v32);
  v174 = (char *)&v147 - v34;
  v35 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy19FMMapViewController_mapView);
  v36 = objc_msgSend(v35, "annotations");
  v37 = sub_100053F2C(&qword_1005E1120);
  v38 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v36, v37);

  v39 = v0;
  v178 = v38;
  v40 = *(void **)(*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator) + 40)
                 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
  if (v40)
  {
    v41 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy19FMMapViewController_dataSource);
    v42 = *(unsigned __int8 *)(v41 + 56);
    if (!*(_BYTE *)(v41 + 56) || (*(_BYTE *)(v41 + 58) & 1) == 0)
    {
      swift_bridgeObjectRetain(v38);
      v43 = v40;
      v44 = (SEL *)&unk_1005AA000;
      objc_msgSend(v43, "coordinate");
      v45 = MKMapPointForCoordinate(v181);
      x = v45.x;
      y = v45.y;
      v177 = (uint64_t)_swiftEmptyArrayStorage;
      if ((unint64_t)v38 >> 62)
      {
LABEL_98:
        if (v38 < 0)
          v134 = v38;
        else
          v134 = v38 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v38);
        v46 = _CocoaArrayWrapper.endIndex.getter(v134);
        v174 = v43;
        if (v46)
          goto LABEL_6;
      }
      else
      {
        v46 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain(v38);
        v174 = v43;
        if (v46)
        {
LABEL_6:
          if (v46 < 1)
            goto LABEL_134;
          v47 = 0;
          v48 = _swiftEmptyArrayStorage;
          do
          {
            if ((v38 & 0xC000000000000001) != 0)
            {
              v49 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)(v47, v38);
            }
            else
            {
              v49 = *(void **)(v38 + 8 * v47 + 32);
              swift_unknownObjectRetain(v49);
            }
            objc_msgSend(v49, v44[167]);
            v184 = MKMapPointForCoordinate(v182);
            v183.x = x;
            v183.y = y;
            v50 = MKMetersBetweenMapPoints(v183, v184);
            if ((swift_isUniquelyReferenced_nonNull_native(v48) & 1) == 0)
              v48 = sub_100070A34(0, v48[2] + 1, 1, v48);
            v52 = v48[2];
            v51 = v48[3];
            if (v52 >= v51 >> 1)
              v48 = sub_100070A34((_QWORD *)(v51 > 1), v52 + 1, 1, v48);
            ++v47;
            v48[2] = v52 + 1;
            v53 = (CLLocationDistance *)&v48[2 * v52];
            v53[4] = v50;
            *((_QWORD *)v53 + 5) = v49;
          }
          while (v46 != v47);
          goto LABEL_103;
        }
      }
      v48 = _swiftEmptyArrayStorage;
LABEL_103:
      swift_bridgeObjectRelease_n(v38, 2);
      v176 = v48;
      swift_bridgeObjectRetain_n(v48, 2);
      sub_10035D964(&v176);
      swift_bridgeObjectRelease(v48);
      v135 = (unint64_t)v176;
      swift_bridgeObjectRelease(v178);
      v175 = v135;
      v136 = *(_QWORD *)(v135 + 16);
      if (!v136)
      {
LABEL_126:

        swift_release(v175);
        swift_bridgeObjectRelease(v48);
        return;
      }
      v38 = v175 + 40;
      v137 = 4;
      v138 = 0.0;
      p_base_prots = (uint64_t *)&LocateIntent__classData.base_prots;
      while (1)
      {
        x = *(double *)(v38 - 8);
        v9 = *(_QWORD *)v38;
        v139 = qword_1005D1F30;
        swift_unknownObjectRetain(*(_QWORD *)v38);
        if (v139 != -1)
          swift_once(&qword_1005D1F30, sub_10005F428);
        if (x < *(double *)&qword_1005F5C78)
          goto LABEL_119;
        v140 = *(double *)&xmmword_1005F5C80;
        v141 = v177;
        if ((unint64_t)v177 >> 62)
        {
          if (v177 < 0)
            v142 = v177;
          else
            v142 = v177 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain(v177);
          v143 = _CocoaArrayWrapper.endIndex.getter(v142);
          swift_bridgeObjectRelease(v141);
          if (v143 < v137)
          {
LABEL_111:
            if (x >= v140)
              goto LABEL_125;
            goto LABEL_119;
          }
        }
        else if (*(_QWORD *)((v177 & 0xFFFFFFFFFFFFF8) + 0x10) < v137)
        {
          goto LABEL_111;
        }
        if (x >= v140 || x - *(double *)&qword_1005F5C90 > v138)
        {
LABEL_125:
          swift_unknownObjectRelease(v9);
          goto LABEL_126;
        }
LABEL_119:
        v144 = swift_unknownObjectRetain(v9);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v144);
        v39 = *(_QWORD *)((v177 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v145 = *(_QWORD *)((v177 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v39 >= v145 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v145 > 1, v39 + 1, 1);
        v146 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v39, v9);
        specialized Array._endMutation()(v146);
        y = *((double *)&xmmword_1005F5C80 + 1);
        swift_unknownObjectRelease(v9);
        if (x < y)
        {
          v57 = __OFADD__(v137++, 1);
          if (v57)
          {
            __break(1u);
            goto LABEL_128;
          }
        }
        v38 += 16;
        v138 = x;
        if (!--v136)
          goto LABEL_126;
      }
    }
  }
  else
  {
    v42 = *(unsigned __int8 *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy19FMMapViewController_dataSource) + 56);
  }
  if (v42 != 1)
    return;
  swift_bridgeObjectRelease(v38);
  v178 = (uint64_t)_swiftEmptyArrayStorage;
  v44 = (SEL *)objc_msgSend(v35, "annotations");
  v38 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v44, v37);

  if ((unint64_t)v38 >> 62)
  {
LABEL_128:
    if (v38 < 0)
      v44 = (SEL *)v38;
    else
      v44 = (SEL *)(v38 & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain(v38);
    v43 = (char *)_CocoaArrayWrapper.endIndex.getter(v44);
    swift_bridgeObjectRelease(v38);
    v54 = (uint64_t)v166;
    if (v43)
      goto LABEL_21;
LABEL_132:
    swift_bridgeObjectRelease(v38);
    return;
  }
  v43 = *(char **)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
  v54 = (uint64_t)v166;
  if (!v43)
    goto LABEL_132;
LABEL_21:
  v55 = 0;
  v175 = v38 & 0xC000000000000001;
  v168 = v38 + 32;
  v169 = v38 & 0xFFFFFFFFFFFFFF8;
  v164 = v38;
  v165 = v9;
  v152 = v39;
  v172 = v43;
  while (1)
  {
    if (v175)
    {
      v56 = specialized _ArrayBuffer._getElementSlowPath(_:)(v55, v38);
      v57 = __OFADD__(v55++, 1);
      if (v57)
        goto LABEL_96;
    }
    else
    {
      if (v55 >= *(_QWORD *)(v169 + 16))
        goto LABEL_97;
      v56 = *(_QWORD *)(v168 + 8 * v55);
      swift_unknownObjectRetain(v56);
      v57 = __OFADD__(v55++, 1);
      if (v57)
      {
LABEL_96:
        __break(1u);
LABEL_97:
        __break(1u);
        goto LABEL_98;
      }
    }
    v58 = type metadata accessor for FMAnnotation();
    v59 = swift_dynamicCastClass(v56, v58);
    if (v59)
      break;
    swift_unknownObjectRelease(v56);
LABEL_23:
    if ((char *)v55 == v43)
      goto LABEL_132;
  }
  v44 = (SEL *)v59;
  swift_unknownObjectRetain(v56);
  sub_100357368(p_base_prots);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v173 + 48))(p_base_prots, 1, v9) == 1)
  {
    swift_unknownObjectRelease_n(v56, 2);
    sub_1000051EC((uint64_t)p_base_prots, (uint64_t *)&unk_1005E1110);
    v43 = v172;
    goto LABEL_23;
  }
  v60 = (uint64_t)v174;
  sub_100051774((uint64_t)p_base_prots, (uint64_t)v174, type metadata accessor for FMAnnotationIdentifier);
  sub_10004FC74(v60, v54, type metadata accessor for FMAnnotationIdentifier);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v54, v9);
  if (EnumCaseMultiPayload == 2)
  {
    v89 = v156;
    sub_10004FC74(v54, v156, type metadata accessor for FMAnnotationIdentifier);
    v90 = swift_bridgeObjectRelease(*(_QWORD *)(v89 + 8));
    v91 = (uint64_t)v161;
    (*(void (**)(uint64_t))((swift_isaMask & (unint64_t)*v44) + 0x190))(v90);
    v92 = v159;
    v93 = (uint64_t *)(v159 + *(int *)(v163 + 48));
    sub_10004FC74(v91, v159, type metadata accessor for FMAnnotationIdentifier);
    sub_10004FC74((uint64_t)v174, (uint64_t)v93, type metadata accessor for FMAnnotationIdentifier);
    if (swift_getEnumCaseMultiPayload(v92, v9) == 4)
    {
      v94 = v153;
      sub_10004FC74(v92, (uint64_t)v153, type metadata accessor for FMAnnotationIdentifier);
      v96 = *v94;
      v95 = v94[1];
      swift_bridgeObjectRelease(v94[3]);
      v97 = swift_getEnumCaseMultiPayload(v93, v9);
      if (v97 == 4)
      {
        v107 = *v93;
        v108 = v93[1];
        swift_bridgeObjectRelease(v93[3]);
        v109 = v107;
        v110 = v96;
        v86 = v96 == v107;
        v87 = (uint64_t)v161;
        v54 = (uint64_t)v166;
        if (!v86 || v95 != v108)
        {
          v101 = _stringCompareWithSmolCheck(_:_:expecting:)(v110, v95, v109, v108, 0);
          v99 = v108;
          goto LABEL_87;
        }
LABEL_65:
        swift_bridgeObjectRelease_n(v95, 2);
        v106 = &v179;
        goto LABEL_66;
      }
      if (v97 == 2)
      {
        v98 = *v93;
        v99 = v93[1];
        v100 = v96;
        v86 = v96 == v98;
        v87 = (uint64_t)v161;
        v54 = (uint64_t)v166;
        if (!v86 || v95 != v99)
        {
          v101 = _stringCompareWithSmolCheck(_:_:expecting:)(v100, v95, v98, v99, 0);
LABEL_87:
          v129 = v101;
          swift_bridgeObjectRelease(v95);
          swift_bridgeObjectRelease(v99);
          v130 = &v179;
LABEL_88:
          sub_10004FCB8(*(v130 - 32), type metadata accessor for FMAnnotationIdentifier);
          sub_10004FCB8(v87, type metadata accessor for FMAnnotationIdentifier);
          if ((v129 & 1) == 0)
            goto LABEL_72;
LABEL_89:
          v131 = swift_unknownObjectRetain(v56);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v131);
          v119 = *(_QWORD *)((v178 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v132 = *(_QWORD *)((v178 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v119 >= v132 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v132 > 1, v119 + 1, 1);
LABEL_91:
          v133 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v119, v44);
          specialized Array._endMutation()(v133);
          swift_unknownObjectRelease_n(v56, 2);
          sub_10004FCB8((uint64_t)v174, type metadata accessor for FMAnnotationIdentifier);
          v9 = v165;
          goto LABEL_92;
        }
        goto LABEL_65;
      }
      swift_bridgeObjectRelease(v95);
      v92 = v159;
      v91 = (uint64_t)v161;
      v54 = (uint64_t)v166;
    }
    sub_1000051EC(v92, (uint64_t *)&unk_1005D7A50);
    v111 = v91;
    goto LABEL_71;
  }
  if (EnumCaseMultiPayload == 4)
  {
    v74 = v157;
    sub_10004FC74(v54, v157, type metadata accessor for FMAnnotationIdentifier);
    swift_bridgeObjectRelease(*(_QWORD *)(v74 + 8));
    v75 = swift_bridgeObjectRelease(*(_QWORD *)(v74 + 24));
    v76 = (uint64_t)v162;
    (*(void (**)(uint64_t))((swift_isaMask & (unint64_t)*v44) + 0x190))(v75);
    v77 = v160;
    v78 = (uint64_t *)(v160 + *(int *)(v163 + 48));
    sub_10004FC74(v76, v160, type metadata accessor for FMAnnotationIdentifier);
    sub_10004FC74((uint64_t)v174, (uint64_t)v78, type metadata accessor for FMAnnotationIdentifier);
    if (swift_getEnumCaseMultiPayload(v77, v9) == 4)
    {
      v79 = v154;
      sub_10004FC74(v77, (uint64_t)v154, type metadata accessor for FMAnnotationIdentifier);
      v81 = *v79;
      v80 = v79[1];
      swift_bridgeObjectRelease(v79[3]);
      v82 = swift_getEnumCaseMultiPayload(v78, v9);
      if (v82 == 4)
      {
        v102 = *v78;
        v103 = v78[1];
        swift_bridgeObjectRelease(v78[3]);
        v104 = v102;
        v105 = v81;
        v86 = v81 == v102;
        v87 = (uint64_t)v162;
        v54 = (uint64_t)v166;
        if (!v86 || v80 != v103)
        {
          v88 = _stringCompareWithSmolCheck(_:_:expecting:)(v105, v80, v104, v103, 0);
          v84 = v103;
          goto LABEL_85;
        }
        goto LABEL_61;
      }
      if (v82 == 2)
      {
        v83 = *v78;
        v84 = v78[1];
        v85 = v81;
        v86 = v81 == v83;
        v87 = (uint64_t)v162;
        v54 = (uint64_t)v166;
        if (!v86 || v80 != v84)
        {
          v88 = _stringCompareWithSmolCheck(_:_:expecting:)(v85, v80, v83, v84, 0);
LABEL_85:
          v129 = v88;
          swift_bridgeObjectRelease(v80);
          swift_bridgeObjectRelease(v84);
          v130 = &v180;
          goto LABEL_88;
        }
LABEL_61:
        swift_bridgeObjectRelease_n(v80, 2);
        v106 = &v180;
LABEL_66:
        sub_10004FCB8(*(v106 - 32), type metadata accessor for FMAnnotationIdentifier);
        sub_10004FCB8(v87, type metadata accessor for FMAnnotationIdentifier);
        goto LABEL_89;
      }
      swift_bridgeObjectRelease(v80);
      v76 = (uint64_t)v162;
      v54 = (uint64_t)v166;
      v77 = v160;
    }
    sub_1000051EC(v77, (uint64_t *)&unk_1005D7A50);
    v111 = v76;
LABEL_71:
    sub_10004FCB8(v111, type metadata accessor for FMAnnotationIdentifier);
    goto LABEL_72;
  }
  if (EnumCaseMultiPayload != 6)
    goto LABEL_72;
  v62 = v155;
  v63 = sub_10004FC74(v54, (uint64_t)v155, type metadata accessor for FMAnnotationIdentifier);
  v150 = *v62;
  v64 = *(_QWORD *)(v150 + 32);
  v65 = v167;
  (*(void (**)(uint64_t))((swift_isaMask & (unint64_t)*v44) + 0x190))(v63);
  v151 = *(_QWORD *)(v64 + 16);
  if (!v151)
    goto LABEL_57;
  v148 = (*(unsigned __int8 *)(v173 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v173 + 80);
  v66 = v64 + v148;
  v67 = v158;
  sub_10004FC74(v64 + v148, v158, type metadata accessor for FMAnnotationIdentifier);
  swift_bridgeObjectRetain(v64);
  sub_1001451AC(v67, v65);
  v69 = v68;
  sub_10004FCB8(v67, type metadata accessor for FMAnnotationIdentifier);
  if ((v69 & 1) != 0)
    goto LABEL_38;
  if (v151 == 1)
  {
LABEL_56:
    swift_bridgeObjectRelease(v64);
    v54 = (uint64_t)v166;
    v65 = v167;
LABEL_57:
    sub_10004FCB8(v65, type metadata accessor for FMAnnotationIdentifier);
    swift_release(v150);
LABEL_72:
    v112 = v170;
    v113 = sub_10004FC74(v54, v170, type metadata accessor for FMAnnotationIdentifier);
    v114 = (uint64_t)v171;
    (*(void (**)(uint64_t))((swift_isaMask & (unint64_t)*v44) + 0x190))(v113);
    sub_1001451AC(v114, v112);
    v116 = v115;
    sub_10004FCB8(v114, type metadata accessor for FMAnnotationIdentifier);
    sub_10004FCB8(v112, type metadata accessor for FMAnnotationIdentifier);
    if ((v116 & 1) != 0)
    {
      v117 = swift_unknownObjectRetain(v56);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v117);
      v119 = *(_QWORD *)((v178 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v118 = *(_QWORD *)((v178 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v119 >= v118 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v118 > 1, v119 + 1, 1);
      goto LABEL_91;
    }
    sub_10004FCB8((uint64_t)v174, type metadata accessor for FMAnnotationIdentifier);
    swift_unknownObjectRelease_n(v56, 2);
    sub_10004FCB8(v54, type metadata accessor for FMAnnotationIdentifier);
    v9 = v165;
LABEL_93:
    v38 = v164;
    v43 = v172;
    goto LABEL_23;
  }
  v149 = *(_QWORD *)(v173 + 72);
  v120 = v158;
  sub_10004FC74(v66 + v149, v158, type metadata accessor for FMAnnotationIdentifier);
  sub_1001451AC(v120, v167);
  v122 = v121;
  sub_10004FCB8(v120, type metadata accessor for FMAnnotationIdentifier);
  if ((v122 & 1) != 0)
  {
LABEL_38:
    swift_bridgeObjectRelease(v64);
    sub_10004FCB8(v167, type metadata accessor for FMAnnotationIdentifier);
    v70 = swift_unknownObjectRetain(v56);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v70);
    v72 = *(_QWORD *)((v178 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v71 = *(_QWORD *)((v178 & 0xFFFFFFFFFFFFFF8) + 0x18);
    v9 = v165;
    v54 = (uint64_t)v166;
    if (v72 >= v71 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v71 > 1, v72 + 1, 1);
    v73 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v72, v44);
    specialized Array._endMutation()(v73);
    swift_unknownObjectRelease_n(v56, 2);
    sub_10004FCB8((uint64_t)v174, type metadata accessor for FMAnnotationIdentifier);
    swift_release(v150);
LABEL_92:
    sub_10004FCB8(v54, type metadata accessor for FMAnnotationIdentifier);
    goto LABEL_93;
  }
  if (v151 == 2)
    goto LABEL_56;
  v123 = v64 + v148 + 2 * v149;
  v124 = 2;
  while (1)
  {
    sub_10004FC74(v123, v120, type metadata accessor for FMAnnotationIdentifier);
    v125 = v124 + 1;
    if (__OFADD__(v124, 1))
      break;
    sub_1001451AC(v120, v167);
    v126 = v120;
    v128 = v127;
    sub_10004FCB8(v126, type metadata accessor for FMAnnotationIdentifier);
    if ((v128 & 1) != 0)
      goto LABEL_38;
    ++v124;
    v123 += v149;
    v120 = v158;
    if (v125 == v151)
      goto LABEL_56;
  }
  __break(1u);
LABEL_134:
  __break(1u);
  swift_release(v176);
  __break(1u);
}

void sub_10002E768()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "horizontalSizeClass");

  if (v2 != (id)2)
  {
    if (qword_1005D1F30 == -1)
      goto LABEL_5;
    goto LABEL_10;
  }
  if (qword_1005D1F30 != -1)
LABEL_10:
    swift_once(&qword_1005D1F30, sub_10005F428);
LABEL_5:
  v3 = objc_msgSend(v0, "view");
  if (!v3)
  {
    __break(1u);
    goto LABEL_13;
  }
  v4 = v3;
  objc_msgSend(v3, "safeAreaInsets");

  v5 = objc_msgSend(v0, "view");
  if (!v5)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v6 = v5;
  objc_msgSend(v5, "safeAreaInsets");

  v7 = objc_msgSend(v0, "view");
  if (!v7)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v7;
  objc_msgSend(v7, "safeAreaInsets");

  v9 = objc_msgSend(v0, "view");
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, "safeAreaInsets");

    return;
  }
LABEL_15:
  __break(1u);
}

void sub_10002E920(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_10002E960(a3);

}

id sub_10002E960(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  objc_class *v17;
  void *v18;
  id v19;
  void *v20;
  void (*v21)(char *, char *, uint64_t);
  Class isa;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  objc_super v28;

  v2 = v1;
  v4 = swift_isaMask & *(_QWORD *)v1;
  v5 = sub_100053F2C(&qword_1005D33C0);
  __chkstk_darwin(v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for IndexPath(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v24 - v13;
  v15 = *(_QWORD *)(v4 + 112);
  v16 = *(_QWORD *)(v4 + 120);
  v24 = *(_OWORD *)(v4 + 96);
  v25 = v24;
  v26 = v15;
  v27 = v16;
  v17 = (objc_class *)type metadata accessor for FMListViewController(0, (uint64_t)&v25);
  v28.receiver = v2;
  v28.super_class = v17;
  objc_msgSendSuper2(&v28, "viewWillAppear:", a1 & 1);
  v18 = *(void **)&v2[qword_1005DD850];
  v19 = objc_msgSend(v18, "indexPathForSelectedRow");
  if (!v19)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_5;
  }
  v20 = v19;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v19);

  v21 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v21(v7, v12, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_5:
    sub_10002F6A0((uint64_t)v7);
    goto LABEL_6;
  }
  v21(v14, v7, v8);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v18, "deselectRowAtIndexPath:animated:", isa, 1);

  objc_msgSend(v18, "setContentOffset:animated:", 0, 0.0, 0.0);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
LABEL_6:
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v16 + 40))(1, v24, v16);
  sub_10002F478();
  sub_10002F4E0();
  return sub_1000443F0(0x6C6C695777656976, 0xEE00726165707041);
}

void sub_10002EBD8(char a1)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_updatesEnabled);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_updatesEnabled) = a1;
  sub_10002EBF0(v2);
}

void sub_10002EBF0(char a1)
{
  void *v1;
  uint64_t v3;
  uint64_t *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  __n128 v52;
  uint64_t v53;
  NSObject *v54;
  NSObject *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74[3];

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v3 = type metadata accessor for Logger(0);
  sub_100056D88(v3, (uint64_t)qword_1005F5748);
  v4 = v1;
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    *(_DWORD *)v7 = 136315138;
    v74[0] = v8;
    if (*((_BYTE *)v4 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_updatesEnabled))
      v9 = 1702195828;
    else
      v9 = 0x65736C6166;
    if (*((_BYTE *)v4 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_updatesEnabled))
      v10 = 0xE400000000000000;
    else
      v10 = 0xE500000000000000;
    v72 = sub_100056DA0(v9, v10, v74);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v72, &v73);

    swift_bridgeObjectRelease(v10);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "FMPeopleListDataSource: updatesEnabled: %s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

  }
  else
  {

  }
  v11 = OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_updatesEnabled;
  if (*((_BYTE *)v4 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_updatesEnabled) != 1)
  {
    v56 = 0;
    v57 = *(uint64_t *)((char *)v4 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_peopleSubscription);
    if (!v57)
      goto LABEL_24;
    v58 = *(uint64_t **)(*(uint64_t *)((char *)v4 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator) + 48);
    swift_beginAccess(v58 + 2, v74, 33, 0);
    swift_retain(v57);
    swift_retain(v58);
    v59 = sub_10005D57C(v58 + 2, v57);
    v60 = v59;
    v61 = v58[2];
    if ((unint64_t)v61 >> 62)
    {
      if (v61 < 0)
        v69 = v58[2];
      else
        v69 = v61 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v58[2]);
      v62 = _CocoaArrayWrapper.endIndex.getter(v69);
      swift_bridgeObjectRelease(v61);
      if (v62 >= v60)
        goto LABEL_23;
    }
    else
    {
      v62 = *(_QWORD *)((v61 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v62 >= v59)
      {
LABEL_23:
        sub_10005D338(v60, v62);
        swift_endAccess(v74);
        swift_release(v57);
        swift_release(v58);
LABEL_24:
        v57 = *(uint64_t *)((char *)v4 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_locationSubscription);
        if (!v57)
          goto LABEL_28;
        v63 = *(char **)(*(uint64_t *)((char *)v4 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator) + 40);
        v64 = (uint64_t *)&v63[OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions];
        swift_beginAccess(&v63[OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions], v74, 33, 0);
        swift_retain(v57);
        v58 = v63;
        v65 = sub_10033579C(v64, v57);
        v60 = v65;
        v61 = *v64;
        if (!((unint64_t)*v64 >> 62))
        {
          v66 = *(_QWORD *)((v61 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v66 >= v65)
          {
LABEL_27:
            sub_1002006F8(v60, v66);
            swift_endAccess(v74);
            swift_release(v57);

LABEL_28:
            v57 = *(uint64_t *)((char *)v4 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_selectionSubscription);
            if (!v57)
              return;
            v4 = *(uint64_t **)(*(uint64_t *)((char *)v4 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator) + 56);
            swift_beginAccess(v4 + 2, v74, 33, 0);
            swift_retain(v57);
            swift_retain(v4);
            v67 = sub_100334CE8(v4 + 2, v57);
            v56 = v67;
            v60 = v4[2];
            if (!((unint64_t)v60 >> 62))
            {
              v68 = *(_QWORD *)((v60 & 0xFFFFFFFFFFFFF8) + 0x10);
              if (v68 >= v67)
              {
LABEL_31:
                sub_100200704(v56, v68);
                swift_endAccess(v74);
                swift_release(v57);
                swift_release(v4);
                return;
              }
LABEL_47:
              __break(1u);
              return;
            }
LABEL_43:
            if (v60 < 0)
              v71 = v60;
            else
              v71 = v60 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v60);
            v68 = _CocoaArrayWrapper.endIndex.getter(v71);
            swift_bridgeObjectRelease(v60);
            if (v68 >= v56)
              goto LABEL_31;
            goto LABEL_47;
          }
LABEL_42:
          __break(1u);
          goto LABEL_43;
        }
LABEL_38:
        if (v61 < 0)
          v70 = v61;
        else
          v70 = v61 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v61);
        v66 = _CocoaArrayWrapper.endIndex.getter(v70);
        swift_bridgeObjectRelease(v61);
        if (v66 >= v60)
          goto LABEL_27;
        goto LABEL_42;
      }
    }
    __break(1u);
    goto LABEL_38;
  }
  v12 = *(_QWORD **)((char *)v4 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator);
  v13 = v12[6];
  v14 = type metadata accessor for FMPeopleSubscription(0);
  v15 = swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  v16 = v15 + OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_subscriber;
  *(_QWORD *)(v16 + 8) = 0;
  swift_unknownObjectWeakInit(v16);
  v17 = v4;
  v18 = swift_retain(v13);
  UUID.init()(v18);
  v19 = v15 + OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_subscriber;
  *(_QWORD *)(v19 + 8) = &off_100568288;
  swift_unknownObjectWeakAssign(v19, v17);

  swift_beginAccess(v13 + 16, v74, 33, 0);
  v20 = swift_retain(v15);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
  v22 = *(_QWORD *)((*(_QWORD *)(v13 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v21 = *(_QWORD *)((*(_QWORD *)(v13 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v22 >= v21 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
  v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v15);
  specialized Array._endMutation()(v23);
  swift_endAccess(v74);
  swift_release(v13);
  v24 = *(uint64_t *)((char *)v17 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_peopleSubscription);
  *(uint64_t *)((char *)v17 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_peopleSubscription) = v15;
  swift_release(v24);
  v25 = (void *)v12[5];
  v26 = type metadata accessor for FMLocationSubscription(0);
  v27 = swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
  v28 = v27 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber;
  *(_QWORD *)(v28 + 8) = 0;
  swift_unknownObjectWeakInit(v28);
  v29 = v17;
  v30 = v25;
  UUID.init()(v30);
  v31 = v27 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber;
  *(_QWORD *)(v31 + 8) = &off_1005682F0;
  swift_unknownObjectWeakAssign(v31, v29);

  v32 = &v30[OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions];
  swift_beginAccess(&v30[OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions], v74, 33, 0);
  v33 = swift_retain(v27);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v33);
  v35 = *(_QWORD *)((*(_QWORD *)v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v34 = *(_QWORD *)((*(_QWORD *)v32 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v35 >= v34 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1);
  v36 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v27);
  specialized Array._endMutation()(v36);
  swift_endAccess(v74);

  v37 = *(uint64_t *)((char *)v29 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_locationSubscription);
  *(uint64_t *)((char *)v29 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_locationSubscription) = v27;
  swift_release(v37);
  v38 = v12[7];
  v39 = type metadata accessor for FMSelectionSubscription(0);
  v40 = swift_allocObject(v39, *(unsigned int *)(v39 + 48), *(unsigned __int16 *)(v39 + 52));
  v41 = v40 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
  *(_QWORD *)(v41 + 8) = 0;
  swift_unknownObjectWeakInit(v41);
  v42 = v29;
  v43 = swift_retain(v38);
  UUID.init()(v43);
  v44 = v40 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
  *(_QWORD *)(v44 + 8) = &off_100568260;
  swift_unknownObjectWeakAssign(v44, v42);

  swift_beginAccess(v38 + 16, v74, 33, 0);
  v45 = swift_retain(v40);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v45);
  v47 = *(_QWORD *)((*(_QWORD *)(v38 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v46 = *(_QWORD *)((*(_QWORD *)(v38 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v47 >= v46 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v46 > 1, v47 + 1, 1);
  v48 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v47, v40);
  specialized Array._endMutation()(v48);
  swift_endAccess(v74);
  swift_release(v38);
  v49 = *(_QWORD *)&v42[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_selectionSubscription];
  *(_QWORD *)&v42[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_selectionSubscription] = v40;
  swift_release(v49);
  v50 = *((_BYTE *)v4 + v11) ^ a1;
  v51 = v12[6];
  swift_retain(v51);
  v53 = dispatch thunk of FMFManager.friends.getter(v52);
  swift_release(v51);
  v54 = *(NSObject **)(v12[5] + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
  v55 = v54;
  sub_10003E7B8(v53, v54, 0, v50 & 1);
  swift_bridgeObjectRelease(v53);

}

uint64_t type metadata accessor for FMSelectionSubscription(uint64_t a1)
{
  uint64_t result;

  result = qword_1005DEC08;
  if (!qword_1005DEC08)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMSelectionSubscription);
  return result;
}

uint64_t type metadata accessor for FMLocationSubscription(uint64_t a1)
{
  uint64_t result;

  result = qword_1005E1FC0;
  if (!qword_1005E1FC0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMLocationSubscription);
  return result;
}

uint64_t type metadata accessor for FMPeopleSubscription(uint64_t a1)
{
  uint64_t result;

  result = qword_1005E0CC0;
  if (!qword_1005E0CC0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMPeopleSubscription);
  return result;
}

void sub_10002F478()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  objc_msgSend(v1, "addObserver:selector:name:object:", v0, "reload", UIApplicationDidBecomeActiveNotification, 0);

}

double sub_10002F4E0()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  _OWORD v8[2];

  v1 = swift_isaMask & *v0;
  v2 = *(id *)(*(_QWORD *)((char *)v0 + OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator) + 16);
  v3 = *(_OWORD *)(v1 + 112);
  v8[0] = *(_OWORD *)(v1 + 96);
  v8[1] = v3;
  v4 = type metadata accessor for FMListViewController(0, (uint64_t)v8);
  v5 = sub_10002F580((uint64_t)v0, (uint64_t)v2, v4, (uint64_t)&off_100554518);

  v6 = *(_QWORD *)((char *)v0 + qword_1005DD870);
  *(_QWORD *)((char *)v0 + qword_1005DD870) = v5;
  *(_QWORD *)&result = swift_release(v6).n128_u64[0];
  return result;
}

uint64_t sub_10002F580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _BYTE v18[24];

  v7 = type metadata accessor for FMConditionSubscription(0);
  v8 = swift_allocObject(v7, *(unsigned int *)(v7 + 48), *(unsigned __int16 *)(v7 + 52));
  v9 = v8 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber;
  *(_QWORD *)(v9 + 8) = 0;
  swift_unknownObjectWeakInit(v9, 0);
  v10 = swift_unknownObjectRetain(a1);
  UUID.init()(v10);
  v11 = v8 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber;
  *(_QWORD *)(v11 + 8) = a4;
  swift_unknownObjectWeakAssign(v11, a1);
  swift_unknownObjectRelease(a1);
  v12 = (_QWORD *)(a2 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions);
  swift_beginAccess(a2 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions, v18, 33, 0);
  v13 = swift_retain(v8);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v13);
  v15 = *(_QWORD *)((*v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v14 = *(_QWORD *)((*v12 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v15 >= v14 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v14 > 1, v15 + 1, 1);
  v16 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v8);
  specialized Array._endMutation()(v16);
  swift_endAccess(v18);
  return v8;
}

uint64_t sub_10002F6A0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100053F2C(&qword_1005D33C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10002F6E0()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  void *v4;
  double v5;
  double v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  double v21;
  double v22;
  uint64_t v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  id v52;
  id v53;
  void *v54;
  void *v55;
  id v56;
  id v57;
  uint64_t v58;
  Class isa;
  uint64_t v60;
  id v61;
  id v62;
  void *v63;
  id v64;
  id v65;
  id v66;
  id v67;
  void *v68;
  id v69;
  id v70;
  id v71;
  id v72;
  void *v73;
  id v74;
  id v75;
  id v76;
  id v77;
  void *v78;
  id v79;
  id v80;
  uint64_t v81;
  Class v82;
  uint64_t v83;
  id v84;
  id v85;
  id v86;
  id v87;
  uint64_t v88;
  Class v89;
  id v90;
  id v91;
  uint64_t v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  uint64_t v102;
  id v103;
  Class v104;
  void *v105;
  void *v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  id v111;
  uint64_t v112;
  id v113;
  uint64_t v114;
  id v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;

  v1 = v0;
  v118 = *(id *)&v0[OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_visualEffectView];
  objc_msgSend(v118, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_darkenerView];
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_markerImageView];
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_iconImageView];
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  if (qword_1005D1C00 != -1)
    swift_once(&qword_1005D1C00, sub_10005E580);
  v5 = *(double *)&qword_1005F4E60;
  v6 = *(double *)&qword_1005F4E80;
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v117 = v2;
  v7 = qword_1005F5980;
  v8 = objc_msgSend(v3, "topAnchor");
  v9 = objc_msgSend(v1, "view");
  if (!v9)
  {
    __break(1u);
    goto LABEL_22;
  }
  v10 = v9;
  v116 = v4;
  v11 = objc_msgSend(v9, "topAnchor");

  v12 = objc_msgSend(v8, "constraintEqualToAnchor:constant:", v11, 0.0);
  v13 = sub_100053F2C(&qword_1005D2F10);
  v14 = swift_allocObject(v13, 48, 7);
  *(_OWORD *)(v14 + 16) = xmmword_1004820B0;
  *(_QWORD *)(v14 + 32) = v12;
  v115 = v12;
  v15 = objc_msgSend(v3, "centerXAnchor");
  v16 = objc_msgSend(v1, "view");
  if (!v16)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v17 = v16;
  v18 = objc_msgSend(v16, "centerXAnchor");

  v19 = objc_msgSend(v15, "constraintEqualToAnchor:", v18);
  *(_QWORD *)(v14 + 40) = v19;
  specialized Array._endMutation()(v20);
  v114 = v14;
  v21 = *(double *)&qword_1005F5958;
  if (v7 == 1)
    v22 = -0.5;
  else
    v22 = 0.5;
  v23 = swift_allocObject(v13, 48, 7);
  *(_OWORD *)(v23 + 16) = xmmword_1004820B0;
  v24 = objc_msgSend(v3, "centerYAnchor");
  v25 = objc_msgSend(v1, "view");
  if (!v25)
    goto LABEL_23;
  v26 = v25;
  v27 = objc_msgSend(v25, "centerYAnchor");

  v28 = objc_msgSend(v24, "constraintEqualToAnchor:", v27);
  *(_QWORD *)(v23 + 32) = v28;
  v29 = objc_msgSend(v3, "centerXAnchor");
  v30 = objc_msgSend(v1, "view");
  if (!v30)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v31 = v30;
  v113 = v3;
  v32 = objc_msgSend(v30, "centerXAnchor");

  v33 = objc_msgSend(v29, "constraintEqualToAnchor:constant:", v32, v22 * v21);
  *(_QWORD *)(v23 + 40) = v33;
  specialized Array._endMutation()(v34);
  v35 = v23;
  v36 = swift_allocObject(v13, 64, 7);
  *(_OWORD *)(v36 + 16) = xmmword_100481720;
  v37 = objc_msgSend(v118, "topAnchor");
  v38 = objc_msgSend(v1, "view");
  if (!v38)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v39 = v38;
  v40 = objc_msgSend(v38, "topAnchor");

  v41 = objc_msgSend(v37, "constraintEqualToAnchor:", v40);
  *(_QWORD *)(v36 + 32) = v41;
  v42 = objc_msgSend(v118, "leadingAnchor");
  v43 = objc_msgSend(v1, "view");
  if (!v43)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v44 = v43;
  v45 = objc_msgSend(v43, "leadingAnchor");

  v46 = objc_msgSend(v42, "constraintEqualToAnchor:", v45);
  *(_QWORD *)(v36 + 40) = v46;
  v47 = objc_msgSend(v118, "trailingAnchor");
  v48 = objc_msgSend(v1, "view");
  if (!v48)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v49 = v48;
  v112 = v35;
  v50 = objc_msgSend(v48, "trailingAnchor");

  v51 = objc_msgSend(v47, "constraintEqualToAnchor:", v50);
  *(_QWORD *)(v36 + 48) = v51;
  v52 = objc_msgSend(v118, "bottomAnchor");
  v53 = objc_msgSend(v1, "view");
  if (!v53)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v54 = v53;
  v55 = (void *)objc_opt_self(NSLayoutConstraint);
  v56 = objc_msgSend(v54, "bottomAnchor");

  v57 = objc_msgSend(v52, "constraintEqualToAnchor:", v56);
  *(_QWORD *)(v36 + 56) = v57;
  specialized Array._endMutation()(v58);
  sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v119 = v55;
  objc_msgSend(v55, "activateConstraints:", isa, swift_bridgeObjectRelease(v36).n128_f64[0]);

  v60 = swift_allocObject(v13, 64, 7);
  *(_OWORD *)(v60 + 16) = xmmword_100481720;
  v61 = objc_msgSend(v117, "topAnchor");
  v62 = objc_msgSend(v1, "view");
  if (!v62)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v63 = v62;
  v64 = objc_msgSend(v62, "topAnchor");

  v65 = objc_msgSend(v61, "constraintEqualToAnchor:", v64);
  *(_QWORD *)(v60 + 32) = v65;
  v66 = objc_msgSend(v117, "leadingAnchor");
  v67 = objc_msgSend(v1, "view");
  if (!v67)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v68 = v67;
  v69 = objc_msgSend(v67, "leadingAnchor");

  v70 = objc_msgSend(v66, "constraintEqualToAnchor:", v69);
  *(_QWORD *)(v60 + 40) = v70;
  v71 = objc_msgSend(v117, "trailingAnchor");
  v72 = objc_msgSend(v1, "view");
  if (!v72)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v73 = v72;
  v74 = objc_msgSend(v72, "trailingAnchor");

  v75 = objc_msgSend(v71, "constraintEqualToAnchor:", v74);
  *(_QWORD *)(v60 + 48) = v75;
  v76 = objc_msgSend(v117, "bottomAnchor");
  v77 = objc_msgSend(v1, "view");
  if (v77)
  {
    v78 = v77;
    v79 = objc_msgSend(v77, "bottomAnchor");

    v80 = objc_msgSend(v76, "constraintEqualToAnchor:", v79);
    *(_QWORD *)(v60 + 56) = v80;
    specialized Array._endMutation()(v81);
    v82 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v55, "activateConstraints:", v82, swift_bridgeObjectRelease(v60).n128_f64[0]);

    v83 = swift_allocObject(v13, 48, 7);
    *(_OWORD *)(v83 + 16) = xmmword_1004820B0;
    v84 = objc_msgSend(v113, "widthAnchor");
    v85 = objc_msgSend(v84, "constraintEqualToConstant:", v6);

    *(_QWORD *)(v83 + 32) = v85;
    v86 = objc_msgSend(v113, "heightAnchor");
    v87 = objc_msgSend(v86, "constraintEqualToConstant:", v6);

    *(_QWORD *)(v83 + 40) = v87;
    specialized Array._endMutation()(v88);
    v89 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v55, "activateConstraints:", v89, swift_bridgeObjectRelease(v83).n128_f64[0]);

    v90 = objc_msgSend(v116, "widthAnchor");
    v91 = objc_msgSend(v90, "constraintEqualToConstant:", v5);

    v92 = swift_allocObject(v13, 64, 7);
    *(_OWORD *)(v92 + 16) = xmmword_100481720;
    v93 = objc_msgSend(v116, "centerXAnchor");
    v94 = objc_msgSend(v113, "centerXAnchor");
    v95 = objc_msgSend(v93, "constraintEqualToAnchor:", v94);

    *(_QWORD *)(v92 + 32) = v95;
    v96 = objc_msgSend(v116, "centerYAnchor");
    v97 = objc_msgSend(v113, "centerYAnchor");
    v98 = objc_msgSend(v96, "constraintEqualToAnchor:", v97);

    *(_QWORD *)(v92 + 40) = v98;
    v99 = objc_msgSend(v116, "heightAnchor");
    v100 = objc_msgSend(v116, "widthAnchor");
    v101 = objc_msgSend(v99, "constraintEqualToAnchor:multiplier:", v100, 1.0);

    *(_QWORD *)(v92 + 48) = v101;
    *(_QWORD *)(v92 + 56) = v91;
    specialized Array._endMutation()(v102);
    v103 = v91;
    v104 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v119, "activateConstraints:", v104, swift_bridgeObjectRelease(v92).n128_f64[0]);

    v105 = *(void **)&v1[OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_markerImageViewTopConstraint];
    *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_markerImageViewTopConstraint] = v115;
    v120 = v115;

    v106 = *(void **)&v1[OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_iconImageViewWidthConstraint];
    *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_iconImageViewWidthConstraint] = v103;
    v107 = v103;

    v108 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_compactConstraints];
    *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_compactConstraints] = v114;
    swift_bridgeObjectRelease(v108);
    v109 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_regularConstraints];
    *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_regularConstraints] = v112;
    v110 = objc_msgSend(v1, "traitCollection", swift_bridgeObjectRelease(v109).n128_f64[0]);
    v111 = objc_msgSend(v110, "horizontalSizeClass");

    sub_10005DE64((uint64_t)v111);
    return;
  }
LABEL_32:
  __break(1u);
}

void sub_100030320()
{
  char *v0;
  char *v1;
  char *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  void *v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  id v78;
  id v79;
  id v80;
  void *v81;
  uint64_t v82;
  id v83;
  id v84;
  void *v85;
  id v86;
  id v87;
  id v88;
  id v89;
  void *v90;
  id v91;
  id v92;
  id v93;
  id v94;
  void *v95;
  id v96;
  id v97;
  id v98;
  id v99;
  void *v100;
  void *v101;
  id v102;
  id v103;
  uint64_t v104;
  Class isa;
  uint64_t v106;
  id v107;
  id v108;
  void *v109;
  id v110;
  id v111;
  id v112;
  id v113;
  void *v114;
  id v115;
  id v116;
  id v117;
  id v118;
  void *v119;
  id v120;
  id v121;
  id v122;
  id v123;
  void *v124;
  id v125;
  id v126;
  uint64_t v127;
  Class v128;
  id v129;
  Class v130;
  uint64_t v131;

  v1 = v0;
  v2 = *(char **)&v0[OBJC_IVAR____TtC6FindMy20FMMainViewController_initialCardContainer];
  v3 = objc_msgSend(v2, "view");
  if (v3)
  {
    v4 = v3;
    objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v5 = *(void **)&v0[OBJC_IVAR____TtC6FindMy20FMMainViewController_tabBar];
    objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v6 = objc_msgSend(v5, "topAnchor");
    v7 = objc_msgSend(v1, "view");
    if (v7)
    {
      v8 = v7;
      v9 = objc_msgSend(v7, "safeAreaLayoutGuide");

      v10 = objc_msgSend(v9, "bottomAnchor");
      if (qword_1005D1E80 != -1)
        swift_once(&qword_1005D1E80, sub_100008974);
      v11 = objc_msgSend(v6, "constraintEqualToAnchor:constant:", v10, -*((double *)&xmmword_1005F5940 + 1));

      v131 = sub_100053F2C(&qword_1005D2F10);
      v12 = swift_allocObject(v131, 96, 7);
      *(_OWORD *)(v12 + 16) = xmmword_100486700;
      *(_QWORD *)(v12 + 32) = v11;
      v13 = v11;
      v14 = objc_msgSend(v4, "topAnchor");
      v15 = objc_msgSend(v1, "view");
      if (v15)
      {
        v16 = v15;
        v17 = objc_msgSend(v15, "topAnchor");

        v18 = objc_msgSend(v14, "constraintEqualToAnchor:", v17);
        *(_QWORD *)(v12 + 40) = v18;
        v19 = objc_msgSend(v4, "bottomAnchor");
        v20 = objc_msgSend(v1, "view");
        if (v20)
        {
          v21 = v20;
          v22 = objc_msgSend(v20, "bottomAnchor");

          v23 = objc_msgSend(v19, "constraintEqualToAnchor:", v22);
          *(_QWORD *)(v12 + 48) = v23;
          v24 = objc_msgSend(v4, "leadingAnchor");
          v25 = objc_msgSend(v1, "view");
          if (v25)
          {
            v26 = v25;
            v27 = objc_msgSend(v25, "leadingAnchor");

            v28 = objc_msgSend(v24, "constraintEqualToAnchor:", v27);
            *(_QWORD *)(v12 + 56) = v28;
            v29 = objc_msgSend(v4, "trailingAnchor");
            v30 = objc_msgSend(v1, "view");
            if (v30)
            {
              v31 = v30;
              v32 = objc_msgSend(v30, "trailingAnchor");

              v33 = objc_msgSend(v29, "constraintEqualToAnchor:", v32);
              *(_QWORD *)(v12 + 64) = v33;
              v34 = objc_msgSend(v5, "leadingAnchor");
              v35 = objc_msgSend(v4, "leadingAnchor");
              v36 = objc_msgSend(v34, "constraintEqualToAnchor:", v35);

              *(_QWORD *)(v12 + 72) = v36;
              v37 = objc_msgSend(v5, "trailingAnchor");
              v38 = objc_msgSend(v4, "trailingAnchor");
              v39 = objc_msgSend(v37, "constraintEqualToAnchor:", v38);

              *(_QWORD *)(v12 + 80) = v39;
              v40 = objc_msgSend(v5, "bottomAnchor");
              v41 = objc_msgSend(v4, "bottomAnchor");
              v42 = objc_msgSend(v40, "constraintGreaterThanOrEqualToAnchor:", v41);

              *(_QWORD *)(v12 + 88) = v42;
              specialized Array._endMutation()(v43);
              v129 = (id)v12;
              v44 = swift_allocObject(v131, 88, 7);
              *(_OWORD *)(v44 + 16) = xmmword_1004850C0;
              v45 = objc_msgSend(v4, "topAnchor");
              v46 = objc_msgSend(v1, "view");
              if (v46)
              {
                v47 = v46;
                v48 = objc_msgSend(v46, "safeAreaLayoutGuide");

                v49 = objc_msgSend(v48, "topAnchor");
                v50 = objc_msgSend(v45, "constraintEqualToAnchor:constant:", v49, *((double *)&xmmword_1005F5960 + 1));

                *(_QWORD *)(v44 + 32) = v50;
                v51 = objc_msgSend(v4, "bottomAnchor");
                v52 = objc_msgSend(v1, "view");
                if (v52)
                {
                  v53 = v52;
                  v54 = objc_msgSend(v52, "layoutMarginsGuide");

                  v55 = objc_msgSend(v54, "bottomAnchor");
                  v56 = objc_msgSend(v51, "constraintEqualToAnchor:constant:", v55, -*(double *)&xmmword_1005F5960);

                  *(_QWORD *)(v44 + 40) = v56;
                  v57 = objc_msgSend(v4, "leadingAnchor");
                  v58 = objc_msgSend(v1, "view");
                  if (v58)
                  {
                    v59 = v58;
                    v60 = objc_msgSend(v58, "layoutMarginsGuide");

                    v61 = objc_msgSend(v60, "leadingAnchor");
                    v62 = objc_msgSend(v57, "constraintEqualToAnchor:", v61);

                    *(_QWORD *)(v44 + 48) = v62;
                    v63 = objc_msgSend(v4, "widthAnchor");
                    v64 = objc_msgSend(v63, "constraintEqualToConstant:", *(double *)&qword_1005F5958);

                    *(_QWORD *)(v44 + 56) = v64;
                    v65 = objc_msgSend(v5, "leadingAnchor");
                    v66 = objc_msgSend(v4, "leadingAnchor");
                    v67 = objc_msgSend(v65, "constraintEqualToAnchor:", v66);

                    *(_QWORD *)(v44 + 64) = v67;
                    v68 = objc_msgSend(v5, "trailingAnchor");
                    v69 = objc_msgSend(v4, "trailingAnchor");
                    v70 = objc_msgSend(v68, "constraintEqualToAnchor:", v69);

                    *(_QWORD *)(v44 + 72) = v70;
                    v71 = objc_msgSend(v5, "bottomAnchor");
                    v72 = objc_msgSend(v4, "bottomAnchor");
                    v73 = objc_msgSend(v71, "constraintEqualToAnchor:", v72);

                    *(_QWORD *)(v44 + 80) = v73;
                    specialized Array._endMutation()(v74);
                    v75 = *(void **)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_tabBarTopConstraint];
                    *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_tabBarTopConstraint] = v13;
                    v130 = (Class)v13;

                    v76 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy20FMMainViewController_compactConstraints];
                    *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy20FMMainViewController_compactConstraints] = v129;
                    swift_bridgeObjectRelease(v76);
                    v77 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy20FMMainViewController_regularConstraints];
                    *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy20FMMainViewController_regularConstraints] = v44;
                    v78 = objc_msgSend(v1, "traitCollection", swift_bridgeObjectRelease(v77).n128_f64[0]);
                    v79 = objc_msgSend(v78, "horizontalSizeClass");

                    sub_10001BAD8((uint64_t)v79, &OBJC_IVAR____TtC6FindMy20FMMainViewController_compactConstraints, &OBJC_IVAR____TtC6FindMy20FMMainViewController_regularConstraints);
                    v80 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy20FMMainViewController_mapController], "view");
                    if (!v80)
                    {
                      v81 = v4;
                      goto LABEL_26;
                    }
                    v81 = v80;
                    objc_msgSend(v80, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
                    if (qword_1005D1E90 != -1)
                      swift_once(&qword_1005D1E90, sub_10000642C);
                    objc_msgSend((id)qword_1005F59F8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
                    v82 = swift_allocObject(v131, 64, 7);
                    *(_OWORD *)(v82 + 16) = xmmword_100481720;
                    v83 = objc_msgSend(v81, "topAnchor");
                    v84 = objc_msgSend(v1, "view");
                    if (v84)
                    {
                      v85 = v84;
                      v86 = objc_msgSend(v84, "topAnchor");

                      v87 = objc_msgSend(v83, "constraintEqualToAnchor:", v86);
                      *(_QWORD *)(v82 + 32) = v87;
                      v88 = objc_msgSend(v81, "bottomAnchor");
                      v89 = objc_msgSend(v1, "view");
                      if (v89)
                      {
                        v90 = v89;
                        v91 = objc_msgSend(v89, "bottomAnchor");

                        v92 = objc_msgSend(v88, "constraintEqualToAnchor:", v91);
                        *(_QWORD *)(v82 + 40) = v92;
                        v93 = objc_msgSend(v81, "leadingAnchor");
                        v94 = objc_msgSend(v1, "view");
                        if (v94)
                        {
                          v95 = v94;
                          v96 = objc_msgSend(v94, "leadingAnchor");

                          v97 = objc_msgSend(v93, "constraintEqualToAnchor:", v96);
                          *(_QWORD *)(v82 + 48) = v97;
                          v98 = objc_msgSend(v81, "trailingAnchor");
                          v99 = objc_msgSend(v1, "view");
                          if (v99)
                          {
                            v100 = v99;
                            v101 = (void *)objc_opt_self(NSLayoutConstraint);
                            v102 = objc_msgSend(v100, "trailingAnchor");

                            v103 = objc_msgSend(v98, "constraintEqualToAnchor:", v102);
                            *(_QWORD *)(v82 + 56) = v103;
                            specialized Array._endMutation()(v104);
                            sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
                            isa = Array._bridgeToObjectiveC()().super.isa;
                            objc_msgSend(v101, "activateConstraints:", isa, swift_bridgeObjectRelease(v82).n128_f64[0]);

                            v106 = swift_allocObject(v131, 64, 7);
                            *(_OWORD *)(v106 + 16) = xmmword_100481720;
                            v107 = objc_msgSend((id)qword_1005F59F8, "topAnchor");
                            v108 = objc_msgSend(v1, "view");
                            if (v108)
                            {
                              v109 = v108;
                              v110 = objc_msgSend(v108, "topAnchor");

                              v111 = objc_msgSend(v107, "constraintEqualToAnchor:", v110);
                              *(_QWORD *)(v106 + 32) = v111;
                              v112 = objc_msgSend((id)qword_1005F59F8, "bottomAnchor");
                              v113 = objc_msgSend(v1, "view");
                              if (v113)
                              {
                                v114 = v113;
                                v115 = objc_msgSend(v113, "bottomAnchor");

                                v116 = objc_msgSend(v112, "constraintEqualToAnchor:", v115);
                                *(_QWORD *)(v106 + 40) = v116;
                                v117 = objc_msgSend((id)qword_1005F59F8, "leadingAnchor");
                                v118 = objc_msgSend(v1, "view");
                                if (v118)
                                {
                                  v119 = v118;
                                  v120 = objc_msgSend(v118, "leadingAnchor");

                                  v121 = objc_msgSend(v117, "constraintEqualToAnchor:", v120);
                                  *(_QWORD *)(v106 + 48) = v121;
                                  v122 = objc_msgSend((id)qword_1005F59F8, "trailingAnchor");
                                  v123 = objc_msgSend(v1, "view");
                                  if (v123)
                                  {
                                    v124 = v123;
                                    v125 = objc_msgSend(v123, "trailingAnchor");

                                    v126 = objc_msgSend(v122, "constraintEqualToAnchor:", v125);
                                    *(_QWORD *)(v106 + 56) = v126;
                                    specialized Array._endMutation()(v127);
                                    v128 = Array._bridgeToObjectiveC()().super.isa;
                                    objc_msgSend(v101, "activateConstraints:", v128, swift_bridgeObjectRelease(v106).n128_f64[0]);

                                    v130 = v128;
LABEL_26:

                                    return;
                                  }
                                  goto LABEL_42;
                                }
LABEL_41:
                                __break(1u);
LABEL_42:
                                __break(1u);
                                return;
                              }
LABEL_40:
                              __break(1u);
                              goto LABEL_41;
                            }
LABEL_39:
                            __break(1u);
                            goto LABEL_40;
                          }
LABEL_38:
                          __break(1u);
                          goto LABEL_39;
                        }
LABEL_37:
                        __break(1u);
                        goto LABEL_38;
                      }
LABEL_36:
                      __break(1u);
                      goto LABEL_37;
                    }
LABEL_35:
                    __break(1u);
                    goto LABEL_36;
                  }
LABEL_34:
                  __break(1u);
                  goto LABEL_35;
                }
LABEL_33:
                __break(1u);
                goto LABEL_34;
              }
LABEL_32:
              __break(1u);
              goto LABEL_33;
            }
LABEL_31:
            __break(1u);
            goto LABEL_32;
          }
LABEL_30:
          __break(1u);
          goto LABEL_31;
        }
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_29;
  }
}

void sub_1000311B0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  __n128 v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int64_t v19;
  int isUniquelyReferenced_nonNull_native;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;

  if (qword_1005D1DE8 != -1)
    goto LABEL_33;
  while (1)
  {
    v2 = type metadata accessor for Logger(0);
    sub_100056D88(v2, (uint64_t)qword_1005F5748);
    v3 = swift_bridgeObjectRetain(a1);
    v4 = Logger.logObject.getter(v3);
    v5 = static os_log_type_t.default.getter(v4);
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v6 = 134217984;
      v38 = a1[2];
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v38, &v39);
      swift_bridgeObjectRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMDeviceImageCache: preloadImages for %ld", v6, 0xCu);
      swift_slowDealloc(v6, -1, -1);

      v8 = a1[2];
      if (!v8)
        break;
      goto LABEL_4;
    }

    v7 = swift_bridgeObjectRelease(a1);
    v8 = a1[2];
    if (!v8)
      break;
LABEL_4:
    v9 = *(_QWORD *)(type metadata accessor for FMIPDevice(0) - 8);
    v10 = (char *)a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = (void *)objc_opt_self(UIScreen);
    v12 = *(_QWORD *)(v9 + 72);
    v37 = a1;
    swift_bridgeObjectRetain(a1);
    v13 = _swiftEmptyArrayStorage;
    while (1)
    {
      a1 = objc_msgSend(v11, "mainScreen");
      objc_msgSend(a1, "scale");
      v15 = v14;

      v16 = static FMIPDeviceImageCacheRequest.allRequests(for:scale:)(v10, v15);
      v17 = *(_QWORD *)(v16 + 16);
      v18 = v13[2];
      v19 = v18 + v17;
      if (__OFADD__(v18, v17))
        break;
      a1 = (_QWORD *)v16;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v13);
      if (isUniquelyReferenced_nonNull_native && v19 <= v13[3] >> 1)
      {
        if (a1[2])
          goto LABEL_16;
      }
      else
      {
        if (v18 <= v19)
          v21 = v18 + v17;
        else
          v21 = v18;
        v13 = (_QWORD *)sub_100031670(isUniquelyReferenced_nonNull_native, v21, 1, (unint64_t)v13);
        if (a1[2])
        {
LABEL_16:
          v22 = v13[2];
          v23 = (v13[3] >> 1) - v22;
          v24 = type metadata accessor for FMIPDeviceImageCacheRequest(0);
          if (v23 < v17)
            goto LABEL_31;
          v25 = *(_QWORD *)(v24 - 8);
          v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
          v27 = *(_QWORD *)(v25 + 72);
          v28 = (char *)v13 + v26 + v27 * v22;
          v29 = (char *)a1 + v26;
          v30 = v27 * v17;
          v31 = &v28[v30];
          v32 = &v29[v30];
          if (v29 < v31 && v28 < v32)
          {
            _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
            __break(1u);
            return;
          }
          swift_arrayInitWithCopy(v28);
          if (v17)
          {
            v34 = v13[2];
            v35 = __OFADD__(v34, v17);
            v36 = v34 + v17;
            if (v35)
              goto LABEL_32;
            v13[2] = v36;
          }
          goto LABEL_6;
        }
      }
      if (v17)
        goto LABEL_30;
LABEL_6:
      swift_bridgeObjectRelease(a1);
      v10 += v12;
      if (!--v8)
      {
        v7 = swift_bridgeObjectRelease(v37);
        goto LABEL_28;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  }
  v13 = _swiftEmptyArrayStorage;
LABEL_28:
  dispatch thunk of FMImageCache.preload(requests:)(v13, v7);
  swift_bridgeObjectRelease(v13);
}

uint64_t sub_1000314F8(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t result;
  char v26;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native(*v3) && v6 + v4 <= *(_QWORD *)(v5 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_15;
  }
  v5 = a2();
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
LABEL_5:
  v10 = *(_QWORD *)(v5 + 16);
  v11 = (*(_QWORD *)(v5 + 24) >> 1) - v10;
  v12 = a3(0);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 72);
  v16 = v5 + v14 + v15 * v10;
  v17 = a1 + v14;
  v18 = v15 * v4;
  v19 = v16 + v18;
  v20 = v17 + v18;
  if (v17 < v19 && v16 < v20)
    goto LABEL_21;
  swift_arrayInitWithCopy(v16);
  if (!v4)
  {
LABEL_16:
    result = swift_bridgeObjectRelease(a1);
    *v3 = v5;
    return result;
  }
  v22 = *(_QWORD *)(v5 + 16);
  v23 = __OFADD__(v22, v4);
  v24 = v22 + v4;
  if (!v23)
  {
    *(_QWORD *)(v5 + 16) = v24;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  v26 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v26, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_100031670(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100059310(a1, a2, a3, a4, &qword_1005D2C28, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPDeviceImageCacheRequest);
}

id sub_1000316B8()
{
  char *v0;
  void *v1;
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  void *v7;
  objc_super v9;

  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for FMTableViewCellImageContainer();
  objc_msgSendSuper2(&v9, "layoutSubviews");
  v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_imageView];
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_maskableContainer];
  objc_msgSend(v2, "bounds");
  objc_msgSend(v1, "setCenter:", v4 + v3 * 0.5, v6 + v5 * 0.5);
  v7 = *(void **)&v0[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_backplateLayer];
  objc_msgSend(v2, "bounds");
  objc_msgSend(v7, "setFrame:");
  sub_100031794();
  return sub_100031BDC();
}

uint64_t type metadata accessor for FMTableViewCellImageContainer()
{
  return objc_opt_self(_TtC6FindMy29FMTableViewCellImageContainer);
}

void sub_100031794()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  objc_class *v22;
  char *v23;
  char *v24;
  char *v25;
  id v26;
  void *v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  char v32;
  CGPath *v33;
  id v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  id v43;
  double v44;
  CGFloat v45;
  double v46;
  CGFloat v47;
  double v48;
  CGFloat v49;
  double v50;
  CGFloat v51;
  CGFloat v52;
  CGFloat v53;
  CGFloat v54;
  CGFloat v55;
  double x;
  double y;
  double width;
  double height;
  CGMutablePathRef Mutable;
  id v61;
  void *v62;
  id v63;
  id v64;
  id v65;
  double v66;
  uint64_t dx;
  objc_super v68;
  _QWORD v69[6];
  CGRect v70;
  CGRect v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;

  v1 = v0;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_badgeView);
  if (objc_msgSend(v2, "isHidden"))
  {
    v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                               + OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_maskableContainer), "layer"));
    objc_msgSend(v3, "setMask:", 0);

    v4 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_currentMaskingContext);
    *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_currentMaskingContext) = 0;

  }
  else
  {
    v5 = *(double *)(v0 + OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_style + 16);
    objc_msgSend(v2, "frame");
    dx = v6;
    v8 = v7;
    v10 = v9;
    v12 = v11;
    v13 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_maskableContainer);
    objc_msgSend(v13, "frame");
    v15 = v14;
    v17 = v16;
    v19 = v18;
    v21 = v20;
    v22 = (objc_class *)type metadata accessor for FMTableViewCellImageContainer.MaskingContext();
    v23 = (char *)objc_allocWithZone(v22);
    v66 = v5;
    *(double *)&v23[OBJC_IVAR____TtCC6FindMy29FMTableViewCellImageContainerP33_39D425E43D70273F0BCEA8DCE959394914MaskingContext_knockoutSize] = v5;
    v24 = &v23[OBJC_IVAR____TtCC6FindMy29FMTableViewCellImageContainerP33_39D425E43D70273F0BCEA8DCE959394914MaskingContext_badgeViewFrame];
    *(_QWORD *)v24 = dx;
    *((_QWORD *)v24 + 1) = v8;
    *((_QWORD *)v24 + 2) = v10;
    *((_QWORD *)v24 + 3) = v12;
    v25 = &v23[OBJC_IVAR____TtCC6FindMy29FMTableViewCellImageContainerP33_39D425E43D70273F0BCEA8DCE959394914MaskingContext_maskViewFrame];
    *(_QWORD *)v25 = v15;
    *((_QWORD *)v25 + 1) = v17;
    *((_QWORD *)v25 + 2) = v19;
    *((_QWORD *)v25 + 3) = v21;
    v68.receiver = v23;
    v68.super_class = v22;
    v26 = objc_msgSendSuper2(&v68, "init");
    v27 = v26;
    v28 = OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_currentMaskingContext;
    v29 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_currentMaskingContext);
    if (v29
      && (v30 = v26,
          v31 = v29,
          v32 = static NSObject.== infix(_:_:)(v30, v31),
          v30,
          v31,
          (v32 & 1) != 0))
    {

    }
    else
    {
      if (qword_1005D1DF8 != -1)
        swift_once(&qword_1005D1DF8, sub_10028437C);
      v33 = (CGPath *)objc_msgSend((id)qword_1005DDC20, "objectForKey:", v27);
      if (!v33)
      {
        v34 = objc_msgSend(v13, "coordinateSpace");
        objc_msgSend(v2, "bounds");
        v36 = v35;
        v38 = v37;
        v40 = v39;
        v42 = v41;
        v43 = objc_msgSend(v2, "coordinateSpace");
        objc_msgSend(v34, "convertRect:fromCoordinateSpace:", v43, v36, v38, v40, v42);
        v45 = v44;
        v47 = v46;
        v49 = v48;
        v51 = v50;
        swift_unknownObjectRelease(v34);
        swift_unknownObjectRelease(v43);
        objc_msgSend(v13, "bounds");
        v74.origin.x = v52;
        v74.origin.y = v53;
        v74.size.width = v54;
        v74.size.height = v55;
        v70.origin.x = v45;
        v70.origin.y = v47;
        v70.size.width = v49;
        v70.size.height = v51;
        v71 = CGRectUnion(v70, v74);
        x = v71.origin.x;
        y = v71.origin.y;
        width = v71.size.width;
        height = v71.size.height;
        Mutable = CGPathCreateMutable();
        v69[0] = 0x3FF0000000000000;
        v69[1] = 0;
        v69[2] = 0;
        v69[3] = 0x3FF0000000000000;
        v69[4] = 0;
        v69[5] = 0;
        v33 = Mutable;
        CGMutablePathRef.addRect(_:transform:)(v69, x, y, width, height);
        v72.origin.x = v45;
        v72.origin.y = v47;
        v72.size.width = v49;
        v72.size.height = v51;
        v73 = CGRectInset(v72, -v66, -v66);
        CGMutablePathRef.addEllipse(in:transform:)(v69, (__n128)v73.origin, *(__n128 *)&v73.origin.y, (__n128)v73.size, *(__n128 *)&v73.size.height);
        objc_msgSend((id)qword_1005DDC20, "setObject:forKey:", v33, v27);

      }
      v61 = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
      objc_msgSend(v61, "setFillRule:", kCAFillRuleEvenOdd);
      objc_msgSend(v61, "setPath:", v33);
      v62 = *(void **)(v1 + v28);
      *(_QWORD *)(v1 + v28) = v27;
      v63 = v27;

      v64 = objc_msgSend(v13, "layer");
      v65 = v61;
      objc_msgSend(v64, "setMask:", v65);

    }
  }
}

id sub_100031BDC()
{
  _BYTE *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  char **v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;

  v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_backplateLayer];
  if (v0[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_hasBackplate] != 1)
    return objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_backplateLayer], "setHidden:", 1);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_backplateLayer], "setHidden:", 0);
  v2 = objc_msgSend(v0, "traitCollection");
  v3 = objc_msgSend(v2, "userInterfaceStyle");

  v4 = (void *)objc_opt_self(UIColor);
  v5 = &selRef_systemGray3Color;
  if (v3 != (id)2)
    v5 = &selRef_whiteColor;
  v6 = objc_msgSend(v4, *v5);
  v7 = objc_msgSend(v6, "CGColor");

  objc_msgSend(v1, "setBackgroundColor:", v7);
  if (v3 == (id)2)
  {
    v8 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
    v9 = objc_msgSend(v8, "CGColor");

  }
  else
  {
    v11 = *(void **)&v0[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_backplateStrokeColor];
    if (v11)
      v9 = objc_msgSend(v11, "CGColor");
    else
      v9 = 0;
  }
  objc_msgSend(v1, "setBorderColor:", v9);

  return objc_msgSend(v1, "setBorderWidth:", v10);
}

void sub_100031DEC(char a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  int v7;
  uint64_t v8;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100056D88(v2, (uint64_t)qword_1005F5748);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 67240192;
    v7 = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v7, &v8);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMMapViewController: canEnter3DModeDidChange: %{BOOL,public}d", v6, 8u);
    swift_slowDealloc(v6, -1, -1);
  }

  sub_100031F08(1);
}

void sub_100031F08(char a1)
{
  uint64_t v1;
  char v3;
  char v4;
  void *v5;
  char v6;
  char v7;
  char v8;
  unsigned __int8 v9;
  double v10;
  double v11;
  char v12;
  void *v13;
  char v14;
  id v15;

  v3 = *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator) + 56)
                + OBJC_IVAR____TtC6FindMy21FMSelectionController_selectedMapMode);
  v4 = objc_msgSend((id)objc_opt_self(VKMapView), "_globeIsEnabled");
  v5 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy19FMMapViewController_mapView);
  v6 = objc_msgSend(v5, "_isPitched");
  v7 = objc_msgSend(v5, "_canEnter3DMode");
  v8 = *(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy19FMMapViewController_isExiting3DMode);
  v9 = objc_msgSend(v5, "_isShowingCuratedElevatedGround");
  if (qword_1005D1F30 != -1)
    swift_once(&qword_1005D1F30, sub_10005F428);
  v10 = *(double *)&qword_1005F5CB0;
  objc_msgSend(v5, "_zoomLevel");
  v12 = sub_100032080(v6, v8, v4, v7, v9, v3, v11, v10);
  v13 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy19FMMapViewController_mapOptionsView);
  if (v13)
  {
    v14 = v12;
    v15 = v13;
    sub_100032374(v14, a1 & 1);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100032080(char a1, char a2, char a3, char a4, unsigned __int8 a5, char a6, double a7, double a8)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  os_log_type_t v22;

  if ((a1 & 1) == 0 || (a2 & 1) != 0)
  {
    if ((a3 & 1) != 0)
    {
      if ((a4 & 1) != 0 && ((a5 & (a8 <= a7)) != 0 || (a6 & 1) != 0))
      {
        if (qword_1005D1DE8 != -1)
          swift_once(&qword_1005D1DE8, sub_100005ADC);
        v20 = type metadata accessor for Logger(0);
        v21 = sub_100056D88(v20, (uint64_t)qword_1005F5748);
        v10 = Logger.logObject.getter(v21);
        v22 = static os_log_type_t.default.getter(v10);
        if (!os_log_type_enabled(v10, v22))
        {
          v13 = 0;
          goto LABEL_26;
        }
        v12 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v12 = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, v22, "FMMapViewController: shouldShowPerspectiveButton - show3D - isGlobeEnabled", v12, 2u);
        v13 = 0;
        goto LABEL_25;
      }
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v14 = type metadata accessor for Logger(0);
      v15 = sub_100056D88(v14, (uint64_t)qword_1005F5748);
      v10 = Logger.logObject.getter(v15);
      v16 = static os_log_type_t.default.getter(v10);
      v13 = 2;
      if (os_log_type_enabled(v10, v16))
      {
        v12 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v12 = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, v16, "FMMapViewController: shouldShowPerspectiveButton - hideAll - isGlobeEnabled", v12, 2u);
        goto LABEL_25;
      }
    }
    else
    {
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v17 = type metadata accessor for Logger(0);
      v18 = sub_100056D88(v17, (uint64_t)qword_1005F5748);
      v10 = Logger.logObject.getter(v18);
      v19 = static os_log_type_t.default.getter(v10);
      if (os_log_type_enabled(v10, v19))
      {
        v12 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v12 = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, v19, "FMMapViewController: shouldShowPerspectiveButton - hideAll", v12, 2u);
        v13 = 2;
        goto LABEL_25;
      }
      v13 = 2;
    }
  }
  else
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v8 = type metadata accessor for Logger(0);
    v9 = sub_100056D88(v8, (uint64_t)qword_1005F5748);
    v10 = Logger.logObject.getter(v9);
    v11 = static os_log_type_t.default.getter(v10);
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "FMMapViewController: shouldShowPerspectiveButton - show2D - isPitched && !isExiting3DMode", v12, 2u);
      v13 = 1;
LABEL_25:
      swift_slowDealloc(v12, -1, -1);
      goto LABEL_26;
    }
    v13 = 1;
  }
LABEL_26:

  return v13;
}

uint64_t sub_100032374(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  void **v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  double v33;
  void *v34;
  uint64_t v35;
  uint64_t (*v36)();
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  uint64_t v47;
  void **aBlock;
  uint64_t v49;
  uint64_t (*v50)(uint64_t);
  void *v51;
  uint64_t (*v52)();
  uint64_t v53;

  v3 = v2;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100056D88(v6, (uint64_t)qword_1005F5748);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = (void **)swift_slowAlloc(32, -1);
    aBlock = v11;
    *(_DWORD *)v10 = 136315138;
    LOBYTE(v47) = a1;
    v12 = String.init<A>(describing:)(&v47, &type metadata for FMMapOptionsView.PerspectiveButtonState);
    v14 = v13;
    v47 = sub_100056DA0(v12, v13, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &aBlock);
    swift_bridgeObjectRelease(v14);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "FMMapOptionView: updatePerspectiveButton - state: %s", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }

  *(_BYTE *)(v3 + OBJC_IVAR____TtC6FindMy16FMMapOptionsView_currentPerspectiveButtonState) = a1;
  v15 = *(void **)(v3 + OBJC_IVAR____TtC6FindMy16FMMapOptionsView_secondPlatter);
  v16 = *(void **)(v3 + OBJC_IVAR____TtC6FindMy16FMMapOptionsView_platterContainer);
  v17 = *(void **)(v3 + OBJC_IVAR____TtC6FindMy16FMMapOptionsView_perspective2dButton);
  v18 = *(void **)(v3 + OBJC_IVAR____TtC6FindMy16FMMapOptionsView_perspective3dButton);
  v19 = swift_allocObject(&unk_1005538A8, 56, 7);
  *(_QWORD *)(v19 + 16) = v16;
  *(_BYTE *)(v19 + 24) = a1;
  *(_QWORD *)(v19 + 32) = v15;
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  v20 = swift_allocObject(&unk_1005538D0, 56, 7);
  *(_QWORD *)(v20 + 16) = v16;
  *(_BYTE *)(v20 + 24) = a1;
  *(_QWORD *)(v20 + 32) = v15;
  *(_QWORD *)(v20 + 40) = v17;
  *(_QWORD *)(v20 + 48) = v18;
  if ((a2 & 1) == 0)
  {
    v38 = v18;
    v39 = v17;
    v40 = v15;
    v41 = v16;
    v42 = v38;
    v43 = v39;
    v44 = v40;
    v45 = v41;
    sub_100021FA4(v45, a1, v44, v43, v42);
    sub_10003FB34(v45, a1, v44, v43, v42);
    v36 = 0;
    v37 = 0;
    goto LABEL_10;
  }
  v21 = (void *)objc_opt_self(UIView);
  v22 = swift_allocObject(&unk_1005538F8, 32, 7);
  *(_QWORD *)(v22 + 16) = sub_100022074;
  *(_QWORD *)(v22 + 24) = v19;
  v52 = sub_100021E78;
  v53 = v22;
  aBlock = _NSConcreteStackBlock;
  v49 = 1107296256;
  v50 = sub_100021E38;
  v51 = &unk_100553910;
  v23 = _Block_copy(&aBlock);
  v24 = v53;
  v25 = v18;
  v26 = v17;
  v27 = v15;
  v28 = v16;
  v29 = v25;
  v30 = v26;
  v31 = v27;
  v32 = v28;
  swift_retain(v19);
  swift_retain(v22);
  objc_msgSend(v21, "performWithoutAnimation:", v23, swift_release(v24).n128_f64[0]);
  _Block_release(v23);
  LOBYTE(v23) = swift_isEscapingClosureAtFileLocation(v22, "", 100, 286, 40, 1);
  swift_release(v22);
  if ((v23 & 1) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (qword_1005D1D88 != -1)
LABEL_12:
    swift_once(&qword_1005D1D88, sub_10005E5B4);
  v33 = *(double *)&qword_1005F5550;
  v52 = sub_10003FEB4;
  v53 = v20;
  aBlock = _NSConcreteStackBlock;
  v49 = 1107296256;
  v50 = sub_100037DF8;
  v51 = &unk_100553938;
  v34 = _Block_copy(&aBlock);
  v35 = v53;
  swift_retain(v20);
  swift_release(v35);
  objc_msgSend(v21, "animateWithDuration:animations:completion:", v34, 0, v33);
  _Block_release(v34);
  v36 = sub_100022074;
  v37 = v19;
LABEL_10:
  swift_release(v19);
  swift_release(v20);
  return sub_1000327F0((uint64_t)v36, v37);
}

uint64_t sub_1000327F0(uint64_t result, uint64_t a2)
{
  if (result)
    return swift_release(a2);
  return result;
}

void sub_100032800()
{
  void *v0;
  id v1;
  Swift::String v2;
  Swift::String v3;
  void *object;
  NSString v5;
  NSString v6;
  void *v7;
  id v8;
  id v9;
  Swift::String v10;
  Swift::String v11;
  void *v12;
  NSString v13;
  NSString v14;
  id v15;
  uint64_t v16;
  NSString v17;
  Class isa;
  Class v19;
  Class v20;
  id v21;
  Swift::String v22;
  Swift::String v23;
  void *v24;
  NSString v25;
  NSString v26;
  id v27;
  Swift::String v28;
  Swift::String v29;
  void *v30;
  NSString v31;
  NSString v32;
  id v33;
  id v34;
  Swift::String v35;
  Swift::String v36;
  void *v37;
  NSString v38;
  NSString v39;
  id v40;
  id v41;
  Swift::String v42;
  Swift::String v43;
  void *v44;
  NSString v45;
  NSString v46;
  void *v47;
  id v48;
  uint64_t v49;
  NSString v50;
  Class v51;
  Class v52;
  Class v53;
  void *v54;
  id v55;
  Swift::String v56;
  Swift::String_optional v57;
  Swift::String v58;
  void *v59;
  NSString v60;
  NSString v61;
  id v62;
  id v63;
  Swift::String v64;
  Swift::String_optional v65;
  Swift::String v66;
  void *v67;
  NSString v68;
  NSString v69;
  id v70;
  uint64_t v71;
  NSString v72;
  Class v73;
  Class v74;
  Class v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  NSString v87;
  Class v88;
  Class v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  NSString v94;
  Class v95;
  Class v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  NSString v101;
  Class v102;
  Class v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  NSString v108;
  Class v109;
  Class v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  id v115;
  Swift::String v116;
  Swift::String v117;
  void *v118;
  NSString v119;
  NSString v120;
  id v121;
  id v122;
  Swift::String v123;
  Swift::String v124;
  void *v125;
  NSString v126;
  NSString v127;
  id v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  id v132;
  id v133;
  NSString v134;
  Class v135;
  Class v136;
  Class v137;
  id v138;
  Swift::String v139;
  Swift::String_optional v140;
  Swift::String v141;
  void *v142;
  NSString v143;
  NSString v144;
  id v145;
  Swift::String v146;
  Swift::String_optional v147;
  Swift::String v148;
  void *v149;
  NSString v150;
  NSString v151;
  id v152;
  id v153;
  Swift::String v154;
  Swift::String_optional v155;
  Swift::String v156;
  void *v157;
  NSString v158;
  NSString v159;
  id v160;
  uint64_t v161;
  id v162;
  id v163;
  NSString v164;
  Class v165;
  Class v166;
  uint64_t v167;
  NSString v168;
  Class v169;
  Class v170;
  NSString v171;
  Class v172;
  Class v173;
  id v174;
  NSString v175;
  Class v176;
  Class v177;
  id v178;
  NSString v179;
  Class v180;
  Class v181;
  NSString v182;
  Class v183;
  Class v184;
  id v185;
  void *v186;
  id v187;
  id v188;
  id v189;
  NSString v190;
  uint64_t v191;
  id v192;
  id v193;
  id v194;
  id v195;
  char *v196;
  uint64_t v197;
  unint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  id v202;
  unint64_t v203;
  unint64_t v204;
  uint64_t v205;
  id v206;
  uint64_t v207;
  unint64_t v208;
  unint64_t v209;
  uint64_t v210;
  id v211;
  unint64_t v212;
  unint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  Class v218;
  id v219;
  uint64_t v220;
  void *v221;
  uint64_t v222;
  id v223;
  id v224;
  uint64_t v225;
  uint64_t v226;
  BOOL v227;
  id v228;
  id v229;
  id v230;
  id v231;
  id v232;
  id v233;
  id v234;
  id v235;
  id v236;
  id v237;
  id v238;
  id v239;
  void *v240;
  id v241;
  id v242;
  void *v243;
  id v244;
  uint64_t _a;
  id _b;
  id _;
  id __8;
  id v249;
  id v250;
  id comment;
  void *comment_8a;
  id comment_8;
  id tableName_8;
  id v255;
  id v256;
  id v257;
  void *v258;
  unint64_t aBlock;
  unint64_t v260;
  void (*v261)(uint64_t, void *);
  void *v262;
  void (*v263)(void *);
  uint64_t v264;
  _QWORD v265[9];
  Swift::String v266;
  Swift::String v267;
  Swift::String v268;
  Swift::String v269;
  Swift::String v270;
  Swift::String v271;
  Swift::String v272;
  Swift::String v273;
  Swift::String v274;
  Swift::String v275;
  Swift::String v276;
  Swift::String v277;
  Swift::String v278;

  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v0 = (void *)objc_opt_self(NSBundle);
  v1 = objc_msgSend(v0, "mainBundle");
  v2._countAndFlagsBits = 0xD000000000000013;
  v266._countAndFlagsBits = 0xD000000000000025;
  v266._object = (void *)0x80000001004A7AE0;
  v2._object = (void *)0x80000001004A7AC0;
  v3._countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v1, v3, v266)._object;

  v5 = String._bridgeToObjectiveC()();
  v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v7 = (void *)objc_opt_self(UNNotificationAction);
  v8 = objc_msgSend(v7, "actionWithIdentifier:title:options:", v5, v6, 1);

  _StringGuts.grow(_:)(20);
  v9 = objc_msgSend(v0, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
  v10._countAndFlagsBits = 0xD000000000000014;
  v267._countAndFlagsBits = 0xD000000000000026;
  v267._object = (void *)0x80000001004A7B50;
  v10._object = (void *)0x80000001004A7B30;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v267)._object;

  v13 = String._bridgeToObjectiveC()();
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v7, "actionWithIdentifier:title:options:", v13, v14, 1, swift_bridgeObjectRelease(v12).n128_f64[0]);

  v258 = (void *)sub_100053F2C(&qword_1005D2F10);
  v16 = swift_allocObject(v258, 48, 7);
  *(_OWORD *)(v16 + 16) = xmmword_1004820B0;
  *(_QWORD *)(v16 + 32) = v15;
  *(_QWORD *)(v16 + 40) = v8;
  aBlock = v16;
  specialized Array._endMutation()(v16);
  v239 = v15;
  v238 = v8;
  v17 = String._bridgeToObjectiveC()();
  sub_100006C5C(0, &qword_1005D39F0, UNNotificationAction_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(aBlock);
  v19 = Array._bridgeToObjectiveC()().super.isa;
  v20 = Array._bridgeToObjectiveC()().super.isa;
  v255 = (id)objc_opt_self(UNNotificationCategory);
  v250 = objc_msgSend(v255, "categoryWithIdentifier:actions:minimalActions:intentIdentifiers:options:", v17, isa, v19, v20, 0);

  _StringGuts.grow(_:)(20);
  v21 = objc_msgSend(v0, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
  v22._countAndFlagsBits = 0xD00000000000001BLL;
  v268._countAndFlagsBits = 0xD00000000000002DLL;
  v268._object = (void *)0x80000001004A7BC0;
  v22._object = (void *)0x80000001004A7BA0;
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  v24 = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, (Swift::String_optional)0, (NSBundle)v21, v23, v268)._object;

  v25 = String._bridgeToObjectiveC()();
  v26 = String._bridgeToObjectiveC()();
  v241 = objc_msgSend(v7, "actionWithIdentifier:title:options:", v25, v26, 1, swift_bridgeObjectRelease(v24).n128_f64[0]);

  _StringGuts.grow(_:)(20);
  v27 = objc_msgSend(v0, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
  v28._countAndFlagsBits = 0xD000000000000016;
  v269._countAndFlagsBits = 0xD000000000000028;
  v269._object = (void *)0x80000001004A7C30;
  v28._object = (void *)0x80000001004A7C10;
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, (Swift::String_optional)0, (NSBundle)v27, v29, v269)._object;

  v31 = String._bridgeToObjectiveC()();
  v32 = String._bridgeToObjectiveC()();
  v33 = objc_msgSend(v7, "actionWithIdentifier:title:options:", v31, v32, 1, swift_bridgeObjectRelease(v30).n128_f64[0]);

  _StringGuts.grow(_:)(20);
  v34 = objc_msgSend(v0, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
  v35._countAndFlagsBits = 0xD00000000000001ALL;
  v270._countAndFlagsBits = 0xD00000000000002CLL;
  v270._object = (void *)0x80000001004A7CA0;
  v35._object = (void *)0x80000001004A7C80;
  v36._countAndFlagsBits = 0;
  v36._object = (void *)0xE000000000000000;
  v37 = NSLocalizedString(_:tableName:bundle:value:comment:)(v35, (Swift::String_optional)0, (NSBundle)v34, v36, v270)._object;

  v38 = String._bridgeToObjectiveC()();
  v39 = String._bridgeToObjectiveC()();
  v40 = objc_msgSend(v7, "actionWithIdentifier:title:options:", v38, v39, 1, swift_bridgeObjectRelease(v37).n128_f64[0]);

  v260 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v41 = objc_msgSend(v0, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
  v271._countAndFlagsBits = 0xD000000000000029;
  v271._object = (void *)0x80000001004A7D10;
  v42._object = (void *)0x80000001004A7CF0;
  v42._countAndFlagsBits = 0xD000000000000017;
  v43._countAndFlagsBits = 0;
  v43._object = (void *)0xE000000000000000;
  v44 = NSLocalizedString(_:tableName:bundle:value:comment:)(v42, (Swift::String_optional)0, (NSBundle)v41, v43, v271)._object;

  v45 = String._bridgeToObjectiveC()();
  v46 = String._bridgeToObjectiveC()();
  v47 = v7;
  v48 = objc_msgSend(v7, "actionWithIdentifier:title:options:", v45, v46, 1, swift_bridgeObjectRelease(v44).n128_f64[0]);

  v49 = swift_allocObject(v258, 64, 7);
  *(_OWORD *)(v49 + 16) = xmmword_100481720;
  *(_QWORD *)(v49 + 32) = v241;
  *(_QWORD *)(v49 + 40) = v33;
  *(_QWORD *)(v49 + 48) = v40;
  *(_QWORD *)(v49 + 56) = v48;
  aBlock = v49;
  specialized Array._endMutation()(v49);
  v237 = v241;
  v236 = v33;
  v235 = v40;
  v234 = v48;
  v50 = String._bridgeToObjectiveC()();
  v51 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(aBlock);
  v52 = Array._bridgeToObjectiveC()().super.isa;
  v53 = Array._bridgeToObjectiveC()().super.isa;
  __8 = objc_msgSend(v255, "categoryWithIdentifier:actions:minimalActions:intentIdentifiers:options:", v50, v51, v52, v53, 0);

  v54 = v0;
  v243 = v0;
  v55 = objc_msgSend(v0, "mainBundle");
  v272._object = (void *)0x80000001004A5660;
  v56._object = (void *)0x80000001004A7D70;
  v56._countAndFlagsBits = 0xD000000000000026;
  v57.value._countAndFlagsBits = 0xD000000000000013;
  v57.value._object = (void *)0x80000001004A5640;
  v58._countAndFlagsBits = 0;
  v58._object = (void *)0xE000000000000000;
  v272._countAndFlagsBits = 0xD000000000000018;
  v59 = NSLocalizedString(_:tableName:bundle:value:comment:)(v56, v57, (NSBundle)v55, v58, v272)._object;

  v60 = String._bridgeToObjectiveC()();
  v61 = String._bridgeToObjectiveC()();
  comment_8a = v47;
  v62 = objc_msgSend(v47, "actionWithIdentifier:title:options:", v60, v61, 5, swift_bridgeObjectRelease(v59).n128_f64[0]);

  v63 = objc_msgSend(v54, "mainBundle");
  v273._object = (void *)0x80000001004A5660;
  v64._object = (void *)0x80000001004A7DD0;
  v64._countAndFlagsBits = 0xD000000000000026;
  v65.value._countAndFlagsBits = 0xD000000000000013;
  v65.value._object = (void *)0x80000001004A5640;
  v66._countAndFlagsBits = 0;
  v66._object = (void *)0xE000000000000000;
  v273._countAndFlagsBits = 0xD000000000000018;
  v67 = NSLocalizedString(_:tableName:bundle:value:comment:)(v64, v65, (NSBundle)v63, v66, v273)._object;

  v68 = String._bridgeToObjectiveC()();
  v69 = String._bridgeToObjectiveC()();
  v70 = objc_msgSend(v47, "actionWithIdentifier:title:options:", v68, v69, 5, swift_bridgeObjectRelease(v67).n128_f64[0]);

  v71 = swift_allocObject(v258, 48, 7);
  *(_OWORD *)(v71 + 16) = xmmword_1004820B0;
  *(_QWORD *)(v71 + 32) = v62;
  *(_QWORD *)(v71 + 40) = v70;
  aBlock = v71;
  specialized Array._endMutation()(v71);
  v233 = v62;
  v232 = v70;
  v72 = String._bridgeToObjectiveC()();
  v73 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(aBlock);
  v74 = Array._bridgeToObjectiveC()().super.isa;
  v75 = Array._bridgeToObjectiveC()().super.isa;
  v231 = objc_msgSend(v255, "categoryWithIdentifier:actions:minimalActions:intentIdentifiers:options:", v72, v73, v74, v75, 0x20000);

  v76 = static String._unconditionallyBridgeFromObjectiveC(_:)(SPSeparationAlertLeftBehindDevicesCategoryIdentifier);
  v78 = v77;
  v265[0] = v76;
  v265[1] = v77;
  v79 = static String._unconditionallyBridgeFromObjectiveC(_:)(SPSeparationAlertLeftBehindItemsCategoryIdentifier);
  v81 = v80;
  v265[2] = v79;
  v265[3] = v80;
  v82 = static String._unconditionallyBridgeFromObjectiveC(_:)(SPSeparationAlertLeftWhileTravelingDevicesCategoryIdentifier);
  v84 = v83;
  v265[4] = v82;
  v265[5] = v83;
  v85 = static String._unconditionallyBridgeFromObjectiveC(_:)(SPSeparationAlertLeftWhileTravelingItemsCategoryIdentifier);
  _a = v86;
  v265[6] = v85;
  v265[7] = v86;
  aBlock = (unint64_t)_swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)(4);
  swift_bridgeObjectRetain(v78);
  v87 = String._bridgeToObjectiveC()();
  v88 = Array._bridgeToObjectiveC()().super.isa;
  v89 = Array._bridgeToObjectiveC()().super.isa;
  v90 = objc_msgSend(v255, "categoryWithIdentifier:actions:intentIdentifiers:options:", v87, v88, v89, 0);
  swift_bridgeObjectRelease(v78);

  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v91);
  v92 = _swiftEmptyArrayStorage[2];
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v92);
  v93 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v92, v90);
  specialized ContiguousArray._endMutation()(v93);
  swift_bridgeObjectRetain(v81);
  v94 = String._bridgeToObjectiveC()();
  v95 = Array._bridgeToObjectiveC()().super.isa;
  v96 = Array._bridgeToObjectiveC()().super.isa;
  v97 = objc_msgSend(v255, "categoryWithIdentifier:actions:intentIdentifiers:options:", v94, v95, v96, 0);
  swift_bridgeObjectRelease(v81);

  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v98);
  v99 = _swiftEmptyArrayStorage[2];
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v99);
  v100 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v99, v97);
  specialized ContiguousArray._endMutation()(v100);
  swift_bridgeObjectRetain(v84);
  v101 = String._bridgeToObjectiveC()();
  v102 = Array._bridgeToObjectiveC()().super.isa;
  v103 = Array._bridgeToObjectiveC()().super.isa;
  v104 = objc_msgSend(v255, "categoryWithIdentifier:actions:intentIdentifiers:options:", v101, v102, v103, 0);
  swift_bridgeObjectRelease(v84);

  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v105);
  v106 = _swiftEmptyArrayStorage[2];
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v106);
  v107 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v106, v104);
  specialized ContiguousArray._endMutation()(v107);
  swift_bridgeObjectRetain(_a);
  v108 = String._bridgeToObjectiveC()();
  v109 = Array._bridgeToObjectiveC()().super.isa;
  v110 = Array._bridgeToObjectiveC()().super.isa;
  v111 = objc_msgSend(v255, "categoryWithIdentifier:actions:intentIdentifiers:options:", v108, v109, v110, 0);
  swift_bridgeObjectRelease(_a);

  specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v112);
  v113 = _swiftEmptyArrayStorage[2];
  specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v113);
  v114 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v113, v111);
  specialized ContiguousArray._endMutation()(v114);
  swift_arrayDestroy(v265, 4, &type metadata for String);
  _StringGuts.grow(_:)(20);
  v115 = objc_msgSend(v243, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
  v116._countAndFlagsBits = 0xD000000000000022;
  v274._countAndFlagsBits = 0xD000000000000034;
  v274._object = (void *)0x80000001004A7E80;
  v116._object = (void *)0x80000001004A7E50;
  v117._countAndFlagsBits = 0;
  v117._object = (void *)0xE000000000000000;
  v118 = NSLocalizedString(_:tableName:bundle:value:comment:)(v116, (Swift::String_optional)0, (NSBundle)v115, v117, v274)._object;

  v119 = String._bridgeToObjectiveC()();
  v120 = String._bridgeToObjectiveC()();
  v121 = objc_msgSend(comment_8a, "actionWithIdentifier:title:options:", v119, v120, 1, swift_bridgeObjectRelease(v118).n128_f64[0]);

  v260 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v122 = objc_msgSend(v243, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
  v123._countAndFlagsBits = 0xD000000000000023;
  v275._countAndFlagsBits = 0xD000000000000035;
  v275._object = (void *)0x80000001004A7F10;
  v123._object = (void *)0x80000001004A7EE0;
  v124._countAndFlagsBits = 0;
  v124._object = (void *)0xE000000000000000;
  v125 = NSLocalizedString(_:tableName:bundle:value:comment:)(v123, (Swift::String_optional)0, (NSBundle)v122, v124, v275)._object;

  v126 = String._bridgeToObjectiveC()();
  v127 = String._bridgeToObjectiveC()();
  v128 = objc_msgSend(comment_8a, "actionWithIdentifier:title:options:", v126, v127, 1, swift_bridgeObjectRelease(v125).n128_f64[0]);

  v129 = swift_allocObject(v258, 48, 7);
  *(_OWORD *)(v129 + 16) = xmmword_1004820B0;
  *(_QWORD *)(v129 + 32) = v121;
  *(_QWORD *)(v129 + 40) = v128;
  aBlock = v129;
  specialized Array._endMutation()(v129);
  v130 = aBlock;
  v131 = swift_allocObject(v258, 48, 7);
  *(_OWORD *)(v131 + 16) = xmmword_1004820B0;
  *(_QWORD *)(v131 + 32) = v121;
  *(_QWORD *)(v131 + 40) = v128;
  aBlock = v131;
  specialized Array._endMutation()(v131);
  v132 = v121;
  v133 = v128;
  v230 = v132;
  v229 = v133;
  v134 = String._bridgeToObjectiveC()();
  v135 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v130);
  v136 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(aBlock);
  v137 = Array._bridgeToObjectiveC()().super.isa;
  comment = objc_msgSend(v255, "categoryWithIdentifier:actions:minimalActions:intentIdentifiers:options:", v134, v135, v136, v137, 0);

  v138 = objc_msgSend(v243, "mainBundle");
  v139._countAndFlagsBits = 0xD00000000000001ELL;
  v276._object = (void *)0x80000001004A6680;
  v139._object = (void *)0x80000001004A7F90;
  v140.value._countAndFlagsBits = 0xD000000000000012;
  v140.value._object = (void *)0x80000001004A6660;
  v141._countAndFlagsBits = 0;
  v141._object = (void *)0xE000000000000000;
  v276._countAndFlagsBits = 0xD000000000000017;
  v142 = NSLocalizedString(_:tableName:bundle:value:comment:)(v139, v140, (NSBundle)v138, v141, v276)._object;

  v143 = String._bridgeToObjectiveC()();
  v144 = String._bridgeToObjectiveC()();
  _b = objc_msgSend(comment_8a, "actionWithIdentifier:title:options:", v143, v144, 1, swift_bridgeObjectRelease(v142).n128_f64[0]);

  v145 = objc_msgSend(v243, "mainBundle");
  v146._countAndFlagsBits = 0xD000000000000021;
  v277._object = (void *)0x80000001004A6680;
  v146._object = (void *)0x80000001004A7FD0;
  v147.value._countAndFlagsBits = 0xD000000000000012;
  v147.value._object = (void *)0x80000001004A6660;
  v148._countAndFlagsBits = 0;
  v148._object = (void *)0xE000000000000000;
  v277._countAndFlagsBits = 0xD000000000000017;
  v149 = NSLocalizedString(_:tableName:bundle:value:comment:)(v146, v147, (NSBundle)v145, v148, v277)._object;

  v150 = String._bridgeToObjectiveC()();
  v151 = String._bridgeToObjectiveC()();
  v152 = objc_msgSend(comment_8a, "actionWithIdentifier:title:options:", v150, v151, 1, swift_bridgeObjectRelease(v149).n128_f64[0]);

  v153 = objc_msgSend(v243, "mainBundle");
  v278._object = (void *)0x80000001004A6680;
  v154._object = (void *)0x80000001004A8020;
  v154._countAndFlagsBits = 0xD00000000000001ELL;
  v155.value._countAndFlagsBits = 0xD000000000000012;
  v155.value._object = (void *)0x80000001004A6660;
  v156._countAndFlagsBits = 0;
  v156._object = (void *)0xE000000000000000;
  v278._countAndFlagsBits = 0xD000000000000017;
  v157 = NSLocalizedString(_:tableName:bundle:value:comment:)(v154, v155, (NSBundle)v153, v156, v278)._object;

  v158 = String._bridgeToObjectiveC()();
  v159 = String._bridgeToObjectiveC()();
  v160 = objc_msgSend(comment_8a, "actionWithIdentifier:title:options:", v158, v159, 1, swift_bridgeObjectRelease(v157).n128_f64[0]);

  v161 = swift_allocObject(v258, 56, 7);
  *(_OWORD *)(v161 + 16) = xmmword_1004820C0;
  *(_QWORD *)(v161 + 32) = v160;
  *(_QWORD *)(v161 + 40) = v152;
  *(_QWORD *)(v161 + 48) = _b;
  aBlock = v161;
  specialized Array._endMutation()(v161);
  v162 = v160;
  v163 = v152;
  comment_8 = _b;
  v164 = String._bridgeToObjectiveC()();
  v165 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(aBlock);
  v166 = Array._bridgeToObjectiveC()().super.isa;
  tableName_8 = objc_msgSend(v255, "categoryWithIdentifier:actions:intentIdentifiers:options:", v164, v165, v166, 0);

  v167 = swift_allocObject(v258, 48, 7);
  *(_OWORD *)(v167 + 16) = xmmword_1004820B0;
  *(_QWORD *)(v167 + 32) = v162;
  *(_QWORD *)(v167 + 40) = v163;
  aBlock = v167;
  specialized Array._endMutation()(v167);
  _ = v162;
  v244 = v163;
  v168 = String._bridgeToObjectiveC()();
  v169 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(aBlock);
  v170 = Array._bridgeToObjectiveC()().super.isa;
  v256 = objc_msgSend(v255, "categoryWithIdentifier:actions:intentIdentifiers:options:", v168, v169, v170, 0);

  v171 = String._bridgeToObjectiveC()();
  v172 = Array._bridgeToObjectiveC()().super.isa;
  v173 = Array._bridgeToObjectiveC()().super.isa;
  v174 = objc_msgSend(v255, "categoryWithIdentifier:actions:intentIdentifiers:options:", v171, v172, v173, 0);

  v175 = String._bridgeToObjectiveC()();
  v176 = Array._bridgeToObjectiveC()().super.isa;
  v177 = Array._bridgeToObjectiveC()().super.isa;
  v178 = objc_msgSend(v255, "categoryWithIdentifier:actions:intentIdentifiers:options:", v175, v176, v177, 0);

  v228 = v174;
  v242 = v178;
  v179 = String._bridgeToObjectiveC()();
  v180 = Array._bridgeToObjectiveC()().super.isa;
  v181 = Array._bridgeToObjectiveC()().super.isa;
  v249 = objc_msgSend(v255, "categoryWithIdentifier:actions:intentIdentifiers:options:", v179, v180, v181, 0);

  v182 = String._bridgeToObjectiveC()();
  v183 = Array._bridgeToObjectiveC()().super.isa;
  v184 = Array._bridgeToObjectiveC()().super.isa;
  v185 = objc_msgSend(v255, "categoryWithIdentifier:actions:intentIdentifiers:options:", v182, v183, v184, 0);

  v186 = (void *)objc_opt_self(UNUserNotificationCenter);
  v187 = v185;
  v188 = objc_msgSend(v186, "currentNotificationCenter");
  v189 = objc_allocWithZone((Class)UNUserNotificationCenter);
  v190 = String._bridgeToObjectiveC()();
  v257 = objc_msgSend(v189, "initWithBundleIdentifier:", v190);

  v191 = swift_allocObject(v258, 72, 7);
  *(_OWORD *)(v191 + 16) = xmmword_1004820D0;
  *(_QWORD *)(v191 + 32) = v250;
  *(_QWORD *)(v191 + 40) = __8;
  *(_QWORD *)(v191 + 48) = comment;
  *(_QWORD *)(v191 + 56) = tableName_8;
  *(_QWORD *)(v191 + 64) = v256;
  aBlock = v191;
  specialized Array._endMutation()(v191);
  v192 = v250;
  v193 = __8;
  v194 = comment;
  v195 = tableName_8;
  v196 = (char *)v256;
  sub_10005D320((uint64_t)_swiftEmptyArrayStorage);
  if (aBlock >> 62)
  {
    if ((aBlock & 0x8000000000000000) != 0)
      v225 = aBlock;
    else
      v225 = aBlock & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(aBlock);
    v226 = _CocoaArrayWrapper.endIndex.getter(v225);
    v227 = __OFADD__(v226, 2);
    v199 = v226 + 2;
    if (!v227)
    {
LABEL_3:
      v255 = v194;
      v256 = v195;
      v258 = v196;
      v200 = sub_1000064D4(v199, 1);
      specialized Array._endMutation()(v200);
      v194 = v228;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v194);
      v196 = *(char **)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x10);
      v198 = *(_QWORD *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x18);
      if ((unint64_t)v196 < v198 >> 1)
        goto LABEL_4;
      goto LABEL_17;
    }
  }
  else
  {
    v197 = *(_QWORD *)((aBlock & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(aBlock);
    v199 = v197 + 2;
    if (!__OFADD__(v197, 2))
      goto LABEL_3;
  }
  __break(1u);
LABEL_17:
  specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v198 > 1, v196 + 1, 1);
LABEL_4:
  v201 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v196, v194);
  specialized Array._endMutation()(v201);
  v202 = v242;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v202);
  v204 = *(_QWORD *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x10);
  v203 = *(_QWORD *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v204 >= v203 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v203 > 1, v204 + 1, 1);
  v205 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v204, v202);
  specialized Array._endMutation()(v205);
  swift_bridgeObjectRelease(aBlock);

  v206 = v187;
  v207 = swift_bridgeObjectRetain(aBlock);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v207);
  v209 = *(_QWORD *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x10);
  v208 = *(_QWORD *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v209 >= v208 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v208 > 1, v209 + 1, 1);
  v210 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v209, v206);
  specialized Array._endMutation()(v210);
  swift_bridgeObjectRelease(aBlock);

  v211 = v249;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v211);
  v213 = *(_QWORD *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x10);
  v212 = *(_QWORD *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v213 >= v212 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v212 > 1, v213 + 1, 1);
  v214 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v213, v211);
  specialized Array._endMutation()(v214);
  v215 = aBlock;
  sub_100028320(aBlock);
  v217 = v216;
  swift_bridgeObjectRelease(v215);
  sub_100006C5C(0, (unint64_t *)&qword_1005D39F8, UNNotificationCategory_ptr);
  sub_10005D280();
  v218 = Set._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v188, "setNotificationCategories:", v218, swift_bridgeObjectRelease(v217).n128_f64[0]);

  objc_msgSend(v188, "setDelegate:", v240);
  v219 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  objc_msgSend(v219, "registerForRemoteNotifications");

  v220 = swift_allocObject(&unk_1005426E8, 32, 7);
  *(_QWORD *)(v220 + 16) = v257;
  *(_QWORD *)(v220 + 24) = v240;
  v263 = sub_10005F6E0;
  v264 = v220;
  aBlock = (unint64_t)_NSConcreteStackBlock;
  v260 = 1107296256;
  v261 = sub_100008B40;
  v262 = &unk_100542700;
  v221 = _Block_copy(&aBlock);
  v222 = v264;
  v223 = v257;
  v224 = v240;
  objc_msgSend(v188, "getNotificationSettingsWithCompletionHandler:", v221, swift_release(v222).n128_f64[0]);
  _Block_release(v221);

}

void sub_100034408()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  Class isa;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  Class v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  Class v54;
  uint64_t v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  double v64;
  double v65;
  id v66;
  uint64_t v67;
  Class v68;
  uint64_t v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  uint64_t v85;
  Class v86;
  uint64_t v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  uint64_t v100;
  Class v101;
  uint64_t v102;
  id v103;
  id v104;
  id v105;
  id v106;
  id v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  uint64_t v115;
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  Class v123;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy16FMMapOptionsView_platterContainer];
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy16FMMapOptionsView_firstPlatter];
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMy16FMMapOptionsView_secondPlatter];
  objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v117 = *(id *)&v0[OBJC_IVAR____TtC6FindMy16FMMapOptionsView_firstPlatterSeparatorView];
  objc_msgSend(v117, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v116 = *(id *)&v0[OBJC_IVAR____TtC6FindMy16FMMapOptionsView_mapSettingsButton];
  objc_msgSend(v116, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v118 = *(id *)&v0[OBJC_IVAR____TtC6FindMy16FMMapOptionsView_userLocationButton];
  objc_msgSend(v118, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v119 = *(id *)&v0[OBJC_IVAR____TtC6FindMy16FMMapOptionsView_perspectiveButtonContainer];
  objc_msgSend(v119, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v121 = *(id *)&v0[OBJC_IVAR____TtC6FindMy16FMMapOptionsView_perspective2dButton];
  objc_msgSend(v121, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v122 = *(id *)&v0[OBJC_IVAR____TtC6FindMy16FMMapOptionsView_perspective3dButton];
  objc_msgSend(v122, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  sub_100035310();
  v120 = v4;
  sub_100035310();
  v5 = (void *)objc_opt_self(NSLayoutConstraint);
  v6 = sub_100053F2C(&qword_1005D2F10);
  v7 = swift_allocObject(v6, 64, 7);
  *(_OWORD *)(v7 + 16) = xmmword_100481720;
  v8 = objc_msgSend(v2, "topAnchor");
  v9 = objc_msgSend(v1, "topAnchor");
  v10 = objc_msgSend(v8, "constraintEqualToAnchor:", v9);

  *(_QWORD *)(v7 + 32) = v10;
  v11 = objc_msgSend(v2, "bottomAnchor");
  v12 = objc_msgSend(v1, "bottomAnchor");
  v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

  *(_QWORD *)(v7 + 40) = v13;
  v14 = objc_msgSend(v2, "leadingAnchor");
  v15 = objc_msgSend(v1, "leadingAnchor");
  v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

  *(_QWORD *)(v7 + 48) = v16;
  v17 = objc_msgSend(v2, "trailingAnchor");
  v18 = objc_msgSend(v1, "trailingAnchor");
  v19 = objc_msgSend(v17, "constraintEqualToAnchor:", v18);

  *(_QWORD *)(v7 + 56) = v19;
  specialized Array._endMutation()(v20);
  v21 = v7;
  sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v23 = v5;
  objc_msgSend(v5, "activateConstraints:", isa, swift_bridgeObjectRelease(v21).n128_f64[0]);

  v24 = swift_allocObject(v6, 72, 7);
  *(_OWORD *)(v24 + 16) = xmmword_1004820D0;
  v25 = objc_msgSend(v3, "heightAnchor");
  if (qword_1005D1D88 != -1)
    swift_once(&qword_1005D1D88, sub_10005E5B4);
  v26 = objc_retainAutoreleasedReturnValue(objc_msgSend(v25, "constraintEqualToConstant:", *((double *)&xmmword_1005F5540
                                                                                           + 1)));

  *(_QWORD *)(v24 + 32) = v26;
  v27 = objc_msgSend(v3, "widthAnchor");
  v28 = objc_msgSend(v27, "constraintEqualToConstant:", *(double *)&xmmword_1005F5540);

  *(_QWORD *)(v24 + 40) = v28;
  v29 = objc_msgSend(v120, "widthAnchor");
  v30 = objc_msgSend(v29, "constraintEqualToConstant:", *(double *)&xmmword_1005F5540);

  *(_QWORD *)(v24 + 48) = v30;
  v31 = objc_msgSend(v121, "heightAnchor");
  v32 = objc_retainAutoreleasedReturnValue(objc_msgSend(v31, "constraintEqualToConstant:", *((double *)&xmmword_1005F5540
                                                                                           + 1) * 0.5));

  *(_QWORD *)(v24 + 56) = v32;
  v33 = objc_msgSend(v122, "heightAnchor");
  v34 = objc_retainAutoreleasedReturnValue(objc_msgSend(v33, "constraintEqualToConstant:", *((double *)&xmmword_1005F5540
                                                                                           + 1) * 0.5));

  *(_QWORD *)(v24 + 64) = v34;
  specialized Array._endMutation()(v35);
  v36 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v5, "activateConstraints:", v36, swift_bridgeObjectRelease(v24).n128_f64[0]);

  v37 = swift_allocObject(v6, 72, 7);
  *(_OWORD *)(v37 + 16) = xmmword_1004820D0;
  v38 = objc_msgSend(v116, "topAnchor");
  v39 = objc_msgSend(v3, "topAnchor");
  v40 = objc_msgSend(v38, "constraintEqualToAnchor:", v39);

  *(_QWORD *)(v37 + 32) = v40;
  v41 = objc_msgSend(v116, "bottomAnchor");
  v42 = objc_msgSend(v117, "topAnchor");
  v43 = objc_msgSend(v41, "constraintEqualToAnchor:", v42);

  *(_QWORD *)(v37 + 40) = v43;
  v44 = objc_msgSend(v116, "centerXAnchor");
  v45 = objc_msgSend(v3, "centerXAnchor");
  v46 = objc_msgSend(v44, "constraintEqualToAnchor:", v45);

  *(_QWORD *)(v37 + 48) = v46;
  v47 = objc_msgSend(v116, "widthAnchor");
  v48 = objc_msgSend(v3, "widthAnchor");
  v49 = objc_msgSend(v47, "constraintEqualToAnchor:", v48);

  *(_QWORD *)(v37 + 56) = v49;
  v50 = objc_msgSend(v116, "heightAnchor");
  v51 = objc_msgSend(v3, "widthAnchor");
  v52 = objc_msgSend(v50, "constraintEqualToAnchor:", v51);

  *(_QWORD *)(v37 + 64) = v52;
  specialized Array._endMutation()(v53);
  v54 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v23, "activateConstraints:", v54, swift_bridgeObjectRelease(v37).n128_f64[0]);

  v55 = swift_allocObject(v6, 56, 7);
  *(_OWORD *)(v55 + 16) = xmmword_1004820C0;
  v56 = objc_msgSend(v117, "leadingAnchor");
  v57 = objc_msgSend(v3, "leadingAnchor");
  v58 = objc_msgSend(v56, "constraintEqualToAnchor:", v57);

  *(_QWORD *)(v55 + 32) = v58;
  v59 = objc_msgSend(v117, "trailingAnchor");
  v60 = objc_msgSend(v3, "trailingAnchor");
  v61 = objc_msgSend(v59, "constraintEqualToAnchor:", v60);

  *(_QWORD *)(v55 + 40) = v61;
  v62 = objc_msgSend(v117, "heightAnchor");
  v63 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v63, "scale");
  v65 = v64;

  v66 = objc_msgSend(v62, "constraintEqualToConstant:", 1.0 / v65);
  *(_QWORD *)(v55 + 48) = v66;
  specialized Array._endMutation()(v67);
  v68 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v23, "activateConstraints:", v68, swift_bridgeObjectRelease(v55).n128_f64[0]);

  v69 = swift_allocObject(v6, 72, 7);
  *(_OWORD *)(v69 + 16) = xmmword_1004820D0;
  v70 = objc_msgSend(v118, "topAnchor");
  v71 = objc_msgSend(v117, "bottomAnchor");
  v72 = objc_msgSend(v70, "constraintEqualToAnchor:", v71);

  *(_QWORD *)(v69 + 32) = v72;
  v73 = objc_msgSend(v118, "bottomAnchor");
  v74 = objc_msgSend(v3, "bottomAnchor");
  v75 = objc_msgSend(v73, "constraintEqualToAnchor:", v74);

  *(_QWORD *)(v69 + 40) = v75;
  v76 = objc_msgSend(v118, "centerXAnchor");
  v77 = objc_msgSend(v3, "centerXAnchor");
  v78 = objc_msgSend(v76, "constraintEqualToAnchor:", v77);

  *(_QWORD *)(v69 + 48) = v78;
  v79 = objc_msgSend(v118, "widthAnchor");
  v80 = objc_msgSend(v3, "widthAnchor");
  v81 = objc_msgSend(v79, "constraintEqualToAnchor:", v80);

  *(_QWORD *)(v69 + 56) = v81;
  v82 = objc_msgSend(v118, "heightAnchor");
  v83 = objc_msgSend(v3, "widthAnchor");
  v84 = objc_msgSend(v82, "constraintEqualToAnchor:", v83);

  *(_QWORD *)(v69 + 64) = v84;
  specialized Array._endMutation()(v85);
  v86 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v23, "activateConstraints:", v86, swift_bridgeObjectRelease(v69).n128_f64[0]);

  v87 = swift_allocObject(v6, 64, 7);
  *(_OWORD *)(v87 + 16) = xmmword_100481720;
  v88 = objc_msgSend(v119, "topAnchor");
  v89 = objc_msgSend(v120, "topAnchor");
  v90 = objc_msgSend(v88, "constraintEqualToAnchor:", v89);

  *(_QWORD *)(v87 + 32) = v90;
  v91 = objc_msgSend(v119, "bottomAnchor");
  v92 = objc_msgSend(v120, "bottomAnchor");
  v93 = objc_msgSend(v91, "constraintEqualToAnchor:", v92);

  *(_QWORD *)(v87 + 40) = v93;
  v94 = objc_msgSend(v119, "widthAnchor");
  v95 = objc_msgSend(v120, "widthAnchor");
  v96 = objc_msgSend(v94, "constraintEqualToAnchor:", v95);

  *(_QWORD *)(v87 + 48) = v96;
  v97 = objc_msgSend(v119, "heightAnchor");
  v98 = objc_msgSend(v120, "widthAnchor");
  v99 = objc_msgSend(v97, "constraintEqualToAnchor:", v98);

  *(_QWORD *)(v87 + 56) = v99;
  specialized Array._endMutation()(v100);
  v101 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v23, "activateConstraints:", v101, swift_bridgeObjectRelease(v87).n128_f64[0]);

  v102 = swift_allocObject(v6, 64, 7);
  *(_OWORD *)(v102 + 16) = xmmword_100481720;
  v103 = objc_msgSend(v121, "heightAnchor");
  v104 = objc_msgSend(v119, "widthAnchor");
  v105 = objc_msgSend(v103, "constraintEqualToAnchor:", v104);

  *(_QWORD *)(v102 + 32) = v105;
  v106 = objc_msgSend(v121, "widthAnchor");
  v107 = objc_msgSend(v119, "widthAnchor");
  v108 = objc_msgSend(v106, "constraintEqualToAnchor:", v107);

  *(_QWORD *)(v102 + 40) = v108;
  v109 = objc_msgSend(v122, "heightAnchor");
  v110 = objc_msgSend(v119, "widthAnchor");
  v111 = objc_msgSend(v109, "constraintEqualToAnchor:", v110);

  *(_QWORD *)(v102 + 48) = v111;
  v112 = objc_msgSend(v122, "widthAnchor");
  v113 = objc_msgSend(v119, "widthAnchor");
  v114 = objc_msgSend(v112, "constraintEqualToAnchor:", v113);

  *(_QWORD *)(v102 + 56) = v114;
  specialized Array._endMutation()(v115);
  v123 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v23, "activateConstraints:", v123, swift_bridgeObjectRelease(v102).n128_f64[0]);

}

void sub_100035310()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  Class isa;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  id v34;
  Class v35;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtCC6FindMy16FMMapOptionsViewP33_4FBFA1E850653445CBAB4C80170F66AB11PlatterView_shadowView];
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = *(void **)&v0[OBJC_IVAR____TtCC6FindMy16FMMapOptionsViewP33_4FBFA1E850653445CBAB4C80170F66AB11PlatterView_blurredBackground];
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v34 = (id)objc_opt_self(NSLayoutConstraint);
  v4 = sub_100053F2C(&qword_1005D2F10);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100481720;
  v6 = objc_msgSend(v2, "topAnchor");
  v7 = objc_msgSend(v1, "topAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

  *(_QWORD *)(v5 + 32) = v8;
  v9 = objc_msgSend(v2, "bottomAnchor");
  v10 = objc_msgSend(v1, "bottomAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

  *(_QWORD *)(v5 + 40) = v11;
  v12 = objc_msgSend(v2, "leadingAnchor");
  v13 = objc_msgSend(v1, "leadingAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(v5 + 48) = v14;
  v15 = objc_msgSend(v2, "trailingAnchor");
  v16 = objc_msgSend(v1, "trailingAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v5 + 56) = v17;
  specialized Array._endMutation()(v18);
  sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v34, "activateConstraints:", isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

  v20 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v20 + 16) = xmmword_100481720;
  v21 = objc_msgSend(v3, "topAnchor");
  v22 = objc_msgSend(v1, "topAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

  *(_QWORD *)(v20 + 32) = v23;
  v24 = objc_msgSend(v3, "bottomAnchor");
  v25 = objc_msgSend(v1, "bottomAnchor");
  v26 = objc_msgSend(v24, "constraintEqualToAnchor:", v25);

  *(_QWORD *)(v20 + 40) = v26;
  v27 = objc_msgSend(v3, "leadingAnchor");
  v28 = objc_msgSend(v1, "leadingAnchor");
  v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

  *(_QWORD *)(v20 + 48) = v29;
  v30 = objc_msgSend(v3, "trailingAnchor");
  v31 = objc_msgSend(v1, "trailingAnchor");
  v32 = objc_msgSend(v30, "constraintEqualToAnchor:", v31);

  *(_QWORD *)(v20 + 56) = v32;
  specialized Array._endMutation()(v33);
  v35 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v34, "activateConstraints:", v35, swift_bridgeObjectRelease(v20).n128_f64[0]);

}

void sub_100035778(void *a1)
{
  id v1;

  v1 = a1;
  sub_1000357AC();

}

void sub_1000357AC()
{
  _QWORD *v0;
  __int128 v1;
  objc_class *v2;
  _OWORD v3[2];
  objc_super v4;

  v1 = *(_OWORD *)((swift_isaMask & *v0) + 0x70);
  v3[0] = *(_OWORD *)((swift_isaMask & *v0) + 0x60);
  v3[1] = v1;
  v2 = (objc_class *)type metadata accessor for FMListViewController(0, (uint64_t)v3);
  v4.receiver = v0;
  v4.super_class = v2;
  objc_msgSendSuper2(&v4, "viewDidLayoutSubviews");
  sub_100035B8C();
}

uint64_t type metadata accessor for FMListViewController(uint64_t a1, uint64_t a2)
{
  return swift_getGenericMetadata(a1, a2, &nominal type descriptor for FMListViewController);
}

id sub_100035824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint8_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t Strong;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[3];

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v8 = type metadata accessor for Logger(0);
  sub_100056D88(v8, (uint64_t)qword_1005F5748);
  v9 = swift_bridgeObjectRetain_n(a1, 2);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v28 = a3;
    v12 = (uint8_t *)swift_slowAlloc(12, -1);
    v13 = swift_slowAlloc(32, -1);
    v30[0] = v13;
    *(_DWORD *)v12 = 136315138;
    v14 = type metadata accessor for FMPeopleCellViewModel(0);
    v15 = Array.debugDescription.getter(a1, v14);
    v17 = v16;
    v29 = sub_100056DA0(v15, v16, v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, v30);
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v17);
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "FMPeopleListDataSource: model update with %s", v12, 0xCu);
    swift_arrayDestroy(v13, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v13, -1, -1);
    v18 = v12;
    a3 = v28;
    swift_slowDealloc(v18, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a1, 2);
  }
  v19 = (uint64_t *)(a2 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_cellsViewModel);
  swift_beginAccess(a2 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_cellsViewModel, v30, 1, 0);
  v20 = *v19;
  *v19 = a1;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRelease(v20);
  if (a3)
  {
    v21 = *(_QWORD *)(a2 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_fenceCellModels);
    *(_QWORD *)(a2 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_fenceCellModels) = a4;
    swift_bridgeObjectRetain(a4);
    swift_bridgeObjectRelease(v21);
  }
  sub_100035CEC();
  v22 = a2 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_delegate);
  if (Strong)
  {
    v24 = Strong;
    v25 = *(_QWORD *)(v22 + 8);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v25 + 8))(a2, &off_1005681C0, ObjectType, v25);
    swift_unknownObjectRelease(v24);
  }
  return sub_100035AA4();
}

id sub_100035AA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  _BYTE v8[24];

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_cellsViewModel;
  swift_beginAccess(v2, v8, 0, 0);
  if (*(_QWORD *)(*(_QWORD *)v2 + 16))
  {
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_tableView), "setTableFooterView:", *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_tableViewFooter));
    sub_100035B8C();
  }
  else
  {
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_tableView), "setTableFooterView:", 0);
  }
  v3 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_tableViewFooter);
  v4 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator) + 48);
  v5 = swift_retain(v4);
  v6 = dispatch thunk of FMFManager.friendsOperationsRestricted.getter(v5);
  return objc_msgSend(v3, "setUserInteractionEnabled:", (v6 & 1) == 0, swift_release(v4).n128_f64[0]);
}

void sub_100035B8C()
{
  void *v0;
  id v1;
  CGFloat Width;
  double v3;
  double v4;
  id v5;
  CGRect v6;
  CGRect v7;
  CGRect v8;

  v1 = objc_msgSend(v0, "tableFooterView");
  if (v1)
  {
    v5 = v1;
    objc_msgSend(v0, "frame");
    v8.origin.x = 0.0;
    v8.origin.y = 0.0;
    v8.size.width = 0.0;
    v8.size.height = 0.0;
    if (!CGRectEqualToRect(v6, v8))
    {
      objc_msgSend(v0, "setTableFooterView:", 0);
      objc_msgSend(v5, "setFrame:", 0.0, 0.0, 0.0, 0.0);
      objc_msgSend(v5, "setNeedsLayout");
      objc_msgSend(v5, "layoutIfNeeded");
      objc_msgSend(v0, "bounds");
      Width = CGRectGetWidth(v7);
      LODWORD(v3) = 1148846080;
      LODWORD(v4) = 1112014848;
      objc_msgSend(v5, "systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:", Width, UILayoutFittingCompressedSize.height, v3, v4);
      objc_msgSend(v5, "frame");
      objc_msgSend(v5, "setFrame:");
      objc_msgSend(v0, "setTableFooterView:", v5);
    }

  }
}

uint64_t sub_100035CEC()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  unsigned int v11;
  uint64_t result;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend((id)objc_opt_self(NSThread), "currentThread");
  v11 = objc_msgSend(v10, "isMainThread");

  if (v11)
  {
    result = (uint64_t)objc_msgSend(v1, "isEditing");
    if ((result & 1) == 0)
      return (uint64_t)objc_msgSend(v1, "reloadData");
  }
  else
  {
    sub_1000555A8();
    v13 = (void *)static OS_dispatch_queue.main.getter();
    v14 = swift_allocObject(&unk_100543498, 24, 7);
    *(_QWORD *)(v14 + 16) = v1;
    aBlock[4] = sub_1000B0D18;
    v23 = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100037DF8;
    aBlock[3] = &unk_1005434B0;
    v15 = _Block_copy(aBlock);
    v16 = v23;
    v17 = v1;
    swift_release(v16);
    static DispatchQoS.unspecified.getter(v18);
    aBlock[0] = _swiftEmptyArrayStorage;
    v19 = sub_100056580();
    v20 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
    v21 = sub_1000555E4();
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v20, v21, v2, v19);
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v15);
    _Block_release(v15);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return result;
}

id sub_100035F34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t ObjectType;

  v3 = v2;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100056D88(v6, (uint64_t)qword_1005F5748);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "FMListViewController: Data Source did update.", v10, 2u);
    swift_slowDealloc(v10, -1, -1);
  }

  ObjectType = swift_getObjectType(a1);
  *(_BYTE *)(v3 + qword_1005DD878) = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 56))(ObjectType, a2) & 1;
  sub_1000443F0(0xD00000000000001CLL, 0x80000001004B9590);
  return sub_1000565C8();
}

id sub_10003605C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_10003607C(*(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), a1);
}

id sub_10003607C@<X0>(uint64_t a1@<X0>, char a2@<W1>, _QWORD *a3@<X8>)
{
  int v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  void *v9;
  id result;
  id v11;
  void *v12;
  id v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;
  double v19;
  double v20;
  id v21;
  id v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  _BYTE v25[24];
  _BYTE v26[24];
  uint64_t v27;

  v4 = a2 & 1;
  v5 = (_QWORD *)(a1 + qword_1005D3908);
  swift_beginAccess(a1 + qword_1005D3908, v26, 0, 0);
  v6 = *v5;
  if (*(_QWORD *)(*v5 + 16) && (v7 = sub_100036280(v4), (v8 & 1) != 0))
  {
    v9 = *(void **)(*(_QWORD *)(v6 + 56) + 8 * v7);
    *a3 = v9;
    return v9;
  }
  else
  {
    if (qword_1005D1BA0 != -1)
      swift_once(&qword_1005D1BA0, sub_100008B90);
    v11 = objc_msgSend((id)qword_1005D38E0, "placeholderImageProvider");
    v12 = (void *)objc_opt_self(UIScreen);
    v13 = objc_msgSend(v12, "mainScreen");
    objc_msgSend(v13, "scale");
    v15 = v14;

    v16 = 66.0;
    if (!v4)
      v16 = 38.0;
    v17 = v16 * v15;
    v18 = objc_msgSend(v12, "mainScreen");
    objc_msgSend(v18, "scale");
    v20 = v19;

    v21 = objc_msgSend(v11, "imageForSize:scale:", v17, v17, v20);
    swift_unknownObjectRelease(v11);
    swift_beginAccess(v5, v25, 33, 0);
    v22 = v21;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v5);
    v27 = *v5;
    *v5 = 0x8000000000000000;
    sub_100008040((uint64_t)v22, v4, isUniquelyReferenced_nonNull_native);
    v24 = *v5;
    *v5 = v27;
    swift_bridgeObjectRelease(v24);
    result = (id)swift_endAccess(v25);
    *a3 = v22;
  }
  return result;
}

unint64_t sub_100036280(char a1)
{
  uint64_t v1;
  uint64_t v2;
  Swift::UInt64 v4;
  Swift::Int v5;
  _QWORD v7[9];

  v2 = v1;
  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  if ((a1 & 1) != 0)
    v4 = 0x4050800000000000;
  else
    v4 = 0x4043000000000000;
  Hasher._combine(_:)(v4);
  v5 = Hasher._finalize()();
  return sub_1000362E8(a1 & 1, v5);
}

unint64_t sub_1000362E8(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  double v7;

  v4 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v6 = ~v4;
    do
    {
      if ((a1 & 1) != 0)
      {
        if ((*(_BYTE *)(*(_QWORD *)(v2 + 48) + result) & 1) != 0)
          return result;
      }
      else
      {
        v7 = 66.0;
        if (!*(_BYTE *)(*(_QWORD *)(v2 + 48) + result))
          v7 = 38.0;
        if (v7 == 38.0)
          return result;
      }
      result = (result + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

void sub_10003637C(void *a1)
{
  id v1;

  v1 = a1;
  sub_1000363B0();

}

id sub_1000363B0()
{
  _QWORD *v0;
  __int128 v1;
  objc_class *v2;
  void *v3;
  _OWORD v5[2];
  objc_super v6;

  v1 = *(_OWORD *)((swift_isaMask & *v0) + 0x70);
  v5[0] = *(_OWORD *)((swift_isaMask & *v0) + 0x60);
  v5[1] = v1;
  v2 = (objc_class *)type metadata accessor for FMListViewController(0, (uint64_t)v5);
  v6.receiver = v0;
  v6.super_class = v2;
  objc_msgSendSuper2(&v6, "viewDidLoad");
  sub_1000376DC();
  sub_100036468();
  sub_1000565C8();
  v3 = *(void **)((char *)v0 + qword_1005DD850);
  objc_msgSend(v3, "setDataSource:", *(_QWORD *)((char *)v0 + qword_1005DD838));
  objc_msgSend(v3, "setDelegate:", v0);
  return objc_msgSend(v3, "setSectionHeaderTopPadding:", 0.0);
}

void sub_100036468()
{
  char *v0;
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  Class isa;
  uint64_t v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  uint64_t v40;
  Class v41;
  uint64_t v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  Class v53;
  id v54;
  id v55;
  id v56;
  uint64_t v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  id v62;
  id v63;
  id v64;
  void *v65;
  id v66;
  id v67;
  id v68;
  id v69;
  double v70;
  double v71;
  id v72;
  uint64_t v73;
  Class v74;
  uint64_t v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  void *v81;
  id v82;
  id v83;
  id v84;
  id v85;
  void *v86;
  id v87;
  id v88;
  id v89;
  id v90;
  void *v91;
  id v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  double v97;
  id v98;
  uint64_t v99;
  Class v100;
  uint64_t v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  void *v107;
  id v108;
  id v109;
  id v110;
  id v111;
  void *v112;
  id v113;
  id v114;
  id v115;
  id v116;
  void *v117;
  id v118;
  id v119;
  id v120;
  uint64_t v121;
  uint64_t v122;
  Class v123;
  id v124;
  id v125;
  id v126;
  double v127;
  uint64_t v128;
  id v129;
  id v130;
  id v131;
  id v132;
  id v133;
  void *v134;
  id v135;
  id v136;
  uint64_t v137;
  uint64_t v138;
  Class v139;
  uint64_t v140;
  id v141;
  id v142;
  id v143;
  id v144;
  id v145;
  void *v146;
  id v147;
  id v148;
  id v149;
  id v150;
  void *v151;
  id v152;
  id v153;
  id v154;
  id v155;
  void *v156;
  id v157;
  id v158;
  id v159;
  uint64_t v160;
  uint64_t v161;
  Class v162;
  id v163;
  id v164;
  id v165;
  id v166;
  id v167;
  id v168;
  id v169;
  id v170;
  id v171;
  int v172;
  int v173;
  uint64_t v174;

  v1 = v0;
  if (qword_1005D1DC8 != -1)
    swift_once(&qword_1005D1DC8, sub_10005F330);
  v2 = *(double *)&qword_1005F5638;
  v3 = unk_1005F5640;
  v4 = *(double *)&qword_1005F5658;
  v5 = unk_1005F5660;
  v6 = *(double *)&qword_1005F5668;
  v166 = *(id *)&v0[qword_1005DD840];
  objc_msgSend(v166, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v167 = *(id *)&v0[qword_1005DD850];
  objc_msgSend(v167, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v169 = *(id *)&v0[qword_1005DD868];
  objc_msgSend(v169, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v7 = *(void **)&v0[qword_1005DD858];
  objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v8 = *(void **)&v0[qword_1005DD880];
  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v165 = *(id *)&v0[qword_1005DD860];
  objc_msgSend(v165, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v9 = *(void **)&v0[qword_1005DD848];
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v10 = sub_100053F2C(&qword_1005D2F10);
  v11 = swift_allocObject(v10, 48, 7);
  *(_OWORD *)(v11 + 16) = xmmword_1004820B0;
  v12 = objc_msgSend(v7, "topAnchor");
  v13 = objc_msgSend(v1, "view");
  if (!v13)
  {
    __break(1u);
    goto LABEL_22;
  }
  v14 = v13;
  v164 = v9;
  v15 = objc_msgSend(v13, "topAnchor");

  v16 = objc_msgSend(v12, "constraintEqualToAnchor:constant:", v15, v3);
  *(_QWORD *)(v11 + 32) = v16;
  v17 = objc_msgSend(v7, "leadingAnchor");
  v170 = v1;
  v18 = objc_msgSend(v1, "view");
  if (!v18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v19 = v18;
  v20 = (void *)objc_opt_self(NSLayoutConstraint);
  v21 = objc_msgSend(v19, "layoutMarginsGuide");

  v22 = objc_msgSend(v21, "leadingAnchor");
  v23 = objc_msgSend(v17, "constraintEqualToAnchor:constant:", v22, 0.0);

  *(_QWORD *)(v11 + 40) = v23;
  v174 = v11;
  specialized Array._endMutation()(v24);
  sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v171 = v20;
  objc_msgSend(v20, "activateConstraints:", isa, swift_bridgeObjectRelease(v11).n128_f64[0]);

  v26 = swift_allocObject(v10, 64, 7);
  *(_OWORD *)(v26 + 16) = xmmword_100481720;
  v27 = objc_msgSend(v8, "centerYAnchor");
  v28 = objc_msgSend(v7, "centerYAnchor");
  v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

  *(_QWORD *)(v26 + 32) = v29;
  v30 = objc_msgSend(v8, "widthAnchor");
  v31 = objc_msgSend(v30, "constraintEqualToConstant:", v5);

  *(_QWORD *)(v26 + 40) = v31;
  v32 = objc_msgSend(v8, "heightAnchor");
  v33 = objc_msgSend(v32, "constraintEqualToConstant:", v6);

  *(_QWORD *)(v26 + 48) = v33;
  v34 = objc_msgSend(v8, "trailingAnchor");
  v35 = objc_msgSend(v170, "view");
  if (!v35)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v36 = v35;
  v37 = objc_msgSend(v35, "layoutMarginsGuide");

  v38 = objc_msgSend(v37, "trailingAnchor");
  v39 = objc_msgSend(v34, "constraintEqualToAnchor:constant:", v38, v4);

  *(_QWORD *)(v26 + 56) = v39;
  specialized Array._endMutation()(v40);
  v41 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v20, "activateConstraints:", v41, swift_bridgeObjectRelease(v26).n128_f64[0]);

  v42 = swift_allocObject(v10, 56, 7);
  *(_OWORD *)(v42 + 16) = xmmword_1004820C0;
  v43 = objc_msgSend(v8, "leadingAnchor");
  v44 = objc_msgSend(v7, "trailingAnchor");
  v45 = objc_msgSend(v43, "constraintEqualToAnchor:constant:", v44, v2);

  *(_QWORD *)(v42 + 32) = v45;
  v46 = objc_msgSend(v8, "centerYAnchor");
  v47 = objc_msgSend(v7, "centerYAnchor");
  v48 = objc_msgSend(v46, "constraintEqualToAnchor:", v47);

  *(_QWORD *)(v42 + 40) = v48;
  v49 = objc_msgSend(v8, "trailingAnchor");
  v50 = objc_msgSend(v8, "leadingAnchor");
  v51 = objc_msgSend(v49, "constraintEqualToAnchor:constant:", v50, 0.0);

  *(_QWORD *)(v42 + 48) = v51;
  v174 = v42;
  specialized Array._endMutation()(v52);
  v53 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v20, "activateConstraints:", v53, swift_bridgeObjectRelease(v42).n128_f64[0]);

  v54 = objc_msgSend(v169, "topAnchor");
  v55 = objc_msgSend(v7, "bottomAnchor");
  v56 = objc_msgSend(v54, "constraintEqualToAnchor:constant:", v55, v2);

  v57 = swift_allocObject(v10, 64, 7);
  *(_OWORD *)(v57 + 16) = xmmword_100481720;
  *(_QWORD *)(v57 + 32) = v56;
  v163 = v56;
  v58 = objc_msgSend(v169, "leadingAnchor");
  v59 = objc_msgSend(v170, "view");
  if (!v59)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v60 = v59;
  v61 = objc_msgSend(v59, "leadingAnchor");

  v62 = objc_msgSend(v58, "constraintEqualToAnchor:", v61);
  *(_QWORD *)(v57 + 40) = v62;
  v63 = objc_msgSend(v169, "trailingAnchor");
  v64 = objc_msgSend(v170, "view");
  if (!v64)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v65 = v64;
  v66 = objc_msgSend(v64, "trailingAnchor");

  v67 = objc_msgSend(v63, "constraintEqualToAnchor:", v66);
  *(_QWORD *)(v57 + 48) = v67;
  v68 = objc_msgSend(v169, "heightAnchor");
  v69 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v69, "scale");
  v71 = v70;

  v72 = objc_msgSend(v68, "constraintEqualToConstant:", 1.0 / v71);
  *(_QWORD *)(v57 + 56) = v72;
  v174 = v57;
  specialized Array._endMutation()(v73);
  v74 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v20, "activateConstraints:", v74, swift_bridgeObjectRelease(v57).n128_f64[0]);

  v75 = swift_allocObject(v10, 64, 7);
  *(_OWORD *)(v75 + 16) = xmmword_100481720;
  v76 = objc_msgSend(v167, "topAnchor");
  v77 = objc_msgSend(v169, "bottomAnchor");
  v78 = objc_msgSend(v76, "constraintEqualToAnchor:", v77);

  *(_QWORD *)(v75 + 32) = v78;
  v79 = objc_msgSend(v167, "leadingAnchor");
  v80 = objc_msgSend(v170, "view");
  if (!v80)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v81 = v80;
  v82 = objc_msgSend(v80, "leadingAnchor");

  v83 = objc_msgSend(v79, "constraintEqualToAnchor:", v82);
  *(_QWORD *)(v75 + 40) = v83;
  v84 = objc_msgSend(v167, "trailingAnchor");
  v85 = objc_msgSend(v170, "view");
  if (!v85)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v86 = v85;
  v87 = objc_msgSend(v85, "trailingAnchor");

  v88 = objc_msgSend(v84, "constraintEqualToAnchor:", v87);
  *(_QWORD *)(v75 + 48) = v88;
  v89 = objc_msgSend(v167, "bottomAnchor");
  v90 = objc_msgSend(v170, "view");
  if (!v90)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v91 = v90;
  v92 = objc_msgSend(v90, "bottomAnchor");

  v93 = objc_msgSend(v89, "constraintEqualToAnchor:", v92);
  type metadata accessor for UILayoutPriority(0);
  v95 = v94;
  v172 = 1065353216;
  v173 = 1148846080;
  v96 = sub_10004E0AC();
  static _UIKitNumericRawRepresentable.- infix(_:_:)(&v174, &v173, &v172, v95, v96);
  LODWORD(v97) = v174;
  v98 = objc_msgSend(v93, "setPriority:", v97);
  *(_QWORD *)(v75 + 56) = v93;
  v174 = v75;
  specialized Array._endMutation()(v98);
  v99 = v174;
  v100 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v20, "activateConstraints:", v100, swift_bridgeObjectRelease(v99).n128_f64[0]);

  v101 = swift_allocObject(v10, 64, 7);
  *(_OWORD *)(v101 + 16) = xmmword_100481720;
  v102 = objc_msgSend(v166, "topAnchor");
  v103 = objc_msgSend(v169, "bottomAnchor");
  v104 = objc_msgSend(v102, "constraintEqualToAnchor:", v103);

  *(_QWORD *)(v101 + 32) = v104;
  v105 = objc_msgSend(v166, "leadingAnchor");
  v106 = objc_msgSend(v170, "view");
  if (!v106)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v107 = v106;
  v108 = objc_msgSend(v106, "leadingAnchor");

  v109 = objc_msgSend(v105, "constraintEqualToAnchor:", v108);
  *(_QWORD *)(v101 + 40) = v109;
  v110 = objc_msgSend(v166, "trailingAnchor");
  v111 = objc_msgSend(v170, "view");
  if (!v111)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v112 = v111;
  v113 = objc_msgSend(v111, "trailingAnchor");

  v114 = objc_msgSend(v110, "constraintEqualToAnchor:", v113);
  *(_QWORD *)(v101 + 48) = v114;
  v115 = objc_msgSend(v166, "bottomAnchor");
  v116 = objc_msgSend(v170, "view");
  if (!v116)
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v117 = v116;
  v118 = objc_msgSend(v116, "safeAreaLayoutGuide");

  v119 = objc_msgSend(v118, "bottomAnchor");
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v120 = objc_msgSend(v115, "constraintGreaterThanOrEqualToAnchor:constant:", v119, -*((double *)&xmmword_1005F5940 + 1));

  *(_QWORD *)(v101 + 56) = v120;
  v174 = v101;
  specialized Array._endMutation()(v121);
  v122 = v174;
  v123 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v20, "activateConstraints:", v123, swift_bridgeObjectRelease(v122).n128_f64[0]);

  v124 = objc_msgSend(v165, "centerYAnchor");
  v125 = objc_msgSend(v167, "centerYAnchor");
  v126 = objc_msgSend(v124, "constraintEqualToAnchor:constant:", v125, -*((double *)&xmmword_1005F5940 + 1));

  LODWORD(v127) = 1144750080;
  objc_msgSend(v126, "setPriority:", v127);
  v128 = swift_allocObject(v10, 56, 7);
  *(_OWORD *)(v128 + 16) = xmmword_1004820C0;
  v129 = objc_msgSend(v165, "topAnchor");
  v130 = objc_msgSend(v167, "topAnchor");
  v131 = objc_msgSend(v129, "constraintGreaterThanOrEqualToAnchor:", v130);

  *(_QWORD *)(v128 + 32) = v131;
  v132 = objc_msgSend(v165, "centerXAnchor");
  v133 = objc_msgSend(v170, "view");
  if (!v133)
    goto LABEL_32;
  v134 = v133;
  v135 = objc_msgSend(v133, "centerXAnchor");

  v136 = objc_msgSend(v132, "constraintEqualToAnchor:", v135);
  *(_QWORD *)(v128 + 40) = v136;
  *(_QWORD *)(v128 + 48) = v126;
  v174 = v128;
  specialized Array._endMutation()(v137);
  v138 = v174;
  v168 = v126;
  v139 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v20, "activateConstraints:", v139, swift_bridgeObjectRelease(v138).n128_f64[0]);

  v140 = swift_allocObject(v10, 64, 7);
  *(_OWORD *)(v140 + 16) = xmmword_100481720;
  v141 = objc_msgSend(v9, "topAnchor");
  v142 = objc_msgSend(v169, "bottomAnchor");
  v143 = objc_msgSend(v141, "constraintEqualToAnchor:", v142);

  *(_QWORD *)(v140 + 32) = v143;
  v144 = objc_msgSend(v164, "leadingAnchor");
  v145 = objc_msgSend(v170, "view");
  if (!v145)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v146 = v145;
  v147 = objc_msgSend(v145, "leadingAnchor");

  v148 = objc_msgSend(v144, "constraintEqualToAnchor:", v147);
  *(_QWORD *)(v140 + 40) = v148;
  v149 = objc_msgSend(v164, "trailingAnchor");
  v150 = objc_msgSend(v170, "view");
  if (!v150)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v151 = v150;
  v152 = objc_msgSend(v150, "trailingAnchor");

  v153 = objc_msgSend(v149, "constraintEqualToAnchor:", v152);
  *(_QWORD *)(v140 + 48) = v153;
  v154 = objc_msgSend(v164, "bottomAnchor");
  v155 = objc_msgSend(v170, "view");
  if (v155)
  {
    v156 = v155;
    v157 = objc_msgSend(v155, "safeAreaLayoutGuide");

    v158 = objc_msgSend(v157, "bottomAnchor");
    v159 = objc_msgSend(v154, "constraintGreaterThanOrEqualToAnchor:constant:", v158, -*((double *)&xmmword_1005F5940 + 1));

    *(_QWORD *)(v140 + 56) = v159;
    v174 = v140;
    specialized Array._endMutation()(v160);
    v161 = v174;
    v162 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v171, "activateConstraints:", v162, swift_bridgeObjectRelease(v161).n128_f64[0]);

    return;
  }
LABEL_35:
  __break(1u);
}

void sub_1000376DC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  double v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  NSString v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  double v21;
  NSString v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  NSString v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  id v40;
  void *v41;
  id v42;
  void *v43;
  void *v44;
  id v45;

  v1 = v0;
  v2 = swift_isaMask & *(_QWORD *)v0;
  v44 = *(void **)&v0[qword_1005DD840];
  objc_msgSend(v44, "setHidden:", 1);
  v3 = *(void **)&v0[qword_1005DD880];
  LODWORD(v4) = 1148846080;
  objc_msgSend(v3, "setContentHuggingPriority:forAxis:", 0, v4);
  v5 = (void *)objc_opt_self(UIFont);
  v6 = objc_msgSend(v5, "preferredFontForTextStyle:", UIFontTextStyleHeadline);
  v7 = objc_msgSend((id)objc_opt_self(_UIImageSymbolConfiguration), "configurationWithFont:", v6);

  v8 = v7;
  v9 = String._bridgeToObjectiveC()();
  v45 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v9, v8);

  objc_msgSend(v3, "setShowsMenuAsPrimaryAction:", 1);
  objc_msgSend(v3, "setPointerInteractionEnabled:", 1);
  objc_msgSend(v3, "setImage:forState:", v45, 0);
  v10 = objc_msgSend(v3, "imageView");
  if (v10)
  {
    v11 = v10;
    objc_msgSend(v10, "setContentMode:", 1);

  }
  v12 = *(void **)&v1[qword_1005DD858];
  v13 = objc_msgSend(v5, "preferredFontForTextStyle:", UIFontTextStyleTitle2);
  v14 = (void *)sub_10003CEE8(0x8000);

  v15 = (void *)sub_10003CEE8(2);
  objc_msgSend(v12, "setFont:", v15);

  objc_msgSend(v12, "setNumberOfLines:", 1);
  v16 = (void *)objc_opt_self(UIColor);
  v17 = objc_msgSend(v16, "labelColor");
  objc_msgSend(v12, "setTextColor:", v17);

  (*(void (**)(_QWORD))(*(_QWORD *)(v2 + 120) + 16))(*(_QWORD *)(v2 + 96));
  v19 = v18;
  v20 = String._bridgeToObjectiveC()();
  objc_msgSend(v12, "setText:", v20, swift_bridgeObjectRelease(v19).n128_f64[0]);

  objc_msgSend(v12, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v12, "setAccessibilityTraits:", UIAccessibilityTraitHeader);
  LODWORD(v21) = 1148846080;
  objc_msgSend(v12, "setContentCompressionResistancePriority:forAxis:", 1, v21);
  v22 = String._bridgeToObjectiveC()();
  objc_msgSend(v12, "setAccessibilityIdentifier:", v22);

  v23 = *(void **)&v1[qword_1005DD850];
  v24 = objc_msgSend(v16, "clearColor");
  objc_msgSend(v23, "setBackgroundColor:", v24);

  objc_msgSend(v23, "setRowHeight:", UITableViewAutomaticDimension);
  objc_msgSend(v23, "setEstimatedSectionHeaderHeight:", 0.0);
  objc_msgSend(v23, "setEstimatedSectionFooterHeight:", 0.0);
  objc_msgSend(v23, "setEstimatedRowHeight:", UITableViewAutomaticDimension);
  if (qword_1005D1DC8 != -1)
    swift_once(&qword_1005D1DC8, sub_10005F330);
  objc_msgSend(v23, "setContentInset:", 0.0, 0.0, *(double *)&qword_1005F5630, 0.0);
  v25 = *(void **)&v1[qword_1005DD868];
  v26 = objc_msgSend(v16, "separatorColor");
  objc_msgSend(v25, "setBackgroundColor:", v26);

  v27 = objc_msgSend(v1, "view");
  if (!v27)
  {
    __break(1u);
    goto LABEL_15;
  }
  v28 = v27;
  v29 = String._bridgeToObjectiveC()();
  objc_msgSend(v28, "setAccessibilityIdentifier:", v29);

  v30 = objc_msgSend(v1, "view");
  if (!v30)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v31 = v30;
  objc_msgSend(v30, "addSubview:", v23);

  v32 = objc_msgSend(v1, "view");
  if (!v32)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v33 = v32;
  objc_msgSend(v32, "addSubview:", v12);

  v34 = objc_msgSend(v1, "view");
  if (!v34)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v35 = v34;
  objc_msgSend(v34, "addSubview:", v25);

  v36 = objc_msgSend(v1, "view");
  if (!v36)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v37 = v36;
  objc_msgSend(v36, "addSubview:", v44);

  v38 = objc_msgSend(v1, "view");
  if (!v38)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v39 = v38;
  objc_msgSend(v38, "addSubview:", *(_QWORD *)&v1[qword_1005DD860]);

  v40 = objc_msgSend(v1, "view");
  if (!v40)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v41 = v40;
  objc_msgSend(v40, "addSubview:", *(_QWORD *)&v1[qword_1005DD848]);

  v42 = objc_msgSend(v1, "view");
  if (v42)
  {
    v43 = v42;
    objc_msgSend(v42, "addSubview:", v3);

    sub_1000565C8();
    return;
  }
LABEL_21:
  __break(1u);
}

uint64_t sub_100037D30()
{
  id v0;
  Swift::String v1;
  Swift::String v2;
  uint64_t countAndFlagsBits;
  Swift::String v5;

  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v5._object = (void *)0x80000001004B2E20;
  v1._countAndFlagsBits = 0x545F454C504F4550;
  v1._object = (void *)0xEA00000000004241;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  v5._countAndFlagsBits = 0xD00000000000001CLL;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v5)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_100037DF8(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  v3 = swift_retain(v2);
  v1(v3);
  return swift_release(v2);
}

void sub_100037E24()
{
  uint64_t v0;

  sub_100053F6C(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(unsigned __int8 *)(v0 + 64));
}

double sub_100037E38()
{
  uint64_t *v0;

  return sub_100037E44(v0[2], v0[3], v0[4]);
}

double sub_100037E44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  double result;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[24];

  v39 = a3;
  v37 = type metadata accessor for FMAnnotationIdentifier(0);
  __chkstk_darwin(v37);
  v36 = (uint64_t *)((char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_100053F2C((uint64_t *)&unk_1005D3350);
  __chkstk_darwin(v6);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FMFFriend(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = (_QWORD *)(a2 + 16);
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v14 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v15 = *(_QWORD *)(v10 + 72);
    v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v41 = v15;
    v34 = a1;
    swift_bridgeObjectRetain(a1);
    v35 = v10;
    do
    {
      v16 = v40(v12, v14, v9);
      FMFFriend.location.getter(v16);
      v17 = type metadata accessor for FMFLocation(0);
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v8, 1, v17) == 1)
      {
        sub_1000051EC((uint64_t)v8, (uint64_t *)&unk_1005D3350);
      }
      else
      {
        v19 = (void *)FMFLocation.location.getter();
        v20 = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v8, v17);
        if (v19)
        {
          v21 = FMFFriend.identifier.getter(v20);
          v22 = (uint64_t)v36;
          *v36 = v21;
          *(_QWORD *)(v22 + 8) = v23;
          swift_storeEnumTagMultiPayload(v22, v37, 0);
          v24 = *(_QWORD *)(v39 + 48);
          swift_bridgeObjectRetain(v24);
          v25 = sub_100408204((uint64_t)v12, v19, v24);
          swift_bridgeObjectRelease(v24);
          v26 = v38;
          swift_beginAccess(v38, v43, 33, 0);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v26);
          v42 = *v26;
          *v26 = 0x8000000000000000;
          sub_10017A884(v25, v22, isUniquelyReferenced_nonNull_native);
          v28 = *v26;
          *v26 = v42;
          swift_bridgeObjectRelease(v28);
          v29 = v22;
          v10 = v35;
          sub_10004FCB8(v29, type metadata accessor for FMAnnotationIdentifier);
          swift_endAccess(v43);

        }
      }
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v14 += v41;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease(v34);
  }
  v30 = v38;
  swift_beginAccess(v38, v43, 0, 0);
  v31 = *v30;
  v32 = swift_bridgeObjectRetain(*v30);
  sub_100038120(v32, (uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v31).n128_u64[0];
  return result;
}

uint64_t sub_100038120(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  _BOOL4 v33;
  uint8_t *v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  _QWORD *v59;
  uint64_t v60;
  void *v61;
  _QWORD *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  uint8_t *v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t aBlock[5];
  _QWORD *v92;

  v83 = a2;
  v4 = sub_100053F2C(&qword_1005D2B38);
  v76 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (id *)((char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v87 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v87 - 8);
  __chkstk_darwin(v87);
  v9 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v85 = *(_QWORD *)(v10 - 8);
  v86 = v10;
  __chkstk_darwin(v10);
  v84 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100053F2C((uint64_t *)&unk_1005E42A0);
  v75 = *(_QWORD **)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (id *)((char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = type metadata accessor for DispatchPredicate(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v18 = (uint64_t *)((char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = *(void **)(v2 + 88);
  *v18 = v19;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v16 + 104))(v18, enum case for DispatchPredicate.onQueue(_:), v15);
  v20 = v19;
  v21 = _dispatchPreconditionTest(_:)(v18);
  (*(void (**)(_QWORD *, uint64_t))(v16 + 8))(v18, v15);
  if ((v21 & 1) != 0)
  {
    v81 = v9;
    v82 = v7;
    v7 = v2;
    v22 = *(_QWORD *)(v2 + 48);
    swift_bridgeObjectRetain(v22);
    v23 = swift_bridgeObjectRetain(a1);
    v24 = sub_1000389AC(v23);
    swift_bridgeObjectRelease(a1);
    v25 = sub_1000389AC(v22);
    swift_bridgeObjectRelease(v22);
    v79 = v24;
    v21 = sub_1000389B0(v24, v25);
    v15 = v26;
    v16 = v27;
    v18 = v28;
    swift_release(v25);
    if (qword_1005D1DE8 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once(&qword_1005D1DE8, sub_100005ADC);
LABEL_3:
  v29 = type metadata accessor for Logger(0);
  sub_100056D88(v29, (uint64_t)qword_1005F5748);
  swift_bridgeObjectRetain_n(v21, 2);
  swift_bridgeObjectRetain_n(v15, 2);
  swift_bridgeObjectRetain_n(v16, 2);
  v30 = swift_bridgeObjectRetain_n(v18, 2);
  v31 = Logger.logObject.getter(v30);
  v32 = static os_log_type_t.default.getter(v31);
  v33 = os_log_type_enabled(v31, v32);
  v88 = v7;
  v89 = v15;
  v80 = a1;
  v77 = v18;
  v78 = v16;
  if (v33)
  {
    v34 = (uint8_t *)swift_slowAlloc(12, -1);
    v74 = swift_slowAlloc(32, -1);
    aBlock[0] = v74;
    v73 = v34;
    *(_DWORD *)v34 = 136315138;
    v35 = sub_100039BA0();
    v37 = v36;
    v90 = sub_100056DA0(v35, v36, aBlock);
    v15 = v89;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, aBlock);
    swift_bridgeObjectRelease_n(v18, 2);
    swift_bridgeObjectRelease_n(v16, 2);
    swift_bridgeObjectRelease_n(v15, 2);
    swift_bridgeObjectRelease_n(v21, 2);
    v7 = v88;
    swift_bridgeObjectRelease(v37);
    v38 = v73;
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "*x* FMMapViewDataSource: annotations difference %s", v73, 0xCu);
    v39 = v74;
    swift_arrayDestroy(v74, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1, -1);
    swift_slowDealloc(v38, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v18, 2);
    swift_bridgeObjectRelease_n(v16, 2);
    swift_bridgeObjectRelease_n(v15, 2);
    swift_bridgeObjectRelease_n(v21, 2);
  }
  v40 = *(_QWORD *)(v21 + 16);
  if (v40)
  {
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain(v21);
    specialized ContiguousArray.reserveCapacity(_:)(v40);
    v41 = v21 + ((*((unsigned __int8 *)v75 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v75 + 80));
    v42 = v75[9];
    do
    {
      sub_100007464(v41, (uint64_t)v14, (uint64_t *)&unk_1005E42A0);
      v43 = *v14;
      v44 = sub_1000051EC((uint64_t)v14, (uint64_t *)&unk_1005E42A0);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v44);
      v45 = *(_QWORD *)(aBlock[0] + 16);
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v45);
      v46 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v45, v43);
      specialized ContiguousArray._endMutation()(v46);
      v41 += v42;
      --v40;
    }
    while (v40);
    v47 = (_QWORD *)aBlock[0];
    swift_bridgeObjectRelease(v21);
    v7 = v88;
    v15 = v89;
    v48 = *(_QWORD *)(v89 + 16);
    if (v48)
      goto LABEL_10;
LABEL_14:
    swift_bridgeObjectRelease(v15);
    swift_bridgeObjectRelease(v77);
    swift_bridgeObjectRelease(v78);
    swift_bridgeObjectRelease(v21);
    v55 = _swiftEmptyArrayStorage;
    goto LABEL_15;
  }
  v47 = _swiftEmptyArrayStorage;
  v48 = *(_QWORD *)(v15 + 16);
  if (!v48)
    goto LABEL_14;
LABEL_10:
  v75 = v47;
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(v15);
  specialized ContiguousArray.reserveCapacity(_:)(v48);
  v49 = v15 + ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80));
  v50 = *(_QWORD *)(v76 + 72);
  do
  {
    sub_100007464(v49, (uint64_t)v6, &qword_1005D2B38);
    v51 = *v6;
    v52 = sub_1000051EC((uint64_t)v6, &qword_1005D2B38);
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v52);
    v53 = *(_QWORD *)(aBlock[0] + 16);
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v53);
    v54 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v53, v51);
    specialized ContiguousArray._endMutation()(v54);
    v49 += v50;
    --v48;
  }
  while (v48);
  v55 = (_QWORD *)aBlock[0];
  swift_bridgeObjectRelease(v77);
  swift_bridgeObjectRelease(v78);
  swift_bridgeObjectRelease_n(v89, 2);
  swift_bridgeObjectRelease(v21);
  v7 = v88;
  v47 = v75;
LABEL_15:
  v56 = *(_QWORD *)(v7 + 48);
  v57 = v80;
  *(_QWORD *)(v7 + 48) = v80;
  swift_bridgeObjectRetain(v57);
  swift_bridgeObjectRelease(v56);
  sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v58 = (void *)static OS_dispatch_queue.main.getter();
  v59 = (_QWORD *)swift_allocObject(&unk_1005656D8, 56, 7);
  v60 = v83;
  v59[2] = v83;
  v59[3] = v7;
  v59[4] = v55;
  v59[5] = v47;
  v59[6] = v79;
  aBlock[4] = (uint64_t)sub_10003DB34;
  v92 = v59;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100037DF8;
  aBlock[3] = (uint64_t)&unk_1005656F0;
  v61 = _Block_copy(aBlock);
  v62 = v92;
  swift_bridgeObjectRetain(v60);
  swift_retain(v7);
  swift_release(v62);
  v63 = v84;
  static DispatchQoS.unspecified.getter(v64);
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  v65 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v66 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v67 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  v68 = v81;
  v69 = v66;
  v70 = v87;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v69, v67, v87, v65);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v63, v68, v61);
  _Block_release(v61);

  (*(void (**)(char *, uint64_t))(v82 + 8))(v68, v70);
  return (*(uint64_t (**)(char *, uint64_t))(v85 + 8))(v63, v86);
}

_QWORD *sub_1000388C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_100053F2C(&qword_1005D2F10);
  v4 = (_QWORD *)swift_allocObject(v3, 8 * v1 + 32, 7);
  v5 = j__malloc_size(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 25;
  v4[2] = v1;
  v4[3] = (2 * (v6 >> 3)) | 1;
  v7 = sub_1003F1978(&v10, v4 + 4, v1, a1);
  v8 = v10;
  swift_bridgeObjectRetain(a1);
  sub_100073BB4(v8);
  if (v7 != (_QWORD *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v4;
}

uint64_t sub_1000389B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t i;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t j;
  id v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  if (!((unint64_t)a2 >> 62))
  {
    v4 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(a2);
    if (v4)
      goto LABEL_3;
LABEL_19:
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRetain(a1);
    v17 = swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    v18 = sub_100038C48(v17, a1, &qword_1005E42D8, (uint64_t *)&unk_1005E42A0, (uint64_t (*)(BOOL, uint64_t, uint64_t, _QWORD *))sub_100070C9C);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease(a1);
    swift_bridgeObjectRetain(a1);
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    sub_100038C48(a1, (uint64_t)_swiftEmptyArrayStorage, &qword_1005E42D0, &qword_1005D2B38, (uint64_t (*)(BOOL, uint64_t, uint64_t, _QWORD *))sub_100070C88);
    swift_bridgeObjectRelease(a1);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    swift_bridgeObjectRetain(a1);
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    sub_1000395E8(a1, (uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease(a1);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    swift_bridgeObjectRetain(a1);
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    sub_100039110(a1, (uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease(a1);
    swift_bridgeObjectRelease_n(_swiftEmptyArrayStorage, 2);
    return (uint64_t)v18;
  }
  if (a2 < 0)
    v16 = a2;
  else
    v16 = a2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a2);
  result = _CocoaArrayWrapper.endIndex.getter(v16);
  v4 = result;
  if (!result)
    goto LABEL_19;
LABEL_3:
  if (v4 >= 1)
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v4; ++i)
      {
        v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, a2);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        v9 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v8 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v9 >= v8 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v8 > 1, v9 + 1, 1);
        v10 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v7);
        specialized Array._endMutation()(v10);
      }
    }
    else
    {
      for (j = 0; j != v4; ++j)
      {
        v12 = *(id *)(a2 + 8 * j + 32);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        v14 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
        v13 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v14 >= v13 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1);
        v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v12);
        specialized Array._endMutation()(v15);
      }
    }
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100038C48(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t (*a5)(BOOL, uint64_t, uint64_t, _QWORD *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  void (*v28)(uint64_t);
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t (*v45)(BOOL, uint64_t, uint64_t, _QWORD *);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;

  v45 = a5;
  v65 = a2;
  v8 = type metadata accessor for FMAnnotationIdentifier(0);
  v9 = __chkstk_darwin(v8);
  v64 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (char *)&v45 - v11;
  v50 = a3;
  v13 = sub_100053F2C(a3);
  __chkstk_darwin(v13);
  v15 = (uint64_t (**)(BOOL, uint64_t, uint64_t, _QWORD *))((char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v58 = a4;
  v16 = sub_100053F2C(a4);
  v59 = *(_QWORD *)(v16 - 8);
  v17 = __chkstk_darwin(v16);
  v57 = (uint64_t)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v49 = (uint64_t)&v45 - v19;
  if ((unint64_t)a1 >> 62)
    goto LABEL_34;
  v20 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v20; v20 = _CocoaArrayWrapper.endIndex.getter(v43))
  {
    v21 = 0;
    v56 = a1 & 0xC000000000000001;
    v22 = v65 & 0xFFFFFFFFFFFFFF8;
    v48 = v65 & 0xFFFFFFFFFFFFFF8;
    if (v65 < 0)
      v22 = v65;
    v46 = a1 + 32;
    v47 = v22;
    v23 = _swiftEmptyArrayStorage;
    v63 = v65 & 0xC000000000000001;
    v54 = a1;
    v55 = (unint64_t)v65 >> 62;
    v52 = v15;
    v53 = v20;
    v51 = v16;
    while (1)
    {
      v24 = v56
          ? (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v21, a1)
          : *(id *)(v46 + 8 * v21);
      v25 = v24;
      if (__OFADD__(v21, 1))
        break;
      v61 = v21 + 1;
      v62 = v23;
      v60 = v21;
      if (v55)
      {
        v27 = v24;
        swift_bridgeObjectRetain(v65);
        v15 = (_QWORD *)_CocoaArrayWrapper.endIndex.getter(v47);
        if (v15)
        {
LABEL_16:
          v28 = *(void (**)(uint64_t))((swift_isaMask & *v25) + 0x190);
          v16 = 4;
          while (1)
          {
            v29 = v63
                ? (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v16 - 4, v65)
                : *(id *)(v65 + 8 * v16);
            a1 = (uint64_t)v29;
            v30 = (_QWORD *)(v16 - 3);
            if (__OFADD__(v16 - 4, 1))
              break;
            v31 = (*(uint64_t (**)(void))((swift_isaMask & *v29) + 0x190))();
            v32 = (uint64_t)v64;
            v28(v31);
            sub_1001451AC((uint64_t)v12, v32);
            v34 = v33;
            sub_10004FCB8(v32, type metadata accessor for FMAnnotationIdentifier);
            sub_10004FCB8((uint64_t)v12, type metadata accessor for FMAnnotationIdentifier);

            if ((v34 & 1) != 0)
            {

              swift_bridgeObjectRelease(v65);
              v35 = 1;
              v16 = v51;
              v15 = v52;
              goto LABEL_25;
            }
            ++v16;
            if (v30 == v15)
              goto LABEL_23;
          }
          __break(1u);
          break;
        }
      }
      else
      {
        v15 = *(_QWORD **)(v48 + 16);
        v26 = v24;
        swift_bridgeObjectRetain(v65);
        if (v15)
          goto LABEL_16;
      }
LABEL_23:
      swift_bridgeObjectRelease(v65);
      v16 = v51;
      v15 = v52;
      IndexPath.init(row:section:)(v60, 0);
      v35 = 0;
      *v15 = v25;
LABEL_25:
      v36 = v59;
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v59 + 56))(v15, v35, 1, v16);

      v37 = (*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v36 + 48))(v15, 1, v16) == 1;
      v38 = v53;
      a1 = v54;
      v23 = v62;
      if (v37)
      {
        sub_1000051EC((uint64_t)v15, v50);
      }
      else
      {
        v39 = v49;
        v40 = v58;
        sub_10005DAA0((uint64_t)v15, v49, v58);
        sub_10005DAA0(v39, v57, v40);
        if ((swift_isUniquelyReferenced_nonNull_native(v23) & 1) == 0)
          v23 = (_QWORD *)v45(0, v23[2] + 1, 1, v23);
        v42 = v23[2];
        v41 = v23[3];
        if (v42 >= v41 >> 1)
          v23 = (_QWORD *)v45(v41 > 1, v42 + 1, 1, v23);
        v23[2] = v42 + 1;
        sub_10005DAA0(v57, (uint64_t)v23+ ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))+ *(_QWORD *)(v59 + 72) * v42, v58);
      }
      v21 = v61;
      if (v61 == v38)
      {
        swift_bridgeObjectRelease(a1);
        return v23;
      }
    }
    __break(1u);
LABEL_34:
    if (a1 < 0)
      v43 = a1;
    else
      v43 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

uint64_t type metadata accessor for FMAnnotationIdentifier(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D79D0;
  if (!qword_1005D79D0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMAnnotationIdentifier);
  return result;
}

_QWORD *sub_100039110(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  id v35;
  void *v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;

  v3 = v2;
  v6 = type metadata accessor for FMAnnotationIdentifier(0);
  v7 = __chkstk_darwin(v6);
  v48 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v47 = (char *)&v44 - v9;
  v10 = sub_100053F2C((uint64_t *)&unk_1005E42B0);
  __chkstk_darwin(v10);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_100053F2C(&qword_1005D2B18);
  v13 = *(_QWORD *)(v57 - 8);
  v14 = __chkstk_darwin(v57);
  v56 = (uint64_t)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v49 = (uint64_t)&v44 - v16;
  if ((unint64_t)a1 >> 62)
    goto LABEL_37;
  v17 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v17; v17 = _CocoaArrayWrapper.endIndex.getter(v42))
  {
    v44 = v3;
    v55 = a1 & 0xC000000000000001;
    v18 = a2 & 0xFFFFFFFFFFFFFF8;
    v53 = a2 & 0xFFFFFFFFFFFFFF8;
    if (a2 < 0)
      v18 = a2;
    v46 = v18;
    v51 = a2 & 0xC000000000000001;
    v19 = _swiftEmptyArrayStorage;
    v20 = 4;
    v54 = (unint64_t)a2 >> 62;
    v50 = v13;
    v45 = v12;
    v52 = v17;
    while (1)
    {
      v58 = v19;
      v21 = v20 - 4;
      v22 = v55
          ? (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v20 - 4, a1)
          : *(id *)(a1 + 8 * v20);
      v23 = v22;
      v24 = v20 - 3;
      if (__OFADD__(v21, 1))
        break;
      if (v54)
      {
        v26 = v22;
        swift_bridgeObjectRetain(a2);
        v3 = _CocoaArrayWrapper.endIndex.getter(v46);
        swift_bridgeObjectRelease(a2);
        if ((v3 & 0x8000000000000000) != 0)
          goto LABEL_35;
      }
      else
      {
        v3 = *(_QWORD *)(v53 + 16);
        v25 = v22;
      }
      if (v21 >= v3)
        goto LABEL_24;
      if (v51)
      {
        v27 = a1;
        v28 = a2;
        v29 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v20 - 4, a2);
      }
      else
      {
        if (v21 >= *(_QWORD *)(v53 + 16))
          goto LABEL_36;
        v27 = a1;
        v28 = a2;
        v29 = *(id *)(a2 + 8 * v20);
      }
      v30 = v29;
      v31 = (uint64_t)v47;
      (*(void (**)(void))((swift_isaMask & *v29) + 0x190))();

      v32 = (uint64_t)v48;
      (*(void (**)(void))((swift_isaMask & *v23) + 0x190))();
      sub_1001451AC(v31, v32);
      LOBYTE(v30) = v33;
      sub_10004FCB8(v32, type metadata accessor for FMAnnotationIdentifier);
      sub_10004FCB8(v31, type metadata accessor for FMAnnotationIdentifier);
      a1 = v27;
      v13 = v50;
      a2 = v28;
      v12 = v45;
      if ((v30 & 1) == 0)
        goto LABEL_24;
      v34 = a1;
      v35 = v51 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v20 - 4, a2) : *(id *)(a2 + 8 * v20);
      v36 = v35;
      type metadata accessor for FMAnnotation();
      v37 = static NSObject.== infix(_:_:)(v36, v23);

      a1 = v34;
      v13 = v50;
      if ((v37 & 1) == 0)
      {
        IndexPath.init(row:section:)(v20 - 4, 0);
        v38 = 0;
        *(_QWORD *)&v12[*(int *)(v57 + 36)] = v23;
      }
      else
      {
LABEL_24:

        v38 = 1;
      }
      v19 = v58;
      v3 = v57;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v12, v38, 1, v57);

      if ((*(unsigned int (**)(char *, uint64_t, unint64_t))(v13 + 48))(v12, 1, v3) == 1)
      {
        sub_1000051EC((uint64_t)v12, (uint64_t *)&unk_1005E42B0);
      }
      else
      {
        v39 = v49;
        sub_10005DAA0((uint64_t)v12, v49, &qword_1005D2B18);
        sub_10005DAA0(v39, v56, &qword_1005D2B18);
        if ((swift_isUniquelyReferenced_nonNull_native(v19) & 1) == 0)
          v19 = (_QWORD *)sub_100070C60(0, v19[2] + 1, 1, (unint64_t)v19);
        v41 = v19[2];
        v40 = v19[3];
        v3 = v41 + 1;
        if (v41 >= v40 >> 1)
          v19 = (_QWORD *)sub_100070C60(v40 > 1, v41 + 1, 1, (unint64_t)v19);
        v19[2] = v3;
        sub_10005DAA0(v56, (uint64_t)v19+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v41, &qword_1005D2B18);
      }
      ++v20;
      if (v24 == v52)
      {
        swift_bridgeObjectRelease(a1);
        return v19;
      }
    }
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    if (a1 < 0)
      v42 = a1;
    else
      v42 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

_QWORD *sub_1000395E8(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  void *v26;
  void (*v27)(void);
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  _QWORD *v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;

  v3 = v2;
  v66 = a2;
  v5 = type metadata accessor for FMAnnotationIdentifier(0);
  v6 = __chkstk_darwin(v5);
  v65 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v9 = (char *)&v48 - v8;
  v10 = sub_100053F2C((uint64_t *)&unk_1005E42C0);
  __chkstk_darwin(v10);
  v12 = (uint64_t)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = sub_100053F2C(&qword_1005D2B28);
  v61 = *(_QWORD *)(v58 - 8);
  v13 = __chkstk_darwin(v58);
  v57 = (uint64_t)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v53 = (uint64_t)&v48 - v15;
  if ((unint64_t)a1 >> 62)
    goto LABEL_46;
  v16 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v16; v16 = _CocoaArrayWrapper.endIndex.getter(v46))
  {
    v48 = v3;
    v17 = 0;
    v56 = a1 & 0xC000000000000001;
    v18 = v66 & 0xFFFFFFFFFFFFFF8;
    v59 = v66 & 0xFFFFFFFFFFFFFF8;
    if (v66 < 0)
      v18 = v66;
    v54 = v18;
    v64 = v66 & 0xC000000000000001;
    v51 = a1 + 32;
    v52 = v66 + 32;
    v19 = _swiftEmptyArrayStorage;
    v60 = (unint64_t)v66 >> 62;
    v49 = (_QWORD *)v12;
    v50 = a1;
    v55 = v16;
    while (1)
    {
      v63 = v19;
      v20 = v56
          ? (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v17, a1)
          : *(id *)(v51 + 8 * v17);
      v21 = v20;
      if (__OFADD__(v17, 1))
        break;
      v62 = v17 + 1;
      if (v60)
      {
        v23 = v20;
        v24 = v66;
        swift_bridgeObjectRetain(v66);
        v3 = _CocoaArrayWrapper.endIndex.getter(v54);
        swift_bridgeObjectRelease(v24);
        if ((v3 & 0x8000000000000000) != 0)
          goto LABEL_44;
      }
      else
      {
        v3 = *(_QWORD *)(v59 + 16);
        v22 = v20;
      }
      if (v17 >= v3)
        goto LABEL_20;
      if (v64)
      {
        v25 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v17, v66);
      }
      else
      {
        if (v17 >= *(_QWORD *)(v59 + 16))
          goto LABEL_45;
        v25 = *(id *)(v52 + 8 * v17);
      }
      v26 = v25;
      (*(void (**)(void))((swift_isaMask & *v25) + 0x190))();

      v27 = *(void (**)(void))((swift_isaMask & *v21) + 0x190);
      v28 = (uint64_t)v65;
      v27();
      sub_1001451AC((uint64_t)v9, v28);
      v30 = v29;
      sub_10004FCB8(v28, type metadata accessor for FMAnnotationIdentifier);
      sub_10004FCB8((uint64_t)v9, type metadata accessor for FMAnnotationIdentifier);
      if ((v30 & 1) != 0)
      {
LABEL_20:

        v31 = 1;
      }
      else
      {
        if (v60)
        {
          v37 = v66;
          swift_bridgeObjectRetain(v66);
          a1 = _CocoaArrayWrapper.endIndex.getter(v54);
          swift_bridgeObjectRelease(v37);
          if (a1)
          {
LABEL_31:
            v12 = 0;
            while (1)
            {
              if (v64)
                v38 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v66);
              else
                v38 = *(id *)(v66 + 8 * v12 + 32);
              v3 = (unint64_t)v38;
              v39 = (*(uint64_t (**)(void))((swift_isaMask & *v38) + 0x190))();
              v40 = (uint64_t)v65;
              ((void (*)(uint64_t))v27)(v39);
              sub_1001451AC((uint64_t)v9, v40);
              v42 = v41;
              sub_10004FCB8(v40, type metadata accessor for FMAnnotationIdentifier);
              sub_10004FCB8((uint64_t)v9, type metadata accessor for FMAnnotationIdentifier);

              if ((v42 & 1) != 0)
              {
                v44 = v49;
                v21 = v21;
                IndexPath.init(row:section:)(v17, 0);
                v45 = v12;
                v12 = (uint64_t)v44;
                IndexPath.init(row:section:)(v45, 0);

                v31 = 0;
                *v44 = v21;
                a1 = v50;
                goto LABEL_21;
              }
              v43 = v12 + 1;
              if (__OFADD__(v12, 1))
                break;
              ++v12;
              if (v43 == a1)
                goto LABEL_38;
            }
            __break(1u);
            break;
          }
        }
        else
        {
          a1 = *(_QWORD *)(v59 + 16);
          if (a1)
            goto LABEL_31;
        }
LABEL_38:

        v31 = 1;
        v12 = (uint64_t)v49;
        a1 = v50;
      }
LABEL_21:
      v32 = v55;
      v33 = v61;
      v3 = v58;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56))(v12, v31, 1, v58);

      if ((*(unsigned int (**)(uint64_t, uint64_t, unint64_t))(v33 + 48))(v12, 1, v3) == 1)
      {
        sub_1000051EC(v12, (uint64_t *)&unk_1005E42C0);
        v19 = v63;
      }
      else
      {
        v34 = v53;
        sub_10005DAA0(v12, v53, &qword_1005D2B28);
        sub_10005DAA0(v34, v57, &qword_1005D2B28);
        v19 = v63;
        if ((swift_isUniquelyReferenced_nonNull_native(v63) & 1) == 0)
          v19 = (_QWORD *)sub_100070C74(0, v19[2] + 1, 1, (unint64_t)v19);
        v36 = v19[2];
        v35 = v19[3];
        v3 = v36 + 1;
        if (v36 >= v35 >> 1)
          v19 = (_QWORD *)sub_100070C74(v35 > 1, v36 + 1, 1, (unint64_t)v19);
        v19[2] = v3;
        sub_10005DAA0(v57, (uint64_t)v19+ ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80))+ *(_QWORD *)(v61 + 72) * v36, &qword_1005D2B28);
      }
      v17 = v62;
      if (v62 == v32)
      {
        swift_bridgeObjectRelease(a1);
        return v19;
      }
    }
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    if (a1 < 0)
      v46 = a1;
    else
      v46 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
  swift_bridgeObjectRelease(a1);
  return _swiftEmptyArrayStorage;
}

unint64_t sub_100039BA0()
{
  Swift::String v0;
  void *object;
  Swift::String v2;
  Swift::String v3;
  void *v4;
  Swift::String v5;
  Swift::String v6;
  void *v7;
  Swift::String v8;
  Swift::String v9;
  void *v10;
  Swift::String v11;
  Swift::String v12;

  _StringGuts.grow(_:)(29);
  swift_bridgeObjectRelease(0xE000000000000000);
  v0._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  object = v0._object;
  String.append(_:)(v0);
  swift_bridgeObjectRelease(object);
  v2._countAndFlagsBits = 0x65747265736E6920;
  v2._object = (void *)0xEA00000000003A64;
  String.append(_:)(v2);
  v3._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v4 = v3._object;
  String.append(_:)(v3);
  swift_bridgeObjectRelease(v4);
  v5._countAndFlagsBits = 32;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v6._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v7 = v6._object;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(v7);
  v8._countAndFlagsBits = 0x64616F6C6572202CLL;
  v8._object = (void *)0xE90000000000003ALL;
  String.append(_:)(v8);
  v9._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
  v10 = v9._object;
  String.append(_:)(v9);
  swift_bridgeObjectRelease(v10);
  v11._countAndFlagsBits = 62;
  v11._object = (void *)0xE100000000000000;
  String.append(_:)(v11);
  swift_bridgeObjectRetain(0x80000001004C5DF0);
  v12._countAndFlagsBits = 0x3A6465766F6DLL;
  v12._object = (void *)0xE600000000000000;
  String.append(_:)(v12);
  swift_bridgeObjectRelease(0x80000001004C5DF0);
  swift_bridgeObjectRelease(0xE600000000000000);
  return 0xD000000000000026;
}

id sub_100039DA4()
{
  uint64_t *v0;

  return sub_100035824(v0[2], v0[3], v0[4], v0[5]);
}

id sub_100039E68(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t *v25;
  id result;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void *v30;
  NSString v31;
  Class v32;
  NSString v33;
  Class isa;
  id v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[3];

  v3 = v2;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v10 = type metadata accessor for Logger(0);
  sub_100056D88(v10, (uint64_t)qword_1005F5748);
  v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(12, -1);
    v15 = swift_slowAlloc(32, -1);
    v39 = a2;
    v16 = v15;
    v42[0] = v15;
    v40 = v2;
    *(_DWORD *)v14 = 136315138;
    v38 = a1;
    v17 = IndexPath.debugDescription.getter();
    v19 = v18;
    v41 = sub_100056DA0(v17, v18, v42);
    a1 = v38;
    v3 = v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, v42);
    v20 = swift_bridgeObjectRelease(v19);
    (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v9, v6, v20);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "FMPeopleListDataSource: cell for row at %s", v14, 0xCu);
    swift_arrayDestroy(v16, 1, (char *)&type metadata for Any + 8);
    v21 = v16;
    a2 = v39;
    swift_slowDealloc(v21, -1, -1);
    swift_slowDealloc(v14, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }

  v23 = IndexPath.section.getter(v22);
  if (v23 != 2)
  {
    if (v23 > 1)
      return objc_msgSend(objc_allocWithZone((Class)UITableViewCell), "init");
    v33 = String._bridgeToObjectiveC()();
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v35 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v33, isa);

    v36 = (uint64_t)a1;
LABEL_15:
    sub_10003A274(v36, v35, a2);
    return v35;
  }
  v24 = IndexPath.row.getter(2);
  v25 = (uint64_t *)(v3 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_cellsViewModel);
  result = (id)swift_beginAccess(v3 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_cellsViewModel, v42, 0, 0);
  if ((v24 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v27 = *v25;
    if (v24 < *(_QWORD *)(*v25 + 16))
    {
      v28 = type metadata accessor for FMPeopleCellViewModel(0);
      if (*(_BYTE *)(v27
                    + ((*(unsigned __int8 *)(*(_QWORD *)(v28 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v28 - 8) + 80))
                    + *(_QWORD *)(*(_QWORD *)(v28 - 8) + 72) * v24
                    + *(int *)(v28 + 76)))
        v29 = 0x80000001004B3790;
      else
        v29 = 0x80000001004B37B0;
      v30 = a1;
      v31 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v29);
      v32 = IndexPath._bridgeToObjectiveC()().super.isa;
      v35 = objc_msgSend(v30, "dequeueReusableCellWithIdentifier:forIndexPath:", v31, v32);

      v36 = (uint64_t)v30;
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_10003A274(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  unint64_t result;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  char *v48;
  NSObject *v49;
  os_log_type_t v50;
  _BOOL4 v51;
  __objc2_class **p_superclass;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  __n128 v58;
  void (*v59)(char *, uint64_t, __n128);
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  NSObject *v65;
  os_log_type_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  __n128 v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  _QWORD *v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(uint64_t);
  void *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  id v93;
  BOOL v94;
  uint64_t v95;
  void *v96;
  id v97;
  double v98;
  id v99;
  double v100;
  double v101;
  double v102;
  id v103;
  uint64_t v104;
  unsigned int v105;
  unsigned int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  uint64_t v120;
  _QWORD *v121;
  id v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t (*v171)(char *, uint64_t, uint64_t);
  uint64_t v172;
  char *v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t *v177;
  char *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  void *v182;
  id v183;
  uint64_t v184;
  uint64_t v185;
  char v186[24];
  uint64_t v187[3];
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  _BYTE v191[24];

  v182 = a2;
  v172 = a1;
  v4 = type metadata accessor for FMPeopleCellViewModel(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v170 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = (uint64_t (*)(char *, uint64_t, uint64_t))type metadata accessor for FMAllowLocationAlertCellViewModel(0);
  v176 = *((_QWORD *)v171 - 1);
  __chkstk_darwin(v171);
  v177 = (uint64_t *)((char *)&v170 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_100053F2C(&qword_1005DA760);
  __chkstk_darwin(v9);
  v179 = (char *)&v170 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100053F2C(&qword_1005E5970);
  __chkstk_darwin(v11);
  v178 = (char *)&v170 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UIBackgroundConfiguration(0);
  v180 = *(_QWORD *)(v13 - 8);
  v181 = v13;
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v170 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v174 = (char *)&v170 - v17;
  v170 = type metadata accessor for FMMeCellViewModel(0);
  v175 = *(char **)(v170 - 8);
  __chkstk_darwin(v170);
  v173 = (char *)&v170 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v184 = type metadata accessor for IndexPath(0);
  v19 = *(_QWORD *)(v184 - 8);
  v20 = __chkstk_darwin(v184);
  v22 = (char *)&v170 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v170 - v24;
  v26 = __chkstk_darwin(v23);
  v28 = (char *)&v170 - v27;
  v29 = __chkstk_darwin(v26);
  v31 = (char *)&v170 - v30;
  v185 = a3;
  result = IndexPath.section.getter(v29);
  if (result == 2)
  {
    v176 = v5;
    v177 = (uint64_t *)v4;
    v173 = v22;
    v174 = v16;
    v175 = v7;
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v45 = type metadata accessor for Logger(0);
    sub_100056D88(v45, (uint64_t)qword_1005F5748);
    v46 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
    v47 = v184;
    v46(v25, v185, v184);
    v48 = (char *)v183;
    v49 = Logger.logObject.getter(v48);
    v50 = static os_log_type_t.default.getter(v49);
    v51 = os_log_type_enabled(v49, v50);
    p_superclass = &OBJC_METACLASS____TtC6FindMy23FMNoveltyViewController.superclass;
    v171 = (uint64_t (*)(char *, uint64_t, uint64_t))v46;
    if (v51)
    {
      v53 = swift_slowAlloc(22, -1);
      v54 = swift_slowAlloc(32, -1);
      v187[0] = v54;
      *(_DWORD *)v53 = 136315394;
      v55 = IndexPath.debugDescription.getter();
      v57 = v56;
      v190 = sub_100056DA0(v55, v56, v187);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v190, v191);
      v58 = swift_bridgeObjectRelease(v57);
      v59 = *(void (**)(char *, uint64_t, __n128))(v19 + 8);
      v59(v25, v184, v58);
      *(_WORD *)(v53 + 12) = 2048;
      v60 = &v48[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_cellsViewModel];
      swift_beginAccess(&v48[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_cellsViewModel], v186, 0, 0);
      v61 = *(_QWORD *)(*(_QWORD *)v60 + 16);

      v190 = v61;
      v47 = v184;
      p_superclass = (__objc2_class **)(&OBJC_METACLASS____TtC6FindMy23FMNoveltyViewController + 8);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v190, v191);

      _os_log_impl((void *)&_mh_execute_header, v49, v50, "FMPeopleListDataSource: configuring regulars cell for row at %s, cellsViewModel: %ld", (uint8_t *)v53, 0x16u);
      swift_arrayDestroy(v54, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v54, -1, -1);
      swift_slowDealloc(v53, -1, -1);

    }
    else
    {

      v59 = *(void (**)(char *, uint64_t, __n128))(v19 + 8);
      ((void (*)(char *, uint64_t))v59)(v25, v47);

    }
    v85 = v182;
    v86 = (uint64_t)v175;
    v87 = (char *)p_superclass[278] + (_QWORD)v48;
    v88 = swift_beginAccess(v87, &v190, 0, 0);
    v89 = *(_QWORD *)(*(_QWORD *)v87 + 16);
    result = IndexPath.row.getter(v88);
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (result < *(_QWORD *)(*(_QWORD *)v87 + 16))
    {
      sub_10004FC74(*(_QWORD *)v87+ ((*(unsigned __int8 *)(v176 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v176 + 80))+ *(_QWORD *)(v176 + 72) * result, v86, type metadata accessor for FMPeopleCellViewModel);
      v90 = sub_100053F2C(&qword_1005DD930);
      v91 = swift_dynamicCastClass(v85, v90);
      if (v91)
      {
        v92 = (_QWORD *)v91;
        v93 = v85;
        v94 = IndexPath.row.getter(v93) == v89 - 1;
        v95 = qword_1005DA298;
        *((_BYTE *)v92 + qword_1005DA298) = v94;
        v96 = *(void **)((char *)v92 + qword_1005DA280);
        objc_msgSend(v96, "setHidden:");
        v97 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
        v98 = UIRoundToScreenScale(0.3);

        v99 = objc_msgSend(v92, "containerView");
        objc_msgSend(v99, "bounds");
        v101 = v100;

        v102 = sub_10003B568(sub_100462EBC);
        v103 = objc_msgSend(v96, "setFrame:", v102, v101 - v98, sub_100462EBC(), v98);
        v104 = IndexPath.section.getter(v103);
        *((_BYTE *)v92 + qword_1005DA2A8) = v104 == 2;
        v105 = *((unsigned __int8 *)v92 + v95);
        if (v104 == 2)
          v106 = *((unsigned __int8 *)v92 + v95);
        else
          v106 = 0;
        if (v104 == 2)
          v105 = 0;
        if (*((_BYTE *)v92 + qword_1005DA290))
          v107 = v105;
        else
          v107 = v106;
        objc_msgSend(v96, "setHidden:", v107);
        (*(void (**)(uint64_t))((swift_isaMask & *v92) + 0x158))(v86);
        v108 = sub_100053F2C(&qword_1005E5928);
        v109 = swift_dynamicCastClass(v92, v108);
        if (v109)
        {
          v110 = (_QWORD *)v109;
          v111 = swift_allocObject(&unk_100568868, 24, 7);
          swift_unknownObjectUnownedInit(v111 + 16, v48);
          v112 = swift_allocObject(&unk_100568890, 24, 7);
          swift_unknownObjectWeakInit(v112 + 16);
          v113 = swift_allocObject(&unk_1005688B8, 32, 7);
          *(_QWORD *)(v113 + 16) = v111;
          *(_QWORD *)(v113 + 24) = v112;
          v114 = (_QWORD *)((char *)v110 + *(_QWORD *)((swift_isaMask & *v110) + 0x188));
          v116 = *v114;
          v115 = v114[1];
          *v114 = (uint64_t)sub_10046AE88;
          v114[1] = v113;
          sub_1000327F0(v116, v115);
        }

        goto LABEL_53;
      }
      __chkstk_darwin(0);
      *(&v170 - 2) = v138;
      v188 = sub_100053F2C(&qword_1005E5978);
      v189 = sub_10003F774(&qword_1005E5980, &qword_1005E5978, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
      sub_10003D370(v187);
      v139 = sub_100053F2C(&qword_1005E5988);
      v140 = sub_10046AD88();
      UIHostingConfiguration<>.init(content:)(sub_10046B088, &v170 - 4, v139, v140);
      v141 = UITableViewCell.contentConfiguration.setter(v187);
      v142 = v174;
      static UIBackgroundConfiguration.listPlainCell()(v141);
      v143 = swift_allocObject(&unk_100568840, 24, 7);
      swift_unknownObjectWeakInit(v143 + 16);
      v144 = v178;
      UIConfigurationColorTransformer.init(_:)(sub_10046AE24, v143);
      v145 = type metadata accessor for UIConfigurationColorTransformer(0);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v145 - 8) + 56))(v144, 0, 1, v145);
      UIBackgroundConfiguration.backgroundColorTransformer.setter(v144);
      v146 = v180;
      v147 = v179;
      v148 = v142;
      v149 = v181;
      (*(void (**)(char *, char *, uint64_t))(v180 + 16))(v179, v148, v181);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v146 + 56))(v147, 0, 1, v149);
      v150 = UITableViewCell.backgroundConfiguration.setter(v147);
      v151 = v185;
      v152 = IndexPath.row.getter(v150);
      v153 = v89 - 1;
      v154 = (uint64_t)v173;
      v155 = v171(v173, v151, v47);
      if (v152 == v153)
      {
        v156 = IndexPath.section.getter(v155);
        ((void (*)(uint64_t, uint64_t))v59)(v154, v47);
        if (v156 == 2)
        {
          v157 = 0;
LABEL_52:
          v169 = v174;
          objc_msgSend(v85, "setSeparatorStyle:", v157);
          (*(void (**)(char *, uint64_t))(v146 + 8))(v169, v149);
LABEL_53:
          v84 = type metadata accessor for FMPeopleCellViewModel;
          v83 = v86;
          return sub_10004FCB8(v83, v84);
        }
      }
      else
      {
        ((void (*)(uint64_t, uint64_t))v59)(v154, v47);
      }
      v157 = 1;
      goto LABEL_52;
    }
    __break(1u);
    goto LABEL_58;
  }
  if (result == 1)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v62 = type metadata accessor for Logger(0);
    sub_100056D88(v62, (uint64_t)qword_1005F5748);
    v63 = v184;
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v28, v185, v184);
    v64 = (char *)v183;
    v65 = Logger.logObject.getter(v64);
    v66 = static os_log_type_t.default.getter(v65);
    if (os_log_type_enabled(v65, v66))
    {
      v67 = swift_slowAlloc(22, -1);
      v183 = (id)swift_slowAlloc(32, -1);
      v187[0] = (uint64_t)v183;
      *(_DWORD *)v67 = 136315394;
      v68 = IndexPath.debugDescription.getter();
      v70 = v69;
      v190 = sub_100056DA0(v68, v69, v187);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v190, v191);
      v71 = swift_bridgeObjectRelease(v70);
      (*(void (**)(char *, uint64_t, __n128))(v19 + 8))(v28, v63, v71);
      *(_WORD *)(v67 + 12) = 2048;
      v72 = *(_QWORD *)(*(_QWORD *)&v64[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_fenceCellModels] + 16);

      v190 = v72;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v190, v191);

      _os_log_impl((void *)&_mh_execute_header, v65, v66, "FMPeopleListDataSource: configuring inbox cell for row at %s, fenceCellModels: %ld", (uint8_t *)v67, 0x16u);
      v73 = v183;
      swift_arrayDestroy(v183, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v73, -1, -1);
      swift_slowDealloc(v67, -1, -1);

    }
    else
    {

      (*(void (**)(char *, uint64_t))(v19 + 8))(v28, v63);
    }
    v75 = v177;
    result = IndexPath.row.getter(v74);
    if ((result & 0x8000000000000000) == 0)
    {
      v117 = *(_QWORD *)&v64[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_fenceCellModels];
      if (result < *(_QWORD *)(v117 + 16))
      {
        sub_10004FC74(v117+ ((*(unsigned __int8 *)(v176 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v176 + 80))+ *(_QWORD *)(v176 + 72) * result, (uint64_t)v75, type metadata accessor for FMAllowLocationAlertCellViewModel);
        v118 = sub_100053F2C((uint64_t *)&unk_1005E5930);
        v119 = v182;
        v120 = swift_dynamicCastClass(v182, v118);
        if (v120)
        {
          v121 = (_QWORD *)v120;
          v122 = v119;
          sub_100463970(v75);
          objc_msgSend(v121, "setSelectionStyle:", 0);
          v123 = swift_allocObject(&unk_100568868, 24, 7);
          swift_unknownObjectUnownedInit(v123 + 16, v64);
          v124 = (_QWORD *)((char *)v121 + *(_QWORD *)((swift_isaMask & *v121) + 0x188));
          v125 = *v124;
          v126 = v124[1];
          *v124 = (uint64_t)sub_10046AEA8;
          v124[1] = v123;
          sub_1000327F0(v125, v126);

        }
        else
        {
          __chkstk_darwin(0);
          *(&v170 - 2) = v158;
          v188 = sub_100053F2C(&qword_1005E5978);
          v189 = sub_10003F774(&qword_1005E5980, &qword_1005E5978, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
          sub_10003D370(v187);
          v159 = sub_100053F2C(&qword_1005E5988);
          v160 = sub_10046AD88();
          UIHostingConfiguration<>.init(content:)(sub_10046AE90, &v170 - 4, v159, v160);
          v161 = UITableViewCell.contentConfiguration.setter(v187);
          v162 = v174;
          static UIBackgroundConfiguration.listPlainCell()(v161);
          v163 = swift_allocObject(&unk_100568840, 24, 7);
          swift_unknownObjectWeakInit(v163 + 16);
          v164 = v178;
          UIConfigurationColorTransformer.init(_:)(sub_10046AE24, v163);
          v165 = type metadata accessor for UIConfigurationColorTransformer(0);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v165 - 8) + 56))(v164, 0, 1, v165);
          UIBackgroundConfiguration.backgroundColorTransformer.setter(v164);
          v167 = v180;
          v166 = v181;
          v168 = v179;
          (*(void (**)(char *, char *, uint64_t))(v180 + 16))(v179, v162, v181);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v167 + 56))(v168, 0, 1, v166);
          UITableViewCell.backgroundConfiguration.setter(v168);
          objc_msgSend(v119, "setSeparatorStyle:", 1);
          (*(void (**)(char *, uint64_t))(v167 + 8))(v162, v166);
        }
        v84 = type metadata accessor for FMAllowLocationAlertCellViewModel;
        v83 = (uint64_t)v75;
        return sub_10004FCB8(v83, v84);
      }
      goto LABEL_59;
    }
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  if (result)
    return result;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v33 = type metadata accessor for Logger(0);
  sub_100056D88(v33, (uint64_t)qword_1005F5748);
  v34 = v184;
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v31, v185, v184);
  v35 = (char *)v183;
  v36 = Logger.logObject.getter(v35);
  v37 = static os_log_type_t.default.getter(v36);
  if (os_log_type_enabled(v36, v37))
  {
    v38 = swift_slowAlloc(22, -1);
    v39 = swift_slowAlloc(32, -1);
    v187[0] = v39;
    *(_DWORD *)v38 = 136315394;
    v40 = IndexPath.debugDescription.getter();
    v42 = v41;
    v190 = sub_100056DA0(v40, v41, v187);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v190, v191);
    v43 = swift_bridgeObjectRelease(v42);
    (*(void (**)(char *, uint64_t, __n128))(v19 + 8))(v31, v184, v43);
    *(_WORD *)(v38 + 12) = 2048;
    v44 = *(_QWORD *)(*(_QWORD *)&v35[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_meCellViewModel] + 16);

    v190 = v44;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v190, v191);

    _os_log_impl((void *)&_mh_execute_header, v36, v37, "FMPeopleListDataSource: configuring me cell for row at %s, meCellViewModel: %ld", (uint8_t *)v38, 0x16u);
    swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v39, -1, -1);
    swift_slowDealloc(v38, -1, -1);

  }
  else
  {

    (*(void (**)(char *, uint64_t))(v19 + 8))(v31, v34);
  }
  v76 = sub_100053F2C(&qword_1005E5920);
  v77 = v182;
  v78 = swift_dynamicCastClass(v182, v76);
  if (!v78)
  {
    result = IndexPath.row.getter(0);
    if ((result & 0x8000000000000000) == 0)
    {
      if (result < *(_QWORD *)(*(_QWORD *)&v35[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_meCellViewModel] + 16))
      {
        __chkstk_darwin(result);
        *(&v170 - 2) = v127;
        v188 = sub_100053F2C(&qword_1005E5978);
        v189 = sub_10003F774(&qword_1005E5980, &qword_1005E5978, (uint64_t)&protocol conformance descriptor for UIHostingConfiguration<A, B>);
        sub_10003D370(v187);
        v128 = sub_100053F2C(&qword_1005E5988);
        v129 = sub_10046AD88();
        UIHostingConfiguration<>.init(content:)(sub_10046B088, &v170 - 4, v128, v129);
        v130 = UITableViewCell.contentConfiguration.setter(v187);
        v131 = v174;
        static UIBackgroundConfiguration.listPlainCell()(v130);
        v132 = swift_allocObject(&unk_100568840, 24, 7);
        swift_unknownObjectWeakInit(v132 + 16);
        v133 = v178;
        UIConfigurationColorTransformer.init(_:)(sub_10046AE24, v132);
        v134 = type metadata accessor for UIConfigurationColorTransformer(0);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v134 - 8) + 56))(v133, 0, 1, v134);
        UIBackgroundConfiguration.backgroundColorTransformer.setter(v133);
        v136 = v180;
        v135 = v181;
        v137 = v179;
        (*(void (**)(char *, char *, uint64_t))(v180 + 16))(v179, v131, v181);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v136 + 56))(v137, 0, 1, v135);
        UITableViewCell.backgroundConfiguration.setter(v137);
        objc_msgSend(v77, "setSeparatorStyle:", 1);
        return (*(uint64_t (**)(char *, uint64_t))(v136 + 8))(v131, v135);
      }
      goto LABEL_63;
    }
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    return result;
  }
  v79 = (_QWORD *)v78;
  v80 = v77;
  result = IndexPath.row.getter(v80);
  if ((result & 0x8000000000000000) != 0)
    goto LABEL_60;
  v81 = *(_QWORD *)&v35[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_meCellViewModel];
  if (result >= *(_QWORD *)(v81 + 16))
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  v82 = (uint64_t)v173;
  sub_10004FC74(v81+ ((v175[80] + 32) & ~(unint64_t)v175[80])+ *((_QWORD *)v175 + 9) * result, (uint64_t)v173, type metadata accessor for FMMeCellViewModel);
  (*(void (**)(uint64_t))((swift_isaMask & *v79) + 0x158))(v82);

  v83 = v82;
  v84 = type metadata accessor for FMMeCellViewModel;
  return sub_10004FCB8(v83, v84);
}

uint64_t type metadata accessor for FMAllowLocationAlertCellViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_1005E5340;
  if (!qword_1005E5340)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMAllowLocationAlertCellViewModel);
  return result;
}

double sub_10003B568(double (*a1)(void))
{
  void *v1;
  double v2;
  id v3;
  double v4;
  id v6;
  double v7;
  double v8;

  v2 = 0.0;
  if ((*((_BYTE *)v1 + qword_1005DA298) & 1) == 0)
  {
    if ((*((_BYTE *)v1 + qword_1005DA2A0) & 1) != 0)
    {
      v3 = objc_msgSend(v1, "containerView");
      objc_msgSend(v3, "directionalLayoutMargins");
      v2 = v4;

    }
    else if (objc_msgSend(v1, "effectiveUserInterfaceLayoutDirection") != (id)1)
    {
      v6 = objc_msgSend(v1, "containerView");
      objc_msgSend(v6, "bounds");
      v8 = v7;

      return v8 - a1();
    }
  }
  return v2;
}

double sub_10003B648(double (*a1)(void))
{
  unsigned __int8 *v1;
  id v3;
  id v4;
  int v5;
  int v6;
  id v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  id v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;
  double v19;
  double v20;

  v3 = objc_msgSend(v1, "traitCollection");
  v4 = objc_msgSend(v3, "preferredContentSizeCategory");

  v5 = UIContentSizeCategory.isAccessibilityCategory.getter(v4);
  if (v1[qword_1005DA290] == 1 && v1[qword_1005DA2A8] == 1)
  {
    if (((v1[qword_1005DA298] | v5) & 1) == 0)
      goto LABEL_4;
LABEL_7:
    v12 = objc_msgSend(v1, "containerView");
    objc_msgSend(v12, "bounds");
    v11 = v13;

    return v11;
  }
  if ((v5 & 1) != 0)
    goto LABEL_7;
LABEL_4:
  v6 = v1[qword_1005DA2A0];
  v7 = objc_msgSend(v1, "containerView");
  v8 = v7;
  if (v6 == 1)
  {
    objc_msgSend(v7, "bounds");
    v10 = v9;

    return v10 - sub_10003B568(a1);
  }
  else
  {
    objc_msgSend(v7, "directionalLayoutMargins");
    v15 = v14;

    if (qword_1005D1DF0 != -1)
      swift_once(&qword_1005D1DF0, sub_10005DC60);
    v16 = v15 + *(double *)&qword_1005F5778;
    if (qword_1005D1CD8 != -1)
      swift_once(&qword_1005D1CD8, sub_100008DD0);
    v17 = v16 + *((double *)&xmmword_1005F51E0 + 1);
    v18 = objc_msgSend(v1, "containerView");
    objc_msgSend(v18, "bounds");
    v20 = v19;

    return v20 - v17;
  }
}

void sub_10003B858(void *a1, uint64_t a2, char a3, char a4)
{
  uint64_t v6;
  id v7;

  v7 = a1;
  sub_10003B8A0(a3, a4, (uint64_t)v7, v6);

}

id sub_10003B8A0(char a1, char a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v7;
  objc_super v9;

  v7 = (objc_class *)type metadata accessor for FMListTableViewCell(0, *(_QWORD *)((swift_isaMask & *v4) + 0x50), *(_QWORD *)((swift_isaMask & *v4) + 0x58), a4);
  v9.receiver = v4;
  v9.super_class = v7;
  return objc_msgSendSuper2(&v9, "setSelected:animated:", a1 & 1, a2 & 1);
}

_QWORD *sub_10003B90C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSString v23;
  id v24;
  id v25;
  uint64_t v26;
  NSString v27;
  objc_class *v28;
  _QWORD *v29;
  uint64_t (*v30)(void);
  _QWORD *v31;
  uint64_t v32;
  objc_super v34;

  v6 = *v3;
  v7 = swift_isaMask;
  v8 = qword_1005DA230;
  v9 = objc_allocWithZone((Class)NUIContainerStackView);
  v10 = v3;
  *(uint64_t *)((char *)v3 + v8) = (uint64_t)objc_msgSend(v9, "init");
  v11 = qword_1005DA238;
  *(uint64_t *)((char *)v10 + v11) = (uint64_t)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMTableViewCellImageContainer()), "init");
  v12 = qword_1005DA240;
  *(uint64_t *)((char *)v10 + v12) = (uint64_t)objc_msgSend(objc_allocWithZone((Class)NUIContainerStackView), "init");
  v13 = qword_1005DA248;
  *(uint64_t *)((char *)v10 + v13) = (uint64_t)objc_msgSend(objc_allocWithZone((Class)NUIContainerStackView), "init");
  v14 = qword_1005DA250;
  *(uint64_t *)((char *)v10 + v14) = (uint64_t)objc_msgSend(objc_allocWithZone((Class)NUIContainerStackView), "init");
  v15 = qword_1005DA258;
  *(uint64_t *)((char *)v10 + v15) = (uint64_t)objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v16 = qword_1005DA260;
  v17 = type metadata accessor for FMSubtitleLabel();
  *(uint64_t *)((char *)v10 + v16) = (uint64_t)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v17)), "init");
  v18 = qword_1005DA268;
  *(uint64_t *)((char *)v10 + v18) = (uint64_t)objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v19 = qword_1005DA270;
  *(uint64_t *)((char *)v10 + v19) = (uint64_t)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMBatteryView()), "init");
  v20 = qword_1005DA278;
  *(uint64_t *)((char *)v10 + v20) = (uint64_t)objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 100);
  v21 = qword_1005DA280;
  *(uint64_t *)((char *)v10 + v21) = (uint64_t)objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v22 = qword_1005DA288;
  v23 = String._bridgeToObjectiveC()();
  v24 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v23);

  v25 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v24);
  *(uint64_t *)((char *)v10 + v22) = (uint64_t)v25;
  *((_BYTE *)v10 + qword_1005DA290) = 0;
  *((_BYTE *)v10 + qword_1005DA298) = 0;
  *((_BYTE *)v10 + qword_1005DA2A0) = 0;
  *((_BYTE *)v10 + qword_1005DA2A8) = 0;

  if (a3)
  {
    v27 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v27 = 0;
  }
  v28 = (objc_class *)type metadata accessor for FMListTableViewCell(0, *(_QWORD *)((v7 & v6) + 0x50), *(_QWORD *)((v7 & v6) + 0x58), v26);
  v34.receiver = v10;
  v34.super_class = v28;
  v29 = objc_msgSendSuper2(&v34, "initWithStyle:reuseIdentifier:", a1, v27);

  v30 = *(uint64_t (**)(void))((swift_isaMask & *v29) + 0x168);
  v31 = v29;
  v32 = v30();
  (*(void (**)(uint64_t))((swift_isaMask & *v31) + 0x170))(v32);

  return v31;
}

uint64_t sub_10003BC28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return swift_getGenericMetadata(a1, v6, a5);
}

uint64_t type metadata accessor for FMBatteryView()
{
  return objc_opt_self(_TtC6FindMy13FMBatteryView);
}

uint64_t type metadata accessor for FMListTableViewCell(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10003BC28(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FMListTableViewCell);
}

id sub_10003BCA0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  char *v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  objc_super v13;

  v1 = OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_style;
  v2 = qword_1005D1DF0;
  v3 = v0;
  if (v2 != -1)
    swift_once(&qword_1005D1DF0, sub_10005DC60);
  v4 = &v3[v1];
  v5 = qword_1005F5780;
  v6 = unk_1005F5770;
  *(_OWORD *)v4 = xmmword_1005F5760;
  *((_OWORD *)v4 + 1) = v6;
  *((_QWORD *)v4 + 4) = v5;
  v7 = OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_maskableContainer;
  *(_QWORD *)&v3[v7] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v8 = OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_backplateLayer;
  *(_QWORD *)&v3[v8] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  v9 = OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_imageView;
  *(_QWORD *)&v3[v9] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v10 = OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_badgeView;
  *(_QWORD *)&v3[v10] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  v3[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_hasBackplate] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_backplateStrokeColor] = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_currentMaskingContext] = 0;

  v13.receiver = v3;
  v13.super_class = (Class)type metadata accessor for FMTableViewCellImageContainer();
  v11 = objc_msgSendSuper2(&v13, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_10003BE00();

  return v11;
}

void sub_10003BE00()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  double *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char *v14;
  _QWORD v15[5];
  uint64_t v16;

  v1 = (void *)objc_opt_self(UIColor);
  v2 = objc_msgSend(v1, "clearColor");
  objc_msgSend(v0, "setBackgroundColor:", v2);

  v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_badgeView];
  objc_msgSend(v3, "setContentMode:", 4);
  v4 = objc_msgSend(v1, "whiteColor");
  objc_msgSend(v3, "setTintColor:", v4);

  v5 = objc_msgSend(v3, "layer");
  v6 = (double *)&v0[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_style];
  objc_msgSend(v5, "setCornerRadius:", *(double *)&v0[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_style + 8] * 0.5);

  v7 = *(void **)&v0[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_backplateLayer];
  objc_msgSend(v7, "setCornerRadius:", *v6 * 0.5);
  objc_msgSend(v7, "frame");
  objc_msgSend(v7, "setFrame:");
  objc_msgSend(v0, "setHorizontalAlignment:", 3);
  objc_msgSend(v0, "setVerticalAlignment:", 3);
  v8 = *(void **)&v0[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_maskableContainer];
  objc_msgSend(v0, "addArrangedSubview:", v8);
  objc_msgSend(v0, "addArrangedSubview:", v3);
  v9 = objc_msgSend(v8, "layer");
  objc_msgSend(v9, "addSublayer:", v7);

  objc_msgSend(v8, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_imageView]);
  v10 = swift_allocObject(&unk_100554A10, 24, 7);
  *(_QWORD *)(v10 + 16) = v0;
  v11 = swift_allocObject(&unk_100554A38, 32, 7);
  *(_QWORD *)(v11 + 16) = sub_100021EA0;
  *(_QWORD *)(v11 + 24) = v10;
  v15[4] = sub_100021E78;
  v16 = v11;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  v15[2] = sub_100021E38;
  v15[3] = &unk_100554A50;
  v12 = _Block_copy(v15);
  v13 = v16;
  v14 = v0;
  swift_retain(v11);
  objc_msgSend(v14, "performBatchUpdates:", v12, swift_release(v13).n128_f64[0]);
  _Block_release(v12);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation(v11, "", 120, 213, 34, 1);
  swift_release(v10);
  swift_release(v11);
  if ((v14 & 1) != 0)
    __break(1u);
}

void sub_10003C0F0()
{
  char *v0;
  NSString v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  double v7;
  double v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  CGAffineTransform v23;

  v1 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setAccessibilityIdentifier:", v1);

  v2 = (void *)objc_opt_self(UIColor);
  v3 = objc_msgSend(v2, "clearColor");
  objc_msgSend(v0, "setBackgroundColor:", v3);

  v4 = *(void **)&v0[qword_1005DA268];
  v5 = (void *)objc_opt_self(UIFont);
  v6 = objc_msgSend(v5, "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
  objc_msgSend(v4, "setFont:", v6);

  LODWORD(v7) = 1144750080;
  objc_msgSend(v4, "setContentHuggingPriority:forAxis:", 0, v7);
  LODWORD(v8) = 1148846080;
  objc_msgSend(v4, "setContentCompressionResistancePriority:forAxis:", 0, v8);
  v9 = objc_msgSend(v0, "traitCollection");
  v10 = objc_msgSend(v9, "preferredContentSizeCategory");

  LOBYTE(v9) = UIContentSizeCategory.isAccessibilityCategory.getter(v10);
  if ((v9 & 1) != 0)
    v11 = 0;
  else
    v11 = 2;
  objc_msgSend(v4, "setTextAlignment:", v11);
  v12 = objc_msgSend(v2, "systemBlueColor");
  objc_msgSend(v4, "setTextColor:", v12);

  objc_msgSend(v4, "setAdjustsFontForContentSizeCategory:", 1);
  v13 = *(void **)&v0[qword_1005DA258];
  v14 = objc_msgSend(v5, "preferredFontForTextStyle:", UIFontTextStyleHeadline);
  objc_msgSend(v13, "setFont:", v14);

  objc_msgSend(v13, "setNumberOfLines:", 0);
  v15 = objc_msgSend(v2, "labelColor");
  objc_msgSend(v13, "setTextColor:", v15);

  objc_msgSend(v13, "setAdjustsFontForContentSizeCategory:", 1);
  v16 = *(void **)&v0[qword_1005DA260];
  v17 = objc_msgSend(v5, "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
  objc_msgSend(v16, "setFont:", v17);

  objc_msgSend(v16, "setNumberOfLines:", 0);
  v18 = objc_msgSend(v2, "secondaryLabelColor");
  objc_msgSend(v16, "setTextColor:", v18);

  objc_msgSend(v16, "setAdjustsFontForContentSizeCategory:", 1);
  v19 = *(void **)&v0[qword_1005DA278];
  CGAffineTransformMakeScale(&v23, 0.9, 0.9);
  objc_msgSend(v19, "setTransform:", &v23);
  v20 = *(void **)&v0[qword_1005DA280];
  if (qword_1005D1CD8 != -1)
    swift_once(&qword_1005D1CD8, sub_100008DD0);
  objc_msgSend(v20, "setBackgroundColor:", qword_1005F5230);
  v21 = *(void **)&v0[qword_1005DA288];
  v22 = objc_msgSend(v2, "secondaryLabelColor");
  objc_msgSend(v21, "setTintColor:", v22);

}

uint64_t type metadata accessor for FMSubtitleLabel()
{
  return objc_opt_self(_TtC6FindMy15FMSubtitleLabel);
}

char *sub_10003C594()
{
  void *v0;
  char *v1;
  void *v2;
  void *v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  NSString v12;

  v1 = (char *)objc_msgSend(v0, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v1, "setIsAccessibilityElement:", 1);
  v2 = *(void **)&v1[OBJC_IVAR____TtC6FindMy13FMBatteryView_outlineView];
  objc_msgSend(v1, "addSubview:", v2);
  v3 = *(void **)&v1[OBJC_IVAR____TtC6FindMy13FMBatteryView_levelView];
  objc_msgSend(v1, "addSubview:", v3);
  v4 = *(void **)&v1[OBJC_IVAR____TtC6FindMy13FMBatteryView_chargingView];
  objc_msgSend(v1, "addSubview:", v4);
  objc_msgSend(v1, "bounds");
  objc_msgSend(v2, "setFrame:");
  objc_msgSend(v3, "setAutoresizingMask:", 20);
  objc_msgSend(v1, "bounds");
  v6 = v5;
  v8 = v7;
  if (qword_1005D1FA0 != -1)
    swift_once(&qword_1005D1FA0, sub_10005EEBC);
  v9 = v6 + v8 * 0.5 - *(double *)&qword_1005F5E60;
  objc_msgSend(v1, "bounds");
  objc_msgSend(v4, "setCenter:", v9, v11 + v10 * 0.5);
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setAccessibilityIdentifier:", v12);

  return v1;
}

void sub_10003C768(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  char *v10;
  NSString v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  NSString v16;
  id v17;
  id v18;
  NSString v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  objc_super v24;

  v9 = OBJC_IVAR____TtC6FindMy13FMBatteryView_outlineView;
  v10 = v4;
  v11 = String._bridgeToObjectiveC()();
  v12 = (void *)objc_opt_self(UIImage);
  v13 = objc_msgSend(v12, "imageNamed:", v11);

  v14 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v13);
  *(_QWORD *)&v4[v9] = v14;
  v15 = OBJC_IVAR____TtC6FindMy13FMBatteryView_chargingView;
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend(v12, "imageNamed:", v16);

  v18 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v17);
  *(_QWORD *)&v10[v15] = v18;
  v19 = String._bridgeToObjectiveC()();
  v20 = objc_msgSend(v12, "imageNamed:", v19);

  if (v20)
  {
    v21 = OBJC_IVAR____TtC6FindMy13FMBatteryView_levelView;
    v22 = objc_msgSend(v20, "imageWithRenderingMode:", 2);

    v23 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v22);
    *(_QWORD *)&v10[v21] = v23;
    v10[OBJC_IVAR____TtC6FindMy13FMBatteryView_isCharging] = 0;
    *(_QWORD *)&v10[OBJC_IVAR____TtC6FindMy13FMBatteryView_level] = 0;
    v10[OBJC_IVAR____TtC6FindMy13FMBatteryView_isLowPowerEnabled] = 0;
    v10[OBJC_IVAR____TtC6FindMy13FMBatteryView_shouldShowLowPowerWarning] = 0;

    v24.receiver = v10;
    v24.super_class = (Class)type metadata accessor for FMBatteryView();
    objc_msgSendSuper2(&v24, "initWithFrame:", a1, a2, a3, a4);
  }
  else
  {
    __break(1u);
  }
}

double sub_10003C9BC(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6;
  id v7;
  double v8;
  double v9;

  v6 = a3;
  v7 = a1;
  sub_10003CA18(v6, a4);
  v9 = v8;

  return v9;
}

id sub_10003CA18(void *a1, uint64_t a2)
{
  id v4;
  void *v5;
  id result;
  id v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;

  v4 = sub_10003CB18(a1, a2);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, "sizeToFit");
    objc_msgSend(v5, "frame");

  }
  result = objc_msgSend(a1, "dataSource");
  if (result)
  {
    v7 = result;
    ObjectType = swift_getObjectType(result);
    v9 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for FMListDataSource);
    if (v9)
      v10 = v9;
    else
      v10 = 0;
    if (v9)
      v11 = v7;
    else
      v11 = 0;
    if (v11)
    {
      v12 = swift_getObjectType(v11);
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v10 + 136))(a1, a2, v12, v10);
    }
    return (id)swift_unknownObjectRelease(v7);
  }
  return result;
}

id sub_10003CB18(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  NSString v12;
  id v13;
  void *v14;
  unsigned __int8 v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  void (*v24)(_QWORD *, _QWORD);
  id v25;
  void (*v26)(_QWORD *, _QWORD);
  void (*v27)(_QWORD *, _QWORD);
  _QWORD *v28;
  uint64_t v29;
  id v30;
  id v31;
  id v32;
  uint64_t ObjectType;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v41;
  id v42;
  uint64_t v43;
  _QWORD v44[5];

  v43 = a2;
  v4 = type metadata accessor for UIListContentConfiguration.TextProperties.TextTransform(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for UIListContentConfiguration(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(a1, "dequeueReusableHeaderFooterViewWithIdentifier:", v12);

  if (!v13)
    return v13;
  static UIListContentConfiguration.groupedHeader()();
  v14 = *(void **)(v2 + qword_1005DD838);
  v15 = objc_msgSend(v14, "respondsToSelector:", "tableView:titleForHeaderInSection:");
  v41 = v9;
  v42 = a1;
  if ((v15 & 1) == 0)
    goto LABEL_6;
  v16 = (void *)swift_unknownObjectRetain(v14);
  v17 = objc_msgSend(v16, "tableView:titleForHeaderInSection:", a1, v43);
  if (!v17)
  {
    swift_unknownObjectRelease(v14);
LABEL_6:
    v19 = 0;
    v21 = 0;
    goto LABEL_7;
  }
  v18 = v17;
  v19 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  v21 = v20;
  swift_unknownObjectRelease(v14);

LABEL_7:
  UIListContentConfiguration.text.setter(v19, v21);
  v22 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  v23 = sub_10003CEE8(2);

  v24 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.textProperties.modify(v44);
  UIListContentConfiguration.TextProperties.font.setter(v23);
  v24(v44, 0);
  v25 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  v26 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.textProperties.modify(v44);
  UIListContentConfiguration.TextProperties.color.setter(v25);
  v26(v44, 0);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for UIListContentConfiguration.TextProperties.TextTransform.none(_:), v4);
  v27 = (void (*)(_QWORD *, _QWORD))UIListContentConfiguration.textProperties.modify(v44);
  UIListContentConfiguration.TextProperties.transform.setter(v7);
  v27(v44, 0);
  v44[3] = v8;
  v44[4] = &protocol witness table for UIListContentConfiguration;
  v28 = sub_10003D370(v44);
  v29 = v41;
  (*(void (**)(_QWORD *, char *, uint64_t))(v41 + 16))(v28, v11, v8);
  UITableViewHeaderFooterView.contentConfiguration.setter(v44);
  v30 = v42;
  v31 = objc_msgSend(v42, "dataSource");
  if (v31)
  {
    v32 = v31;
    ObjectType = swift_getObjectType(v31);
    v34 = swift_conformsToProtocol2(ObjectType, &protocol descriptor for FMListDataSource);
    if (v34)
      v35 = v34;
    else
      v35 = 0;
    if (v34)
      v36 = v32;
    else
      v36 = 0;
    if (v36)
    {
      v37 = swift_getObjectType(v36);
      v38 = (*(uint64_t (**)(id, uint64_t, uint64_t, uint64_t))(v35 + 136))(v30, v43, v37, v35);
      swift_unknownObjectRelease(v32);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v8);
      if ((v38 & 1) != 0)
        return v13;
      goto LABEL_20;
    }
    swift_unknownObjectRelease(v32);
  }
  if (!v43)
  {

    (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v8);
    return 0;
  }
  v39 = (uint64_t)objc_msgSend(v30, "numberOfSections");
  (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v8);
  if (v39 <= 1)
  {
LABEL_20:

    return 0;
  }
  return v13;
}

BOOL sub_10003CEBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return a2 == 2
      && *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_fenceCellModels) + 16) != 0;
}

uint64_t sub_10003CEE8(uint64_t a1)
{
  void *v1;
  id v3;
  id v4;
  id v5;
  uint64_t result;
  Swift::String v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;

  v3 = objc_msgSend(v1, "fontDescriptor");
  v4 = objc_msgSend(v3, "fontDescriptorWithSymbolicTraits:", a1);

  if (v4)
  {
    v5 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v4, 0.0);

    return (uint64_t)v5;
  }
  else
  {
    v10 = 0;
    v11 = 0xE000000000000000;
    _StringGuts.grow(_:)(61);
    v7._object = (void *)0x80000001004AD300;
    v7._countAndFlagsBits = 0xD00000000000003BLL;
    String.append(_:)(v7);
    v9 = a1;
    type metadata accessor for SymbolicTraits(0);
    _print_unlocked<A, B>(_:_:)(&v9, &v10, v8, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v10, v11, "FindMy/UIFont+Styles.swift", 26, 2, 63, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_10003D0A4(uint64_t a1)
{
  uint64_t v1;
  id v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t countAndFlagsBits;
  Swift::String v7;
  unint64_t v9;

  if (*(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_fenceCellModels) + 16))
  {
    if (a1 == 2)
    {
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(0xE000000000000000);
      v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v4 = 0xD00000000000002DLL;
      v9 = 0x80000001004C84D0;
      v5 = 0x80000001004C84B0;
      v3 = 0xD00000000000001BLL;
      goto LABEL_7;
    }
    if (a1 == 1)
    {
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(0xE000000000000000);
      v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v3 = 0xD000000000000029;
      v4 = 0xD00000000000003BLL;
      v9 = 0x80000001004C8530;
      v5 = 0x80000001004C8500;
LABEL_7:
      v7._countAndFlagsBits = 0;
      v7._object = (void *)0xE000000000000000;
      countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, (Swift::String_optional)0, (NSBundle)v2, v7, *(Swift::String *)&v4)._countAndFlagsBits;

      return countAndFlagsBits;
    }
  }
  return 0;
}

_QWORD *sub_10003D218(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;

  v6 = a2(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v18 - v8;
  v10 = *(_QWORD *)(a1 + 16);
  v11 = _swiftEmptyArrayStorage;
  if (v10)
  {
    v21 = _swiftEmptyArrayStorage;
    sub_10003D3C4(0, v10, 0);
    v11 = v21;
    v12 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v13 = *(_QWORD *)(v7 + 72);
    do
    {
      sub_10004FC74(v12, (uint64_t)v9, a2);
      v21 = v11;
      v15 = v11[2];
      v14 = v11[3];
      if (v15 >= v14 >> 1)
      {
        sub_10003D3C4(v14 > 1, v15 + 1, 1);
        v11 = v21;
      }
      v19 = v6;
      v20 = a3;
      v16 = sub_10003D370(&v18);
      sub_10004FC74((uint64_t)v9, (uint64_t)v16, a2);
      v11[2] = v15 + 1;
      sub_10003D3AC(&v18, (uint64_t)&v11[5 * v15 + 4]);
      sub_10004FCB8((uint64_t)v9, a2);
      v12 += v13;
      --v10;
    }
    while (v10);
  }
  return v11;
}

_QWORD *sub_10003D370(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (_QWORD *)v2;
  }
  return v1;
}

uint64_t sub_10003D3AC(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_10003D3C4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_10011285C(a1, a2, a3, (_QWORD *)*v3, &qword_1005D55E8, (uint64_t *)&unk_1005D6750);
  *v3 = result;
  return result;
}

uint64_t sub_10003D3F0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_10011285C(a1, a2, a3, a4, &qword_1005D55E8, (uint64_t *)&unk_1005D6750);
}

void sub_10003D404()
{
  uint64_t v0;

  sub_10003D40C(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_10003D40C(void *a1, uint64_t a2)
{
  id v4;
  id v5;
  id v6;

  v4 = objc_msgSend((id)objc_opt_self(NSRunLoop), "currentRunLoop");
  objc_msgSend(v4, "addTimer:forMode:", a1, NSRunLoopCommonModes);

  v6 = *(id *)(a2 + 32);
  *(_QWORD *)(a2 + 32) = a1;
  v5 = a1;

}

id sub_10003D494()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 32), "invalidate");
}

void sub_10003D4A4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  void *v10;
  Class isa;
  Class v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;

  v9 = OBJC_IVAR____TtC6FindMy19FMMapViewController_isUserActionEnabled;
  *(_BYTE *)(a1 + OBJC_IVAR____TtC6FindMy19FMMapViewController_isUserActionEnabled) = 0;
  v10 = *(void **)(a1 + OBJC_IVAR____TtC6FindMy19FMMapViewController_mapView);
  sub_100053F2C(&qword_1005E1120);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v10, "removeAnnotations:", isa);

  v12 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v10, "addAnnotations:", v12);

  if ((unint64_t)a4 >> 62)
  {
    if (a4 < 0)
      v16 = a4;
    else
      v16 = a4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a4);
    v13 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a4);
    if (!v13)
      goto LABEL_14;
  }
  else
  {
    v13 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v13)
      goto LABEL_14;
  }
  if (v13 < 1)
  {
    __break(1u);
    goto LABEL_38;
  }
  swift_bridgeObjectRetain(a4);
  v14 = 0;
  do
  {
    if ((a4 & 0xC000000000000001) != 0)
    {
      v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(v14, a4);
    }
    else
    {
      v15 = *(_QWORD *)(a4 + 8 * v14 + 32);
      swift_unknownObjectRetain(v15);
    }
    ++v14;
    v26 = v15;
    sub_10035C734((uint64_t *)&v26, a1);
    swift_unknownObjectRelease(v15);
  }
  while (v13 != v14);
  swift_bridgeObjectRelease(a4);
LABEL_14:
  v26 = a3;
  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRetain(a3);
  sub_10003D774(a4);
  v17 = v26;
  v18 = v26 >> 62;
  if (v26 >> 62)
  {
    if ((v26 & 0x8000000000000000) != 0)
      v23 = v26;
    else
      v23 = v26 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v26);
    v24 = _CocoaArrayWrapper.endIndex.getter(v23);
    swift_bridgeObjectRelease(v17);
    if (!v24)
      goto LABEL_31;
  }
  else if (!*(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_31:
    swift_bridgeObjectRelease(v17);
    *(_BYTE *)(a1 + v9) = 1;
    return;
  }
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC6FindMy19FMMapViewController_isPOISelected) & 1) != 0)
    goto LABEL_31;
  if (v18)
  {
    if (v17 < 0)
      v20 = v17;
    else
      v20 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n(v17, 2);
    v19 = _CocoaArrayWrapper.endIndex.getter(v20);
    if (!v19)
      goto LABEL_30;
  }
  else
  {
    v19 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(v17, 2);
    if (!v19)
    {
LABEL_30:
      swift_bridgeObjectRelease_n(v17, 2);
      goto LABEL_31;
    }
  }
  if (v19 >= 1)
  {
    v21 = 0;
    do
    {
      if ((v17 & 0xC000000000000001) != 0)
      {
        v22 = specialized _ArrayBuffer._getElementSlowPath(_:)(v21, v17);
      }
      else
      {
        v22 = *(_QWORD *)(v17 + 8 * v21 + 32);
        swift_unknownObjectRetain(v22);
      }
      ++v21;
      v25 = v22;
      sub_10035CBE0(&v25, a5, a1);
      swift_unknownObjectRelease(v22);
    }
    while (v19 != v21);
    goto LABEL_30;
  }
LABEL_38:
  __break(1u);
}

uint64_t sub_10003D774(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v4 < 0)
    v17 = *v1;
  else
    v17 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v1);
  v5 = _CocoaArrayWrapper.endIndex.getter(v17);
  swift_bridgeObjectRelease(v4);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_29;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if ((unint64_t)v4 >> 62)
    goto LABEL_31;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain(v4);
    v4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v5, v9, 1, v4);
    swift_bridgeObjectRelease(*v1);
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_10003D92C(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1);
    if (v11 >= v3)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v4 < 0)
      v18 = v4;
    else
      v18 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v9 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v4);
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    v15 = swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v15);
  }
  __break(1u);
  return result;
}

uint64_t sub_10003D92C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t *v18[4];

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1003F7090((unint64_t *)&unk_1005E3BF8, &qword_1005E3BF0);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_100053F2C(&qword_1005E3BF0);
          v13 = sub_100200254(v18, i, a3);
          v15 = *v14;
          swift_unknownObjectRetain(*v14);
          ((void (*)(uint64_t **, _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100053F2C(&qword_1005E1120);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

double sub_10003DB34()
{
  uint64_t *v0;

  return sub_10003DB44(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

double sub_10003DB44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v34 = a1;
  v10 = *(void **)(a2 + 40);
  swift_bridgeObjectRetain(a1);
  v11 = objc_msgSend(v10, "overlays");
  v12 = sub_100053F2C((uint64_t *)&unk_1005E1100);
  v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

  swift_bridgeObjectRetain(a1);
  v14 = sub_10003DDB4(v13, a1, &v34);
  swift_bridgeObjectRelease(v13);
  swift_bridgeObjectRelease(a1);
  Strong = swift_unknownObjectWeakLoadStrong(a2 + 24);
  if (!Strong)
    goto LABEL_7;
  v16 = Strong;
  if (!((unint64_t)a3 >> 62))
  {
    v17 = swift_bridgeObjectRetain(a3);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v17);
    if (!((unint64_t)a4 >> 62))
      goto LABEL_4;
LABEL_15:
    if (a4 < 0)
      v28 = a4;
    else
      v28 = a4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a4);
    v29 = sub_100053F2C(&qword_1005E1120);
    v30 = _bridgeCocoaArray<A>(_:)(v28, v29);
    swift_bridgeObjectRelease(a4);
    a4 = v30;
    if (!((unint64_t)a5 >> 62))
      goto LABEL_5;
LABEL_19:
    if (a5 < 0)
      v31 = a5;
    else
      v31 = a5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a5);
    v32 = sub_100053F2C(&qword_1005E1120);
    v33 = _bridgeCocoaArray<A>(_:)(v31, v32);
    swift_bridgeObjectRelease(a5);
    a5 = v33;
    goto LABEL_6;
  }
  if (a3 < 0)
    v25 = a3;
  else
    v25 = a3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a3);
  v26 = sub_100053F2C(&qword_1005E1120);
  v27 = _bridgeCocoaArray<A>(_:)(v25, v26);
  swift_bridgeObjectRelease(a3);
  a3 = v27;
  if ((unint64_t)a4 >> 62)
    goto LABEL_15;
LABEL_4:
  v18 = swift_bridgeObjectRetain(a4);
  dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v18);
  if ((unint64_t)a5 >> 62)
    goto LABEL_19;
LABEL_5:
  v19 = swift_bridgeObjectRetain(a5);
  dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v19);
LABEL_6:
  sub_10004F4A4(a2, a3, a4, a5);
  swift_bridgeObjectRelease(a3);
  swift_bridgeObjectRelease(a4);
  swift_bridgeObjectRelease(a5);
  swift_unknownObjectRelease(v16);
LABEL_7:
  v20 = swift_unknownObjectWeakLoadStrong(a2 + 24);
  if (v20)
  {
    v21 = v20;
    v22 = v34;
    v23 = swift_bridgeObjectRetain(v34);
    sub_10003E140(v23, (uint64_t)v14);
    swift_bridgeObjectRelease(v22);
    swift_bridgeObjectRelease(v14);
    swift_unknownObjectRelease(v21);
  }
  else
  {
    swift_bridgeObjectRelease(v14);
    v22 = v34;
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v22).n128_u64[0];
  return result;
}

_QWORD *sub_10003DDB4(unint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;

  v4 = a1;
  if (a1 >> 62)
    goto LABEL_41;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v5)
  {
    v6 = 0;
    v31 = v4 + 32;
    v7 = a2 & 0xFFFFFFFFFFFFFF8;
    v33 = v5;
    if (a2 < 0)
      v7 = a2;
    v32 = v7;
    v35 = v4 & 0xC000000000000001;
    v34 = v4;
    while (1)
    {
      if (!v35)
      {
        v8 = *(_QWORD *)(v31 + 8 * v6);
        swift_unknownObjectRetain(v8);
        v9 = __OFADD__(v6, 1);
        v10 = v6 + 1;
        if (v9)
          break;
        goto LABEL_11;
      }
      v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v4);
      v9 = __OFADD__(v6, 1);
      v10 = v6 + 1;
      if (v9)
        break;
LABEL_11:
      v36 = v10;
      if ((unint64_t)a2 >> 62)
      {
        swift_unknownObjectRetain(v8);
        swift_bridgeObjectRetain(a2);
        v11 = _CocoaArrayWrapper.endIndex.getter(v32);
        if (v11)
        {
LABEL_15:
          v12 = 0;
          do
          {
            if ((a2 & 0xC000000000000001) != 0)
            {
              v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(v12, a2);
              v14 = v12 + 1;
              if (__OFADD__(v12, 1))
                goto LABEL_39;
            }
            else
            {
              v13 = *(_QWORD *)(a2 + 8 * v12 + 32);
              swift_unknownObjectRetain(v13);
              v14 = v12 + 1;
              if (__OFADD__(v12, 1))
              {
LABEL_39:
                __break(1u);
                goto LABEL_40;
              }
            }
            v15 = objc_opt_self(MKCircle);
            v16 = swift_dynamicCastObjCClass(v8, v15);
            if (v16)
            {
              v4 = v16;
              v17 = objc_opt_self(MKCircle);
              v18 = swift_dynamicCastObjCClass(v13, v17);
              if (v18)
              {
                v19 = v18;
                v20 = sub_100006C5C(0, (unint64_t *)&qword_1005D7A60, NSObject_ptr);
                swift_unknownObjectRetain(v8);
                swift_unknownObjectRetain(v13);
                v21 = v4;
                v4 = v20;
                if ((static NSObject.== infix(_:_:)(v21, v19) & 1) != 0)
                {
                  v4 = *a3;
                  if ((unint64_t)*a3 >> 62)
                  {
                    if (v4 < 0)
                      v22 = *a3;
                    else
                      v22 = v4 & 0xFFFFFFFFFFFFFF8;
                    swift_bridgeObjectRetain(*a3);
                    v23 = _CocoaArrayWrapper.endIndex.getter(v22);
                    swift_bridgeObjectRelease(v4);
                    if (v12 < v23)
                    {
LABEL_33:
                      swift_bridgeObjectRelease(a2);
                      v24 = sub_1001FFD68(v12);
                      swift_unknownObjectRelease(v24);
                      swift_unknownObjectRelease_n(v8, 3);
                      swift_unknownObjectRelease_n(v13, 2);
                      goto LABEL_37;
                    }
                  }
                  else if (v12 < *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
                  {
                    goto LABEL_33;
                  }
                }
                swift_unknownObjectRelease(v8);
                swift_unknownObjectRelease(v13);
              }
            }
            swift_unknownObjectRelease(v13);
            ++v12;
          }
          while (v14 != v11);
        }
      }
      else
      {
        v11 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_unknownObjectRetain(v8);
        swift_bridgeObjectRetain(a2);
        if (v11)
          goto LABEL_15;
      }
      swift_unknownObjectRelease(v8);
      v25 = swift_bridgeObjectRelease(a2);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
      v27 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v26 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v27 >= v26 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v26 > 1, v27 + 1, 1);
      v28 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v8);
      specialized Array._endMutation()(v28);
LABEL_37:
      v4 = v34;
      v6 = v36;
      if (v36 == v33)
      {
        swift_bridgeObjectRelease(v34);
        return _swiftEmptyArrayStorage;
      }
    }
LABEL_40:
    __break(1u);
LABEL_41:
    if (v4 < 0)
      v30 = v4;
    else
      v30 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v5 = _CocoaArrayWrapper.endIndex.getter(v30);
  }
  swift_bridgeObjectRelease(v4);
  return _swiftEmptyArrayStorage;
}

void sub_10003E10C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMSelectedSection(0) - 8) + 80);
  sub_10003D4A4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), v0 + ((v1 + 48) & ~v1));
}

void sub_10003E140(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  Class isa;
  NSArray v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v6 = type metadata accessor for Logger(0);
  sub_100056D88(v6, (uint64_t)qword_1005F5748);
  swift_bridgeObjectRetain_n(a1, 2);
  v7 = swift_bridgeObjectRetain_n(a2, 2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc(22, -1);
    *(_DWORD *)v10 = 134218240;
    if ((unint64_t)a1 >> 62)
    {
      if (a1 < 0)
        v19 = a1;
      else
        v19 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v11 = _CocoaArrayWrapper.endIndex.getter(v19);
      swift_bridgeObjectRelease(a1);
    }
    else
    {
      v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(a1);
    v21 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22);
    swift_bridgeObjectRelease(a1);
    *(_WORD *)(v10 + 12) = 2048;
    if ((unint64_t)a2 >> 62)
    {
      if (a2 < 0)
        v20 = a2;
      else
        v20 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      v12 = _CocoaArrayWrapper.endIndex.getter(v20);
      swift_bridgeObjectRelease(a2);
    }
    else
    {
      v12 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(a2);
    v21 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22);
    swift_bridgeObjectRelease(a2);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "FMMapViewController: data source didUpdateOverlays added: %ld, removed: %ld", (uint8_t *)v10, 0x16u);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease_n(a2, 2);
  }
  if (((1 << *(_BYTE *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC6FindMy19FMMapViewController_dataSource) + 56)) & 0x16) != 0)
  {
    v13 = *(void **)(v3 + OBJC_IVAR____TtC6FindMy19FMMapViewController_mapView);
    sub_100053F2C((uint64_t *)&unk_1005E1100);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v13, "removeOverlays:", isa);

    v15.super.isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v13, "addOverlays:", v15.super.isa);
  }
  else
  {
    v16 = *(void **)(v3 + OBJC_IVAR____TtC6FindMy19FMMapViewController_mapView);
    v15.super.isa = (Class)objc_msgSend(v16, "overlays");
    if (!v15.super.isa)
    {
      v17 = sub_100053F2C((uint64_t *)&unk_1005E1100);
      v18 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v17);
      v15.super.isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v18);
    }
    objc_msgSend(v16, "removeOverlays:", v15.super.isa);
  }

}

uint64_t sub_10003E448()
{
  uint64_t v0;

  return sub_10003E458(*(_QWORD **)(v0 + 16), *(_BYTE *)(v0 + 24), *(_BYTE *)(v0 + 25));
}

uint64_t sub_10003E458(_QWORD *a1, char a2, char a3)
{
  void *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  BOOL v14;
  uint64_t v15;

  LOBYTE(v3) = a3;
  LOBYTE(v4) = a2;
  v5 = (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0xF8))();
  v6 = v5;
  if (v5 >> 62)
  {
    while (1)
    {
      v15 = v6 < 0 ? v6 : v6 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v6);
      v7 = _CocoaArrayWrapper.endIndex.getter(v15);
      if (!v7)
        break;
LABEL_3:
      v8 = v6 & 0xC000000000000001;
      v9 = v3 & (v4 ^ 1);
      if ((v4 & 1) != 0)
        v10 = 1.0;
      else
        v10 = 0.0;
      v11 = 4;
      v12 = 0;
      if (v8)
      {
LABEL_7:
        v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v12, v6);
        goto LABEL_9;
      }
      while (1)
      {
        v13 = *(id *)(v6 + 8 * v11);
LABEL_9:
        v3 = v13;
        v14 = __OFADD__(v12, 1);
        v4 = v12 + 1;
        if (v14)
          break;
        objc_msgSend(v13, "setAlpha:", v10);
        if ((v9 & 1) != objc_msgSend(v3, "isHidden"))
          objc_msgSend(v3, "setHidden:");

        if (v4 == v7)
          return swift_bridgeObjectRelease_n(v6, 2);
        v12 = ++v11 - 4;
        if (v8)
          goto LABEL_7;
      }
      __break(1u);
    }
  }
  else
  {
    v7 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v5);
    if (v7)
      goto LABEL_3;
  }
  return swift_bridgeObjectRelease_n(v6, 2);
}

uint64_t sub_10003E5BC()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v14;
  uint64_t v15;

  v1 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v2 = objc_msgSend(v1, "preferredContentSizeCategory");

  LOBYTE(v1) = UIContentSizeCategory.isAccessibilityCategory.getter(v2);
  v3 = sub_100053F2C(&qword_1005D2F10);
  if ((v1 & 1) != 0)
  {
    v4 = swift_allocObject(v3, 56, 7);
    *(_OWORD *)(v4 + 16) = xmmword_1004820C0;
    v5 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_iconViewContainer);
    v6 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_titleLabel);
    *(_QWORD *)(v4 + 32) = v5;
    *(_QWORD *)(v4 + 40) = v6;
    v7 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_messageLabel);
    *(_QWORD *)(v4 + 48) = v7;
    v14 = v4;
    specialized Array._endMutation()(v4);
    v8 = v14;
    v9 = v5;
  }
  else
  {
    v10 = swift_allocObject(v3, 48, 7);
    *(_OWORD *)(v10 + 16) = xmmword_1004820B0;
    v6 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_titleLabel);
    v7 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_messageLabel);
    *(_QWORD *)(v10 + 32) = v6;
    *(_QWORD *)(v10 + 40) = v7;
    v15 = v10;
    specialized Array._endMutation()(v10);
    v8 = v15;
  }
  v11 = v6;
  v12 = v7;
  return v8;
}

void sub_10003E6F8()
{
  uint64_t v0;

  sub_10003E714(*(_QWORD *)(v0 + 16), 0);
}

void sub_10003E714(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  NSObject *v7;
  NSObject *v8;

  v3 = *(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator);
  v4 = *(_QWORD *)(v3 + 48);
  swift_retain(v4);
  v6 = dispatch thunk of FMFManager.friends.getter(v5);
  swift_release(v4);
  v7 = *(NSObject **)(*(_QWORD *)(v3 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
  v8 = v7;
  sub_10003E7B8(v6, v7, 0, a2);
  swift_bridgeObjectRelease(v6);

}

double sub_10003E7B8(uint64_t a1, NSObject *a2, uint64_t a3, char a4)
{
  char *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  NSObject *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  NSObject *v35;
  NSObject *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  _QWORD *v49;
  _QWORD aBlock[5];
  uint64_t v51;
  char v52[24];

  v48 = a2;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v4[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_updatesEnabled] & 1) != 0 || (a4 & 1) != 0)
  {
    if ((objc_msgSend(*(id *)&v4[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_tableView], "isEditing") & 1) != 0)
    {
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v17 = type metadata accessor for Logger(0);
      v18 = sub_100056D88(v17, (uint64_t)qword_1005F5748);
      v48 = Logger.logObject.getter(v18);
      v19 = static os_log_type_t.default.getter(v48);
      if (os_log_type_enabled(v48, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v20 = 0;
        _os_log_impl((void *)&_mh_execute_header, v48, v19, "FMPeopleListDataSource: Ignoring data source update due to editing mode", v20, 2u);
        swift_slowDealloc(v20, -1, -1);
      }

    }
    else
    {
      v42 = v13;
      v43 = v12;
      v44 = v9;
      v21 = (uint64_t *)&v4[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_cellsViewModel];
      swift_beginAccess(&v4[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_cellsViewModel], v52, 0, 0);
      v22 = *v21;
      v23 = *(_QWORD *)&v4[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_fenceCellModels];
      v24 = swift_allocObject(&unk_100568900, 65, 7);
      *(_QWORD *)(v24 + 16) = v4;
      *(_QWORD *)(v24 + 24) = a1;
      *(_QWORD *)(v24 + 32) = v48;
      *(_QWORD *)(v24 + 40) = a3;
      v46 = v22;
      v47 = a3;
      *(_QWORD *)(v24 + 48) = v22;
      *(_QWORD *)(v24 + 56) = v23;
      v45 = v23;
      *(_BYTE *)(v24 + 64) = a4 & 1;
      if (*(_QWORD *)(a1 + 16) < 3uLL || (a4 & 1) != 0)
      {
        v35 = v48;
        v36 = v48;
        swift_bridgeObjectRetain(a1);
        v37 = v4;
        v38 = v46;
        swift_bridgeObjectRetain_n(v46, 2);
        v39 = v45;
        swift_bridgeObjectRetain_n(v45, 2);
        v40 = v47;
        swift_bridgeObjectRetain(v47);
        sub_100053F6C(v37, a1, v35, v40, v38, v39, a4 & 1);
        swift_bridgeObjectRelease(v39);
        swift_bridgeObjectRelease(v38);
        v34 = v24;
      }
      else
      {
        v25 = swift_allocObject(&unk_100568928, 32, 7);
        *(_QWORD *)(v25 + 16) = sub_100037E24;
        *(_QWORD *)(v25 + 24) = v24;
        aBlock[4] = sub_100021E58;
        v51 = v25;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100037DF8;
        aBlock[3] = &unk_100568940;
        v26 = _Block_copy(aBlock);
        v27 = v48;
        swift_bridgeObjectRetain(a1);
        v28 = v4;
        swift_retain(v24);
        swift_bridgeObjectRetain(v46);
        swift_bridgeObjectRetain(v45);
        v29 = swift_bridgeObjectRetain(v47);
        static DispatchQoS.unspecified.getter(v29);
        v49 = _swiftEmptyArrayStorage;
        v30 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v31 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
        v32 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
        dispatch thunk of SetAlgebra.init<A>(_:)(&v49, v31, v32, v8, v30);
        OS_dispatch_queue.async(group:qos:flags:execute:)(0, v16, v11, v26);
        _Block_release(v26);
        v33 = swift_release(v24);
        (*(void (**)(char *, uint64_t, __n128))(v44 + 8))(v11, v8, v33);
        (*(void (**)(char *, uint64_t))(v42 + 8))(v16, v43);
        v34 = v51;
      }
      *(_QWORD *)&result = swift_release(v34).n128_u64[0];
    }
  }
  return result;
}

double sub_10003EBE8()
{
  uint64_t v0;

  return sub_10003EBF0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

double sub_10003EBF0(uint64_t a1, uint64_t a2)
{
  if (*(unsigned __int8 *)(a1 + 56) - 1 < 2)
    return sub_100406EC4(a2);
  *(_BYTE *)(a1 + 57) = 0;
  return sub_10003F4F8(a2);
}

void sub_10003EC34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = v1;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v4 = type metadata accessor for Logger(0);
  sub_100056D88(v4, (uint64_t)qword_1005F5748);
  swift_bridgeObjectRetain(a1);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v8 = 134217984;
    v19 = *(_QWORD *)(a1 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20);
    swift_bridgeObjectRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMPeopleProvider: didReceive: friends %ld", v8, 0xCu);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease(a1);
  }
  swift_beginAccess(v2 + 16, &v19, 0, 0);
  v9 = *(_QWORD *)(v2 + 16);
  if (!((unint64_t)v9 >> 62))
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(*(_QWORD *)(v2 + 16));
    if (v10)
      goto LABEL_8;
LABEL_21:
    swift_bridgeObjectRelease(v9);
    return;
  }
  if (v9 < 0)
    v18 = *(_QWORD *)(v2 + 16);
  else
    v18 = v9 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*(_QWORD *)(v2 + 16));
  v10 = _CocoaArrayWrapper.endIndex.getter(v18);
  if (!v10)
    goto LABEL_21;
LABEL_8:
  if (v10 >= 1)
  {
    for (i = 0; i != v10; ++i)
    {
      if ((v9 & 0xC000000000000001) != 0)
      {
        v15 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v9);
      }
      else
      {
        v15 = *(_QWORD *)(v9 + 8 * i + 32);
        swift_retain(v15);
      }
      v16 = v15 + OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_subscriber;
      Strong = swift_unknownObjectWeakLoadStrong(v15 + OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_subscriber);
      if (Strong)
      {
        v12 = Strong;
        v13 = *(_QWORD *)(v16 + 8);
        ObjectType = swift_getObjectType(Strong);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 24))(v2, a1, ObjectType, v13);
        swift_release(v15);
        swift_unknownObjectRelease(v12);
      }
      else
      {
        swift_release(v15);
      }
    }
    goto LABEL_21;
  }
  __break(1u);
}

uint64_t sub_10003EE7C(uint64_t a1, uint64_t a2)
{
  return sub_10003EE84(a2);
}

uint64_t sub_10003EE84(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  void **aBlock;
  _QWORD v29[4];
  uint64_t v30;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v27 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v11 = type metadata accessor for Logger(0);
  sub_100056D88(v11, (uint64_t)qword_1005F5748);
  swift_bridgeObjectRetain(a1);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v15 = 134217984;
    aBlock = *(void ***)(a1 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v29);
    swift_bridgeObjectRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "FMPeopleListDataSource: didUpdate %ld people", v15, 0xCu);
    swift_slowDealloc(v15, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease(a1);
  }
  sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v16 = (void *)static OS_dispatch_queue.main.getter();
  v17 = swift_allocObject(&unk_1005684F8, 24, 7);
  *(_QWORD *)(v17 + 16) = v2;
  v29[3] = sub_10003E6F8;
  v30 = v17;
  aBlock = _NSConcreteStackBlock;
  v29[0] = 1107296256;
  v29[1] = sub_100037DF8;
  v29[2] = &unk_100568510;
  v18 = _Block_copy(&aBlock);
  v19 = v30;
  v20 = v2;
  swift_release(v19);
  static DispatchQoS.unspecified.getter(v21);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v22 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v23 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v24 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v23, v24, v4, v22);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v10, v8);
}

uint64_t sub_10003F190(uint64_t a1, uint64_t a2)
{
  return sub_10003F1C8(a2, "FMMapViewDataSource: didUpdate %ld person", (uint64_t)&unk_100565110, (uint64_t)sub_10003EBE8, (uint64_t)&unk_100565128);
}

uint64_t sub_10003F1C8(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  char *v21;
  uint64_t v22;
  const char *v23;
  uint8_t *v24;
  const char *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void **aBlock;
  _QWORD v42[4];
  uint64_t v43;

  v38 = a4;
  v39 = a5;
  v37 = a3;
  v7 = v5;
  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v40 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v16 = type metadata accessor for Logger(0);
  sub_100056D88(v16, (uint64_t)qword_1005F5748);
  swift_bridgeObjectRetain(a1);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(12, -1);
    v36 = v15;
    v21 = v12;
    v22 = v9;
    v23 = a2;
    v24 = v20;
    *(_DWORD *)v20 = 134217984;
    aBlock = *(void ***)(a1 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v42);
    swift_bridgeObjectRelease(a1);
    v25 = v23;
    v9 = v22;
    v12 = v21;
    v15 = v36;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, v25, v24, 0xCu);
    swift_slowDealloc(v24, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease(a1);
  }
  sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v26 = (void *)static OS_dispatch_queue.main.getter();
  v27 = swift_allocObject(v37, 32, 7);
  *(_QWORD *)(v27 + 16) = v7;
  *(_QWORD *)(v27 + 24) = a1;
  v42[3] = v38;
  v43 = v27;
  aBlock = _NSConcreteStackBlock;
  v42[0] = 1107296256;
  v42[1] = sub_100037DF8;
  v42[2] = v39;
  v28 = _Block_copy(&aBlock);
  v29 = v43;
  swift_bridgeObjectRetain(a1);
  swift_retain(v7);
  swift_release(v29);
  static DispatchQoS.unspecified.getter(v30);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v31 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v32 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v33 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v32, v33, v9, v31);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v12, v28);
  _Block_release(v28);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v15, v13);
}

double sub_10003F4F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  double result;
  _QWORD v19[2];
  uint64_t v20;
  _QWORD *v21;
  _QWORD aBlock[5];
  _QWORD *v23;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v20 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = swift_allocObject(&unk_1005651B0, 24, 7);
  *(_QWORD *)(v10 + 16) = &_swiftEmptyDictionarySingleton;
  v19[1] = *(_QWORD *)(v1 + 88);
  v11 = (_QWORD *)swift_allocObject(&unk_100565548, 40, 7);
  v11[2] = a1;
  v11[3] = v10;
  v11[4] = v1;
  aBlock[4] = sub_100037E38;
  v23 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_100565560;
  v12 = _Block_copy(aBlock);
  swift_bridgeObjectRetain(a1);
  swift_retain(v10);
  v13 = swift_retain(v1);
  static DispatchQoS.unspecified.getter(v13);
  v21 = _swiftEmptyArrayStorage;
  v14 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v15 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v16 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v21, v15, v16, v3, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v9, v5, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v17 = v23;
  swift_release(v10);
  *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  return result;
}

uint64_t sub_10003F734(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_10004058C(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10003F774(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = sub_10004058C(a2);
    result = swift_getWitnessTable(a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_10003F7B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t i;
  uint64_t v20;
  char v21;
  BOOL v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void (*v27)(char *, uint64_t);
  void (*v28)(char *, char *, uint64_t);
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  char *v32;
  _QWORD *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  NSString v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(char *, unint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  _QWORD *v47;

  v3 = type metadata accessor for FMFRelationshipType(0);
  v46 = *(_QWORD *)(v3 - 8);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v38 - v7;
  v41 = type metadata accessor for FMFFriend(0);
  v9 = *(_QWORD *)(v41 - 8);
  v10 = __chkstk_darwin(v41);
  v45 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v13 = (char *)&v38 - v12;
  v14 = _swiftEmptyArrayStorage;
  v47 = _swiftEmptyArrayStorage;
  v15 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain(a1);
  if (v15)
  {
    v38 = a1;
    v39 = v1;
    v16 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v43 = *(_QWORD *)(v9 + 72);
    v44 = v9;
    v40 = v16;
    v17 = a1 + v16;
    v42 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v9 + 16);
    v18 = v41;
    for (i = v42(v13, a1 + v16, v41); ; i = v42(v13, v17, v18))
    {
      v21 = FMFFriend.optedNotToShare.getter(i);
      v22 = (v21 & 1) != 0 || v21 == 2;
      v23 = !v22;
      v24 = FMFFriend.relationshipType.getter();
      static FMFRelationshipType.willFollowMyLocation.getter(v24);
      v25 = sub_100008000((unint64_t *)&unk_1005D9C20, (uint64_t (*)(uint64_t))&type metadata accessor for FMFRelationshipType, (uint64_t)&protocol conformance descriptor for FMFRelationshipType);
      v26 = dispatch thunk of SetAlgebra.isSuperset(of:)(v6, v3, v25);
      v27 = *(void (**)(char *, uint64_t))(v46 + 8);
      v27(v6, v3);
      v27(v8, v3);
      if ((v26 & 1) != 0 || v23)
      {
        v28 = *(void (**)(char *, char *, uint64_t))(v44 + 32);
        v28(v45, v13, v18);
        v29 = v47;
        if ((swift_isUniquelyReferenced_nonNull_native(v47) & 1) == 0)
        {
          sub_100111E44(0, v29[2] + 1, 1);
          v29 = v47;
        }
        v31 = v29[2];
        v30 = v29[3];
        if (v31 >= v30 >> 1)
        {
          sub_100111E44(v30 > 1, v31 + 1, 1);
          v29 = v47;
        }
        v29[2] = v31 + 1;
        v20 = v43;
        v32 = (char *)v29 + v40 + v31 * v43;
        v18 = v41;
        v28(v32, v45, v41);
        v47 = v29;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v44 + 8))(v13, v18);
        v20 = v43;
      }
      v17 += v20;
      if (!--v15)
        break;
    }
    v14 = v47;
    a1 = v38;
    v1 = v39;
  }
  swift_bridgeObjectRelease(a1);
  v33 = (_QWORD *)v14[2];
  if (v33)
  {
    v34 = *(id *)(v1 + OBJC_IVAR____TtC6FindMy8FMTabBar_peopleTab);
    swift_release(v14);
    v47 = v33;
    dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    v36 = v35;
    v37 = String._bridgeToObjectiveC()();
    objc_msgSend(v34, "setBadgeValue:", v37, swift_bridgeObjectRelease(v36).n128_f64[0]);

  }
  else
  {
    objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC6FindMy8FMTabBar_peopleTab), "setBadgeValue:", 0, swift_release(v14).n128_f64[0]);
  }
}

uint64_t sub_10003FAF4(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = swift_getWitnessTable(a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

id sub_10003FB34(void *a1, char a2, id a3, void *a4, void *a5)
{
  if (a2 == 2)
  {
    objc_msgSend(a3, "setAlpha:", 0.0);
    if ((objc_msgSend(a3, "isHidden") & 1) == 0)
      objc_msgSend(a3, "setHidden:", 1);
  }
  else
  {
    objc_msgSend(a3, "setAlpha:", 1.0);
    if (objc_msgSend(a3, "isHidden"))
      objc_msgSend(a3, "setHidden:", 0);
    if ((a2 == 0) != objc_msgSend(a4, "isHidden"))
      objc_msgSend(a4, "setHidden:", a2 == 0);
    if ((a2 == 1) != objc_msgSend(a5, "isHidden"))
      objc_msgSend(a5, "setHidden:", a2 == 1);
  }
  return objc_msgSend(a1, "layoutIfNeeded");
}

uint64_t sub_10003FC64(uint64_t a1, uint64_t a2)
{
  return sub_10003FCB8(a2, (uint64_t)&unk_10054F4C8, (uint64_t)sub_10003FC94, (uint64_t)&unk_10054F4E0);
}

void sub_10003FC94()
{
  uint64_t v0;

  sub_10003F7B4(*(_QWORD *)(v0 + 24));
}

uint64_t sub_10003FCB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v8;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[5];
  uint64_t v31;

  v8 = v4;
  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v29 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v27 = *(_QWORD *)(v13 - 8);
  v28 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v16 = (void *)static OS_dispatch_queue.main.getter();
  v17 = swift_allocObject(a2, 32, 7);
  *(_QWORD *)(v17 + 16) = v4;
  *(_QWORD *)(v17 + 24) = a1;
  aBlock[4] = a3;
  v31 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = a4;
  v18 = _Block_copy(aBlock);
  v19 = v31;
  v20 = v8;
  swift_bridgeObjectRetain(a1);
  swift_release(v19);
  static DispatchQoS.unspecified.getter(v21);
  aBlock[0] = _swiftEmptyArrayStorage;
  v22 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v23 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v24 = sub_1000555E4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v23, v24, v10, v22);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v12, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v15, v28);
}

uint64_t sub_10003FEB4()
{
  return sub_100021F8C((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10003FB34);
}

void sub_10003FEC0()
{
  uint64_t v0;

  sub_10003FEC8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_10003FEC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  NSObject *v8;
  uint64_t v9;
  NSObject *v10;
  NSObject *v11;

  v3 = *(_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator) + 48);
  swift_retain(v3);
  v5 = dispatch thunk of FMFManager.friends.getter(v4);
  swift_release(v3);
  if (!((unint64_t)a2 >> 62))
  {
    v6 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a2);
    if (v6)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease(a2);
    v8 = 0;
    goto LABEL_12;
  }
  if (a2 < 0)
    v9 = a2;
  else
    v9 = a2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a2);
  if (!_CocoaArrayWrapper.endIndex.getter(v9))
    goto LABEL_11;
LABEL_3:
  if ((a2 & 0xC000000000000001) != 0)
  {
    v7 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
    goto LABEL_6;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v7 = *(id *)(a2 + 32);
LABEL_6:
    v10 = v7;
    swift_bridgeObjectRelease(a2);
    v8 = v10;
LABEL_12:
    v11 = v8;
    sub_10003E7B8(v5, v8, 0, 0);
    swift_bridgeObjectRelease(v5);

    return;
  }
  __break(1u);
}

void sub_10003FFE4()
{
  uint64_t v0;

  sub_10004000C(*(double *)(v0 + 24));
}

void sub_10004000C(double a1)
{
  char *v1;
  char *v2;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;
  double v18;
  double v19;
  __int128 v20;
  __int128 v21;
  double v22;

  v2 = v1;
  v4 = objc_msgSend(v1, "view");
  if (!v4)
  {
    __break(1u);
    goto LABEL_14;
  }
  v5 = v4;
  v6 = objc_msgSend(v4, "traitCollection");

  v7 = objc_msgSend(v6, "horizontalSizeClass");
  if (v7 != (id)1)
    return;
  v8 = objc_msgSend(v2, "view");
  if (!v8)
  {
LABEL_14:
    __break(1u);
    return;
  }
  v9 = v8;
  objc_msgSend(v8, "safeAreaInsets");
  v11 = v10;

  if (v11 == 0.0)
    v12 = -20.0;
  else
    v12 = 0.0;
  if (qword_1005D1D00 != -1)
    swift_once(&qword_1005D1D00, sub_10005DE04);
  v20 = xmmword_1005F52F0;
  v21 = unk_1005F5300;
  v22 = *(double *)&qword_1005F5310;
  sub_1000422D0();
  v14 = v13;
  sub_10004260C();
  v16 = v22 + (v14 - v15) * 0.64;
  v17 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen", v20, v21);
  v18 = UIRoundToScreenScale(v16);

  v19 = v18 - a1;
  if (v18 >= a1)
    v19 = -0.0;
  objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC6FindMy19FMMapViewController_mapView], "_setAttributionInsets:", 0.0, 0.0, v12 + v19, -20.0);
}

uint64_t sub_1000401E0()
{
  uint64_t v0;

  return sub_10004387C(*(_QWORD *)(v0 + 16));
}

int main(int argc, const char **argv, const char **envp)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  int v26;
  char **v27;
  uint64_t v28;
  objc_class *ObjCClassFromMetadata;
  NSString *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  objc_class *v34;
  NSString *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD aBlock[6];

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v4 = *(_QWORD *)(v3 - 8);
  v42 = v3;
  v43 = v4;
  __chkstk_darwin(v3);
  v41 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v39 = *(_QWORD *)(v13 - 8);
  v40 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000555A8();
  static DispatchQoS.userInitiated.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  v16 = sub_100008000((unint64_t *)&unk_1005D3970, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v17 = sub_100053F2C((uint64_t *)&unk_1005D20F0);
  v18 = sub_10003F734((unint64_t *)&unk_1005D3980, (uint64_t *)&unk_1005D20F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v17, v18, v10, v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v6);
  qword_1005F4CA0 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000023, 0x80000001004A4B30, v15, v12, v9, 0);
  aBlock[4] = sub_100011750;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_100540288;
  v19 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(v19);
  v44 = _swiftEmptyArrayStorage;
  v20 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v21 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v22 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  v24 = v41;
  v23 = v42;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v44, v21, v22, v42, v20);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v24, v19);
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v24, v23);
  v25 = (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v15, v40);
  v26 = static CommandLine.argc.getter(v25);
  v27 = (char **)static CommandLine.unsafeArgv.getter();
  v28 = type metadata accessor for FMApplication();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata(v28);
  v30 = NSStringFromClass(ObjCClassFromMetadata);
  if (!v30)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v32 = v31;
    v30 = (NSString *)String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v32);
  }
  v33 = type metadata accessor for FMAppDelegate();
  v34 = (objc_class *)swift_getObjCClassFromMetadata(v33);
  v35 = NSStringFromClass(v34);
  if (!v35)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(0);
    v37 = v36;
    v35 = (NSString *)String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v37);
  }
  UIApplicationMain(v26, v27, v30, v35);

  return 0;
}

uint64_t sub_10004058C(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContextInMetadataState2(255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

void sub_1000405D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  _BOOL4 v41;
  uint64_t v42;
  uint8_t *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint8_t *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t MyUI;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;

  v3 = v2;
  v69 = a1;
  v5 = type metadata accessor for FMIPUnknownItem(0);
  v71 = *(_QWORD *)(v5 - 8);
  v72 = v5;
  __chkstk_darwin(v5);
  v70 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100053F2C(&qword_1005D2C70);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v73 = (char *)&v49 - v11;
  v12 = type metadata accessor for DiscoveryType(0);
  v77 = *(_QWORD *)(v12 - 8);
  v78 = v12;
  v13 = __chkstk_darwin(v12);
  v74 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v76 = (char *)&v49 - v15;
  v68 = type metadata accessor for FMAccessoryDiscoveryCoordinator.Event(0);
  v16 = __chkstk_darwin(v68);
  v75 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v19 = (char *)&v49 - v18;
  v20 = type metadata accessor for FMFFriend(0);
  __chkstk_darwin(v20);
  v57 = sub_100053F2C(&qword_1005E30D0);
  v55 = *(_QWORD *)(v57 - 8);
  __chkstk_darwin(v57);
  v54 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_100053F2C(&qword_1005E30D8);
  v22 = __chkstk_darwin(v53);
  v56 = (char *)&v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v60 = (char *)&v49 - v24;
  v61 = type metadata accessor for ContactPickerViewModel.Dependencies(0);
  v59 = *(_QWORD *)(v61 - 8);
  __chkstk_darwin(v61);
  v58 = (char *)&v49 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_100053F2C((uint64_t *)&unk_1005E59F0);
  __chkstk_darwin(v26);
  v52 = (char *)&v49 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MyUI = type metadata accessor for Feature.FindMyUI(0);
  v65 = *(_QWORD *)(MyUI - 8);
  __chkstk_darwin(MyUI);
  v64 = (char *)&v49 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for FMSelectedSection(0);
  v30 = __chkstk_darwin(v29);
  v79 = (char *)&v49 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __chkstk_darwin(v30);
  v80 = (uint64_t)&v49 - v33;
  __chkstk_darwin(v32);
  v35 = (char *)&v49 - v34;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v36 = type metadata accessor for Logger(0);
  v37 = sub_100056D88(v36, (uint64_t)qword_1005F5748);
  v81 = a2;
  v38 = sub_10004FC74(a2, (uint64_t)v35, type metadata accessor for FMSelectedSection);
  v63 = v37;
  v39 = Logger.logObject.getter(v38);
  v40 = static os_log_type_t.default.getter(v39);
  v41 = os_log_type_enabled(v39, v40);
  v67 = v10;
  if (v41)
  {
    v42 = swift_slowAlloc(12, -1);
    v51 = v19;
    v43 = (uint8_t *)v42;
    v44 = swift_slowAlloc(32, -1);
    v62 = v3;
    v50 = v44;
    *(_DWORD *)v43 = 136315138;
    v82 = v44;
    v49 = v43 + 4;
    v83 = 0;
    v84 = 0xE000000000000000;
    _print_unlocked<A, B>(_:_:)(v35, &v83, v29, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v45 = v84;
    v83 = sub_100056DA0(v83, v84, &v82);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v83, &v84);
    swift_bridgeObjectRelease(v45);
    sub_10004FCB8((uint64_t)v35, type metadata accessor for FMSelectedSection);
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "FMInitialCardController: didUpdate selectedSection %s", v43, 0xCu);
    v46 = v50;
    swift_arrayDestroy(v50, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v46, -1, -1);
    swift_slowDealloc(v43, -1, -1);
  }
  else
  {
    sub_10004FCB8((uint64_t)v35, type metadata accessor for FMSelectedSection);
  }

  v47 = v80;
  sub_10004FC74(v81, v80, type metadata accessor for FMSelectedSection);
  v48 = (char *)&loc_100040BA0 + *((int *)qword_1003C90E8 + swift_getEnumCaseMultiPayload(v47, v29));
  __asm { BR              X10 }
}

uint64_t type metadata accessor for FMAccessoryDiscoveryCoordinator.Event(uint64_t a1)
{
  return sub_10001DC04(a1, qword_1005DBB98, (uint64_t)&nominal type descriptor for FMAccessoryDiscoveryCoordinator.Event);
}

void sub_100041CA0(void *a1, char *a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  void **v17;
  void *v18;
  id v19;
  void *v20;
  _QWORD *v21;
  uint64_t ObjectType;
  void (*v23)(uint64_t, uint64_t, _QWORD *);
  uint64_t v24;
  id v25;
  double v26;
  double v27;
  double v28;
  id v29;

  v4 = objc_msgSend(a1, "view");
  if (v4)
  {
    v29 = v4;
    sub_1000428F0();
    objc_msgSend(a2, "addChildViewController:", a1);
    v5 = *(_QWORD *)&a2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardContainer];
    v6 = OBJC_IVAR____TtC6FindMy19FMCardContainerView_bluredBackground;
    v7 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v5
                                                               + OBJC_IVAR____TtC6FindMy19FMCardContainerView_bluredBackground), "contentView"));
    objc_msgSend(v7, "bounds");
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v15 = v14;

    objc_msgSend(v29, "setFrame:", v9, v11, v13, v15);
    objc_msgSend(v29, "setAutoresizingMask:", 18);
    objc_msgSend(v29, "setPreservesSuperviewLayoutMargins:", 1);
    v16 = objc_msgSend(*(id *)(v5 + v6), "contentView");
    objc_msgSend(v16, "addSubview:", v29);

    objc_msgSend(a1, "didMoveToParentViewController:", a2);
    v17 = (void **)&a2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController];
    v18 = *(void **)&a2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController];
    *v17 = a1;
    v17[1] = &off_100551ED0;
    v19 = a1;

    v20 = *v17;
    if (*v17)
    {
      v21 = v17[1];
      ObjectType = swift_getObjectType(v20);
      v23 = (void (*)(uint64_t, uint64_t, _QWORD *))v21[4];
      v24 = a2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_lockedPercent];
      v25 = v20;
      v23(v24, ObjectType, v21);

      v19 = v25;
    }

    objc_msgSend(v29, "layoutIfNeeded");
    sub_1000421B0();
    sub_100041F18(0, v26);
    sub_1000421B0();
    v28 = 0.64 - v27;
    if (v28 <= 0.0)
      v28 = 0.0;
    objc_msgSend(*(id *)&a2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_darkenerBackground], "setAlpha:", v28 * *(double *)&a2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration]);

  }
}

void sub_100041F18(char a1, double a2)
{
  char *v2;
  char *v3;
  __int128 v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;
  double v12;
  id v13;
  id v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t inited;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  Class isa;
  _OWORD v25[13];
  double v26;

  v3 = v2;
  v6 = *(_OWORD *)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration + 16];
  v25[11] = *(_OWORD *)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration];
  v25[12] = v6;
  v26 = *(double *)&v2[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration + 32];
  sub_1000422D0();
  v8 = v7;
  sub_10004260C();
  v10 = v26 + (v8 - v9) * a2;
  v11 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  v12 = UIRoundToScreenScale(v10);

  v13 = objc_msgSend(v3, "traitCollection");
  v14 = objc_msgSend(v13, "horizontalSizeClass");

  v15 = &OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_compactCardTopConstraint;
  if (v14 != (id)1)
    v15 = &OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_regularCardTopConstraint;
  objc_msgSend(*(id *)&v3[*v15], "setConstant:", v12);
  v16 = sub_100053F2C(&qword_1005D4F70);
  inited = swift_initStackObject(v16, v25);
  *(_OWORD *)(inited + 16) = xmmword_100481B10;
  *(_QWORD *)(inited + 32) = 0x6E6F697469736F70;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  *(double *)(inited + 48) = v12;
  *(_QWORD *)(inited + 72) = &type metadata for CGFloat;
  *(_QWORD *)(inited + 80) = 0x746E6563726570;
  *(_QWORD *)(inited + 88) = 0xE700000000000000;
  *(_QWORD *)(inited + 120) = &type metadata for CGFloat;
  *(_QWORD *)(inited + 128) = 0x656372756F73;
  v18 = 0x726568746FLL;
  if ((a1 & 1) != 0)
    v18 = 0x75747365476E6170;
  v19 = 0xE500000000000000;
  if ((a1 & 1) != 0)
    v19 = 0xEA00000000006572;
  *(double *)(inited + 96) = a2;
  *(_QWORD *)(inited + 168) = &type metadata for String;
  *(_QWORD *)(inited + 136) = 0xE600000000000000;
  *(_QWORD *)(inited + 144) = v18;
  *(_QWORD *)(inited + 152) = v19;
  v20 = sub_10004C214(inited);
  v21 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1005D20D8 != -1)
    swift_once(&qword_1005D20D8, sub_10005D2D8);
  v22 = qword_1005F61F8;
  v23 = sub_10004C48C(v20);
  swift_bridgeObjectRelease(v20);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease(v23);
  objc_msgSend(v21, "postNotificationName:object:userInfo:", v22, 0, isa);

}

void sub_1000421B0()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  uint64_t *v5;
  void *v6;

  v1 = objc_msgSend(v0, "view", *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration], *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration + 8], *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration + 16], *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_configuration + 24]);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v0, "traitCollection");
    v4 = objc_msgSend(v3, "horizontalSizeClass");

    v5 = &OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_compactCardTopConstraint;
    if (v4 != (id)1)
      v5 = &OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_regularCardTopConstraint;
    v6 = *(void **)&v0[*v5];
    if (v6)
      objc_msgSend(v6, "constant");
    sub_1000422D0();
    sub_10004260C();

  }
  else
  {
    __break(1u);
  }
}

void sub_1000422D0()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char *v6;
  id v7;
  id v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  void *v17;
  double v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  os_log_type_t v31;
  NSObject *v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  CGRect v37;

  v1 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v2 = objc_msgSend(v1, "delegate");

  if (!v2)
    goto LABEL_10;
  v3 = type metadata accessor for FMAppDelegate();
  v4 = swift_dynamicCastClass(v2, v3);
  if (!v4)
  {
    swift_unknownObjectRelease(v2);
    goto LABEL_10;
  }
  v5 = *(void **)(v4 + OBJC_IVAR____TtC6FindMy13FMAppDelegate_mainViewController);
  v6 = v5;
  swift_unknownObjectRelease(v2);
  if (!v5)
  {
LABEL_10:
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v29 = type metadata accessor for Logger(0);
    sub_100056D88(v29, (uint64_t)qword_1005F5748);
    v30 = static os_log_type_t.error.getter();
    v31 = v30;
    v32 = Logger.logObject.getter(v30);
    if (os_log_type_enabled(v32, v31))
    {
      v33 = (uint8_t *)swift_slowAlloc(12, -1);
      v34 = swift_slowAlloc(32, -1);
      v36 = v34;
      *(_DWORD *)v33 = 136315138;
      v35 = sub_100056DA0(0xD000000000000026, 0x80000001004B4D20, &v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, &v36);
      _os_log_impl((void *)&_mh_execute_header, v32, v31, "%s", v33, 0xCu);
      swift_arrayDestroy(v34, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v34, -1, -1);
      swift_slowDealloc(v33, -1, -1);
    }

    return;
  }
  v7 = *(id *)&v6[OBJC_IVAR____TtC6FindMy20FMMainViewController_initialCardContainer];

  v8 = objc_msgSend(v7, "view");
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, "safeAreaInsets");
    v11 = v10;
    v13 = v12;

    if (qword_1005D1E80 != -1)
      swift_once(&qword_1005D1E80, sub_100008974);
    v14 = *((double *)&xmmword_1005F5940 + 1);
    v15 = *(double *)(v0 + 32);
    v16 = objc_msgSend(v7, "view");
    if (v16)
    {
      v17 = v16;
      v18 = v15 + v13 + v11 + v14;
      objc_msgSend(v16, "frame");
      v20 = v19;
      v22 = v21;
      v24 = v23;
      v26 = v25;

      v37.origin.x = v20;
      v37.origin.y = v22;
      v37.size.width = v24;
      v37.size.height = v26;
      v27 = CGRectGetHeight(v37) - v18;
      v28 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      UIRoundToScreenScale(v27);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_10004260C()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t ObjectType;
  double v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  NSObject *v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v0 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v1 = objc_msgSend(v0, "delegate");

  if (v1)
  {
    v2 = type metadata accessor for FMAppDelegate();
    v3 = swift_dynamicCastClass(v1, v2);
    if (v3)
    {
      v4 = *(void **)(v3 + OBJC_IVAR____TtC6FindMy13FMAppDelegate_mainViewController);
      v5 = v4;
      swift_unknownObjectRelease(v1);
      if (v4)
      {
        v6 = (char *)*(id *)&v5[OBJC_IVAR____TtC6FindMy20FMMainViewController_initialCardContainer];

        v8 = *(void **)&v6[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController];
        v7 = *(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_contentViewController + 8];
        v9 = v8;

        if (v8)
        {
          ObjectType = swift_getObjectType(v9);
          v11 = (*(double (**)(uint64_t, uint64_t))(v7 + 24))(ObjectType, v7);

          v12 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
          UIRoundToScreenScale(v11);

        }
        return;
      }
    }
    else
    {
      swift_unknownObjectRelease(v1);
    }
  }
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v13 = type metadata accessor for Logger(0);
  sub_100056D88(v13, (uint64_t)qword_1005F5748);
  v14 = static os_log_type_t.error.getter();
  v15 = v14;
  v16 = Logger.logObject.getter(v14);
  if (os_log_type_enabled(v16, v15))
  {
    v17 = (uint8_t *)swift_slowAlloc(12, -1);
    v18 = swift_slowAlloc(32, -1);
    v20 = v18;
    *(_DWORD *)v17 = 136315138;
    v19 = sub_100056DA0(0xD000000000000026, 0x80000001004B4D20, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20);
    _os_log_impl((void *)&_mh_execute_header, v16, v15, "%s", v17, 0xCu);
    swift_arrayDestroy(v18, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v18, -1, -1);
    swift_slowDealloc(v17, -1, -1);
  }

}

uint64_t type metadata accessor for FMAppDelegate()
{
  return objc_opt_self(_TtC6FindMy13FMAppDelegate);
}

double sub_1000428C0()
{
  uint64_t v0;
  CGRect v2;

  objc_msgSend(*(id *)(v0 + qword_1005DD868), "frame");
  return fabs(CGRectGetMinY(v2));
}

id sub_1000428F0()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  id v6;
  void *v7;
  uint64_t v8;
  id result;
  void *v10;
  uint64_t v11;

  v1 = objc_msgSend(v0, "childViewControllers");
  v2 = sub_100006C5C(0, (unint64_t *)&qword_1005D6558, UIViewController_ptr);
  v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v1, v2);

  if (!((unint64_t)v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v3);
    if (v4)
      goto LABEL_3;
    return (id)swift_bridgeObjectRelease_n(v3, 2);
  }
LABEL_12:
  if (v3 < 0)
    v11 = v3;
  else
    v11 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  v4 = _CocoaArrayWrapper.endIndex.getter(v11);
  if (!v4)
    return (id)swift_bridgeObjectRelease_n(v3, 2);
LABEL_3:
  for (i = 4; ; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0)
      v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i - 4, v3);
    else
      v6 = *(id *)(v3 + 8 * i);
    v7 = v6;
    v8 = i - 3;
    if (__OFADD__(i - 4, 1))
    {
      __break(1u);
      goto LABEL_12;
    }
    objc_msgSend(v6, "willMoveToParentViewController:", 0);
    result = objc_msgSend(v7, "view");
    if (!result)
      break;
    v10 = result;
    objc_msgSend(result, "removeFromSuperview");

    objc_msgSend(v7, "removeFromParentViewController");
    if (v8 == v4)
      return (id)swift_bridgeObjectRelease_n(v3, 2);
  }
  __break(1u);
  return result;
}

char *sub_100042A64(uint64_t a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  NSString v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  NSString v23;
  uint64_t v24;
  uint64_t ObjCClassFromMetadata;
  uint64_t v26;
  NSString v27;
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  objc_super v34;

  v3 = &v1[qword_1005DD830];
  *(_QWORD *)v3 = 0xD00000000000001ELL;
  *((_QWORD *)v3 + 1) = 0x80000001004B3CB0;
  v4 = qword_1005DD858;
  v5 = objc_allocWithZone((Class)UILabel);
  v6 = v1;
  *(_QWORD *)&v1[v4] = objc_msgSend(v5, "init");
  v7 = qword_1005DD860;
  *(_QWORD *)&v6[v7] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMLoadingView()), "init");
  v8 = qword_1005DD868;
  *(_QWORD *)&v6[v8] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v6[qword_1005DD870] = 0;
  v6[qword_1005DD878] = 0;
  v9 = qword_1005DD880;
  v10 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v10, "setAccessibilityIdentifier:", v11);

  *(_QWORD *)&v6[v9] = v10;
  v6[qword_1005DD888] = 0;
  v6[qword_1005DD890] = 0;
  v12 = type metadata accessor for FMTableView(0);
  v13 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v12)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v13, "setSeparatorStyle:", 0);
  *(_QWORD *)&v6[qword_1005DD850] = v13;
  v14 = objc_allocWithZone((Class)type metadata accessor for FMPeopleListDataSource());
  v15 = v13;
  v16 = swift_retain(a1);
  *(_QWORD *)&v6[qword_1005DD838] = sub_100042F7C(v16, v15);
  v17 = objc_allocWithZone((Class)type metadata accessor for FMNoPersonView());
  v18 = swift_retain(a1);
  *(_QWORD *)&v6[qword_1005DD840] = sub_10022D214(v18);
  v19 = objc_allocWithZone((Class)type metadata accessor for FMPersonTerminalView());
  v20 = swift_retain(a1);
  v21 = sub_100366F70(v20);
  *((_BYTE *)v21 + OBJC_IVAR____TtC6FindMy14FMTerminalView_isPeopleTab) = 1;
  *(_QWORD *)&v6[qword_1005DD848] = v21;

  *(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator] = a1;
  v34.receiver = v6;
  v34.super_class = (Class)type metadata accessor for FMMediatedViewController();
  swift_retain(a1);
  v22 = (char *)objc_msgSendSuper2(&v34, "initWithNibName:bundle:", 0, 0);
  v23 = String._bridgeToObjectiveC()();
  objc_msgSend(v22, "setAccessibilityIdentifier:", v23, v34.receiver, v34.super_class);

  v24 = type metadata accessor for FMTableViewSectionHeaderView();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v24);
  v26 = *(_QWORD *)&v22[qword_1005DD830 + 8];
  swift_bridgeObjectRetain(v26);
  v27 = String._bridgeToObjectiveC()();
  objc_msgSend(v15, "registerClass:forHeaderFooterViewReuseIdentifier:", ObjCClassFromMetadata, v27, swift_bridgeObjectRelease(v26).n128_f64[0]);

  v28 = *(_QWORD *)&v22[qword_1005DD838] + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_delegate;
  *(_QWORD *)(v28 + 8) = &off_1005545E8;
  swift_unknownObjectWeakAssign(v28, v22);
  v29 = *(char **)&v22[qword_1005DD848];
  v30 = &v29[OBJC_IVAR____TtC6FindMy14FMTerminalView_delegate];
  *((_QWORD *)v30 + 1) = &off_100554598;
  swift_unknownObjectWeakAssign(v30, v22);
  v31 = v22;
  v32 = v29;
  sub_100043DD4();

  swift_release(a1);
  return v31;
}

uint64_t type metadata accessor for FMTableViewSectionHeaderView()
{
  return objc_opt_self(_TtC6FindMy28FMTableViewSectionHeaderView);
}

uint64_t type metadata accessor for FMMediatedViewController()
{
  return objc_opt_self(_TtC6FindMy24FMMediatedViewController);
}

char *sub_100042F7C(uint64_t a1, void *a2)
{
  char *v2;
  uint64_t MyUI;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  id v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void *v26;
  id v27;
  objc_class *v28;
  id v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  Swift::Bool v40;
  uint64_t v41;
  uint64_t ObjCClassFromMetadata;
  NSString v43;
  NSString v44;
  NSString v45;
  NSString v46;
  uint64_t v47;
  uint64_t v48;
  NSString v49;
  uint64_t v50;
  uint64_t v51;
  NSString v52;
  uint64_t v53;
  uint64_t v54;
  NSString v55;
  uint64_t v56;
  uint64_t v57;
  NSString v58;
  uint64_t v59;
  __n128 v60;
  uint64_t v61;
  NSObject *v62;
  NSObject *v63;
  uint64_t v64;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  objc_super v73;
  _QWORD *v74;

  v68 = a1;
  v69 = a2;
  MyUI = type metadata accessor for Feature.FindMyUI(0);
  v71 = *(_QWORD *)(MyUI - 8);
  v72 = MyUI;
  __chkstk_darwin(MyUI);
  v70 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v66 = *(_QWORD *)(v5 - 8);
  v67 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = &v2[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_delegate];
  *((_QWORD *)v14 + 1) = 0;
  swift_unknownObjectWeakInit(v14);
  v15 = OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_tableViewFooter;
  v16 = objc_allocWithZone((Class)type metadata accessor for FMListFooterActionsView());
  v17 = v2;
  *(_QWORD *)&v2[v15] = objc_msgSend(v16, "init");
  *(_QWORD *)&v17[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_peopleSubscription] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_locationSubscription] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_selectionSubscription] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_meCellViewModel] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v17[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_cellsViewModel] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v17[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_fenceCellModels] = _swiftEmptyArrayStorage;
  v18 = OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_itemAger;
  v19 = type metadata accessor for FMItemAger();
  swift_allocObject(v19, 40, 7);
  *(_QWORD *)&v17[v18] = sub_1000465C0();
  v20 = OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_updateQueue;
  sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  static DispatchQoS.userInitiated.getter();
  v74 = _swiftEmptyArrayStorage;
  v21 = sub_100008000((unint64_t *)&unk_1005D3970, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v22 = sub_100053F2C((uint64_t *)&unk_1005D20F0);
  v23 = sub_10003F774((unint64_t *)&unk_1005D3980, (uint64_t *)&unk_1005D20F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v74, v22, v23, v8, v21);
  (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v67);
  v24 = v10;
  v25 = v68;
  *(_QWORD *)&v17[v20] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000025, 0x80000001004C8460, v13, v24, v7, 0);
  *(_QWORD *)&v17[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_delayedUpdateWorkItem] = 0;
  v17[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_isRemovingCell] = 0;
  v17[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_updatesEnabled] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator] = v25;
  v26 = v69;
  *(_QWORD *)&v17[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_tableView] = v69;
  swift_retain(v25);
  v27 = v26;

  v28 = (objc_class *)type metadata accessor for FMPeopleListDataSource();
  v73.receiver = v17;
  v73.super_class = v28;
  v29 = objc_msgSendSuper2(&v73, "init");
  v30 = qword_1005D1DE8;
  v31 = (char *)v29;
  if (v30 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v32 = type metadata accessor for Logger(0);
  v33 = sub_100056D88(v32, (uint64_t)qword_1005F5748);
  v34 = Logger.logObject.getter(v33);
  v35 = static os_log_type_t.default.getter(v34);
  if (os_log_type_enabled(v34, v35))
  {
    v36 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v36 = 0;
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "FMPeopleListDataSource: initialized", v36, 2u);
    swift_slowDealloc(v36, -1, -1);
  }

  v37 = v70;
  v38 = v71;
  v39 = v72;
  (*(void (**)(char *, _QWORD, uint64_t))(v71 + 104))(v70, enum case for Feature.FindMyUI.newPeopleListRows(_:), v72);
  sub_100008000((unint64_t *)&unk_1005E5910, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.FindMyUI, (uint64_t)&protocol conformance descriptor for Feature.FindMyUI);
  v40 = FeatureFlagsKey.isEnabled()();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v39);
  if (v40)
  {
    objc_msgSend(v27, "setSeparatorStyle:", 1);
    v41 = sub_100006C5C(0, &qword_1005E27C0, UITableViewCell_ptr);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v41);
    v43 = String._bridgeToObjectiveC()();
    objc_msgSend(v27, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v43);

    v44 = String._bridgeToObjectiveC()();
    objc_msgSend(v27, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v44);

    v45 = String._bridgeToObjectiveC()();
    objc_msgSend(v27, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v45);

    v46 = String._bridgeToObjectiveC()();
    objc_msgSend(v27, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v46);

    objc_msgSend(v27, "_setAdjustsContentInsetWhenScrollDisabled:", 1);
  }
  else
  {
    v47 = sub_100053F2C(&qword_1005DD930);
    v48 = swift_getObjCClassFromMetadata(v47);
    v49 = String._bridgeToObjectiveC()();
    objc_msgSend(v27, "registerClass:forCellReuseIdentifier:", v48, v49);

    v50 = sub_100053F2C(&qword_1005E5920);
    v51 = swift_getObjCClassFromMetadata(v50);
    v52 = String._bridgeToObjectiveC()();
    objc_msgSend(v27, "registerClass:forCellReuseIdentifier:", v51, v52);

    v53 = sub_100053F2C(&qword_1005E5928);
    v54 = swift_getObjCClassFromMetadata(v53);
    v55 = String._bridgeToObjectiveC()();
    objc_msgSend(v27, "registerClass:forCellReuseIdentifier:", v54, v55);

    v56 = sub_100053F2C((uint64_t *)&unk_1005E5930);
    v57 = swift_getObjCClassFromMetadata(v56);
    v58 = String._bridgeToObjectiveC()();
    objc_msgSend(v27, "registerClass:forCellReuseIdentifier:", v57, v58);

  }
  v59 = *(_QWORD *)&v31[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_itemAger];
  *(_QWORD *)(v59 + 24) = &off_100568320;
  swift_unknownObjectWeakAssign(v59 + 16, v31);
  v61 = dispatch thunk of FMFManager.friends.getter(v60);
  v62 = *(NSObject **)(*(_QWORD *)(v25 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
  v63 = v62;
  v64 = dispatch thunk of FMFManager.locationAlerts.getter(v63);
  sub_10003E7B8(v61, v62, v64, 1);
  swift_bridgeObjectRelease(v61);

  swift_release(v25);
  swift_bridgeObjectRelease(v64);
  return v31;
}

uint64_t type metadata accessor for FMListFooterActionsView()
{
  return objc_opt_self(_TtC6FindMy23FMListFooterActionsView);
}

uint64_t type metadata accessor for FMPeopleListDataSource()
{
  return objc_opt_self(_TtC6FindMy22FMPeopleListDataSource);
}

uint64_t type metadata accessor for FMPersonTerminalView()
{
  return objc_opt_self(_TtC6FindMy20FMPersonTerminalView);
}

void sub_100043724(char a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  uint64_t v5;
  double v6;
  id v7;
  void *v8;
  uint64_t v9;
  double v10;
  id v11;

  v2 = v1;
  v4 = *(void **)(v1 + qword_1005DD840);
  v5 = type metadata accessor for FMNoItemView();
  if (swift_dynamicCastClass(v4, v5))
  {
    v6 = dbl_10048A1B0[a1];
    v7 = v4;
    sub_1003BAF44(0, v6);

  }
  v8 = *(void **)(v2 + qword_1005DD848);
  v9 = type metadata accessor for FMItemTerminalView();
  if (swift_dynamicCastClass(v8, v9))
  {
    v10 = dbl_10048A1B0[a1];
    v11 = v8;
    sub_100169BAC(0, v10);

  }
}

uint64_t type metadata accessor for FMItemTerminalView()
{
  return objc_opt_self(_TtC6FindMy18FMItemTerminalView);
}

uint64_t type metadata accessor for FMConditionSubscription(uint64_t a1)
{
  uint64_t result;

  result = qword_1005DE020;
  if (!qword_1005DE020)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMConditionSubscription);
  return result;
}

uint64_t sub_10004387C(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  _BYTE v15[24];

  v2 = (uint64_t *)(a1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions);
  swift_beginAccess(a1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions, v15, 0, 0);
  v3 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain(*v2);
    if (v4)
      goto LABEL_3;
    return swift_bridgeObjectRelease(v3);
  }
  if (v3 < 0)
    v14 = *v2;
  else
    v14 = v3 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v3);
  result = _CocoaArrayWrapper.endIndex.getter(v14);
  v4 = result;
  if (!result)
    return swift_bridgeObjectRelease(v3);
LABEL_3:
  if (v4 >= 1)
  {
    v6 = 0;
    v7 = OBJC_IVAR____TtC6FindMy19FMConditionProvider_isNetworkUp;
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        v8 = specialized _ArrayBuffer._getElementSlowPath(_:)(v6, v3);
      }
      else
      {
        v8 = *(_QWORD *)(v3 + 8 * v6 + 32);
        swift_retain(v8);
      }
      v9 = v8 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber;
      Strong = swift_unknownObjectWeakLoadStrong(v8 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber);
      if (Strong)
      {
        v11 = Strong;
        v12 = *(_QWORD *)(v9 + 8);
        ObjectType = swift_getObjectType(Strong);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, *(unsigned __int8 *)(a1 + v7), ObjectType, v12);
        swift_release(v8);
        swift_unknownObjectRelease(v11);
      }
      else
      {
        swift_release(v8);
      }
      ++v6;
    }
    while (v4 != v6);
    return swift_bridgeObjectRelease(v3);
  }
  __break(1u);
  return result;
}

void sub_1000439DC(uint64_t a1, char a2, const char *a3)
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  int v11;
  uint64_t v12;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v6 = type metadata accessor for Logger(0);
  v7 = sub_100056D88(v6, (uint64_t)qword_1005F5748);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v10 = 67109120;
    v11 = a2 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, a3, v10, 8u);
    swift_slowDealloc(v10, -1, -1);
  }

  if ((a2 & 1) != 0
    && (*(_BYTE *)(a1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_areFriendsInitialized) != 1
     || (*(_BYTE *)(a1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_areDevicesInitialized) & 1) == 0))
  {
    sub_100044D70();
  }
  sub_100043DD4();
}

void sub_100043B38()
{
  unsigned __int8 *v0;
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;

  v1 = v0;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100056D88(v2, (uint64_t)qword_1005F5748);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMTerminalView: Hide terminal view", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  objc_msgSend(v1, "setAlpha:", 0.0);
  objc_msgSend(v1, "setUserInteractionEnabled:", 0);
  objc_msgSend(v1, "setHidden:", 1);
  v1[OBJC_IVAR____TtC6FindMy14FMTerminalView_isVisible] = 0;
  v7 = v1[OBJC_IVAR____TtC6FindMy14FMTerminalView_state];
  v1[OBJC_IVAR____TtC6FindMy14FMTerminalView_state] = 6;
  __asm { BR              X10 }
}

void sub_100043DD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  char v14;
  NSObject *v15;
  uint64_t v16;
  uint8_t *v17;
  const char *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;

  v1 = v0;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100056D88(v2, (uint64_t)qword_1005F5748);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMTerminalView: Evaluate conditions", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC6FindMy14FMTerminalView_delegate);
  v8 = swift_unknownObjectRelease(Strong);
  if (!Strong)
  {
    v15 = Logger.logObject.getter(v8);
    v16 = static os_log_type_t.default.getter(v15);
    if (os_log_type_enabled(v15, (os_log_type_t)v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      v18 = "FMTerminalView: Skipping conditions since no delegate";
LABEL_12:
      _os_log_impl((void *)&_mh_execute_header, v15, (os_log_type_t)v16, v18, v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }
LABEL_13:

    goto LABEL_14;
  }
  v9 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_mediator;
  v10 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_mediator) + 16);
  if ((*(_BYTE *)(v10 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_isAccountManaged) & 1) == 0)
  {
    if ((*(_BYTE *)(v10 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_accountsAreSignedIn) & 1) == 0
      && *(_BYTE *)(v10 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_accountsAreInitialized) == 1)
    {
      v19 = Logger.logObject.getter(v8);
      v20 = static os_log_type_t.default.getter(v19);
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v21 = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "FMTerminalView: Show no account state", v21, 2u);
        swift_slowDealloc(v21, -1, -1);
      }

      v14 = 2;
      goto LABEL_34;
    }
    if (*(_BYTE *)(v10 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_isNetworkUp) != 1)
    {
      if (*(_BYTE *)(v10 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_areFriendsInitialized) != 1
        || (*(_BYTE *)(v10 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_areDevicesInitialized) & 1) == 0)
      {
        v25 = Logger.logObject.getter(v8);
        v26 = static os_log_type_t.default.getter(v25);
        if (os_log_type_enabled(v25, v26))
        {
          v27 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v27 = 0;
          _os_log_impl((void *)&_mh_execute_header, v25, v26, "FMTerminalView: Show no network state", v27, 2u);
          swift_slowDealloc(v27, -1, -1);
        }

        if (*(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy14FMTerminalView_isPeopleTab) == 1
          && *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1 + v9) + 16)
                       + OBJC_IVAR____TtC6FindMy19FMConditionProvider_stewieServiceState) == 1)
        {
          v14 = 4;
        }
        else
        {
          v14 = 3;
        }
        goto LABEL_34;
      }
LABEL_14:
      sub_100043B38();
      return;
    }
    if ((*(_BYTE *)(v10 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_didDevicesFailToInitialize) & 1) != 0
      || (*(_BYTE *)(v10 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_didFriendsFailToInitialize) & 1) != 0)
    {
      v22 = Logger.logObject.getter(v8);
      v23 = static os_log_type_t.default.getter(v22);
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v24 = 0;
        _os_log_impl((void *)&_mh_execute_header, v22, v23, "FMTerminalView: Show no initialization failed", v24, 2u);
        swift_slowDealloc(v24, -1, -1);
      }

      v14 = 5;
      goto LABEL_34;
    }
    v15 = Logger.logObject.getter(v8);
    LOBYTE(v16) = static os_log_type_t.default.getter(v15);
    if (os_log_type_enabled(v15, (os_log_type_t)v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      v18 = "FMTerminalView: No terminal view needed, hiding.";
      goto LABEL_12;
    }
    goto LABEL_13;
  }
  v11 = Logger.logObject.getter(v8);
  v12 = static os_log_type_t.default.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "FMTerminalView: Show no managed account state", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

  v14 = 1;
LABEL_34:
  sub_100367188(v14);
}

id sub_100044258(uint64_t a1, char a2)
{
  return sub_100044260(a2);
}

id sub_100044260(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  int v10;
  uint64_t v11;

  v2 = v1;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100056D88(v4, (uint64_t)qword_1005F5748);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 67109120;
    v10 = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v10, &v11);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMListViewController: FMTerminalView didUpdate visibility: %{BOOL}d", v8, 8u);
    swift_slowDealloc(v8, -1, -1);
  }

  if ((a1 & 1) != 0)
  {
    objc_msgSend(*(id *)(v2 + qword_1005DD840), "setHidden:", 1);
    objc_msgSend(*(id *)(v2 + qword_1005DD850), "setHidden:", 1);
    objc_msgSend(*(id *)(v2 + qword_1005DD860), "setHidden:", 1);
  }
  *(_BYTE *)(v2 + qword_1005DD888) = a1 & 1;
  return sub_1000443F0(0xD000000000000015, 0x80000001004B92B0);
}

id sub_1000443F0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v6 = type metadata accessor for Logger(0);
  sub_100056D88(v6, (uint64_t)qword_1005F5748);
  v7 = swift_bridgeObjectRetain_n(a2, 2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v19 = v11;
    *(_DWORD *)v10 = 136315138;
    swift_bridgeObjectRetain(a2);
    v18 = sub_100056DA0(a1, a2, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "FMListViewController: reevaluateEmptyStateVisibility reason: %s", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

    v12 = swift_bridgeObjectRelease_n(a2, 2);
  }
  if (*(_BYTE *)(v3 + qword_1005DD888) != 1 || *(_BYTE *)(v3 + qword_1005DD890) == 1)
  {
    v13 = (char *)&loc_100044618
        + 4
        * byte_10048A0B0[(*(unsigned __int8 (**)(uint64_t))((swift_isaMask & **(_QWORD **)(v3 + qword_1005DD848))
                                                                    + 0x1B0))(v12)];
    __asm { BR              X10 }
  }
  v14 = Logger.logObject.getter(v12);
  v15 = static os_log_type_t.default.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "FMListViewController: Not refreshing view state because terminal view is showing", v16, 2u);
    swift_slowDealloc(v16, -1, -1);
  }

  return sub_100044D54();
}

uint64_t sub_100044AB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator) + 48);
  v2 = swift_retain(v1);
  v3 = dispatch thunk of FMFManager.isInitialized.getter(v2);
  swift_release(v1);
  return v3 & 1;
}

id sub_100044AFC(const char *a1, char a2, char a3, SEL *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  char *v15;

  v9 = v4;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v10 = type metadata accessor for Logger(0);
  v11 = sub_100056D88(v10, (uint64_t)qword_1005F5748);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, a1, v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  v15 = *(char **)(v9 + qword_1005DD860);
  objc_msgSend(v15, "setUserInteractionEnabled:", a2 & 1);
  objc_msgSend(v15, "setHidden:", a3 & 1);
  return objc_msgSend(*(id *)&v15[OBJC_IVAR____TtC6FindMy13FMLoadingView_activityIndicator], *a4);
}

uint64_t sub_100044C2C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC6FindMy14FMTerminalView_state);
}

id sub_100044C3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;

  v1 = v0;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100056D88(v2, (uint64_t)qword_1005F5748);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMListViewController: Hiding empty list", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(void **)(v1 + qword_1005DD840);
  objc_msgSend(v7, "setUserInteractionEnabled:", 0);
  objc_msgSend(v7, "setHidden:", 1);
  return objc_msgSend(*(id *)(v1 + qword_1005DD850), "setHidden:", 0);
}

id sub_100044D54()
{
  return sub_100044AFC("FMListViewController: Hiding loading view", 0, 1, (SEL *)&selRef_stopAnimating);
}

void sub_100044D70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_log_type_t v10;
  uint8_t *v11;
  NSObject *oslog;

  v1 = v0;
  v2 = OBJC_IVAR____TtC6FindMy15FMEmptyListView_mediator;
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_mediator);
  *(_BYTE *)(*(_QWORD *)(v3 + 16) + OBJC_IVAR____TtC6FindMy19FMConditionProvider_wasNoNetworkAlertShown) = 0;
  v4 = *(_QWORD *)(v3 + 48);
  v5 = swift_retain(v4);
  if ((dispatch thunk of FMFManager.isInitialized.getter(v5) & 1) == 0)
    dispatch thunk of FMFManager.initialize()();
  swift_release(v4);
  v6 = *(_QWORD *)(*(_QWORD *)(v0 + v2) + 24);
  v7 = swift_retain(*(_QWORD *)(*(_QWORD *)(v1 + v2) + 24));
  sub_100044EAC(v7);
  swift_release(v6);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v8 = type metadata accessor for Logger(0);
  v9 = sub_100056D88(v8, (uint64_t)qword_1005F5748);
  oslog = Logger.logObject.getter(v9);
  v10 = static os_log_type_t.default.getter(oslog);
  if (os_log_type_enabled(oslog, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v10, "FMTerminalView: Retrying initialization", v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }

}

void sub_100044EAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  if ((FMIPManager.isInitialized.getter(a1) & 1) == 0)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v1 = type metadata accessor for Logger(0);
    v2 = sub_100056D88(v1, (uint64_t)qword_1005F5748);
    v3 = Logger.logObject.getter(v2);
    v4 = static os_log_type_t.default.getter(v3);
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "FMDevicesProvider: retry initialize", v5, 2u);
      swift_slowDealloc(v5, -1, -1);
    }

    FMIPManager.initialize()();
  }
}

void sub_100044F94(uint64_t a1, char a2)
{
  sub_1000439DC(a1, a2, "FMTerminalView: updated network status %{BOOL}d");
}

void sub_100044FA0()
{
  sub_100045720();
  __asm { BR              X10 }
}

void sub_10004500C()
{
  uint64_t v0;
  char v1;
  void *v2;
  void *v3;
  id v4;
  Swift::String v5;
  Swift::String v6;
  void *object;
  NSString v8;
  void *v9;
  id v10;
  Swift::String v11;
  Swift::String v12;
  void *v13;
  NSString v14;
  id v15;
  id v16;
  Swift::String v17;
  Swift::String v18;
  void *v19;
  NSString v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;

  v1 = _stringCompareWithSmolCheck(_:_:expecting:)(0x41646567616E616DLL, 0xEE00746E756F6363, 0x6E756F6363416F6ELL, 0xE900000000000074, 0);
  swift_bridgeObjectRelease(0xEE00746E756F6363);
  if ((v1 & 1) != 0)
  {
    v2 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_titleLabel);
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(0xE000000000000000);
    v3 = (void *)objc_opt_self(NSBundle);
    v4 = objc_msgSend(v3, "mainBundle");
    v5._countAndFlagsBits = 0xD000000000000017;
    v21._countAndFlagsBits = 0xD000000000000029;
    v21._object = (void *)0x80000001004B4A60;
    v5._object = (void *)0x80000001004B4A40;
    v6._countAndFlagsBits = 0;
    v6._object = (void *)0xE000000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v21)._object;

    v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    objc_msgSend(v2, "setText:", v8);

    v9 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_messageLabel);
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(0xE000000000000000);
    v10 = objc_msgSend(v3, "mainBundle");
    v11._countAndFlagsBits = 0xD000000000000019;
    v22._countAndFlagsBits = 0xD00000000000002BLL;
    v22._object = (void *)0x80000001004B4AB0;
    v11._object = (void *)0x80000001004B4A90;
    v12._countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v22)._object;

    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v13);
    objc_msgSend(v9, "setText:", v14);

    v15 = objc_retain(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButton)
                            + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label));
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(0xE000000000000000);
    v16 = objc_msgSend(v3, "mainBundle");
    v23._countAndFlagsBits = 0xD000000000000023;
    v23._object = (void *)0x80000001004AFD40;
    v17._object = (void *)0x80000001004AFD20;
    v17._countAndFlagsBits = 0xD000000000000011;
    v18._countAndFlagsBits = 0;
    v18._object = (void *)0xE000000000000000;
    v19 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, (Swift::String_optional)0, (NSBundle)v16, v18, v23)._object;

    v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v19);
    objc_msgSend(v15, "setText:", v20);

  }
}

void sub_100045394(uint64_t a1, char a2)
{
  sub_10004539C(a2);
}

void sub_10004539C(char a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  int v7;
  uint64_t v8;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100056D88(v2, (uint64_t)qword_1005F5748);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 67109120;
    v7 = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v7, &v8);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMMainViewController: updated network status %{BOOL}d", v6, 8u);
    swift_slowDealloc(v6, -1, -1);
  }

  if ((a1 & 1) != 0)
    sub_1000454B8();
}

void sub_1000454B8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void **v4;
  _QWORD *v5;
  _QWORD *v6;
  void *v7;
  char v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  char *v17;
  char *v18;
  _QWORD aBlock[5];
  uint64_t v20;
  char v21[24];

  v1 = &v0[OBJC_IVAR____TtC6FindMy20FMMainViewController_alertQueue];
  swift_beginAccess(&v0[OBJC_IVAR____TtC6FindMy20FMMainViewController_alertQueue], v21, 1, 0);
  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  if (v3)
  {
    v18 = v1;
    swift_bridgeObjectRetain(v2);
    v4 = (void **)(v2 + 40);
    v5 = _swiftEmptyArrayStorage;
    do
    {
      if (*((_BYTE *)v4 - 8) == 1)
      {
        swift_bridgeObjectRelease(0x80000001004A4B10);
      }
      else
      {
        v7 = *v4;
        v8 = _stringCompareWithSmolCheck(_:_:expecting:)(0x746C7561666564, 0xE700000000000000, 0xD000000000000015, 0x80000001004A4B10, 0);
        v9 = v7;
        swift_bridgeObjectRelease(0xE700000000000000);
        if ((v8 & 1) == 0)
        {
          v9 = v9;
          if ((swift_isUniquelyReferenced_nonNull_native(v5) & 1) == 0)
            v5 = sub_100070914(0, v5[2] + 1, 1, v5);
          v11 = v5[2];
          v10 = v5[3];
          if (v11 >= v10 >> 1)
            v5 = sub_100070914((_QWORD *)(v10 > 1), v11 + 1, 1, v5);
          v5[2] = v11 + 1;
          v6 = &v5[2 * v11];
          *((_BYTE *)v6 + 32) = 0;
          v6[5] = v9;
        }

      }
      v4 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease(v2);
    v1 = v18;
    v2 = *(_QWORD *)v18;
  }
  else
  {
    v5 = _swiftEmptyArrayStorage;
  }
  *(_QWORD *)v1 = v5;
  swift_bridgeObjectRelease(v2);
  v12 = *(void **)&v0[OBJC_IVAR____TtC6FindMy20FMMainViewController_currentAlert + 8];
  if (v12)
  {
    v13 = swift_allocObject(&unk_100558230, 24, 7);
    *(_QWORD *)(v13 + 16) = v0;
    aBlock[4] = sub_1002E8240;
    v20 = v13;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100037DF8;
    aBlock[3] = &unk_100558248;
    v14 = _Block_copy(aBlock);
    v15 = v20;
    v16 = v12;
    v17 = v0;
    objc_msgSend(v16, "dismissViewControllerAnimated:completion:", 1, v14, swift_release(v15).n128_f64[0]);
    _Block_release(v14);

  }
}

id sub_100045704()
{
  return sub_100044AFC("FMListViewController: Showing loading view", 1, 0, (SEL *)&selRef_startAnimating);
}

void sub_100045720()
{
  __asm { BR              X10 }
}

void sub_100045788()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  Swift::String v4;
  Swift::String v5;
  void *object;
  NSString v7;
  uint64_t v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  Swift::String v15;
  void *v16;
  void *v17;
  NSString v18;
  id v19;
  id v20;
  Swift::String v21;
  Swift::String v22;
  void *v23;
  unint64_t v24;
  NSString v25;
  Swift::String v26;
  Swift::String v27;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_titleLabel);
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v2 = (void *)objc_opt_self(NSBundle);
  v3 = objc_msgSend(v2, "mainBundle");
  v4._countAndFlagsBits = 0xD000000000000010;
  v26._countAndFlagsBits = 0xD000000000000022;
  v26._object = (void *)0x80000001004C1600;
  v4._object = (void *)0x80000001004C15E0;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v26)._object;

  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setText:", v7, swift_bridgeObjectRelease(object).n128_f64[0]);

  if ((FMIPItemsTabEnabled.getter(v8) & 1) != 0)
  {
    v9 = objc_msgSend(v2, "mainBundle");
    v10 = 0xD000000000000013;
    v11 = 0xD000000000000018;
    v24 = 0x80000001004A5660;
    v12 = 0x80000001004C1630;
    v13 = 0x80000001004A5640;
    v14 = 0xD000000000000012;
  }
  else
  {
    _StringGuts.grow(_:)(20);
    v9 = objc_msgSend(v2, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
    v11 = 0xD000000000000024;
    v24 = 0x80000001004C1650;
    v12 = 0x80000001004C1630;
    v14 = 0xD000000000000012;
    v10 = 0;
    v13 = 0;
  }
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v14, *(Swift::String_optional *)&v10, (NSBundle)v9, v15, *(Swift::String *)&v11)._object;

  v17 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_messageLabel);
  v18 = String._bridgeToObjectiveC()();
  objc_msgSend(v17, "setText:", v18, swift_bridgeObjectRelease(v16).n128_f64[0]);

  v19 = objc_retain(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButton)
                          + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label));
  _StringGuts.grow(_:)(20);
  v20 = objc_msgSend(v2, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
  v21._countAndFlagsBits = 0xD000000000000011;
  v27._countAndFlagsBits = 0xD000000000000023;
  v27._object = (void *)0x80000001004AFD40;
  v21._object = (void *)0x80000001004AFD20;
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)v20, v22, v27)._object;

  v25 = String._bridgeToObjectiveC()();
  objc_msgSend(v19, "setText:", v25, swift_bridgeObjectRelease(v23).n128_f64[0]);

}

uint64_t type metadata accessor for FMNoPersonView()
{
  return objc_opt_self(_TtC6FindMy14FMNoPersonView);
}

uint64_t type metadata accessor for FMNoItemView()
{
  return objc_opt_self(_TtC6FindMy12FMNoItemView);
}

uint64_t type metadata accessor for FMTableView(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D3F40;
  if (!qword_1005D3F40)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMTableView);
  return result;
}

uint64_t sub_1000463CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;

  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_areFriendsInitialized) == 1
    && (*(_BYTE *)(a1 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_areDevicesInitialized) & 1) != 0)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v1 = type metadata accessor for Logger(0);
    v2 = sub_100056D88(v1, (uint64_t)qword_1005F5748);
    v3 = Logger.logObject.getter(v2);
    v4 = static os_log_type_t.default.getter(v3);
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "FMMediator: Condition provider got network but app is initialized. Nothing to do", v5, 2u);
      swift_slowDealloc(v5, -1, -1);
    }

    return dispatch thunk of FMFManager.restartMonitoringLocation()();
  }
  else
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v7 = type metadata accessor for Logger(0);
    v8 = sub_100056D88(v7, (uint64_t)qword_1005F5748);
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "FMMediator: Condition provider got network trying to retry initialization", v11, 2u);
      swift_slowDealloc(v11, -1, -1);
    }

    sub_100044EAC(v12);
    result = dispatch thunk of FMFManager.isInitialized.getter(v13);
    if ((result & 1) == 0)
      return dispatch thunk of FMFManager.initialize()();
  }
  return result;
}

uint64_t type metadata accessor for FMItemAger()
{
  return objc_opt_self(_TtC6FindMy10FMItemAger);
}

uint64_t sub_1000465C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  v1 = v0;
  *(_QWORD *)(v0 + 24) = 0;
  swift_unknownObjectWeakInit(v0 + 16);
  *(_QWORD *)(v0 + 32) = 0;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100056D88(v2, (uint64_t)qword_1005F5748);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMItemAger: initialized", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  return v1;
}

id sub_1000466C8()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  uint64_t v4;
  id v5;
  objc_super v7;

  v1 = OBJC_IVAR____TtC6FindMy13FMLoadingView_title;
  v2 = objc_allocWithZone((Class)UILabel);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, "init");
  v4 = OBJC_IVAR____TtC6FindMy13FMLoadingView_activityIndicator;
  *(_QWORD *)&v3[v4] = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 101);

  v7.receiver = v3;
  v7.super_class = (Class)type metadata accessor for FMLoadingView();
  v5 = objc_msgSendSuper2(&v7, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_100046B84();
  sub_1000467B0();

  return v5;
}

uint64_t type metadata accessor for FMLoadingView()
{
  return objc_opt_self(_TtC6FindMy13FMLoadingView);
}

void sub_1000467B0()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  Class isa;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  Class v29;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy13FMLoadingView_title];
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy13FMLoadingView_activityIndicator];
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = (void *)objc_opt_self(NSLayoutConstraint);
  v5 = sub_100053F2C(&qword_1005D2F10);
  v6 = swift_allocObject(v5, 48, 7);
  *(_OWORD *)(v6 + 16) = xmmword_1004820B0;
  v7 = objc_msgSend(v3, "topAnchor");
  v8 = objc_msgSend(v1, "topAnchor");
  v9 = objc_msgSend(v7, "constraintEqualToAnchor:", v8);

  *(_QWORD *)(v6 + 32) = v9;
  v10 = objc_msgSend(v3, "centerXAnchor");
  v11 = objc_msgSend(v1, "centerXAnchor");
  v12 = objc_msgSend(v10, "constraintEqualToAnchor:", v11);

  *(_QWORD *)(v6 + 40) = v12;
  specialized Array._endMutation()(v13);
  sub_100048C64();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v4, "activateConstraints:", isa, swift_bridgeObjectRelease(v6).n128_f64[0]);

  v15 = swift_allocObject(v5, 64, 7);
  *(_OWORD *)(v15 + 16) = xmmword_100481720;
  v16 = objc_msgSend(v2, "topAnchor");
  v17 = objc_msgSend(v3, "bottomAnchor");
  if (qword_1005D1EF0 != -1)
    swift_once(&qword_1005D1EF0, sub_10005EDE8);
  v18 = objc_msgSend(v16, "constraintEqualToAnchor:constant:", v17, *(double *)&xmmword_1005F5B70);

  *(_QWORD *)(v15 + 32) = v18;
  v19 = objc_msgSend(v2, "bottomAnchor");
  v20 = objc_msgSend(v1, "bottomAnchor");
  v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

  *(_QWORD *)(v15 + 40) = v21;
  v22 = objc_msgSend(v2, "leadingAnchor");
  v23 = objc_msgSend(v1, "leadingAnchor");
  v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

  *(_QWORD *)(v15 + 48) = v24;
  v25 = objc_msgSend(v2, "trailingAnchor");
  v26 = objc_msgSend(v1, "trailingAnchor");
  v27 = objc_msgSend(v25, "constraintEqualToAnchor:", v26);

  *(_QWORD *)(v15 + 56) = v27;
  specialized Array._endMutation()(v28);
  v29 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v4, "activateConstraints:", v29, swift_bridgeObjectRelease(v15).n128_f64[0]);

}

id sub_100046B84()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t inited;
  NSString *v6;
  unint64_t v7;
  id v8;
  id v9;
  id v10;
  Swift::String v11;
  Swift::String v12;
  void *object;
  NSString v14;
  char v16[48];
  Swift::String v17;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy13FMLoadingView_title];
  v3 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  v4 = sub_100053F2C((uint64_t *)&unk_1005D7EA0);
  inited = swift_initStackObject(v4, v16);
  *(_OWORD *)(inited + 16) = xmmword_100481740;
  *(_QWORD *)(inited + 32) = UIFontWeightTrait;
  *(UIFontWeight *)(inited + 40) = UIFontWeightMedium;
  v6 = UIFontWeightTrait;
  v7 = sub_10004907C(inited);
  v8 = sub_100049188(v7);

  objc_msgSend(v2, "setFont:", v8, swift_bridgeObjectRelease(v7).n128_f64[0]);
  objc_msgSend(v2, "setAdjustsFontForContentSizeCategory:", 1);
  v9 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
  objc_msgSend(v2, "setTextColor:", v9);

  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v17._object = (void *)0x80000001004BFC70;
  v11._countAndFlagsBits = 0x474E4944414F4CLL;
  v11._object = (void *)0xE700000000000000;
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  v17._countAndFlagsBits = 0xD000000000000019;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v17)._object;

  v14 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setText:", v14, swift_bridgeObjectRelease(object).n128_f64[0]);

  objc_msgSend(v1, "addSubview:", v2);
  return objc_msgSend(v1, "addSubview:", *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy13FMLoadingView_activityIndicator]);
}

id sub_100046DB4()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  double v19;
  id v20;
  id v21;
  id v22;
  double v23;
  id v24;
  uint64_t v25;
  Class isa;
  double v28;
  double v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  double v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  Class v45;
  id v46;
  uint64_t v47;
  int v48;
  int v49;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_activityIndicator];
  v3 = objc_msgSend(v2, "constraints");
  v4 = sub_100048C64();
  v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v3, v4);

  if ((unint64_t)v5 >> 62)
  {
    if (v5 < 0)
      v10 = v5;
    else
      v10 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v5);
    v6 = _CocoaArrayWrapper.endIndex.getter(v10);
    if (!v6)
      goto LABEL_13;
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v5);
    if (!v6)
      goto LABEL_13;
  }
  if (v6 < 1)
  {
    __break(1u);
LABEL_20:
    swift_once(&qword_1005D20B8, sub_10005E610);
    goto LABEL_16;
  }
  for (i = 0; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0)
      v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v5);
    else
      v8 = *(id *)(v5 + 8 * i + 32);
    v9 = v8;
    objc_msgSend(v2, "removeConstraint:", v8);

  }
LABEL_13:
  swift_bridgeObjectRelease_n(v5, 2);
  if ((v1[OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_activityIndicatorPosition] & 1) != 0)
  {
    v46 = (id)objc_opt_self(NSLayoutConstraint);
    v11 = sub_100053F2C(&qword_1005D2F10);
    v12 = swift_allocObject(v11, 48, 7);
    *(_OWORD *)(v12 + 16) = xmmword_1004820B0;
    v13 = objc_msgSend(v2, "centerYAnchor");
    v14 = objc_msgSend(v1, "centerYAnchor");
    v15 = objc_msgSend(v13, "constraintEqualToAnchor:", v14);

    type metadata accessor for UILayoutPriority(0);
    v17 = v16;
    v48 = 1065353216;
    v49 = 1148846080;
    v18 = sub_10004E0AC();
    static _UIKitNumericRawRepresentable.- infix(_:_:)(&v47, &v49, &v48, v17, v18);
    LODWORD(v19) = v47;
    objc_msgSend(v15, "setPriority:", v19);
    *(_QWORD *)(v12 + 32) = v15;
    v20 = objc_msgSend(v2, "centerXAnchor");
    v21 = objc_msgSend(v1, "centerXAnchor");
    v22 = objc_msgSend(v20, "constraintEqualToAnchor:", v21);

    v48 = 1065353216;
    v49 = 1148846080;
    static _UIKitNumericRawRepresentable.- infix(_:_:)(&v47, &v49, &v48, v17, v18);
    LODWORD(v23) = v47;
    v24 = objc_msgSend(v22, "setPriority:", v23);
    *(_QWORD *)(v12 + 40) = v22;
    v47 = v12;
    specialized Array._endMutation()(v24);
    v25 = v47;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v46, "activateConstraints:", isa, swift_bridgeObjectRelease(v25).n128_f64[0]);

    return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label], "setHidden:", v1[OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_showActivityIndicator]);
  }
  if (qword_1005D20B8 != -1)
    goto LABEL_20;
LABEL_16:
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v28 = *(double *)&qword_1005F5978;
  v29 = *(double *)&xmmword_1005F6180;
  v30 = (void *)objc_opt_self(NSLayoutConstraint);
  v31 = sub_100053F2C(&qword_1005D2F10);
  v32 = swift_allocObject(v31, 48, 7);
  *(_OWORD *)(v32 + 16) = xmmword_1004820B0;
  v33 = objc_msgSend(v2, "topAnchor");
  v34 = objc_msgSend(v1, "topAnchor");
  v35 = objc_msgSend(v33, "constraintEqualToAnchor:constant:", v34, v29);

  type metadata accessor for UILayoutPriority(0);
  v37 = v36;
  v48 = 1065353216;
  v49 = 1148846080;
  v38 = sub_10004E0AC();
  static _UIKitNumericRawRepresentable.- infix(_:_:)(&v47, &v49, &v48, v37, v38);
  LODWORD(v39) = v47;
  objc_msgSend(v35, "setPriority:", v39);
  *(_QWORD *)(v32 + 32) = v35;
  v40 = objc_msgSend(v2, "trailingAnchor");
  v41 = objc_msgSend(v1, "trailingAnchor");
  v42 = objc_msgSend(v40, "constraintLessThanOrEqualToAnchor:constant:", v41, -v28);

  *(_QWORD *)(v32 + 40) = v42;
  v47 = v32;
  specialized Array._endMutation()(v43);
  v44 = v47;
  v45 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v30, "activateConstraints:", v45, swift_bridgeObjectRelease(v44).n128_f64[0]);

  return objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label], "setHidden:", 0);
}

uint64_t type metadata accessor for FMScrollView()
{
  return objc_opt_self(_TtC6FindMy12FMScrollView);
}

id sub_1000472FC(void *a1, char a2, uint64_t a3, char a4)
{
  char *v4;
  uint64_t v9;
  id v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  objc_super v19;

  v9 = OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label;
  v10 = objc_allocWithZone((Class)UILabel);
  v11 = v4;
  *(_QWORD *)&v4[v9] = objc_msgSend(v10, "init");
  v12 = OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_activityIndicator;
  *(_QWORD *)&v11[v12] = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 100);
  v13 = OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_color;
  *(_QWORD *)&v11[OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_color] = 0;
  v14 = OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_isBackgroundColor;
  v11[OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_isBackgroundColor] = 0;
  v15 = &v11[OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_textAlignment];
  *(_QWORD *)v15 = 0;
  v15[8] = 1;
  v11[OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_activityIndicatorPosition] = 0;
  v11[OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_showActivityIndicator] = 0;
  v16 = *(void **)&v11[v13];
  *(_QWORD *)&v11[v13] = a1;
  v17 = a1;

  v11[v14] = a2;
  *(_QWORD *)v15 = a3;
  v15[8] = a4 & 1;

  v19.receiver = v11;
  v19.super_class = (Class)type metadata accessor for FMSingleLinePlatterButton();
  return objc_msgSendSuper2(&v19, "init");
}

uint64_t type metadata accessor for FMSingleLinePlatterButton()
{
  return objc_opt_self(_TtC6FindMy25FMSingleLinePlatterButton);
}

uint64_t type metadata accessor for FMEmptyListButton()
{
  return objc_opt_self(_TtC6FindMy17FMEmptyListButton);
}

uint64_t type metadata accessor for FMEmptyListView()
{
  return objc_opt_self(_TtC6FindMy15FMEmptyListView);
}

id sub_1000475B8()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  char v4;
  double leading;
  double bottom;
  double trailing;
  void *v8;
  uint64_t *v9;
  double v10;
  double *v11;
  uint64_t *v12;
  __int128 v13;
  double v14;
  double v15;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButtonsStackView);
  objc_msgSend(v1, "removeFromSuperview");
  v2 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v3 = objc_msgSend(v2, "preferredContentSizeCategory");

  v4 = UIContentSizeCategory.isAccessibilityCategory.getter(v3);
  if ((v4 & 1) != 0)
  {
    leading = NSDirectionalEdgeInsetsZero.leading;
    bottom = NSDirectionalEdgeInsetsZero.bottom;
    trailing = NSDirectionalEdgeInsetsZero.trailing;
    objc_msgSend(v1, "setDirectionalLayoutMargins:", NSDirectionalEdgeInsetsZero.top, leading, bottom, trailing);
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_fixedContainerView), "setDirectionalLayoutMargins:", NSDirectionalEdgeInsetsZero.top, leading, bottom, trailing);
    v8 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_scrollableContainerView);
    if (qword_1005D1D50 != -1)
      swift_once(&qword_1005D1D50, sub_10022D1FC);
    v9 = &qword_1005F54A0;
    v10 = *(double *)&xmmword_1005F5490;
    v11 = (double *)&xmmword_1005F5450 + 1;
    v12 = &qword_1005F5468;
    if (qword_1005D1D40 != -1)
    {
      swift_once(&qword_1005D1D40, sub_10005F370);
      v9 = &qword_1005F54A0;
    }
  }
  else
  {
    if (qword_1005D1D40 != -1)
      swift_once(&qword_1005D1D40, sub_10005F370);
    v13 = xmmword_1005F5450;
    v14 = *(double *)&qword_1005F5460;
    v15 = *(double *)&qword_1005F5468;
    objc_msgSend(v1, "setDirectionalLayoutMargins:", xmmword_1005F5450, *(double *)&qword_1005F5460, *(double *)&qword_1005F5468);
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_scrollableContainerView), "setDirectionalLayoutMargins:", v13, v14, v15);
    v8 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_fixedContainerView);
    if (qword_1005D1D48 != -1)
      swift_once(&qword_1005D1D48, sub_10005F388);
    v12 = &qword_1005F5488;
    v9 = &qword_1005F5480;
    v11 = (double *)&xmmword_1005F5470 + 1;
    v10 = *(double *)&xmmword_1005F5470;
  }
  objc_msgSend(v8, "setDirectionalLayoutMargins:", v10, *v11, *(double *)v9, *(double *)v12);
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButtonCenteringConstraint), "setActive:", v4 & 1);
  return objc_msgSend(v8, "addArrangedSubview:", v1);
}

void sub_100047840()
{
  void *v0;
  id v1;
  id v2;
  char v3;
  double v4;
  BOOL v5;
  double v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  _QWORD v12[5];
  uint64_t v13;

  v1 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v2 = objc_msgSend(v1, "preferredContentSizeCategory");

  v3 = UIContentSizeCategory.isAccessibilityCategory.getter(v2);
  objc_msgSend(v0, "frame");
  v5 = v4 > 360.0;
  if (*((_BYTE *)v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_isFirstLayout))
    v6 = 0.0;
  else
    v6 = 0.1;
  v7 = (void *)objc_opt_self(UIView);
  v8 = swift_allocObject(&unk_100552298, 26, 7);
  *(_QWORD *)(v8 + 16) = v0;
  *(_BYTE *)(v8 + 24) = v5;
  *(_BYTE *)(v8 + 25) = v3 & 1;
  v12[4] = sub_10003E448;
  v13 = v8;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_100037DF8;
  v12[3] = &unk_1005522B0;
  v9 = _Block_copy(v12);
  v10 = v13;
  v11 = v0;
  swift_release(v10);
  objc_msgSend(v7, "animateWithDuration:delay:options:animations:completion:", 0x20000, v9, 0, v6, 0.0);
  _Block_release(v9);
}

void sub_1000479B8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  double v31;
  id v32;
  uint64_t v33;
  Class isa;
  uint64_t v35;
  id v36;
  uint64_t v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  Class v54;
  uint64_t v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  double v62;
  id v63;
  uint64_t v64;
  Class v65;
  uint64_t v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  Class v81;
  id v82;
  double v83;
  CGFloat v84;
  double v85;
  CGFloat v86;
  double v87;
  CGFloat v88;
  double v89;
  CGFloat v90;
  id v91;
  id v92;
  id v93;
  id v94;
  id v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  id v99;
  id v100;
  id v101;
  char *v102;
  id v103;
  uint64_t v104;
  int v105;
  int v106;
  CGRect v107;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_scrollableContainerView);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButtonsStackView);
  v3 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_scrollView);
  v4 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_iconViewContainer);
  v5 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_iconView);
  v6 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_titleLabel);
  v7 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_messageLabel);
  v8 = *(id *)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_fixedContainerView);
  v103 = v1;
  v9 = v2;
  v10 = v3;
  v11 = v4;
  v12 = v5;
  v13 = v6;
  v14 = v7;
  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v103, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v100 = v11;
  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v99 = v12;
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v14, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v101 = (id)objc_opt_self(NSLayoutConstraint);
  v97 = sub_100053F2C(&qword_1005D2F10);
  v15 = swift_allocObject(v97, 64, 7);
  *(_OWORD *)(v15 + 16) = xmmword_100481720;
  v16 = objc_msgSend(v8, "leadingAnchor");
  v17 = objc_msgSend(v102, "leadingAnchor");
  v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

  *(_QWORD *)(v15 + 32) = v18;
  v19 = objc_msgSend(v8, "trailingAnchor");
  v20 = objc_msgSend(v102, "trailingAnchor");
  v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

  *(_QWORD *)(v15 + 40) = v21;
  v22 = objc_msgSend(v8, "topAnchor");
  v23 = objc_msgSend(v102, "topAnchor");
  v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

  *(_QWORD *)(v15 + 48) = v24;
  v25 = objc_msgSend(v8, "bottomAnchor");
  v26 = objc_msgSend(v102, "bottomAnchor");
  v27 = objc_msgSend(v25, "constraintEqualToAnchor:", v26);

  type metadata accessor for UILayoutPriority(0);
  v29 = v28;
  v105 = 1065353216;
  v106 = 1148846080;
  v30 = sub_10004E0AC();
  static _UIKitNumericRawRepresentable.- infix(_:_:)(&v104, &v106, &v105, v29, v30);
  LODWORD(v31) = v104;
  v32 = objc_msgSend(v27, "setPriority:", v31);
  *(_QWORD *)(v15 + 56) = v27;
  v104 = v15;
  specialized Array._endMutation()(v32);
  v33 = v104;
  sub_100048C64();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v101, "activateConstraints:", isa, swift_bridgeObjectRelease(v33).n128_f64[0]);

  v35 = swift_allocObject(v97, 72, 7);
  *(_OWORD *)(v35 + 16) = xmmword_1004820D0;
  v36 = objc_msgSend(v103, "leadingAnchor");
  v37 = OBJC_IVAR____TtC6FindMy12FMScrollView_content;
  v38 = objc_msgSend(*(id *)&v10[OBJC_IVAR____TtC6FindMy12FMScrollView_content], "leadingAnchor");
  v39 = objc_msgSend(v36, "constraintEqualToAnchor:", v38);

  *(_QWORD *)(v35 + 32) = v39;
  v40 = objc_msgSend(v103, "trailingAnchor");
  v41 = objc_msgSend(*(id *)&v10[v37], "trailingAnchor");
  v42 = objc_msgSend(v40, "constraintEqualToAnchor:", v41);

  *(_QWORD *)(v35 + 40) = v42;
  v43 = objc_msgSend(v103, "bottomAnchor");
  v44 = objc_msgSend(*(id *)&v10[v37], "bottomAnchor");
  v45 = objc_msgSend(v43, "constraintLessThanOrEqualToAnchor:", v44);

  *(_QWORD *)(v35 + 48) = v45;
  v46 = objc_msgSend(v103, "topAnchor");
  v47 = objc_msgSend(*(id *)&v10[v37], "topAnchor");
  v48 = objc_msgSend(v46, "constraintGreaterThanOrEqualToAnchor:", v47);

  *(_QWORD *)(v35 + 56) = v48;
  v49 = objc_msgSend(v103, "widthAnchor");
  v50 = objc_msgSend(v102, "widthAnchor");
  v51 = objc_msgSend(v49, "constraintEqualToAnchor:", v50);

  *(_QWORD *)(v35 + 64) = v51;
  v104 = v35;
  specialized Array._endMutation()(v52);
  v53 = v104;
  v54 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v101, "activateConstraints:", v54, swift_bridgeObjectRelease(v53).n128_f64[0]);

  v55 = swift_allocObject(v97, 48, 7);
  *(_OWORD *)(v55 + 16) = xmmword_1004820B0;
  v56 = objc_msgSend(*(id *)&v10[v37], "widthAnchor");
  v57 = objc_msgSend(v10, "widthAnchor");
  v58 = objc_msgSend(v56, "constraintEqualToAnchor:", v57);

  *(_QWORD *)(v55 + 32) = v58;
  v98 = v37;
  v59 = objc_msgSend(*(id *)&v10[v37], "heightAnchor");
  v60 = objc_msgSend(v10, "heightAnchor");
  v61 = objc_msgSend(v59, "constraintGreaterThanOrEqualToAnchor:", v60);

  LODWORD(v62) = 1132068864;
  v63 = objc_msgSend(v61, "setPriority:", v62);
  *(_QWORD *)(v55 + 40) = v61;
  v104 = v55;
  specialized Array._endMutation()(v63);
  v64 = v104;
  v65 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v101, "activateConstraints:", v65, swift_bridgeObjectRelease(v64).n128_f64[0]);

  v66 = swift_allocObject(v97, 64, 7);
  *(_OWORD *)(v66 + 16) = xmmword_100481720;
  v67 = objc_msgSend(v99, "centerXAnchor");
  v68 = objc_msgSend(v100, "centerXAnchor");
  v69 = objc_msgSend(v67, "constraintEqualToAnchor:", v68);

  *(_QWORD *)(v66 + 32) = v69;
  v70 = objc_msgSend(v99, "topAnchor");
  v71 = objc_msgSend(v100, "topAnchor");
  v72 = objc_msgSend(v70, "constraintEqualToAnchor:", v71);

  *(_QWORD *)(v66 + 40) = v72;
  v73 = objc_msgSend(v99, "bottomAnchor");
  v74 = objc_msgSend(v100, "bottomAnchor");
  v75 = objc_msgSend(v73, "constraintEqualToAnchor:", v74);

  *(_QWORD *)(v66 + 48) = v75;
  v76 = objc_msgSend(v99, "widthAnchor");
  v77 = objc_msgSend(v99, "heightAnchor");
  v78 = objc_msgSend(v76, "constraintEqualToAnchor:multiplier:", v77, 1.684);

  *(_QWORD *)(v66 + 56) = v78;
  v104 = v66;
  specialized Array._endMutation()(v79);
  v80 = v104;
  v81 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v101, "activateConstraints:", v81, swift_bridgeObjectRelease(v80).n128_f64[0]);

  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v82 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v82, "nativeBounds");
  v84 = v83;
  v86 = v85;
  v88 = v87;
  v90 = v89;

  v107.origin.x = v84;
  v107.origin.y = v86;
  v107.size.width = v88;
  v107.size.height = v90;
  if (CGRectGetHeight(v107) <= 1136.0)
  {
    v91 = objc_msgSend(v99, "heightAnchor");
    v92 = objc_msgSend(v91, "constraintEqualToConstant:", 70.0);

    objc_msgSend(v92, "setActive:", 1);
  }
  v93 = objc_msgSend(v103, "centerYAnchor");
  v94 = objc_msgSend(*(id *)&v10[v98], "centerYAnchor");
  v95 = objc_msgSend(v93, "constraintEqualToAnchor:", v94);

  v96 = *(void **)&v102[OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButtonCenteringConstraint];
  *(_QWORD *)&v102[OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButtonCenteringConstraint] = v95;

}

_QWORD *sub_100048524()
{
  _BYTE *v0;
  uint64_t v1;
  id v2;
  char *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  char **v9;
  id v10;
  _QWORD *v11;
  uint64_t (*v12)(void);
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  objc_super v17;

  v0[OBJC_IVAR____TtC6FindMy15FMPlatterButton_alignment] = 3;
  v1 = OBJC_IVAR____TtC6FindMy15FMPlatterButton_bottomSeparator;
  v2 = objc_allocWithZone((Class)UIView);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, "init");
  v4 = OBJC_IVAR____TtC6FindMy15FMPlatterButton_topSeparator;
  *(_QWORD *)&v3[v4] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v5 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  v6 = objc_msgSend(v5, "traitCollection");

  v7 = objc_msgSend(v6, "userInterfaceStyle");
  v8 = (void *)objc_opt_self(UIColor);
  v9 = &selRef_tertiarySystemFillColor;
  if (v7 != (id)2)
    v9 = &selRef_whiteColor;
  v10 = objc_msgSend(v8, *v9);

  *(_QWORD *)&v3[OBJC_IVAR____TtC6FindMy15FMPlatterButton_background] = v10;
  v17.receiver = v3;
  v17.super_class = (Class)type metadata accessor for FMPlatterButton();
  v11 = objc_msgSendSuper2(&v17, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v12 = *(uint64_t (**)(void))((swift_isaMask & *v11) + 0xD0);
  v13 = v11;
  v14 = v12();
  v15 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v13) + 0xD8))(v14);
  (*(void (**)(uint64_t))((swift_isaMask & *v13) + 0xE0))(v15);

  return v13;
}

void sub_1000486F8()
{
  char *v0;
  id v1;
  id v2;
  void *v3;
  char **v4;
  id v5;
  void *v6;

  if ((v0[OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_isBackgroundColor] & 1) == 0)
  {
    if (qword_1005D1E80 != -1)
      swift_once(&qword_1005D1E80, sub_100008974);
    v1 = objc_msgSend(v0, "traitCollection");
    v2 = objc_msgSend(v1, "userInterfaceStyle");
    v3 = (void *)objc_opt_self(UIColor);
    v4 = &selRef_tertiarySystemFillColor;
    if (v2 != (id)2)
      v4 = &selRef_whiteColor;
    v5 = objc_msgSend(v3, *v4);

    v6 = *(void **)&v0[OBJC_IVAR____TtC6FindMy15FMPlatterButton_background];
    *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy15FMPlatterButton_background] = v5;

  }
  sub_1000487D0();
}

void sub_1000487D0()
{
  char *v0;
  id v1;
  id v2;
  id v3;
  double v4;
  double v5;
  id v6;
  id v7;

  objc_msgSend(v0, "setBackgroundColor:", *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy15FMPlatterButton_background]);
  v1 = objc_msgSend(v0, "layer");
  objc_msgSend(v1, "setShouldRasterize:", 1);

  v2 = objc_msgSend(v0, "layer");
  v3 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v3, "scale");
  v5 = v4;

  objc_msgSend(v2, "setRasterizationScale:", v5);
  v6 = objc_msgSend(v0, "layer");
  objc_msgSend(v6, "setCornerRadius:", _UISheetCornerRadius);

  v7 = objc_msgSend(v0, "layer");
  objc_msgSend(v7, "setMasksToBounds:", 0);

}

id sub_100048914()
{
  char *v0;
  char *v1;
  double v2;
  double v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  double v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  Class isa;
  uint64_t v30;
  int v31;
  int v32;

  v1 = v0;
  sub_100049798();
  if (qword_1005D20B8 != -1)
    swift_once(&qword_1005D20B8, sub_10005E610);
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v2 = *(double *)&qword_1005F5978;
  v3 = *(double *)&xmmword_1005F6180;
  v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_activityIndicator];
  v5 = *(id *)&v1[OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label];
  v6 = v4;
  objc_msgSend(v5, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v6, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v7 = (void *)objc_opt_self(NSLayoutConstraint);
  v8 = sub_100053F2C(&qword_1005D2F10);
  v9 = swift_allocObject(v8, 64, 7);
  *(_OWORD *)(v9 + 16) = xmmword_100481720;
  v10 = objc_msgSend(v5, "topAnchor");
  v11 = objc_msgSend(v1, "topAnchor");
  v12 = objc_msgSend(v10, "constraintEqualToAnchor:constant:", v11, v3);

  type metadata accessor for UILayoutPriority(0);
  v14 = v13;
  v31 = 1065353216;
  v32 = 1148846080;
  v15 = sub_10004E0AC();
  static _UIKitNumericRawRepresentable.- infix(_:_:)(&v30, &v32, &v31, v14, v15);
  LODWORD(v16) = v30;
  objc_msgSend(v12, "setPriority:", v16);
  *(_QWORD *)(v9 + 32) = v12;
  v17 = objc_msgSend(v5, "leadingAnchor");
  v18 = objc_msgSend(v1, "leadingAnchor");
  v19 = objc_msgSend(v17, "constraintEqualToAnchor:constant:", v18, v2);

  *(_QWORD *)(v9 + 40) = v19;
  v20 = objc_msgSend(v5, "trailingAnchor");
  v21 = objc_msgSend(v1, "trailingAnchor");
  v22 = objc_msgSend(v20, "constraintEqualToAnchor:constant:", v21, -v2);

  *(_QWORD *)(v9 + 48) = v22;
  v23 = objc_msgSend(v5, "bottomAnchor");
  v24 = objc_msgSend(v1, "bottomAnchor");
  v25 = objc_msgSend(v23, "constraintEqualToAnchor:constant:", v24, -v3);

  *(_QWORD *)(v9 + 56) = v25;
  v30 = v9;
  specialized Array._endMutation()(v26);
  v27 = v30;
  sub_100048C64();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v7, "activateConstraints:", isa, swift_bridgeObjectRelease(v27).n128_f64[0]);

  return sub_100046DB4();
}

unint64_t sub_100048C64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D2A60;
  if (!qword_1005D2A60)
  {
    v1 = objc_opt_self(NSLayoutConstraint);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1005D2A60);
  }
  return result;
}

id sub_100048CA0()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  double v6;
  double v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  double v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t inited;
  NSString *v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  double v28;
  int v30;
  int v31;
  _QWORD v32[6];

  v1 = v0;
  sub_100049460();
  v2 = objc_msgSend(v0, "layer");
  if (qword_1005D1D70 != -1)
    swift_once(&qword_1005D1D70, sub_10005E32C);
  objc_msgSend(v2, "setCornerRadius:", *(double *)&qword_1005F54C8);

  v3 = objc_msgSend(v1, "layer");
  objc_msgSend(v3, "setShouldRasterize:", 1);

  v4 = objc_msgSend(v1, "layer");
  v5 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v5, "scale");
  v7 = v6;

  objc_msgSend(v4, "setRasterizationScale:", v7);
  v8 = objc_msgSend(v1, "layer");
  objc_msgSend(v8, "setCornerRadius:", *(double *)&qword_1005F54C8);

  v9 = objc_msgSend(v1, "layer");
  objc_msgSend(v9, "setMasksToBounds:", 0);

  v10 = objc_msgSend(v1, "layer");
  v11 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
  v12 = objc_msgSend(v11, "CGColor");

  objc_msgSend(v10, "setShadowColor:", v12);
  v13 = objc_msgSend(v1, "layer");
  LODWORD(v14) = 1031127695;
  objc_msgSend(v13, "setShadowOpacity:", v14);

  v15 = objc_msgSend(v1, "layer");
  objc_msgSend(v15, "setShadowRadius:", 16.0);

  v16 = objc_msgSend(v1, "layer");
  objc_msgSend(v16, "setShadowOffset:", 0.0, 0.0);

  v17 = *(void **)&v1[OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label];
  v18 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  v19 = (void *)sub_10003CEE8(0x8000);

  v20 = sub_100053F2C((uint64_t *)&unk_1005D7EA0);
  inited = swift_initStackObject(v20, (char *)v32 + 4);
  *(_OWORD *)(inited + 16) = xmmword_100481740;
  *(_QWORD *)(inited + 32) = UIFontWeightTrait;
  *(UIFontWeight *)(inited + 40) = UIFontWeightMedium;
  v22 = UIFontWeightTrait;
  v23 = sub_10004907C(inited);
  v24 = sub_100049188(v23);

  objc_msgSend(v17, "setFont:", v24, swift_bridgeObjectRelease(v23).n128_f64[0]);
  objc_msgSend(v17, "setTextColor:", *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy17FMEmptyListButton_textColor]);
  objc_msgSend(v17, "setNumberOfLines:", 0);
  type metadata accessor for UILayoutPriority(0);
  v26 = v25;
  v30 = 1065353216;
  v31 = 1148846080;
  v27 = sub_10004E0AC();
  static _UIKitNumericRawRepresentable.- infix(_:_:)(v32, &v31, &v30, v26, v27);
  LODWORD(v28) = v32[0];
  return objc_msgSend(v17, "setContentCompressionResistancePriority:forAxis:", 1, v28);
}

unint64_t sub_10004907C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100053F2C(&qword_1005D6CB8);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v7 = *v6;
    v8 = (id)*(v6 - 1);
    result = sub_100049184();
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = 8 * result;
    *(_QWORD *)(v4[6] + v11) = v8;
    *(_QWORD *)(v4[7] + v11) = v7;
    v12 = v4[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v4[2] = v14;
    v6 += 2;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id sub_100049188(uint64_t a1)
{
  void *v1;
  id v3;
  uint64_t v4;
  uint64_t inited;
  NSString *v6;
  unint64_t v7;
  Class isa;
  id v9;
  id v10;
  _BYTE v12[72];

  v3 = objc_msgSend(v1, "fontDescriptor");
  v4 = sub_100053F2C(&qword_1005D6C98);
  inited = swift_initStackObject(v4, v12);
  *(_OWORD *)(inited + 16) = xmmword_100481740;
  *(_QWORD *)(inited + 32) = UIFontDescriptorTraitsAttribute;
  *(_QWORD *)(inited + 64) = sub_100053F2C(&qword_1005D6CA0);
  *(_QWORD *)(inited + 40) = a1;
  v6 = UIFontDescriptorTraitsAttribute;
  swift_bridgeObjectRetain(a1);
  v7 = sub_100049338(inited, &qword_1005D6CA8, &qword_1005D6CB0, (uint64_t (*)(uint64_t))sub_100049184);
  type metadata accessor for AttributeName(0);
  sub_1000492F0();
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v9 = objc_msgSend(v3, "fontDescriptorByAddingAttributes:", isa, swift_bridgeObjectRelease(v7).n128_f64[0]);

  v10 = objc_msgSend((id)objc_opt_self(UIFont), "fontWithDescriptor:size:", v9, 0.0);
  return v10;
}

void type metadata accessor for AttributeName(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D2420, (uint64_t)&unk_1005408F0);
}

unint64_t sub_1000492F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D25F0;
  if (!qword_1005D25F0)
  {
    type metadata accessor for AttributeName(255);
    result = swift_getWitnessTable(&unk_1004812B4, v1);
    atomic_store(result, (unint64_t *)&qword_1005D25F0);
  }
  return result;
}

unint64_t sub_100049338(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
    v9 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100053F2C(a2);
  v8 = static _DictionaryStorage.allocate(capacity:)(v5);
  v9 = (_QWORD *)v8;
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v9;
  }
  v11 = v8 + 64;
  v12 = a1 + 32;
  swift_retain(v8);
  while (1)
  {
    sub_100007464(v12, (uint64_t)&v19, a3);
    v13 = v19;
    result = a4(v19);
    if ((v15 & 1) != 0)
      break;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v9[6] + 8 * result) = v13;
    result = (unint64_t)sub_10004C850(&v20, (_OWORD *)(v9[7] + 32 * result));
    v16 = v9[2];
    v17 = __OFADD__(v16, 1);
    v18 = v16 + 1;
    if (v17)
      goto LABEL_11;
    v9[2] = v18;
    v12 += 40;
    if (!--v10)
    {
      swift_release(v9);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id sub_100049460()
{
  _BYTE *v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  char **v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  char **v19;
  id v20;
  void *v21;

  sub_100049C44();
  v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label];
  v2 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  objc_msgSend(v1, "setFont:", v2);

  objc_msgSend(v1, "setNumberOfLines:", 0);
  objc_msgSend(v1, "setAdjustsFontForContentSizeCategory:", 1);
  if (v0[OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_textAlignment + 8])
    v3 = 4;
  else
    v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_textAlignment];
  objc_msgSend(v1, "setTextAlignment:", v3);
  if (v0[OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_isBackgroundColor] == 1)
  {
    v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_color];
    if (v4)
    {
      v5 = *(id *)&v0[OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_color];
    }
    else
    {
      v5 = objc_msgSend((id)objc_opt_self(UIColor), "systemRedColor");
      v4 = 0;
    }
    v14 = *(void **)&v0[OBJC_IVAR____TtC6FindMy15FMPlatterButton_background];
    *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy15FMPlatterButton_background] = v5;
    v15 = v4;

    if (qword_1005D1E80 != -1)
      swift_once(&qword_1005D1E80, sub_100008974);
    v16 = objc_msgSend(v0, "traitCollection");
    v17 = objc_msgSend(v16, "userInterfaceStyle");
    v18 = (void *)objc_opt_self(UIColor);
    v19 = &selRef_tertiarySystemFillColor;
    if (v17 != (id)2)
      v19 = &selRef_whiteColor;
    v13 = objc_msgSend(v18, *v19);

  }
  else
  {
    if (qword_1005D1E80 != -1)
      swift_once(&qword_1005D1E80, sub_100008974);
    v6 = objc_msgSend(v0, "traitCollection");
    v7 = objc_msgSend(v6, "userInterfaceStyle");
    v8 = (void *)objc_opt_self(UIColor);
    v9 = &selRef_tertiarySystemFillColor;
    if (v7 != (id)2)
      v9 = &selRef_whiteColor;
    v10 = objc_msgSend(v8, *v9);

    v11 = *(void **)&v0[OBJC_IVAR____TtC6FindMy15FMPlatterButton_background];
    *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy15FMPlatterButton_background] = v10;

    v12 = *(void **)&v0[OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_color];
    if (v12)
    {
      v13 = *(id *)&v0[OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_color];
    }
    else
    {
      v13 = objc_msgSend((id)objc_opt_self(UIColor), "systemRedColor");
      v12 = 0;
    }
    v20 = v12;
  }
  objc_msgSend(v1, "setTextColor:", v13);

  objc_msgSend(v0, "addSubview:", v1);
  v21 = *(void **)&v0[OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_activityIndicator];
  objc_msgSend(v21, "setHidden:", 1);
  return objc_msgSend(v0, "addSubview:", v21);
}

uint64_t type metadata accessor for FMPlatterButton()
{
  return objc_opt_self(_TtC6FindMy15FMPlatterButton);
}

void sub_100049798()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  double v5;
  double v6;
  double v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  Class isa;
  uint64_t v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  id v39;
  id v40;
  char *v41;
  Class v42;

  v1 = v0;
  v2 = OBJC_IVAR____TtC6FindMy15FMPlatterButton_bottomSeparator;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy15FMPlatterButton_bottomSeparator], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = OBJC_IVAR____TtC6FindMy15FMPlatterButton_topSeparator;
  v41 = (char *)OBJC_IVAR____TtC6FindMy15FMPlatterButton_topSeparator;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy15FMPlatterButton_topSeparator], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v4, "scale");
  v6 = v5;

  v7 = 1.0 / v6;
  v8 = objc_msgSend(*(id *)((char *)v1 + v2), "bottomAnchor");
  v9 = objc_msgSend(v1, "bottomAnchor");
  v10 = objc_msgSend(v8, "constraintEqualToAnchor:", v9);

  v11 = objc_msgSend(*(id *)((char *)v1 + v3), "topAnchor");
  v12 = objc_msgSend(v1, "topAnchor");
  v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

  v39 = (id)objc_opt_self(NSLayoutConstraint);
  v14 = sub_100053F2C(&qword_1005D2F10);
  v15 = swift_allocObject(v14, 64, 7);
  *(_OWORD *)(v15 + 16) = xmmword_100481720;
  v16 = objc_msgSend(*(id *)((char *)v1 + v2), "heightAnchor");
  v17 = objc_msgSend(v16, "constraintEqualToConstant:", v7);

  *(_QWORD *)(v15 + 32) = v17;
  *(_QWORD *)(v15 + 40) = v10;
  v18 = *(void **)((char *)v1 + v2);
  v40 = v10;
  v19 = objc_msgSend(v18, "leadingAnchor");
  v20 = objc_msgSend(v1, "leadingAnchor");
  v21 = objc_msgSend(v19, "constraintEqualToAnchor:", v20);

  *(_QWORD *)(v15 + 48) = v21;
  v22 = objc_msgSend(*(id *)((char *)v1 + v2), "trailingAnchor");
  v23 = objc_msgSend(v1, "trailingAnchor");
  v24 = objc_msgSend(v22, "constraintEqualToAnchor:", v23);

  *(_QWORD *)(v15 + 56) = v24;
  specialized Array._endMutation()(v25);
  sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v39, "activateConstraints:", isa, swift_bridgeObjectRelease(v15).n128_f64[0]);

  v27 = swift_allocObject(v14, 64, 7);
  *(_OWORD *)(v27 + 16) = xmmword_100481720;
  v28 = objc_msgSend(*(id *)&v41[(_QWORD)v1], "heightAnchor");
  v29 = objc_msgSend(v28, "constraintEqualToConstant:", v7);

  *(_QWORD *)(v27 + 32) = v29;
  *(_QWORD *)(v27 + 40) = v13;
  v30 = *(void **)&v41[(_QWORD)v1];
  v31 = v13;
  v32 = objc_msgSend(v30, "leadingAnchor");
  v33 = objc_msgSend(v1, "leadingAnchor");
  v34 = objc_msgSend(v32, "constraintEqualToAnchor:", v33);

  *(_QWORD *)(v27 + 48) = v34;
  v35 = objc_msgSend(*(id *)&v41[(_QWORD)v1], "trailingAnchor");
  v36 = objc_msgSend(v1, "trailingAnchor");
  v37 = objc_msgSend(v35, "constraintEqualToAnchor:", v36);

  *(_QWORD *)(v27 + 56) = v37;
  specialized Array._endMutation()(v38);
  v42 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v39, "activateConstraints:", v42, swift_bridgeObjectRelease(v27).n128_f64[0]);

}

id sub_100049C44()
{
  char *v0;
  id v1;
  id v2;
  void *v3;
  char **v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;

  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "userInterfaceStyle");
  v3 = (void *)objc_opt_self(UIColor);
  v4 = &selRef_tertiarySystemFillColor;
  if (v2 != (id)2)
    v4 = &selRef_whiteColor;
  v5 = objc_msgSend(v3, *v4);

  v6 = *(void **)&v0[OBJC_IVAR____TtC6FindMy15FMPlatterButton_background];
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy15FMPlatterButton_background] = v5;

  v7 = OBJC_IVAR____TtC6FindMy15FMPlatterButton_bottomSeparator;
  v8 = *(void **)&v0[OBJC_IVAR____TtC6FindMy15FMPlatterButton_bottomSeparator];
  v9 = (void *)objc_opt_self(UIColor);
  v10 = v8;
  v11 = objc_msgSend(v9, "quaternaryLabelColor");
  objc_msgSend(v10, "setBackgroundColor:", v11);

  objc_msgSend(*(id *)&v0[v7], "setHidden:", 1);
  v12 = OBJC_IVAR____TtC6FindMy15FMPlatterButton_topSeparator;
  v13 = *(id *)&v0[OBJC_IVAR____TtC6FindMy15FMPlatterButton_topSeparator];
  v14 = objc_msgSend(v9, "quaternaryLabelColor");
  objc_msgSend(v13, "setBackgroundColor:", v14);

  objc_msgSend(*(id *)&v0[v12], "setHidden:", 1);
  objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[v7]);
  return objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[v12]);
}

void sub_100049DF8()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "handleAction");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButton), "addGestureRecognizer:", v1);

}

char *sub_100049E84()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  objc_super v8;

  v1 = OBJC_IVAR____TtC6FindMy12FMScrollView_content;
  v2 = objc_allocWithZone((Class)UIView);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, "init");

  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for FMScrollView();
  v4 = (char *)objc_msgSendSuper2(&v8, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v5 = *(_QWORD *)&v4[OBJC_IVAR____TtC6FindMy12FMScrollView_content];
  v6 = v4;
  objc_msgSend(v6, "addSubview:", v5);
  sub_100049F40();

  return v6;
}

void sub_100049F40()
{
  char *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  Class isa;

  v1 = OBJC_IVAR____TtC6FindMy12FMScrollView_content;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy12FMScrollView_content], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = sub_100053F2C(&qword_1005D2F10);
  v4 = swift_allocObject(v3, 64, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100481720;
  v5 = objc_msgSend(*(id *)&v0[v1], "topAnchor");
  v6 = objc_msgSend(v0, "topAnchor");
  v7 = objc_msgSend(v5, "constraintEqualToAnchor:", v6);

  *(_QWORD *)(v4 + 32) = v7;
  v8 = objc_msgSend(*(id *)&v0[v1], "bottomAnchor");
  v9 = objc_msgSend(v0, "bottomAnchor");
  v10 = objc_msgSend(v8, "constraintEqualToAnchor:", v9);

  *(_QWORD *)(v4 + 40) = v10;
  v11 = objc_msgSend(*(id *)&v0[v1], "leadingAnchor");
  v12 = objc_msgSend(v0, "leadingAnchor");
  v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

  *(_QWORD *)(v4 + 48) = v13;
  v14 = objc_msgSend(*(id *)&v0[v1], "trailingAnchor");
  v15 = objc_msgSend(v0, "trailingAnchor");
  v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

  *(_QWORD *)(v4 + 56) = v16;
  specialized Array._endMutation()(v17);
  sub_100048C64();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "activateConstraints:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

}

void sub_10004A188()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;

  v1 = v0;
  sub_10004A2D8();
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_iconViewContainer), "setHidden:", 1);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_titleLabel);
  v3 = (void *)objc_opt_self(UIFont);
  v4 = objc_msgSend(v3, "preferredFontForTextStyle:", UIFontTextStyleTitle2);
  v5 = (void *)sub_10003CEE8(2);

  objc_msgSend(v2, "setFont:", v5);
  v6 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_messageLabel);
  v7 = objc_msgSend(v3, "preferredFontForTextStyle:", UIFontTextStyleCallout);
  objc_msgSend(v6, "setFont:", v7);

  v8 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  objc_msgSend(v6, "setTextColor:", v8);

}

id sub_10004A2D8()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  double v10;
  double v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy15FMEmptyListView_iconViewContainer];
  v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy15FMEmptyListView_iconView];
  objc_msgSend(v2, "addSubview:", v3);
  v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMy15FMEmptyListView_fixedContainerView];
  v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy15FMEmptyListView_scrollView];
  objc_msgSend(v4, "addArrangedSubview:", v5);
  v6 = *(void **)&v0[OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButtonsStackView];
  objc_msgSend(v4, "addArrangedSubview:", v6);
  v7 = *(void **)&v1[OBJC_IVAR____TtC6FindMy15FMEmptyListView_scrollableContainerView];
  objc_msgSend(v7, "addArrangedSubview:", v2);
  v8 = *(void **)&v1[OBJC_IVAR____TtC6FindMy15FMEmptyListView_titleLabel];
  objc_msgSend(v7, "addArrangedSubview:", v8);
  v9 = *(void **)&v1[OBJC_IVAR____TtC6FindMy15FMEmptyListView_messageLabel];
  objc_msgSend(v7, "addArrangedSubview:", v9);
  objc_msgSend(v6, "addArrangedSubview:", *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButton]);
  LODWORD(v10) = 1132068864;
  objc_msgSend(v6, "setContentCompressionResistancePriority:forAxis:", 1, v10);
  objc_msgSend(*(id *)(v5 + OBJC_IVAR____TtC6FindMy12FMScrollView_content), "addSubview:", v7);
  objc_msgSend(v1, "addSubview:", v4);
  objc_msgSend(v4, "setAxis:", 1);
  objc_msgSend(v4, "setDirectionalLayoutMargins:", NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
  objc_msgSend(v4, "setLayoutMarginsRelativeArrangement:", 1);
  LODWORD(v11) = 1132068864;
  objc_msgSend(v4, "setContentCompressionResistancePriority:forAxis:", 1, v11);
  objc_msgSend(v7, "setAxis:", 1);
  objc_msgSend(v7, "setAlignment:", 0);
  if (qword_1005D1D30 != -1)
    swift_once(&qword_1005D1D30, sub_10005F3B8);
  objc_msgSend(v7, "setSpacing:", *(double *)&qword_1005F5440);
  if (qword_1005D1D40 != -1)
    swift_once(&qword_1005D1D40, sub_10005F370);
  objc_msgSend(v7, "setDirectionalLayoutMargins:", xmmword_1005F5450, *(double *)&qword_1005F5460, *(double *)&qword_1005F5468);
  objc_msgSend(v7, "setLayoutMarginsRelativeArrangement:", 1);
  objc_msgSend(v6, "setAxis:", 1);
  if (qword_1005D1D38 != -1)
    swift_once(&qword_1005D1D38, sub_10005F3A8);
  objc_msgSend(v6, "setSpacing:", *(double *)&qword_1005F5448);
  objc_msgSend(v6, "setDirectionalLayoutMargins:", xmmword_1005F5450, *(double *)&qword_1005F5460, *(double *)&qword_1005F5468);
  objc_msgSend(v6, "setLayoutMarginsRelativeArrangement:", 1);
  v12 = v8;
  v13 = v9;
  objc_msgSend(v12, "setNumberOfLines:", 0);
  objc_msgSend(v12, "setTextAlignment:", 1);
  objc_msgSend(v12, "setAdjustsFontForContentSizeCategory:", 1);

  v14 = v13;
  objc_msgSend(v14, "setNumberOfLines:", 0);
  objc_msgSend(v14, "setTextAlignment:", 1);
  objc_msgSend(v14, "setAdjustsFontForContentSizeCategory:", 1);

  v15 = (void *)objc_opt_self(UIFont);
  v16 = objc_msgSend(v15, "preferredFontForTextStyle:", UIFontTextStyleTitle1);
  v17 = (void *)sub_10003CEE8(2);

  objc_msgSend(v12, "setFont:", v17);
  v18 = (void *)objc_opt_self(UIColor);
  v19 = objc_msgSend(v18, "labelColor");
  objc_msgSend(v12, "setTextColor:", v19);

  v20 = objc_msgSend(v15, "preferredFontForTextStyle:", UIFontTextStyleCallout);
  objc_msgSend(v14, "setFont:", v20);

  v21 = objc_msgSend(v18, "labelColor");
  objc_msgSend(v14, "setTextColor:", v21);

  return objc_msgSend(v3, "setContentMode:", 1);
}

void sub_10004A770()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  Swift::String v5;
  Swift::String v6;
  void *object;
  NSString v8;
  void *v9;
  id v10;
  Swift::String v11;
  Swift::String v12;
  void *v13;
  NSString v14;
  void *v15;
  NSString v16;
  id v17;
  id v18;
  id v19;
  Swift::String v20;
  Swift::String v21;
  void *v22;
  NSString v23;
  Swift::String v24;
  Swift::String v25;
  Swift::String v26;

  v1 = v0;
  sub_10004A2D8();
  v2 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_titleLabel);
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v3 = (void *)objc_opt_self(NSBundle);
  v4 = objc_msgSend(v3, "mainBundle");
  v24._countAndFlagsBits = 0xD000000000000021;
  v24._object = (void *)0x80000001004C3F20;
  v5._countAndFlagsBits = 0x4F535245505F4F4ELL;
  v5._object = (void *)0xEF454C5449545F4ELL;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v24)._object;

  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setText:", v8, swift_bridgeObjectRelease(object).n128_f64[0]);

  v9 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_messageLabel);
  _StringGuts.grow(_:)(20);
  v10 = objc_msgSend(v3, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
  v25._countAndFlagsBits = 0xD000000000000023;
  v25._object = (void *)0x80000001004C3F70;
  v11._object = (void *)0x80000001004C3F50;
  v11._countAndFlagsBits = 0xD000000000000011;
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v25)._object;

  v14 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setText:", v14, swift_bridgeObjectRelease(v13).n128_f64[0]);

  v15 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_iconView);
  v16 = String._bridgeToObjectiveC()();
  v17 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v16);

  objc_msgSend(v15, "setImage:", v17);
  v18 = objc_retain(*(id *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButton)
                          + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label));
  _StringGuts.grow(_:)(20);
  v19 = objc_msgSend(v3, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
  v20._countAndFlagsBits = 0xD000000000000016;
  v26._countAndFlagsBits = 0xD000000000000028;
  v26._object = (void *)0x80000001004C3FC0;
  v20._object = (void *)0x80000001004C3FA0;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, (Swift::String_optional)0, (NSBundle)v19, v21, v26)._object;

  v23 = String._bridgeToObjectiveC()();
  objc_msgSend(v18, "setText:", v23, swift_bridgeObjectRelease(v22).n128_f64[0]);

}

uint64_t sub_10004AAB0(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  int v35;
  _BOOL4 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  uint64_t (*v47)(_BYTE *, uint64_t, uint64_t);
  int v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  _BYTE *v53;
  uint64_t EnumCaseMultiPayload;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  double v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  double v87;
  __n128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  double v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  NSObject *v107;
  os_log_type_t v108;
  uint8_t *v109;
  const char *v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  _BYTE *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _BYTE *v121;
  uint64_t v122;
  double v123;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _BYTE *v129;
  uint64_t v130;
  double v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  _BYTE *v135;
  uint64_t v136;
  double v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  _BYTE *v141;
  uint64_t v142;
  double v143;
  char v144;
  uint64_t v145;
  uint64_t inited;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  char v155;
  uint64_t v156;
  char v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  char v164;
  uint64_t v165;
  char v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  uint64_t v172;
  unint64_t v173;
  char v174;
  uint64_t v175;
  char v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  _QWORD *v181;
  uint64_t v182;
  unint64_t v183;
  char v184;
  uint64_t v185;
  char v186;
  __n128 v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  int v193;
  __n128 v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  __n128 v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unint64_t v206;
  char v207;
  uint64_t v208;
  char v209;
  __n128 v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  unint64_t v216;
  char v217;
  uint64_t v218;
  char v219;
  __n128 v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  unint64_t v226;
  char v227;
  uint64_t v228;
  char v229;
  __n128 v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  unint64_t v236;
  char v237;
  uint64_t v238;
  char v239;
  unint64_t v240;
  void *v241;
  uint64_t v242;
  Class isa;
  id v244;
  id v245;
  uint64_t v246;
  unint64_t v247;
  unint64_t v248;
  void *v249;
  uint64_t v250;
  id v251;
  Class v252;
  NSString v253;
  uint64_t v254;
  NSObject *v255;
  os_log_type_t v256;
  uint8_t *v257;
  void *v258;
  uint64_t v259;
  uint64_t v260;
  unint64_t v261;
  unint64_t v262;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  _BYTE *v269;
  uint64_t v270;
  double v271;
  char v272;
  uint64_t v273;
  _BYTE v274[4];
  int v275;
  uint64_t v276;
  _BYTE *v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  _BYTE *v281;
  _BYTE *v282;
  _BYTE *v283;
  _BYTE *v284;
  _BYTE *v285;
  uint64_t v286;
  _QWORD *v287;
  _QWORD *v288;
  _BYTE *v289;
  uint64_t v290;
  __int128 v291;
  uint8_t *v292;
  uint64_t *v293;
  uint64_t v294;
  uint64_t v295;
  _BYTE v296[24];
  id v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  _BYTE v302[16];
  uint64_t v303[3];
  char v304[104];

  v4 = type metadata accessor for Date(0);
  v278 = *(_QWORD *)(v4 - 8);
  v279 = v4;
  __chkstk_darwin(v4);
  v277 = &v274[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for FMSelectedSection(0);
  v286 = *(_QWORD *)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v9 = &v274[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __chkstk_darwin(v7);
  v282 = &v274[-v11];
  v12 = __chkstk_darwin(v10);
  v14 = &v274[-v13];
  v15 = __chkstk_darwin(v12);
  v281 = &v274[-v16];
  __chkstk_darwin(v15);
  v284 = &v274[-v17];
  v280 = sub_100053F2C(&qword_1005D5D08);
  v18 = __chkstk_darwin(v280);
  v288 = &v274[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = __chkstk_darwin(v18);
  v285 = &v274[-v21];
  v22 = __chkstk_darwin(v20);
  v24 = &v274[-v23];
  v25 = __chkstk_darwin(v22);
  v27 = &v274[-v26];
  __chkstk_darwin(v25);
  v29 = &v274[-v28];
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v30 = type metadata accessor for Logger(0);
  v31 = sub_100056D88(v30, (uint64_t)qword_1005F5748);
  *(_QWORD *)&v291 = a1;
  sub_10004C0BC(a1, (uint64_t)v29);
  v287 = a2;
  v32 = sub_10004C0BC((uint64_t)a2, (uint64_t)v27);
  v290 = v31;
  v33 = Logger.logObject.getter(v32);
  v34 = static os_log_type_t.default.getter(v33);
  v35 = v34;
  v36 = os_log_type_enabled(v33, v34);
  v292 = (uint8_t *)v6;
  v289 = v9;
  v283 = v14;
  if (v36)
  {
    v37 = swift_slowAlloc(22, -1);
    v276 = swift_slowAlloc(64, -1);
    v303[0] = v276;
    *(_DWORD *)v37 = 136315394;
    sub_10004C0BC((uint64_t)v29, (uint64_t)v24);
    v275 = v35;
    v38 = v280;
    v39 = String.init<A>(describing:)(v24, v280);
    v41 = v40;
    v301 = sub_100056DA0(v39, v40, v303);
    v6 = (uint64_t)v292;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v301, v302);
    swift_bridgeObjectRelease(v41);
    sub_1000051EC((uint64_t)v29, &qword_1005D5D08);
    *(_WORD *)(v37 + 12) = 2080;
    sub_10004C0BC((uint64_t)v27, (uint64_t)v24);
    v42 = String.init<A>(describing:)(v24, v38);
    v44 = v43;
    v301 = sub_100056DA0(v42, v43, v303);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v301, v302);
    swift_bridgeObjectRelease(v44);
    sub_1000051EC((uint64_t)v27, &qword_1005D5D08);
    _os_log_impl((void *)&_mh_execute_header, v33, (os_log_type_t)v275, "FMSelectionController: saveInfo: selected: %s, previousSelected: %s", (uint8_t *)v37, 0x16u);
    v45 = v276;
    swift_arrayDestroy(v276, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v45, -1, -1);
    swift_slowDealloc(v37, -1, -1);
  }
  else
  {
    sub_1000051EC((uint64_t)v29, &qword_1005D5D08);
    sub_1000051EC((uint64_t)v27, &qword_1005D5D08);
  }

  v46 = v285;
  sub_10004C0BC((uint64_t)v287, (uint64_t)v285);
  v47 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v286 + 48);
  v48 = v47(v46, 1, v6);
  v49 = v293;
  v50 = v291;
  if (v48 == 1)
  {
    sub_1000051EC((uint64_t)v46, &qword_1005D5D08);
    goto LABEL_58;
  }
  v51 = (uint64_t)v46;
  v52 = v284;
  sub_10004C860(v51, (uint64_t)v284);
  v53 = v281;
  sub_10004FC74((uint64_t)v52, (uint64_t)v281, type metadata accessor for FMSelectedSection);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v53, v6);
  switch((int)EnumCaseMultiPayload)
  {
    case 0:
      v55 = sub_100053F2C(&qword_1005DE9B0);
      sub_1000051EC((uint64_t)&v53[*(int *)(v55 + 48)], (uint64_t *)&unk_1005D3AA0);
      v56 = type metadata accessor for FMIPDevice(0);
      EnumCaseMultiPayload = (*(uint64_t (**)(_BYTE *, uint64_t))(*(_QWORD *)(v56 - 8) + 8))(v53, v56);
      goto LABEL_10;
    case 2:
      EnumCaseMultiPayload = sub_10004FCB8((uint64_t)v53, type metadata accessor for FMSelectedSection);
      goto LABEL_21;
    case 3:
      EnumCaseMultiPayload = sub_10004FCB8((uint64_t)v53, type metadata accessor for FMSelectedSection);
      goto LABEL_16;
    case 11:
LABEL_10:
      v57 = FMTabInfoLastVisited.getter(EnumCaseMultiPayload);
      v59 = v58;
      v60 = v49 + 3;
      swift_beginAccess(v49 + 3, v296, 0, 0);
      v61 = v49[3];
      if (*(_QWORD *)(v61 + 16))
      {
        swift_bridgeObjectRetain(v49[3]);
        v62 = sub_10004C348(v57, v59);
        if ((v63 & 1) != 0)
        {
          v64 = *(double *)(*(_QWORD *)(v61 + 56) + 8 * v62);
          swift_bridgeObjectRelease(v59);
          swift_bridgeObjectRelease(v61);
          if (v64 != -1.0)
            goto LABEL_30;
LABEL_40:
          v107 = Logger.logObject.getter(v65);
          v108 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v107, v108))
          {
            v109 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v109 = 0;
            v110 = "FMSelectionController: not recording time spent on devices, we haven't visited it";
LABEL_55:
            _os_log_impl((void *)&_mh_execute_header, v107, v108, v110, v109, 2u);
            swift_slowDealloc(v109, -1, -1);
            goto LABEL_56;
          }
          goto LABEL_56;
        }
        swift_bridgeObjectRelease(v59);
        v104 = v61;
      }
      else
      {
        v104 = v59;
      }
      swift_bridgeObjectRelease(v104);
      goto LABEL_40;
    case 12:
      v89 = ((uint64_t (*)(void))FMTabInfoLastVisited.getter)();
      v91 = v90;
      v60 = v49 + 6;
      swift_beginAccess(v49 + 6, v296, 0, 0);
      v92 = v49[6];
      if (!*(_QWORD *)(v92 + 16))
      {
        v111 = v91;
LABEL_52:
        swift_bridgeObjectRelease(v111);
        goto LABEL_53;
      }
      swift_bridgeObjectRetain(v49[6]);
      v93 = sub_10004C348(v89, v91);
      if ((v94 & 1) == 0)
      {
        swift_bridgeObjectRelease(v91);
        v111 = v92;
        goto LABEL_52;
      }
      v64 = *(double *)(*(_QWORD *)(v92 + 56) + 8 * v93);
      swift_bridgeObjectRelease(v91);
      swift_bridgeObjectRelease(v92);
      if (v64 != -1.0)
        goto LABEL_30;
LABEL_53:
      v107 = Logger.logObject.getter(v95);
      v108 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v107, v108))
      {
        v109 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v109 = 0;
        v110 = "FMSelectionController: not recording time spent on me, we haven't visited it";
        goto LABEL_55;
      }
LABEL_56:

LABEL_57:
      sub_10004FCB8((uint64_t)v284, type metadata accessor for FMSelectedSection);
      v50 = v291;
LABEL_58:
      v112 = v288;
      sub_10004C0BC(v50, (uint64_t)v288);
      if (v47(v112, 1, v6) == 1)
      {
        sub_1000051EC((uint64_t)v112, &qword_1005D5D08);
      }
      else
      {
        v113 = (uint64_t)v283;
        sub_10004C860((uint64_t)v112, (uint64_t)v283);
        v114 = v282;
        sub_10004FC74(v113, (uint64_t)v282, type metadata accessor for FMSelectedSection);
        v115 = swift_getEnumCaseMultiPayload(v114, v6);
        switch((int)v115)
        {
          case 0:
            v116 = sub_100053F2C(&qword_1005DE9B0);
            sub_1000051EC((uint64_t)&v114[*(int *)(v116 + 48)], (uint64_t *)&unk_1005D3AA0);
            v117 = type metadata accessor for FMIPDevice(0);
            v115 = (*(uint64_t (**)(_BYTE *, uint64_t))(*(_QWORD *)(v117 - 8) + 8))(v114, v117);
            goto LABEL_62;
          case 2:
            v115 = sub_10004FCB8((uint64_t)v114, type metadata accessor for FMSelectedSection);
            goto LABEL_67;
          case 3:
            v115 = sub_10004FCB8((uint64_t)v114, type metadata accessor for FMSelectedSection);
            goto LABEL_65;
          case 11:
LABEL_62:
            v118 = FMTabInfoLastVisited.getter(v115);
            v120 = v119;
            v121 = v277;
            v122 = static Date.now.getter();
            v123 = Date.timeIntervalSince1970.getter(v122);
            (*(void (**)(_BYTE *, uint64_t))(v278 + 8))(v121, v279);
            swift_beginAccess(v49 + 3, v303, 33, 0);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v49[3]);
            v301 = v49[3];
            v49[3] = 0x8000000000000000;
            sub_10005D0C4(v118, v120, isUniquelyReferenced_nonNull_native, v123);
            v125 = v49[3];
            v49[3] = v301;
            goto LABEL_69;
          case 12:
            v139 = FMTabInfoLastVisited.getter(v115);
            v120 = v140;
            v141 = v277;
            v142 = static Date.now.getter();
            v143 = Date.timeIntervalSince1970.getter(v142);
            (*(void (**)(_BYTE *, uint64_t))(v278 + 8))(v141, v279);
            swift_beginAccess(v49 + 6, v303, 33, 0);
            v144 = swift_isUniquelyReferenced_nonNull_native(v49[6]);
            v301 = v49[6];
            v49[6] = 0x8000000000000000;
            sub_10005D0C4(v139, v120, v144, v143);
            v125 = v49[6];
            v49[6] = v301;
            goto LABEL_69;
          case 14:
LABEL_67:
            v133 = FMTabInfoLastVisited.getter(v115);
            v120 = v134;
            v135 = v277;
            v136 = static Date.now.getter();
            v137 = Date.timeIntervalSince1970.getter(v136);
            (*(void (**)(_BYTE *, uint64_t))(v278 + 8))(v135, v279);
            swift_beginAccess(v49 + 5, v303, 33, 0);
            v138 = swift_isUniquelyReferenced_nonNull_native(v49[5]);
            v301 = v49[5];
            v49[5] = 0x8000000000000000;
            sub_10005D0C4(v133, v120, v138, v137);
            v125 = v49[5];
            v49[5] = v301;
            goto LABEL_69;
          case 16:
LABEL_65:
            v127 = FMTabInfoLastVisited.getter(v115);
            v120 = v128;
            v129 = v277;
            v130 = static Date.now.getter();
            v131 = Date.timeIntervalSince1970.getter(v130);
            (*(void (**)(_BYTE *, uint64_t))(v278 + 8))(v129, v279);
            swift_beginAccess(v49 + 4, v303, 33, 0);
            v132 = swift_isUniquelyReferenced_nonNull_native(v49[4]);
            v301 = v49[4];
            v49[4] = 0x8000000000000000;
            sub_10005D0C4(v127, v120, v132, v131);
            v125 = v49[4];
            v49[4] = v301;
LABEL_69:
            swift_bridgeObjectRelease(v120);
            swift_bridgeObjectRelease(v125);
            swift_endAccess(v303);
            v126 = v113;
            break;
          default:
            sub_10004FCB8(v113, type metadata accessor for FMSelectedSection);
            v126 = (uint64_t)v114;
            break;
        }
        sub_10004FCB8(v126, type metadata accessor for FMSelectedSection);
      }
      v145 = sub_100053F2C(&qword_1005DAF18);
      inited = swift_initStackObject(v145, v304);
      *(_OWORD *)(inited + 16) = xmmword_100481B10;
      *(_QWORD *)(inited + 32) = FMTabInfoLastVisited.getter(inited);
      *(_QWORD *)(inited + 40) = v147;
      v148 = sub_100053F2C(&qword_1005DAF20);
      v149 = swift_allocObject(v148, 96, 7);
      v291 = xmmword_1004865A0;
      *(_OWORD *)(v149 + 16) = xmmword_1004865A0;
      v150 = FMTabInfoLastVisited.getter(v149);
      v152 = v151;
      v288 = v49 + 5;
      swift_beginAccess(v49 + 5, v303, 0, 0);
      v153 = v49[5];
      if (*(_QWORD *)(v153 + 16))
      {
        swift_bridgeObjectRetain(v49[5]);
        v154 = sub_10004C348(v150, v152);
        if ((v155 & 1) != 0)
          v156 = *(_QWORD *)(*(_QWORD *)(v153 + 56) + 8 * v154);
        else
          v156 = 0;
        v157 = v155 ^ 1;
        swift_bridgeObjectRelease(v153);
      }
      else
      {
        v156 = 0;
        v157 = 1;
      }
      *(_QWORD *)(v149 + 32) = v156;
      *(_BYTE *)(v149 + 40) = v157 & 1;
      swift_bridgeObjectRelease(v152);
      v159 = FMTabInfoLastVisited.getter(v158);
      v161 = v160;
      v287 = v49 + 3;
      swift_beginAccess(v49 + 3, &v301, 0, 0);
      v162 = v49[3];
      if (*(_QWORD *)(v162 + 16))
      {
        swift_bridgeObjectRetain(v49[3]);
        v163 = sub_10004C348(v159, v161);
        if ((v164 & 1) != 0)
          v165 = *(_QWORD *)(*(_QWORD *)(v162 + 56) + 8 * v163);
        else
          v165 = 0;
        v166 = v164 ^ 1;
        swift_bridgeObjectRelease(v162);
      }
      else
      {
        v165 = 0;
        v166 = 1;
      }
      *(_QWORD *)(v149 + 48) = v165;
      *(_BYTE *)(v149 + 56) = v166 & 1;
      swift_bridgeObjectRelease(v161);
      v168 = FMTabInfoLastVisited.getter(v167);
      v170 = v169;
      v171 = v49 + 4;
      swift_beginAccess(v49 + 4, &v300, 0, 0);
      v172 = v49[4];
      if (*(_QWORD *)(v172 + 16))
      {
        swift_bridgeObjectRetain(v49[4]);
        v173 = sub_10004C348(v168, v170);
        if ((v174 & 1) != 0)
          v175 = *(_QWORD *)(*(_QWORD *)(v172 + 56) + 8 * v173);
        else
          v175 = 0;
        v176 = v174 ^ 1;
        swift_bridgeObjectRelease(v172);
      }
      else
      {
        v175 = 0;
        v176 = 1;
      }
      *(_QWORD *)(v149 + 64) = v175;
      *(_BYTE *)(v149 + 72) = v176 & 1;
      swift_bridgeObjectRelease(v170);
      v178 = FMTabInfoLastVisited.getter(v177);
      v180 = v179;
      v181 = v49 + 6;
      swift_beginAccess(v49 + 6, &v299, 0, 0);
      v182 = v49[6];
      if (*(_QWORD *)(v182 + 16))
      {
        swift_bridgeObjectRetain(v49[6]);
        v183 = sub_10004C348(v178, v180);
        if ((v184 & 1) != 0)
          v185 = *(_QWORD *)(*(_QWORD *)(v182 + 56) + 8 * v183);
        else
          v185 = 0;
        v186 = v184 ^ 1;
        swift_bridgeObjectRelease(v182);
      }
      else
      {
        v185 = 0;
        v186 = 1;
      }
      *(_QWORD *)(v149 + 80) = v185;
      *(_BYTE *)(v149 + 88) = v186 & 1;
      v187 = swift_bridgeObjectRelease(v180);
      *(_QWORD *)(inited + 48) = v149;
      *(_QWORD *)(inited + 56) = FMTabInfoCurrentTab.getter(v187);
      *(_QWORD *)(inited + 64) = v188;
      v189 = swift_allocObject(v148, 48, 7);
      *(_OWORD *)(v189 + 16) = xmmword_100481740;
      v190 = (uint64_t)v293 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
      swift_beginAccess((char *)v293 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, &v298, 0, 0);
      v191 = v190;
      v192 = (uint64_t)v289;
      sub_10004FC74(v191, (uint64_t)v289, type metadata accessor for FMSelectedSection);
      v193 = swift_getEnumCaseMultiPayload(v192, v292);
      v195 = 0x4008000000000000;
      switch(v193)
      {
        case 0:
          v196 = sub_100053F2C(&qword_1005DE9B0);
          sub_1000051EC(v192 + *(int *)(v196 + 48), (uint64_t *)&unk_1005D3AA0);
          v197 = type metadata accessor for FMIPDevice(0);
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v197 - 8) + 8))(v192, v197);
          goto LABEL_97;
        case 2:
          sub_10004FCB8(v192, type metadata accessor for FMSelectedSection);
          goto LABEL_100;
        case 3:
          sub_10004FCB8(v192, type metadata accessor for FMSelectedSection);
          goto LABEL_102;
        case 10:
        case 14:
LABEL_100:
          v195 = 0;
          break;
        case 11:
LABEL_97:
          v195 = 0x3FF0000000000000;
          break;
        case 12:
          break;
        case 16:
        case 17:
LABEL_102:
          v195 = 0x4000000000000000;
          break;
        default:
          sub_10004FCB8(v192, type metadata accessor for FMSelectedSection);
          v195 = 0x4010000000000000;
          break;
      }
      *(_QWORD *)(v189 + 32) = v195;
      *(_BYTE *)(v189 + 40) = 0;
      *(_QWORD *)(inited + 72) = v189;
      *(_QWORD *)(inited + 80) = FMTabInfoTimeSpent.getter(v194);
      *(_QWORD *)(inited + 88) = v198;
      v199 = swift_allocObject(v148, 96, 7);
      v200 = (__n128)v291;
      *(_OWORD *)(v199 + 16) = v291;
      v201 = FMTabInfoTimeSpent.getter(v200);
      v203 = v202;
      v204 = *v288;
      if (*(_QWORD *)(*v288 + 16))
      {
        v205 = v201;
        swift_bridgeObjectRetain(*v288);
        v206 = sub_10004C348(v205, v203);
        if ((v207 & 1) != 0)
          v208 = *(_QWORD *)(*(_QWORD *)(v204 + 56) + 8 * v206);
        else
          v208 = 0;
        v209 = v207 ^ 1;
        swift_bridgeObjectRelease(v204);
      }
      else
      {
        v208 = 0;
        v209 = 1;
      }
      *(_QWORD *)(v199 + 32) = v208;
      *(_BYTE *)(v199 + 40) = v209 & 1;
      v210 = swift_bridgeObjectRelease(v203);
      v211 = FMTabInfoTimeSpent.getter(v210);
      v213 = v212;
      v214 = *v287;
      if (*(_QWORD *)(*v287 + 16))
      {
        v215 = v211;
        swift_bridgeObjectRetain(*v287);
        v216 = sub_10004C348(v215, v213);
        if ((v217 & 1) != 0)
          v218 = *(_QWORD *)(*(_QWORD *)(v214 + 56) + 8 * v216);
        else
          v218 = 0;
        v219 = v217 ^ 1;
        swift_bridgeObjectRelease(v214);
      }
      else
      {
        v218 = 0;
        v219 = 1;
      }
      *(_QWORD *)(v199 + 48) = v218;
      *(_BYTE *)(v199 + 56) = v219 & 1;
      v220 = swift_bridgeObjectRelease(v213);
      v221 = FMTabInfoTimeSpent.getter(v220);
      v223 = v222;
      v224 = *v171;
      if (*(_QWORD *)(*v171 + 16))
      {
        v225 = v221;
        swift_bridgeObjectRetain(*v171);
        v226 = sub_10004C348(v225, v223);
        if ((v227 & 1) != 0)
          v228 = *(_QWORD *)(*(_QWORD *)(v224 + 56) + 8 * v226);
        else
          v228 = 0;
        v229 = v227 ^ 1;
        swift_bridgeObjectRelease(v224);
      }
      else
      {
        v228 = 0;
        v229 = 1;
      }
      *(_QWORD *)(v199 + 64) = v228;
      *(_BYTE *)(v199 + 72) = v229 & 1;
      v230 = swift_bridgeObjectRelease(v223);
      v231 = FMTabInfoTimeSpent.getter(v230);
      v233 = v232;
      v234 = *v181;
      if (*(_QWORD *)(*v181 + 16))
      {
        v235 = v231;
        swift_bridgeObjectRetain(*v181);
        v236 = sub_10004C348(v235, v233);
        if ((v237 & 1) != 0)
          v238 = *(_QWORD *)(*(_QWORD *)(v234 + 56) + 8 * v236);
        else
          v238 = 0;
        v239 = v237 ^ 1;
        swift_bridgeObjectRelease(v234);
      }
      else
      {
        v238 = 0;
        v239 = 1;
      }
      *(_QWORD *)(v199 + 80) = v238;
      *(_BYTE *)(v199 + 88) = v239 & 1;
      swift_bridgeObjectRelease(v233);
      *(_QWORD *)(inited + 96) = v199;
      v240 = sub_10000CE74(inited);
      v241 = (void *)objc_opt_self(NSKeyedArchiver);
      v242 = sub_100053F2C(&qword_1005DAF28);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      v297 = 0;
      v244 = objc_msgSend(v241, "archivedDataWithRootObject:requiringSecureCoding:error:", isa, 1, &v297);

      v245 = v297;
      if (v244)
      {
        v246 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v244);
        v248 = v247;

      }
      else
      {
        v249 = v245;
        v250 = _convertNSErrorToError(_:)(v245);

        swift_willThrow();
        swift_errorRelease(v250);
        v246 = 0;
        v248 = 0xF000000000000000;
      }
      v251 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
      if (v248 >> 60 == 15)
      {
        v252 = 0;
      }
      else
      {
        sub_100027B98(v246, v248);
        v252 = Data._bridgeToObjectiveC()().super.isa;
        sub_10005F8F8(v246, v248);
      }
      v253 = String._bridgeToObjectiveC()();
      objc_msgSend(v251, "setValue:forKey:", v252, v253);

      swift_unknownObjectRelease(v252);
      v254 = swift_bridgeObjectRetain(v240);
      v255 = Logger.logObject.getter(v254);
      v256 = static os_log_type_t.default.getter(v255);
      if (os_log_type_enabled(v255, v256))
      {
        v293 = (uint64_t *)v246;
        v257 = (uint8_t *)swift_slowAlloc(12, -1);
        v258 = (void *)swift_slowAlloc(32, -1);
        v297 = v258;
        *(_DWORD *)v257 = 136315138;
        v292 = v257 + 4;
        v259 = swift_bridgeObjectRetain(v240);
        v260 = Dictionary.description.getter(v259, &type metadata for String, v242, &protocol witness table for String);
        v262 = v261;
        swift_bridgeObjectRelease(v240);
        v294 = sub_100056DA0(v260, v262, (uint64_t *)&v297);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v294, &v295);
        swift_bridgeObjectRelease_n(v240, 2);
        swift_bridgeObjectRelease(v262);
        _os_log_impl((void *)&_mh_execute_header, v255, v256, "FMSelectionController: saved tab info: %s", v257, 0xCu);
        swift_arrayDestroy(v258, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v258, -1, -1);
        swift_slowDealloc(v257, -1, -1);

        return sub_10005F8F8((uint64_t)v293, v248);
      }
      else
      {
        sub_10005F8F8(v246, v248);

        return swift_bridgeObjectRelease_n(v240, 2);
      }
    case 14:
LABEL_21:
      v73 = FMTabInfoLastVisited.getter(EnumCaseMultiPayload);
      v75 = v74;
      v60 = v49 + 5;
      swift_beginAccess(v49 + 5, v296, 0, 0);
      v76 = v49[5];
      if (*(_QWORD *)(v76 + 16))
      {
        swift_bridgeObjectRetain(v49[5]);
        v77 = sub_10004C348(v73, v75);
        if ((v78 & 1) != 0)
        {
          v64 = *(double *)(*(_QWORD *)(v76 + 56) + 8 * v77);
          swift_bridgeObjectRelease(v75);
          swift_bridgeObjectRelease(v76);
          if (v64 != -1.0)
          {
            v80 = ((uint64_t (*)(void))FMTabInfoTimeSpent.getter)();
            v82 = v81;
            v83 = *v60;
            if (*(_QWORD *)(*v60 + 16))
            {
              v84 = v80;
              swift_bridgeObjectRetain(*v60);
              v85 = sub_10004C348(v84, v82);
              if ((v86 & 1) != 0)
              {
                v87 = *(double *)(*(_QWORD *)(v83 + 56) + 8 * v85);
                swift_bridgeObjectRelease(v82);
                v88 = swift_bridgeObjectRelease(v83);
                goto LABEL_142;
              }
              swift_bridgeObjectRelease(v82);
              v265 = v83;
            }
            else
            {
              v265 = v81;
            }
            v88 = swift_bridgeObjectRelease(v265);
            v87 = -1.0;
            goto LABEL_142;
          }
LABEL_48:
          v107 = Logger.logObject.getter(v79);
          v108 = static os_log_type_t.debug.getter();
          if (!os_log_type_enabled(v107, v108))
            goto LABEL_56;
          v109 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v109 = 0;
          v110 = "FMSelectionController: not recording time spent on people, we haven't visited it";
          goto LABEL_55;
        }
        swift_bridgeObjectRelease(v75);
        v106 = v76;
      }
      else
      {
        v106 = v75;
      }
      swift_bridgeObjectRelease(v106);
      goto LABEL_48;
    case 16:
LABEL_16:
      v66 = FMTabInfoLastVisited.getter(EnumCaseMultiPayload);
      v68 = v67;
      v60 = v49 + 4;
      swift_beginAccess(v49 + 4, v296, 0, 0);
      v69 = v49[4];
      if (*(_QWORD *)(v69 + 16))
      {
        swift_bridgeObjectRetain(v49[4]);
        v70 = sub_10004C348(v66, v68);
        if ((v71 & 1) != 0)
        {
          v64 = *(double *)(*(_QWORD *)(v69 + 56) + 8 * v70);
          swift_bridgeObjectRelease(v68);
          swift_bridgeObjectRelease(v69);
          if (v64 != -1.0)
          {
LABEL_30:
            v96 = ((uint64_t (*)(void))FMTabInfoTimeSpent.getter)();
            v98 = v97;
            v99 = *v60;
            if (*(_QWORD *)(*v60 + 16))
            {
              v100 = v96;
              swift_bridgeObjectRetain(*v60);
              v101 = sub_10004C348(v100, v98);
              if ((v102 & 1) != 0)
              {
                v103 = *(double *)(*(_QWORD *)(v99 + 56) + 8 * v101);
                swift_bridgeObjectRelease(v98);
                v88 = swift_bridgeObjectRelease(v99);
                v88.n128_u64[0] = 0;
                if (v103 == -1.0)
                  v87 = 0.0;
                else
                  v87 = v103;
                goto LABEL_142;
              }
              swift_bridgeObjectRelease(v98);
              v264 = v99;
            }
            else
            {
              v264 = v97;
            }
            v88 = swift_bridgeObjectRelease(v264);
            v87 = 0.0;
LABEL_142:
            v266 = FMTabInfoTimeSpent.getter(v88);
            v268 = v267;
            v269 = v277;
            v270 = static Date.now.getter();
            v271 = Date.timeIntervalSince1970.getter(v270);
            (*(void (**)(_BYTE *, uint64_t))(v278 + 8))(v269, v279);
            swift_beginAccess(v60, v303, 33, 0);
            v272 = swift_isUniquelyReferenced_nonNull_native(*v60);
            v301 = *v60;
            *v60 = 0x8000000000000000;
            sub_10005D0C4(v266, v268, v272, v87 + v271 - v64);
            v273 = *v60;
            *v60 = v301;
            swift_bridgeObjectRelease(v268);
            swift_bridgeObjectRelease(v273);
            swift_endAccess(v303);
            goto LABEL_57;
          }
LABEL_44:
          v107 = Logger.logObject.getter(v72);
          v108 = static os_log_type_t.debug.getter();
          if (!os_log_type_enabled(v107, v108))
            goto LABEL_56;
          v109 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v109 = 0;
          v110 = "FMSelectionController: not recording time spent on items, we haven't visited it";
          goto LABEL_55;
        }
        swift_bridgeObjectRelease(v68);
        v105 = v69;
      }
      else
      {
        v105 = v68;
      }
      swift_bridgeObjectRelease(v105);
      goto LABEL_44;
    default:
      sub_10004FCB8((uint64_t)v284, type metadata accessor for FMSelectedSection);
      sub_10004FCB8((uint64_t)v53, type metadata accessor for FMSelectedSection);
      goto LABEL_58;
  }
}

uint64_t sub_10004C0BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C(&qword_1005D5D08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10004C104(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100053F2C(&qword_1005D6C60);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  swift_retain(v3);
  v6 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v7 = *(v6 - 2);
    v8 = *(v6 - 1);
    v9 = *v6;
    swift_bridgeObjectRetain(v8);
    result = sub_10004C348(v7, v8);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v7;
    v12[1] = v8;
    *(_QWORD *)(v4[7] + 8 * result) = v9;
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v6 += 3;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10004C214(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100053F2C(&qword_1005DF450);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_100007464(v7, (uint64_t)&v16, &qword_1005D6B98);
    v8 = v16;
    v9 = v17;
    result = sub_10004C348(v16, v17);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v12 = (uint64_t *)(v4[6] + 16 * result);
    *v12 = v8;
    v12[1] = v9;
    result = (unint64_t)sub_10004C850(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 48;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10004C348(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  Swift::Int v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, *(_QWORD *)(v2 + 40));
  String.hash(into:)(v7, a1, a2);
  v5 = Hasher._finalize()();
  return sub_10004C3AC(a1, a2, v5);
}

unint64_t sub_10004C3AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = v10[1];
    v12 = *v10 == a1 && v11 == a2;
    if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v10, v11, a1, a2, 0) & 1) == 0)
    {
      v13 = ~v5;
      do
      {
        v6 = (v6 + 1) & v13;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v14 = (_QWORD *)(v9 + 16 * v6);
        v15 = v14[1];
        v16 = *v14 == a1 && v15 == a2;
      }
      while (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)(*v14, v15, a1, a2, 0) & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_10004C48C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char *v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  _OWORD v33[2];
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  _OWORD v37[2];
  _OWORD v38[3];
  _OWORD v39[2];
  __int128 v40;
  _OWORD v41[2];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_100053F2C(&qword_1005D4DC8);
    v3 = (_QWORD *)static _DictionaryStorage.allocate(capacity:)(v2);
  }
  else
  {
    v3 = &_swiftEmptyDictionarySingleton;
  }
  v29 = a1 + 64;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(63 - v4) >> 6;
  v7 = (char *)(v3 + 8);
  swift_bridgeObjectRetain(a1);
  result = swift_retain(v3);
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v12 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v13 = v12 | (v9 << 6);
      goto LABEL_28;
    }
    v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v14 >= v28)
      goto LABEL_37;
    v15 = *(_QWORD *)(v29 + 8 * v14);
    v16 = v9 + 1;
    if (!v15)
    {
      v16 = v9 + 2;
      if (v9 + 2 >= v28)
        goto LABEL_37;
      v15 = *(_QWORD *)(v29 + 8 * v16);
      if (!v15)
      {
        v16 = v9 + 3;
        if (v9 + 3 >= v28)
          goto LABEL_37;
        v15 = *(_QWORD *)(v29 + 8 * v16);
        if (!v15)
        {
          v16 = v9 + 4;
          if (v9 + 4 >= v28)
            goto LABEL_37;
          v15 = *(_QWORD *)(v29 + 8 * v16);
          if (!v15)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v16 << 6);
    v9 = v16;
LABEL_28:
    v18 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v13);
    v20 = *v18;
    v19 = v18[1];
    sub_100056E70(*(_QWORD *)(a1 + 56) + 32 * v13, (uint64_t)v41);
    *(_QWORD *)&v40 = v20;
    *((_QWORD *)&v40 + 1) = v19;
    v38[2] = v40;
    v39[0] = v41[0];
    v39[1] = v41[1];
    *(_QWORD *)&v38[0] = v20;
    *((_QWORD *)&v38[0] + 1) = v19;
    swift_bridgeObjectRetain(v19);
    swift_dynamicCast(&v30, v38, &type metadata for String, &type metadata for AnyHashable, 7);
    sub_10004C850(v39, v33);
    v34 = v30;
    v35 = v31;
    v36 = v32;
    sub_10004C850(v33, v37);
    v30 = v34;
    v31 = v35;
    v32 = v36;
    sub_10004C850(v37, v38);
    sub_10004C850(v38, &v34);
    result = AnyHashable._rawHashValue(seed:)(v3[5]);
    v21 = -1 << *((_BYTE *)v3 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)&v7[8 * (v22 >> 6)]) != 0)
    {
      v10 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)&v7[8 * (v22 >> 6)])) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)&v7[8 * v23];
      }
      while (v27 == -1);
      v10 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)&v7[(v10 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v10;
    v11 = v3[6] + 40 * v10;
    *(_OWORD *)v11 = v30;
    *(_OWORD *)(v11 + 16) = v31;
    *(_QWORD *)(v11 + 32) = v32;
    result = (uint64_t)sub_10004C850(&v34, (_OWORD *)(v3[7] + 32 * v10));
    ++v3[2];
  }
  v17 = v9 + 5;
  if (v9 + 5 >= v28)
  {
LABEL_37:
    swift_release(v3);
    sub_100073BB4(a1);
    return (uint64_t)v3;
  }
  v15 = *(_QWORD *)(v29 + 8 * v17);
  if (v15)
  {
    v16 = v9 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v28)
      goto LABEL_37;
    v15 = *(_QWORD *)(v29 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

_OWORD *sub_10004C850(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_10004C860(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMSelectedSection(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10004C8A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  _BOOL4 v27;
  uint64_t *v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint8_t *v42;
  uint64_t *v43;
  uint64_t EnumCaseMultiPayload;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v83;
  void (*v84)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v85;
  NSObject *v86;
  os_log_type_t v87;
  uint8_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t Strong;
  uint64_t v97;
  uint64_t v98;
  uint64_t ObjectType;
  uint64_t v100;
  uint64_t v101;
  char v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  unint64_t v113;
  char v114[24];
  uint64_t v115;
  uint64_t v116;
  unint64_t v117[2];
  uint64_t v118;
  uint64_t v119;
  uint64_t v120[4];

  v2 = v1;
  v4 = sub_100053F2C(&qword_1005D5D08);
  v5 = __chkstk_darwin(v4);
  v109 = (char *)&v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v8 = (char *)&v104 - v7;
  v9 = type metadata accessor for FMSelectedSection(0);
  v107 = *(_QWORD *)(v9 - 8);
  v10 = __chkstk_darwin(v9);
  v104 = (uint64_t)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v106 = (uint64_t)&v104 - v13;
  v14 = __chkstk_darwin(v12);
  v16 = (uint64_t)&v104 - v15;
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v104 - v18;
  __chkstk_darwin(v17);
  v21 = (char *)&v104 - v20;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v113 = (unint64_t)v21;
  v22 = type metadata accessor for Logger(0);
  v23 = sub_100056D88(v22, (uint64_t)qword_1005F5748);
  v24 = swift_retain_n(v2, 2);
  v110 = v23;
  v25 = Logger.logObject.getter(v24);
  v26 = static os_log_type_t.default.getter(v25);
  v27 = os_log_type_enabled(v25, v26);
  v28 = &OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_requiredCapability;
  v108 = v8;
  if (v27)
  {
    v29 = swift_slowAlloc(12, -1);
    v112 = (uint64_t *)v9;
    v30 = (uint8_t *)v29;
    v31 = swift_slowAlloc(32, -1);
    v105 = v16;
    v32 = v31;
    v120[0] = v31;
    *(_DWORD *)v30 = 136315138;
    v33 = a1;
    v34 = v2 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
    swift_beginAccess(v2 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, v114, 0, 0);
    v35 = v34;
    v36 = v113;
    sub_10004FC74(v35, v113, type metadata accessor for FMSelectedSection);
    v37 = String.init<A>(describing:)(v36, v112);
    v39 = v38;
    v118 = sub_100056DA0(v37, v38, v120);
    v28 = &OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_requiredCapability;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v118, &v119);
    swift_release_n(v2, 2);
    v40 = v39;
    a1 = v33;
    swift_bridgeObjectRelease(v40);
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "FMSelectionController: currentSelectedSection update + %s", v30, 0xCu);
    swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
    v41 = v32;
    v16 = v105;
    swift_slowDealloc(v41, -1, -1);
    v42 = v30;
    v9 = (uint64_t)v112;
    swift_slowDealloc(v42, -1, -1);

  }
  else
  {

    swift_release_n(v2, 2);
  }
  v43 = (uint64_t *)(v2 + v28[81]);
  swift_beginAccess(v43, v120, 0, 0);
  sub_10004FC74((uint64_t)v43, (uint64_t)v19, type metadata accessor for FMSelectedSection);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v19, v9);
  switch((int)EnumCaseMultiPayload)
  {
    case 0:
      v45 = sub_100053F2C(&qword_1005DE9B0);
      sub_1000051EC((uint64_t)&v19[*(int *)(v45 + 48)], (uint64_t *)&unk_1005D3AA0);
      v46 = type metadata accessor for FMIPDevice(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v19, v46);
      goto LABEL_8;
    case 2:
      sub_10004FCB8((uint64_t)v19, type metadata accessor for FMSelectedSection);
      goto LABEL_13;
    case 3:
      EnumCaseMultiPayload = sub_10004FCB8((uint64_t)v19, type metadata accessor for FMSelectedSection);
      goto LABEL_28;
    case 10:
    case 14:
LABEL_13:
      v47 = v113;
      if (qword_1005D1F68 != -1)
        swift_once(&qword_1005D1F68, sub_100006164);
      if (byte_1005F5E31 == 1)
      {
        if (qword_1005D1F80 != -1)
          swift_once(&qword_1005D1F80, sub_10005F4AC);
        if (byte_1005F5E34 != 1)
          goto LABEL_19;
      }
      goto LABEL_29;
    case 11:
LABEL_8:
      v47 = v113;
      if (qword_1005D1F88 == -1)
        goto LABEL_9;
      goto LABEL_53;
    case 16:
    case 17:
LABEL_28:
      v81 = FMIPItemsTabEnabled.getter(EnumCaseMultiPayload);
      v47 = v113;
      if ((v81 & 1) != 0)
        goto LABEL_19;
LABEL_29:
      v48 = v47;
      v49 = v9;
      v50 = 11;
      goto LABEL_30;
    default:
      sub_10004FCB8((uint64_t)v19, type metadata accessor for FMSelectedSection);
      v47 = v113;
      break;
  }
  do
  {
LABEL_19:
    sub_10004FC74(a1, v16, type metadata accessor for FMSelectedSection);
    v51 = swift_getEnumCaseMultiPayload(v16, v9);
    v52 = &OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_requiredCapability;
    v111 = v2;
    v112 = v43;
    if (v51 == 17 || v51 == 10)
    {
      v53 = v106;
      v54 = sub_10004FC74(a1, v106, type metadata accessor for FMSelectedSection);
      v55 = Logger.logObject.getter(v54);
      v56 = static os_log_type_t.default.getter(v55);
      if (os_log_type_enabled(v55, v56))
      {
        v57 = (uint8_t *)swift_slowAlloc(12, -1);
        v58 = swift_slowAlloc(32, -1);
        v118 = v58;
        *(_DWORD *)v57 = 136315138;
        sub_10004FC74(v53, v47, type metadata accessor for FMSelectedSection);
        v59 = String.init<A>(describing:)(v47, v9);
        v60 = v9;
        v62 = v61;
        v116 = sub_100056DA0(v59, v61, &v118);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, v117);
        v63 = v62;
        v9 = v60;
        v47 = v113;
        swift_bridgeObjectRelease(v63);
        sub_10004FCB8(v53, type metadata accessor for FMSelectedSection);
        _os_log_impl((void *)&_mh_execute_header, v55, v56, "FMSelectionController: ignore previous selection %s", v57, 0xCu);
        swift_arrayDestroy(v58, 1, (char *)&type metadata for Any + 8);
        v64 = v58;
        v52 = &OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_requiredCapability;
        swift_slowDealloc(v64, -1, -1);
        v43 = v112;
        swift_slowDealloc(v57, -1, -1);
      }
      else
      {
        sub_10004FCB8(v53, type metadata accessor for FMSelectedSection);
      }

      v79 = (uint64_t)v108;
      v78 = v109;
      v80 = v107;
    }
    else
    {
      v105 = v16;
      v106 = a1;
      v65 = a1;
      v66 = v104;
      v67 = sub_10004FC74(v65, v104, type metadata accessor for FMSelectedSection);
      v68 = Logger.logObject.getter(v67);
      v69 = static os_log_type_t.default.getter(v68);
      if (os_log_type_enabled(v68, v69))
      {
        v70 = (uint8_t *)swift_slowAlloc(12, -1);
        v71 = swift_slowAlloc(32, -1);
        v118 = v71;
        *(_DWORD *)v70 = 136315138;
        sub_10004FC74(v66, v47, type metadata accessor for FMSelectedSection);
        v72 = String.init<A>(describing:)(v47, v9);
        v73 = v9;
        v75 = v74;
        v116 = sub_100056DA0(v72, v74, &v118);
        v52 = &OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_requiredCapability;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, v117);
        v76 = v75;
        v9 = v73;
        swift_bridgeObjectRelease(v76);
        sub_10004FCB8(v66, type metadata accessor for FMSelectedSection);
        _os_log_impl((void *)&_mh_execute_header, v68, v69, "FMSelectionController: setting previous selection to %s", v70, 0xCu);
        swift_arrayDestroy(v71, 1, (char *)&type metadata for Any + 8);
        v77 = v71;
        v2 = v111;
        swift_slowDealloc(v77, -1, -1);
        v43 = v112;
        swift_slowDealloc(v70, -1, -1);
      }
      else
      {
        sub_10004FCB8(v66, type metadata accessor for FMSelectedSection);
      }

      v79 = (uint64_t)v108;
      v78 = v109;
      v80 = v107;
      sub_10004FC74(v106, v47, type metadata accessor for FMSelectedSection);
      v83 = v2 + v52[80];
      swift_beginAccess(v83, &v118, 33, 0);
      sub_100009DF8(v47, v83);
      swift_endAccess(&v118);
      sub_1001F5870();
      sub_10004FCB8(v47, type metadata accessor for FMSelectedSection);
      sub_10004FCB8(v105, type metadata accessor for FMSelectedSection);
    }
    sub_10004FC74((uint64_t)v43, v79, type metadata accessor for FMSelectedSection);
    v84 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v80 + 56);
    v84(v79, 0, 1, v9);
    a1 = v2 + v52[80];
    swift_beginAccess(a1, &v118, 0, 0);
    sub_10004FC74(a1, (uint64_t)v78, type metadata accessor for FMSelectedSection);
    v84((uint64_t)v78, 0, 1, v9);
    sub_10004AAB0(v79, v78);
    sub_1000051EC((uint64_t)v78, &qword_1005D5D08);
    sub_1000051EC(v79, &qword_1005D5D08);
    v85 = swift_retain_n(v2, 2);
    v86 = Logger.logObject.getter(v85);
    v87 = static os_log_type_t.default.getter(v86);
    v16 = v87;
    if (os_log_type_enabled(v86, v87))
    {
      v88 = (uint8_t *)swift_slowAlloc(12, -1);
      v89 = v2;
      v90 = swift_slowAlloc(32, -1);
      *(_DWORD *)v88 = 136315138;
      a1 = (uint64_t)(v88 + 12);
      v115 = v90;
      v116 = 0;
      v117[0] = 0xE000000000000000;
      sub_10004FC74((uint64_t)v43, v113, type metadata accessor for FMSelectedSection);
      v43 = &v116;
      v47 = v113;
      _print_unlocked<A, B>(_:_:)(v113, &v116, v9, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      sub_10004FCB8(v47, type metadata accessor for FMSelectedSection);
      v9 = v117[0];
      v116 = sub_100056DA0(v116, v117[0], &v115);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, v117);
      swift_release_n(v89, 2);
      swift_bridgeObjectRelease(v9);
      _os_log_impl((void *)&_mh_execute_header, v86, (os_log_type_t)v16, "FMSelectionController: currentSelection changed  %s", v88, 0xCu);
      swift_arrayDestroy(v90, 1, (char *)&type metadata for Any + 8);
      v91 = v90;
      v2 = v89;
      swift_slowDealloc(v91, -1, -1);
      swift_slowDealloc(v88, -1, -1);

    }
    else
    {

      swift_release_n(v2, 2);
    }
    swift_beginAccess(v2 + 16, &v116, 0, 0);
    v92 = *(_QWORD *)(v2 + 16);
    if ((unint64_t)v92 >> 62)
    {
      if (v92 < 0)
        v100 = *(_QWORD *)(v2 + 16);
      else
        v100 = v92 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(v2 + 16));
      v2 = _CocoaArrayWrapper.endIndex.getter(v100);
      if (!v2)
        goto LABEL_51;
    }
    else
    {
      v2 = *(_QWORD *)((v92 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(v92);
      if (!v2)
        goto LABEL_51;
    }
    if (v2 >= 1)
    {
      v93 = 0;
      v113 = v92 & 0xC000000000000001;
      do
      {
        if (v113)
        {
          v94 = specialized _ArrayBuffer._getElementSlowPath(_:)(v93, v92);
        }
        else
        {
          v94 = *(_QWORD *)(v92 + 8 * v93 + 32);
          swift_retain(v94);
        }
        v95 = v94 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
        Strong = swift_unknownObjectWeakLoadStrong(v94 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber);
        if (Strong)
        {
          v97 = Strong;
          v98 = *(_QWORD *)(v95 + 8);
          ObjectType = swift_getObjectType(Strong);
          sub_10004FC74((uint64_t)v112, v47, type metadata accessor for FMSelectedSection);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v98 + 8))(v111, v47, ObjectType, v98);
          swift_release(v94);
          swift_unknownObjectRelease(v97);
          sub_10004FCB8(v47, type metadata accessor for FMSelectedSection);
        }
        else
        {
          swift_release(v94);
        }
        ++v93;
      }
      while (v2 != v93);
LABEL_51:
      swift_bridgeObjectRelease(v92);
      v101 = v47;
      sub_10004FC74((uint64_t)v112, v47, type metadata accessor for FMSelectedSection);
      v102 = sub_10000F144(v47);
      sub_10004FCB8(v101, type metadata accessor for FMSelectedSection);
      v103 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
      __asm { BR              X10 }
    }
    __break(1u);
LABEL_53:
    swift_once(&qword_1005D1F88, sub_1003772FC);
LABEL_9:
    ;
  }
  while (byte_1005F5E35 != 1);
  v48 = v47;
  v49 = v9;
  v50 = 14;
LABEL_30:
  swift_storeEnumTagMultiPayload(v48, v49, v50);
  swift_beginAccess(v43, &v118, 33, 0);
  sub_1000667C0(v47, (uint64_t)v43);
  return swift_endAccess(&v118);
}

uint64_t sub_10004D5C8()
{
  uint64_t v0;

  v0 = sub_10004D5DC();
  return swift_getObjCClassFromMetadata(v0);
}

uint64_t sub_10004D5DC()
{
  return sub_100006C5C(0, &qword_1005DA330, NUIContainerStackView_ptr);
}

void sub_10004D604()
{
  char *v0;
  char *v1;
  double v2;
  double v3;
  double v4;
  __int128 v5;
  double v6;
  double v7;
  double v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  double v15;
  void *v16;
  double v17;
  double v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  Class isa;
  double v26;
  void *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  Class v36;
  uint64_t v37;
  id v38;
  id v39;
  Class v40;
  double v41;
  double v42;
  void *v43;
  double v44;
  double v45;
  void *v46;
  double v47;
  uint64_t v48;
  id v49;
  id v50;
  Class v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  id v60;
  Class v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  id v65;
  id v66;
  id v67;
  id v68;
  Class v69;
  void *v70;
  id v71;
  double v72;
  char v73;
  id v74;
  uint64_t v75;
  int v76;
  int v77;
  uint64_t v78;

  v1 = v0;
  if (qword_1005D1CD8 != -1)
    swift_once(&qword_1005D1CD8, sub_100008DD0);
  v2 = *((double *)&xmmword_1005F51E0 + 1);
  v72 = *(double *)&xmmword_1005F51E0;
  v3 = *(double *)&qword_1005F51F0;
  v4 = unk_1005F51F8;
  v5 = xmmword_1005F5200;
  v6 = *(double *)&qword_1005F5210;
  v7 = unk_1005F5218;
  v8 = *(double *)&qword_1005F5220;
  v9 = objc_msgSend(v0, "traitCollection");
  v10 = objc_msgSend(v9, "preferredContentSizeCategory");

  v73 = UIContentSizeCategory.isAccessibilityCategory.getter(v10);
  v11 = objc_msgSend(v1, "containerView");
  objc_msgSend(v11, "setAxis:", 0);
  objc_msgSend(v11, "setDistribution:", 2);
  objc_msgSend(v11, "setAlignment:", 3);
  objc_msgSend(v11, "setSpacing:", v2);
  objc_msgSend(v11, "setPreservesSuperviewLayoutMargins:", 0);
  objc_msgSend(v11, "setInsetsLayoutMarginsFromSafeArea:", 0);
  objc_msgSend(v11, "setDirectionalLayoutMargins:", v5, v6, v7);
  v12 = *(void **)&v1[qword_1005DA270];
  objc_msgSend(v12, "setFrame:", 0.0, 0.0, v3, v4);
  v13 = *(void **)&v1[qword_1005DA248];
  objc_msgSend(v13, "setDirectionalLayoutMargins:", NSDirectionalEdgeInsetsZero.top, NSDirectionalEdgeInsetsZero.leading, NSDirectionalEdgeInsetsZero.bottom, NSDirectionalEdgeInsetsZero.trailing);
  objc_msgSend(v13, "setInsetsLayoutMarginsFromSafeArea:", 0);
  v14 = *(void **)&v1[qword_1005DA268];
  LODWORD(v15) = 1148846080;
  objc_msgSend(v14, "setContentCompressionResistancePriority:forAxis:", 0, v15);
  v16 = *(void **)&v1[qword_1005DA288];
  LODWORD(v17) = 1148846080;
  objc_msgSend(v16, "setContentCompressionResistancePriority:forAxis:", 0, v17);
  LODWORD(v18) = 1148846080;
  objc_msgSend(v12, "setContentCompressionResistancePriority:forAxis:", 0, v18);
  v19 = *(void **)&v1[qword_1005DA230];
  v75 = sub_100053F2C(&qword_1005D2F10);
  v20 = swift_allocObject(v75, 56, 7);
  *(_OWORD *)(v20 + 16) = xmmword_1004820C0;
  *(_QWORD *)(v20 + 32) = v16;
  *(_QWORD *)(v20 + 40) = v14;
  v21 = *(void **)&v1[qword_1005DA278];
  *(_QWORD *)(v20 + 48) = v21;
  v78 = v20;
  specialized Array._endMutation()(v20);
  sub_100006C5C(0, (unint64_t *)&qword_1005DB470, UIView_ptr);
  v22 = v16;
  v23 = v14;
  v24 = v21;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v19, "setArrangedSubviews:", isa, swift_bridgeObjectRelease(v78).n128_f64[0]);

  LODWORD(v26) = 1148846080;
  objc_msgSend(v19, "setContentHuggingPriority:forAxis:", 0, v26);
  if ((v73 & 1) != 0)
  {
    v27 = *(void **)&v1[qword_1005DA250];
    objc_msgSend(v27, "setAxis:", 1);
    objc_msgSend(v27, "setDistribution:", 0);
    objc_msgSend(v27, "setAlignment:", 1);
    objc_msgSend(v27, "setSpacing:", 5.0);
    v28 = swift_allocObject(v75, 72, 7);
    *(_OWORD *)(v28 + 16) = xmmword_1004820D0;
    v29 = *(void **)&v1[qword_1005DA238];
    v30 = *(void **)&v1[qword_1005DA258];
    *(_QWORD *)(v28 + 32) = v29;
    *(_QWORD *)(v28 + 40) = v30;
    v31 = *(void **)&v1[qword_1005DA260];
    *(_QWORD *)(v28 + 48) = v12;
    *(_QWORD *)(v28 + 56) = v31;
    *(_QWORD *)(v28 + 64) = v19;
    v78 = v28;
    specialized Array._endMutation()(v28);
    v74 = v12;
    v32 = v19;
    v33 = v29;
    v34 = v30;
    v35 = v31;
    v36 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v27, "setArrangedSubviews:", v36, swift_bridgeObjectRelease(v78).n128_f64[0]);

    objc_msgSend(v32, "setDistribution:", 4);
    objc_msgSend(v32, "setAlignment:", 3);
    objc_msgSend(v27, "setAlignment:forView:inAxis:", 3, v33, 0);
    objc_msgSend(v27, "setAlignment:forView:inAxis:", 3, v74, 0);
    objc_msgSend(v27, "setAlignment:forView:inAxis:", 3, v32, 0);
    v37 = swift_allocObject(v75, 40, 7);
    *(_OWORD *)(v37 + 16) = xmmword_100481B00;
    *(_QWORD *)(v37 + 32) = v27;
    v78 = v37;
    specialized Array._endMutation()(v37);
    v38 = v11;
    v39 = v27;
    v40 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v38, "setArrangedSubviews:", v40, swift_bridgeObjectRelease(v78).n128_f64[0]);

  }
  else
  {
    objc_msgSend(v19, "setDistribution:", 4);
    objc_msgSend(v19, "setAlignment:", 4);
    LODWORD(v41) = 1132068864;
    objc_msgSend(v13, "setContentCompressionResistancePriority:forAxis:", 0, v41);
    LODWORD(v42) = 1148846080;
    objc_msgSend(v13, "setContentCompressionResistancePriority:forAxis:", 1, v42);
    objc_msgSend(v13, "setAxis:", 1);
    objc_msgSend(v13, "setDistribution:", 0);
    objc_msgSend(v13, "setAlignment:", 1);
    objc_msgSend(v13, "setSpacing:", v8);
    objc_msgSend(v13, "setLayoutMarginsRelativeArrangement:", 1);
    v43 = *(void **)&v1[qword_1005DA240];
    LODWORD(v44) = 0;
    objc_msgSend(v43, "setContentCompressionResistancePriority:forAxis:", 0, v44);
    LODWORD(v45) = 1148846080;
    objc_msgSend(v43, "setContentCompressionResistancePriority:forAxis:", 1, v45);
    objc_msgSend(v43, "setAxis:", 0);
    objc_msgSend(v43, "setDistribution:", 0);
    objc_msgSend(v43, "setAlignment:", 3);
    objc_msgSend(v43, "setSpacing:", v72);
    v46 = *(void **)&v1[qword_1005DA258];
    LODWORD(v47) = 1148846080;
    objc_msgSend(v46, "setContentCompressionResistancePriority:forAxis:", 1, v47);
    v48 = swift_allocObject(v75, 48, 7);
    *(_OWORD *)(v48 + 16) = xmmword_1004820B0;
    *(_QWORD *)(v48 + 32) = v46;
    *(_QWORD *)(v48 + 40) = v12;
    v78 = v48;
    specialized Array._endMutation()(v48);
    v49 = v46;
    v50 = v12;
    v51 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v43, "setArrangedSubviews:", v51, swift_bridgeObjectRelease(v78).n128_f64[0]);

    v52 = *(void **)&v1[qword_1005DA260];
    type metadata accessor for UILayoutPriority(0);
    v54 = v53;
    v76 = 1065353216;
    v77 = 1148846080;
    v55 = sub_10004E0AC();
    static _UIKitNumericRawRepresentable.- infix(_:_:)(&v78, &v77, &v76, v54, v55);
    LODWORD(v56) = v78;
    objc_msgSend(v52, "setContentCompressionResistancePriority:forAxis:", 1, v56);
    v57 = swift_allocObject(v75, 48, 7);
    *(_OWORD *)(v57 + 16) = xmmword_1004820B0;
    *(_QWORD *)(v57 + 32) = v43;
    *(_QWORD *)(v57 + 40) = v52;
    v78 = v57;
    specialized Array._endMutation()(v57);
    v58 = v78;
    v59 = v43;
    v60 = v52;
    v61 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v13, "setArrangedSubviews:", v61, swift_bridgeObjectRelease(v58).n128_f64[0]);

    v62 = swift_allocObject(v75, 56, 7);
    *(_OWORD *)(v62 + 16) = xmmword_1004820C0;
    v63 = *(void **)&v1[qword_1005DA238];
    *(_QWORD *)(v62 + 32) = v63;
    *(_QWORD *)(v62 + 40) = v13;
    *(_QWORD *)(v62 + 48) = v19;
    v78 = v62;
    specialized Array._endMutation()(v62);
    v64 = v78;
    v65 = v11;
    v66 = v63;
    v67 = v13;
    v68 = v19;
    v69 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v65, "setArrangedSubviews:", v69, swift_bridgeObjectRelease(v64).n128_f64[0]);

    objc_msgSend(v65, "setAlignment:forView:inAxis:", 1, v66, 1);
  }
  v70 = *(void **)&v1[qword_1005DA280];
  objc_msgSend(v70, "setAutoresizingMask:", 10, 3, 7);
  sub_10004E9E8();
  v71 = objc_msgSend(v1, "containerView");
  objc_msgSend(v71, "addSubview:", v70);

}

id sub_10004DEE8()
{
  void *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  Class isa;
  id v10;
  objc_super v12;
  objc_super v13;

  v1 = (void *)objc_opt_self(UITraitCollection);
  v2 = objc_msgSend(v1, "_traitCollectionWithBackgroundLevel:", 1);
  if (v2)
  {
    v3 = v2;
    v4 = sub_100053F2C(&qword_1005D2F10);
    v5 = swift_allocObject(v4, 48, 7);
    *(_OWORD *)(v5 + 16) = xmmword_1004820B0;
    v12.receiver = v0;
    v12.super_class = (Class)type metadata accessor for FMCardContainerViewController();
    v6 = objc_msgSendSuper2(&v12, "traitCollection");
    *(_QWORD *)(v5 + 32) = v6;
    *(_QWORD *)(v5 + 40) = v3;
    specialized Array._endMutation()(v6);
    v7 = v5;
    sub_100006C5C(0, (unint64_t *)&unk_1005D9C40, UITraitCollection_ptr);
    v8 = v3;
    isa = Array._bridgeToObjectiveC()().super.isa;
    v10 = objc_msgSend(v1, "traitCollectionWithTraitsFromCollections:", isa, swift_bridgeObjectRelease(v7).n128_f64[0]);

    return v10;
  }
  else
  {
    v13.receiver = v0;
    v13.super_class = (Class)type metadata accessor for FMCardContainerViewController();
    return objc_msgSendSuper2(&v13, "traitCollection");
  }
}

uint64_t type metadata accessor for FMCardContainerViewController()
{
  return objc_opt_self(_TtC6FindMy29FMCardContainerViewController);
}

void sub_10004E054(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v5;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata(0, a3);
    if (!v5)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

void type metadata accessor for UILayoutPriority(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D2490, (uint64_t)&unk_100540B00);
}

unint64_t sub_10004E0AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005DD940;
  if (!qword_1005DD940)
  {
    type metadata accessor for UILayoutPriority(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for UILayoutPriority, v1);
    atomic_store(result, (unint64_t *)&qword_1005DD940);
  }
  return result;
}

id sub_10004E0F4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  NSString v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  NSString v25;
  NSString v26;
  void *v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  NSString v31;
  id v32;
  NSString v33;
  char *v34;
  char v35;
  NSString v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  void *v38;
  char **v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  __n128 v56;
  void (*v57)(char *, uint64_t, __n128);
  char *v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  __n128 v62;
  void (*v63)(char *, uint64_t, __n128);
  char *v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  __n128 v68;
  char *v69;
  int v70;
  char *v71;
  int v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  uint64_t *v76;
  int v77;
  uint64_t v78;
  uint64_t (*v79)(uint64_t, uint64_t);
  uint64_t (*v80)(uint64_t, uint64_t);
  void (*v81)(uint64_t, uint64_t);
  void (*v82)(uint64_t, uint64_t);
  NSObject *v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v2 = v1;
  v4 = *(_QWORD *)((swift_isaMask & *v1) + 0x50);
  v89 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(a1);
  v85 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v88 = (char *)&v76 - v8;
  v9 = __chkstk_darwin(v7);
  v87 = (char *)&v76 - v10;
  v11 = __chkstk_darwin(v9);
  v86 = (char *)&v76 - v12;
  v13 = __chkstk_darwin(v11);
  v84 = (char *)&v76 - v14;
  v16 = *(_QWORD *)(v15 + 88);
  sub_10004EE74(v13, v4, v16);
  v17 = *(void **)((char *)v1 + qword_1005DA258);
  v83 = *(NSObject **)(v16 + 88);
  ((void (*)(uint64_t, uint64_t))v83)(v4, v16);
  v19 = v18;
  v20 = String._bridgeToObjectiveC()();
  objc_msgSend(v17, "setText:", v20, swift_bridgeObjectRelease(v19).n128_f64[0]);

  v21 = String._bridgeToObjectiveC()();
  objc_msgSend(v17, "setAccessibilityIdentifier:", v21);

  v22 = *(void **)((char *)v2 + qword_1005DA260);
  v82 = *(void (**)(uint64_t, uint64_t))(v16 + 80);
  v82(v4, v16);
  v24 = v23;
  v25 = String._bridgeToObjectiveC()();
  objc_msgSend(v22, "setText:", v25, swift_bridgeObjectRelease(v24).n128_f64[0]);

  v26 = String._bridgeToObjectiveC()();
  objc_msgSend(v22, "setAccessibilityIdentifier:", v26);

  v27 = *(void **)((char *)v2 + qword_1005DA268);
  v81 = *(void (**)(uint64_t, uint64_t))(v16 + 24);
  v81(v4, v16);
  if (v28)
  {
    v30 = v28;
    v31 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v29 = swift_bridgeObjectRelease(v30).n128_u64[0];
  }
  else
  {
    v31 = 0;
  }
  objc_msgSend(v27, "setText:", v31, v29);

  v32 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  objc_msgSend(v27, "setTextColor:", v32);

  v33 = String._bridgeToObjectiveC()();
  objc_msgSend(v27, "setAccessibilityIdentifier:", v33);

  v34 = *(char **)((char *)v2 + qword_1005DA270);
  v80 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 248);
  objc_msgSend(v34, "setHidden:", (v80(v4, v16) & 1) == 0);
  *(double *)&v34[OBJC_IVAR____TtC6FindMy13FMBatteryView_level] = (*(double (**)(uint64_t, uint64_t))(v16 + 240))(v4, v16);
  sub_10004F220();
  v34[OBJC_IVAR____TtC6FindMy13FMBatteryView_shouldShowLowPowerWarning] = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 256))(v4, v16) & 1;
  sub_10004ED74();
  v34[OBJC_IVAR____TtC6FindMy13FMBatteryView_isLowPowerEnabled] = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 264))(v4, v16) & 1;
  sub_10004ED74();
  v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 272))(v4, v16);
  v34[OBJC_IVAR____TtC6FindMy13FMBatteryView_isCharging] = v35 & 1;
  objc_msgSend(*(id *)&v34[OBJC_IVAR____TtC6FindMy13FMBatteryView_chargingView], "setHidden:", (v35 & 1) == 0);
  v36 = String._bridgeToObjectiveC()();
  objc_msgSend(v34, "setAccessibilityIdentifier:", v36);

  objc_msgSend(*(id *)((char *)v2 + qword_1005DA288), "setHidden:", ((*(uint64_t (**)(uint64_t, uint64_t))(v16 + 120))(v4, v16) & 1) == 0);
  v37 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 152);
  if ((v37(v4, v16) & 1) != 0)
  {
    objc_msgSend(v27, "setHidden:", 1);
    v38 = *(void **)((char *)v2 + qword_1005DA278);
    objc_msgSend(v38, "setHidden:", 0);
    v39 = &selRef_startAnimating;
  }
  else
  {
    objc_msgSend(v27, "setHidden:", 0);
    v38 = *(void **)((char *)v2 + qword_1005DA278);
    objc_msgSend(v38, "setHidden:", 1);
    v39 = &selRef_stopAnimating;
  }
  v40 = v88;
  objc_msgSend(v38, *v39);
  v41 = v87;
  v42 = v89;
  if (qword_1005D1CE0 != -1)
    swift_once(&qword_1005D1CE0, sub_10000884C);
  if (byte_1005F5238 == 1)
  {
    v79 = v37;
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v43 = type metadata accessor for Logger(0);
    sub_100056D88(v43, (uint64_t)qword_1005F5748);
    v44 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
    v45 = v84;
    v44(v84, a1, v4);
    v44(v86, a1, v4);
    v46 = v41;
    v44(v41, a1, v4);
    v44(v40, a1, v4);
    v47 = v85;
    v48 = ((uint64_t (*)(char *, uint64_t, uint64_t))v44)(v85, a1, v4);
    v49 = Logger.logObject.getter(v48);
    v50 = static os_log_type_t.default.getter(v49);
    v51 = v50;
    if (os_log_type_enabled(v49, v50))
    {
      v52 = swift_slowAlloc(44, -1);
      v78 = swift_slowAlloc(96, -1);
      v91 = v78;
      *(_DWORD *)v52 = 136316162;
      v77 = v51;
      v53 = ((uint64_t (*)(uint64_t, uint64_t))v83)(v4, v16);
      v55 = v54;
      v90 = sub_100056DA0(v53, v54, &v91);
      v76 = &v91;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91);
      v56 = swift_bridgeObjectRelease(v55);
      v83 = v49;
      v57 = *(void (**)(char *, uint64_t, __n128))(v89 + 8);
      v57(v45, v4, v56);
      *(_WORD *)(v52 + 12) = 2080;
      v58 = v86;
      v59 = ((uint64_t (*)(uint64_t, uint64_t))v82)(v4, v16);
      v61 = v60;
      v90 = sub_100056DA0(v59, v60, &v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, &v91);
      v62 = swift_bridgeObjectRelease(v61);
      v63 = v57;
      v57(v58, v4, v62);
      *(_WORD *)(v52 + 22) = 2080;
      v64 = v87;
      v65 = ((uint64_t (*)(uint64_t, uint64_t))v81)(v4, v16);
      if (v66)
      {
        v67 = v66;
      }
      else
      {
        v65 = 7104878;
        v67 = 0xE300000000000000;
      }
      v90 = sub_100056DA0(v65, v67, &v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, v76);
      v68 = swift_bridgeObjectRelease(v67);
      v63(v64, v4, v68);
      *(_WORD *)(v52 + 32) = 1024;
      v69 = v88;
      v70 = v79(v4, v16) & 1;
      ((void (*)(char *, uint64_t))v63)(v69, v4);
      LODWORD(v90) = v70;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, (char *)&v90 + 4);
      *(_WORD *)(v52 + 38) = 1024;
      v71 = v85;
      v72 = v80(v4, v16) & 1;
      ((void (*)(char *, uint64_t))v63)(v71, v4);
      LODWORD(v90) = v72;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v90, (char *)&v90 + 4);
      v49 = v83;
      _os_log_impl((void *)&_mh_execute_header, v83, (os_log_type_t)v77, "FMTableViewCell: Content\ntitle: %s\nsubtitle: %s\ndistance: %s\nlocating: %{BOOL}d\nbatteryIndicatorShowing: %{BOOL}d", (uint8_t *)v52, 0x2Cu);
      v73 = v78;
      swift_arrayDestroy(v78, 3, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v73, -1, -1);
      swift_slowDealloc(v52, -1, -1);
    }
    else
    {
      v74 = *(void (**)(char *, uint64_t))(v89 + 8);
      v74(v47, v4);
      v74(v40, v4);
      v74(v45, v4);
      v74(v86, v4);
      v74(v46, v4);
    }

  }
  *((_BYTE *)v2 + qword_1005DA2A0) = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 192))(v4, v16) & 1;
  sub_10004E9E8();
  return sub_10004E9E8();
}

id sub_10004E9E8()
{
  char *v0;
  id v1;
  double v2;
  id v3;
  double v4;
  double v5;
  void *v6;
  double v7;

  v1 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  v2 = UIRoundToScreenScale(0.3);

  v3 = objc_msgSend(v0, "containerView");
  objc_msgSend(v3, "bounds");
  v5 = v4;

  v6 = *(void **)&v0[qword_1005DA280];
  v7 = sub_10004ECA4();
  return objc_msgSend(v6, "setFrame:", v7, v5 - v2, sub_10004EAB4(), v2);
}

double sub_10004EAB4()
{
  unsigned __int8 *v0;
  id v1;
  id v2;
  int v3;
  int v4;
  id v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  id v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  double v17;
  double v18;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "preferredContentSizeCategory");

  v3 = UIContentSizeCategory.isAccessibilityCategory.getter(v2);
  if (v0[qword_1005DA290] == 1 && v0[qword_1005DA2A8] == 1)
  {
    if (((v0[qword_1005DA298] | v3) & 1) == 0)
      goto LABEL_4;
LABEL_7:
    v10 = objc_msgSend(v0, "containerView");
    objc_msgSend(v10, "bounds");
    v9 = v11;

    return v9;
  }
  if ((v3 & 1) != 0)
    goto LABEL_7;
LABEL_4:
  v4 = v0[qword_1005DA2A0];
  v5 = objc_msgSend(v0, "containerView");
  v6 = v5;
  if (v4 == 1)
  {
    objc_msgSend(v5, "bounds");
    v8 = v7;

    return v8 - sub_10004ECA4();
  }
  else
  {
    objc_msgSend(v5, "directionalLayoutMargins");
    v13 = v12;

    if (qword_1005D1DF0 != -1)
      swift_once(&qword_1005D1DF0, sub_10005DC60);
    v14 = v13 + *(double *)&qword_1005F5778;
    if (qword_1005D1CD8 != -1)
      swift_once(&qword_1005D1CD8, sub_100008DD0);
    v15 = v14 + *((double *)&xmmword_1005F51E0 + 1);
    v16 = objc_msgSend(v0, "containerView");
    objc_msgSend(v16, "bounds");
    v18 = v17;

    return v18 - v15;
  }
}

double sub_10004ECA4()
{
  void *v0;
  double v1;
  id v2;
  double v3;
  id v4;
  double v5;
  double v6;

  v1 = 0.0;
  if ((*((_BYTE *)v0 + qword_1005DA298) & 1) == 0)
  {
    if (*((_BYTE *)v0 + qword_1005DA2A0) == 1)
    {
      v2 = objc_msgSend(v0, "containerView");
      objc_msgSend(v2, "directionalLayoutMargins");
      v1 = v3;

    }
    else if (objc_msgSend(v0, "effectiveUserInterfaceLayoutDirection") != (id)1)
    {
      v4 = objc_msgSend(v0, "containerView");
      objc_msgSend(v4, "bounds");
      v6 = v5;

      return v6 - sub_10004EAB4();
    }
  }
  return v1;
}

id sub_10004ED74()
{
  uint64_t v0;
  void *v1;
  uint64_t *v2;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC6FindMy13FMBatteryView_isLowPowerEnabled) == 1)
  {
    v1 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy13FMBatteryView_levelView);
    if (qword_1005D1FB8 != -1)
      swift_once(&qword_1005D1FB8, sub_10038329C);
    v2 = &qword_1005E1CC8;
  }
  else
  {
    v1 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy13FMBatteryView_levelView);
    if (*(_BYTE *)(v0 + OBJC_IVAR____TtC6FindMy13FMBatteryView_shouldShowLowPowerWarning) == 1)
    {
      if (qword_1005D1FB0 != -1)
        swift_once(&qword_1005D1FB0, sub_100383278);
      v2 = &qword_1005E1CC0;
    }
    else
    {
      if (qword_1005D1FA8 != -1)
        swift_once(&qword_1005D1FA8, sub_10005F6F0);
      v2 = &qword_1005E1CB8;
    }
  }
  return objc_msgSend(v1, "setTintColor:", *v2);
}

id sub_10004EE74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  char v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void (*v17)(uint64_t, uint64_t);

  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 192))(a2, a3);
  v3[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_hasBackplate] = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 184))(a2, a3) & 1;
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 96))(a2, a3);
  v8 = *(void **)&v3[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_backplateStrokeColor];
  *(_QWORD *)&v3[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_backplateStrokeColor] = v7;

  if ((v6 & 1) != 0)
  {
    objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_imageView], "setHidden:", 1);
    objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_badgeView], "setHidden:", 1);
    objc_msgSend(v3, "setHidden:", 1);
  }
  else
  {
    v9 = *(void **)&v3[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_badgeView];
    v10 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 40);
    v11 = (void *)v10(a2, a3);
    objc_msgSend(v9, "setImage:", v11);

    v12 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 48))(a2, a3);
    objc_msgSend(v9, "setBackgroundColor:", v12);

    v13 = (void *)v10(a2, a3);
    v14 = v13;
    if (v13)

    objc_msgSend(v9, "setHidden:", v14 == 0);
    v15 = *(void **)&v3[OBJC_IVAR____TtC6FindMy29FMTableViewCellImageContainer_imageView];
    v16 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 32))(a2, a3);
    objc_msgSend(v15, "setImage:", v16);

    v17 = *(void (**)(uint64_t, uint64_t))(a3 + 176);
    v17(a2, a3);
    v17(a2, a3);
    objc_msgSend(v15, "frame");
    objc_msgSend(v15, "setFrame:");
    objc_msgSend(v15, "setHidden:", 0);
    objc_msgSend(v3, "setHidden:", 0);
  }
  return objc_msgSend(v3, "setNeedsLayout");
}

double sub_10004F09C(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 52));
}

void *sub_10004F0A8(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + *(int *)(a1 + 44));
  v3 = v2;
  return v2;
}

uint64_t sub_10004F0D0()
{
  return 0;
}

uint64_t sub_10004F0D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *(int *)(a1 + 72));
  v3 = *v2;
  swift_bridgeObjectRetain(v2[1]);
  return v3;
}

uint64_t sub_10004F10C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *(int *)(a1 + 36));
  v3 = *v2;
  swift_bridgeObjectRetain(v2[1]);
  return v3;
}

uint64_t sub_10004F140(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *(int *)(a1 + 24));
  v3 = *v2;
  swift_bridgeObjectRetain(v2[1]);
  return v3;
}

void *sub_10004F174(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + *(int *)(a1 + 40));
  v3 = v2;
  return v2;
}

id sub_10004F19C()
{
  return objc_msgSend((id)objc_opt_self(UIColor), "systemGray6Color");
}

uint64_t sub_10004F1CC(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 116));
}

uint64_t sub_10004F1D8(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 56));
}

double sub_10004F1E4()
{
  return 0.0;
}

uint64_t sub_10004F1EC(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 92));
}

void *sub_10004F1F8(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + *(int *)(a1 + 48));
  v3 = v2;
  return v2;
}

_OWORD *sub_10004F220()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  Swift::String v4;
  Swift::String v5;
  Swift::String v6;
  uint64_t v7;
  _OWORD *result;
  double v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  NSString v16;
  Swift::String v17;
  Swift::String v18;

  v1 = v0;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v2 = (void *)objc_opt_self(NSBundle);
  v3 = objc_msgSend(v2, "mainBundle");
  v4._countAndFlagsBits = 0xD00000000000001ALL;
  v17._countAndFlagsBits = 0xD00000000000002CLL;
  v17._object = (void *)0x80000001004C32A0;
  v4._object = (void *)0x80000001004C3280;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v17);

  v7 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
  result = (_OWORD *)swift_allocObject(v7, 72, 7);
  result[1] = xmmword_100481740;
  v9 = *(double *)&v0[OBJC_IVAR____TtC6FindMy13FMBatteryView_level] * 100.0;
  if ((~*(_QWORD *)&v9 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v9 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v9 >= 9.22337204e18)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  *((_QWORD *)result + 7) = &type metadata for Int;
  *((_QWORD *)result + 8) = &protocol witness table for Int;
  *((_QWORD *)result + 4) = (uint64_t)v9;
  String.init(format:_:)(v6._countAndFlagsBits, v6._object, result);
  v11 = v10;
  swift_bridgeObjectRelease(v6._object);
  if (v0[OBJC_IVAR____TtC6FindMy13FMBatteryView_isCharging] == 1)
  {
    _StringGuts.grow(_:)(20);
    v12 = objc_msgSend(v2, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
    v18._countAndFlagsBits = 0xD00000000000002BLL;
    v18._object = (void *)0x80000001004C32F0;
    v13._object = (void *)0x80000001004C32D0;
    v13._countAndFlagsBits = 0xD000000000000019;
    v14._countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v18);

    String.append(_:)(v15);
    swift_bridgeObjectRelease(v15._object);
  }
  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setAccessibilityLabel:", v16, swift_bridgeObjectRelease(v11).n128_f64[0]);

  sub_10004ED74();
  return sub_100022998();
}

uint64_t sub_10004F4A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _BYTE *v4;
  _BYTE *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double *p_aBlock;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  double v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  void *v37;
  _QWORD *v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  void **aBlock;
  _QWORD v63[4];
  _QWORD *v64;
  uint64_t v65;
  char v66[32];

  v5 = v4;
  v58 = a1;
  v9 = type metadata accessor for FMFConfigValue(0);
  v54 = *(_QWORD *)(v9 - 8);
  v55 = v9;
  __chkstk_darwin(v9);
  v53 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FMSelectedSection(0);
  v57 = *(_QWORD *)(v11 - 8);
  v12 = *(_QWORD *)(v57 + 64);
  v13 = __chkstk_darwin(v11);
  v59 = (uint64_t)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v15 = (char *)&v53 - v14;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v16 = type metadata accessor for Logger(0);
  v17 = sub_100056D88(v16, (uint64_t)qword_1005F5748);
  swift_bridgeObjectRetain_n(a2, 2);
  swift_bridgeObjectRetain_n(a3, 2);
  v18 = swift_bridgeObjectRetain_n(a4, 2);
  v56 = v17;
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  v21 = os_log_type_enabled(v19, v20);
  v60 = (unint64_t)a2 >> 62;
  v61 = v15;
  if (v21)
  {
    v22 = swift_slowAlloc(32, -1);
    *(_DWORD *)v22 = 134218496;
    if ((unint64_t)a2 >> 62)
    {
      if (a2 < 0)
        v46 = a2;
      else
        v46 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a2);
      v23 = _CocoaArrayWrapper.endIndex.getter(v46);
      swift_bridgeObjectRelease(a2);
    }
    else
    {
      v23 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(a2);
    aBlock = (void **)v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v63);
    swift_bridgeObjectRelease(a2);
    *(_WORD *)(v22 + 12) = 2048;
    if ((unint64_t)a3 >> 62)
    {
      if (a3 < 0)
        v47 = a3;
      else
        v47 = a3 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a3);
      v24 = _CocoaArrayWrapper.endIndex.getter(v47);
      swift_bridgeObjectRelease(a3);
    }
    else
    {
      v24 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(a3);
    aBlock = (void **)v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v63);
    swift_bridgeObjectRelease(a3);
    *(_WORD *)(v22 + 22) = 2048;
    if ((unint64_t)a4 >> 62)
    {
      if (a4 < 0)
        v48 = a4;
      else
        v48 = a4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a4);
      v25 = _CocoaArrayWrapper.endIndex.getter(v48);
      swift_bridgeObjectRelease(a4);
    }
    else
    {
      v25 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease(a4);
    aBlock = (void **)v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v63);
    swift_bridgeObjectRelease(a4);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "*x* FMMapViewController: didUpdateAnnotations add: %ld remove: %ld refresh: %ld", (uint8_t *)v22, 0x20u);
    swift_slowDealloc(v22, -1, -1);

    v15 = v61;
  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
    swift_bridgeObjectRelease_n(a3, 2);
    swift_bridgeObjectRelease_n(a4, 2);
  }
  v26 = *(_QWORD *)(*(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator] + 56)
      + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v26, v66, 0, 0);
  sub_10004FC74(v26, (uint64_t)v15, type metadata accessor for FMSelectedSection);
  p_aBlock = (double *)&v5[OBJC_IVAR____TtC6FindMy19FMMapViewController_overrideLiveAnimationDuration];
  if (v5[OBJC_IVAR____TtC6FindMy19FMMapViewController_overrideLiveAnimationDuration + 8] == 1)
  {
    v29 = v53;
    v28 = v54;
    v30 = v55;
    (*(void (**)(char *, _QWORD, uint64_t))(v54 + 104))(v53, enum case for FMFConfigValue.liveAnimationInterval(_:), v55);
    v65 = 0x4000000000000000;
    p_aBlock = (double *)&aBlock;
    FMFGlobalConfig<A>(_:fallback:)(&aBlock, v29, &v65, &type metadata for Double);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v30);
  }
  if (*(_BYTE *)(v58 + 57))
    v31 = *p_aBlock;
  else
    v31 = 0.2;
  v32 = (void *)objc_opt_self(UIView);
  v33 = v59;
  sub_10004FC74((uint64_t)v15, v59, type metadata accessor for FMSelectedSection);
  v34 = *(unsigned __int8 *)(v57 + 80);
  v35 = (v34 + 48) & ~v34;
  v36 = (_QWORD *)swift_allocObject(&unk_10055CEB0, v35 + v12, v34 | 7);
  v36[2] = v5;
  v36[3] = a3;
  v36[4] = a2;
  v36[5] = a4;
  sub_100051774(v33, (uint64_t)v36 + v35, type metadata accessor for FMSelectedSection);
  v63[3] = sub_10003E10C;
  v64 = v36;
  aBlock = _NSConcreteStackBlock;
  v63[0] = 1107296256;
  v63[1] = sub_100037DF8;
  v63[2] = &unk_10055CEC8;
  v37 = _Block_copy(&aBlock);
  v38 = v64;
  swift_bridgeObjectRetain(a2);
  swift_bridgeObjectRetain(a3);
  swift_bridgeObjectRetain(a4);
  v5;
  swift_release(v38);
  objc_msgSend(v32, "animateWithDuration:delay:options:animations:completion:", 196614, v37, 0, v31, 0.0);
  _Block_release(v37);
  sub_10005A74C();
  if (v60)
  {
    if (a2 < 0)
      v44 = a2;
    else
      v44 = a2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a2);
    v45 = _CocoaArrayWrapper.endIndex.getter(v44);
    swift_bridgeObjectRelease(a2);
    if (v45)
      goto LABEL_23;
  }
  else if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_23;
  }
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v49 = a3;
    else
      v49 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v50 = _CocoaArrayWrapper.endIndex.getter(v49);
    swift_bridgeObjectRelease(a3);
    if (v50)
      goto LABEL_23;
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_23;
  }
  if ((unint64_t)a4 >> 62)
  {
    if (a4 < 0)
      v51 = a4;
    else
      v51 = a4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a4);
    v52 = _CocoaArrayWrapper.endIndex.getter(v51);
    swift_bridgeObjectRelease(a4);
    if (!v52)
      return sub_10004FCB8((uint64_t)v61, type metadata accessor for FMSelectedSection);
  }
  else if (!*(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    return sub_10004FCB8((uint64_t)v61, type metadata accessor for FMSelectedSection);
  }
LABEL_23:
  v40 = Logger.logObject.getter(v39);
  v41 = static os_log_type_t.default.getter(v40);
  if (os_log_type_enabled(v40, v41))
  {
    v42 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v42 = 0;
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "FMMapViewController: didUpdateAnnotations center camera", v42, 2u);
    swift_slowDealloc(v42, -1, -1);
  }

  sub_10002C688(1, 0, 0);
  return sub_10004FCB8((uint64_t)v61, type metadata accessor for FMSelectedSection);
}

uint64_t sub_10004FB38(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(char *, char *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  BOOL v21;
  uint64_t v23;

  v8 = a3(0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v14 = (char *)&v23 - v13;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15 == *(_QWORD *)(a2 + 16))
  {
    if (!v15 || a1 == a2)
    {
      v19 = 1;
    }
    else
    {
      v16 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      v17 = *(_QWORD *)(v12 + 72);
      v18 = v15 - 1;
      do
      {
        sub_10004FC74(a1 + v16, (uint64_t)v14, a3);
        sub_10004FC74(a2 + v16, (uint64_t)v11, a3);
        v19 = a4(v14, v11);
        sub_10004FCB8((uint64_t)v11, a3);
        sub_10004FCB8((uint64_t)v14, a3);
        v21 = v18-- != 0;
        if ((v19 & 1) == 0)
          break;
        v16 += v17;
      }
      while (v21);
    }
  }
  else
  {
    v19 = 0;
  }
  return v19 & 1;
}

uint64_t sub_10004FC74(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10004FCB8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for FMSelectedSection(uint64_t a1)
{
  uint64_t result;

  result = qword_1005DAAB8;
  if (!qword_1005DAAB8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMSelectedSection);
  return result;
}

uint64_t *sub_10004FD30(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;

  switch(swift_getEnumCaseMultiPayload(a2, a3))
  {
    case 0u:
      v6 = type metadata accessor for FMIPDevice(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = *(int *)(sub_100053F2C(&qword_1005DE9B0) + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = type metadata accessor for FMIPItem(0);
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        v12 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      v14 = a1;
      v15 = a3;
      v16 = 0;
      goto LABEL_21;
    case 1u:
      v13 = type metadata accessor for FMIPDevice(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      v14 = a1;
      v15 = a3;
      v16 = 1;
      goto LABEL_21;
    case 2u:
      v17 = type metadata accessor for FMFFriend(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
      v14 = a1;
      v15 = a3;
      v16 = 2;
      goto LABEL_21;
    case 3u:
      v18 = type metadata accessor for FMIPItem(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a1, a2, v18);
      v14 = a1;
      v15 = a3;
      v16 = 3;
      goto LABEL_21;
    case 4u:
      v19 = type metadata accessor for FMIPItem(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a1, a2, v19);
      v14 = a1;
      v15 = a3;
      v16 = 4;
      goto LABEL_21;
    case 5u:
      v20 = *a2;
      *a1 = *a2;
      v21 = a2 + 1;
      v22 = a2[2];
      swift_bridgeObjectRetain(v20);
      if (v22 >= 4)
      {
        a1[1] = *v21;
        a1[2] = v22;
        swift_bridgeObjectRetain(v22);
      }
      else
      {
        *(_OWORD *)(a1 + 1) = *(_OWORD *)v21;
      }
      v14 = a1;
      v15 = a3;
      v16 = 5;
      goto LABEL_21;
    case 6u:
      v23 = *a2;
      *a1 = *a2;
      v24 = a2 + 1;
      v25 = a2[2];
      swift_bridgeObjectRetain(v23);
      if (v25 >= 4)
      {
        a1[1] = *v24;
        a1[2] = v25;
        swift_bridgeObjectRetain(v25);
      }
      else
      {
        *(_OWORD *)(a1 + 1) = *(_OWORD *)v24;
      }
      v14 = a1;
      v15 = a3;
      v16 = 6;
      goto LABEL_21;
    case 7u:
      v26 = type metadata accessor for FMIPDevice(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(a1, a2, v26);
      v14 = a1;
      v15 = a3;
      v16 = 7;
      goto LABEL_21;
    case 8u:
      v27 = type metadata accessor for FMIPUnknownItem(0);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(a1, a2, v27);
      v14 = a1;
      v15 = a3;
      v16 = 8;
LABEL_21:
      swift_storeEnumTagMultiPayload(v14, v15, v16);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void sub_100050028(char *a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  char *v11;

  switch(swift_getEnumCaseMultiPayload(a1, a2))
  {
    case 0u:
      v5 = type metadata accessor for FMIPDevice(0);
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
      v6 = &a1[*(int *)(sub_100053F2C(&qword_1005DE9B0) + 48)];
      v7 = type metadata accessor for FMIPItem(0);
      v8 = *(_QWORD *)(v7 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      {
        v10 = *(void (**)(char *, uint64_t))(v8 + 8);
        v11 = v6;
        v9 = v7;
        goto LABEL_11;
      }
      return;
    case 1u:
    case 7u:
      v3 = type metadata accessor for FMIPDevice(0);
      goto LABEL_10;
    case 2u:
      v3 = type metadata accessor for FMFFriend(0);
      goto LABEL_10;
    case 3u:
    case 4u:
      v3 = type metadata accessor for FMIPItem(0);
      goto LABEL_10;
    case 5u:
    case 6u:
      swift_bridgeObjectRelease(*(_QWORD *)a1);
      v4 = *((_QWORD *)a1 + 2);
      if (v4 >= 4)
        swift_bridgeObjectRelease(v4);
      return;
    case 8u:
      v3 = type metadata accessor for FMIPUnknownItem(0);
LABEL_10:
      v9 = v3;
      v10 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v11 = a1;
LABEL_11:
      v10(v11, v9);
      break;
    default:
      return;
  }
}

uint64_t sub_10005014C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  int *v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  char v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  void *v132;
  void *v133;
  id v134;
  id v135;
  id v136;
  double v137;
  uint64_t v138;
  int *v139;
  double v140;
  int *v141;
  double v142;
  double v143;
  int *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  char v150;
  int *v151;
  uint64_t v152;
  _QWORD *v153;
  uint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD *v161;
  uint64_t v162;
  _QWORD *v163;
  uint64_t v164;
  uint64_t v165;
  int *v166;
  int v167;
  int v168;
  uint64_t v169;
  int v170;
  int v171;
  int v172;
  uint64_t v173;
  void *v174;
  void *v175;
  id v176;
  id v177;
  char v178;
  id v179;
  uint64_t v180;
  void *v181;
  void *v182;
  id v183;
  id v184;
  char v185;
  id v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  int *v215;

  v215 = (int *)type metadata accessor for FMPeopleCellViewModel(0);
  v4 = __chkstk_darwin(v215);
  v204 = (uint64_t)&v187 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v203 = (uint64_t)&v187 - v7;
  v8 = __chkstk_darwin(v6);
  v205 = (uint64_t)&v187 - v9;
  v10 = __chkstk_darwin(v8);
  v208 = (uint64_t)&v187 - v11;
  v12 = __chkstk_darwin(v10);
  v207 = (uint64_t)&v187 - v13;
  v14 = __chkstk_darwin(v12);
  v206 = (uint64_t)&v187 - v15;
  v16 = __chkstk_darwin(v14);
  v194 = (char *)&v187 - v17;
  v18 = __chkstk_darwin(v16);
  v193 = (char *)&v187 - v19;
  v20 = __chkstk_darwin(v18);
  v202 = (uint64_t)&v187 - v21;
  v22 = __chkstk_darwin(v20);
  v210 = (uint64_t)&v187 - v23;
  v24 = __chkstk_darwin(v22);
  v25 = __chkstk_darwin(v24);
  v26 = __chkstk_darwin(v25);
  v209 = (uint64_t)&v187 - v27;
  v28 = __chkstk_darwin(v26);
  v192 = (char *)&v187 - v29;
  v30 = __chkstk_darwin(v28);
  v211 = (uint64_t)&v187 - v31;
  v32 = __chkstk_darwin(v30);
  v212 = (uint64_t)&v187 - v33;
  v34 = __chkstk_darwin(v32);
  v35 = __chkstk_darwin(v34);
  v36 = __chkstk_darwin(v35);
  v199 = (uint64_t)&v187 - v37;
  v38 = __chkstk_darwin(v36);
  v198 = (uint64_t)&v187 - v39;
  v40 = __chkstk_darwin(v38);
  v197 = (uint64_t)&v187 - v41;
  v42 = __chkstk_darwin(v40);
  v196 = (uint64_t)&v187 - v43;
  v44 = __chkstk_darwin(v42);
  v213 = (char *)&v187 - v45;
  v46 = __chkstk_darwin(v44);
  v47 = __chkstk_darwin(v46);
  v191 = (uint64_t)&v187 - v48;
  v49 = __chkstk_darwin(v47);
  v50 = __chkstk_darwin(v49);
  v214 = (uint64_t)&v187 - v51;
  v52 = __chkstk_darwin(v50);
  v187 = (uint64_t)&v187 - v53;
  v54 = __chkstk_darwin(v52);
  v56 = (char *)&v187 - v55;
  v57 = __chkstk_darwin(v54);
  v59 = (char *)&v187 - v58;
  v60 = __chkstk_darwin(v57);
  v62 = (char *)&v187 - v61;
  v63 = __chkstk_darwin(v60);
  v65 = (char *)&v187 - v64;
  v66 = __chkstk_darwin(v63);
  v68 = (char *)&v187 - v67;
  __chkstk_darwin(v66);
  v70 = (char *)&v187 - v69;
  v71 = *a1;
  v72 = a1[1];
  v73 = *a2;
  v74 = a2[1];
  v75 = *a1 == *a2;
  v200 = v77;
  v201 = v76;
  v189 = v78;
  v188 = v79;
  v195 = v80;
  v190 = v81;
  if (v75 && v72 == v74)
  {
    sub_100051424((uint64_t)a1, (uint64_t)&v187 - v69);
    sub_100051424((uint64_t)a2, (uint64_t)v68);
  }
  else
  {
    v82 = _stringCompareWithSmolCheck(_:_:expecting:)(v71, v72, v73, v74, 0);
    sub_100051424((uint64_t)a1, (uint64_t)v70);
    sub_100051424((uint64_t)a2, (uint64_t)v68);
    if ((v82 & 1) == 0)
    {
      sub_1000517FC((uint64_t)v68);
      sub_1000517FC((uint64_t)v70);
      sub_100051424((uint64_t)a1, (uint64_t)v65);
      sub_100051424((uint64_t)a2, (uint64_t)v62);
      goto LABEL_11;
    }
  }
  v83 = v215;
  v84 = static Date.== infix(_:_:)(&v70[v215[5]], &v68[v215[5]]);
  sub_1000517FC((uint64_t)v68);
  sub_1000517FC((uint64_t)v70);
  sub_100051424((uint64_t)a1, (uint64_t)v65);
  sub_100051424((uint64_t)a2, (uint64_t)v62);
  if ((v84 & 1) == 0)
  {
LABEL_11:
    sub_1000517FC((uint64_t)v65);
    sub_1000517FC((uint64_t)v62);
    sub_100051424((uint64_t)a1, (uint64_t)v59);
    sub_100051424((uint64_t)a2, (uint64_t)v56);
    v90 = v194;
    v91 = v193;
    v92 = v214;
    goto LABEL_12;
  }
  v85 = v83[6];
  v86 = *(_QWORD *)&v65[v85];
  v87 = *(_QWORD *)&v65[v85 + 8];
  v88 = &v62[v85];
  v89 = *((_QWORD *)v88 + 1);
  if (v86 == *(_QWORD *)v88 && v87 == v89)
  {
    sub_1000517FC((uint64_t)v65);
    sub_1000517FC((uint64_t)v62);
    sub_100051424((uint64_t)a1, (uint64_t)v59);
    sub_100051424((uint64_t)a2, (uint64_t)v56);
    v90 = v194;
    v91 = v193;
    v92 = v214;
    goto LABEL_34;
  }
  v123 = _stringCompareWithSmolCheck(_:_:expecting:)(v86, v87, *(_QWORD *)v88, v89, 0);
  sub_1000517FC((uint64_t)v65);
  sub_1000517FC((uint64_t)v62);
  sub_100051424((uint64_t)a1, (uint64_t)v59);
  sub_100051424((uint64_t)a2, (uint64_t)v56);
  v90 = v194;
  v91 = v193;
  v92 = v214;
  if ((v123 & 1) == 0)
  {
LABEL_12:
    sub_1000517FC((uint64_t)v56);
    sub_1000517FC((uint64_t)v59);
    v93 = (uint64_t)v192;
LABEL_13:
    v94 = (uint64_t)v213;
    v95 = v187;
    sub_100051424((uint64_t)a1, v187);
    sub_100051424((uint64_t)a2, v92);
    goto LABEL_14;
  }
LABEL_34:
  v124 = v215[9];
  v125 = &v59[v124];
  v126 = *(_QWORD *)&v59[v124 + 8];
  v127 = &v56[v124];
  v128 = *((_QWORD *)v127 + 1);
  if (!v126)
  {
    swift_bridgeObjectRetain(*((_QWORD *)v127 + 1));
    sub_1000517FC((uint64_t)v56);
    sub_1000517FC((uint64_t)v59);
    v93 = (uint64_t)v192;
    if (!v128)
      goto LABEL_41;
    v129 = v128;
    goto LABEL_43;
  }
  v93 = (uint64_t)v192;
  if (!v128)
  {
    swift_bridgeObjectRetain(v126);
    sub_1000517FC((uint64_t)v56);
    sub_1000517FC((uint64_t)v59);
    v129 = v126;
LABEL_43:
    swift_bridgeObjectRelease(v129);
    goto LABEL_13;
  }
  if (*(_QWORD *)v125 == *(_QWORD *)v127 && v126 == v128)
  {
    swift_bridgeObjectRetain(v126);
    sub_1000517FC((uint64_t)v56);
    sub_1000517FC((uint64_t)v59);
    swift_bridgeObjectRelease(v126);
LABEL_41:
    v95 = v187;
    sub_100051424((uint64_t)a1, v187);
    sub_100051424((uint64_t)a2, v92);
    goto LABEL_45;
  }
  v130 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)v125, v126, *(_QWORD *)v127, *((_QWORD *)v127 + 1), 0);
  swift_bridgeObjectRetain(v126);
  sub_1000517FC((uint64_t)v56);
  sub_1000517FC((uint64_t)v59);
  swift_bridgeObjectRelease(v126);
  v95 = v187;
  sub_100051424((uint64_t)a1, v187);
  sub_100051424((uint64_t)a2, v92);
  v94 = (uint64_t)v213;
  if ((v130 & 1) == 0)
  {
LABEL_14:
    sub_1000517FC(v92);
    sub_1000517FC(v95);
    v96 = v208;
    v97 = v206;
LABEL_15:
    v98 = (uint64_t)v90;
    v99 = v190;
    sub_100051424((uint64_t)a1, v190);
    v100 = v191;
    sub_100051424((uint64_t)a2, v191);
LABEL_16:
    sub_1000517FC(v100);
    sub_1000517FC(v99);
    v101 = v195;
    sub_100051424((uint64_t)a1, v195);
    sub_100051424((uint64_t)a2, v94);
LABEL_17:
    sub_1000517FC(v94);
    sub_1000517FC(v101);
    v102 = v196;
    sub_100051424((uint64_t)a1, v196);
    v103 = v197;
    sub_100051424((uint64_t)a2, v197);
LABEL_18:
    sub_1000517FC(v103);
    sub_1000517FC(v102);
    v104 = v198;
    sub_100051424((uint64_t)a1, v198);
    v105 = v199;
    sub_100051424((uint64_t)a2, v199);
    v106 = v98;
LABEL_19:
    sub_1000517FC(v104);
    sub_1000517FC(v105);
    v107 = v188;
    sub_100051424((uint64_t)a1, v188);
    v108 = v189;
    sub_100051424((uint64_t)a2, v189);
    v109 = (uint64_t)v91;
    goto LABEL_20;
  }
LABEL_45:
  v131 = v215[10];
  v132 = *(void **)(v95 + v131);
  v133 = *(void **)(v92 + v131);
  if (!v132)
  {
    v136 = v133;
    sub_1000517FC(v92);
    sub_1000517FC(v95);
    if (!v133)
    {
      v98 = (uint64_t)v90;
      v99 = v190;
      sub_100051424((uint64_t)a1, v190);
      v100 = v191;
      sub_100051424((uint64_t)a2, v191);
      v96 = v208;
      v97 = v206;
      v94 = (uint64_t)v213;
      goto LABEL_51;
    }
    goto LABEL_58;
  }
  if (!v133)
  {
    v136 = v132;
    sub_1000517FC(v92);
    sub_1000517FC(v95);
LABEL_58:

    v96 = v208;
    v97 = v206;
    v94 = (uint64_t)v213;
    goto LABEL_15;
  }
  v98 = (uint64_t)v90;
  sub_100006C5C(0, (unint64_t *)&qword_1005DDF90, UIImage_ptr);
  v134 = v133;
  v135 = v132;
  LODWORD(v194) = static NSObject.== infix(_:_:)(v135, v134);
  sub_1000517FC(v214);
  sub_1000517FC(v95);

  v99 = v190;
  sub_100051424((uint64_t)a1, v190);
  v100 = v191;
  sub_100051424((uint64_t)a2, v191);
  v96 = v208;
  v97 = v206;
  v94 = (uint64_t)v213;
  if ((v194 & 1) == 0)
    goto LABEL_16;
LABEL_51:
  v137 = *(double *)(v99 + v215[13]);
  v138 = v99;
  v139 = v215;
  sub_1000517FC(v138);
  v140 = *(double *)(v100 + v139[13]);
  sub_1000517FC(v100);
  v101 = v195;
  sub_100051424((uint64_t)a1, v195);
  sub_100051424((uint64_t)a2, v94);
  if (v137 != v140)
    goto LABEL_17;
  LODWORD(v214) = *(unsigned __int8 *)(v101 + v139[15]);
  sub_1000517FC(v101);
  v141 = v139;
  LODWORD(v213) = *(unsigned __int8 *)(v94 + v139[15]);
  sub_1000517FC(v94);
  v102 = v196;
  sub_100051424((uint64_t)a1, v196);
  v103 = v197;
  sub_100051424((uint64_t)a2, v197);
  if ((_DWORD)v214 != (_DWORD)v213)
    goto LABEL_18;
  v142 = *(double *)(v102 + v141[17]);
  sub_1000517FC(v102);
  v143 = *(double *)(v103 + v141[17]);
  sub_1000517FC(v103);
  v104 = v198;
  sub_100051424((uint64_t)a1, v198);
  v105 = v199;
  sub_100051424((uint64_t)a2, v199);
  v144 = v141;
  v106 = v98;
  if (v142 != v143)
    goto LABEL_19;
  v145 = v144[18];
  v146 = *(_QWORD *)(v104 + v145);
  v147 = *(_QWORD *)(v104 + v145 + 8);
  v148 = (_QWORD *)(v105 + v145);
  v149 = v148[1];
  v109 = (uint64_t)v91;
  if (v146 == *v148 && v147 == v149)
  {
    sub_1000517FC(v104);
    sub_1000517FC(v105);
    v107 = v188;
    sub_100051424((uint64_t)a1, v188);
    v108 = v189;
    sub_100051424((uint64_t)a2, v189);
    goto LABEL_60;
  }
  v150 = _stringCompareWithSmolCheck(_:_:expecting:)(v146, v147, *v148, v149, 0);
  sub_1000517FC(v104);
  sub_1000517FC(v105);
  v107 = v188;
  sub_100051424((uint64_t)a1, v188);
  v108 = v189;
  sub_100051424((uint64_t)a2, v189);
  if ((v150 & 1) == 0)
  {
LABEL_20:
    sub_1000517FC(v108);
    sub_1000517FC(v107);
    v110 = v212;
    sub_100051424((uint64_t)a1, v212);
    v111 = v211;
    sub_100051424((uint64_t)a2, v211);
LABEL_21:
    sub_1000517FC(v111);
    sub_1000517FC(v110);
LABEL_22:
    v112 = v210;
    sub_100051424((uint64_t)a1, v93);
    v113 = v209;
    sub_100051424((uint64_t)a2, v209);
    goto LABEL_23;
  }
LABEL_60:
  v151 = v215;
  LODWORD(v214) = *(unsigned __int8 *)(v107 + v215[19]);
  sub_1000517FC(v107);
  LODWORD(v213) = *(unsigned __int8 *)(v108 + v151[19]);
  sub_1000517FC(v108);
  v110 = v212;
  sub_100051424((uint64_t)a1, v212);
  v111 = v211;
  sub_100051424((uint64_t)a2, v211);
  if ((_DWORD)v214 != (_DWORD)v213)
    goto LABEL_21;
  v152 = v151[24];
  v153 = (_QWORD *)(v110 + v152);
  v154 = v110;
  v155 = *(_QWORD *)(v110 + v152 + 8);
  v156 = (_QWORD *)(v111 + v152);
  v157 = v111;
  v158 = v156[1];
  if (!v155)
  {
    v159 = v154;
    swift_bridgeObjectRetain(v156[1]);
    sub_1000517FC(v157);
    sub_1000517FC(v159);
    if (!v158)
      goto LABEL_68;
    swift_bridgeObjectRelease(v158);
    goto LABEL_22;
  }
  if (!v158)
  {
    swift_bridgeObjectRetain(v155);
    sub_1000517FC(v211);
    sub_1000517FC(v212);
    swift_bridgeObjectRelease(v155);
    goto LABEL_22;
  }
  if (*v153 == *v156 && v155 == v158)
  {
    swift_bridgeObjectRetain(v155);
    sub_1000517FC(v211);
    sub_1000517FC(v212);
    swift_bridgeObjectRelease(v155);
LABEL_68:
    sub_100051424((uint64_t)a1, v93);
    v113 = v209;
    sub_100051424((uint64_t)a2, v209);
    goto LABEL_71;
  }
  LODWORD(v214) = _stringCompareWithSmolCheck(_:_:expecting:)(*v153, v155, *v156, v156[1], 0);
  swift_bridgeObjectRetain(v155);
  sub_1000517FC(v211);
  sub_1000517FC(v212);
  swift_bridgeObjectRelease(v155);
  sub_100051424((uint64_t)a1, v93);
  v113 = v209;
  sub_100051424((uint64_t)a2, v209);
  v112 = v210;
  if ((v214 & 1) == 0)
  {
LABEL_23:
    sub_1000517FC(v113);
    sub_1000517FC(v93);
LABEL_24:
    v114 = v200;
    sub_100051424((uint64_t)a1, v200);
    v115 = v201;
    sub_100051424((uint64_t)a2, v201);
    goto LABEL_25;
  }
LABEL_71:
  v160 = v215[25];
  v161 = (_QWORD *)(v93 + v160);
  v162 = *(_QWORD *)(v93 + v160 + 8);
  v163 = (_QWORD *)(v113 + v160);
  v164 = v163[1];
  if (!v162)
  {
    swift_bridgeObjectRetain(v163[1]);
    sub_1000517FC(v113);
    sub_1000517FC(v93);
    if (!v164)
      goto LABEL_78;
    v165 = v164;
    goto LABEL_80;
  }
  if (!v164)
  {
    swift_bridgeObjectRetain(v162);
    sub_1000517FC(v209);
    sub_1000517FC(v93);
    v165 = v162;
LABEL_80:
    swift_bridgeObjectRelease(v165);
    v112 = v210;
    goto LABEL_24;
  }
  if (*v161 == *v163 && v162 == v164)
  {
    swift_bridgeObjectRetain(v162);
    sub_1000517FC(v209);
    sub_1000517FC(v93);
    swift_bridgeObjectRelease(v162);
LABEL_78:
    v114 = v200;
    sub_100051424((uint64_t)a1, v200);
    v115 = v201;
    sub_100051424((uint64_t)a2, v201);
    goto LABEL_82;
  }
  LODWORD(v214) = _stringCompareWithSmolCheck(_:_:expecting:)(*v161, v162, *v163, v163[1], 0);
  swift_bridgeObjectRetain(v162);
  sub_1000517FC(v209);
  sub_1000517FC(v93);
  swift_bridgeObjectRelease(v162);
  v114 = v200;
  sub_100051424((uint64_t)a1, v200);
  v115 = v201;
  sub_100051424((uint64_t)a2, v201);
  v112 = v210;
  if ((v214 & 1) != 0)
  {
LABEL_82:
    v166 = v215;
    LODWORD(v214) = *(unsigned __int8 *)(v114 + v215[7]);
    sub_1000517FC(v114);
    v167 = *(unsigned __int8 *)(v115 + v166[7]);
    sub_1000517FC(v115);
    sub_100051424((uint64_t)a1, v210);
    v116 = v202;
    sub_100051424((uint64_t)a2, v202);
    v75 = (_DWORD)v214 == v167;
    v112 = v210;
    if (!v75)
      goto LABEL_26;
    v168 = *(unsigned __int8 *)(v210 + v166[26]);
    sub_1000517FC(v210);
    v169 = v116;
    v170 = *(unsigned __int8 *)(v116 + v166[26]);
    sub_1000517FC(v169);
    sub_100051424((uint64_t)a1, v109);
    sub_100051424((uint64_t)a2, v106);
    v117 = v207;
    if (v168 != v170)
      goto LABEL_27;
    v171 = *(unsigned __int8 *)(v109 + v166[23]);
    sub_1000517FC(v109);
    v172 = *(unsigned __int8 *)(v106 + v166[23]);
    sub_1000517FC(v106);
    sub_100051424((uint64_t)a1, v97);
    sub_100051424((uint64_t)a2, v117);
    if (v171 != v172)
      goto LABEL_28;
    v173 = v166[11];
    v174 = *(void **)(v97 + v173);
    v175 = *(void **)(v117 + v173);
    if (v174)
    {
      if (v175)
      {
        sub_100006C5C(0, (unint64_t *)&qword_1005DDF90, UIImage_ptr);
        v176 = v175;
        v177 = v174;
        v178 = static NSObject.== infix(_:_:)(v177, v176);
        sub_1000517FC(v207);
        sub_1000517FC(v206);

        v96 = v208;
        sub_100051424((uint64_t)a1, v208);
        v118 = v205;
        sub_100051424((uint64_t)a2, v205);
        if ((v178 & 1) == 0)
          goto LABEL_30;
LABEL_92:
        v180 = v215[12];
        v181 = *(void **)(v96 + v180);
        v182 = *(void **)(v118 + v180);
        if (v181)
        {
          if (v182)
          {
            sub_100006C5C(0, (unint64_t *)&qword_1005DB750, UIColor_ptr);
            v183 = v182;
            v184 = v181;
            v185 = static NSObject.== infix(_:_:)(v184, v183);
            sub_1000517FC(v205);
            sub_1000517FC(v208);

            sub_100051424((uint64_t)a1, v203);
            sub_100051424((uint64_t)a2, v204);
            if ((v185 & 1) == 0)
            {
              v121 = 0;
              v119 = v203;
              v120 = v204;
              goto LABEL_32;
            }
LABEL_100:
            v119 = v203;
            v120 = v204;
            v121 = static PeopleListPersonRow.State.== infix(_:_:)(v203 + v215[32], v204 + v215[32]);
            goto LABEL_32;
          }
          v186 = v181;
          sub_1000517FC(v205);
          sub_1000517FC(v208);
        }
        else
        {
          v186 = v182;
          sub_1000517FC(v205);
          sub_1000517FC(v208);
          if (!v182)
          {
            sub_100051424((uint64_t)a1, v203);
            sub_100051424((uint64_t)a2, v204);
            goto LABEL_100;
          }
        }

        goto LABEL_31;
      }
      v179 = v174;
      sub_1000517FC(v207);
      sub_1000517FC(v206);
    }
    else
    {
      v179 = v175;
      sub_1000517FC(v207);
      sub_1000517FC(v206);
      if (!v175)
      {
        v96 = v208;
        sub_100051424((uint64_t)a1, v208);
        v118 = v205;
        sub_100051424((uint64_t)a2, v205);
        goto LABEL_92;
      }
    }

    v96 = v208;
    goto LABEL_29;
  }
LABEL_25:
  sub_1000517FC(v115);
  sub_1000517FC(v114);
  sub_100051424((uint64_t)a1, v112);
  v116 = v202;
  sub_100051424((uint64_t)a2, v202);
LABEL_26:
  sub_1000517FC(v116);
  sub_1000517FC(v112);
  sub_100051424((uint64_t)a1, v109);
  sub_100051424((uint64_t)a2, v106);
  v117 = v207;
LABEL_27:
  sub_1000517FC(v106);
  sub_1000517FC(v109);
  sub_100051424((uint64_t)a1, v97);
  sub_100051424((uint64_t)a2, v117);
LABEL_28:
  sub_1000517FC(v117);
  sub_1000517FC(v97);
LABEL_29:
  v118 = v205;
  sub_100051424((uint64_t)a1, v96);
  sub_100051424((uint64_t)a2, v118);
LABEL_30:
  sub_1000517FC(v118);
  sub_1000517FC(v96);
LABEL_31:
  v119 = v203;
  sub_100051424((uint64_t)a1, v203);
  v120 = v204;
  sub_100051424((uint64_t)a2, v204);
  v121 = 0;
LABEL_32:
  sub_1000517FC(v120);
  sub_1000517FC(v119);
  return v121 & 1;
}

uint64_t sub_100051424(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMPeopleCellViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100051468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  BOOL v23;
  uint64_t v24;
  double v25;
  double v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  int *v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  Swift::String v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BOOL4 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int *v55;
  uint64_t *v56;
  uint64_t v57;
  _QWORD v58[2];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v56 = a4;
  v50 = a1;
  v55 = (int *)type metadata accessor for FMPeopleCellViewModel(0);
  v6 = __chkstk_darwin(v55);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (uint64_t *)((char *)&v48 - v10);
  result = __chkstk_darwin(v9);
  v15 = (uint64_t *)((char *)&v48 - v14);
  v54 = a3;
  v49 = a2;
  if (a3 != a2)
  {
    v16 = *(_QWORD *)(v13 + 72);
    v61 = v16 * (v54 - 1);
    v53 = v16;
    v57 = v16 * v54;
    v51 = v8;
LABEL_5:
    v17 = 0;
    v18 = v50;
    while (1)
    {
      v19 = *v56;
      sub_10004FC74(v57 + v17 + *v56, (uint64_t)v15, type metadata accessor for FMPeopleCellViewModel);
      sub_10004FC74(v61 + v17 + v19, (uint64_t)v11, type metadata accessor for FMPeopleCellViewModel);
      v20 = v55[17];
      v21 = *(double *)((char *)v15 + v20);
      v22 = *(double *)((char *)v11 + v20);
      v23 = v21 < v22;
      if (v21 == v22
        && (v24 = v55[16],
            v25 = *(double *)((char *)v15 + v24),
            v26 = *(double *)((char *)v11 + v24),
            v23 = v25 < v26,
            v25 == v26))
      {
        v27 = (uint64_t *)((char *)v15 + v55[6]);
        v28 = v27[1];
        v29 = *v15;
        v30 = (void *)v15[1];
        v59 = *v27;
        v60 = v28;
        v31 = v55;
        swift_bridgeObjectRetain(v28);
        v32._countAndFlagsBits = v29;
        v32._object = v30;
        String.append(_:)(v32);
        v33 = v60;
        v52 = v59;
        v34 = (uint64_t *)((char *)v11 + v31[6]);
        v35 = v34[1];
        v36 = *v11;
        v37 = (void *)v11[1];
        v59 = *v34;
        v60 = v35;
        swift_bridgeObjectRetain(v35);
        v38._countAndFlagsBits = v36;
        v38._object = v37;
        String.append(_:)(v38);
        v39 = v59;
        v40 = v60;
        v59 = v52;
        v60 = v33;
        v58[0] = v39;
        v58[1] = v40;
        v41 = sub_1000517B8();
        v42 = StringProtocol.caseInsensitiveCompare<A>(_:)(v58, &type metadata for String, &type metadata for String, v41, v41);
        swift_bridgeObjectRelease(v33);
        v43 = v40;
        v8 = v51;
        swift_bridgeObjectRelease(v43);
        v44 = v42 == -1;
      }
      else
      {
        v44 = v23;
      }
      sub_10004FCB8((uint64_t)v11, type metadata accessor for FMPeopleCellViewModel);
      result = sub_10004FCB8((uint64_t)v15, type metadata accessor for FMPeopleCellViewModel);
      if (!v44)
      {
LABEL_4:
        v61 += v53;
        v57 += v53;
        if (++v54 == v49)
          return result;
        goto LABEL_5;
      }
      v45 = *v56;
      if (!*v56)
        break;
      v46 = v45 + v57 + v17;
      v47 = v45 + v61 + v17;
      sub_100051774(v46, (uint64_t)v8, type metadata accessor for FMPeopleCellViewModel);
      swift_arrayInitWithTakeFrontToBack(v46, v47);
      result = sub_100051774((uint64_t)v8, v47, type metadata accessor for FMPeopleCellViewModel);
      v17 -= v53;
      if (v54 == ++v18)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100051774(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1000517B8()
{
  unint64_t result;

  result = qword_1005D3490;
  if (!qword_1005D3490)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1005D3490);
  }
  return result;
}

uint64_t sub_1000517FC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FMPeopleCellViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for FMPeopleCellViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D46A8;
  if (!qword_1005D46A8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMPeopleCellViewModel);
  return result;
}

uint64_t sub_100051874(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 8));
  v4 = a1 + a2[5];
  v5 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[6] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[8] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[9] + 8));

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[18] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[24] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[25] + 8));
  v6 = a1 + a2[32];
  v7 = type metadata accessor for PeopleListPersonRow.State(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

_QWORD *sub_10005196C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  id v53;
  id v54;
  id v55;
  void *v57;
  void *v58;
  void *v59;
  uint64_t v60;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Date(0);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain(v6);
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v12);
  v15 = (_QWORD *)((char *)a2 + v12);
  v60 = v15[1];
  *v14 = *v15;
  v14[1] = v60;
  *((_BYTE *)a1 + v13) = *((_BYTE *)a2 + v13);
  v16 = a3[8];
  v17 = a3[9];
  v18 = (_QWORD *)((char *)a1 + v16);
  v19 = (_QWORD *)((char *)a2 + v16);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = (_QWORD *)((char *)a1 + v17);
  v22 = (_QWORD *)((char *)a2 + v17);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = a3[10];
  v25 = a3[11];
  v57 = *(void **)((char *)a2 + v24);
  *(_QWORD *)((char *)a1 + v24) = v57;
  v59 = *(void **)((char *)a2 + v25);
  *(_QWORD *)((char *)a1 + v25) = v59;
  v26 = a3[12];
  v27 = a3[13];
  v58 = *(void **)((char *)a2 + v26);
  *(_QWORD *)((char *)a1 + v26) = v58;
  *(_QWORD *)((char *)a1 + v27) = *(_QWORD *)((char *)a2 + v27);
  v28 = a3[15];
  *((_BYTE *)a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  *((_BYTE *)a1 + v28) = *((_BYTE *)a2 + v28);
  v29 = a3[17];
  *(_QWORD *)((char *)a1 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
  *(_QWORD *)((char *)a1 + v29) = *(_QWORD *)((char *)a2 + v29);
  v30 = a3[18];
  v31 = a3[19];
  v32 = (_QWORD *)((char *)a1 + v30);
  v33 = (_QWORD *)((char *)a2 + v30);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  *((_BYTE *)a1 + v31) = *((_BYTE *)a2 + v31);
  v35 = a3[21];
  *((_BYTE *)a1 + a3[20]) = *((_BYTE *)a2 + a3[20]);
  *((_BYTE *)a1 + v35) = *((_BYTE *)a2 + v35);
  v36 = a3[23];
  *((_BYTE *)a1 + a3[22]) = *((_BYTE *)a2 + a3[22]);
  *((_BYTE *)a1 + v36) = *((_BYTE *)a2 + v36);
  v37 = a3[24];
  v38 = a3[25];
  v39 = (_QWORD *)((char *)a1 + v37);
  v40 = (_QWORD *)((char *)a2 + v37);
  v41 = v40[1];
  *v39 = *v40;
  v39[1] = v41;
  v42 = (_QWORD *)((char *)a1 + v38);
  v43 = (_QWORD *)((char *)a2 + v38);
  v44 = v43[1];
  *v42 = *v43;
  v42[1] = v44;
  v45 = a3[27];
  *((_BYTE *)a1 + a3[26]) = *((_BYTE *)a2 + a3[26]);
  *((_BYTE *)a1 + v45) = *((_BYTE *)a2 + v45);
  v46 = a3[29];
  *((_BYTE *)a1 + a3[28]) = *((_BYTE *)a2 + a3[28]);
  *((_BYTE *)a1 + v46) = *((_BYTE *)a2 + v46);
  v47 = a3[31];
  *((_BYTE *)a1 + a3[30]) = *((_BYTE *)a2 + a3[30]);
  v48 = a3[32];
  v49 = (char *)a1 + v48;
  v50 = (char *)a2 + v48;
  *((_BYTE *)a1 + v47) = *((_BYTE *)a2 + v47);
  v51 = type metadata accessor for PeopleListPersonRow.State(0);
  v52 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16);
  swift_bridgeObjectRetain(v60);
  swift_bridgeObjectRetain(v20);
  swift_bridgeObjectRetain(v23);
  v53 = v57;
  v54 = v59;
  v55 = v58;
  swift_bridgeObjectRetain(v34);
  swift_bridgeObjectRetain(v41);
  swift_bridgeObjectRetain(v44);
  v52(v49, v50, v51);
  return a1;
}

uint64_t sub_100051BB8(uint64_t a1, int a2, int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  Swift::String v26;
  Swift::String v27;
  uint64_t countAndFlagsBits;
  unint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  unint64_t v35;

  v32 = a2;
  v33 = a3;
  v4 = type metadata accessor for FMFFriend(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FMFRelationshipType(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v31 - v14;
  v16 = FMFFriend.relationshipType.getter(v13);
  static FMFRelationshipType.willFollowMyLocation.getter(v16);
  v17 = sub_100008000((unint64_t *)&unk_1005D9C20, (uint64_t (*)(uint64_t))&type metadata accessor for FMFRelationshipType, (uint64_t)&protocol conformance descriptor for FMFRelationshipType);
  v18 = dispatch thunk of SetAlgebra.isSuperset(of:)(v12, v8, v17);
  v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v12, v8);
  v20 = ((uint64_t (*)(char *, uint64_t))v19)(v15, v8);
  if ((v18 & 1) != 0)
  {
    v34 = 0;
    v35 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v35);
    v21 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v22 = 0xD00000000000001BLL;
    v23 = 0xD00000000000002DLL;
    v30 = 0x80000001004A9630;
    v24 = 0x80000001004A9610;
  }
  else
  {
    v25 = FMFFriend.optedNotToShare.getter(v20);
    if (v25 == 2 || (v25 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
LABEL_9:
      countAndFlagsBits = sub_1000526A4((uint64_t)v7, v32 & 1, v33 & 1);
      goto LABEL_10;
    }
    v34 = 0;
    v35 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v35);
    v21 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v23 = 0xD000000000000028;
    v30 = 0x80000001004A95E0;
    v24 = 0x80000001004A95C0;
    v22 = 0xD000000000000016;
  }
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  v27 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v22, (Swift::String_optional)0, (NSBundle)v21, v26, *(Swift::String *)&v23);
  countAndFlagsBits = v27._countAndFlagsBits;

  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  if (!v27._object)
    goto LABEL_9;
LABEL_10:
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return countAndFlagsBits;
}

uint64_t sub_100051E90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;

  v2 = type metadata accessor for FMFFriend(0);
  v38 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v37 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FMFRelationshipType(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v35 - v9;
  v11 = sub_100053F2C((uint64_t *)&unk_1005D3350);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  FMFFriend.location.getter(v12);
  v15 = type metadata accessor for FMFLocation(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15);
  if ((_DWORD)v17 == 1)
  {
    sub_1000051EC((uint64_t)v14, (uint64_t *)&unk_1005D3350);
  }
  else
  {
    v18 = (void *)FMFLocation.location.getter(v17);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v15);
    if (v18)

  }
  v19 = FMFFriend.favoriteOrder.getter();
  v20 = v5;
  v21 = v38;
  if (v19 == 0x7FFFFFFFFFFFFFFFLL)
  {
    v22 = FMFFriend.relationshipType.getter(0x7FFFFFFFFFFFFFFFLL);
    static FMFRelationshipType.followsMyLocation.getter(v22);
    v23 = sub_100008000((unint64_t *)&unk_1005D9C20, (uint64_t (*)(uint64_t))&type metadata accessor for FMFRelationshipType, (uint64_t)&protocol conformance descriptor for FMFRelationshipType);
    v24 = dispatch thunk of SetAlgebra.isSuperset(of:)(v8, v4, v23);
    v36 = v20;
    v25 = *(void (**)(char *, uint64_t))(v20 + 8);
    v25(v8, v4);
    v25(v10, v4);
    v26 = v37;
    v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 16))(v37, a1, v2);
    if ((v24 & 1) != 0)
    {
      v28 = FMFFriend.relationshipType.getter(v27);
      static FMFRelationshipType.sharesLocationWithMe.getter(v28);
      dispatch thunk of SetAlgebra.isSuperset(of:)(v8, v4, v23);
      v25(v8, v4);
      v25(v10, v4);
    }
    v29 = (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v26, v2);
    v20 = v36;
  }
  else
  {
    v29 = FMFFriend.favoriteOrder.getter();
  }
  v30 = FMFFriend.relationshipType.getter(v29);
  static FMFRelationshipType.willFollowMyLocation.getter(v30);
  v31 = sub_100008000((unint64_t *)&unk_1005D9C20, (uint64_t (*)(uint64_t))&type metadata accessor for FMFRelationshipType, (uint64_t)&protocol conformance descriptor for FMFRelationshipType);
  dispatch thunk of SetAlgebra.isSuperset(of:)(v8, v4, v31);
  v32 = *(void (**)(char *, uint64_t))(v20 + 8);
  v32(v8, v4);
  v33 = ((uint64_t (*)(char *, uint64_t))v32)(v10, v4);
  return FMFFriend.optedNotToShare.getter(v33);
}

uint64_t sub_1000521F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  uint64_t countAndFlagsBits;
  void *object;
  id v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  char v19;
  id v20;
  Swift::String v21;
  Swift::String v22;
  uint64_t v24;
  unint64_t v25;
  Swift::String v26;
  Swift::String v27;

  v0 = type metadata accessor for FMFRelationshipType(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v2);
  v7 = (char *)&v24 - v6;
  v8 = FMFFriend.relationshipType.getter(v5);
  static FMFRelationshipType.willFollowMyLocation.getter(v8);
  v9 = sub_100008000((unint64_t *)&unk_1005D9C20, (uint64_t (*)(uint64_t))&type metadata accessor for FMFRelationshipType, (uint64_t)&protocol conformance descriptor for FMFRelationshipType);
  v10 = dispatch thunk of SetAlgebra.isSuperset(of:)(v4, v0, v9);
  v11 = *(void (**)(char *, uint64_t))(v1 + 8);
  v11(v4, v0);
  v12 = ((uint64_t (*)(char *, uint64_t))v11)(v7, v0);
  countAndFlagsBits = 0;
  object = 0;
  if ((v10 & 1) != 0)
  {
    v24 = 0;
    v25 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v25);
    v15 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v26._countAndFlagsBits = 0xD00000000000002BLL;
    v26._object = (void *)0x80000001004A92E0;
    v16._object = (void *)0x80000001004A92C0;
    v16._countAndFlagsBits = 0xD000000000000019;
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v26);
    countAndFlagsBits = v18._countAndFlagsBits;
    object = v18._object;

  }
  v19 = FMFFriend.optedNotToShare.getter(v12);
  if (v19 != 2 && (v19 & 1) == 0)
  {
    swift_bridgeObjectRelease(object);
    v24 = 0;
    v25 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v25);
    v20 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v27._countAndFlagsBits = 0xD00000000000002BLL;
    v27._object = (void *)0x80000001004A9330;
    v21._object = (void *)0x80000001004A9310;
    v21._countAndFlagsBits = 0xD000000000000019;
    v22._countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)v20, v22, v27)._countAndFlagsBits;

  }
  return countAndFlagsBits;
}

uint64_t sub_10005244C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  uint64_t countAndFlagsBits;
  void *object;
  id v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  char v19;
  id v20;
  Swift::String v21;
  Swift::String v22;
  uint64_t v24;
  unint64_t v25;
  Swift::String v26;
  Swift::String v27;

  v0 = type metadata accessor for FMFRelationshipType(0);
  v1 = *(_QWORD *)(v0 - 8);
  v2 = __chkstk_darwin(v0);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v2);
  v7 = (char *)&v24 - v6;
  v8 = FMFFriend.relationshipType.getter(v5);
  static FMFRelationshipType.willFollowMyLocation.getter(v8);
  v9 = sub_100008000((unint64_t *)&unk_1005D9C20, (uint64_t (*)(uint64_t))&type metadata accessor for FMFRelationshipType, (uint64_t)&protocol conformance descriptor for FMFRelationshipType);
  v10 = dispatch thunk of SetAlgebra.isSuperset(of:)(v4, v0, v9);
  v11 = *(void (**)(char *, uint64_t))(v1 + 8);
  v11(v4, v0);
  v12 = ((uint64_t (*)(char *, uint64_t))v11)(v7, v0);
  countAndFlagsBits = 0;
  object = 0;
  if ((v10 & 1) != 0)
  {
    v24 = 0;
    v25 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v25);
    v15 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v16._countAndFlagsBits = 0xD000000000000018;
    v26._countAndFlagsBits = 0xD00000000000002ALL;
    v26._object = (void *)0x80000001004A96D0;
    v16._object = (void *)0x80000001004A96B0;
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v26);
    countAndFlagsBits = v18._countAndFlagsBits;
    object = v18._object;

  }
  v19 = FMFFriend.optedNotToShare.getter(v12);
  if (v19 != 2 && (v19 & 1) == 0)
  {
    swift_bridgeObjectRelease(object);
    v24 = 0;
    v25 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v25);
    v20 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v27._countAndFlagsBits = 0xD000000000000029;
    v27._object = (void *)0x80000001004A9680;
    v21._object = (void *)0x80000001004A9660;
    v21._countAndFlagsBits = 0xD000000000000017;
    v22._countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)v20, v22, v27)._countAndFlagsBits;

  }
  return countAndFlagsBits;
}

uint64_t sub_1000526A4(uint64_t a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  unint64_t v41;
  unint64_t v42;
  const char *v43;
  char *v44;
  uint64_t v45;
  uint64_t countAndFlagsBits;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  id v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  id v59;
  Swift::String v60;
  Swift::String v61;
  Swift::String v62;
  uint64_t v63;
  void *object;
  unint64_t v65;
  Swift::String v66;
  uint64_t v68;
  void *v69;
  id v70;
  Swift::String v71;
  Swift::String v72;
  Swift::String v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  __n128 v77;
  unint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  int v89;
  int v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  Swift::String v96;
  Swift::String v97;

  v89 = a2;
  v90 = a3;
  v3 = type metadata accessor for FormatStyleCapitalizationContext(0);
  v81 = *(_QWORD *)(v3 - 8);
  v82 = v3;
  __chkstk_darwin(v3);
  v80 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  __chkstk_darwin(v5);
  v85 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Date(0);
  v86 = *(_QWORD *)(v7 - 8);
  v87 = v7;
  v8 = __chkstk_darwin(v7);
  v84 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v83 = (char *)&v79 - v10;
  v11 = sub_100053F2C((uint64_t *)&unk_1005D3350);
  v12 = __chkstk_darwin(v11);
  v88 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v15 = (char *)&v79 - v14;
  v16 = type metadata accessor for FMFLocation(0);
  v92 = *(_QWORD *)(v16 - 8);
  v93 = v16;
  __chkstk_darwin(v16);
  v91 = (char *)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for FMFRelationshipType(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v20);
  v25 = (char *)&v79 - v24;
  v26 = FMFFriend.relationshipType.getter(v23);
  static FMFRelationshipType.sharesLocationWithMe.getter(v26);
  v27 = sub_100008000((unint64_t *)&unk_1005D9C20, (uint64_t (*)(uint64_t))&type metadata accessor for FMFRelationshipType, (uint64_t)&protocol conformance descriptor for FMFRelationshipType);
  v28 = dispatch thunk of SetAlgebra.isSuperset(of:)(v22, v18, v27);
  v29 = *(void (**)(char *, uint64_t))(v19 + 8);
  v29(v22, v18);
  v30 = ((uint64_t (*)(char *, uint64_t))v29)(v25, v18);
  v31 = FMFFriend.relationshipType.getter(v30);
  static FMFRelationshipType.followsMyLocation.getter(v31);
  v32 = dispatch thunk of SetAlgebra.isSuperset(of:)(v22, v18, v27);
  v29(v22, v18);
  v33 = ((uint64_t (*)(char *, uint64_t))v29)(v25, v18);
  v34 = FMFFriend.relationshipType.getter(v33);
  static FMFRelationshipType.willShareLocationWithMe.getter(v34);
  v35 = dispatch thunk of SetAlgebra.isSuperset(of:)(v22, v18, v27);
  v29(v22, v18);
  v36 = ((uint64_t (*)(char *, uint64_t))v29)(v25, v18);
  if ((v28 & 1) == 0)
  {
    if ((v32 & 1) != 0)
    {
      if ((v89 & 1) != 0)
      {
        if ((v35 & 1) == 0)
        {
          v94 = 0;
          v95 = 0xE000000000000000;
          _StringGuts.grow(_:)(20);
          swift_bridgeObjectRelease(v95);
          v40 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
          v42 = 0xD00000000000002CLL;
          v78 = 0x80000001004A9480;
          v65 = 0x80000001004A9460;
          v41 = 0xD00000000000001ALL;
LABEL_24:
          v66._countAndFlagsBits = 0;
          v66._object = (void *)0xE000000000000000;
          countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v41, (Swift::String_optional)0, (NSBundle)v40, v66, *(Swift::String *)&v42)._countAndFlagsBits;

          return countAndFlagsBits;
        }
        v94 = 0;
        v95 = 0xE000000000000000;
        _StringGuts.grow(_:)(20);
        swift_bridgeObjectRelease(v95);
        v40 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v41 = 0xD000000000000026;
        v42 = 0xD000000000000038;
        v78 = 0x80000001004A94E0;
        v43 = "PEOPLE_LIST_FOLLOWER_LABEL_INVITE_SENT";
      }
      else
      {
        v94 = 0;
        v95 = 0xE000000000000000;
        _StringGuts.grow(_:)(20);
        swift_bridgeObjectRelease(v95);
        v40 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v41 = 0xD000000000000026;
        v42 = 0xD000000000000038;
        v78 = 0x80000001004A9420;
        v43 = "PEOPLE_LIST_FOLLOWER_LABEL_NOT_SHARING";
      }
    }
    else
    {
      if ((v35 & 1) == 0)
        return 0;
      v94 = 0;
      v95 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(v95);
      v40 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v41 = 0xD000000000000022;
      v42 = 0xD000000000000034;
      v78 = 0x80000001004A93B0;
      v43 = "PEOPLE_LIST_FUTURE_FOLLOWING_LABEL";
    }
LABEL_23:
    v65 = (unint64_t)(v43 - 32) | 0x8000000000000000;
    goto LABEL_24;
  }
  FMFFriend.location.getter(v36);
  v38 = v92;
  v37 = v93;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48))(v15, 1, v93) == 1)
  {
    v39 = sub_1000051EC((uint64_t)v15, (uint64_t *)&unk_1005D3350);
    if ((v90 & 1) != 0)
    {
      v94 = 0;
      v95 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(v95);
      v40 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v41 = 0xD00000000000001CLL;
      v42 = 0xD00000000000002ELL;
      v78 = 0x80000001004A9590;
      v43 = "LOCATION_SUBSCRIPTION_PAUSED";
    }
    else if ((FMFFriend.isWaitingForShallowLocation.getter(v39) & 1) != 0)
    {
      v94 = 0;
      v95 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(v95);
      v40 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v41 = 0xD000000000000011;
      v42 = 0xD000000000000023;
      v78 = 0x80000001004B0690;
      v43 = "SUBTITLE_LOCATING";
    }
    else
    {
      v94 = 0;
      v95 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(v95);
      v40 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v41 = 0xD00000000000001DLL;
      v42 = 0xD00000000000002FLL;
      v78 = 0x80000001004A9540;
      v43 = "PEOPLE_LIST_NO_LOCATION_LABEL";
    }
    goto LABEL_23;
  }
  v44 = v91;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v91, v15, v37);
  v45 = (uint64_t)v88;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v88, v44, v37);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v45, 0, 1, v37);
  countAndFlagsBits = sub_1000530E0(v45, 0);
  v48 = v47;
  v49 = sub_1000051EC(v45, (uint64_t *)&unk_1005D3350);
  v50 = (void *)FMFLocation.location.getter(v49);
  if (!v50)
  {
    v54 = (uint64_t)v85;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v86 + 56))(v85, 1, 1, v87);
    goto LABEL_20;
  }
  v51 = v50;
  v52 = objc_msgSend(v50, "timestamp");

  v53 = v84;
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v52);

  v54 = (uint64_t)v85;
  v55 = v86;
  v56 = *(void (**)(char *, char *, uint64_t))(v86 + 32);
  v57 = v87;
  v56(v85, v53, v87);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v55 + 56))(v54, 0, 1, v57);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v54, 1, v57) == 1)
  {
LABEL_20:
    (*(void (**)(char *, uint64_t))(v38 + 8))(v44, v37);
    sub_1000051EC(v54, (uint64_t *)&unk_1005D3320);
    return countAndFlagsBits;
  }
  v58 = ((uint64_t (*)(char *, uint64_t, uint64_t))v56)(v83, v54, v57);
  if ((v90 & 1) != 0)
  {
    v94 = 0;
    v95 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v95);
    v59 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v60._countAndFlagsBits = 0xD00000000000001CLL;
    v96._countAndFlagsBits = 0xD00000000000002ELL;
    v96._object = (void *)0x80000001004A9590;
    v60._object = (void *)0x80000001004A9570;
    v61._countAndFlagsBits = 0;
    v61._object = (void *)0xE000000000000000;
    v62 = NSLocalizedString(_:tableName:bundle:value:comment:)(v60, (Swift::String_optional)0, (NSBundle)v59, v61, v96);
    v63 = v62._countAndFlagsBits;
    object = v62._object;

  }
  else
  {
    v68 = (uint64_t)v80;
    static FormatStyleCapitalizationContext.beginningOfSentence.getter(v58);
    v63 = sub_1000A5868(v68);
    object = v69;
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v68, v82);
  }
  v94 = 0;
  v95 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v95);
  v70 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v97._countAndFlagsBits = 0xD00000000000002CLL;
  v97._object = (void *)0x80000001004B06E0;
  v71._object = (void *)0x80000001004B06C0;
  v71._countAndFlagsBits = 0xD00000000000001ALL;
  v72._countAndFlagsBits = 0;
  v72._object = (void *)0xE000000000000000;
  v73 = NSLocalizedString(_:tableName:bundle:value:comment:)(v71, (Swift::String_optional)0, (NSBundle)v70, v72, v97);

  v74 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
  v75 = swift_allocObject(v74, 112, 7);
  *(_OWORD *)(v75 + 16) = xmmword_100481730;
  *(_QWORD *)(v75 + 56) = &type metadata for String;
  v76 = sub_100071E88();
  *(_QWORD *)(v75 + 32) = countAndFlagsBits;
  *(_QWORD *)(v75 + 40) = v48;
  *(_QWORD *)(v75 + 96) = &type metadata for String;
  *(_QWORD *)(v75 + 104) = v76;
  *(_QWORD *)(v75 + 64) = v76;
  *(_QWORD *)(v75 + 72) = v63;
  *(_QWORD *)(v75 + 80) = object;
  countAndFlagsBits = String.init(format:_:)(v73._countAndFlagsBits, v73._object, v75);
  v77 = swift_bridgeObjectRelease(v73._object);
  (*(void (**)(char *, uint64_t, __n128))(v55 + 8))(v83, v57, v77);
  (*(void (**)(char *, uint64_t))(v92 + 8))(v91, v93);
  return countAndFlagsBits;
}

uint64_t sub_1000530A0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FMFLocationSource(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000530E0(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int (*v50)(char *, uint64_t, uint64_t);
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  unsigned int v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  __n128 v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  id v139;
  Swift::String v140;
  Swift::String v141;
  Swift::String v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  void (*v158)(char *, uint64_t);
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  char *v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  char *v183;
  int v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  unsigned int (*v189)(char *, uint64_t, uint64_t);
  uint64_t v190;
  unint64_t v191;
  Swift::String v192;

  v184 = a2;
  v164 = type metadata accessor for PublishedLocation.Label.Length(0);
  v163 = *(_QWORD *)(v164 - 8);
  __chkstk_darwin(v164);
  v162 = (char *)&v161 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = type metadata accessor for PublishedLocation.Label.DetailLevel(0);
  v169 = *(_QWORD *)(v171 - 8);
  __chkstk_darwin(v171);
  v168 = (char *)&v161 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100053F2C(&qword_1005D3370);
  v6 = __chkstk_darwin(v5);
  v166 = (char *)&v161 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v178 = (char *)&v161 - v9;
  v10 = __chkstk_darwin(v8);
  v177 = (char *)&v161 - v11;
  v12 = __chkstk_darwin(v10);
  v174 = (char *)&v161 - v13;
  v14 = __chkstk_darwin(v12);
  v186 = (char *)&v161 - v15;
  __chkstk_darwin(v14);
  v175 = (char *)&v161 - v16;
  v182 = type metadata accessor for PublishedLocation.Label(0);
  v180 = *(_QWORD *)(v182 - 8);
  v17 = __chkstk_darwin(v182);
  v170 = (char *)&v161 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v181 = (char *)&v161 - v19;
  v20 = sub_100053F2C((uint64_t *)&unk_1005D3350);
  v21 = __chkstk_darwin(v20);
  v161 = (uint64_t)&v161 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v21);
  v167 = (uint64_t)&v161 - v24;
  v25 = __chkstk_darwin(v23);
  v165 = (uint64_t)&v161 - v26;
  v27 = __chkstk_darwin(v25);
  v29 = (char *)&v161 - v28;
  v30 = __chkstk_darwin(v27);
  v176 = (uint64_t)&v161 - v31;
  v32 = __chkstk_darwin(v30);
  v187 = (char *)&v161 - v33;
  v34 = __chkstk_darwin(v32);
  v36 = (char *)&v161 - v35;
  v37 = __chkstk_darwin(v34);
  v39 = (char *)&v161 - v38;
  v40 = __chkstk_darwin(v37);
  v42 = (char *)&v161 - v41;
  __chkstk_darwin(v40);
  v44 = (char *)&v161 - v43;
  v45 = sub_100053F2C(&qword_1005DC400);
  __chkstk_darwin(v45);
  v47 = (char *)&v161 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007464(a1, (uint64_t)v44, (uint64_t *)&unk_1005D3350);
  v48 = type metadata accessor for FMFLocation(0);
  v49 = *(_QWORD *)(v48 - 8);
  v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48);
  v51 = v50(v44, 1, v48);
  v188 = a1;
  v189 = v50;
  if (v51 == 1)
  {
    sub_1000051EC((uint64_t)v44, (uint64_t *)&unk_1005D3350);
    v179 = 0;
    v185 = 0;
  }
  else
  {
    FMFLocation.label.getter();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v44, v48);
    v52 = type metadata accessor for FMFLabel(0);
    v53 = *(_QWORD *)(v52 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v47, 1, v52) == 1)
    {
      sub_1000051EC((uint64_t)v47, &qword_1005DC400);
      v179 = 0;
      v185 = 0;
    }
    else
    {
      v54 = FMFLabel.localizedValue.getter();
      v173 = v49;
      v55 = v29;
      v57 = v56;
      (*(void (**)(char *, uint64_t))(v53 + 8))(v47, v52);
      v179 = String.nilIfEmpty.getter(v54, v57);
      v185 = v58;
      v59 = v57;
      v29 = v55;
      v49 = v173;
      swift_bridgeObjectRelease(v59);
    }
    a1 = v188;
    v50 = v189;
  }
  v60 = v186;
  sub_100007464(a1, (uint64_t)v42, (uint64_t *)&unk_1005D3350);
  if (v50(v42, 1, v48) == 1)
  {
    sub_1000051EC((uint64_t)v42, (uint64_t *)&unk_1005D3350);
    v172 = 0;
    v175 = 0;
    v61 = (uint64_t)v178;
  }
  else
  {
    v62 = v175;
    FMFLocation.address.getter();
    v63 = v42;
    v64 = (uint64_t)v62;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v63, v48);
    v65 = type metadata accessor for FMFAddress(0);
    v66 = *(_QWORD *)(v65 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48))(v64, 1, v65) == 1)
    {
      sub_1000051EC(v64, &qword_1005D3370);
      v172 = 0;
      v175 = 0;
      a1 = v188;
      v50 = v189;
      v61 = (uint64_t)v178;
    }
    else
    {
      v67 = FMFAddress.coarseAddressModern.getter();
      v69 = v68;
      (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v64, v65);
      v61 = (uint64_t)v178;
      if (v69)
      {
        v172 = String.nilIfEmpty.getter(v67, v69);
        v175 = v70;
        swift_bridgeObjectRelease(v69);
      }
      else
      {
        v172 = 0;
        v175 = 0;
      }
      a1 = v188;
      v50 = v189;
      v60 = v186;
    }
  }
  sub_100007464(a1, (uint64_t)v39, (uint64_t *)&unk_1005D3350);
  v71 = v50(v39, 1, v48);
  v183 = v29;
  if (v71 == 1)
  {
    v72 = (uint64_t *)&unk_1005D3350;
    v73 = (uint64_t)v39;
LABEL_19:
    sub_1000051EC(v73, v72);
    v186 = 0;
    v178 = 0;
    v77 = (uint64_t)v187;
    goto LABEL_24;
  }
  FMFLocation.address.getter();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v39, v48);
  v74 = type metadata accessor for FMFAddress(0);
  v75 = (uint64_t)v60;
  v76 = *(_QWORD *)(v74 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v75, 1, v74) == 1)
  {
    v72 = &qword_1005D3370;
    v73 = v75;
    goto LABEL_19;
  }
  v78 = v61;
  v79 = FMFAddress.streetAddressModern.getter();
  v81 = v80;
  (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v75, v74);
  if (v81)
  {
    v186 = (char *)String.nilIfEmpty.getter(v79, v81);
    v178 = v82;
    swift_bridgeObjectRelease(v81);
  }
  else
  {
    v186 = 0;
    v178 = 0;
  }
  v50 = v189;
  v77 = (uint64_t)v187;
  v61 = v78;
LABEL_24:
  sub_100007464(a1, (uint64_t)v36, (uint64_t *)&unk_1005D3350);
  if (v50(v36, 1, v48) == 1)
  {
    sub_1000051EC((uint64_t)v36, (uint64_t *)&unk_1005D3350);
    v173 = 0;
    v174 = 0;
    v83 = v185;
    v84 = v177;
  }
  else
  {
    v85 = v174;
    FMFLocation.address.getter();
    v86 = v36;
    v87 = (uint64_t)v85;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v86, v48);
    v88 = type metadata accessor for FMFAddress(0);
    v89 = *(_QWORD *)(v88 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v87, 1, v88) == 1)
    {
      sub_1000051EC(v87, &qword_1005D3370);
      v173 = 0;
      v174 = 0;
      v83 = v185;
    }
    else
    {
      v90 = FMFAddress.smallAddressModern.getter();
      v92 = v91;
      (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v87, v88);
      v83 = v185;
      if (v92)
      {
        v93 = String.nilIfEmpty.getter(v90, v92);
        v173 = v94;
        v174 = (char *)v93;
        swift_bridgeObjectRelease(v92);
      }
      else
      {
        v173 = 0;
        v174 = 0;
      }
      v50 = v189;
    }
    v84 = v177;
    v77 = (uint64_t)v187;
  }
  sub_100007464(a1, v77, (uint64_t *)&unk_1005D3350);
  if (v50((char *)v77, 1, v48) == 1)
  {
    v95 = (uint64_t *)&unk_1005D3350;
    v96 = v77;
LABEL_37:
    sub_1000051EC(v96, v95);
    v99 = 0;
    v100 = 0;
    goto LABEL_42;
  }
  FMFLocation.address.getter();
  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v77, v48);
  v97 = type metadata accessor for FMFAddress(0);
  v98 = *(_QWORD *)(v97 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48))(v84, 1, v97) == 1)
  {
    v95 = &qword_1005D3370;
    v96 = (uint64_t)v84;
    goto LABEL_37;
  }
  v101 = FMFAddress.mediumAddressModern.getter();
  v103 = v102;
  (*(void (**)(char *, uint64_t))(v98 + 8))(v84, v97);
  if (v103)
  {
    v99 = String.nilIfEmpty.getter(v101, v103);
    v100 = v104;
    swift_bridgeObjectRelease(v103);
  }
  else
  {
    v99 = 0;
    v100 = 0;
  }
  v50 = v189;
LABEL_42:
  v105 = v176;
  sub_100007464(a1, v176, (uint64_t *)&unk_1005D3350);
  if (v50((char *)v105, 1, v48) == 1)
  {
    sub_1000051EC(v105, (uint64_t *)&unk_1005D3350);
    v106 = 0;
    v107 = 0;
    goto LABEL_50;
  }
  FMFLocation.address.getter();
  (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v105, v48);
  v108 = type metadata accessor for FMFAddress(0);
  v109 = *(_QWORD *)(v108 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v109 + 48))(v61, 1, v108) == 1)
  {
    sub_1000051EC(v61, &qword_1005D3370);
LABEL_48:
    v106 = 0;
    v107 = 0;
    goto LABEL_49;
  }
  v110 = FMFAddress.largeAddressModern.getter();
  v112 = v111;
  (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v61, v108);
  if (!v112)
    goto LABEL_48;
  v106 = String.nilIfEmpty.getter(v110, v112);
  v107 = v113;
  swift_bridgeObjectRelease(v112);
LABEL_49:
  a1 = v188;
LABEL_50:
  v114 = (uint64_t)v183;
  sub_100007464(a1, (uint64_t)v183, (uint64_t *)&unk_1005D3350);
  if (v189((char *)v114, 1, v48) == 1)
  {
    sub_1000051EC(v114, (uint64_t *)&unk_1005D3350);
    v115 = 0;
    v116 = 0;
    v117 = v181;
    v118 = v172;
  }
  else
  {
    v119 = v166;
    FMFLocation.address.getter();
    v120 = v48;
    v121 = (uint64_t)v119;
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v114, v120);
    v122 = type metadata accessor for FMFAddress(0);
    v123 = *(_QWORD *)(v122 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v123 + 48))(v121, 1, v122) == 1)
    {
      sub_1000051EC(v121, &qword_1005D3370);
      v115 = 0;
      v116 = 0;
      v117 = v181;
      a1 = v188;
      v118 = v172;
    }
    else
    {
      v124 = FMFAddress.poiAddressModern.getter();
      v126 = v125;
      (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v121, v122);
      v117 = v181;
      v118 = v172;
      if (v126)
      {
        v115 = String.nilIfEmpty.getter(v124, v126);
        v116 = v127;
        swift_bridgeObjectRelease(v126);
      }
      else
      {
        v115 = 0;
        v116 = 0;
      }
      a1 = v188;
      v83 = v185;
    }
  }
  swift_bridgeObjectRetain(v83);
  v160 = v100;
  v128 = v179;
  PublishedLocation.Label.init(customLabel:coarseLabel:streetLabel:smallLabel:mediumLabel:largeLabel:poiLabel:)(v179, v83, v118, v175, v186, v178, v174, v173, v99, v160, v106, v107, v115, v116);
  if ((v184 & 1) != 0)
  {
    v129 = swift_bridgeObjectRelease(v83);
    v130 = v169;
    v131 = v168;
    v132 = v171;
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v169 + 104))(v168, enum case for PublishedLocation.Label.DetailLevel.detailed(_:), v171, v129);
    v128 = PublishedLocation.Label.primaryAndSecondaryNoFallbackLabel(detailLevel:)(v131);
    v134 = v133;
    v136 = v135;
    v138 = v137;
    (*(void (**)(char *, uint64_t))(v130 + 8))(v131, v132);
    if (v134)
    {
      if (v138)
      {
        v190 = 0;
        v191 = 0xE000000000000000;
        _StringGuts.grow(_:)(20);
        swift_bridgeObjectRelease(v191);
        v139 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v192._countAndFlagsBits = 0xD000000000000039;
        v192._object = (void *)0x80000001004B05E0;
        v140._object = (void *)0x80000001004B05B0;
        v140._countAndFlagsBits = 0xD000000000000027;
        v141._countAndFlagsBits = 0;
        v141._object = (void *)0xE000000000000000;
        v142 = NSLocalizedString(_:tableName:bundle:value:comment:)(v140, (Swift::String_optional)0, (NSBundle)v139, v141, v192);

        v143 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
        v144 = swift_allocObject(v143, 112, 7);
        *(_OWORD *)(v144 + 16) = xmmword_100481730;
        *(_QWORD *)(v144 + 56) = &type metadata for String;
        v145 = sub_100071E88();
        *(_QWORD *)(v144 + 32) = v128;
        *(_QWORD *)(v144 + 40) = v134;
        *(_QWORD *)(v144 + 96) = &type metadata for String;
        *(_QWORD *)(v144 + 104) = v145;
        *(_QWORD *)(v144 + 64) = v145;
        *(_QWORD *)(v144 + 72) = v136;
        *(_QWORD *)(v144 + 80) = v138;
        v128 = String.init(format:_:)(v142._countAndFlagsBits, v142._object, v144);
        swift_bridgeObjectRelease(v142._object);
LABEL_71:
        v158 = *(void (**)(char *, uint64_t))(v180 + 8);
        v148 = v182;
        goto LABEL_72;
      }
      v151 = v165;
      sub_100007464(a1, v165, (uint64_t *)&unk_1005D3350);
    }
    else
    {
      swift_bridgeObjectRelease(v138);
      v151 = v165;
      sub_100007464(a1, v165, (uint64_t *)&unk_1005D3350);
      v128 = sub_100182E78(v151, 1);
    }
    sub_1000051EC(v151, (uint64_t *)&unk_1005D3350);
    goto LABEL_71;
  }
  v146 = v180;
  v147 = v170;
  v148 = v182;
  (*(void (**)(char *, char *, uint64_t))(v180 + 16))(v170, v117, v182);
  v149 = v167;
  sub_100007464(a1, v167, (uint64_t *)&unk_1005D3350);
  if (v83)
  {
    v150 = v149;
  }
  else
  {
    v152 = v163;
    v153 = v162;
    v154 = v164;
    (*(void (**)(char *, _QWORD, uint64_t))(v163 + 104))(v162, enum case for PublishedLocation.Label.Length.coarse(_:), v164);
    v128 = PublishedLocation.Label.combinedNoFallbackLabel(maxLength:)(v153);
    v156 = v155;
    (*(void (**)(char *, uint64_t))(v152 + 8))(v153, v154);
    v157 = v161;
    sub_100007464(v149, v161, (uint64_t *)&unk_1005D3350);
    if (!v156)
      v128 = sub_100182E78(v157, 0);
    sub_1000051EC(v157, (uint64_t *)&unk_1005D3350);
    v150 = v149;
  }
  sub_1000051EC(v150, (uint64_t *)&unk_1005D3350);
  v158 = *(void (**)(char *, uint64_t))(v146 + 8);
  v158(v147, v148);
LABEL_72:
  v158(v117, v148);
  return v128;
}

uint64_t sub_100053F2C(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

void sub_100053F6C(char *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  void **v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void (*v31)(char *, unint64_t, uint64_t);
  void (*v32)(char *, char *, uint64_t);
  void **v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  void *v51;
  char *v52;
  id v53;
  unsigned int v54;
  void *v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  _QWORD *v66;
  int v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  char *v78;
  uint64_t v79;
  void **aBlock;
  _QWORD v81[4];
  uint64_t v82;

  v67 = a7;
  v74 = a5;
  v75 = a6;
  v11 = type metadata accessor for DispatchWorkItemFlags(0);
  v72 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v71 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v69 = *(_QWORD *)(v13 - 8);
  v70 = v13;
  __chkstk_darwin(v13);
  v68 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FMFLocationAlert(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v21 = (char *)&v65 - v20;
  v22 = a2;
  v23 = a1;
  v24 = sub_100057E6C(v22, a3);
  v25 = (void **)_swiftEmptyArrayStorage;
  v76 = v11;
  if (a4)
  {
    aBlock = (void **)_swiftEmptyArrayStorage;
    v26 = *(_QWORD *)(a4 + 16);
    swift_bridgeObjectRetain(a4);
    if (v26)
    {
      v73 = v23;
      v27 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
      v28 = a4;
      v29 = *(_QWORD *)(v16 + 72);
      v65 = v28;
      v66 = v24;
      v77 = v27;
      v78 = v19;
      v30 = v28 + v27;
      v31 = *(void (**)(char *, unint64_t, uint64_t))(v16 + 16);
      v79 = v16;
      v31(v21, v28 + v27, v15);
      while (1)
      {
        if ((sub_100464164() & 1) != 0)
        {
          v32 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
          v32(v19, v21, v15);
          v33 = aBlock;
          if ((swift_isUniquelyReferenced_nonNull_native(aBlock) & 1) == 0)
          {
            sub_100111E8C(0, (int64_t)v33[2] + 1, 1);
            v33 = aBlock;
          }
          v35 = (unint64_t)v33[2];
          v34 = (unint64_t)v33[3];
          if (v35 >= v34 >> 1)
          {
            sub_100111E8C(v34 > 1, v35 + 1, 1);
            v33 = aBlock;
          }
          v33[2] = (void *)(v35 + 1);
          v36 = (char *)v33 + v77 + v35 * v29;
          v19 = v78;
          v32(v36, v78, v15);
          aBlock = v33;
          v16 = v79;
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
        }
        v30 += v29;
        if (!--v26)
          break;
        v31(v21, v30, v15);
      }
      v25 = aBlock;
      a4 = v65;
      v24 = v66;
      v23 = v73;
    }
    swift_bridgeObjectRelease(a4);
    swift_bridgeObjectRetain(v25);
    v37 = (uint64_t)v25;
    v11 = v76;
  }
  else
  {
    v37 = 0;
  }
  v38 = v75;
  v39 = sub_1000546C4((uint64_t)v25);
  swift_bridgeObjectRelease(v25);
  v40 = *(_QWORD *)&v23[OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_itemAger];
  swift_retain(v40);
  v41 = sub_10003D218((uint64_t)v24, type metadata accessor for FMPeopleCellViewModel, (uint64_t)&off_100544300);
  sub_100054D40((uint64_t)v41);
  swift_release(v40);
  swift_bridgeObjectRelease(v41);
  v42 = v74;
  if ((sub_1000546B0((uint64_t)v24, v74) & 1) != 0 && (sub_10005A5F4((uint64_t)v39, v38) & 1) != 0 && (v67 & 1) == 0)
  {
    swift_bridgeObjectRelease(v39);
    swift_bridgeObjectRelease(v24);
    swift_bridgeObjectRelease(v37);
  }
  else
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v43 = type metadata accessor for Logger(0);
    sub_100056D88(v43, (uint64_t)qword_1005F5748);
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRetain(v39);
    swift_bridgeObjectRetain(v42);
    v44 = swift_bridgeObjectRetain(v38);
    v45 = Logger.logObject.getter(v44);
    v46 = static os_log_type_t.default.getter(v45);
    if (os_log_type_enabled(v45, v46))
    {
      v47 = v38;
      v48 = swift_slowAlloc(42, -1);
      *(_DWORD *)v48 = 134218752;
      aBlock = (void **)v24[2];
      v73 = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v81);
      swift_bridgeObjectRelease(v24);
      *(_WORD *)(v48 + 12) = 2048;
      aBlock = (void **)v39[2];
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v81);
      swift_bridgeObjectRelease(v39);
      *(_WORD *)(v48 + 22) = 2048;
      aBlock = *(void ***)(v42 + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v81);
      swift_bridgeObjectRelease(v42);
      *(_WORD *)(v48 + 32) = 2048;
      aBlock = *(void ***)(v47 + 16);
      v23 = v73;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v81);
      v49 = v47;
      v11 = v76;
      swift_bridgeObjectRelease(v49);
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "FMPeopleListDataSource: reloading table view new: %ld (%ld fences), old: %ld (%ld fences)", (uint8_t *)v48, 0x2Au);
      swift_slowDealloc(v48, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease(v38);
      swift_bridgeObjectRelease(v42);
      swift_bridgeObjectRelease(v39);
      swift_bridgeObjectRelease(v24);
    }
    v50 = (_QWORD *)swift_allocObject(&unk_100568978, 48, 7);
    v50[2] = v24;
    v50[3] = v23;
    v50[4] = v37;
    v50[5] = v39;
    v51 = (void *)objc_opt_self(NSThread);
    swift_bridgeObjectRetain(v37);
    v52 = v23;
    swift_bridgeObjectRetain(v24);
    swift_bridgeObjectRetain(v39);
    v53 = objc_msgSend(v51, "currentThread");
    v54 = objc_msgSend(v53, "isMainThread");

    if (v54)
    {
      sub_100035824((uint64_t)v24, (uint64_t)v52, v37, (uint64_t)v39);
      swift_bridgeObjectRelease(v39);
      swift_bridgeObjectRelease(v37);
      swift_bridgeObjectRelease(v24);
      swift_release(v50);
    }
    else
    {
      swift_bridgeObjectRelease(v39);
      swift_bridgeObjectRelease(v37);
      swift_bridgeObjectRelease(v24);
      sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
      v55 = (void *)static OS_dispatch_queue.main.getter();
      v56 = swift_allocObject(&unk_1005689A0, 32, 7);
      *(_QWORD *)(v56 + 16) = sub_100039DA4;
      *(_QWORD *)(v56 + 24) = v50;
      v81[3] = sub_10003FFE0;
      v82 = v56;
      aBlock = _NSConcreteStackBlock;
      v81[0] = 1107296256;
      v81[1] = sub_100037DF8;
      v81[2] = &unk_1005689B8;
      v57 = _Block_copy(&aBlock);
      v58 = v82;
      swift_retain(v50);
      swift_release(v58);
      v59 = v68;
      static DispatchQoS.unspecified.getter(v60);
      aBlock = (void **)_swiftEmptyArrayStorage;
      v61 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v62 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
      v63 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
      v64 = v71;
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v62, v63, v11, v61);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v59, v64, v57);
      _Block_release(v57);
      swift_release(v50);

      (*(void (**)(char *, uint64_t))(v72 + 8))(v64, v11);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v59, v70);
    }
  }
}

uint64_t sub_1000546B0(uint64_t a1, uint64_t a2)
{
  return sub_10004FB38(a1, a2, type metadata accessor for FMPeopleCellViewModel, (uint64_t (*)(char *, char *))sub_10005014C);
}

_QWORD *sub_1000546C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::String *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_QWORD, _QWORD, _QWORD);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  void (*v39)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(uint64_t, uint64_t, uint64_t);
  int v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  id v52;
  __n128 v53;
  char *v54;
  __n128 v55;
  Swift::String *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  int v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  id v65;
  NSString v66;
  void (*v67)(char *, uint64_t);
  Swift::String *v68;
  Swift::String *v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v75;
  char *v76;
  Swift::String *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  int v88;
  Swift::String *v89;
  uint64_t v90;
  void (*v91)(_QWORD, _QWORD, _QWORD);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;

  v3 = sub_100053F2C(&qword_1005D38C0);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v84 = (char *)&v75 - v7;
  v8 = type metadata accessor for FMAllowLocationAlertCellViewModel(0);
  v83 = *(_QWORD *)(v8 - 8);
  v9 = __chkstk_darwin(v8);
  v82 = (uint64_t)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (Swift::String *)((char *)&v75 - v11);
  v13 = sub_100053F2C(&qword_1005D3380);
  __chkstk_darwin(v13);
  v15 = (char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = type metadata accessor for FMFFriend(0);
  v96 = *(_QWORD *)(v99 - 8);
  v16 = __chkstk_darwin(v99);
  v87 = (char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v94 = (uint64_t)&v75 - v19;
  __chkstk_darwin(v18);
  v98 = (char *)&v75 - v20;
  v85 = type metadata accessor for FMFLocationAlert(0);
  v21 = *(_QWORD *)(v85 - 8);
  v22 = __chkstk_darwin(v85);
  v93 = (uint64_t)&v75 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v25 = *(_QWORD *)(a1 + 16);
  if (!v25)
    return _swiftEmptyArrayStorage;
  v77 = v12;
  v97 = (char *)&v75 - v24;
  v76 = v6;
  v78 = OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator;
  v26 = a1 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
  v92 = *(_QWORD *)(v21 + 72);
  v27 = *(void (**)(_QWORD, _QWORD, _QWORD))(v21 + 16);
  v75 = a1;
  swift_bridgeObjectRetain(a1);
  v95 = _swiftEmptyArrayStorage;
  v28 = v96;
  v29 = v85;
  v91 = v27;
  v80 = v15;
  v81 = v1;
  v79 = v21;
  do
  {
    v30 = v97;
    v27(v97, v26, v29);
    sub_100464A94(v15);
    v31 = v99;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v15, 1, v99) == 1)
    {
      (*(void (**)(char *, uint64_t))(v21 + 8))(v30, v29);
      sub_1000051EC((uint64_t)v15, &qword_1005D3380);
    }
    else
    {
      v32 = (uint64_t)v98;
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v98, v15, v31);
      v33 = *(_QWORD *)(v1 + v78);
      v34 = *(_QWORD *)(*(_QWORD *)(v33 + 48) + 64);
      swift_retain(v34);
      v89 = (Swift::String *)sub_10005848C(v32, 0);
      v35 = swift_release(v34);
      ((void (*)(uint64_t, char *, uint64_t, __n128))v27)(v93, v30, v29, v35);
      v36 = *(_QWORD *)(v33 + 48);
      swift_retain(v33);
      v37 = swift_retain(v36);
      v88 = dispatch thunk of FMFManager.friendsOperationsRestricted.getter(v37);
      v38 = swift_release(v36);
      v39 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v28 + 16);
      v39(v94, v32, v31, v38);
      v90 = v33;
      v40 = *(_QWORD *)(v33 + 48);
      v41 = swift_retain(v40);
      v42 = dispatch thunk of FMFManager.contactsController.getter(v41);
      v43 = swift_release(v40);
      v44 = (uint64_t)v84;
      FMFFriend.contact.getter(v43);
      v45 = type metadata accessor for FMFContact(0);
      v46 = *(_QWORD *)(v45 - 8);
      v47 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v46 + 48);
      v48 = v47(v44, 1, v45);
      v86 = v46;
      if (v48 == 1)
      {
        sub_1000051EC(v44, &qword_1005D38C0);
        v49 = 0xE200000000000000;
        v50 = 17481;
      }
      else
      {
        v50 = FMFContact.storeUUID.getter();
        v49 = v51;
        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v45);
      }
      v52 = (id)dispatch thunk of FMFContactsDataController.contact(for:keysToFetch:)(v50, v49, 0);
      swift_bridgeObjectRelease(v49);
      v53 = swift_release(v42);
      v54 = v87;
      v39((uint64_t)v87, (uint64_t)v98, v99, v53);
      if (v52)
      {
        v56 = v77;
        v57 = v99;
        v59 = (unint64_t)v95;
        v58 = v96;
      }
      else
      {
        v60 = (uint64_t)v76;
        FMFFriend.contact.getter(v55);
        v61 = v47(v60, 1, v45);
        v56 = v77;
        v59 = (unint64_t)v95;
        if (v61 == 1)
        {
          sub_1000051EC(v60, &qword_1005D38C0);
          v62 = 0xE200000000000000;
        }
        else
        {
          FMFContact.storeUUID.getter();
          v62 = v63;
          (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v60, v45);
        }
        v64 = v99;
        v58 = v96;
        v65 = objc_allocWithZone((Class)CNContact);
        v66 = String._bridgeToObjectiveC()();
        v52 = objc_msgSend(v65, "initWithIdentifier:", v66, swift_bridgeObjectRelease(v62).n128_f64[0]);

        v54 = v87;
        v57 = v64;
      }
      v67 = *(void (**)(char *, uint64_t))(v58 + 8);
      v67(v54, v57);
      v68 = v89;
      v69 = v89;
      sub_10044E554(v90, v93, v88 & 1, v94, v68, (uint64_t)v52, v56);
      v70 = v82;
      sub_10004FC74((uint64_t)v56, v82, type metadata accessor for FMAllowLocationAlertCellViewModel);
      if ((swift_isUniquelyReferenced_nonNull_native(v59) & 1) == 0)
        v59 = sub_1000702D4(0, *(_QWORD *)(v59 + 16) + 1, 1, v59);
      v21 = v79;
      v72 = *(_QWORD *)(v59 + 16);
      v71 = *(_QWORD *)(v59 + 24);
      if (v72 >= v71 >> 1)
        v59 = sub_1000702D4(v71 > 1, v72 + 1, 1, v59);
      *(_QWORD *)(v59 + 16) = v72 + 1;
      v73 = (*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
      v95 = (_QWORD *)v59;
      sub_100051774(v70, v59 + v73 + *(_QWORD *)(v83 + 72) * v72, type metadata accessor for FMAllowLocationAlertCellViewModel);

      sub_10004FCB8((uint64_t)v56, type metadata accessor for FMAllowLocationAlertCellViewModel);
      v67(v98, v99);
      v29 = v85;
      (*(void (**)(char *, uint64_t))(v21 + 8))(v97, v85);
      v15 = v80;
      v1 = v81;
      v28 = v96;
    }
    v27 = v91;
    v26 += v92;
    --v25;
  }
  while (v25);
  swift_bridgeObjectRelease(v75);
  return v95;
}

uint64_t sub_100054D40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(char *, uint64_t);
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  uint64_t v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  double (**v38)(_QWORD, void *);
  uint64_t v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  void (*v57)(char *, uint64_t);
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66[2];
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  __int128 aBlock;
  __int128 v71;
  double (**v72)(_QWORD, void *);
  uint64_t v73;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v63 - 8);
  __chkstk_darwin(v63);
  v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v9 = type metadata accessor for Logger(0);
  v59 = sub_100056D88(v9, (uint64_t)qword_1005F5748);
  v10 = Logger.logObject.getter(v59);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "FMItemAger: scheduleNextInterval", v12, 2u);
    swift_slowDealloc(v12, -1, -1);
  }

  *(_QWORD *)&aBlock = a1;
  swift_bridgeObjectRetain(a1);
  sub_100055630(&aBlock);
  v13 = aBlock;
  v60 = sub_1000555A8();
  v14 = (void *)static OS_dispatch_queue.main.getter();
  v15 = v64;
  v72 = (double (**)(_QWORD, void *))sub_10003D494;
  v73 = v64;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v71 = sub_100037DF8;
  *((_QWORD *)&v71 + 1) = &unk_10054F6F8;
  v16 = _Block_copy(&aBlock);
  v17 = v73;
  swift_retain(v15);
  swift_release(v17);
  static DispatchQoS.unspecified.getter(v18);
  *(_QWORD *)&aBlock = _swiftEmptyArrayStorage;
  v19 = sub_100056580();
  v20 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v21 = sub_1000555E4();
  v62 = v20;
  v61 = v21;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v20, v21, v2, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v5, v16);
  _Block_release(v16);

  v22 = *(void (**)(char *, uint64_t))(v3 + 8);
  v22(v5, v2);
  v23 = *(void (**)(char *, uint64_t))(v6 + 8);
  v24 = v63;
  v23(v8, v63);
  if (*(_QWORD *)(v13 + 16))
  {
    sub_100056284(v13 + 32, (uint64_t)&aBlock);
  }
  else
  {
    v72 = 0;
    aBlock = 0u;
    v71 = 0u;
  }
  swift_release(v13);
  if (!*((_QWORD *)&v71 + 1))
    return sub_1001DC6F0((uint64_t)&aBlock);
  v56 = v23;
  v57 = v22;
  v58 = v19;
  sub_10003D3AC(&aBlock, (uint64_t)v67);
  v25 = v68;
  v26 = v69;
  sub_100029550(v67, v68);
  v27 = (*(double (**)(uint64_t, uint64_t))(v26 + 16))(v25, v26);
  v28 = swift_allocObject(&unk_10054F730, 24, 7);
  swift_weakInit(v28 + 16, v64);
  sub_100056284((uint64_t)v67, (uint64_t)v66);
  v29 = swift_allocObject(&unk_10054F758, 64, 7);
  *(_QWORD *)(v29 + 16) = v28;
  sub_10003D3AC(v66, v29 + 24);
  v72 = (double (**)(_QWORD, void *))sub_1001DC780;
  v73 = v29;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v71 = sub_100008B40;
  *((_QWORD *)&v71 + 1) = &unk_10054F770;
  v30 = _Block_copy(&aBlock);
  v31 = (void *)objc_opt_self(NSTimer);
  swift_retain(v28);
  v32 = objc_msgSend(v31, "timerWithTimeInterval:repeats:block:", 0, v30, v27);
  _Block_release(v30);
  v33 = v73;
  swift_release(v28);
  swift_release(v33);
  sub_100056284((uint64_t)v67, (uint64_t)&aBlock);
  v34 = v32;
  v35 = Logger.logObject.getter(v34);
  v36 = static os_log_type_t.default.getter(v35);
  if (os_log_type_enabled(v35, v36))
  {
    v37 = swift_slowAlloc(22, -1);
    v55 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v66[0] = v55;
    *(_DWORD *)v37 = 134218242;
    v59 = v2;
    v39 = *((_QWORD *)&v71 + 1);
    v38 = v72;
    sub_100029550(&aBlock, *((uint64_t *)&v71 + 1));
    v65 = v38[2](v39, v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, v66);
    sub_100029574(&aBlock);
    *(_WORD *)(v37 + 12) = 2080;
    v40 = objc_msgSend(v34, "debugDescription", v37 + 14);
    v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
    v43 = v42;

    v24 = v63;
    v44 = v41;
    v2 = v59;
    v65 = sub_100056DA0(v44, v43, (uint64_t *)v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v65, v66);

    swift_bridgeObjectRelease(v43);
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "FMItemAger: nextItemToRefresh time scheduled %fs, %s", (uint8_t *)v37, 0x16u);
    v45 = v55;
    swift_arrayDestroy(v55, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v45, -1, -1);
    swift_slowDealloc(v37, -1, -1);

  }
  else
  {
    sub_100029574(&aBlock);

  }
  v47 = (void *)static OS_dispatch_queue.main.getter();
  v48 = swift_allocObject(&unk_10054F7A8, 32, 7);
  v49 = v64;
  *(_QWORD *)(v48 + 16) = v34;
  *(_QWORD *)(v48 + 24) = v49;
  v72 = (double (**)(_QWORD, void *))sub_10003D404;
  v73 = v48;
  *(_QWORD *)&aBlock = _NSConcreteStackBlock;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v71 = sub_100037DF8;
  *((_QWORD *)&v71 + 1) = &unk_10054F7C0;
  v50 = _Block_copy(&aBlock);
  v51 = v73;
  swift_retain(v49);
  v52 = v34;
  swift_release(v51);
  static DispatchQoS.unspecified.getter(v53);
  *(_QWORD *)&aBlock = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v62, v61, v2, v58);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v5, v50);
  _Block_release(v50);

  v57(v5, v2);
  v56(v8, v24);
  return sub_100029574(v67);
}

void sub_100055478()
{
  sub_100055494(type metadata accessor for FMPeopleCellViewModel);
}

void sub_100055494(uint64_t (*a1)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  double v10;
  long double v12;
  uint64_t v15;

  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin();
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = Date.init()(v4);
  v8 = Date.timeIntervalSince1970.getter(v7);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  v9 = a1(0);
  v10 = v8 - Date.timeIntervalSince1970.getter(v9);
  if (v10 < 0.0 || v10 > 30.0)
  {
    v12 = 60.0;
    if (v10 < 30.0 || v10 > 60.0)
    {
      v12 = 3600.0;
      if (v10 >= 60.0 && v10 <= 3600.0)
        v12 = 60.0;
    }
    fmod(v10, v12);
  }
}

unint64_t sub_1000555A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D20E0;
  if (!qword_1005D20E0)
  {
    v1 = objc_opt_self(OS_dispatch_queue);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1005D20E0);
  }
  return result;
}

unint64_t sub_1000555E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D2110;
  if (!qword_1005D2110)
  {
    v1 = sub_10004058C((uint64_t *)&unk_1005D33F0);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v1);
    atomic_store(result, (unint64_t *)&qword_1005D2110);
  }
  return result;
}

void sub_100055630(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4[2];

  v2 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = (_QWORD *)sub_100055698(v2);
  v3 = v2[2];
  v4[0] = (uint64_t)(v2 + 4);
  v4[1] = v3;
  sub_1000556AC(v4);
  *a1 = v2;
}

uint64_t sub_100055698(_QWORD *a1)
{
  return sub_10003D3F0(0, a1[2], 0, a1);
}

void sub_1000556AC(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  Swift::Int v7;
  Swift::Int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  Swift::Int v13;
  char *v14;
  unint64_t v15;
  Swift::Int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  Swift::Int v35;
  Swift::Int v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  Swift::Int v40;
  Swift::Int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  Swift::Int v46;
  uint64_t v47;
  Swift::Int v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  char *v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;
  char v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  Swift::Int v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  unint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  _QWORD *v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  unint64_t v124;
  _QWORD *v125;
  Swift::Int v126;
  uint64_t v127;
  char *v128;
  Swift::Int v129;
  Swift::Int v130;
  char *v131;
  char *v132;
  Swift::Int v133;
  char *v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD v138[3];
  uint64_t v139;
  uint64_t v140;
  __int128 v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;

  v144 = type metadata accessor for Date(0);
  v137 = *(_QWORD *)(v144 - 8);
  v2 = __chkstk_darwin(v144);
  v4 = (char *)&v125 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v125 - v5;
  v7 = a1[1];
  v8 = _minimumMergeRunLength(_:)(v7);
  if (v8 >= v7)
  {
    if (v7 < 0)
      goto LABEL_137;
    if (v7)
      sub_100056080(0, v7, 1, a1);
    return;
  }
  if (v7 >= 0)
    v9 = v7;
  else
    v9 = v7 + 1;
  if (v7 < -1)
    goto LABEL_145;
  v126 = v8;
  if (v7 < 2)
  {
    v134 = (char *)&_swiftEmptyArrayStorage[4];
    v125 = _swiftEmptyArrayStorage;
    if (v7 != 1)
    {
      v15 = _swiftEmptyArrayStorage[2];
      v14 = (char *)_swiftEmptyArrayStorage;
LABEL_103:
      v117 = v136;
      if (v15 >= 2)
      {
        v118 = *a1;
        do
        {
          v119 = v15 - 2;
          if (v15 < 2)
            goto LABEL_132;
          if (!v118)
            goto LABEL_144;
          v106 = v14;
          v120 = v14 + 32;
          v121 = *(_QWORD *)&v14[16 * v119 + 32];
          v122 = *(_QWORD *)&v14[16 * v15 + 24];
          sub_1001DC110((char *)(v118 + 40 * v121), (char *)(v118 + 40 * *(_QWORD *)&v120[16 * v15 - 16]), v118 + 40 * v122, v134);
          if (v117)
            goto LABEL_100;
          if (v122 < v121)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native(v106) & 1) == 0)
            v106 = sub_10020CE70((uint64_t)v106);
          if (v119 >= *((_QWORD *)v106 + 2))
            goto LABEL_134;
          v123 = &v106[16 * v119 + 32];
          *(_QWORD *)v123 = v121;
          *((_QWORD *)v123 + 1) = v122;
          v124 = *((_QWORD *)v106 + 2);
          if (v15 > v124)
            goto LABEL_135;
          v14 = v106;
          memmove(&v106[16 * v15 + 16], &v106[16 * v15 + 32], 16 * (v124 - v15));
          *((_QWORD *)v106 + 2) = v124 - 1;
          v15 = v124 - 1;
        }
        while (v124 > 2);
      }
      swift_bridgeObjectRelease(v14);
      v116 = v125;
      v125[2] = 0;
LABEL_115:
      swift_bridgeObjectRelease(v116);
      return;
    }
  }
  else
  {
    v10 = v9 >> 1;
    v11 = sub_100053F2C((uint64_t *)&unk_1005D6750);
    v12 = static Array._allocateBufferUninitialized(minimumCapacity:)(v10, v11);
    *(_QWORD *)(v12 + 16) = v10;
    v125 = (_QWORD *)v12;
    v134 = (char *)(v12 + 32);
  }
  v13 = 0;
  v14 = (char *)_swiftEmptyArrayStorage;
  v135 = a1;
  v131 = v6;
  v132 = v4;
  while (1)
  {
    v16 = v13++;
    v130 = v16;
    if (v13 >= v7)
      break;
    v17 = *a1;
    sub_100056284(*a1 + 40 * v13, (uint64_t)&v141);
    v18 = v17;
    sub_100056284(v17 + 40 * v16, (uint64_t)v138);
    v133 = v7;
    v20 = v142;
    v19 = v143;
    sub_100029550(&v141, v142);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v19);
    v21 = v139;
    v22 = v140;
    sub_100029550(v138, v139);
    v23 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v24 = v22;
    v7 = v133;
    v23(v21, v24);
    LODWORD(v129) = static Date.< infix(_:_:)(v6, v4);
    v25 = *(char **)(v137 + 8);
    v26 = v144;
    ((void (*)(char *, uint64_t))v25)(v4, v144);
    v128 = v25;
    ((void (*)(char *, uint64_t))v25)(v6, v26);
    sub_100029574(v138);
    sub_100029574(&v141);
    v127 = v18;
    if (v16 + 2 >= v7)
    {
      v13 = v16 + 2;
    }
    else
    {
      v27 = v18 + 40 * v16 + 40;
      v13 = v16 + 2;
      while (1)
      {
        v28 = v27 + 40;
        sub_100056284(v27 + 40, (uint64_t)&v141);
        sub_100056284(v27, (uint64_t)v138);
        v30 = v142;
        v29 = v143;
        sub_100029550(&v141, v142);
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v30, v29);
        v31 = v139;
        v32 = v140;
        sub_100029550(v138, v139);
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v32);
        LODWORD(v31) = static Date.< infix(_:_:)(v6, v4);
        v33 = v144;
        v34 = v128;
        ((void (*)(char *, uint64_t))v128)(v4, v144);
        ((void (*)(char *, uint64_t))v34)(v6, v33);
        sub_100029574(v138);
        sub_100029574(&v141);
        if (((v129 ^ v31) & 1) != 0)
          break;
        ++v13;
        v27 = v28;
        v7 = v133;
        if (v133 == v13)
        {
          v13 = v133;
          goto LABEL_23;
        }
      }
      v7 = v133;
    }
LABEL_23:
    a1 = v135;
    if ((v129 & 1) == 0)
      break;
    if (v13 < v16)
      goto LABEL_138;
    if (v16 >= v13)
      break;
    v35 = v16;
    v36 = v13;
    v37 = v14;
    v38 = 40 * v36 - 40;
    v39 = 40 * v35;
    v40 = v36;
    v41 = v35;
    do
    {
      if (v41 != --v36)
      {
        if (!v127)
          goto LABEL_143;
        v42 = v127 + v39;
        v43 = v127 + v38;
        sub_10003D3AC((__int128 *)(v127 + v39), (uint64_t)&v141);
        v44 = *(_QWORD *)(v43 + 32);
        v45 = *(_OWORD *)(v43 + 16);
        *(_OWORD *)v42 = *(_OWORD *)v43;
        *(_OWORD *)(v42 + 16) = v45;
        *(_QWORD *)(v42 + 32) = v44;
        sub_10003D3AC(&v141, v43);
      }
      ++v41;
      v38 -= 40;
      v39 += 40;
    }
    while (v41 < v36);
    v14 = v37;
    a1 = v135;
    v13 = v40;
    v4 = v132;
    v7 = v133;
    v16 = v130;
    if (v13 < v133)
      goto LABEL_33;
LABEL_52:
    if (v13 < v16)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
      v14 = sub_10020C830(0, *((_QWORD *)v14 + 2) + 1, 1, v14);
    v61 = *((_QWORD *)v14 + 2);
    v60 = *((_QWORD *)v14 + 3);
    v15 = v61 + 1;
    if (v61 >= v60 >> 1)
      v14 = sub_10020C830((char *)(v60 > 1), v61 + 1, 1, v14);
    *((_QWORD *)v14 + 2) = v15;
    v62 = v14 + 32;
    v63 = &v14[16 * v61 + 32];
    *(_QWORD *)v63 = v16;
    *((_QWORD *)v63 + 1) = v13;
    if (v61)
    {
      a1 = v135;
      while (1)
      {
        v64 = v15 - 1;
        if (v15 >= 4)
        {
          v69 = &v62[16 * v15];
          v70 = *((_QWORD *)v69 - 8);
          v71 = *((_QWORD *)v69 - 7);
          v75 = __OFSUB__(v71, v70);
          v72 = v71 - v70;
          if (v75)
            goto LABEL_120;
          v74 = *((_QWORD *)v69 - 6);
          v73 = *((_QWORD *)v69 - 5);
          v75 = __OFSUB__(v73, v74);
          v67 = v73 - v74;
          v68 = v75;
          if (v75)
            goto LABEL_121;
          v76 = v15 - 2;
          v77 = &v62[16 * v15 - 32];
          v79 = *(_QWORD *)v77;
          v78 = *((_QWORD *)v77 + 1);
          v75 = __OFSUB__(v78, v79);
          v80 = v78 - v79;
          if (v75)
            goto LABEL_123;
          v75 = __OFADD__(v67, v80);
          v81 = v67 + v80;
          if (v75)
            goto LABEL_126;
          if (v81 >= v72)
          {
            v99 = &v62[16 * v64];
            v101 = *(_QWORD *)v99;
            v100 = *((_QWORD *)v99 + 1);
            v75 = __OFSUB__(v100, v101);
            v102 = v100 - v101;
            if (v75)
              goto LABEL_130;
            v92 = v67 < v102;
            goto LABEL_90;
          }
        }
        else
        {
          if (v15 != 3)
          {
            v93 = *((_QWORD *)v14 + 4);
            v94 = *((_QWORD *)v14 + 5);
            v75 = __OFSUB__(v94, v93);
            v86 = v94 - v93;
            v87 = v75;
            goto LABEL_84;
          }
          v66 = *((_QWORD *)v14 + 4);
          v65 = *((_QWORD *)v14 + 5);
          v75 = __OFSUB__(v65, v66);
          v67 = v65 - v66;
          v68 = v75;
        }
        if ((v68 & 1) != 0)
          goto LABEL_122;
        v76 = v15 - 2;
        v82 = &v62[16 * v15 - 32];
        v84 = *(_QWORD *)v82;
        v83 = *((_QWORD *)v82 + 1);
        v85 = __OFSUB__(v83, v84);
        v86 = v83 - v84;
        v87 = v85;
        if (v85)
          goto LABEL_125;
        v88 = &v62[16 * v64];
        v90 = *(_QWORD *)v88;
        v89 = *((_QWORD *)v88 + 1);
        v75 = __OFSUB__(v89, v90);
        v91 = v89 - v90;
        if (v75)
          goto LABEL_128;
        if (__OFADD__(v86, v91))
          goto LABEL_129;
        if (v86 + v91 >= v67)
        {
          v92 = v67 < v91;
LABEL_90:
          if (v92)
            v64 = v76;
          goto LABEL_92;
        }
LABEL_84:
        if ((v87 & 1) != 0)
          goto LABEL_124;
        v95 = &v62[16 * v64];
        v97 = *(_QWORD *)v95;
        v96 = *((_QWORD *)v95 + 1);
        v75 = __OFSUB__(v96, v97);
        v98 = v96 - v97;
        if (v75)
          goto LABEL_127;
        if (v98 < v86)
          goto LABEL_14;
LABEL_92:
        v103 = v64 - 1;
        if (v64 - 1 >= v15)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        v104 = *a1;
        if (!*a1)
          goto LABEL_142;
        v105 = v13;
        v106 = v14;
        v107 = &v62[16 * v103];
        v108 = *(_QWORD *)v107;
        v109 = v62;
        v110 = v64;
        v111 = &v62[16 * v64];
        v112 = *((_QWORD *)v111 + 1);
        v113 = v136;
        sub_1001DC110((char *)(v104 + 40 * *(_QWORD *)v107), (char *)(v104 + 40 * *(_QWORD *)v111), v104 + 40 * v112, v134);
        v136 = v113;
        if (v113)
        {
LABEL_100:
          v115 = v125;
          swift_bridgeObjectRelease(v106);
          v115[2] = 0;
          v116 = v115;
          goto LABEL_115;
        }
        if (v112 < v108)
          goto LABEL_117;
        if (v110 > *((_QWORD *)v106 + 2))
          goto LABEL_118;
        *(_QWORD *)v107 = v108;
        *(_QWORD *)&v109[16 * v103 + 8] = v112;
        v114 = *((_QWORD *)v106 + 2);
        if (v110 >= v114)
          goto LABEL_119;
        v14 = v106;
        v15 = v114 - 1;
        memmove(v111, v111 + 16, 16 * (v114 - 1 - v110));
        v62 = v109;
        *((_QWORD *)v106 + 2) = v114 - 1;
        v92 = v114 > 2;
        a1 = v135;
        v13 = v105;
        v6 = v131;
        v4 = v132;
        if (!v92)
          goto LABEL_14;
      }
    }
    v15 = 1;
    a1 = v135;
LABEL_14:
    v7 = a1[1];
    if (v13 >= v7)
      goto LABEL_103;
  }
  if (v13 >= v7)
    goto LABEL_52;
LABEL_33:
  if (__OFSUB__(v13, v16))
    goto LABEL_136;
  if (v13 - v16 >= v126)
    goto LABEL_52;
  if (__OFADD__(v16, v126))
    goto LABEL_139;
  if (v16 + v126 >= v7)
    v46 = v7;
  else
    v46 = v16 + v126;
  if (v46 >= v16)
  {
    if (v13 != v46)
    {
      v128 = v14;
      v129 = v46;
      v47 = 40 * v13 - 40;
      do
      {
        v133 = v47;
        while (1)
        {
          v48 = v13;
          v49 = *a1 + v47;
          sub_100056284(v49 + 40, (uint64_t)&v141);
          sub_100056284(v49, (uint64_t)v138);
          v50 = a1;
          v51 = v142;
          v52 = v143;
          sub_100029550(&v141, v142);
          (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v51, v52);
          v53 = v139;
          v54 = v140;
          sub_100029550(v138, v139);
          (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v53, v54);
          LOBYTE(v53) = static Date.< infix(_:_:)(v6, v4);
          v55 = *(void (**)(char *, uint64_t))(v137 + 8);
          v56 = v144;
          v55(v4, v144);
          v55(v6, v56);
          sub_100029574(v138);
          sub_100029574(&v141);
          if ((v53 & 1) == 0)
            break;
          v57 = *v50;
          if (!*v50)
            goto LABEL_141;
          a1 = v50;
          v58 = v57 + v47;
          sub_10003D3AC((__int128 *)(v57 + v47 + 40), (uint64_t)&v141);
          v59 = *(_OWORD *)(v58 + 16);
          *(_OWORD *)(v58 + 40) = *(_OWORD *)v58;
          *(_OWORD *)(v58 + 56) = v59;
          *(_QWORD *)(v58 + 72) = *(_QWORD *)(v58 + 32);
          sub_10003D3AC(&v141, v58);
          v47 -= 40;
          ++v16;
          v13 = v48;
          if (v48 == v16)
            goto LABEL_43;
        }
        a1 = v50;
        v13 = v48;
LABEL_43:
        ++v13;
        v47 = v133 + 40;
        v16 = v130;
      }
      while (v13 != v129);
      v13 = v129;
      v14 = v128;
    }
    goto LABEL_52;
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

uint64_t sub_100056080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v27 = a1;
  v7 = type metadata accessor for Date(0);
  v29 = *(_QWORD *)(v7 - 8);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v8);
  v13 = (char *)&v25 - v12;
  v36 = a3;
  v26 = a2;
  if (a3 != a2)
  {
    v14 = 40 * v36 - 40;
LABEL_5:
    v15 = v27;
    v28 = v14;
    while (1)
    {
      v16 = *a4 + v14;
      sub_100056284(v16 + 40, (uint64_t)&v33);
      sub_100056284(v16, (uint64_t)v30);
      v17 = v34;
      v18 = v35;
      sub_100029550(&v33, v34);
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);
      v19 = v31;
      v20 = v32;
      sub_100029550(v30, v31);
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20);
      LOBYTE(v19) = static Date.< infix(_:_:)(v13, v10);
      v21 = *(void (**)(char *, uint64_t))(v29 + 8);
      v21(v10, v7);
      v21(v13, v7);
      sub_100029574(v30);
      result = sub_100029574(&v33);
      if ((v19 & 1) == 0)
      {
LABEL_4:
        v14 = v28 + 40;
        if (++v36 == v26)
          return result;
        goto LABEL_5;
      }
      v22 = *a4;
      if (!*a4)
        break;
      v23 = v22 + v14;
      sub_10003D3AC((__int128 *)(v22 + v14 + 40), (uint64_t)&v33);
      v24 = *(_OWORD *)(v23 + 16);
      *(_OWORD *)(v23 + 40) = *(_OWORD *)v23;
      *(_OWORD *)(v23 + 56) = v24;
      *(_QWORD *)(v23 + 72) = *(_QWORD *)(v23 + 32);
      result = sub_10003D3AC(&v33, v23);
      v14 -= 40;
      if (v36 == ++v15)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100056284(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_QWORD *sub_1000562C8(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  id v54;
  id v55;
  id v56;
  uint64_t v57;
  void *v59;
  void *v60;
  void *v61;
  uint64_t v62;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v57 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v57 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v57);
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Date(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain(v7);
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (_QWORD *)((char *)v4 + v13);
    v16 = (_QWORD *)((char *)a2 + v13);
    v62 = v16[1];
    *v15 = *v16;
    v15[1] = v62;
    *((_BYTE *)v4 + v14) = *((_BYTE *)a2 + v14);
    v17 = a3[8];
    v18 = a3[9];
    v19 = (_QWORD *)((char *)v4 + v17);
    v20 = (_QWORD *)((char *)a2 + v17);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = (_QWORD *)((char *)v4 + v18);
    v23 = (_QWORD *)((char *)a2 + v18);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = a3[10];
    v26 = a3[11];
    v59 = *(void **)((char *)a2 + v25);
    *(_QWORD *)((char *)v4 + v25) = v59;
    v61 = *(void **)((char *)a2 + v26);
    *(_QWORD *)((char *)v4 + v26) = v61;
    v27 = a3[12];
    v28 = a3[13];
    v60 = *(void **)((char *)a2 + v27);
    *(_QWORD *)((char *)v4 + v27) = v60;
    *(_QWORD *)((char *)v4 + v28) = *(_QWORD *)((char *)a2 + v28);
    v29 = a3[15];
    *((_BYTE *)v4 + a3[14]) = *((_BYTE *)a2 + a3[14]);
    *((_BYTE *)v4 + v29) = *((_BYTE *)a2 + v29);
    v30 = a3[17];
    *(_QWORD *)((char *)v4 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
    *(_QWORD *)((char *)v4 + v30) = *(_QWORD *)((char *)a2 + v30);
    v31 = a3[18];
    v32 = a3[19];
    v33 = (_QWORD *)((char *)v4 + v31);
    v34 = (_QWORD *)((char *)a2 + v31);
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    *((_BYTE *)v4 + v32) = *((_BYTE *)a2 + v32);
    v36 = a3[21];
    *((_BYTE *)v4 + a3[20]) = *((_BYTE *)a2 + a3[20]);
    *((_BYTE *)v4 + v36) = *((_BYTE *)a2 + v36);
    v37 = a3[23];
    *((_BYTE *)v4 + a3[22]) = *((_BYTE *)a2 + a3[22]);
    *((_BYTE *)v4 + v37) = *((_BYTE *)a2 + v37);
    v38 = a3[24];
    v39 = a3[25];
    v40 = (_QWORD *)((char *)v4 + v38);
    v41 = (_QWORD *)((char *)a2 + v38);
    v42 = v41[1];
    *v40 = *v41;
    v40[1] = v42;
    v43 = (_QWORD *)((char *)v4 + v39);
    v44 = (_QWORD *)((char *)a2 + v39);
    v45 = v44[1];
    *v43 = *v44;
    v43[1] = v45;
    v46 = a3[27];
    *((_BYTE *)v4 + a3[26]) = *((_BYTE *)a2 + a3[26]);
    *((_BYTE *)v4 + v46) = *((_BYTE *)a2 + v46);
    v47 = a3[29];
    *((_BYTE *)v4 + a3[28]) = *((_BYTE *)a2 + a3[28]);
    *((_BYTE *)v4 + v47) = *((_BYTE *)a2 + v47);
    v48 = a3[31];
    *((_BYTE *)v4 + a3[30]) = *((_BYTE *)a2 + a3[30]);
    v49 = a3[32];
    v50 = (char *)v4 + v49;
    v51 = (char *)a2 + v49;
    *((_BYTE *)v4 + v48) = *((_BYTE *)a2 + v48);
    v52 = type metadata accessor for PeopleListPersonRow.State(0);
    v53 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16);
    swift_bridgeObjectRetain(v62);
    swift_bridgeObjectRetain(v21);
    swift_bridgeObjectRetain(v24);
    v54 = v59;
    v55 = v61;
    v56 = v60;
    swift_bridgeObjectRetain(v35);
    swift_bridgeObjectRetain(v42);
    swift_bridgeObjectRetain(v45);
    v53(v50, v51, v52);
  }
  return v4;
}

uint64_t sub_100056540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

unint64_t sub_100056580()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D2100;
  if (!qword_1005D2100)
  {
    v1 = type metadata accessor for DispatchWorkItemFlags(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for DispatchWorkItemFlags, v1);
    atomic_store(result, (unint64_t *)&qword_1005D2100);
  }
  return result;
}

id sub_1000565C8()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  int v3;
  char v4;
  char v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  NSObject *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL4 v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint8_t *v24;
  int v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  void *v30;
  uint64_t v31;
  UIMenuElementSize preferredElementSize;
  uint64_t v33;
  uint64_t v34;
  Swift::String v35;
  Class isa;
  uint64_t v38;
  Swift::OpaquePointer v39;
  uint64_t v40;
  UIImage_optional v41;

  v1 = v0;
  v2 = swift_isaMask & *v0;
  v3 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)((char *)v0
                                                  + OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator)
                                      + 16)
                          + OBJC_IVAR____TtC6FindMy19FMConditionProvider_accountsAreSignedIn);
  v4 = sub_100056B04();
  v5 = v4;
  v6 = 0;
  if (v3 == 1 && (v4 & 1) == 0)
    v6 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v2 + 120) + 64))(*(_QWORD *)(v2 + 96));
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v7 = type metadata accessor for Logger(0);
  v8 = sub_100056D88(v7, (uint64_t)qword_1005F5748);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v11 = 67109120;
    HIDWORD(v39._rawValue) = v6 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)((char *)&v39._rawValue + 4, &v40);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "FMListViewController: Base Action Button Visibility: %{BOOL}d", v11, 8u);
    swift_slowDealloc(v11, -1, -1);
  }

  v12 = v1;
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc(20, -1);
    *(_DWORD *)v15 = 67109632;
    BYTE4(v39._rawValue) = (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v2 + 120) + 64))(*(_QWORD *)(v2 + 96)) & 1;
    HIDWORD(v39._rawValue) = BYTE4(v39._rawValue);
    UnsafeMutableRawBufferPointer.copyMemory(from:)((char *)&v39._rawValue + 4, &v40);

    *(_WORD *)(v15 + 8) = 1024;
    HIDWORD(v39._rawValue) = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)((char *)&v39._rawValue + 4, &v40);
    *(_WORD *)(v15 + 14) = 1024;
    HIDWORD(v39._rawValue) = (v5 & 1) == 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)((char *)&v39._rawValue + 4, &v40);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "FMListViewController: canShowAddButton: %{BOOL}d areAccountsSignedIn: %{BOOL}d dataSourceHasContents: %{BOOL}d", (uint8_t *)v15, 0x14u);
    swift_slowDealloc(v15, -1, -1);
  }
  else
  {

    v13 = v12;
  }

  v16 = (uint64_t)sub_100057384();
  v17 = v16;
  v18 = (unint64_t)v16 >> 62;
  if ((unint64_t)v16 >> 62)
  {
    if (v16 < 0)
      v38 = v16;
    else
      v38 = v16 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v16);
    v19 = _CocoaArrayWrapper.endIndex.getter(v38);
    swift_bridgeObjectRelease(v17);
  }
  else
  {
    v19 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v20 = v19 != 0;
  v21 = Logger.logObject.getter(v16);
  v22 = static os_log_type_t.default.getter(v21);
  if (os_log_type_enabled(v21, v22))
  {
    v23 = v19 != 0;
    v24 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v24 = 67109120;
    HIDWORD(v39._rawValue) = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)((char *)&v39._rawValue + 4, &v40);
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "FMListViewController: hasActions: %{BOOL}d", v24, 8u);
    swift_slowDealloc(v24, -1, -1);
  }
  v25 = v6 & v20;

  v27 = Logger.logObject.getter(v26);
  v28 = static os_log_type_t.default.getter(v27);
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)swift_slowAlloc(8, -1);
    *(_DWORD *)v29 = 67109120;
    HIDWORD(v39._rawValue) = v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)((char *)&v39._rawValue + 4, &v40);
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "FMListViewController: Platform Action Button Visibility: %{BOOL}d", v29, 8u);
    swift_slowDealloc(v29, -1, -1);
  }

  v30 = *(Class *)((char *)&v12->isa + qword_1005DD880);
  if (v18)
  {
    if (v17 < 0)
      v33 = v17;
    else
      v33 = v17 & 0xFFFFFFFFFFFFFF8;
    v34 = sub_100006C5C(0, &qword_1005DD918, UIMenuElement_ptr);
    swift_bridgeObjectRetain(v17);
    preferredElementSize = _bridgeCocoaArray<A>(_:)(v33, v34);
    swift_bridgeObjectRelease(v17);
  }
  else
  {
    swift_bridgeObjectRetain(v17);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v31);
    sub_100006C5C(0, &qword_1005DD918, UIMenuElement_ptr);
    preferredElementSize = v17;
  }
  swift_bridgeObjectRelease(v17);
  sub_100006C5C(0, (unint64_t *)&unk_1005DD920, UIMenu_ptr);
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  v41.value.super.isa = 0;
  v41.is_nil = 0;
  isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v35, (Swift::String_optional)0, v41, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v39).super.super.isa;
  objc_msgSend(v30, "setMenu:", isa);

  return objc_msgSend(v30, "setHidden:", v25 ^ 1u);
}

uint64_t sub_100056B04()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v1 = *(void **)(v0 + qword_1005DD850);
  v2 = objc_msgSend(v1, "dataSource");
  if (v2)
  {
    v3 = v2;
    if (qword_1005D1DE8 != -1)
      goto LABEL_22;
    while (1)
    {
      v4 = type metadata accessor for Logger(0);
      sub_100056D88(v4, (uint64_t)qword_1005F5748);
      v5 = swift_unknownObjectRetain_n(v3, 2);
      v6 = Logger.logObject.getter(v5);
      v7 = static os_log_type_t.default.getter(v6);
      if (os_log_type_enabled(v6, v7))
      {
        v8 = (uint8_t *)swift_slowAlloc(12, -1);
        v9 = swift_slowAlloc(32, -1);
        v20 = (uint64_t)v3;
        v21 = v9;
        *(_DWORD *)v8 = 136315138;
        swift_unknownObjectRetain(v3);
        v10 = sub_100053F2C(&qword_1005DD938);
        v11 = String.init<A>(describing:)(&v20, v10);
        v13 = v12;
        v20 = sub_100056DA0(v11, v12, &v21);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v20, &v21);
        swift_unknownObjectRelease_n(v3, 2);
        swift_bridgeObjectRelease(v13);
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMListViewController: data source %s", v8, 0xCu);
        swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v9, -1, -1);
        swift_slowDealloc(v8, -1, -1);

      }
      else
      {

        swift_unknownObjectRelease_n(v3, 2);
      }
      if ((objc_msgSend(v3, "respondsToSelector:", "numberOfSectionsInTableView:") & 1) != 0)
      {
        result = (uint64_t)objc_msgSend(v3, "numberOfSectionsInTableView:", v1);
        if (result < 0)
        {
          __break(1u);
          return result;
        }
        v16 = result;
        if (!result)
        {
          v14 = 1;
LABEL_19:
          swift_unknownObjectRelease(v3);
          return v14;
        }
      }
      else
      {
        v16 = 1;
      }
      v17 = 0;
      while (v16 != v17)
      {
        v18 = (uint64_t)objc_msgSend(v3, "tableView:numberOfRowsInSection:", v1, v17);
        v14 = v18 < 1;
        if (v18 > 0 || v16 - 1 == v17++)
          goto LABEL_19;
      }
      __break(1u);
LABEL_22:
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    }
  }
  return 1;
}

uint64_t sub_100056D88(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t sub_100056DA0(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  void *ObjectType;

  v6 = sub_100056EAC(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = (void *)swift_getObjectType(v6);
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_100056E70((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_100056E70((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain(a2);
  }
  sub_100029574(v12);
  return v7;
}

uint64_t sub_100056E70(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100056EAC(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  int v14;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v12 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v12)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v12] || (char *)__src + v12 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter(0, HIBYTE(a6) & 0xF, __dst, a3);
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_100057108(a5, a6);
    *a1 = v13;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = _StringObject.sharedUTF8.getter(a5, a6);
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Unexpectedly found nil while unwrapping an Optional value", 57, 2, "Swift/StringTesting.swift", 25, 2, 151, 0);
    __break(1u);
LABEL_17:
    LOBYTE(v14) = 2;
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawPointer.initializeMemory overlapping range", 58, 2, "Swift/UnsafeRawPointer.swift", 28, v14, 1173, 0);
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain(a6 & 0xFFFFFFFFFFFFFFFLL);
}

uint64_t sub_100057088(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[24];

  switch(a1)
  {
    case 2:
      v3 = v1 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_cellsViewModel;
      swift_beginAccess(v1 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_cellsViewModel, v5, 0, 0);
      return *(_QWORD *)(*(_QWORD *)v3 + 16);
    case 1:
      v2 = OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_fenceCellModels;
      goto LABEL_7;
    case 0:
      v2 = OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_meCellViewModel;
LABEL_7:
      v3 = v1 + v2;
      return *(_QWORD *)(*(_QWORD *)v3 + 16);
  }
  return 0;
}

uint64_t sub_100057108(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = (uint64_t)sub_10005719C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native(v2) & 1) == 0)
    v2 = sub_100070FD0(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_100070FD0(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

_QWORD *sub_10005719C(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  char v8;
  _QWORD *result;
  int v10;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v4 = HIBYTE(a2) & 0xF;
  else
    v4 = a1 & 0xFFFFFFFFFFFFLL;
  if (v4)
  {
    while (1)
    {
      v5 = sub_100057310(v4, 0);
      if (v4 < 0)
        break;
      v6 = v5;
      v7 = _StringGuts.copyUTF8(into:)(v5 + 4, v4, a1, a2);
      if ((v8 & 1) != 0)
        goto LABEL_14;
      if (v7 == v4)
        return v6;
      LOBYTE(v10) = 2;
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "invalid Collection: less than 'count' elements in collection", 60, 2, "Swift/ContiguousArrayBuffer.swift", 33, v10, 1122, 0);
      __break(1u);
LABEL_10:
      v4 = String.UTF8View._foreignCount()();
      if (!v4)
        return _swiftEmptyArrayStorage;
    }
    LOBYTE(v10) = 2;
    _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableBufferPointer with negative count", 46, 2, "Swift/UnsafeBufferPointer.swift", 31, v10, 71, 0);
    __break(1u);
LABEL_14:
    LOBYTE(v10) = 2;
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Insufficient space allocated to copy string contents", 52, 2, "Swift/StringUTF8View.swift", 26, v10, 430, 0);
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

_QWORD *sub_100057310(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  size_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return _swiftEmptyArrayStorage;
  v4 = sub_100053F2C(&qword_1005D2A88);
  v5 = (_QWORD *)swift_allocObject(v4, v2 + 32, 7);
  v6 = j__malloc_size(v5);
  v5[2] = a1;
  v5[3] = 2 * v6 - 64;
  return v5;
}

uint64_t UITabBarItem.showsLargeContentViewer.getter()
{
  return 1;
}

_QWORD *sub_100057384()
{
  _QWORD *v0;
  _QWORD *v1;
  id v2;
  id v3;
  id v4;
  NSString v5;
  void *v6;
  id v7;
  id v8;
  NSString v9;
  id v10;
  NSString v11;
  id v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  id v19;
  Swift::String v20;
  Swift::String v21;
  Swift::String v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  uint64_t v29;
  _QWORD *v30;
  void *v31;
  id v32;
  NSString v33;
  id v34;
  id v35;
  Swift::String_optional v36;
  Swift::String v37;
  Swift::String v38;
  Swift::String v39;
  uint64_t v40;
  _QWORD *v41;
  void *v42;
  id v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  id v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  id v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  NSString v57;
  int v58;
  id v59;
  NSString v60;
  id v61;
  id v62;
  Swift::String v63;
  Swift::String_optional v64;
  Swift::String v65;
  Swift::String v66;
  id v67;
  id v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  id v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void *comment_8;
  id v84;
  id v85;
  void *v86;
  id v87;
  id v88;
  id v89;
  void *v90;
  id v91;
  id v92;
  uint64_t v93;
  void *v94;
  Swift::String v95;
  Swift::String v96;
  Swift::String v97;
  Swift::String v98;
  Swift::String v99;

  v1 = (_QWORD *)(swift_isaMask & *v0);
  v2 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleTitle2);
  v3 = objc_msgSend((id)objc_opt_self(_UIImageSymbolConfiguration), "configurationWithFont:", v2);

  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  v6 = (void *)objc_opt_self(UIImage);
  v7 = objc_msgSend(v6, "_systemImageNamed:withConfiguration:", v5, v4);

  v8 = v4;
  v9 = String._bridgeToObjectiveC()();
  v92 = v6;
  v87 = objc_msgSend(v6, "systemImageNamed:withConfiguration:", v9, v8);

  v10 = v8;
  v11 = String._bridgeToObjectiveC()();
  v84 = objc_msgSend(v6, "systemImageNamed:withConfiguration:", v11, v10);

  sub_100006C5C(0, (unint64_t *)&unk_1005E4BB0, UIAction_ptr);
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v94 = (void *)objc_opt_self(NSBundle);
  v12 = objc_msgSend(v94, "mainBundle");
  v95._countAndFlagsBits = 0xD000000000000033;
  v95._object = (void *)0x80000001004B93A0;
  v13._object = (void *)0x80000001004B9370;
  v13._countAndFlagsBits = 0xD000000000000021;
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v95);

  v16 = swift_allocObject(&unk_100554608, 24, 7);
  swift_unknownObjectWeakInit(v16 + 16);
  v17 = (_QWORD *)swift_allocObject(&unk_100554630, 56, 7);
  v18 = v1[12];
  v17[2] = v18;
  v82 = v1[13];
  v17[3] = v82;
  v81 = v1[14];
  v17[4] = v81;
  v80 = v1[15];
  v17[5] = v80;
  v17[6] = v16;
  v91 = v7;
  v90 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v15._countAndFlagsBits, v15._object, 0, 0, v7, 0, 0, 0, 0, 0, 0, sub_10027ABF0, v17);
  _StringGuts.grow(_:)(20);
  v19 = objc_msgSend(v94, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
  v20._countAndFlagsBits = 0xD00000000000001DLL;
  v96._countAndFlagsBits = 0xD00000000000002FLL;
  v96._object = (void *)0x80000001004B9400;
  v20._object = (void *)0x80000001004B93E0;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, (Swift::String_optional)0, (NSBundle)v19, v21, v96);

  v23 = swift_allocObject(&unk_100554608, 24, 7);
  swift_unknownObjectWeakInit(v23 + 16);
  v24 = (_QWORD *)swift_allocObject(&unk_100554658, 56, 7);
  v24[2] = v18;
  v24[3] = v82;
  v24[4] = v81;
  v24[5] = v80;
  v24[6] = v23;
  v89 = v87;
  comment_8 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v22._countAndFlagsBits, v22._object, 0, 0, v87, 0, 0, 0, 0, 0, 0, sub_10027AC00, v24);
  _StringGuts.grow(_:)(20);
  v25 = objc_msgSend(v94, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
  v97._object = (void *)0x80000001004B9460;
  v26._object = (void *)0x80000001004B9430;
  v26._countAndFlagsBits = 0xD000000000000021;
  v27._countAndFlagsBits = 0;
  v27._object = (void *)0xE000000000000000;
  v97._countAndFlagsBits = 0xD000000000000033;
  v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, (Swift::String_optional)0, (NSBundle)v25, v27, v97);

  v29 = swift_allocObject(&unk_100554608, 24, 7);
  swift_unknownObjectWeakInit(v29 + 16);
  v30 = (_QWORD *)swift_allocObject(&unk_100554680, 56, 7);
  v30[2] = v18;
  v30[3] = v82;
  v30[4] = v81;
  v30[5] = v80;
  v30[6] = v29;
  v88 = v84;
  v31 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v28._countAndFlagsBits, v28._object, 0, 0, v84, 0, 0, 0, 0, 0, 0, sub_10027AC2C, v30);
  v32 = v10;
  v33 = String._bridgeToObjectiveC()();
  v34 = objc_msgSend(v6, "systemImageNamed:withConfiguration:", v33, v32);

  v86 = v32;
  v35 = objc_msgSend(v94, "mainBundle");
  v36.value._countAndFlagsBits = 0xD000000000000010;
  v98._countAndFlagsBits = 0xD000000000000015;
  v37._countAndFlagsBits = 0xD000000000000022;
  v98._object = (void *)0x80000001004B3420;
  v37._object = (void *)0x80000001004B94A0;
  v36.value._object = (void *)0x80000001004B3400;
  v38._countAndFlagsBits = 0;
  v38._object = (void *)0xE000000000000000;
  v39 = NSLocalizedString(_:tableName:bundle:value:comment:)(v37, v36, (NSBundle)v35, v38, v98);

  v40 = swift_allocObject(&unk_100554608, 24, 7);
  swift_unknownObjectWeakInit(v40 + 16);
  v41 = (_QWORD *)swift_allocObject(&unk_1005546A8, 56, 7);
  v41[2] = v18;
  v41[3] = v82;
  v41[4] = v81;
  v41[5] = v80;
  v41[6] = v40;
  v85 = v34;
  v42 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v39._countAndFlagsBits, v39._object, 0, 0, v34, 0, 0, 0, 0, 0, 0, sub_10027AC34, v41);
  v43 = v31;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v43);
  v45 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v44 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v45 >= v44 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v44 > 1, v45 + 1, 1);
  v46 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v45, v43);
  specialized Array._endMutation()(v46);
  v47 = objc_msgSend((id)objc_opt_self(UIDevice), "currentDevice");
  v48 = objc_msgSend(v47, "userInterfaceIdiom");

  if (v48 == (id)1)
  {
    if (qword_1005D1F60 != -1)
      swift_once(&qword_1005D1F60, sub_100377200);
    if (byte_1005F5E30 == 1)
    {
      v49 = v42;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v49);
      v51 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v50 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v51 >= v50 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v50 > 1, v51 + 1, 1);
      v52 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v51, v49);
      specialized Array._endMutation()(v52);
    }
  }
  v53 = comment_8;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v53);
  v55 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  v54 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v55 >= v54 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v54 > 1, v55 + 1, 1);
  v56 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v55, v53);
  specialized Array._endMutation()(v56);
  v57 = String._bridgeToObjectiveC()();
  v58 = MGGetBoolAnswer();

  if (v58)
  {
    v59 = v32;
    v60 = String._bridgeToObjectiveC()();
    v61 = objc_msgSend(v92, "systemImageNamed:withConfiguration:", v60, v59);

    _StringGuts.grow(_:)(20);
    v62 = objc_msgSend(v94, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
    v63._countAndFlagsBits = 0xD000000000000028;
    v99._countAndFlagsBits = 0xD00000000000003ALL;
    v99._object = (void *)0x80000001004B9520;
    v63._object = (void *)0x80000001004B94F0;
    v64.value._countAndFlagsBits = 0x617A696C61636F4CLL;
    v64.value._object = (void *)0xEC00000031656C62;
    v65._countAndFlagsBits = 0;
    v65._object = (void *)0xE000000000000000;
    v66 = NSLocalizedString(_:tableName:bundle:value:comment:)(v63, v64, (NSBundle)v62, v65, v99);

    v67 = v61;
    v68 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v66._countAndFlagsBits, v66._object, 0, 0, v61, 0, 0, 0, 0, 0, 0, sub_10027A8A0, 0);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v68);
    v70 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v69 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v70 >= v69 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v69 > 1, v70 + 1, 1);
    v71 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v70, v68);
    specialized Array._endMutation()(v71);

  }
  v72 = *(_QWORD *)(*(_QWORD *)(v93 + OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator) + 48);
  v73 = swift_retain(v72);
  v74 = dispatch thunk of FMFManager.friendsOperationsRestricted.getter(v73);
  swift_release(v72);
  if ((v74 & 1) == 0)
  {
    v75 = v90;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v75);
    v77 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
    v76 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v77 >= v76 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v76 > 1, v77 + 1, 1);
    v78 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v77, v75);
    specialized Array._endMutation()(v78);
  }

  return _swiftEmptyArrayStorage;
}

_QWORD *sub_100057E6C(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(char *, uint64_t, uint64_t);
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  id v50;
  __n128 v51;
  char *v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  id v60;
  NSString v61;
  void (*v62)(char *, uint64_t);
  _QWORD *v63;
  _QWORD *v64;
  id v65;
  id v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  int v73;
  uint64_t v74;
  uint64_t *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  char *v81;
  int v82;
  _QWORD *v83;
  void (*v84)(uint64_t, uint64_t, uint64_t, __n128);
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  _QWORD *v89;

  v79 = a2;
  v4 = sub_100053F2C(&qword_1005D38C0);
  v5 = __chkstk_darwin(v4);
  v72 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v8 = (char *)&v70 - v7;
  v9 = type metadata accessor for FMPeopleCellViewModel(0);
  v78 = *(_QWORD *)(v9 - 8);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (uint64_t *)((char *)&v70 - v13);
  v88 = type metadata accessor for FMFFriend(0);
  v80 = *(_QWORD *)(v88 - 8);
  v15 = __chkstk_darwin(v88);
  v81 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v15);
  v86 = (uint64_t)&v70 - v18;
  __chkstk_darwin(v17);
  v87 = (char *)&v70 - v19;
  v20 = sub_100053F2C((uint64_t *)&unk_1005E59F0);
  __chkstk_darwin(v20);
  v22 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy22FMPeopleListDataSource_mediator);
  v23 = *(_QWORD *)(v85 + 48);
  v24 = swift_retain(v23);
  dispatch thunk of FMFManager.preferences.getter(v24);
  swift_release(v23);
  v25 = type metadata accessor for FMFPreferences(0);
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v22, 1, v25) == 1)
  {
    sub_1000051EC((uint64_t)v22, (uint64_t *)&unk_1005E59F0);
    v27 = 1;
  }
  else
  {
    v28 = FMFPreferences.hideLocation.getter();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v25);
    v27 = v28 ^ 1;
  }
  v29 = *(_QWORD *)(a1 + 16);
  v30 = v88;
  if (v29)
  {
    v31 = a1 + ((*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80));
    v74 = *(_QWORD *)(v80 + 72);
    v84 = *(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v80 + 16);
    v71 = a1;
    swift_bridgeObjectRetain(a1);
    v32 = _swiftEmptyArrayStorage;
    v73 = v27 & 1;
    v76 = v12;
    v77 = v8;
    v33 = (uint64_t)v87;
    v75 = v14;
    do
    {
      v34 = v84;
      ((void (*)(uint64_t, uint64_t, uint64_t))v84)(v33, v31, v30);
      v35 = v85;
      v36 = *(_QWORD *)(*(_QWORD *)(v85 + 48) + 64);
      swift_retain(v36);
      v83 = sub_10005848C(v33, 0);
      v37 = swift_release(v36);
      v34(v86, v33, v30, v37);
      v38 = *(_QWORD *)(v35 + 48);
      swift_retain(v35);
      v39 = swift_retain(v38);
      v82 = dispatch thunk of FMFManager.friendsOperationsRestricted.getter(v39);
      swift_release(v38);
      v40 = *(_QWORD *)(v35 + 48);
      v41 = swift_retain(v40);
      v42 = dispatch thunk of FMFManager.contactsController.getter(v41);
      v43 = swift_release(v40);
      FMFFriend.contact.getter(v43);
      v44 = type metadata accessor for FMFContact(0);
      v45 = *(_QWORD *)(v44 - 8);
      v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
      if (v46(v8, 1, v44) == 1)
      {
        sub_1000051EC((uint64_t)v8, &qword_1005D38C0);
        v47 = 0xE200000000000000;
        v48 = 17481;
      }
      else
      {
        v48 = FMFContact.storeUUID.getter();
        v47 = v49;
        (*(void (**)(char *, uint64_t))(v45 + 8))(v8, v44);
      }
      v50 = (id)dispatch thunk of FMFContactsDataController.contact(for:keysToFetch:)(v48, v47, 0);
      swift_bridgeObjectRelease(v47);
      v51 = swift_release(v42);
      v52 = v81;
      v53 = v88;
      v84((uint64_t)v81, (uint64_t)v87, v88, v51);
      if (v50)
      {
        v56 = v75;
        v55 = (uint64_t)v76;
      }
      else
      {
        v57 = (uint64_t)v72;
        FMFFriend.contact.getter(v54);
        if (v46((char *)v57, 1, v44) == 1)
        {
          sub_1000051EC(v57, &qword_1005D38C0);
          v58 = 0xE200000000000000;
        }
        else
        {
          FMFContact.storeUUID.getter();
          v58 = v59;
          (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v57, v44);
        }
        v56 = v75;
        v55 = (uint64_t)v76;
        v60 = objc_allocWithZone((Class)CNContact);
        v61 = String._bridgeToObjectiveC()();
        v50 = objc_msgSend(v60, "initWithIdentifier:", v61, swift_bridgeObjectRelease(v58).n128_f64[0]);

        v53 = v88;
        v52 = v81;
      }
      v62 = *(void (**)(char *, uint64_t))(v80 + 8);
      v62(v52, v53);
      v63 = v83;
      v64 = v83;
      v65 = v79;
      v66 = v79;
      sub_1000C2080(v85, v86, v65, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v63, v82 & 1, v73, (uint64_t)v50, v56);
      sub_10004FC74((uint64_t)v56, v55, type metadata accessor for FMPeopleCellViewModel);
      if ((swift_isUniquelyReferenced_nonNull_native(v32) & 1) == 0)
        v32 = (_QWORD *)sub_10005951C(0, v32[2] + 1, 1, (unint64_t)v32);
      v8 = v77;
      v68 = v32[2];
      v67 = v32[3];
      if (v68 >= v67 >> 1)
        v32 = (_QWORD *)sub_10005951C(v67 > 1, v68 + 1, 1, (unint64_t)v32);
      v32[2] = v68 + 1;
      sub_100051774(v55, (uint64_t)v32+ ((*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80))+ *(_QWORD *)(v78 + 72) * v68, type metadata accessor for FMPeopleCellViewModel);

      sub_10004FCB8((uint64_t)v56, type metadata accessor for FMPeopleCellViewModel);
      v33 = (uint64_t)v87;
      v30 = v88;
      v62(v87, v88);
      v31 += v74;
      --v29;
    }
    while (v29);
    swift_bridgeObjectRelease(v71);
  }
  else
  {
    v32 = _swiftEmptyArrayStorage;
  }
  v89 = v32;
  swift_bridgeObjectRetain_n(v32, 2);
  sub_100059648(&v89);
  swift_bridgeObjectRelease_n(v32, 2);
  return v89;
}

_QWORD *sub_10005848C(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char v13;
  _QWORD *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59[3];

  v3 = v2;
  v5 = *v2;
  v6 = sub_100053F2C(&qword_1005D38C0);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = FMFFriend.contactHandles.getter(v7);
  v11 = swift_bridgeObjectRetain(v10);
  v12 = sub_1000587F0(v11);
  swift_bridgeObjectRelease(v10);
  v46 = v12;
  sub_10005880C((uint64_t *)&v46);
  v13 = a2 & 1;
  swift_bridgeObjectRelease(v10);
  v14 = v46;
  if (!v46[2])
  {
    swift_release(v46);
    goto LABEL_5;
  }
  v15 = v46[5];
  v45 = v46[4];
  swift_bridgeObjectRetain(v15);
  v16 = swift_release(v14);
  FMFFriend.contact.getter(v16);
  v17 = type metadata accessor for FMFContact(0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v9, 1, v17) == 1)
  {
    swift_bridgeObjectRelease(v15);
    v19 = sub_1000051EC((uint64_t)v9, &qword_1005D38C0);
LABEL_5:
    __chkstk_darwin(v19);
    *(&v42 - 4) = (uint64_t)v3;
    *((_BYTE *)&v42 - 24) = v13;
    *(&v42 - 2) = v5;
    v20 = sub_100053F2C(&qword_1005D39E0);
    OS_dispatch_queue.sync<A>(execute:)(&v46, sub_10003605C, &v42 - 6, v20);
    return v46;
  }
  v44 = v5;
  v43 = FMFContact.storeUUID.getter();
  v23 = v22;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v17);
  v24 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v24, "scale");
  v26 = v25;

  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v42 = qword_1005F5980;
  v27 = swift_bridgeObjectRetain(v23);
  v28 = FMFFriend.identifier.getter(v27);
  v30 = v29;
  v31 = __chkstk_darwin(v28);
  *(&v42 - 6) = (uint64_t)v3;
  *(&v42 - 5) = v31;
  v33 = v43;
  v32 = v44;
  *(&v42 - 4) = v30;
  *(&v42 - 3) = v33;
  *(&v42 - 2) = v23;
  *(&v42 - 1) = v32;
  OS_dispatch_queue.sync<A>(execute:)(&v46, sub_1000A0C50, &v42 - 8, &type metadata for String);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v30);
  v35 = v46;
  v34 = v47;
  v37 = (_QWORD *)FMFFriend.identifier.getter(v36);
  v39 = v38;
  v40 = *(_QWORD *)((char *)v3 + qword_1005D38F8);
  v41 = *(_QWORD *)((char *)v3 + qword_1005D38F8 + 8);
  v46 = v37;
  v47 = v38;
  v48 = v33;
  v49 = v23;
  v50 = v45;
  v51 = v15;
  v52 = v13;
  v53 = v35;
  v54 = v34;
  v55 = v26;
  v56 = v42;
  v57 = v40;
  v58 = v41;
  swift_bridgeObjectRetain(v41);
  dispatch thunk of FMImageCache.cachedImage(for:completion:)(v59, &v46, 0, 0);
  swift_bridgeObjectRelease(v41);
  swift_bridgeObjectRelease(v34);
  swift_bridgeObjectRelease(v15);
  swift_bridgeObjectRelease(v23);
  swift_bridgeObjectRelease(v39);
  return (_QWORD *)v59[0];
}

_QWORD *sub_1000587F0(uint64_t a1)
{
  return sub_100059028(a1, (uint64_t *)&unk_1005D2A90, (uint64_t (*)(_QWORD *, _QWORD *, uint64_t, uint64_t))sub_100059114, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100073BB4);
}

void sub_10005880C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = sub_10020CED4(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v4[0] = v2 + 32;
  v4[1] = v3;
  sub_100058874(v4);
  *a1 = v2;
}

void sub_100058874(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  Swift::Int v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  Swift::Int v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  int v20;
  Swift::Int v21;
  uint64_t *v22;
  Swift::Int v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  Swift::Int v31;
  Swift::Int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  Swift::Int v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  Swift::Int v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  unint64_t v46;
  unint64_t v47;
  char *v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  char v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  unint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  _QWORD *v110;
  Swift::Int v111;
  Swift::Int v112;
  Swift::Int v113;
  char *__dst;

  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_100058F5C(0, v3, 1, a1);
      return;
    }
    goto LABEL_154;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
  {
LABEL_162:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return;
  }
  v111 = v4;
  v108 = a1;
  if (v3 < 2)
  {
    v8 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      v12 = _swiftEmptyArrayStorage[2];
      v11 = (char *)_swiftEmptyArrayStorage;
LABEL_120:
      v101 = v11;
      v110 = v8;
      if (v12 < 2)
        goto LABEL_117;
      v102 = *v108;
      while (1)
      {
        v103 = v12 - 2;
        if (v12 < 2)
          goto LABEL_149;
        if (!v102)
          goto LABEL_161;
        v100 = v101;
        v104 = *(_QWORD *)&v101[16 * v103 + 32];
        v105 = *(_QWORD *)&v101[16 * v12 + 24];
        sub_1000D6524((char *)(v102 + 16 * v104), (char *)(v102 + 16 * *(_QWORD *)&v101[16 * v12 + 16]), v102 + 16 * v105, __dst);
        if (v1)
          goto LABEL_116;
        if (v105 < v104)
          goto LABEL_150;
        if ((swift_isUniquelyReferenced_nonNull_native(v100) & 1) == 0)
          v100 = sub_10020CE70((uint64_t)v100);
        if (v103 >= *((_QWORD *)v100 + 2))
          goto LABEL_151;
        v106 = &v100[16 * v103 + 32];
        *(_QWORD *)v106 = v104;
        *((_QWORD *)v106 + 1) = v105;
        v107 = *((_QWORD *)v100 + 2);
        if (v12 > v107)
          goto LABEL_152;
        memmove(&v100[16 * v12 + 16], &v100[16 * v12 + 32], 16 * (v107 - v12));
        v101 = v100;
        *((_QWORD *)v100 + 2) = v107 - 1;
        v12 = v107 - 1;
        if (v107 <= 2)
          goto LABEL_117;
      }
    }
    v110 = _swiftEmptyArrayStorage;
  }
  else
  {
    v6 = v5 >> 1;
    v7 = static Array._allocateBufferUninitialized(minimumCapacity:)(v5 >> 1, &type metadata for String);
    *(_QWORD *)(v7 + 16) = v6;
    v110 = (_QWORD *)v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v109 = v10 + 8;
  v11 = (char *)_swiftEmptyArrayStorage;
  v112 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    v18 = v17[1];
    if (v15 == *v17 && v16 == v18)
    {
      v21 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v20 = 0;
    }
    else
    {
      v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v16, *v17, v18, 1);
      v21 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v22 = (uint64_t *)(v109 + 16 * v21);
    do
    {
      v24 = *(v22 - 1);
      v25 = *v22;
      v26 = (_QWORD *)(v10 + 16 * v9);
      v27 = v26[1];
      if (v24 == *v26 && v25 == v27)
      {
        if ((v20 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v20 ^ _stringCompareWithSmolCheck(_:_:expecting:)(v24, v25, *v26, v27, 1)) & 1) != 0)
      {
        goto LABEL_36;
      }
      v22 += 2;
      v23 = v21 + 1;
      v9 = v21;
      v21 = v23;
    }
    while (v23 < v3);
    v21 = v23;
LABEL_36:
    v9 = v21;
    if ((v20 & 1) != 0)
    {
LABEL_37:
      if (v21 < v13)
        goto LABEL_157;
      if (v13 < v21)
      {
        v29 = 16 * v21;
        v30 = 16 * v13;
        v31 = v21;
        v32 = v13;
        do
        {
          if (v32 != --v31)
          {
            if (!v10)
              goto LABEL_160;
            v33 = v10 + v29;
            v34 = *(_QWORD *)(v10 + v30);
            v35 = *(_QWORD *)(v10 + v30 + 8);
            *(_OWORD *)(v10 + v30) = *(_OWORD *)(v10 + v29 - 16);
            *(_QWORD *)(v33 - 16) = v34;
            *(_QWORD *)(v33 - 8) = v35;
          }
          ++v32;
          v29 -= 16;
          v30 += 16;
        }
        while (v32 < v31);
      }
LABEL_45:
      v9 = v21;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_153;
      if (v9 - v13 < v111)
      {
        if (__OFADD__(v13, v111))
          goto LABEL_155;
        if (v13 + v111 >= v3)
          v36 = v3;
        else
          v36 = v13 + v111;
        if (v36 < v13)
          goto LABEL_156;
        if (v9 != v36)
        {
          v37 = (_QWORD *)(v10 + 16 * v9);
          do
          {
            v38 = (uint64_t *)(v10 + 16 * v9);
            v39 = *v38;
            v40 = v38[1];
            v41 = v13;
            v42 = v37;
            do
            {
              v43 = *(v42 - 2);
              v44 = *(v42 - 1);
              v45 = v39 == v43 && v40 == v44;
              if (v45 || (_stringCompareWithSmolCheck(_:_:expecting:)(v39, v40, v43, v44, 1) & 1) == 0)
                break;
              if (!v10)
                goto LABEL_158;
              v39 = *v42;
              v40 = v42[1];
              *(_OWORD *)v42 = *((_OWORD *)v42 - 1);
              *(v42 - 1) = v40;
              *(v42 - 2) = v39;
              v42 -= 2;
              ++v41;
            }
            while (v9 != v41);
            ++v9;
            v37 += 2;
          }
          while (v9 != v36);
          v9 = v36;
        }
      }
    }
    if (v9 < v13)
    {
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
LABEL_160:
      __break(1u);
LABEL_161:
      __break(1u);
      goto LABEL_162;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
      v11 = sub_10020C830(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v47 = *((_QWORD *)v11 + 2);
    v46 = *((_QWORD *)v11 + 3);
    v12 = v47 + 1;
    if (v47 >= v46 >> 1)
      v11 = sub_10020C830((char *)(v46 > 1), v47 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v48 = v11 + 32;
    v49 = &v11[16 * v47 + 32];
    *(_QWORD *)v49 = v13;
    *((_QWORD *)v49 + 1) = v9;
    if (v47)
      break;
    v12 = 1;
LABEL_15:
    v3 = v112;
    if (v9 >= v112)
    {
      v8 = v110;
      goto LABEL_120;
    }
  }
  v113 = v9;
  while (1)
  {
    v50 = v12 - 1;
    if (v12 >= 4)
    {
      v55 = &v48[16 * v12];
      v56 = *((_QWORD *)v55 - 8);
      v57 = *((_QWORD *)v55 - 7);
      v61 = __OFSUB__(v57, v56);
      v58 = v57 - v56;
      if (v61)
        goto LABEL_137;
      v60 = *((_QWORD *)v55 - 6);
      v59 = *((_QWORD *)v55 - 5);
      v61 = __OFSUB__(v59, v60);
      v53 = v59 - v60;
      v54 = v61;
      if (v61)
        goto LABEL_138;
      v62 = v12 - 2;
      v63 = &v48[16 * v12 - 32];
      v65 = *(_QWORD *)v63;
      v64 = *((_QWORD *)v63 + 1);
      v61 = __OFSUB__(v64, v65);
      v66 = v64 - v65;
      if (v61)
        goto LABEL_140;
      v61 = __OFADD__(v53, v66);
      v67 = v53 + v66;
      if (v61)
        goto LABEL_143;
      if (v67 >= v58)
      {
        v85 = &v48[16 * v50];
        v87 = *(_QWORD *)v85;
        v86 = *((_QWORD *)v85 + 1);
        v61 = __OFSUB__(v86, v87);
        v88 = v86 - v87;
        if (v61)
          goto LABEL_147;
        v78 = v53 < v88;
        goto LABEL_105;
      }
    }
    else
    {
      if (v12 != 3)
      {
        v79 = *((_QWORD *)v11 + 4);
        v80 = *((_QWORD *)v11 + 5);
        v61 = __OFSUB__(v80, v79);
        v72 = v80 - v79;
        v73 = v61;
        goto LABEL_99;
      }
      v52 = *((_QWORD *)v11 + 4);
      v51 = *((_QWORD *)v11 + 5);
      v61 = __OFSUB__(v51, v52);
      v53 = v51 - v52;
      v54 = v61;
    }
    if ((v54 & 1) != 0)
      goto LABEL_139;
    v62 = v12 - 2;
    v68 = &v48[16 * v12 - 32];
    v70 = *(_QWORD *)v68;
    v69 = *((_QWORD *)v68 + 1);
    v71 = __OFSUB__(v69, v70);
    v72 = v69 - v70;
    v73 = v71;
    if (v71)
      goto LABEL_142;
    v74 = &v48[16 * v50];
    v76 = *(_QWORD *)v74;
    v75 = *((_QWORD *)v74 + 1);
    v61 = __OFSUB__(v75, v76);
    v77 = v75 - v76;
    if (v61)
      goto LABEL_145;
    if (__OFADD__(v72, v77))
      goto LABEL_146;
    if (v72 + v77 >= v53)
    {
      v78 = v53 < v77;
LABEL_105:
      if (v78)
        v50 = v62;
      goto LABEL_107;
    }
LABEL_99:
    if ((v73 & 1) != 0)
      goto LABEL_141;
    v81 = &v48[16 * v50];
    v83 = *(_QWORD *)v81;
    v82 = *((_QWORD *)v81 + 1);
    v61 = __OFSUB__(v82, v83);
    v84 = v82 - v83;
    if (v61)
      goto LABEL_144;
    if (v84 < v72)
      goto LABEL_15;
LABEL_107:
    v89 = v50 - 1;
    if (v50 - 1 >= v12)
    {
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
      goto LABEL_148;
    }
    v90 = v10;
    if (!v10)
      goto LABEL_159;
    v91 = v11;
    v92 = &v48[16 * v89];
    v93 = *(_QWORD *)v92;
    v94 = v48;
    v95 = v50;
    v96 = &v48[16 * v50];
    v97 = *((_QWORD *)v96 + 1);
    v98 = v90;
    sub_1000D6524((char *)(v90 + 16 * *(_QWORD *)v92), (char *)(v90 + 16 * *(_QWORD *)v96), v90 + 16 * v97, __dst);
    if (v1)
      break;
    if (v97 < v93)
      goto LABEL_134;
    if (v95 > *((_QWORD *)v91 + 2))
      goto LABEL_135;
    *(_QWORD *)v92 = v93;
    *(_QWORD *)&v94[16 * v89 + 8] = v97;
    v99 = *((_QWORD *)v91 + 2);
    if (v95 >= v99)
      goto LABEL_136;
    v11 = v91;
    v12 = v99 - 1;
    memmove(v96, v96 + 16, 16 * (v99 - 1 - v95));
    v48 = v94;
    *((_QWORD *)v91 + 2) = v99 - 1;
    v10 = v98;
    v9 = v113;
    if (v99 <= 2)
      goto LABEL_15;
  }
  v100 = v91;
LABEL_116:
  v101 = v100;
LABEL_117:
  swift_bridgeObjectRelease(v101);
  v110[2] = 0;
  swift_bridgeObjectRelease(v110);
}

uint64_t sub_100058F5C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = *(v12 - 2);
      v14 = *(v12 - 1);
      v15 = result == v13 && v10 == v14;
      if (v15 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(result, v10, v13, v14, 1), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

_QWORD *sub_100059028(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD *, _QWORD *, uint64_t, uint64_t), void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[5];

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return _swiftEmptyArrayStorage;
  v8 = sub_100053F2C(a2);
  v9 = (_QWORD *)swift_allocObject(v8, 16 * v4 + 32, 7);
  v10 = j__malloc_size(v9);
  v11 = v10 - 32;
  if (v10 < 32)
    v11 = v10 - 17;
  v9[2] = v4;
  v9[3] = 2 * (v11 >> 4);
  v12 = a3(v19, v9 + 4, v4, a1);
  v13 = v19[0];
  v14 = v19[1];
  v15 = v19[2];
  v16 = v19[3];
  v17 = v19[4];
  swift_bridgeObjectRetain(a1);
  a4(v13, v14, v15, v16, v17);
  if (v12 != v4)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v9;
}

uint64_t sub_100059114(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain(v21);
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain(v21);
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100059310(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_29:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_31:
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_100053F2C(a5);
  v14 = *(_QWORD *)(a6(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size(v18);
  if (!v15)
    goto LABEL_29;
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_31;
  }
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = *(_QWORD *)(a6(0) - 8);
  v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v23 = (unint64_t)v18 + v22;
  if ((a1 & 1) != 0)
  {
    v24 = a4 + v22;
    if ((unint64_t)v18 < a4 || v23 >= v24 + *(_QWORD *)(v21 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v18 + v22, v24);
    }
    else if (v18 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v18 + v22, v24);
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_100059530(0, v11, v23, a4, a6);
  }
  swift_bridgeObjectRelease(a4);
  return (uint64_t)v18;
}

uint64_t sub_10005951C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100059310(a1, a2, a3, a4, &qword_1005D2AE8, type metadata accessor for FMPeopleCellViewModel);
}

uint64_t sub_100059530(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v9 = *(_QWORD *)(a5(0) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 72);
  v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
  v13 = v11 * v5;
  v14 = a3 + v13;
  v15 = v12 + v13;
  if (v12 >= v14 || v15 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v14;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

void sub_100059648(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *(_QWORD *)(type metadata accessor for FMPeopleCellViewModel(0) - 8);
  v3 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v3 = (_QWORD *)sub_1000596C8(v3);
  v4 = v3[2];
  v5[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1000598D0(v5);
  *a1 = v3;
}

uint64_t sub_1000596C8(_QWORD *a1)
{
  return sub_1000598BC(0, a1[2], 0, a1);
}

uint64_t sub_1000596DC(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  unint64_t v27;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_100053F2C(a5);
  v14 = *(_QWORD *)(a6(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size(v18);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
    goto LABEL_34;
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = *(_QWORD *)(a6(0) - 8);
  v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v23 = (char *)v18 + v22;
  v24 = (char *)a4 + v22;
  if ((a1 & 1) != 0)
  {
    if (v18 < a4 || v23 >= &v24[*(_QWORD *)(v21 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack(v23, v24);
    }
    else if (v18 != a4)
    {
      swift_arrayInitWithTakeBackToFront(v23, v24);
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v25 = *(_QWORD *)(v21 + 72) * v11;
  v26 = &v23[v25];
  v27 = (unint64_t)&v24[v25];
  if (v24 >= v26 || (unint64_t)v23 >= v27)
  {
    swift_arrayInitWithCopy(v23);
LABEL_32:
    swift_release(a4);
    return (uint64_t)v18;
  }
LABEL_36:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1000598BC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1000596DC(a1, a2, a3, a4, &qword_1005D2AE8, type metadata accessor for FMPeopleCellViewModel);
}

void sub_1000598D0(uint64_t *a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  Swift::Int v21;
  Swift::Int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  Swift::Int v28;
  unint64_t v29;
  Swift::Int v30;
  Swift::Int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  double v38;
  double v39;
  BOOL v40;
  uint64_t v41;
  double v42;
  double v43;
  uint64_t *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  Swift::String v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  Swift::String v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  Swift::Int v62;
  Swift::Int v63;
  uint64_t v64;
  Swift::Int v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  double v69;
  double v70;
  BOOL v71;
  uint64_t v72;
  double v73;
  double v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  Swift::String v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  Swift::String v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  BOOL v93;
  _BOOL4 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _BOOL4 v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  _QWORD *v104;
  uint64_t v105;
  double v106;
  double v107;
  BOOL v108;
  uint64_t v109;
  double v110;
  double v111;
  uint64_t *v112;
  uint64_t v113;
  void *v114;
  uint64_t v115;
  Swift::String v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  void *v122;
  Swift::String v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  uint64_t v130;
  uint64_t v131;
  Swift::Int v132;
  uint64_t v133;
  Swift::Int v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  char *v142;
  char *v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  BOOL v155;
  unint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  BOOL v165;
  uint64_t v166;
  char v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  BOOL v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  unint64_t v190;
  uint64_t v191;
  uint64_t v192;
  unint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  unint64_t v197;
  _QWORD *v198;
  _QWORD *v199;
  Swift::Int v200;
  uint64_t *v201;
  char *v202;
  uint64_t *v203;
  uint64_t *v204;
  Swift::Int v205;
  uint64_t v206;
  Swift::Int v207;
  unint64_t v208;
  uint64_t v209;
  _QWORD *v210;
  uint64_t v211;
  int *v212;
  uint64_t *v213;
  uint64_t v214;
  Swift::Int v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t *v224;

  v2 = (int *)type metadata accessor for FMPeopleCellViewModel(0);
  v209 = *((_QWORD *)v2 - 1);
  v3 = __chkstk_darwin(v2);
  v206 = (uint64_t)&v199 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v216 = (uint64_t)&v199 - v6;
  v7 = __chkstk_darwin(v5);
  v9 = (uint64_t *)((char *)&v199 - v8);
  v10 = __chkstk_darwin(v7);
  v213 = (uint64_t *)((char *)&v199 - v11);
  v12 = __chkstk_darwin(v10);
  v210 = (_QWORD **)((char *)&v199 - v13);
  v14 = __chkstk_darwin(v12);
  v16 = (uint64_t *)((char *)&v199 - v15);
  v17 = __chkstk_darwin(v14);
  v19 = (uint64_t *)((char *)&v199 - v18);
  __chkstk_darwin(v17);
  v203 = (uint64_t *)((char *)&v199 - v20);
  v219 = a1;
  v21 = a1[1];
  v22 = _minimumMergeRunLength(_:)(v21);
  if (v22 >= v21)
  {
    if (v21 < 0)
      goto LABEL_163;
    if (v21)
      sub_100051468(0, v21, 1, v219);
    return;
  }
  if (v21 >= 0)
    v23 = v21;
  else
    v23 = v21 + 1;
  if (v21 < -1)
    goto LABEL_171;
  v224 = v9;
  v200 = v22;
  v201 = v19;
  if (v21 < 2)
  {
    v27 = (char *)_swiftEmptyArrayStorage;
    v208 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v209 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v209 + 80));
    v199 = _swiftEmptyArrayStorage;
    if (v21 != 1)
    {
      v29 = _swiftEmptyArrayStorage[2];
LABEL_130:
      if (v29 >= 2)
      {
        v191 = *v219;
        v192 = v211;
        do
        {
          v193 = v29 - 2;
          if (v29 < 2)
            goto LABEL_158;
          if (!v191)
            goto LABEL_170;
          v194 = *(_QWORD *)&v27[16 * v193 + 32];
          v195 = *(_QWORD *)&v27[16 * v29 + 24];
          sub_1004693EC(v191 + *(_QWORD *)(v209 + 72) * v194, v191 + *(_QWORD *)(v209 + 72) * *(_QWORD *)&v27[16 * v29 + 16], (uint64_t *)(v191 + *(_QWORD *)(v209 + 72) * v195), v208);
          if (v192)
            break;
          if (v195 < v194)
            goto LABEL_159;
          if ((swift_isUniquelyReferenced_nonNull_native(v27) & 1) == 0)
            v27 = sub_10020CE70((uint64_t)v27);
          if (v193 >= *((_QWORD *)v27 + 2))
            goto LABEL_160;
          v196 = &v27[16 * v193 + 32];
          *(_QWORD *)v196 = v194;
          *((_QWORD *)v196 + 1) = v195;
          v197 = *((_QWORD *)v27 + 2);
          if (v29 > v197)
            goto LABEL_161;
          memmove(&v27[16 * v29 + 16], &v27[16 * v29 + 32], 16 * (v197 - v29));
          *((_QWORD *)v27 + 2) = v197 - 1;
          v29 = v197 - 1;
        }
        while (v197 > 2);
      }
LABEL_141:
      swift_bridgeObjectRelease(v27);
      v198 = v199;
      v199[2] = 0;
      swift_bridgeObjectRelease(v198);
      return;
    }
  }
  else
  {
    v24 = v23 >> 1;
    v25 = static Array._allocateBufferUninitialized(minimumCapacity:)(v23 >> 1, v2);
    *(_QWORD *)(v25 + 16) = v24;
    v26 = *(unsigned __int8 *)(v209 + 80);
    v199 = (_QWORD *)v25;
    v208 = v25 + ((v26 + 32) & ~v26);
  }
  v28 = 0;
  v27 = (char *)_swiftEmptyArrayStorage;
  v212 = v2;
  v204 = v16;
  while (1)
  {
    v30 = v28;
    v31 = v28 + 1;
    if (v28 + 1 >= v21)
    {
      ++v28;
      v61 = (uint64_t)v224;
    }
    else
    {
      v32 = *v219;
      v33 = *(_QWORD *)(v209 + 72);
      v34 = v203;
      sub_10004FC74(*v219 + v33 * v31, (uint64_t)v203, type metadata accessor for FMPeopleCellViewModel);
      v207 = v30;
      v214 = v32;
      v218 = v33;
      v35 = v32 + v33 * v30;
      v36 = v201;
      sub_10004FC74(v35, (uint64_t)v201, type metadata accessor for FMPeopleCellViewModel);
      v37 = v2[17];
      v38 = *(double *)((char *)v34 + v37);
      v39 = *(double *)((char *)v36 + v37);
      v40 = v38 < v39;
      v215 = v21;
      if (v38 != v39)
        goto LABEL_45;
      v41 = v2[16];
      v42 = *(double *)((char *)v34 + v41);
      v43 = *(double *)((char *)v36 + v41);
      v40 = v42 < v43;
      if (v42 == v43)
      {
        v44 = (uint64_t *)((char *)v34 + v2[6]);
        v45 = v44[1];
        v47 = *v34;
        v46 = (void *)v34[1];
        v222 = *v44;
        v223 = v45;
        swift_bridgeObjectRetain(v45);
        v48 = (uint64_t)v34;
        v49._countAndFlagsBits = v47;
        v49._object = v46;
        String.append(_:)(v49);
        v50 = v222;
        v51 = v223;
        v52 = (uint64_t *)((char *)v36 + v2[6]);
        v53 = v52[1];
        v55 = *v36;
        v54 = (void *)v36[1];
        v222 = *v52;
        v223 = v53;
        swift_bridgeObjectRetain(v53);
        v56._countAndFlagsBits = v55;
        v56._object = v54;
        String.append(_:)(v56);
        v57 = v222;
        v58 = v223;
        v222 = v50;
        v223 = v51;
        v21 = v215;
        v220 = v57;
        v221 = v58;
        v59 = sub_1000517B8();
        v60 = StringProtocol.caseInsensitiveCompare<A>(_:)(&v220, &type metadata for String, &type metadata for String, v59, v59);
        swift_bridgeObjectRelease(v51);
        swift_bridgeObjectRelease(v58);
        LODWORD(v217) = v60 == -1;
      }
      else
      {
LABEL_45:
        v98 = v40;
        LODWORD(v217) = v98;
        v48 = (uint64_t)v34;
      }
      v61 = (uint64_t)v224;
      v99 = v204;
      sub_10004FCB8((uint64_t)v36, type metadata accessor for FMPeopleCellViewModel);
      sub_10004FCB8(v48, type metadata accessor for FMPeopleCellViewModel);
      v30 = v207;
      if (v207 + 2 >= v21)
      {
        v28 = v207 + 2;
        if (!(_DWORD)v217)
          goto LABEL_20;
      }
      else
      {
        v202 = v27;
        v100 = v218 * v31;
        v101 = v214;
        v28 = v207 + 2;
        v102 = v218 * (v207 + 2);
        while (1)
        {
          sub_10004FC74(v101 + v102, (uint64_t)v99, type metadata accessor for FMPeopleCellViewModel);
          v103 = v210;
          sub_10004FC74(v101 + v100, (uint64_t)v210, type metadata accessor for FMPeopleCellViewModel);
          v104 = v103;
          v105 = v2[17];
          v106 = *(double *)((char *)v99 + v105);
          v107 = *(double *)((char *)v103 + v105);
          v108 = v106 < v107;
          if (v106 != v107)
            goto LABEL_56;
          v109 = v2[16];
          v110 = *(double *)((char *)v99 + v109);
          v111 = *(double *)((char *)v103 + v109);
          v108 = v110 < v111;
          if (v110 == v111)
          {
            v112 = (uint64_t *)((char *)v99 + v2[6]);
            v113 = v112[1];
            v115 = *v99;
            v114 = (void *)v99[1];
            v222 = *v112;
            v223 = v113;
            swift_bridgeObjectRetain(v113);
            v116._countAndFlagsBits = v115;
            v116._object = v114;
            String.append(_:)(v116);
            v118 = v222;
            v117 = v223;
            v119 = (_QWORD *)((char *)v210 + v2[6]);
            v120 = v119[1];
            v121 = *v210;
            v122 = (void *)v210[1];
            v222 = *v119;
            v223 = v120;
            swift_bridgeObjectRetain(v120);
            v123._countAndFlagsBits = v121;
            v123._object = v122;
            String.append(_:)(v123);
            v124 = v222;
            v125 = v223;
            v222 = v118;
            v223 = v117;
            v99 = v204;
            v220 = v124;
            v221 = v125;
            v126 = sub_1000517B8();
            v127 = StringProtocol.caseInsensitiveCompare<A>(_:)(&v220, &type metadata for String, &type metadata for String, v126, v126);
            swift_bridgeObjectRelease(v117);
            v128 = v125;
            v2 = v212;
            swift_bridgeObjectRelease(v128);
            v104 = v210;
            v93 = v127 == -1;
            v61 = (uint64_t)v224;
            v129 = v93;
          }
          else
          {
LABEL_56:
            v129 = v108;
          }
          sub_10004FCB8((uint64_t)v104, type metadata accessor for FMPeopleCellViewModel);
          sub_10004FCB8((uint64_t)v99, type metadata accessor for FMPeopleCellViewModel);
          if ((_DWORD)v217 != v129)
            break;
          v101 += v218;
          ++v28;
          v21 = v215;
          if (v215 == v28)
          {
            v28 = v215;
            v27 = v202;
            v30 = v207;
            if ((_DWORD)v217)
              goto LABEL_66;
            goto LABEL_20;
          }
        }
        v27 = v202;
        v30 = v207;
        v21 = v215;
        if (!(_DWORD)v217)
          goto LABEL_20;
      }
LABEL_66:
      if (v28 < v30)
        goto LABEL_164;
      if (v30 < v28)
      {
        v202 = v27;
        v130 = 0;
        v131 = v218 * (v28 - 1);
        v132 = v30;
        v133 = v28 * v218;
        v134 = v132;
        v135 = v132 * v218;
        do
        {
          if (v134 != v28 + v130 - 1)
          {
            v138 = v214;
            if (!v214)
              goto LABEL_169;
            v139 = v214 + v135;
            v217 = v214 + v131;
            sub_100051774(v214 + v135, v206, type metadata accessor for FMPeopleCellViewModel);
            if (v135 < v131 || v139 >= v138 + v133)
            {
              v136 = v138 + v135;
              v137 = v217;
              swift_arrayInitWithTakeFrontToBack(v136, v217);
            }
            else
            {
              v137 = v217;
              if (v135 != v131)
                swift_arrayInitWithTakeBackToFront(v139, v217);
            }
            sub_100051774(v206, v137, type metadata accessor for FMPeopleCellViewModel);
            v61 = (uint64_t)v224;
          }
          ++v134;
          --v130;
          v131 -= v218;
          v133 -= v218;
          v135 += v218;
        }
        while (v134 < v28 + v130);
        v27 = v202;
        v2 = v212;
        v30 = v207;
        v21 = v215;
      }
    }
LABEL_20:
    if (v28 >= v21)
      goto LABEL_80;
    if (__OFSUB__(v28, v30))
      goto LABEL_162;
    if (v28 - v30 >= v200)
      goto LABEL_80;
    if (__OFADD__(v30, v200))
      goto LABEL_165;
    v62 = v30 + v200 >= v21 ? v21 : v30 + v200;
    if (v62 < v30)
      break;
    if (v28 != v62)
    {
      v207 = v30;
      v202 = v27;
      v214 = *(_QWORD *)(v209 + 72);
      v217 = v28 * v214;
      v218 = v214 * (v28 - 1);
      v205 = v62;
      do
      {
        v64 = 0;
        v65 = v207;
        v215 = v28;
        while (1)
        {
          v66 = *v219;
          v67 = v213;
          sub_10004FC74(v217 + v64 + *v219, (uint64_t)v213, type metadata accessor for FMPeopleCellViewModel);
          sub_10004FC74(v218 + v64 + v66, v61, type metadata accessor for FMPeopleCellViewModel);
          v68 = v2[17];
          v69 = *(double *)((char *)v67 + v68);
          v70 = *(double *)(v61 + v68);
          v71 = v69 < v70;
          if (v69 != v70)
            goto LABEL_39;
          v72 = v2[16];
          v73 = *(double *)((char *)v67 + v72);
          v74 = *(double *)(v61 + v72);
          v71 = v73 < v74;
          if (v73 == v74)
          {
            v75 = (uint64_t *)((char *)v67 + v2[6]);
            v76 = v75[1];
            v77 = (uint64_t)v67;
            v79 = *v67;
            v78 = (void *)v67[1];
            v222 = *v75;
            v223 = v76;
            swift_bridgeObjectRetain(v76);
            v80._countAndFlagsBits = v79;
            v80._object = v78;
            String.append(_:)(v80);
            v82 = v222;
            v81 = v223;
            v83 = (uint64_t *)((char *)v224 + v2[6]);
            v84 = v83[1];
            v85 = *v224;
            v86 = (void *)v224[1];
            v222 = *v83;
            v223 = v84;
            swift_bridgeObjectRetain(v84);
            v87._countAndFlagsBits = v85;
            v87._object = v86;
            String.append(_:)(v87);
            v88 = v222;
            v89 = v223;
            v222 = v82;
            v223 = v81;
            v220 = v88;
            v221 = v89;
            v90 = sub_1000517B8();
            v91 = StringProtocol.caseInsensitiveCompare<A>(_:)(&v220, &type metadata for String, &type metadata for String, v90, v90);
            swift_bridgeObjectRelease(v81);
            v92 = v89;
            v2 = v212;
            swift_bridgeObjectRelease(v92);
            v93 = v91 == -1;
            v61 = (uint64_t)v224;
            v94 = v93;
          }
          else
          {
LABEL_39:
            v77 = (uint64_t)v67;
            v94 = v71;
          }
          sub_10004FCB8(v61, type metadata accessor for FMPeopleCellViewModel);
          sub_10004FCB8(v77, type metadata accessor for FMPeopleCellViewModel);
          if (!v94)
            break;
          v95 = *v219;
          v63 = v215;
          if (!*v219)
            goto LABEL_167;
          v96 = v95 + v217 + v64;
          v97 = v95 + v218 + v64;
          sub_100051774(v96, v216, type metadata accessor for FMPeopleCellViewModel);
          swift_arrayInitWithTakeFrontToBack(v96, v97);
          sub_100051774(v216, v97, type metadata accessor for FMPeopleCellViewModel);
          v64 -= v214;
          ++v65;
          v61 = (uint64_t)v224;
          if (v63 == v65)
            goto LABEL_31;
        }
        v63 = v215;
LABEL_31:
        v28 = v63 + 1;
        v218 += v214;
        v217 += v214;
      }
      while (v28 != v205);
      v28 = v205;
      v27 = v202;
      v30 = v207;
    }
LABEL_80:
    if (v28 < v30)
      goto LABEL_157;
    if ((swift_isUniquelyReferenced_nonNull_native(v27) & 1) == 0)
      v27 = sub_10020C830(0, *((_QWORD *)v27 + 2) + 1, 1, v27);
    v141 = *((_QWORD *)v27 + 2);
    v140 = *((_QWORD *)v27 + 3);
    v29 = v141 + 1;
    if (v141 >= v140 >> 1)
      v27 = sub_10020C830((char *)(v140 > 1), v141 + 1, 1, v27);
    *((_QWORD *)v27 + 2) = v29;
    v142 = v27 + 32;
    v143 = &v27[16 * v141 + 32];
    *(_QWORD *)v143 = v30;
    *((_QWORD *)v143 + 1) = v28;
    if (v141)
    {
      while (1)
      {
        v144 = v29 - 1;
        if (v29 >= 4)
        {
          v149 = &v142[16 * v29];
          v150 = *((_QWORD *)v149 - 8);
          v151 = *((_QWORD *)v149 - 7);
          v155 = __OFSUB__(v151, v150);
          v152 = v151 - v150;
          if (v155)
            goto LABEL_146;
          v154 = *((_QWORD *)v149 - 6);
          v153 = *((_QWORD *)v149 - 5);
          v155 = __OFSUB__(v153, v154);
          v147 = v153 - v154;
          v148 = v155;
          if (v155)
            goto LABEL_147;
          v156 = v29 - 2;
          v157 = &v142[16 * v29 - 32];
          v159 = *(_QWORD *)v157;
          v158 = *((_QWORD *)v157 + 1);
          v155 = __OFSUB__(v158, v159);
          v160 = v158 - v159;
          if (v155)
            goto LABEL_149;
          v155 = __OFADD__(v147, v160);
          v161 = v147 + v160;
          if (v155)
            goto LABEL_152;
          if (v161 >= v152)
          {
            v179 = &v142[16 * v144];
            v181 = *(_QWORD *)v179;
            v180 = *((_QWORD *)v179 + 1);
            v155 = __OFSUB__(v180, v181);
            v182 = v180 - v181;
            if (v155)
              goto LABEL_156;
            v172 = v147 < v182;
            goto LABEL_117;
          }
        }
        else
        {
          if (v29 != 3)
          {
            v173 = *((_QWORD *)v27 + 4);
            v174 = *((_QWORD *)v27 + 5);
            v155 = __OFSUB__(v174, v173);
            v166 = v174 - v173;
            v167 = v155;
            goto LABEL_111;
          }
          v146 = *((_QWORD *)v27 + 4);
          v145 = *((_QWORD *)v27 + 5);
          v155 = __OFSUB__(v145, v146);
          v147 = v145 - v146;
          v148 = v155;
        }
        if ((v148 & 1) != 0)
          goto LABEL_148;
        v156 = v29 - 2;
        v162 = &v142[16 * v29 - 32];
        v164 = *(_QWORD *)v162;
        v163 = *((_QWORD *)v162 + 1);
        v165 = __OFSUB__(v163, v164);
        v166 = v163 - v164;
        v167 = v165;
        if (v165)
          goto LABEL_151;
        v168 = &v142[16 * v144];
        v170 = *(_QWORD *)v168;
        v169 = *((_QWORD *)v168 + 1);
        v155 = __OFSUB__(v169, v170);
        v171 = v169 - v170;
        if (v155)
          goto LABEL_154;
        if (__OFADD__(v166, v171))
          goto LABEL_155;
        if (v166 + v171 >= v147)
        {
          v172 = v147 < v171;
LABEL_117:
          if (v172)
            v144 = v156;
          goto LABEL_119;
        }
LABEL_111:
        if ((v167 & 1) != 0)
          goto LABEL_150;
        v175 = &v142[16 * v144];
        v177 = *(_QWORD *)v175;
        v176 = *((_QWORD *)v175 + 1);
        v155 = __OFSUB__(v176, v177);
        v178 = v176 - v177;
        if (v155)
          goto LABEL_153;
        if (v178 < v166)
          goto LABEL_14;
LABEL_119:
        v183 = v144 - 1;
        if (v144 - 1 >= v29)
        {
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
          goto LABEL_166;
        }
        if (!*v219)
          goto LABEL_168;
        v184 = v27;
        v185 = &v142[16 * v183];
        v186 = *(_QWORD *)v185;
        v187 = &v142[16 * v144];
        v188 = *((_QWORD *)v187 + 1);
        v189 = v211;
        sub_1004693EC(*v219 + *(_QWORD *)(v209 + 72) * *(_QWORD *)v185, *v219 + *(_QWORD *)(v209 + 72) * *(_QWORD *)v187, (uint64_t *)(*v219 + *(_QWORD *)(v209 + 72) * v188), v208);
        v211 = v189;
        if (v189)
        {
          v27 = v184;
          goto LABEL_141;
        }
        if (v188 < v186)
          goto LABEL_143;
        if (v144 > *((_QWORD *)v184 + 2))
          goto LABEL_144;
        *(_QWORD *)v185 = v186;
        *(_QWORD *)&v142[16 * v183 + 8] = v188;
        v190 = *((_QWORD *)v184 + 2);
        if (v144 >= v190)
          goto LABEL_145;
        v27 = v184;
        v29 = v190 - 1;
        memmove(&v142[16 * v144], v187 + 16, 16 * (v190 - 1 - v144));
        *((_QWORD *)v184 + 2) = v190 - 1;
        v2 = v212;
        if (v190 <= 2)
          goto LABEL_14;
      }
    }
    v29 = 1;
LABEL_14:
    v21 = v219[1];
    if (v28 >= v21)
      goto LABEL_130;
  }
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
LABEL_168:
  __break(1u);
LABEL_169:
  __break(1u);
LABEL_170:
  __break(1u);
LABEL_171:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

uint64_t sub_10005A5F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v21;

  v4 = type metadata accessor for FMAllowLocationAlertCellViewModel(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v10 = (char *)&v21 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v11 && a1 != a2)
  {
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v13 = *(_QWORD *)(v8 + 72);
    do
    {
      sub_10004FC74(a1 + v12, (uint64_t)v10, type metadata accessor for FMAllowLocationAlertCellViewModel);
      sub_10004FC74(a2 + v12, (uint64_t)v7, type metadata accessor for FMAllowLocationAlertCellViewModel);
      v14 = *((_QWORD *)v10 + 2);
      v15 = *((_QWORD *)v10 + 3);
      v16 = *((_QWORD *)v7 + 2);
      v17 = *((_QWORD *)v7 + 3);
      if (v14 == v16 && v15 == v17)
      {
        sub_10004FCB8((uint64_t)v7, type metadata accessor for FMAllowLocationAlertCellViewModel);
        sub_10004FCB8((uint64_t)v10, type metadata accessor for FMAllowLocationAlertCellViewModel);
      }
      else
      {
        v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, v16, v17, 0);
        sub_10004FCB8((uint64_t)v7, type metadata accessor for FMAllowLocationAlertCellViewModel);
        sub_10004FCB8((uint64_t)v10, type metadata accessor for FMAllowLocationAlertCellViewModel);
        if ((v19 & 1) == 0)
          return 0;
      }
      v12 += v13;
      --v11;
    }
    while (v11);
  }
  return 1;
}

void sub_10005A74C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *i;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  unint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  id v42;
  char v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  float v51;
  char **v52;
  SEL *v53;
  char **v54;
  double v55;
  id v56;
  double v57;
  void *v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t *v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int EnumCaseMultiPayload;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  unsigned int v89;
  double v90;
  char v91;
  unsigned int v92;
  double v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t *v97;
  uint64_t *v98;
  uint64_t *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  _BYTE v110[32];
  uint64_t v111;
  uint64_t v112[4];
  uint64_t v113;

  v1 = sub_100053F2C((uint64_t *)&unk_1005D7A50);
  __chkstk_darwin(v1);
  v107 = (uint64_t)&v96 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_100053F2C((uint64_t *)&unk_1005E1110);
  __chkstk_darwin(v3);
  v105 = (uint64_t *)((char *)&v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v106 = type metadata accessor for FMAnnotationIdentifier(0);
  v104 = *(_QWORD *)(v106 - 8);
  v5 = __chkstk_darwin(v106);
  v97 = (uint64_t *)((char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __chkstk_darwin(v5);
  v99 = (uint64_t *)((char *)&v96 - v8);
  v9 = __chkstk_darwin(v7);
  v96 = (uint64_t *)((char *)&v96 - v10);
  v11 = __chkstk_darwin(v9);
  v98 = (uint64_t *)((char *)&v96 - v12);
  v13 = __chkstk_darwin(v11);
  v101 = (char *)&v96 - v14;
  __chkstk_darwin(v13);
  v103 = (uint64_t)&v96 - v15;
  v109 = v0;
  v16 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy19FMMapViewController_mapView], "_annotationViews");
  v17 = (uint64_t)_swiftEmptyArrayStorage;
  v102 = v1;
  if (v16)
  {
    v18 = v16;
    v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v16, (char *)&type metadata for Any + 8);

    v113 = (uint64_t)_swiftEmptyArrayStorage;
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      v21 = v19 + 32;
      swift_bridgeObjectRetain(v19);
      do
      {
        sub_100056E70(v21, (uint64_t)v112);
        sub_100056E70((uint64_t)v112, (uint64_t)v110);
        v23 = sub_100006C5C(0, &qword_1005E3BD0, MKAnnotationView_ptr);
        if ((swift_dynamicCast(&v111, v110, (char *)&type metadata for Any + 8, v23, 6) & 1) == 0)
          v111 = 0;
        v24 = sub_100029574(v112);
        v25 = v111;
        if (v111)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v24);
          v27 = *(_QWORD *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v26 = *(_QWORD *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v27 >= v26 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v26 > 1, v27 + 1, 1);
          v22 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v25);
          specialized Array._endMutation()(v22);
        }
        v21 += 32;
        --v20;
      }
      while (v20);
      swift_bridgeObjectRelease(v19);
      v28 = v113;
    }
    else
    {
      v28 = (uint64_t)_swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease(v19);
    v112[0] = (uint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)v28 >> 62)
      goto LABEL_29;
    v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
    for (i = v109; v29; v29 = _CocoaArrayWrapper.endIndex.getter(v44))
    {
      v31 = 0;
      v108 = OBJC_IVAR____TtC6FindMy19FMMapViewController_userTrackingAnnotationView;
      v32 = v28 & 0xC000000000000001;
      v33 = v28 & 0xFFFFFFFFFFFFFF8;
      while (1)
      {
        if (v32)
        {
          v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v31, v28);
        }
        else
        {
          if (v31 >= *(_QWORD *)(v33 + 16))
            goto LABEL_28;
          v36 = *(id *)(v28 + 8 * v31 + 32);
        }
        v37 = v36;
        v38 = v31 + 1;
        if (__OFADD__(v31, 1))
          break;
        v39 = v28;
        v40 = *(void **)&v109[v108];
        if (v40
          && (sub_100006C5C(0, &qword_1005E3BD0, MKAnnotationView_ptr),
              v41 = v37,
              v42 = v40,
              v43 = static NSObject.== infix(_:_:)(v41, v42),
              v41,
              v42,
              (v43 & 1) != 0))
        {

        }
        else
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v36);
          v34 = *(_QWORD *)(v112[0] + 16);
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v34);
          v35 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v34, v37);
          specialized ContiguousArray._endMutation()(v35);
        }
        ++v31;
        v28 = v39;
        if (v38 == v29)
        {
          v17 = v112[0];
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      if (v28 < 0)
        v44 = v28;
      else
        v44 = v28 & 0xFFFFFFFFFFFFFF8;
      v45 = v109;
    }
    v17 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_34:
    swift_bridgeObjectRelease(v28);

  }
  if (v17 < 0 || (v17 & 0x4000000000000000) != 0)
  {
    v94 = swift_bridgeObjectRetain(v17);
    v46 = (uint64_t)sub_1003EFB04(v94);
    swift_bridgeObjectRelease(v17);
  }
  else
  {
    v46 = v17 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v17);
  }
  v112[0] = v46;
  sub_10005B280(v112, (uint64_t (*)(uint64_t))sub_10005B308, (uint64_t (*)(_QWORD *))sub_10005B320);
  swift_bridgeObjectRelease(v17);
  v47 = v112[0];
  if (v112[0] < 0 || (v112[0] & 0x4000000000000000) != 0)
  {
    v95 = swift_bridgeObjectRetain(v112[0]);
    v48 = _CocoaArrayWrapper.endIndex.getter(v95);
    swift_release(v47);
    if (v48)
      goto LABEL_41;
LABEL_84:
    swift_release(v47);
    return;
  }
  v48 = *(_QWORD *)(v112[0] + 16);
  if (!v48)
    goto LABEL_84;
LABEL_41:
  if (v48 >= 1)
  {
    v49 = 0;
    v50 = v47 & 0xC000000000000001;
    v51 = 500.0;
    v52 = &selRef_toggleEditingActionWithSender_;
    v53 = (SEL *)&unk_1005AA000;
    v54 = &selRef_toggleEditingActionWithSender_;
    v100 = v48;
    v108 = v47;
    while (1)
    {
      if (v50)
        v56 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v49, v47);
      else
        v56 = *(id *)(v47 + 8 * v49 + 32);
      v58 = v56;
      *(float *)&v57 = v51;
      objc_msgSend(v56, v52[30], v57);
      v59 = objc_msgSend(v58, v53[152]);
      if (!v59)
        goto LABEL_44;
      v60 = v59;
      v61 = type metadata accessor for FMAnnotation();
      v62 = swift_dynamicCastClass(v60, v61);
      if (v62)
        break;
      swift_unknownObjectRelease(v60);
LABEL_44:
      ++v49;
      v51 = v51 + 1.0;
      LODWORD(v55) = 1148846080;
      objc_msgSend(v58, v54[31], v55);

      if (v48 == v49)
        goto LABEL_84;
    }
    v63 = (_QWORD *)v62;
    v64 = v105;
    sub_100357368(v105);
    v65 = v106;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v104 + 48))(v64, 1, v106) == 1)
    {
      swift_unknownObjectRelease(v60);
      sub_1000051EC((uint64_t)v64, (uint64_t *)&unk_1005E1110);
      v52 = &selRef_toggleEditingActionWithSender_;
    }
    else
    {
      v66 = v50;
      v67 = v103;
      v68 = sub_100051774((uint64_t)v64, v103, type metadata accessor for FMAnnotationIdentifier);
      v69 = (uint64_t)v101;
      (*(void (**)(uint64_t))((swift_isaMask & *v63) + 0x190))(v68);
      v70 = v107;
      v71 = v107 + *(int *)(v102 + 48);
      sub_10004FC74(v67, v107, type metadata accessor for FMAnnotationIdentifier);
      sub_100051774(v69, v71, type metadata accessor for FMAnnotationIdentifier);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v70, v65);
      if (EnumCaseMultiPayload != 4)
      {
        if (EnumCaseMultiPayload != 2)
        {
          sub_10004FCB8(v103, type metadata accessor for FMAnnotationIdentifier);
          goto LABEL_68;
        }
        v73 = v98;
        sub_10004FC74(v107, (uint64_t)v98, type metadata accessor for FMAnnotationIdentifier);
        v74 = *v73;
        v75 = v73[1];
        v50 = v66;
        if (swift_getEnumCaseMultiPayload(v71, v106) != 4)
        {
          sub_10004FCB8(v103, type metadata accessor for FMAnnotationIdentifier);
          swift_bridgeObjectRelease(v75);
          goto LABEL_69;
        }
        v76 = v96;
        sub_10004FC74(v71, (uint64_t)v96, type metadata accessor for FMAnnotationIdentifier);
        v78 = *v76;
        v77 = v76[1];
        swift_bridgeObjectRelease(v76[3]);
        v79 = v78;
        v80 = v74 == v78;
        v48 = v100;
        if (v80 && v75 == v77)
        {
          swift_bridgeObjectRelease_n(v75, 2);
          v47 = v108;
        }
        else
        {
          v88 = _stringCompareWithSmolCheck(_:_:expecting:)(v74, v75, v79, v77, 0);
          swift_bridgeObjectRelease(v77);
          swift_bridgeObjectRelease(v75);
          v47 = v108;
          if ((v88 & 1) == 0)
          {
            sub_10004FCB8(v103, type metadata accessor for FMAnnotationIdentifier);
            v52 = &selRef_toggleEditingActionWithSender_;
            goto LABEL_71;
          }
        }
        v89 = objc_msgSend(v58, "isSelected");
        v52 = &selRef_toggleEditingActionWithSender_;
        LODWORD(v90) = 1148829696;
        if (v89)
          *(float *)&v90 = 1000.0;
        objc_msgSend(v58, "setZPriority:", v90);
        swift_unknownObjectRelease(v60);
        sub_10004FCB8(v103, type metadata accessor for FMAnnotationIdentifier);
        sub_10004FCB8(v71, type metadata accessor for FMAnnotationIdentifier);
        sub_10004FCB8(v107, type metadata accessor for FMAnnotationIdentifier);
        goto LABEL_53;
      }
      v81 = v99;
      sub_10004FC74(v107, (uint64_t)v99, type metadata accessor for FMAnnotationIdentifier);
      v83 = *v81;
      v82 = v81[1];
      swift_bridgeObjectRelease(v81[3]);
      if (swift_getEnumCaseMultiPayload(v71, v106) != 4)
      {
        sub_10004FCB8(v103, type metadata accessor for FMAnnotationIdentifier);
        swift_bridgeObjectRelease(v82);
LABEL_68:
        v50 = v66;
LABEL_69:
        v48 = v100;
        goto LABEL_70;
      }
      v84 = v97;
      sub_10004FC74(v71, (uint64_t)v97, type metadata accessor for FMAnnotationIdentifier);
      v85 = *v84;
      v86 = v84[3];
      v87 = v84[1];
      swift_bridgeObjectRelease(v86);
      v50 = v66;
      if (v83 == v85 && v82 == v87)
      {
        swift_bridgeObjectRelease_n(v82, 2);
        v48 = v100;
      }
      else
      {
        v91 = _stringCompareWithSmolCheck(_:_:expecting:)(v83, v82, v85, v87, 0);
        swift_bridgeObjectRelease(v87);
        swift_bridgeObjectRelease(v82);
        v48 = v100;
        if ((v91 & 1) == 0)
        {
          sub_10004FCB8(v103, type metadata accessor for FMAnnotationIdentifier);
LABEL_70:
          v52 = &selRef_toggleEditingActionWithSender_;
          v47 = v108;
LABEL_71:
          v53 = (SEL *)&unk_1005AA000;
          v54 = &selRef_toggleEditingActionWithSender_;
          swift_unknownObjectRelease(v60);
          sub_1000051EC(v107, (uint64_t *)&unk_1005D7A50);
          goto LABEL_44;
        }
      }
      v92 = objc_msgSend(v58, "isSelected");
      v52 = &selRef_toggleEditingActionWithSender_;
      LODWORD(v93) = 1148829696;
      if (v92)
        *(float *)&v93 = 1000.0;
      objc_msgSend(v58, "setZPriority:", v93);
      swift_unknownObjectRelease(v60);
      sub_10004FCB8(v103, type metadata accessor for FMAnnotationIdentifier);
      sub_10004FCB8(v71, type metadata accessor for FMAnnotationIdentifier);
      sub_10004FCB8(v107, type metadata accessor for FMAnnotationIdentifier);
    }
    v47 = v108;
LABEL_53:
    v53 = (SEL *)&unk_1005AA000;
    v54 = &selRef_toggleEditingActionWithSender_;
    goto LABEL_44;
  }
  __break(1u);
  swift_release(v112[0]);
  __break(1u);
}

id sub_10005B144()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  Class isa;
  id v8;
  objc_super v10;

  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for FMTabBar();
  v1 = objc_msgSendSuper2(&v10, "traitCollection");
  v2 = sub_100053F2C(&qword_1005D2F10);
  v3 = swift_allocObject(v2, 48, 7);
  *(_OWORD *)(v3 + 16) = xmmword_1004820B0;
  *(_QWORD *)(v3 + 32) = v1;
  v4 = (void *)objc_opt_self(UITraitCollection);
  v5 = v1;
  v6 = objc_msgSend(v4, "traitCollectionWithHorizontalSizeClass:", 1);
  *(_QWORD *)(v3 + 40) = v6;
  specialized Array._endMutation()(v6);
  sub_100006C5C(0, (unint64_t *)&unk_1005D9C40, UITraitCollection_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v8 = objc_msgSend(v4, "traitCollectionWithTraitsFromCollections:", isa, swift_bridgeObjectRelease(v3).n128_f64[0]);

  return v8;
}

uint64_t type metadata accessor for FMTabBar()
{
  return objc_opt_self(_TtC6FindMy8FMTabBar);
}

uint64_t sub_10005B280(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(_QWORD *))
{
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  v6 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*a1);
  *a1 = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v6 = a2(v6);
    *a1 = v6;
  }
  v8 = *(_QWORD *)(v6 + 16);
  v11[0] = v6 + 32;
  v11[1] = v8;
  v9 = a3(v11);
  return specialized ContiguousArray._endMutation()(v9);
}

uint64_t sub_10005B30C(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(_QWORD *)(a1 + 16), 0, a1);
}

void sub_10005B320(uint64_t *a1)
{
  uint64_t v1;
  uint64_t *v2;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  Swift::Int v11;
  unint64_t v12;
  Swift::Int v13;
  Swift::Int v14;
  void *v15;
  id v16;
  id v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  Swift::Int v28;
  _BOOL4 v29;
  uint64_t v30;
  double v31;
  Swift::Int v32;
  double v33;
  double v34;
  double v35;
  double v36;
  Swift::Int v37;
  Swift::Int v38;
  Swift::Int v39;
  double v40;
  void *v41;
  id v42;
  id v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  uint64_t *v58;
  Swift::Int v59;
  Swift::Int v60;
  uint64_t *v61;
  uint64_t v62;
  Swift::Int v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  char *v67;
  char *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  BOOL v80;
  unint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  char v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  BOOL v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  void *v117;
  Swift::Int v118;
  uint64_t v119;
  Swift::Int v120;
  void *v121;
  id v122;
  id v123;
  double v124;
  double v125;
  double v126;
  double v127;
  double v128;
  double v129;
  double v130;
  double v131;
  double v132;
  double v133;
  double v134;
  double v135;
  double v136;
  void *v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  unint64_t v144;
  char *v145;
  uint64_t *v146;
  uint64_t v147;
  Swift::Int v148;
  Swift::Int v149;
  Swift::Int v150;
  Swift::Int v151;
  Swift::Int v152;
  void **__dst;
  uint64_t v154;
  char v155;
  char v156;
  char v157;
  char v158;
  char v159;
  char v160;
  uint64_t v161;

  v2 = a1;
  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 < v3)
  {
    if (v3 >= 0)
      v5 = v3;
    else
      v5 = v3 + 1;
    if (v3 < -1)
    {
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
      __break(1u);
      return;
    }
    v6 = v4;
    if (v3 < 2)
    {
      v10 = (char *)_swiftEmptyArrayStorage;
      v161 = (uint64_t)_swiftEmptyArrayStorage;
      __dst = (void **)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
      if (v3 != 1)
      {
        v12 = _swiftEmptyArrayStorage[2];
        if (v12 < 2)
          goto LABEL_120;
        goto LABEL_123;
      }
    }
    else
    {
      v7 = v5 >> 1;
      v8 = sub_100006C5C(0, &qword_1005E3BD0, MKAnnotationView_ptr);
      v9 = static Array._allocateBufferUninitialized(minimumCapacity:)(v7, v8);
      *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v7;
      __dst = (void **)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
      v161 = v9;
    }
    v11 = 0;
    v146 = v2;
    v10 = (char *)_swiftEmptyArrayStorage;
    v154 = *v2;
    v147 = *v2 - 8;
    v152 = v3;
LABEL_15:
    v13 = v11;
    v14 = v11 + 1;
    v151 = v11;
    if (v11 + 1 >= v3)
    {
LABEL_44:
      if (v14 >= v3)
        goto LABEL_56;
      goto LABEL_48;
    }
    v148 = v11 + 1;
    v15 = *(void **)(v154 + 8 * v11);
    v16 = *(id *)(v154 + 8 * v14);
    v17 = v15;
    objc_msgSend(v16, "coordinate");
    v19 = v18;
    objc_msgSend(v17, "coordinate");
    v21 = v20;
    objc_msgSend(v16, "coordinate");
    v23 = v22;
    v25 = v24;
    objc_msgSend(v17, "coordinate");
    if (v19 == v21)
    {
      if (v25 == v27)
      {

        v28 = v13 + 2;
        v29 = &v156 < &v155;
        v30 = v154;
        if (v28 >= v152)
        {
          if (&v156 >= &v155)
            goto LABEL_47;
          goto LABEL_33;
        }
LABEL_24:
        v38 = v28;
        v39 = v148;
        do
        {
          v28 = v38;
          v41 = *(void **)(v30 + 8 * v39);
          v42 = *(id *)(v30 + 8 * v38);
          v43 = v41;
          objc_msgSend(v42, "coordinate");
          v45 = v44;
          objc_msgSend(v43, "coordinate");
          v47 = v46;
          objc_msgSend(v42, "coordinate");
          v49 = v48;
          v51 = v50;
          objc_msgSend(v43, "coordinate");
          if (v45 == v47)
          {
            if (v51 == v53)
            {

              if ((((&v158 >= &v157) ^ v29) & 1) == 0)
                goto LABEL_32;
            }
            else
            {
              objc_msgSend(v42, "coordinate");
              v55 = v54;
              objc_msgSend(v43, "coordinate");
              v57 = v56;

              if (v29 == v57 >= v55)
                goto LABEL_32;
            }
          }
          else
          {
            v40 = v52;

            if (((v29 ^ (v40 >= v49)) & 1) == 0)
              goto LABEL_32;
          }
          v38 = v28 + 1;
          v39 = v28;
        }
        while (v28 + 1 < v152);
        ++v28;
        if (!v29)
        {
LABEL_47:
          v14 = v28;
          v13 = v151;
          v3 = v152;
          if (v28 >= v152)
            goto LABEL_56;
LABEL_48:
          if (__OFSUB__(v14, v13))
            goto LABEL_156;
          if (v14 - v13 >= v6)
            goto LABEL_56;
          if (__OFADD__(v13, v6))
            goto LABEL_159;
          if (v13 + v6 >= v3)
            v63 = v3;
          else
            v63 = v13 + v6;
          if (v63 < v13)
          {
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
          }
          if (v14 == v63)
          {
LABEL_56:
            v64 = v154;
            if (v14 < v13)
              goto LABEL_151;
            goto LABEL_57;
          }
          v145 = v10;
          v116 = v147 + 8 * v14;
          v64 = v154;
          v150 = v63;
LABEL_106:
          v117 = *(void **)(v154 + 8 * v14);
          v118 = v13;
          v119 = v116;
          while (1)
          {
            v120 = v14;
            v121 = *(void **)v119;
            v122 = v117;
            v123 = v121;
            objc_msgSend(v122, "coordinate");
            v125 = v124;
            objc_msgSend(v123, "coordinate");
            v127 = v126;
            objc_msgSend(v122, "coordinate");
            v129 = v128;
            v131 = v130;
            objc_msgSend(v123, "coordinate");
            if (v125 == v127)
            {
              if (v131 == v133)
              {

                if (&v160 >= &v159)
                  goto LABEL_104;
                goto LABEL_114;
              }
              objc_msgSend(v122, "coordinate");
              v129 = v135;
              objc_msgSend(v123, "coordinate");
              v134 = v136;
            }
            else
            {
              v134 = v132;
            }

            if (v134 >= v129)
            {
LABEL_104:
              v14 = v120;
LABEL_105:
              ++v14;
              v116 += 8;
              v13 = v151;
              if (v14 != v150)
                goto LABEL_106;
              v14 = v150;
              v10 = v145;
              if (v150 < v151)
                goto LABEL_151;
LABEL_57:
              v149 = v14;
              if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
                v10 = sub_10020C830(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
              v66 = *((_QWORD *)v10 + 2);
              v65 = *((_QWORD *)v10 + 3);
              v12 = v66 + 1;
              if (v66 >= v65 >> 1)
                v10 = sub_10020C830((char *)(v65 > 1), v66 + 1, 1, v10);
              *((_QWORD *)v10 + 2) = v12;
              v67 = v10 + 32;
              v68 = &v10[16 * v66 + 32];
              *(_QWORD *)v68 = v13;
              *((_QWORD *)v68 + 1) = v14;
              if (v66)
              {
                while (2)
                {
                  v69 = v12 - 1;
                  if (v12 >= 4)
                  {
                    v74 = &v67[16 * v12];
                    v75 = *((_QWORD *)v74 - 8);
                    v76 = *((_QWORD *)v74 - 7);
                    v80 = __OFSUB__(v76, v75);
                    v77 = v76 - v75;
                    if (v80)
                      goto LABEL_140;
                    v79 = *((_QWORD *)v74 - 6);
                    v78 = *((_QWORD *)v74 - 5);
                    v80 = __OFSUB__(v78, v79);
                    v72 = v78 - v79;
                    v73 = v80;
                    if (v80)
                      goto LABEL_141;
                    v81 = v12 - 2;
                    v82 = &v67[16 * v12 - 32];
                    v84 = *(_QWORD *)v82;
                    v83 = *((_QWORD *)v82 + 1);
                    v80 = __OFSUB__(v83, v84);
                    v85 = v83 - v84;
                    if (v80)
                      goto LABEL_143;
                    v80 = __OFADD__(v72, v85);
                    v86 = v72 + v85;
                    if (v80)
                      goto LABEL_146;
                    if (v86 >= v77)
                    {
                      v104 = &v67[16 * v69];
                      v106 = *(_QWORD *)v104;
                      v105 = *((_QWORD *)v104 + 1);
                      v80 = __OFSUB__(v105, v106);
                      v107 = v105 - v106;
                      if (v80)
                        goto LABEL_150;
                      v97 = v72 < v107;
                    }
                    else
                    {
LABEL_75:
                      if ((v73 & 1) != 0)
                        goto LABEL_142;
                      v81 = v12 - 2;
                      v87 = &v67[16 * v12 - 32];
                      v89 = *(_QWORD *)v87;
                      v88 = *((_QWORD *)v87 + 1);
                      v90 = __OFSUB__(v88, v89);
                      v91 = v88 - v89;
                      v92 = v90;
                      if (v90)
                        goto LABEL_145;
                      v93 = &v67[16 * v69];
                      v95 = *(_QWORD *)v93;
                      v94 = *((_QWORD *)v93 + 1);
                      v80 = __OFSUB__(v94, v95);
                      v96 = v94 - v95;
                      if (v80)
                        goto LABEL_148;
                      if (__OFADD__(v91, v96))
                        goto LABEL_149;
                      if (v91 + v96 < v72)
                        goto LABEL_87;
                      v97 = v72 < v96;
                    }
                    if (v97)
                      v69 = v81;
                  }
                  else
                  {
                    if (v12 == 3)
                    {
                      v71 = *((_QWORD *)v10 + 4);
                      v70 = *((_QWORD *)v10 + 5);
                      v80 = __OFSUB__(v70, v71);
                      v72 = v70 - v71;
                      v73 = v80;
                      goto LABEL_75;
                    }
                    v98 = *((_QWORD *)v10 + 4);
                    v99 = *((_QWORD *)v10 + 5);
                    v80 = __OFSUB__(v99, v98);
                    v91 = v99 - v98;
                    v92 = v80;
LABEL_87:
                    if ((v92 & 1) != 0)
                      goto LABEL_144;
                    v100 = &v67[16 * v69];
                    v102 = *(_QWORD *)v100;
                    v101 = *((_QWORD *)v100 + 1);
                    v80 = __OFSUB__(v101, v102);
                    v103 = v101 - v102;
                    if (v80)
                      goto LABEL_147;
                    if (v103 < v91)
                      goto LABEL_14;
                  }
                  v108 = v69 - 1;
                  if (v69 - 1 >= v12)
                  {
                    __break(1u);
LABEL_137:
                    __break(1u);
LABEL_138:
                    __break(1u);
LABEL_139:
                    __break(1u);
LABEL_140:
                    __break(1u);
LABEL_141:
                    __break(1u);
LABEL_142:
                    __break(1u);
LABEL_143:
                    __break(1u);
LABEL_144:
                    __break(1u);
LABEL_145:
                    __break(1u);
LABEL_146:
                    __break(1u);
LABEL_147:
                    __break(1u);
LABEL_148:
                    __break(1u);
LABEL_149:
                    __break(1u);
LABEL_150:
                    __break(1u);
LABEL_151:
                    __break(1u);
LABEL_152:
                    __break(1u);
LABEL_153:
                    __break(1u);
LABEL_154:
                    __break(1u);
LABEL_155:
                    __break(1u);
LABEL_156:
                    __break(1u);
LABEL_157:
                    __break(1u);
LABEL_158:
                    __break(1u);
LABEL_159:
                    __break(1u);
                    goto LABEL_160;
                  }
                  v109 = v64;
                  if (!v64)
                    goto LABEL_162;
                  v110 = v10;
                  v111 = &v67[16 * v108];
                  v112 = *(_QWORD *)v111;
                  v113 = &v67[16 * v69];
                  v114 = *((_QWORD *)v113 + 1);
                  sub_10035F004((void **)(v109 + 8 * *(_QWORD *)v111), (void **)(v109 + 8 * *(_QWORD *)v113), v109 + 8 * v114, __dst);
                  if (v1)
                  {
                    v10 = v110;
                    goto LABEL_120;
                  }
                  if (v114 < v112)
                    goto LABEL_137;
                  if (v69 > *((_QWORD *)v110 + 2))
                    goto LABEL_138;
                  *(_QWORD *)v111 = v112;
                  *(_QWORD *)&v67[16 * v108 + 8] = v114;
                  v115 = *((_QWORD *)v110 + 2);
                  if (v69 >= v115)
                    goto LABEL_139;
                  v10 = v110;
                  v12 = v115 - 1;
                  memmove(&v67[16 * v69], v113 + 16, 16 * (v115 - 1 - v69));
                  *((_QWORD *)v110 + 2) = v115 - 1;
                  v64 = v154;
                  if (v115 <= 2)
                    goto LABEL_14;
                  continue;
                }
              }
              v12 = 1;
LABEL_14:
              v3 = v152;
              v11 = v149;
              if (v149 >= v152)
              {
                v2 = v146;
                if (v12 < 2)
                {
LABEL_120:
                  swift_bridgeObjectRelease(v10);
                  *(_QWORD *)((v161 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
                  specialized Array._endMutation()(v138);
                  swift_bridgeObjectRelease(v161);
                  return;
                }
LABEL_123:
                v139 = *v2;
                while (1)
                {
                  v140 = v12 - 2;
                  if (v12 < 2)
                    goto LABEL_152;
                  if (!v139)
                    goto LABEL_164;
                  v141 = *(_QWORD *)&v10[16 * v140 + 32];
                  v142 = *(_QWORD *)&v10[16 * v12 + 24];
                  sub_10035F004((void **)(v139 + 8 * v141), (void **)(v139 + 8 * *(_QWORD *)&v10[16 * v12 + 16]), v139 + 8 * v142, __dst);
                  if (v1)
                    goto LABEL_120;
                  if (v142 < v141)
                    goto LABEL_153;
                  if ((swift_isUniquelyReferenced_nonNull_native(v10) & 1) == 0)
                    v10 = sub_10020CE70((uint64_t)v10);
                  if (v140 >= *((_QWORD *)v10 + 2))
                    goto LABEL_154;
                  v143 = &v10[16 * v140 + 32];
                  *(_QWORD *)v143 = v141;
                  *((_QWORD *)v143 + 1) = v142;
                  v144 = *((_QWORD *)v10 + 2);
                  if (v12 > v144)
                    goto LABEL_155;
                  memmove(&v10[16 * v12 + 16], &v10[16 * v12 + 32], 16 * (v144 - v12));
                  *((_QWORD *)v10 + 2) = v144 - 1;
                  v12 = v144 - 1;
                  if (v144 <= 2)
                    goto LABEL_120;
                }
              }
              goto LABEL_15;
            }
LABEL_114:
            if (!v154)
              goto LABEL_161;
            v14 = v120;
            v137 = *(void **)v119;
            v117 = *(void **)(v119 + 8);
            *(_QWORD *)v119 = v117;
            *(_QWORD *)(v119 + 8) = v137;
            v119 -= 8;
            if (v120 == ++v118)
              goto LABEL_105;
          }
        }
        goto LABEL_33;
      }
      objc_msgSend(v16, "coordinate");
      v34 = v33;
      objc_msgSend(v17, "coordinate");
      v36 = v35;

      v37 = v13;
      v29 = v36 < v34;
      v28 = v37 + 2;
      v30 = v154;
      if (v37 + 2 < v152)
        goto LABEL_24;
    }
    else
    {
      v31 = v26;

      v32 = v13;
      v29 = v31 < v23;
      v28 = v32 + 2;
      v97 = v32 + 2 < v3;
      v30 = v154;
      if (v97)
        goto LABEL_24;
    }
LABEL_32:
    if (!v29)
      goto LABEL_47;
LABEL_33:
    v13 = v151;
    if (v28 < v151)
      goto LABEL_158;
    if (v151 >= v28)
    {
      v14 = v28;
      v3 = v152;
      if (v28 >= v152)
        goto LABEL_56;
      goto LABEL_48;
    }
    v58 = (uint64_t *)(v147 + 8 * v28);
    v59 = v28;
    v60 = v151;
    v61 = (uint64_t *)(v30 + 8 * v151);
    v3 = v152;
    do
    {
      if (v60 != --v59)
      {
        if (!v154)
          goto LABEL_163;
        v62 = *v61;
        *v61 = *v58;
        *v58 = v62;
      }
      ++v60;
      --v58;
      ++v61;
    }
    while (v60 < v59);
    v14 = v28;
    goto LABEL_44;
  }
  if (v3 < 0)
    goto LABEL_157;
  if (v3)
    sub_10035E8D8(0, v3, 1, v2);
}

_BYTE *initializeBufferWithCopyOfBuffer for FMCardContainerLockingPercent(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t sub_10005BCEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BCFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BD0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BD1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BD2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BD3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BD4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BD5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BD6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BD7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BD8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BD9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BDAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BDBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BDCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BDDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BDEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BDFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BE0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BE1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BE2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BE3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BE4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BE5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BE6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BE7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BE8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BE9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BEAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BEBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BECC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BEDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BEEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BEFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BF0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BF1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BF2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BF3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BF4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BF5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BF6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BF7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BF8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BF9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BFAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BFBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BFCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BFDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BFEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005BFFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C00C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C01C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C02C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C03C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C04C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C05C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C06C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C07C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C08C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C09C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C0AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C0BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C0CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C0DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C0EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C0FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C10C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C11C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C12C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C13C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C14C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C15C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C16C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C17C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C18C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C19C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C1AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C1BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C1CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C1DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C1EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C1FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C20C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C21C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C22C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C23C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C24C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C25C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C26C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C27C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C28C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C29C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C2AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C2BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C2CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C2DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C2EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C2FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C30C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C31C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C32C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C33C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C34C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C35C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C36C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C37C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C38C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C39C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C3AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C3BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C3CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C3DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C3EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C3FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C40C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C41C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C42C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C43C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C44C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C45C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C46C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C47C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C48C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C49C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C4AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C4BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C4CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C4DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C4EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C4FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C50C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C51C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C52C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C53C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C54C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C55C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C56C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C57C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C58C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C59C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C5AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C5BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C5CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C5DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C5EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C5FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C60C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C61C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C62C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C63C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C64C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C65C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C66C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C67C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain(v2);
}

uint64_t sub_10005C68C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C694(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C69C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C6A4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C6AC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C6B4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C6BC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C6C4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C6CC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C6D4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C6DC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C6E4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C6EC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C6F4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C6FC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C704(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C70C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C714(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C71C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C724(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C72C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C734(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C73C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C744(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C74C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C754(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C75C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C764(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C76C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C774(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C77C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C784(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C78C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C794(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C79C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C7A4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C7AC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C7B4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C7BC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C7C4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C7CC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C7D4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C7DC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C7E4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C7EC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C7F4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C7FC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C804(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C80C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C814(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C81C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C824(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C82C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C834(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C83C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C844(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C84C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C854(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C85C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C864(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C86C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C874(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C87C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C884(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C88C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C894(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C89C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C8A4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C8AC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C8B4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C8BC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C8C4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C8CC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C8D4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C8DC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C8E4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C8EC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C8F4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C8FC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C904(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C90C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C914(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C91C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C924(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C92C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C934(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C93C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C944(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C94C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C954(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C95C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C964(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C96C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C974(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C97C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C984(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C98C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C994(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C99C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C9A4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C9AC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C9B4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C9BC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C9C4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C9CC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C9D4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C9DC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C9E4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C9EC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C9F4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005C9FC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CA04(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CA0C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CA14(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CA1C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CA24(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CA2C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CA34(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CA3C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CA44(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CA4C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CA54(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CA5C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CA64(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CA6C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CA74(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CA7C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CA84(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CA8C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CA94(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CA9C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CAA4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CAAC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CAB4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CABC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CAC4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CACC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CAD4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CADC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CAE4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CAEC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CAF4(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CAFC(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CB04(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CB0C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CB14(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CB1C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CB24(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CB2C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CB34(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CB3C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CB44(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CB4C(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CB54(uint64_t a1)
{
  return swift_release(*(_QWORD *)(a1 + 40));
}

uint64_t sub_10005CB5C(unsigned __int8 *a1)
{
  return *a1;
}

ValueMetadata *type metadata accessor for FMActionableListCelState()
{
  return &type metadata for FMActionableListCelState;
}

void sub_10005CC00(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  uint64_t Strong;
  uint64_t v6;

  if ((*(_BYTE *)(a2 + 8) & 1) == 0)
  {
    v4 = *(void **)a2;
    Strong = swift_unknownObjectWeakLoadStrong(v2 + qword_1005D9018);
    if (Strong)
    {
      v6 = Strong;
      sub_1000A0C38(v4, 0);
      sub_10034FF88((uint64_t)v4, a1);
      swift_unknownObjectRelease(v6);
      sub_1000A0C44(v4, 0);
    }
  }
}

void sub_10005CD0C(uint64_t a1, uint64_t a2)
{
  sub_10003EC34(a2);
}

void type metadata accessor for TraitKey(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D2268, (uint64_t)&unk_1005408A0);
}

void type metadata accessor for Weight(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D2260, (uint64_t)&unk_100540878);
}

uint64_t type metadata accessor for FMAccessoryProductImageRequest(uint64_t a1)
{
  uint64_t result;

  result = qword_1005E4DC0;
  if (!qword_1005E4DC0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMAccessoryProductImageRequest);
  return result;
}

uint64_t type metadata accessor for FMActionableListTableViewCell(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10003BC28(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FMActionableListTableViewCell);
}

ValueMetadata *type metadata accessor for FMPersonImageCacheRequest()
{
  return &type metadata for FMPersonImageCacheRequest;
}

void sub_10005CE5C(uint64_t a1, uint64_t a2)
{
  sub_100026BD0(a2);
}

void sub_10005CE64(uint64_t a1, uint64_t a2)
{
  sub_1000288A4(a2);
}

uint64_t type metadata accessor for FMReloadDiff(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10003BC28(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FMReloadDiff);
}

uint64_t type metadata accessor for FMInsertDiff(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10003BC28(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FMInsertDiff);
}

uint64_t type metadata accessor for FMDeleteDiff(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10003BC28(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FMDeleteDiff);
}

uint64_t type metadata accessor for FMMovedDiff(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10003BC28(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FMMovedDiff);
}

uint64_t *sub_10005CFFC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 - 8);
  if ((*(_DWORD *)(v3 + 80) & 0x20000) != 0)
  {
    v4 = swift_slowAlloc(*(_QWORD *)(v3 + 64), *(_DWORD *)(v3 + 80));
    *a2 = v4;
    return (uint64_t *)v4;
  }
  return a2;
}

uint64_t sub_10005D03C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100053F2C(&qword_1005D3AB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10005D07C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C(&qword_1005D3AB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_10005D0C4(uint64_t a1, uint64_t a2, char a3, double a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  char v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v10 = *v4;
  v12 = sub_10004C348(a1, a2);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a3 & 1) == 0)
  {
    sub_10017AF3C();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      *(double *)(v18[7] + 8 * v12) = a4;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v21 = (uint64_t *)(v18[6] + 16 * v12);
    *v21 = a1;
    v21[1] = a2;
    *(double *)(v18[7] + 8 * v12) = a4;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      swift_bridgeObjectRetain(a2);
      return;
    }
    goto LABEL_14;
  }
  sub_100172F50(v15, a3 & 1);
  v19 = sub_10004C348(a1, a2);
  if ((v16 & 1) == (v20 & 1))
  {
    v12 = v19;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
}

uint64_t sub_10005D218(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v4(a2);
  return swift_release(v3);
}

uint64_t sub_10005D254()
{
  return sub_100008000(&qword_1005D2580, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_10048123C);
}

unint64_t sub_10005D280()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D3A00;
  if (!qword_1005D3A00)
  {
    v1 = sub_100006C5C(255, (unint64_t *)&qword_1005D39F8, UNNotificationCategory_ptr);
    result = swift_getWitnessTable(&protocol conformance descriptor for NSObject, v1);
    atomic_store(result, (unint64_t *)&qword_1005D3A00);
  }
  return result;
}

NSString sub_10005D2D8()
{
  NSString result;

  result = String._bridgeToObjectiveC()();
  qword_1005F61F8 = (uint64_t)result;
  return result;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D2460, (uint64_t)&unk_100540A20);
}

uint64_t sub_10005D320(uint64_t a1)
{
  return sub_100007550(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_10005D344);
}

uint64_t sub_10005D32C(uint64_t a1, uint64_t a2)
{
  return sub_10000826C(a1, a2, type metadata accessor for FMConditionSubscription);
}

uint64_t sub_10005D338(uint64_t a1, uint64_t a2)
{
  return sub_10000826C(a1, a2, type metadata accessor for FMPeopleSubscription);
}

uint64_t sub_10005D344(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1003F7090((unint64_t *)&unk_1005E3C48, &qword_1005E3C40);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_100053F2C(&qword_1005E3C40);
          v13 = sub_1002001A8(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100006C5C(0, (unint64_t *)&qword_1005D39F8, UNNotificationCategory_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_10005D558(uint64_t *a1, uint64_t a2)
{
  return sub_100023064(a1, a2, &OBJC_IVAR____TtC6FindMy23FMConditionSubscription_identifier, sub_100200100);
}

uint64_t sub_10005D57C(uint64_t *a1, uint64_t a2)
{
  return sub_100023064(a1, a2, &OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_identifier, sub_100200100);
}

unint64_t sub_10005D5A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  _OWORD v16[2];
  uint64_t v17;
  __int128 v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
  {
    v4 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100053F2C(&qword_1005D4DC8);
  v3 = static _DictionaryStorage.allocate(capacity:)(v2);
  v4 = (_QWORD *)v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (!v5)
  {
LABEL_9:
    swift_bridgeObjectRelease(a1);
    return (unint64_t)v4;
  }
  v6 = v3 + 64;
  v7 = a1 + 32;
  swift_retain(v3);
  while (1)
  {
    sub_100007464(v7, (uint64_t)v16, &qword_1005D6C18);
    result = sub_100025F20((uint64_t)v16);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v10 = v4[6] + 40 * result;
    v11 = v16[0];
    v12 = v16[1];
    *(_QWORD *)(v10 + 32) = v17;
    *(_OWORD *)v10 = v11;
    *(_OWORD *)(v10 + 16) = v12;
    result = (unint64_t)sub_10004C850(&v18, (_OWORD *)(v4[7] + 32 * result));
    v13 = v4[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4[2] = v15;
    v7 += 72;
    if (!--v5)
    {
      swift_release(v4);
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10005D6E0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = sub_100053F2C(&qword_1005D6C20);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (uint64_t *)((char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v23 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v23);
    return (unint64_t)v8;
  }
  sub_100053F2C(&qword_1005D6C28);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_100007464(v13, (uint64_t)v5, &qword_1005D6C20);
    result = sub_100171AC4(v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context(0);
    result = sub_100051774((uint64_t)v5, v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context);
    *(_OWORD *)(v8[7] + 16 * v17) = *(_OWORD *)((char *)v5 + v10);
    v20 = v8[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_12;
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v23 = v25;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_10005D878(uint64_t a1)
{
  return sub_1000098B0(a1, &qword_1005D6C30, &qword_1005D6C38, (uint64_t (*)(char *))sub_1001719BC, type metadata accessor for FMAccessoryProductImageRequest);
}

unint64_t sub_10005D89C(uint64_t a1)
{
  return sub_1000098B0(a1, &qword_1005D6C40, &qword_1005D6C48, (uint64_t (*)(char *))sub_1001719BC, type metadata accessor for FMAccessoryProductImageRequest);
}

unint64_t sub_10005D8C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = sub_100053F2C(&qword_1005D6C50);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
  {
    v8 = &_swiftEmptyDictionarySingleton;
LABEL_9:
    v23 = a1;
LABEL_10:
    swift_bridgeObjectRelease(v23);
    return (unint64_t)v8;
  }
  sub_100053F2C(&qword_1005D6C58);
  v7 = static _DictionaryStorage.allocate(capacity:)(v6);
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    goto LABEL_9;
  v10 = *(int *)(v2 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25 = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v3 + 72);
  swift_retain(v7);
  while (1)
  {
    sub_100007464(v13, (uint64_t)v5, &qword_1005D6C50);
    result = sub_100171B7C((uint64_t)v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = type metadata accessor for FMProductAssetProvider.DeviceFetchingContext(0);
    result = sub_100051774((uint64_t)v5, v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, type metadata accessor for FMProductAssetProvider.DeviceFetchingContext);
    *(_OWORD *)(v8[7] + 16 * v17) = *(_OWORD *)&v5[v10];
    v20 = v8[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_12;
    v8[2] = v22;
    v13 += v14;
    if (!--v9)
    {
      swift_release(v8);
      v23 = v25;
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_10005DA58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C((uint64_t *)&unk_1005E59F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10005DAA0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100053F2C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10005DAE4(uint64_t a1, uint64_t a2)
{
  return sub_10000C590(a2);
}

uint64_t sub_10005DAEC(uint64_t a1, uint64_t a2)
{
  return sub_100012404(a2);
}

uint64_t sub_10005DAF4(uint64_t (*a1)(_QWORD), uint64_t (*a2)(_QWORD, uint64_t))
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  return a2(*(_QWORD *)(v2 + 16), v2 + ((v3 + 24) & ~v3));
}

uint64_t sub_10005DB38()
{
  return sub_10005DAF4(type metadata accessor for FMSelectedSection, (uint64_t (*)(_QWORD, uint64_t))sub_10000DD8C);
}

uint64_t type metadata accessor for FMAccessoryProductImageFetchingCoordinator()
{
  return objc_opt_self(_TtC6FindMy42FMAccessoryProductImageFetchingCoordinator);
}

ValueMetadata *type metadata accessor for FMAccessoryProductImageFetchingCoordinator.FetchItem()
{
  return &type metadata for FMAccessoryProductImageFetchingCoordinator.FetchItem;
}

uint64_t type metadata accessor for FMAccessoryProductImageFetchingCoordinator.Context(uint64_t a1)
{
  uint64_t result;

  result = qword_1005DCFE0;
  if (!qword_1005DCFE0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMAccessoryProductImageFetchingCoordinator.Context);
  return result;
}

uint64_t sub_10005DBB8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for FMAccessoryProductImageRequest(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8) + 64;
    result = swift_initClassMetadata2(a1, 256, 1, &v4, a1 + 232);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for FMAccessoryProductImageDownloadOperation(uint64_t a1)
{
  uint64_t result;

  result = qword_1005DBEA8;
  if (!qword_1005DBEA8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMAccessoryProductImageDownloadOperation);
  return result;
}

double sub_10005DC60()
{
  double result;

  result = 38.0;
  xmmword_1005F5760 = xmmword_10048A4A0;
  unk_1005F5770 = xmmword_10048A4B0;
  qword_1005F5780 = 0x4044000000000000;
  return result;
}

uint64_t sub_10005DC88()
{
  return sub_100008000(&qword_1005E53A0, type metadata accessor for FMAllowLocationAlertCellViewModel, (uint64_t)&unk_100491968);
}

uint64_t sub_10005DCB4(uint64_t a1)
{
  uint64_t result;

  result = sub_100008000(&qword_1005E53D0, type metadata accessor for FMAllowLocationAlertCellViewModel, (uint64_t)&unk_100491990);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10005DCF0(uint64_t a1)
{
  uint64_t result;

  result = sub_100008000(&qword_1005E53D8, type metadata accessor for FMAllowLocationAlertCellViewModel, (uint64_t)&unk_1004919E0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

double sub_10005DE04()
{
  double result;

  result = 0.45;
  xmmword_1005F52F0 = xmmword_100488210;
  unk_1005F5300 = xmmword_100488220;
  qword_1005F5310 = 0x4024000000000000;
  return result;
}

uint64_t type metadata accessor for FMAccessoryProductImageCache()
{
  return objc_opt_self(_TtC6FindMy28FMAccessoryProductImageCache);
}

void sub_10005DE50(uint64_t a1)
{
  sub_10001BAD8(a1, &OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_compactConstraints, &OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_regularConstraints);
}

void sub_10005DE64(uint64_t a1)
{
  sub_10001BAD8(a1, &OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_compactConstraints, &OBJC_IVAR____TtC6FindMy26FMNoLocationViewController_regularConstraints);
}

uint64_t sub_10005DE78(uint64_t a1, uint64_t a2)
{
  return sub_100023FB0(a2);
}

uint64_t storeEnumTagSinglePayload for FMPersonImageCacheRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FMPersonImageCacheRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

unint64_t sub_10005DFAC()
{
  unint64_t result;

  result = qword_1005D55F8;
  if (!qword_1005D55F8)
  {
    result = swift_getWitnessTable(&unk_1004836D4, &type metadata for FMPersonImageCacheRequest);
    atomic_store(result, (unint64_t *)&qword_1005D55F8);
  }
  return result;
}

unint64_t sub_10005DFF0()
{
  unint64_t result;

  result = qword_1005D55F0;
  if (!qword_1005D55F0)
  {
    result = swift_getWitnessTable(&unk_1004836AC, &type metadata for FMPersonImageCacheRequest);
    atomic_store(result, (unint64_t *)&qword_1005D55F0);
  }
  return result;
}

unint64_t sub_10005E034()
{
  unint64_t result;

  result = qword_1005D5600;
  if (!qword_1005D5600)
  {
    result = swift_getWitnessTable(&unk_1004836FC, &type metadata for FMPersonImageCacheRequest);
    atomic_store(result, (unint64_t *)&qword_1005D5600);
  }
  return result;
}

unint64_t sub_10005E078()
{
  unint64_t result;

  result = qword_1005E1EA0;
  if (!qword_1005E1EA0)
  {
    result = swift_getWitnessTable(&unk_10048373C, &type metadata for FMPersonImageCacheRequest);
    atomic_store(result, (unint64_t *)&qword_1005E1EA0);
  }
  return result;
}

uint64_t type metadata accessor for FMDevicesActionController()
{
  return objc_opt_self(_TtC6FindMy25FMDevicesActionController);
}

uint64_t type metadata accessor for FMClusteredAnnotationView()
{
  return objc_opt_self(_TtC6FindMy25FMClusteredAnnotationView);
}

double sub_10005E104()
{
  double result;

  xmmword_1005F58F0 = xmmword_10048B1D0;
  *(_OWORD *)&qword_1005F5900 = xmmword_10048B1E0;
  result = 4.0;
  unk_1005F5910 = xmmword_10048B1F0;
  return result;
}

uint64_t sub_10005E130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001F7F4C);
}

uint64_t type metadata accessor for FMSelectionPendingAction(uint64_t a1)
{
  return sub_10001DC04(a1, (uint64_t *)&unk_1005DAEB8, (uint64_t)&nominal type descriptor for FMSelectionPendingAction);
}

uint64_t type metadata accessor for FMPeopleActionController()
{
  return objc_opt_self(_TtC6FindMy24FMPeopleActionController);
}

void sub_10005E180()
{
  qword_1005F5670 = 0x4010000000000000;
}

uint64_t sub_10005E190(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t type metadata accessor for FMUnknownItemAnnotation(uint64_t a1)
{
  uint64_t result;

  result = qword_1005DF5D8;
  if (!qword_1005DF5D8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMUnknownItemAnnotation);
  return result;
}

uint64_t sub_10005E244()
{
  uint64_t v0;

  return sub_100014344(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10005E24C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_identifier;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_10005E190(v0 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t type metadata accessor for FMProductAssetProvider()
{
  return objc_opt_self(_TtC6FindMy22FMProductAssetProvider);
}

uint64_t type metadata accessor for FMProductAssetProvider.DeviceFetchingContext(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D8CF0;
  if (!qword_1005D8CF0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMProductAssetProvider.DeviceFetchingContext);
  return result;
}

uint64_t type metadata accessor for FMPersonAnnotationView()
{
  return objc_opt_self(_TtC6FindMy22FMPersonAnnotationView);
}

void sub_10005E32C()
{
  qword_1005F54C8 = 0x4024000000000000;
}

uint64_t type metadata accessor for FMDeviceAnnotationView()
{
  return objc_opt_self(_TtC6FindMy22FMDeviceAnnotationView);
}

uint64_t sub_10005E35C(uint64_t a1)
{
  _QWORD v2[3];

  v2[0] = &unk_1004833F8;
  v2[1] = &unk_100483410;
  v2[2] = &unk_100483428;
  return swift_initClassMetadata2(a1, 0, 3, v2, a1 + 88);
}

uint64_t type metadata accessor for FMCommonAsyncOperation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10003BC28(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FMCommonAsyncOperation);
}

uint64_t type metadata accessor for FMTrackAnnotationView()
{
  return objc_opt_self(_TtC6FindMy21FMTrackAnnotationView);
}

void sub_10005E3DC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD v8[5];
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;

  v8[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v8[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v8[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v8[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v8[4] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2 = type metadata accessor for FMSelectedSection(319);
  if (v3 <= 0x3F)
  {
    v9 = *(_QWORD *)(v2 - 8) + 64;
    v10 = v9;
    v11 = &unk_100487EE8;
    v12 = (char *)&value witness table for Builtin.Int64 + 64;
    v13 = &unk_100487F00;
    sub_100007178(319, (unint64_t *)&qword_1005D5DA0, type metadata accessor for FMSelectionPendingAction);
    if (v5 <= 0x3F)
    {
      v14 = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for FMPendingActionInfo(319);
      if (v7 <= 0x3F)
      {
        v15 = *(_QWORD *)(v6 - 8) + 64;
        swift_updateClassMetadata2(a1, 256, 12, v8, a1 + 80);
      }
    }
  }
}

uint64_t type metadata accessor for FMSelectionController(uint64_t a1)
{
  return sub_10001DC04(a1, qword_1005DAB58, (uint64_t)&nominal type descriptor for FMSelectionController);
}

uint64_t sub_10005E4DC()
{
  return sub_100008000(&qword_1005D4750, type metadata accessor for FMPeopleCellViewModel, (uint64_t)&unk_100482870);
}

uint64_t sub_10005E508(uint64_t a1)
{
  uint64_t result;

  result = sub_100008000(&qword_1005D4780, type metadata accessor for FMPeopleCellViewModel, (uint64_t)&unk_100482898);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10005E544(uint64_t a1)
{
  uint64_t result;

  result = sub_100008000(&qword_1005D4788, type metadata accessor for FMPeopleCellViewModel, (uint64_t)&unk_1004828E8);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

double sub_10005E580()
{
  double result;

  xmmword_1005F4E50 = xmmword_100484060;
  *(_OWORD *)&qword_1005F4E60 = xmmword_100484070;
  result = 260.0;
  xmmword_1005F4E70 = xmmword_100484080;
  qword_1005F4E80 = 0x4054000000000000;
  return result;
}

double sub_10005E5B4()
{
  double result;

  result = 44.0;
  xmmword_1005F5540 = xmmword_100489A90;
  qword_1005F5550 = 0x3FD0000000000000;
  return result;
}

uint64_t type metadata accessor for FMDevicesSubscription(uint64_t a1)
{
  uint64_t result;

  result = qword_1005E2818;
  if (!qword_1005E2818)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMDevicesSubscription);
  return result;
}

double sub_10005E610()
{
  double result;

  result = 15.0;
  xmmword_1005F6180 = xmmword_1004913B0;
  return result;
}

uint64_t sub_10005E624()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_identifier;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_10005E190(v0 + OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_subscriber);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

void sub_10005E684(uint64_t a1, char a2)
{
  sub_100009B88(a2);
}

uint64_t sub_10005E744(uint64_t a1)
{
  _QWORD v2[13];

  v2[0] = &unk_10048A0D8;
  v2[1] = &unk_10048A0F0;
  v2[2] = &unk_10048A0F0;
  v2[3] = &unk_10048A0F0;
  v2[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[8] = &unk_10048A108;
  v2[9] = &unk_10048A120;
  v2[10] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[11] = &unk_10048A120;
  v2[12] = &unk_10048A120;
  return swift_initClassMetadata2(a1, 0, 13, v2, a1 + 128);
}

void sub_10005E7C4(void *a1)
{
  id v1;

  v1 = a1;
  sub_10005E7F8();

}

uint64_t sub_10005E7F8()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)((swift_isaMask & *v0) + 0x78) + 144))(*(_QWORD *)((swift_isaMask & *v0) + 0x60));
}

uint64_t type metadata accessor for FMItemAnnotationView()
{
  return objc_opt_self(_TtC6FindMy20FMItemAnnotationView);
}

uint64_t type metadata accessor for FMPendingActionInfo(uint64_t a1)
{
  return sub_10001DC04(a1, (uint64_t *)&unk_1005DADE8, (uint64_t)&nominal type descriptor for FMPendingActionInfo);
}

uint64_t type metadata accessor for FMMapViewDataSource()
{
  return objc_opt_self(_TtC6FindMy19FMMapViewDataSource);
}

uint64_t sub_10005E898(uint64_t a1, uint64_t a2)
{
  return sub_100015140(a2);
}

uint64_t sub_10005E8A0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_100053F2C((uint64_t *)&unk_1005D3350) - 8) + 80);
  return sub_10005E8D4(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_10005E8D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  __int128 v10;
  __int128 v11;

  v3 = sub_100053F2C((uint64_t *)&unk_1005D3350);
  __chkstk_darwin(v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007464(a2, (uint64_t)v5, (uint64_t *)&unk_1005D3350);
  v6 = type metadata accessor for FMFLocation(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1000051EC((uint64_t)v5, (uint64_t *)&unk_1005D3350);
    v10 = 0u;
    v11 = 0u;
  }
  else
  {
    *((_QWORD *)&v11 + 1) = v6;
    v8 = sub_10003D370(&v10);
    (*(void (**)(_QWORD *, char *, uint64_t))(v7 + 32))(v8, v5, v6);
  }
  sub_10000A154();
  return sub_1000051EC((uint64_t)&v10, &qword_1005D3AB0);
}

void sub_10005E9C8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[17];

  v6[0] = &unk_10048D3B8;
  v6[1] = &unk_10048D3B8;
  sub_10005F8A4(319);
  if (v3 <= 0x3F)
  {
    v6[2] = *(_QWORD *)(v2 - 8) + 64;
    v6[3] = &unk_10048D3B8;
    v6[4] = &unk_10048D3B8;
    v6[5] = &unk_10048D3B8;
    v6[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v6[7] = (char *)&value witness table for Builtin.NativeObject + 64;
    v6[8] = &unk_10048D3D0;
    v4 = type metadata accessor for FMSelectedSection(319);
    if (v5 <= 0x3F)
    {
      v6[9] = *(_QWORD *)(v4 - 8) + 64;
      v6[10] = &unk_10048D3D0;
      v6[11] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v6[12] = &unk_10048D3E8;
      v6[13] = &unk_10048D3B8;
      v6[14] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v6[15] = &unk_10048D3D0;
      v6[16] = &unk_10048D400;
      swift_updateClassMetadata2(a1, 256, 17, v6, a1 + 96);
    }
  }
}

uint64_t type metadata accessor for FMMapViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1005E0FC0;
  if (!qword_1005E0FC0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMMapViewController);
  return result;
}

uint64_t sub_10005EB54()
{
  uint64_t v0;

  return sub_100007C64(*(_QWORD *)(v0 + 16));
}

void sub_10005EB7C(uint64_t a1)
{
  sub_10000F5EC(a1, "FMConditionProvider: Failed starting monitoring Stewie state (%s)", "FMConditionProvider: Started monitoring Stewie state");
}

void sub_10005EB90()
{
  uint64_t *v0;

  sub_10000C09C(v0[2], v0[3], v0[4]);
}

uint64_t sub_10005EB9C(uint64_t a1)
{
  uint64_t v1;

  return sub_10000BE80(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_10005EBD8()
{
  uint64_t v0;

  return sub_100016A98(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10005EBE0()
{
  uint64_t v0;

  return sub_1000141E4(*(_QWORD *)(v0 + 16));
}

uint64_t type metadata accessor for FMClusterAnnotation()
{
  return objc_opt_self(_TtC6FindMy19FMClusterAnnotation);
}

uint64_t sub_10005EC28(uint64_t a1)
{
  _QWORD v2[5];

  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = &unk_100481F88;
  v2[2] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[3] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[4] = &unk_100481FA0;
  return swift_initClassMetadata2(a1, 0, 5, v2, a1 + qword_1005F4D28);
}

uint64_t type metadata accessor for FMPersonImageCache(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D3918;
  if (!qword_1005D3918)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMPersonImageCache);
  return result;
}

double sub_10005ECD4()
{
  uint64_t v0;

  return sub_10001884C(v0);
}

void sub_10005ECDC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[4];

  sub_100005B98(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = "\b";
    v4[2] = &unk_10048B0F0;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 416);
  }
}

uint64_t type metadata accessor for FMPersonAnnotation(uint64_t a1)
{
  uint64_t result;

  result = qword_1005DEBD0;
  if (!qword_1005DEBD0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMPersonAnnotation);
  return result;
}

void sub_10005EDC4(uint64_t a1)
{
  uint64_t v1;

  sub_1000118F8(a1, *(void **)(v1 + 16), *(void (**)(id))(v1 + 24));
}

void sub_10005EDD0()
{
  uint64_t v0;

  sub_100027C20(*(void **)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_10005EDDC(void *a1)
{
  uint64_t v1;

  return sub_100011A00(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

double sub_10005EDE8()
{
  double result;

  result = 10.0;
  xmmword_1005F5B70 = xmmword_10048C8B0;
  return result;
}

uint64_t sub_10005EDFC(uint64_t a1)
{
  void *v2;

  v2 = &unk_100486318;
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + qword_1005F5048);
}

uint64_t type metadata accessor for FMDeviceImageCache(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D9020;
  if (!qword_1005D9020)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMDeviceImageCache);
  return result;
}

uint64_t type metadata accessor for FMDeviceAnnotation(uint64_t a1)
{
  uint64_t result;

  result = qword_1005E09B8;
  if (!qword_1005E09B8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMDeviceAnnotation);
  return result;
}

double sub_10005EEBC()
{
  double result;

  result = 1.0;
  __asm { FMOV            V1.2D, #2.0 }
  xmmword_1005F5E50 = _Q1;
  *(_OWORD *)&qword_1005F5E60 = xmmword_10048E210;
  return result;
}

unint64_t sub_10005EED8()
{
  unint64_t result;

  result = qword_1005DF3B8;
  if (!qword_1005DF3B8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for UserNotifications, &type metadata for UserNotifications);
    atomic_store(result, (unint64_t *)&qword_1005DF3B8);
  }
  return result;
}

const char *UserNotifications.feature.getter()
{
  return "KettleTCC";
}

const char *UserNotifications.domain.getter()
{
  return "UserNotifications";
}

uint64_t type metadata accessor for FMTrackAnnotation(uint64_t a1)
{
  uint64_t result;

  result = qword_1005E1AA0;
  if (!qword_1005E1AA0)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMTrackAnnotation);
  return result;
}

ValueMetadata *type metadata accessor for FMPersonImageSize()
{
  return &type metadata for FMPersonImageSize;
}

unint64_t sub_10005EF94()
{
  unint64_t result;

  result = qword_1005D5608;
  if (!qword_1005D5608)
  {
    result = swift_getWitnessTable(&unk_1004837EC, &type metadata for FMPersonImageSize);
    atomic_store(result, (unint64_t *)&qword_1005D5608);
  }
  return result;
}

uint64_t sub_10005EFD8()
{
  return sub_100008000(&qword_1005E1E10, type metadata accessor for FMMeCellViewModel, (uint64_t)&unk_10048E2D0);
}

uint64_t type metadata accessor for FMMeCellViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_1005E1DB8;
  if (!qword_1005E1DB8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMMeCellViewModel);
  return result;
}

uint64_t sub_10005F040(uint64_t a1)
{
  uint64_t result;

  result = sub_100008000(&qword_1005E1E40, type metadata accessor for FMMeCellViewModel, (uint64_t)&unk_10048E2F8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10005F07C(uint64_t a1)
{
  uint64_t result;

  result = sub_100008000(&qword_1005E1E48, type metadata accessor for FMMeCellViewModel, (uint64_t)&unk_10048E348);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for FMDevicesProvider(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D41D8;
  if (!qword_1005D41D8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMDevicesProvider);
  return result;
}

void sub_10005F0F8(uint64_t a1, uint64_t a2)
{
  sub_100019108(a2);
}

void sub_10005F100(uint64_t a1, uint64_t a2)
{
  sub_10001AA70(a2);
}

uint64_t sub_10005F108(uint64_t a1, uint64_t a2)
{
  return sub_10000AE7C(a2);
}

void sub_10005F110(uint64_t a1, uint64_t a2)
{
  sub_100013EE8(a2);
}

void sub_10005F118(uint64_t a1, uint64_t a2)
{
  sub_10001B48C(a2);
}

void sub_10005F120(uint64_t a1, uint64_t a2)
{
  sub_1000225DC(a2);
}

void sub_10005F130(uint64_t a1, uint64_t a2)
{
  sub_1000147E0(a2);
}

void sub_10005F138(uint64_t a1, uint64_t a2)
{
  sub_100014E44(a2);
}

void sub_10005F140(uint64_t a1, uint64_t a2)
{
  sub_10001DC38(a2);
}

void sub_10005F148(uint64_t a1, uint64_t a2)
{
  sub_100015AC0(a2);
}

uint64_t sub_10005F150(uint64_t a1, uint64_t a2)
{
  return sub_100011C00(a2);
}

id sub_10005F158()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy16FMMapOptionsView_userLocationButton), "setEnabled:", *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy16FMMapOptionsView_mediator) + 40)+ OBJC_IVAR____TtC6FindMy18FMLocationProvider_isLocationAuthorized));
}

id sub_10005F190()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMSelectedSection(0) - 8) + 80);
  return sub_100006B5C(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t type metadata accessor for FMMapOptionsView.PlatterView()
{
  return objc_opt_self(_TtCC6FindMy16FMMapOptionsViewP33_4FBFA1E850653445CBAB4C80170F66AB11PlatterView);
}

uint64_t sub_10005F1E0(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = &unk_1004865F8;
  v2[1] = &unk_100486610;
  return swift_initClassMetadata2(a1, 0, 2, v2, a1 + qword_1005F5060);
}

uint64_t type metadata accessor for FMItemImageCache(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D9260;
  if (!qword_1005D9260)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMItemImageCache);
  return result;
}

uint64_t type metadata accessor for FMItemAnnotation(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D7F00;
  if (!qword_1005D7F00)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMItemAnnotation);
  return result;
}

uint64_t type metadata accessor for FMInfoAnnotation(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D8608;
  if (!qword_1005D8608)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMInfoAnnotation);
  return result;
}

uint64_t sub_10005F2E4(uint64_t a1)
{
  const char *v2;

  v2 = "\b";
  return swift_initClassMetadata2(a1, 0, 1, &v2, a1 + 192);
}

uint64_t type metadata accessor for FMAsyncOperation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10003BC28(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FMAsyncOperation);
}

double sub_10005F330()
{
  double result;

  xmmword_1005F5620 = xmmword_10048A050;
  *(_OWORD *)&qword_1005F5630 = xmmword_10048A060;
  unk_1005F5640 = xmmword_10048A070;
  unk_1005F5650 = xmmword_10048A080;
  result = 60.0;
  unk_1005F5660 = xmmword_10048A090;
  return result;
}

double sub_10005F370()
{
  double result;

  result = 0.0;
  xmmword_1005F5450 = xmmword_100488F70;
  *(_OWORD *)&qword_1005F5460 = xmmword_100488F70;
  return result;
}

double sub_10005F388()
{
  double result;

  result = 12.0;
  xmmword_1005F5470 = xmmword_100488F80;
  *(_OWORD *)&qword_1005F5480 = xmmword_100488F90;
  return result;
}

void sub_10005F3A8()
{
  qword_1005F5448 = 0x4024000000000000;
}

void sub_10005F3B8()
{
  qword_1005F5440 = 0x4028000000000000;
}

double sub_10005F428()
{
  double result;

  xmmword_1005F5C60 = xmmword_10048D2E0;
  unk_1005F5C70 = xmmword_10048D2F0;
  xmmword_1005F5C80 = xmmword_10048D300;
  qword_1005F5C90 = 0x4059000000000000;
  qword_1005F5C98 = 5;
  result = 5.0;
  xmmword_1005F5CA0 = xmmword_10048D310;
  qword_1005F5CB0 = 0x4030000000000000;
  return result;
}

void sub_10005F4AC(uint64_t a1)
{
  sub_100008568(a1, (id *)&MCFeatureFindMyFriendsAllowed, (BOOL *)&byte_1005F5E34);
}

uint64_t type metadata accessor for FMETAProvider()
{
  return objc_opt_self(_TtC6FindMy13FMETAProvider);
}

void sub_10005F53C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  unint64_t v11;
  Class isa;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100056D88(v2, (uint64_t)qword_1005F5748);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMAppDelegate: extendedLaunch finished", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = *(void **)(a1 + OBJC_IVAR____TtC6FindMy13FMAppDelegate_application);
  if (v7)
  {
    v8 = (void *)UIApp;
    if (UIApp)
    {
      v9 = v7;
      v10 = objc_msgSend(v8, "_extendLaunchTest");
      v11 = sub_10005D5A0((uint64_t)_swiftEmptyArrayStorage);
      isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease(v11);
      objc_msgSend(v9, "finishedTest:extraResults:", v10, isa);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_10005F6D8(void *a1)
{
  uint64_t v1;

  return sub_10000877C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_10005F6E0(void *a1)
{
  uint64_t v1;

  sub_1000086B4(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

void sub_10005F6E8()
{
  uint64_t v0;

  sub_10000FA48(*(void **)(v0 + 16));
}

void sub_10005F6F0(uint64_t a1)
{
  sub_100007B48(a1, 0xD000000000000013, 0x80000001004C3360, &qword_1005E1CB8);
}

uint64_t type metadata accessor for FMURLHandler()
{
  return objc_opt_self(_TtC6FindMy12FMURLHandler);
}

uint64_t sub_10005F734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_10005F740(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_10003FAF4((unint64_t *)&unk_1005D7A40, a2, (uint64_t (*)(uint64_t))type metadata accessor for FMAnnotation, (uint64_t)&protocol conformance descriptor for NSObject);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_10005F78C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_100006D70(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 1, &v4, a1 + 80);
  }
}

uint64_t sub_10005F7F8(uint64_t a1, uint64_t a2)
{
  return sub_10000B8A8(a2);
}

void sub_10005F804()
{
  uint64_t v0;

  sub_100009440(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_10005F80C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for FMSelectedSection(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_10000D1C4(v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10005F84C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

uint64_t type metadata accessor for FMMediator()
{
  return objc_opt_self(_TtC6FindMy10FMMediator);
}

uint64_t sub_10005F878()
{
  uint64_t v0;

  sub_10005E190(v0 + 16);

  return swift_deallocClassInstance(v0, 40, 7);
}

void sub_10005F8A4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1005D7210)
  {
    v2 = type metadata accessor for Date(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1005D7210);
  }
}

uint64_t sub_10005F8F8(uint64_t result, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_100027BDC(result, a2);
  return result;
}

double sub_10005FC78(uint64_t a1, double a2)
{
  return *(double *)(a1 + 32) * a2;
}

double sub_10005FC84(uint64_t a1, double a2)
{
  double v2;

  v2 = -(*(double *)(a1 + 48) - *(double *)(a1 + 40) * a2);
  return v2 / (*(double (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

double sub_10005FCB4(uint64_t a1, double a2)
{
  double v4;
  float v5;
  double v6;

  v4 = *(double *)(a1 + 40);
  v5 = -(*(double *)(a1 + 48) * a2);
  v6 = expf(v5);
  return v4 - fabs((*(double (**)(double))(*(_QWORD *)(a1 + 32) + 16))(a2) * v6);
}

double sub_10005FD14(uint64_t a1, double a2)
{
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  float v13;

  v4 = a2 * a2;
  v5 = exp(-(*(double *)(a1 + 40) * a2));
  v6 = (*(double (**)(double))(*(_QWORD *)(a1 + 32) + 16))(a2);
  v7 = *(double *)(a1 + 64);
  v8 = *(double *)(a1 + 48) + *(double *)(a1 + 56) * a2;
  v9 = -v7;
  v10 = v8 - v7 * v4;
  v11 = -(v8 + v9 * v4);
  if (v5 * v6 <= 0.0)
    v12 = v10;
  else
    v12 = v11;
  v13 = *(double *)(a1 + 40) * a2;
  return v12 / (v4 * *(double *)(a1 + 72) * expf(v13));
}

double sub_10005FDAC(uint64_t a1, double a2)
{
  return a2 - *(double *)(a1 + 32);
}

double sub_10005FDB8(uint64_t a1, double a2)
{
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;

  v4 = (*(double (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  v6 = *(double *)(a1 + 40);
  v5 = *(double *)(a1 + 48);
  v7 = v4 * v5 + 1.0;
  *(float *)&v5 = -(v5 * a2);
  v8 = expf(*(float *)&v5);
  v9 = -v6;
  if (v4 < 0.0)
    v9 = v6;
  return v9 + v7 * v8;
}

double sub_10005FE24(double *a1, double a2)
{
  double v2;
  float v3;

  v2 = a1[4] * (a1[5] - a2);
  v3 = a1[6] * a2;
  return v2 / expf(v3);
}

id sub_10005FE60(void *a1)
{
  id v1;
  void *v2;
  void *v3;

  v1 = a1;
  v2 = (void *)objc_claimAutoreleasedReturnValue(+[NSBundle mainBundle](NSBundle, "mainBundle"));
  v3 = (void *)objc_claimAutoreleasedReturnValue(objc_msgSend(v2, "localizedStringForKey:value:table:", v1, &stru_100568E20, 0));

  return v3;
}

void sub_10005FF3C(uint64_t a1)
{
  id v1;
  void *v2;

  v1 = objc_alloc_init((Class)objc_opt_class(*(_QWORD *)(a1 + 32)));
  v2 = (void *)qword_1005E5DD0;
  qword_1005E5DD0 = (uint64_t)v1;

}

uint64_t sub_100060508(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, _QWORD))(result + 16))(result, 0);
  return result;
}

uint64_t sub_100060520(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 1);
  return result;
}

uint64_t sub_100060538(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, 2);
  return result;
}

uint64_t sub_100060550(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

uint64_t sub_10006074C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

uint64_t sub_100060F9C(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

void sub_100062044(uint64_t a1)
{
  double v1;
  double v2;
  id v3;

  v1 = *(double *)(a1 + 40);
  v2 = *(double *)(a1 + 48);
  v3 = (id)objc_claimAutoreleasedReturnValue(objc_msgSend(*(id *)(a1 + 32), "handleImageView"));
  objc_msgSend(v3, "setCenter:", v1, v2);

}

id *sub_100062088(id *result, int a2)
{
  if (a2)
    return (id *)objc_msgSend(result[4], "popAnimateHandle");
  return result;
}

uint64_t variable initialization expression of FMObjectAssociation.isolationQueue()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  _QWORD *v15;

  v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000555A8();
  static DispatchQoS.default.getter();
  v15 = _swiftEmptyArrayStorage;
  v10 = sub_100008000((unint64_t *)&unk_1005D3970, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v11 = sub_100053F2C((uint64_t *)&unk_1005D20F0);
  v12 = sub_10003F734((unint64_t *)&unk_1005D3980, (uint64_t *)&unk_1005D20F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v15, v11, v12, v4, v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v0);
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000001DLL, 0x80000001004A4B60, v9, v6, v3, 0);
}

uint64_t variable initialization expression of ToggleLocationSharingIntentResponse.code()
{
  return 0;
}

void type metadata accessor for _CLFidelityPolicy(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D21E0, (uint64_t)&unk_100540410);
}

__n128 initializeWithTake for FMETARequest(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for MKCoordinateRegion(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D21E8, (uint64_t)&unk_100540488);
}

void type metadata accessor for UNAuthorizationStatus(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D21F0, (uint64_t)&unk_1005404B0);
}

void type metadata accessor for Style(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D21F8, (uint64_t)&unk_1005404D0);
}

__n128 sub_1000639A8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for FMPasscodeViewStyle(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FMPasscodeViewStyle(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

void type metadata accessor for CMTime(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D2200, (uint64_t)&unk_100540548);
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D2208, (uint64_t)&unk_1005405D0);
}

void type metadata accessor for AnimationOptions(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D2210, (uint64_t)&unk_1005405F8);
}

void type metadata accessor for FMDistanceCalculatorMeasurementSystem(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D2218, (uint64_t)&unk_100540620);
}

uint64_t initializeBufferWithCopyOfBuffer for FMCardContainerConfiguration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain(v2);
  return v3;
}

uint64_t sub_100063A88(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_100063AA8(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D2220, (uint64_t)&unk_100540698);
}

void type metadata accessor for NSTextAlignment(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D2228, (uint64_t)&unk_1005406C8);
}

__n128 initializeWithTake for FMAnnotationClusterIdentifier(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CLLocationCoordinate2D(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D2230, (uint64_t)&unk_100540740);
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D2238, (uint64_t)&unk_1005407C0);
}

void type metadata accessor for CGImage(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D2240, (uint64_t)&unk_1005407E8);
}

void type metadata accessor for PlaySoundContext(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D2248, (uint64_t)&unk_100540818);
}

void type metadata accessor for SecureLocationsStewieServiceState(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D2250, (uint64_t)&unk_100540838);
}

void type metadata accessor for objc_AssociationPolicy(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D2258, (uint64_t)&unk_100540858);
}

uint64_t sub_100063B80(uint64_t a1, uint64_t a2)
{
  return sub_100064B60(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

NSNumber sub_100063B9C()
{
  return Float._bridgeToObjectiveC()();
}

uint64_t sub_100063BA4(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v4;
  int v5;
  int v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = static Float._forceBridgeFromObjectiveC(_:result:)(a1, &v6);
  v4 = v7;
  v5 = v6;
  if (v7)
    v5 = 0;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v4;
  return result;
}

uint64_t sub_100063BF4(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  int v5;
  int v7;
  char v8;

  v7 = 0;
  v8 = 1;
  v3 = static Float._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v7);
  v4 = v8;
  v5 = v7;
  if (v8)
    v5 = 0;
  *(_DWORD *)a2 = v5;
  *(_BYTE *)(a2 + 4) = v4;
  return v3 & 1;
}

void sub_100063C48(float *a1@<X8>)
{
  *a1 = static Float._unconditionallyBridgeFromObjectiveC(_:)();
}

void sub_100063C6C(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

NSNumber sub_100063C74()
{
  return CGFloat._bridgeToObjectiveC()();
}

uint64_t sub_100063C7C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = static CGFloat._forceBridgeFromObjectiveC(_:result:)(a1, &v6);
  v4 = v7;
  v5 = v6;
  if (v7)
    v5 = 0;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v4;
  return result;
}

uint64_t sub_100063CCC(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v7;
  char v8;

  v7 = 0;
  v8 = 1;
  v3 = static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v7);
  v4 = v8;
  v5 = v7;
  if (v8)
    v5 = 0;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v4;
  return v3 & 1;
}

void sub_100063D20(double *a1@<X8>)
{
  *a1 = static CGFloat._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100063D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

id sub_100063D5C()
{
  id *v0;

  return *v0;
}

uint64_t sub_100063D64@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_100063D6C@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t result;
  uint64_t v4;

  result = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

BOOL sub_100063D94(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100063DA8(uint64_t a1, id *a2)
{
  uint64_t result;
  uint64_t v5;
  NSString v6;
  uint64_t v7;
  uint64_t v8;

  v7 = 0;
  v8 = 0;
  result = static String._forceBridgeFromObjectiveC(_:result:)(a1, &v7);
  v5 = v8;
  if (v8)
  {
    v6 = String._bridgeToObjectiveC()();
    result = swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return result;
}

uint64_t sub_100063E1C(uint64_t a1, id *a2)
{
  char v4;
  uint64_t v5;
  NSString v6;
  uint64_t v8;
  uint64_t v9;

  v8 = 0;
  v9 = 0;
  v4 = static String._conditionallyBridgeFromObjectiveC(_:result:)(a1, &v8);
  v5 = v9;
  if (v9)
  {
    v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v5);
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
  return v4 & 1;
}

uint64_t sub_100063E98@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  uint64_t result;

  static String._unconditionallyBridgeFromObjectiveC(_:)(a1);
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v4);
  *a2 = v5;
  return result;
}

uint64_t sub_100063ED8(uint64_t a1)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100481408, a1);
  return _CFObject.hashValue.getter(a1, WitnessTable);
}

uint64_t sub_100063F14(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;

  WitnessTable = swift_getWitnessTable(&unk_100481408, a2);
  return _CFObject.hash(into:)(a1, a2, WitnessTable);
}

Swift::Int sub_100063F5C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, a1);
  WitnessTable = swift_getWitnessTable(&unk_100481408, a2);
  _CFObject.hash(into:)(v5, a2, WitnessTable);
  return Hasher._finalize()();
}

BOOL sub_100063FB4(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

_QWORD *sub_100063FC8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

BOOL sub_100063FDC(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_10006400C(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_100064020(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

Swift::Int sub_100064034()
{
  Swift::UInt *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_100064078()
{
  Swift::UInt *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_1000640A0(uint64_t a1)
{
  Swift::UInt *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

void sub_1000640E0(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;

  v4 = sub_100064D74(a1);
  swift_bridgeObjectRelease(a1);
  *a2 = v4;
}

_QWORD *sub_10006411C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_100064130@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

_QWORD *sub_100064144@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_100064170@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_100064194(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_1000641A8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1000641BC(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_1000641D0()
{
  _QWORD *v0;

  return *v0 == 0;
}

_QWORD *sub_1000641E0(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t sub_1000641F4()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)(SPCommandErrorDomain);
}

uint64_t sub_100064204(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100008000(&qword_1005D25C0, (uint64_t (*)(uint64_t))type metadata accessor for CommandError, (uint64_t)&unk_1004812F8);
  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_100064244(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100008000(&qword_1005D25C0, (uint64_t (*)(uint64_t))type metadata accessor for CommandError, (uint64_t)&unk_1004812F8);
  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_100064284(void *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008000(&qword_1005D25C0, (uint64_t (*)(uint64_t))type metadata accessor for CommandError, (uint64_t)&unk_1004812F8);
  return _BridgedStoredNSError.init(_bridgedNSError:)(a1, a2, v4);
}

uint64_t sub_1000642E8()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = *v0;
  v2 = NSObject.hashValue.getter();

  return v2;
}

uint64_t sub_10006431C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100008000(&qword_1005D25C0, (uint64_t (*)(uint64_t))type metadata accessor for CommandError, (uint64_t)&unk_1004812F8);
  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

Swift::Int sub_10006436C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD v7[10];

  v7[9] = *v3;
  Hasher.init(_seed:)(v7, a1);
  dispatch thunk of Hashable.hash(into:)(v7, a2, a3);
  return Hasher._finalize()();
}

BOOL sub_1000643C8(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1000643DC(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

uint64_t sub_1000643F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t WitnessTable;

  v4 = *a1;
  v5 = *a2;
  WitnessTable = swift_getWitnessTable(&unk_100481408, a3);
  return static _CFObject.== infix(_:_:)(v4, v5, a3, WitnessTable);
}

void sub_10006443C(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

_QWORD *sub_100064448@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_100064458(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100008000(&qword_1005D2640, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_100480738);
  v3 = sub_100008000(&qword_1005D2648, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_1004806D8);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000644DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100008000((unint64_t *)&qword_1005D2620, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100481500);
  v3 = sub_100008000(&qword_1005D2628, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100480BE4);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100064560(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100008000((unint64_t *)&qword_1005D2610, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_1004814BC);
  v3 = sub_100008000(&qword_1005D2618, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100480CF8);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

_DWORD *sub_1000645E4@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

float sub_1000645F4@<S0>(_DWORD *a1@<X8>)
{
  float *v1;
  float result;

  result = *v1;
  *a1 = *(_DWORD *)v1;
  return result;
}

uint64_t sub_100064600(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100008000(&qword_1005D2630, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_100480AE0);
  v3 = sub_100008000(&qword_1005D2638, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_100480A80);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for Float);
}

_QWORD *sub_100064694@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

double sub_1000646A4@<D0>(_QWORD *a1@<X8>)
{
  double *v1;
  double result;

  result = *v1;
  *a1 = *(_QWORD *)v1;
  return result;
}

uint64_t sub_1000646B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = sub_100008000(&qword_1005D22C0, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_10047FFD4);
  v3 = sub_100008000(&qword_1005D22C8, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_10047FF74);
  v4 = sub_100064DAC();
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, v4);
}

uint64_t sub_100064750(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100008000(&qword_1005D22D8, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_10047FE7C);
  v3 = sub_100008000((unint64_t *)&unk_1005D22E0, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_10047FE1C);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1000647D4()
{
  return sub_100008000(&qword_1005D2270, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_10047FDE0);
}

uint64_t sub_100064800()
{
  return sub_100008000(&qword_1005D2278, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_10047FDB4);
}

uint64_t sub_10006482C()
{
  return sub_100008000(&qword_1005D2280, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_10047FE50);
}

uint64_t sub_100064858()
{
  return sub_100008000(&qword_1005D2288, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_10047FF38);
}

uint64_t sub_100064884()
{
  return sub_100008000(&qword_1005D2290, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_10047FF0C);
}

uint64_t sub_1000648B0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100008000((unint64_t *)&qword_1005D25F0, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1004812B4);
  v3 = sub_100008000(&qword_1005D25F8, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_100481208);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100064934@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_10032A78C();
  result = swift_bridgeObjectRelease(a1);
  *a2 = v4;
  return result;
}

uint64_t sub_100064970(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100008000(&qword_1005D2588, (uint64_t (*)(uint64_t))type metadata accessor for CommandError, (uint64_t)&unk_100481088);
  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_1000649B0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100008000(&qword_1005D2588, (uint64_t (*)(uint64_t))type metadata accessor for CommandError, (uint64_t)&unk_100481088);
  return Error<>._code.getter(a1, v2);
}

uint64_t sub_1000649F4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100008000(&qword_1005D25C0, (uint64_t (*)(uint64_t))type metadata accessor for CommandError, (uint64_t)&unk_1004812F8);
  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

uint64_t sub_100064A34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_100008000(&qword_1005D25C0, (uint64_t (*)(uint64_t))type metadata accessor for CommandError, (uint64_t)&unk_1004812F8);
  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t sub_100064A8C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  NSString v4;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = String._bridgeToObjectiveC()();
  result = swift_bridgeObjectRelease(v3);
  *a2 = v4;
  return result;
}

uint64_t sub_100064AD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_100008000(&qword_1005D2600, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_100481478);
  v3 = sub_100008000(&qword_1005D2608, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_100480EB8);
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100064B54(uint64_t a1, uint64_t a2)
{
  return sub_100064B60(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_100064B60(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v3);
  v7 = v6;
  v8 = a3(v5);
  swift_bridgeObjectRelease(v7);
  return v8;
}

uint64_t sub_100064B9C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(*v1);
  v5 = v4;
  String.hash(into:)(a1, v3, v4);
  return swift_bridgeObjectRelease(v5);
}

uint64_t sub_100064BDC()
{
  float *v0;

  return Float.hashValue.getter(*v0);
}

void sub_100064BE4()
{
  Swift::UInt32 *v0;
  Swift::UInt32 v1;

  if ((*v0 & 0x7FFFFFFF) != 0)
    v1 = *v0;
  else
    v1 = 0;
  Hasher._combine(_:)(v1);
}

uint64_t sub_100064C14(uint64_t a1)
{
  _DWORD *v1;
  uint64_t v2;

  if ((*v1 & 0x7FFFFFFF) != 0)
    v2 = *v1;
  else
    v2 = 0;
  return static Hasher._hash(seed:bytes:count:)(a1, v2, 4);
}

uint64_t sub_100064C28()
{
  double *v0;

  return Double.hashValue.getter(*v0);
}

void sub_100064C30()
{
  Swift::UInt64 *v0;
  Swift::UInt64 v1;

  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v1 = *v0;
  else
    v1 = 0;
  Hasher._combine(_:)(v1);
}

uint64_t sub_100064C60(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  if ((*v1 & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v2 = *v1;
  else
    v2 = 0;
  return static Hasher._hash(seed:_:)(a1, v2);
}

BOOL sub_100064C70(float *a1, float *a2)
{
  return *a1 == *a2;
}

BOOL sub_100064C84(double *a1, double *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100064C98()
{
  return sub_100008000(&qword_1005D2298, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_10047FFA8);
}

uint64_t sub_100064CC4()
{
  return sub_100008000(&qword_1005D22A0, (uint64_t (*)(uint64_t))type metadata accessor for AnimationOptions, (uint64_t)&unk_10048013C);
}

uint64_t sub_100064CF0()
{
  return sub_100008000(&qword_1005D22A8, (uint64_t (*)(uint64_t))type metadata accessor for AnimationOptions, (uint64_t)&unk_100480108);
}

uint64_t sub_100064D1C()
{
  return sub_100008000(&qword_1005D22B0, (uint64_t (*)(uint64_t))type metadata accessor for AnimationOptions, (uint64_t)&unk_100480168);
}

uint64_t sub_100064D48()
{
  return sub_100008000(&qword_1005D22B8, (uint64_t (*)(uint64_t))type metadata accessor for AnimationOptions, (uint64_t)&unk_1004801A4);
}

uint64_t sub_100064D74(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

unint64_t sub_100064DAC()
{
  unint64_t result;

  result = qword_1005D22D0;
  if (!qword_1005D22D0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for CGFloat, &type metadata for CGFloat);
    atomic_store(result, (unint64_t *)&qword_1005D22D0);
  }
  return result;
}

void type metadata accessor for SymbolicTraits(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D2418, (uint64_t)&unk_1005408C8);
}

void type metadata accessor for ComparisonResult(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D2428, (uint64_t)&unk_100540918);
}

void type metadata accessor for MFAddressKind(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D2430, (uint64_t)&unk_100540938);
}

void type metadata accessor for Status(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D2438, (uint64_t)&unk_100540958);
}

void type metadata accessor for IgnoreTrackingUntil(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D2440, (uint64_t)&unk_100540978);
}

void type metadata accessor for CommandError(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D2448, (uint64_t)&unk_100540998);
}

void type metadata accessor for CTFont(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D2450, (uint64_t)&unk_1005409C0);
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D2458, (uint64_t)&unk_1005409F0);
}

void type metadata accessor for LaunchOptionsKey(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D2468, (uint64_t)&unk_100540A48);
}

void type metadata accessor for UIUserInterfaceIdiom(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D2470, (uint64_t)&unk_100540A70);
}

void type metadata accessor for MKUserTrackingMode(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D2478, (uint64_t)&unk_100540A90);
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D2480, (uint64_t)&unk_100540AB0);
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D2488, (uint64_t)&unk_100540AD8);
}

void type metadata accessor for UIUserInterfaceLayoutDirection(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D2498, (uint64_t)&unk_100540B28);
}

uint64_t sub_100064F08(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_100064F28(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for MKCoordinateSpan(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D24A0, (uint64_t)&unk_100540BA0);
}

void type metadata accessor for NSDirectionalEdgeInsets(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D24A8, (uint64_t)&unk_100540C20);
}

void type metadata accessor for CGColor(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D24B0, (uint64_t)&unk_100540C50);
}

void type metadata accessor for CMTimeFlags(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D24B8, (uint64_t)&unk_100540C80);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D24C0, (uint64_t)&unk_100540D00);
}

void type metadata accessor for SPAccessoryCapability(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D24C8, (uint64_t)&unk_100540D28);
}

void type metadata accessor for TextStyle(uint64_t a1)
{
  sub_10004E054(a1, &qword_1005D24D0, (uint64_t)&unk_100540D50);
}

uint64_t sub_100064FDC()
{
  return sub_100008000(&qword_1005D24D8, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_10048069C);
}

uint64_t sub_100065008()
{
  return sub_100008000(&qword_1005D24E0, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_100480670);
}

uint64_t sub_100065034()
{
  return sub_100008000(&qword_1005D24E8, (uint64_t (*)(uint64_t))type metadata accessor for TextStyle, (uint64_t)&unk_10048070C);
}

uint64_t sub_100065060()
{
  return sub_100008000(&qword_1005D24F0, (uint64_t (*)(uint64_t))type metadata accessor for SPAccessoryCapability, (uint64_t)&unk_1004807FC);
}

uint64_t sub_10006508C()
{
  return sub_100008000(&qword_1005D24F8, (uint64_t (*)(uint64_t))type metadata accessor for SPAccessoryCapability, (uint64_t)&unk_1004807C8);
}

uint64_t sub_1000650B8()
{
  return sub_100008000(&qword_1005D2500, (uint64_t (*)(uint64_t))type metadata accessor for SPAccessoryCapability, (uint64_t)&unk_100480828);
}

uint64_t sub_1000650E4()
{
  return sub_100008000(&qword_1005D2508, (uint64_t (*)(uint64_t))type metadata accessor for SPAccessoryCapability, (uint64_t)&unk_100480864);
}

uint64_t sub_100065110()
{
  return sub_100008000(&qword_1005D2510, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceLayoutDirection, (uint64_t)&unk_1004809B0);
}

uint64_t sub_10006513C()
{
  return sub_100008000(&qword_1005D2518, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_100480A44);
}

uint64_t sub_100065168()
{
  return sub_100008000(&qword_1005D2520, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_100480A18);
}

uint64_t sub_100065194()
{
  return sub_100008000(&qword_1005D2528, (uint64_t (*)(uint64_t))type metadata accessor for UILayoutPriority, (uint64_t)&unk_100480AB4);
}

uint64_t sub_1000651C0()
{
  return sub_100008000(&qword_1005D2530, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100480BA8);
}

uint64_t sub_1000651EC()
{
  return sub_100008000(&qword_1005D2538, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100480B7C);
}

uint64_t sub_100065218()
{
  return sub_100008000(&qword_1005D2540, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100480CBC);
}

uint64_t sub_100065244()
{
  return sub_100008000(&qword_1005D2548, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100480C90);
}

uint64_t sub_100065270()
{
  return sub_100008000(&qword_1005D2550, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_100480E7C);
}

uint64_t sub_10006529C()
{
  return sub_100008000(&qword_1005D2558, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_100480E50);
}

uint64_t sub_1000652C8()
{
  return sub_100008000(&qword_1005D2560, (uint64_t (*)(uint64_t))type metadata accessor for CommandError, (uint64_t)&unk_100480FA0);
}

uint64_t sub_1000652F4()
{
  return sub_100008000(&qword_1005D2568, (uint64_t (*)(uint64_t))type metadata accessor for CommandError, (uint64_t)&unk_100480FCC);
}

uint64_t sub_100065320()
{
  return sub_100008000(&qword_1005D2570, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1004811CC);
}

uint64_t sub_10006534C()
{
  return sub_100008000(&qword_1005D2578, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_1004811A0);
}

uint64_t sub_100065378()
{
  return sub_100008000(&qword_1005D2588, (uint64_t (*)(uint64_t))type metadata accessor for CommandError, (uint64_t)&unk_100481088);
}

uint64_t sub_1000653A4()
{
  return sub_100008000(&qword_1005D2590, (uint64_t (*)(uint64_t))type metadata accessor for CommandError, (uint64_t)&unk_100481054);
}

uint64_t sub_1000653D0()
{
  return sub_100008000(&qword_1005D2598, (uint64_t (*)(uint64_t))type metadata accessor for CommandError, (uint64_t)&unk_100481010);
}

uint64_t sub_1000653FC()
{
  return sub_100008000(&qword_1005D25A0, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_1004813A0);
}

void type metadata accessor for Code(uint64_t a1)
{
  sub_10004E054(a1, (unint64_t *)&unk_1005D2650, (uint64_t)&unk_100540D78);
}

uint64_t sub_10006543C()
{
  return sub_100008000(&qword_1005D25A8, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_100481364);
}

unint64_t sub_10006546C()
{
  unint64_t result;

  result = qword_1005D25B0;
  if (!qword_1005D25B0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for Int, &type metadata for Int);
    atomic_store(result, (unint64_t *)&qword_1005D25B0);
  }
  return result;
}

uint64_t sub_1000654B0()
{
  return sub_100008000(&qword_1005D25B8, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_1004813DC);
}

uint64_t sub_1000654DC()
{
  return sub_100008000(&qword_1005D25C0, (uint64_t (*)(uint64_t))type metadata accessor for CommandError, (uint64_t)&unk_1004812F8);
}

uint64_t sub_100065508()
{
  return sub_100008000(&qword_1005D25C8, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_100481434);
}

uint64_t sub_100065534()
{
  return sub_100008000(&qword_1005D25D0, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_100480F74);
}

uint64_t sub_100065560()
{
  return sub_100008000(&qword_1005D25D8, (uint64_t (*)(uint64_t))type metadata accessor for LaunchOptionsKey, (uint64_t)&unk_100480EEC);
}

uint64_t sub_10006558C()
{
  return sub_100008000(&qword_1005D25E0, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_100480D2C);
}

uint64_t sub_1000655B8()
{
  return sub_100008000(&qword_1005D25E8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100480C18);
}

uint64_t sub_1000656EC(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  objc_class *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t aBlock[5];
  uint64_t v54;
  char v55[24];
  objc_super v56;

  v2 = v1;
  v4 = type metadata accessor for FMSelectedSection(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v50 - v9;
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v50 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v50 - v14;
  v16 = (objc_class *)type metadata accessor for FMDeviceDetailCardViewController(0);
  v56.receiver = v2;
  v56.super_class = v16;
  objc_msgSendSuper2(&v56, "viewWillAppear:", a1 & 1);
  v17 = OBJC_IVAR____TtC6FindMy32FMDeviceDetailCardViewController_mediator;
  v18 = *(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy32FMDeviceDetailCardViewController_mediator] + 56)
      + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v18, v55, 0, 0);
  sub_100024F3C(v18, (uint64_t)v15);
  sub_100024F3C((uint64_t)v15, (uint64_t)v13);
  if (swift_getEnumCaseMultiPayload(v13, v4))
  {
    sub_100024F00((uint64_t)v13);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v19 = type metadata accessor for Logger(0);
    sub_100056D88(v19, (uint64_t)qword_1005F5748);
    v20 = sub_100024F3C((uint64_t)v15, (uint64_t)v10);
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(12, -1);
      v24 = swift_slowAlloc(32, -1);
      v51 = v15;
      v25 = v24;
      aBlock[0] = v24;
      *(_DWORD *)v23 = 136315138;
      sub_100024F3C((uint64_t)v10, (uint64_t)v7);
      v26 = String.init<A>(describing:)(v7, v4);
      v28 = v27;
      v52 = sub_100056DA0(v26, v27, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v52, aBlock);
      swift_bridgeObjectRelease(v28);
      sub_100024F00((uint64_t)v10);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "FMDeviceDetailCardViewController: Cannot be setup without a selected device. Selection: %s", v23, 0xCu);
      swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
      v29 = v25;
      v15 = v51;
      swift_slowDealloc(v29, -1, -1);
      swift_slowDealloc(v23, -1, -1);
    }
    else
    {
      sub_100024F00((uint64_t)v10);
    }

    v47 = swift_allocObject(&unk_100541058, 32, 7);
    *(_QWORD *)(v47 + 16) = 0;
    *(_QWORD *)(v47 + 24) = 0;
    aBlock[4] = (uint64_t)sub_100066830;
    v54 = v47;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100037DF8;
    aBlock[3] = (uint64_t)&unk_100541070;
    v48 = _Block_copy(aBlock);
    objc_msgSend(v2, "dismissViewControllerAnimated:completion:", 1, v48, swift_release(v54).n128_f64[0]);
    _Block_release(v48);
  }
  else
  {
    v30 = sub_100053F2C(&qword_1005DE9B0);
    sub_100066780((uint64_t)&v13[*(int *)(v30 + 48)]);
    v31 = type metadata accessor for FMIPDevice(0);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v13, v31);
    v32 = *(_QWORD *)&v2[v17];
    v33 = objc_allocWithZone((Class)type metadata accessor for FMDeviceDetailContentViewController(0));
    v34 = swift_retain(v32);
    v35 = sub_1001983C8(v34);
    sub_1004203E0(v35, v2);
    v36 = *(_QWORD *)(*(_QWORD *)&v2[v17] + 56);
    v37 = type metadata accessor for FMSelectionSubscription(0);
    v38 = swift_allocObject(v37, *(unsigned int *)(v37 + 48), *(unsigned __int16 *)(v37 + 52));
    v39 = v38 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
    *(_QWORD *)(v39 + 8) = 0;
    swift_unknownObjectWeakInit(v39);
    swift_retain(v36);
    v40 = v2;
    UUID.init()(v40);
    v41 = v38 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
    *(_QWORD *)(v41 + 8) = &off_100541008;
    swift_unknownObjectWeakAssign(v41, v40);

    swift_beginAccess(v36 + 16, aBlock, 33, 0);
    v42 = swift_retain(v38);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v42);
    v44 = *(_QWORD *)((*(_QWORD *)(v36 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
    v43 = *(_QWORD *)((*(_QWORD *)(v36 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v44 >= v43 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v43 > 1, v44 + 1, 1);
    v45 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v44, v38);
    specialized Array._endMutation()(v45);
    swift_endAccess(aBlock);
    swift_release(v36);
    v46 = *(_QWORD *)&v40[OBJC_IVAR____TtC6FindMy32FMDeviceDetailCardViewController_selectionSubscription];
    *(_QWORD *)&v40[OBJC_IVAR____TtC6FindMy32FMDeviceDetailCardViewController_selectionSubscription] = v38;

    swift_release(v46);
  }
  return sub_100024F00((uint64_t)v15);
}

uint64_t sub_100065BF4(char a1)
{
  char *v1;
  char *v2;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  objc_class *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  NSObject *v36;
  os_log_type_t v37;
  _QWORD *v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  _QWORD v58[2];
  uint8_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  char v64[24];
  _BYTE v65[24];
  uint64_t v66;
  uint64_t v67;
  uint64_t v68[3];
  _BYTE v69[24];
  objc_super v70;

  v2 = v1;
  v4 = type metadata accessor for FMSelectedSection(0);
  v5 = __chkstk_darwin(v4);
  v62 = (uint64_t)v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)v58 - v8;
  v10 = __chkstk_darwin(v7);
  v12 = (char *)v58 - v11;
  __chkstk_darwin(v10);
  v14 = (uint64_t)v58 - v13;
  v15 = (objc_class *)type metadata accessor for FMDeviceDetailCardViewController(0);
  v70.receiver = v2;
  v70.super_class = v15;
  objc_msgSendSuper2(&v70, "viewWillDisappear:", a1 & 1);
  v16 = *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy32FMDeviceDetailCardViewController_selectionSubscription];
  if (!v16)
  {
LABEL_5:
    v24 = OBJC_IVAR____TtC6FindMy32FMDeviceDetailCardViewController_mediator;
    v25 = *(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy32FMDeviceDetailCardViewController_mediator] + 56)
        + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
    swift_beginAccess(v25, v69, 0, 0);
    sub_100024F3C(v25, v14);
    sub_100024F3C(v14, (uint64_t)v12);
    switch(swift_getEnumCaseMultiPayload(v12, v4))
    {
      case 2u:
      case 3u:
        sub_100024F00((uint64_t)v12);
        if (qword_1005D1DE8 == -1)
          goto LABEL_7;
        goto LABEL_33;
      case 8u:
        if (qword_1005D1DE8 != -1)
          swift_once(&qword_1005D1DE8, sub_100005ADC);
        v47 = type metadata accessor for Logger(0);
        v48 = sub_100056D88(v47, (uint64_t)qword_1005F5748);
        v49 = Logger.logObject.getter(v48);
        v50 = static os_log_type_t.default.getter(v49);
        if (os_log_type_enabled(v49, v50))
        {
          v51 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v51 = 0;
          _os_log_impl((void *)&_mh_execute_header, v49, v50, "FMDeviceDetailCardViewController: ignore current selection", v51, 2u);
          swift_slowDealloc(v51, -1, -1);
        }

        goto LABEL_26;
      case 0xFu:
      case 0x12u:
        if (qword_1005D1DE8 != -1)
          swift_once(&qword_1005D1DE8, sub_100005ADC);
        v32 = type metadata accessor for Logger(0);
        v33 = sub_100056D88(v32, (uint64_t)qword_1005F5748);
        v28 = Logger.logObject.getter(v33);
        v29 = static os_log_type_t.default.getter(v28);
        if (!os_log_type_enabled(v28, v29))
          goto LABEL_14;
        v30 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v30 = 0;
        v31 = "FMDeviceDetailCardViewController: ignore current selection";
        goto LABEL_13;
      default:
        if (qword_1005D1DE8 != -1)
          swift_once(&qword_1005D1DE8, sub_100005ADC);
        v34 = type metadata accessor for Logger(0);
        sub_100056D88(v34, (uint64_t)qword_1005F5748);
        v35 = v2;
        v36 = Logger.logObject.getter(v35);
        v37 = static os_log_type_t.default.getter(v36);
        LODWORD(v63) = v37;
        v38 = &unk_1005F4000;
        if (os_log_type_enabled(v36, v37))
        {
          v39 = (uint8_t *)swift_slowAlloc(12, -1);
          v60 = swift_slowAlloc(32, -1);
          v68[0] = v60;
          v59 = v39;
          *(_DWORD *)v39 = 136315138;
          v58[1] = v39 + 4;
          v61 = v14;
          v40 = (uint64_t)&v35[OBJC_IVAR____TtC6FindMy32FMDeviceDetailCardViewController_returnSelection];
          swift_beginAccess(&v35[OBJC_IVAR____TtC6FindMy32FMDeviceDetailCardViewController_returnSelection], v64, 0, 0);
          sub_100024F3C(v40, (uint64_t)v9);
          v41 = String.init<A>(describing:)(v9, v4);
          v43 = v42;
          v66 = sub_100056DA0(v41, v42, v68);
          v38 = (_QWORD *)&unk_1005F4000;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, &v67);

          v44 = v43;
          v14 = v61;
          swift_bridgeObjectRelease(v44);
          v45 = v59;
          _os_log_impl((void *)&_mh_execute_header, v36, (os_log_type_t)v63, "FMDeviceDetailCardViewController: Returning to previous selection %s", v59, 0xCu);
          v63 = v36;
          v46 = v60;
          swift_arrayDestroy(v60, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v46, -1, -1);
          swift_slowDealloc(v45, -1, -1);

        }
        else
        {

        }
        v52 = *(_QWORD *)(*(_QWORD *)&v2[v24] + 56);
        v53 = (uint64_t)&v35[v38[405]];
        swift_beginAccess(v53, v68, 0, 0);
        sub_100024F3C(v53, (uint64_t)v9);
        v54 = v52 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
        swift_beginAccess(v52 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, &v66, 0, 0);
        v55 = v62;
        sub_100024F3C(v54, v62);
        swift_beginAccess(v54, v65, 33, 0);
        swift_retain(v52);
        sub_100009DF8((uint64_t)v9, v54);
        swift_endAccess(v65);
        sub_10004C8A4(v55);
        sub_100024F00((uint64_t)v9);
        sub_100024F00(v55);
        swift_release(v52);
LABEL_26:
        sub_100024F00(v14);
        v14 = (uint64_t)v12;
        break;
    }
    return sub_100024F00(v14);
  }
  v63 = v4;
  v17 = v9;
  v18 = v12;
  v19 = v14;
  v20 = *(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy32FMDeviceDetailCardViewController_mediator] + 56);
  swift_beginAccess(v20 + 16, v69, 33, 0);
  swift_retain(v16);
  swift_retain(v20);
  v21 = sub_100334CE8((uint64_t *)(v20 + 16), v16);
  v22 = v21;
  v14 = *(_QWORD *)(v20 + 16);
  if ((unint64_t)v14 >> 62)
  {
    if (v14 < 0)
      v57 = *(_QWORD *)(v20 + 16);
    else
      v57 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)(v20 + 16));
    v23 = _CocoaArrayWrapper.endIndex.getter(v57);
    swift_bridgeObjectRelease(v14);
    if (v23 >= v22)
      goto LABEL_4;
  }
  else
  {
    v23 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v23 >= v21)
    {
LABEL_4:
      v14 = v19;
      sub_100200704(v22, v23);
      swift_endAccess(v69);
      swift_release(v16);
      swift_release(v20);
      v12 = v18;
      v9 = v17;
      v4 = v63;
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_33:
  swift_once(&qword_1005D1DE8, sub_100005ADC);
LABEL_7:
  v26 = type metadata accessor for Logger(0);
  v27 = sub_100056D88(v26, (uint64_t)qword_1005F5748);
  v28 = Logger.logObject.getter(v27);
  v29 = static os_log_type_t.default.getter(v28);
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v30 = 0;
    v31 = "FMPersonDetailCardViewController: ignore current selection";
LABEL_13:
    _os_log_impl((void *)&_mh_execute_header, v28, v29, v31, v30, 2u);
    swift_slowDealloc(v30, -1, -1);
  }
LABEL_14:

  return sub_100024F00(v14);
}

void sub_100066354(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  _BYTE v24[24];

  v3 = v2;
  v6 = type metadata accessor for FMSelectedSection(0);
  v7 = __chkstk_darwin(v6);
  v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v11 = &v24[-v10 - 8];
  sub_100024F3C(a2, (uint64_t)&v24[-v10 - 8]);
  switch(swift_getEnumCaseMultiPayload(v11, v6))
  {
    case 0u:
      v13 = sub_100053F2C(&qword_1005DE9B0);
      sub_100066780((uint64_t)&v11[*(int *)(v13 + 48)]);
      v14 = type metadata accessor for FMIPDevice(0);
      (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v11, v14);
      return;
    case 1u:
      goto LABEL_6;
    case 8u:
      v15 = *(_QWORD *)&v3[OBJC_IVAR____TtC6FindMy32FMDeviceDetailCardViewController_mediator];
      v16 = *(_QWORD *)(v15 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection;
      swift_beginAccess(v16, v24, 0, 0);
      sub_100024F3C(v16, (uint64_t)v9);
      objc_allocWithZone((Class)type metadata accessor for FMUTCardViewController(0));
      v17 = swift_retain(v15);
      v18 = sub_100348DD0(v17, (uint64_t)v9);
      objc_msgSend(v3, "presentCard:completion:", v18, 0, swift_release(v15).n128_f64[0]);

      goto LABEL_6;
    case 0xBu:
    case 0xCu:
    case 0xDu:
    case 0xEu:
    case 0x10u:
      sub_100024F3C(a2, (uint64_t)v9);
      v12 = (uint64_t)&v3[OBJC_IVAR____TtC6FindMy32FMDeviceDetailCardViewController_returnSelection];
      swift_beginAccess(&v3[OBJC_IVAR____TtC6FindMy32FMDeviceDetailCardViewController_returnSelection], v24, 33, 0);
      sub_1000667C0((uint64_t)v9, v12);
      swift_endAccess(v24);
      sub_1001FDE20();
      return;
    case 0xFu:
      v19 = *(_QWORD *)&v3[OBJC_IVAR____TtC6FindMy32FMDeviceDetailCardViewController_mediator];
      v20 = a1 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection;
      swift_beginAccess(v20, v24, 0, 0);
      sub_100024F3C(v20, (uint64_t)v9);
      objc_allocWithZone((Class)type metadata accessor for FMChooseMapSheetController(0));
      v21 = swift_retain(v19);
      v22 = sub_10016AC8C(v21, (uint64_t)v9);
      objc_msgSend(v3, "presentViewController:animated:completion:", v22, 1, 0);

      return;
    case 0x12u:
      return;
    default:
      sub_1001FDE20();
LABEL_6:
      sub_100024F00((uint64_t)v11);
      return;
  }
}

double sub_1000665FC()
{
  uint64_t v0;
  double result;

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy32FMDeviceDetailCardViewController_mediator));
  sub_100024F00(v0 + OBJC_IVAR____TtC6FindMy32FMDeviceDetailCardViewController_returnSelection);
  *(_QWORD *)&result = swift_release(*(_QWORD *)(v0
                                               + OBJC_IVAR____TtC6FindMy32FMDeviceDetailCardViewController_selectionSubscription)).n128_u64[0];
  return result;
}

id sub_100066638()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMDeviceDetailCardViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1000666B4()
{
  return type metadata accessor for FMDeviceDetailCardViewController(0);
}

uint64_t type metadata accessor for FMDeviceDetailCardViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D2878;
  if (!qword_1005D2878)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMDeviceDetailCardViewController);
  return result;
}

uint64_t sub_1000666F8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for FMSelectedSection(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = "\b";
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 840);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_100066780(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000667C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMSelectedSection(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100066804()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t (*sub_100066830())(void)
{
  uint64_t v0;

  return sub_100443D4C(*(uint64_t (**)(void))(v0 + 16));
}

id sub_100066A2C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType(v0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMAnnotationMenuButton()
{
  return objc_opt_self(_TtC6FindMy22FMAnnotationMenuButton);
}

uint64_t destroy for FMItemImageRequest(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  return swift_bridgeObjectRelease(a1[5]);
}

uint64_t initializeWithCopy for FMItemImageRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

uint64_t assignWithCopy for FMItemImageRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  return a1;
}

__n128 initializeWithTake for FMItemImageRequest(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FMItemImageRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease(v9);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMItemImageRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 50))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMItemImageRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 50) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 50) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMItemImageRequest()
{
  return &type metadata for FMItemImageRequest;
}

uint64_t sub_100066CEC()
{
  uint64_t v0;
  uint64_t v1;
  Swift::String v2;
  Swift::String v3;
  __n128 v4;
  void *object;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  Swift::String v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 24);
  v12 = *(_QWORD *)(v0 + 16);
  v13 = v1;
  swift_bridgeObjectRetain(v1);
  v2._countAndFlagsBits = 45;
  v2._object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  String.append(_:)(*(Swift::String *)(v0 + 32));
  v3._countAndFlagsBits = 45;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v4.n128_u64[0] = 0x4050800000000000;
  if (!*(_BYTE *)(v0 + 48))
    v4.n128_f64[0] = 30.0;
  Double.write<A>(to:)(&v11, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation, v4);
  object = v11._object;
  String.append(_:)(v11);
  swift_bridgeObjectRelease(object);
  v6._countAndFlagsBits = 45;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  if ((*(_BYTE *)(v0 + 49) & 1) != 0)
  {
    v7._countAndFlagsBits = 0x2D6B726164;
    v7._object = (void *)0xE500000000000000;
    String.append(_:)(v7);
  }
  v8._countAndFlagsBits = 12662;
  v8._object = (void *)0xE200000000000000;
  String.append(_:)(v8);
  v9._countAndFlagsBits = 1735290926;
  v9._object = (void *)0xE400000000000000;
  String.append(_:)(v9);
  return v12;
}

uint64_t sub_100066DFC()
{
  uint64_t v0;
  Swift::String v1;
  Swift::String v2;
  Swift::String v3;
  uint64_t v4;
  void *v5;
  Swift::String v6;
  Swift::String v7;
  uint64_t v8;
  void *v9;
  Swift::String v10;
  Swift::String v11;
  uint64_t v12;
  void *v13;
  Swift::String v14;
  Swift::String v15;
  Swift::String v16;
  char v18;
  _QWORD v19[2];

  v19[0] = 0;
  v19[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(53);
  v1._countAndFlagsBits = 60;
  v1._object = (void *)0xE100000000000000;
  String.append(_:)(v1);
  v2._object = (void *)0x8000000100481620;
  v2._countAndFlagsBits = 0xD000000000000012;
  String.append(_:)(v2);
  v3._countAndFlagsBits = 0x69746E656469203ALL;
  v3._object = (void *)0xEE00203A72656966;
  String.append(_:)(v3);
  v4 = *(_QWORD *)v0;
  v5 = *(void **)(v0 + 8);
  swift_bridgeObjectRetain(v5);
  v6._countAndFlagsBits = v4;
  v6._object = v5;
  String.append(_:)(v6);
  swift_bridgeObjectRelease(v5);
  v7._countAndFlagsBits = 0x203A696A6F6D6520;
  v7._object = (void *)0xE800000000000000;
  String.append(_:)(v7);
  v8 = *(_QWORD *)(v0 + 16);
  v9 = *(void **)(v0 + 24);
  swift_bridgeObjectRetain(v9);
  v10._countAndFlagsBits = v8;
  v10._object = v9;
  String.append(_:)(v10);
  swift_bridgeObjectRelease(v9);
  v11._countAndFlagsBits = 0x6973726556736F20;
  v11._object = (void *)0xEC000000203A6E6FLL;
  String.append(_:)(v11);
  v12 = *(_QWORD *)(v0 + 32);
  v13 = *(void **)(v0 + 40);
  swift_bridgeObjectRetain(v13);
  v14._countAndFlagsBits = v12;
  v14._object = v13;
  String.append(_:)(v14);
  swift_bridgeObjectRelease(v13);
  v15._countAndFlagsBits = 9071406774580000;
  v15._object = (void *)0xE700000000000000;
  String.append(_:)(v15);
  v18 = *(_BYTE *)(v0 + 48);
  _print_unlocked<A, B>(_:_:)(&v18, v19, &type metadata for FMItemImageSize, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v16._countAndFlagsBits = 62;
  v16._object = (void *)0xE100000000000000;
  String.append(_:)(v16);
  return v19[0];
}

uint64_t sub_100066FA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

uint64_t sub_100066FB0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = swift_checkMetadataState(319, *(_QWORD *)(a1 + 16));
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = "\b";
    swift_initEnumMetadataMultiPayload(a1, 0, 2, v4);
    return 0;
  }
  return result;
}

_QWORD *sub_100067020(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
    swift_retain(v8);
  }
  else
  {
    v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 2)
    {
      if (v5 <= 3)
        v10 = v5;
      else
        v10 = 4;
      __asm { BR              X13 }
    }
    if (v9 == 1)
    {
      v11 = *a2;
      swift_errorRetain(*a2);
      *v3 = v11;
      *((_BYTE *)v3 + v5) = 1;
    }
    else
    {
      (*(void (**)(_QWORD *))(v4 + 16))(a1);
      *((_BYTE *)v3 + v5) = 0;
    }
  }
  return v3;
}

uint64_t sub_100067144(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 8)
    v3 = 8;
  v4 = *((unsigned __int8 *)a1 + v3);
  if (v4 < 2)
  {
    if (v4 == 1)
      return swift_errorRelease(*a1);
    else
      return (*(uint64_t (**)(void))(v2 + 8))();
  }
  else
  {
    if (v3 <= 3)
      v5 = v3;
    else
      v5 = 4;
    return ((uint64_t (*)(void))((char *)&loc_10006718C + 4 * byte_100481685[v5]))();
  }
}

_QWORD *sub_1000671E4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    v8 = *a2;
    swift_errorRetain(*a2);
    *a1 = v8;
    v9 = 1;
  }
  else
  {
    (*(void (**)(_QWORD *))(v4 + 16))(a1);
    v9 = 0;
  }
  *((_BYTE *)a1 + v5) = v9;
  return a1;
}

uint64_t *sub_1000672C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      swift_errorRelease(*a1);
    else
      (*(void (**)(uint64_t *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      v12 = *a2;
      swift_errorRetain(v12);
      *a1 = v12;
      v13 = 1;
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      v13 = 0;
    }
    *((_BYTE *)a1 + v7) = v13;
  }
  return a1;
}

_QWORD *sub_10006745C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    *a1 = *a2;
    v8 = 1;
  }
  else
  {
    (*(void (**)(_QWORD *))(v4 + 32))(a1);
    v8 = 0;
  }
  *((_BYTE *)a1 + v5) = v8;
  return a1;
}

_QWORD *sub_100067530(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      swift_errorRelease(*a1);
    else
      (*(void (**)(_QWORD *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      *a1 = *a2;
      v12 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
      v12 = 0;
    }
    *((_BYTE *)a1 + v7) = v12;
  }
  return a1;
}

uint64_t sub_1000676BC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 8uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 255);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_100067780 + 4 * byte_1004816A8[(v4 - 1)]))();
}

void sub_1000677CC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    v7 = 0;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = &dword_100000004;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = &_mh_execute_header.magic + 1;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v8 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_100067974(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 8uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1000679BC + 4 * byte_1004816B6[v3]))();
}

void sub_100067A04(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 8uLL)
    v4 = 8;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    v5 = a2 - 2;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t type metadata accessor for FMResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10003BC28(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FMResult);
}

uint64_t sub_100067ADC(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v7;
  char v8;
  uint64_t v9;

  v4 = a1;
  if ((a2 & 1) != 0)
  {
    swift_errorRetain(a1);
    return v4;
  }
  if (!*(_QWORD *)(a1 + 16))
    return 0;
  swift_bridgeObjectRetain(a1);
  v7 = sub_10004C348(a3, a4);
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease(v4);
    return 0;
  }
  v9 = *(unsigned __int8 *)(*(_QWORD *)(v4 + 56) + v7);
  swift_bridgeObjectRelease(v4);
  return v9;
}

char *sub_100067B68(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_class *v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void *v22;
  char *v23;
  id v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  char **v38;
  char *v39;
  uint64_t v40;
  char *v42;
  _OWORD v43[7];
  uint64_t v44;

  v3 = OBJC_IVAR____TtC6FindMy18FMMeViewController_locationSettings;
  v4 = objc_allocWithZone((Class)type metadata accessor for FMLocationSettingsView(0));
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtC6FindMy18FMMeViewController_stewieSettings;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMStewieSettingsView()), "init");
  v7 = OBJC_IVAR____TtC6FindMy18FMMeViewController_locationAlerts;
  *(_QWORD *)&v5[v7] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMMyLocationAlertsView()), "init");
  v8 = OBJC_IVAR____TtC6FindMy18FMMeViewController_editFindMyNotificationSettingsButton;
  v9 = (objc_class *)type metadata accessor for FMSingleLinePlatterButton();
  v10 = objc_allocWithZone(v9);
  *(_QWORD *)&v5[v8] = sub_1000472FC(0, 0, 0, 1);
  v11 = OBJC_IVAR____TtC6FindMy18FMMeViewController_editSafetyAlertsNotificationSettingsButton;
  v12 = objc_allocWithZone(v9);
  *(_QWORD *)&v5[v11] = sub_1000472FC(0, 0, 0, 1);
  v13 = OBJC_IVAR____TtC6FindMy18FMMeViewController_nameLocationButton;
  v14 = objc_allocWithZone(v9);
  *(_QWORD *)&v5[v13] = sub_1000472FC(0, 0, 0, 1);
  v15 = OBJC_IVAR____TtC6FindMy18FMMeViewController_clearIgnoredTagsButton;
  v16 = objc_allocWithZone(v9);
  *(_QWORD *)&v5[v15] = sub_1000472FC(0, 0, 0, 1);
  v17 = OBJC_IVAR____TtC6FindMy18FMMeViewController_helpFriendView;
  *(_QWORD *)&v5[v17] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMHelpFriendView()), "init");
  v18 = OBJC_IVAR____TtC6FindMy18FMMeViewController_actionButtonsStackView;
  *(_QWORD *)&v5[v18] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v19 = OBJC_IVAR____TtC6FindMy18FMMeViewController_verticalStackView;
  *(_QWORD *)&v5[v19] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v20 = OBJC_IVAR____TtC6FindMy18FMMeViewController_coarseLabel;
  *(_QWORD *)&v5[v20] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy18FMMeViewController_peopleSubscription] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy18FMMeViewController_deviceSubscription] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy18FMMeViewController_conditionsSubscription] = 0;
  v5[OBJC_IVAR____TtC6FindMy18FMMeViewController_isLocationSharingOnOverride] = 2;
  v5[OBJC_IVAR____TtC6FindMy18FMMeViewController_isAllowFriendsRequestOnOverride] = 2;
  v5[OBJC_IVAR____TtC6FindMy18FMMeViewController_isAllowLocationAlertsOnOverride] = 2;
  v5[OBJC_IVAR____TtC6FindMy18FMMeViewController_isClearTagEnabledOverride] = 2;
  v5[OBJC_IVAR____TtC6FindMy18FMMeViewController_currentLimitedPrecision] = 0;
  v21 = &v5[OBJC_IVAR____TtC6FindMy18FMMeViewController_displayAddress];
  *((_WORD *)v21 + 8) = 0;
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_10013CC00((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    v22 = &_swiftEmptySetSingleton;
  }
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy18FMMeViewController_cancellables] = v22;
  v23 = &v5[OBJC_IVAR____TtC6FindMy18FMMeViewController_delegate];
  *((_QWORD *)v23 + 1) = 0;
  swift_unknownObjectWeakInit(v23);
  v24 = objc_allocWithZone((Class)type metadata accessor for FMMeNotificationView());
  v25 = swift_retain(a1);
  v26 = sub_100283DE0(v25);
  swift_release(a1);
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy18FMMeViewController_notificationView] = v26;
  v27 = type metadata accessor for FMStewieViewModel(0);
  swift_allocObject(v27, *(unsigned int *)(v27 + 48), *(unsigned __int16 *)(v27 + 52));
  v28 = swift_retain(a1);
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy18FMMeViewController_stewieViewModel] = sub_100139194(v28);

  v29 = qword_1005D1D28;
  swift_retain(a1);
  if (v29 != -1)
    swift_once(&qword_1005D1D28, sub_1002286DC);
  v43[4] = xmmword_1005F5400;
  v43[5] = unk_1005F5410;
  v43[6] = xmmword_1005F5420;
  v44 = qword_1005F5430;
  v43[0] = xmmword_1005F53C0;
  v43[1] = *(_OWORD *)algn_1005F53D0;
  v43[2] = xmmword_1005F53E0;
  v43[3] = unk_1005F53F0;
  v30 = sub_100225878(a1, (uint64_t)v43);
  v31 = qword_1005D1DE8;
  v32 = v30;
  if (v31 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v33 = type metadata accessor for Logger(0);
  sub_100056D88(v33, (uint64_t)qword_1005F5748);
  v34 = v32;
  v35 = Logger.logObject.getter(v34);
  v36 = static os_log_type_t.default.getter(v35);
  if (os_log_type_enabled(v35, v36))
  {
    v37 = (uint8_t *)swift_slowAlloc(12, -1);
    v38 = (char **)swift_slowAlloc(8, -1);
    *(_DWORD *)v37 = 138412290;
    v42 = v34;
    v39 = v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, v43);
    *v38 = v34;

    _os_log_impl((void *)&_mh_execute_header, v35, v36, "FMMeViewController<%@>: init", v37, 0xCu);
    v40 = sub_100053F2C((uint64_t *)&unk_1005D9680);
    swift_arrayDestroy(v38, 1, v40);
    swift_slowDealloc(v38, -1, -1);
    swift_slowDealloc(v37, -1, -1);
    swift_release(a1);

  }
  else
  {
    swift_release(a1);

  }
  return v34;
}

uint64_t sub_100068094()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy18FMMeViewController_stewieViewModel));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy18FMMeViewController_peopleSubscription));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy18FMMeViewController_deviceSubscription));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy18FMMeViewController_conditionsSubscription));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy18FMMeViewController_displayAddress + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy18FMMeViewController_cancellables));
  return sub_10005E190(v0 + OBJC_IVAR____TtC6FindMy18FMMeViewController_delegate);
}

id sub_1000681D4()
{
  void *v0;
  objc_class *ObjectType;
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  _QWORD *v7;
  id v8;
  uint64_t v9;
  id v11;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType(v0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v2 = type metadata accessor for Logger(0);
  sub_100056D88(v2, (uint64_t)qword_1005F5748);
  v3 = v0;
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 138412290;
    v11 = v3;
    v8 = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12);
    *v7 = v3;

    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMMeViewController<%@>: deinit", v6, 0xCu);
    v9 = sub_100053F2C((uint64_t *)&unk_1005D9680);
    swift_arrayDestroy(v7, 1, v9);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {

  }
  v12.receiver = v3;
  v12.super_class = ObjectType;
  return objc_msgSendSuper2(&v12, "dealloc");
}

double sub_1000684F4(char a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __n128 v50;
  char *v51;
  _BYTE v54[24];
  objc_super v55;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType(v2);
  v5 = sub_100053F2C(&qword_1005D2C80);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = &v54[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v55.receiver = v2;
  v55.super_class = ObjectType;
  objc_msgSendSuper2(&v55, "viewWillAppear:", a1 & 1);
  v9 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator;
  v10 = *(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator] + 48);
  v11 = type metadata accessor for FMPeopleSubscription(0);
  v12 = swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  v13 = v12 + OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_subscriber;
  *(_QWORD *)(v13 + 8) = 0;
  swift_unknownObjectWeakInit(v13);
  swift_retain(v10);
  v14 = v2;
  UUID.init()(v14);
  v15 = v12 + OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_subscriber;
  *(_QWORD *)(v15 + 8) = &off_1005412B8;
  swift_unknownObjectWeakAssign(v15, v14);

  swift_beginAccess(v10 + 16, v54, 33, 0);
  v16 = swift_retain(v12);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16);
  v18 = *(_QWORD *)((*(_QWORD *)(v10 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v17 = *(_QWORD *)((*(_QWORD *)(v10 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v18 >= v17 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
  v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v12);
  specialized Array._endMutation()(v19);
  swift_endAccess(v54);
  swift_release(v10);
  v20 = *(_QWORD *)&v14[OBJC_IVAR____TtC6FindMy18FMMeViewController_peopleSubscription];
  *(_QWORD *)&v14[OBJC_IVAR____TtC6FindMy18FMMeViewController_peopleSubscription] = v12;
  swift_release(v20);
  v21 = *(_QWORD *)(*(_QWORD *)&v2[v9] + 24);
  v22 = type metadata accessor for FMDevicesSubscription(0);
  v23 = swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  v24 = v23 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
  *(_QWORD *)(v24 + 8) = 0;
  swift_unknownObjectWeakInit(v24);
  v25 = v14;
  v26 = swift_retain(v21);
  UUID.init()(v26);
  v27 = v23 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
  *(_QWORD *)(v27 + 8) = &off_100541218;
  swift_unknownObjectWeakAssign(v27, v25);

  swift_beginAccess(v21 + 16, v54, 33, 0);
  v28 = swift_retain(v23);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v28);
  v30 = *(_QWORD *)((*(_QWORD *)(v21 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v29 = *(_QWORD *)((*(_QWORD *)(v21 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v30 >= v29 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v29 > 1, v30 + 1, 1);
  v31 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v23);
  specialized Array._endMutation()(v31);
  swift_endAccess(v54);
  swift_release(v21);
  v32 = *(_QWORD *)&v25[OBJC_IVAR____TtC6FindMy18FMMeViewController_deviceSubscription];
  *(_QWORD *)&v25[OBJC_IVAR____TtC6FindMy18FMMeViewController_deviceSubscription] = v23;
  swift_release(v32);
  v33 = *(void **)(*(_QWORD *)&v2[v9] + 16);
  v34 = type metadata accessor for FMConditionSubscription(0);
  v35 = swift_allocObject(v34, *(unsigned int *)(v34 + 48), *(unsigned __int16 *)(v34 + 52));
  v36 = v35 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber;
  *(_QWORD *)(v36 + 8) = 0;
  swift_unknownObjectWeakInit(v36);
  v37 = v25;
  v38 = v33;
  UUID.init()(v38);
  v39 = v35 + OBJC_IVAR____TtC6FindMy23FMConditionSubscription_subscriber;
  *(_QWORD *)(v39 + 8) = &off_100541320;
  swift_unknownObjectWeakAssign(v39, v37);

  v40 = &v38[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions];
  swift_beginAccess(&v38[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions], v54, 33, 0);
  v41 = swift_retain(v35);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v41);
  v43 = *(_QWORD *)((*(_QWORD *)v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v42 = *(_QWORD *)((*(_QWORD *)v40 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v43 >= v42 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v42 > 1, v43 + 1, 1);
  v44 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v43, v35);
  specialized Array._endMutation()(v44);
  swift_endAccess(v54);

  v45 = *(_QWORD *)&v37[OBJC_IVAR____TtC6FindMy18FMMeViewController_conditionsSubscription];
  *(_QWORD *)&v37[OBJC_IVAR____TtC6FindMy18FMMeViewController_conditionsSubscription] = v35;
  swift_release(v45);
  sub_1000689D0();
  swift_beginAccess(*(_QWORD *)&v37[OBJC_IVAR____TtC6FindMy18FMMeViewController_stewieViewModel]+ OBJC_IVAR____TtC6FindMy17FMStewieViewModel__state, v54, 33, 0);
  v46 = sub_100053F2C(&qword_1005D2C88);
  Published.projectedValue.getter(v46);
  swift_endAccess(v54);
  v47 = swift_allocObject(&unk_100541980, 24, 7);
  swift_unknownObjectWeakInit(v47 + 16);
  v48 = sub_10003F774((unint64_t *)&qword_1005D2C90, &qword_1005D2C80, (uint64_t)&protocol conformance descriptor for Published<A>.Publisher);
  v49 = Publisher<>.sink(receiveValue:)(sub_100073CB0, v47, v5, v48);
  v50 = swift_release(v47);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v6 + 8))(v8, v5, v50);
  v51 = &v37[OBJC_IVAR____TtC6FindMy18FMMeViewController_cancellables];
  swift_beginAccess(&v37[OBJC_IVAR____TtC6FindMy18FMMeViewController_cancellables], v54, 33, 0);
  AnyCancellable.store(in:)(v51);
  swift_endAccess(v54);
  swift_release(v49);
  return sub_1001386E0();
}

id sub_1000689D0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  void *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  __n128 v59;
  _QWORD *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, char *, uint64_t);
  char *v65;
  unint64_t v66;
  unint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  id v71;
  NSObject *v72;
  os_log_type_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  double v92;
  uint64_t v93;
  void *v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  __n128 v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  __n128 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __n128 v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  double v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _BYTE *v121;
  _BYTE *v122;
  _BYTE *v123;
  _BYTE *v124;
  _BYTE *v125;
  _BYTE *v126;
  int v127;
  uint64_t (*v128)(char *, uint64_t, uint64_t);
  char *v129;
  uint64_t v130;
  char v131;
  char *v132;
  void (*v133)(char *, uint64_t);
  int v134;
  uint64_t v135;
  char v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  __int16 v149;
  __int16 v150;
  char *v151;
  uint64_t v152;
  double v153;
  uint64_t v154;
  _BYTE *v155;
  char *v156;
  _BYTE *v157;
  uint64_t v158;
  char **v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  __n128 v163;
  unint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  void (*v169)(char *, _QWORD, uint64_t);
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char v175;
  char *v176;
  __n128 v177;
  void (*v178)(char *, uint64_t, __n128);
  uint64_t v179;
  uint64_t v180;
  char v181;
  void (*v182)(char *, uint64_t);
  char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char *v190;
  void (*v191)(char *, char *, uint64_t);
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  char v196;
  __n128 v197;
  uint64_t v198;
  char v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unsigned int (*v206)(uint64_t, uint64_t, uint64_t);
  uint64_t v207;
  unsigned int v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  char v213;
  void (*v214)(char *, uint64_t);
  uint64_t v215;
  uint64_t v216;
  double v217;
  char **v218;
  void *v219;
  void *v220;
  uint64_t v221;
  double v222;
  char *v223;
  void *v224;
  char *v225;
  uint64_t v226;
  char v227;
  char *v228;
  void *v229;
  uint64_t v230;
  uint64_t v231;
  void *v232;
  id v233;
  id v234;
  id v235;
  id v236;
  id v237;
  id v238;
  id v239;
  id v240;
  id v241;
  id v242;
  id v243;
  id v244;
  uint64_t v245;
  uint64_t v246;
  Class isa;
  uint64_t v248;
  _BYTE *v249;
  _BYTE *v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t KeyPath;
  uint64_t v256;
  void *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  const mach_header_64 *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  char v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  unint64_t v273;
  uint64_t v274;
  uint64_t v275;
  __n128 v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  double v284;
  char *v285;
  uint64_t Strong;
  uint64_t v287;
  uint64_t v288;
  uint64_t ObjectType;
  _BYTE *v290;
  char v291;
  _BYTE *v292;
  uint64_t v293;
  _BYTE *v294;
  _BYTE *v295;
  uint64_t v296;
  void *v297;
  id v298;
  void *v299;
  uint64_t v300;
  unint64_t v301;
  unint64_t v302;
  uint64_t v303;
  _BOOL8 v304;
  uint64_t v306;
  uint64_t v307;
  char *v308;
  void (*v309)(uint64_t, uint64_t);
  unsigned int v310;
  char *v311;
  char *v312;
  char *v313;
  char *v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  char *v318;
  char *v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  id v326;
  char *v327;
  char *v328;
  char *v329;
  uint64_t v330;
  char *v331;
  char *v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  char *v339;
  char *v340;
  char *v341;
  char *v342;
  uint64_t v343;
  char *v344;
  char *v345;
  uint64_t v346;
  char *v347;
  unint64_t v348;
  char *v349;
  char *v350;
  id v351;
  __int128 v352;
  id v353;
  __int128 v354;
  char v355;
  void *v356;

  v1 = sub_100053F2C((uint64_t *)&unk_1005D3350);
  __chkstk_darwin(v1);
  v313 = (char *)&v306 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v317 = type metadata accessor for FMFLocationAlertAcceptanceStatus(0);
  v322 = *(_QWORD *)(v317 - 8);
  __chkstk_darwin(v317);
  v311 = (char *)&v306 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v316 = sub_100053F2C((uint64_t *)&unk_1005D2A30);
  __chkstk_darwin(v316);
  v334 = (uint64_t)&v306 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100053F2C((uint64_t *)&unk_1005DF470);
  v6 = __chkstk_darwin(v5);
  v319 = (char *)&v306 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v321 = (uint64_t)&v306 - v9;
  __chkstk_darwin(v8);
  v320 = (uint64_t)&v306 - v10;
  v346 = type metadata accessor for FMFLocationAlertTarget(0);
  v343 = *(_QWORD *)(v346 - 8);
  v11 = __chkstk_darwin(v346);
  v340 = (char *)&v306 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  v339 = (char *)&v306 - v14;
  v15 = __chkstk_darwin(v13);
  v342 = (char *)&v306 - v16;
  __chkstk_darwin(v15);
  v341 = (char *)&v306 - v17;
  v336 = type metadata accessor for FMFLocationAlert(0);
  v330 = *(_QWORD *)(v336 - 8);
  v18 = __chkstk_darwin(v336);
  v328 = (char *)&v306 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v327 = (char *)&v306 - v21;
  v22 = __chkstk_darwin(v20);
  v344 = (char *)&v306 - v23;
  v24 = __chkstk_darwin(v22);
  v329 = (char *)&v306 - v25;
  __chkstk_darwin(v24);
  v332 = (char *)&v306 - v26;
  v27 = sub_100053F2C((uint64_t *)&unk_1005D2A40);
  __chkstk_darwin(v27);
  v318 = (char *)&v306 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v325 = type metadata accessor for FMFMyInfo(0);
  v324 = *(_QWORD *)(v325 - 8);
  __chkstk_darwin(v325);
  v323 = (uint64_t)&v306 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_100053F2C((uint64_t *)&unk_1005E59F0);
  __chkstk_darwin(v30);
  v331 = (char *)&v306 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v333 = type metadata accessor for FMFPreferences(0);
  v338 = *(_QWORD *)(v333 - 8);
  v32 = __chkstk_darwin(v333);
  v312 = (char *)&v306 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __chkstk_darwin(v32);
  v314 = (char *)&v306 - v35;
  __chkstk_darwin(v34);
  v335 = (uint64_t)&v306 - v36;
  v37 = sub_100053F2C((uint64_t *)&unk_1005D2A50);
  __chkstk_darwin(v37);
  v39 = (char *)&v306 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for FMIPUnknownItem(0);
  v41 = *(_QWORD *)(v40 - 8);
  v42 = __chkstk_darwin(v40);
  v44 = (char *)&v306 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __chkstk_darwin(v42);
  v350 = (char *)&v306 - v46;
  __chkstk_darwin(v45);
  v48 = (char *)&v306 - v47;
  v345 = v0;
  v337 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator;
  v49 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator];
  v50 = *(_QWORD *)(v49 + 24);
  LODWORD(v326) = *(unsigned __int8 *)(*(_QWORD *)(v49 + 16) + OBJC_IVAR____TtC6FindMy19FMConditionProvider_isNetworkUp);
  v51 = swift_retain(v50);
  v52 = FMIPManager.unknownItems.getter(v51);
  swift_release(v50);
  v53 = *(_QWORD *)(v52 + 16);
  if (v53)
  {
    v348 = (*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
    v54 = v52 + v348;
    v55 = *(void **)(v41 + 72);
    v56 = *(char **)(v41 + 16);
    v315 = v52;
    v57 = v52;
    v58 = v56;
    v59 = swift_bridgeObjectRetain(v57);
    v60 = _swiftEmptyArrayStorage;
    v349 = v44;
    v351 = v55;
    v347 = v58;
    do
    {
      v62 = ((uint64_t (*)(char *, unint64_t, uint64_t, __n128))v58)(v48, v54, v40, v59);
      if ((FMIPUnknownItem.isIgnored.getter(v62) & 1) != 0)
      {
        ((void (*)(char *, char *, uint64_t))v58)(v39, v48, v40);
        v63 = 0;
      }
      else
      {
        v63 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56))(v39, v63, 1, v40);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v48, v40);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40) == 1)
      {
        sub_1000051EC((uint64_t)v39, (uint64_t *)&unk_1005D2A50);
        v61 = v351;
      }
      else
      {
        v64 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
        v65 = v350;
        v64(v350, v39, v40);
        v64(v44, v65, v40);
        if ((swift_isUniquelyReferenced_nonNull_native(v60) & 1) == 0)
          v60 = (_QWORD *)sub_100059310(0, v60[2] + 1, 1, (unint64_t)v60, &qword_1005D2A80, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPUnknownItem);
        v67 = v60[2];
        v66 = v60[3];
        if (v67 >= v66 >> 1)
          v60 = (_QWORD *)sub_100059310(v66 > 1, v67 + 1, 1, (unint64_t)v60, &qword_1005D2A80, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPUnknownItem);
        v60[2] = v67 + 1;
        v61 = v351;
        v68 = (char *)v60 + v348 + v67 * (_QWORD)v351;
        v44 = v349;
        v64(v68, v349, v40);
        v58 = v347;
      }
      v54 += (unint64_t)v61;
      --v53;
    }
    while (v53);
    swift_bridgeObjectRelease_n(v315, 2);
  }
  else
  {
    swift_bridgeObjectRelease(v52);
    v60 = _swiftEmptyArrayStorage;
  }
  v350 = (char *)v60[2];
  swift_bridgeObjectRelease(v60);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v69 = type metadata accessor for Logger(0);
  sub_100056D88(v69, (uint64_t)qword_1005F5748);
  v70 = v345;
  v71 = v345;
  v72 = Logger.logObject.getter(v71);
  v73 = static os_log_type_t.default.getter(v72);
  if (os_log_type_enabled(v72, v73))
  {
    v74 = swift_slowAlloc(28, -1);
    v75 = (_QWORD *)swift_slowAlloc(8, -1);
    v76 = swift_slowAlloc(32, -1);
    *(_QWORD *)&v352 = v76;
    *(_DWORD *)v74 = 138412802;
    *(_QWORD *)&v354 = v71;
    v77 = v71;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v354, (char *)&v354 + 8);
    *v75 = v71;

    *(_WORD *)(v74 + 12) = 2080;
    *(_QWORD *)&v354 = 0;
    *((_QWORD *)&v354 + 1) = 0xE000000000000000;
    if (v350)
      v78 = 1702195828;
    else
      v78 = 0x65736C6166;
    if (v350)
      v79 = 0xE400000000000000;
    else
      v79 = 0xE500000000000000;
    v80 = v79;
    String.append(_:)(*(Swift::String *)&v78);
    v81 = v79;
    v70 = v345;
    swift_bridgeObjectRelease(v81);
    v82 = *((_QWORD *)&v354 + 1);
    *(_QWORD *)&v354 = sub_100056DA0(v354, *((unint64_t *)&v354 + 1), (uint64_t *)&v352);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v354, (char *)&v354 + 8);
    swift_bridgeObjectRelease(v82);
    *(_WORD *)(v74 + 22) = 1024;
    LODWORD(v354) = (_DWORD)v326;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v354, (char *)&v354 + 4);
    _os_log_impl((void *)&_mh_execute_header, v72, v73, "FMMeViewController<%@>: update, show clear button: %s, isNetworkUp: %{BOOL}d", (uint8_t *)v74, 0x1Cu);
    v83 = sub_100053F2C((uint64_t *)&unk_1005D9680);
    swift_arrayDestroy(v75, 1, v83);
    swift_slowDealloc(v75, -1, -1);
    swift_arrayDestroy(v76, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v76, -1, -1);
    swift_slowDealloc(v74, -1, -1);

  }
  else
  {

  }
  v84 = v333;
  v85 = v337;
  v86 = qword_1005D1F68;
  v87 = *(id *)(*(_QWORD *)&v70[v337] + 16);
  if (v86 != -1)
    swift_once(&qword_1005D1F68, sub_100006164);
  if (byte_1005F5E31 != 1)
  {

LABEL_34:
    v326 = *(id *)((char *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_stewieSettings);
    objc_msgSend(v326, "removeFromSuperview");
    objc_msgSend(*(id *)((char *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_coarseLabel), "removeFromSuperview");
    v347 = *(char **)((char *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_locationSettings);
    objc_msgSend(v347, "removeFromSuperview");
    goto LABEL_35;
  }
  v88 = *((_BYTE *)v87 + OBJC_IVAR____TtC6FindMy19FMConditionProvider_FMFRestricted);

  if ((v88 & 1) != 0)
    goto LABEL_34;
  v89 = *(_QWORD *)(*(_QWORD *)&v70[v85] + 48);
  v90 = swift_retain(v89);
  v91 = dispatch thunk of FMFManager.isInitialized.getter(v90);
  *(_QWORD *)&v92 = swift_release(v89).n128_u64[0];
  if ((v91 & 1) == 0)
    goto LABEL_34;
  v93 = OBJC_IVAR____TtC6FindMy18FMMeViewController_verticalStackView;
  v94 = *(void **)((char *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_verticalStackView);
  v326 = *(id *)((char *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_stewieSettings);
  objc_msgSend(v94, "insertArrangedSubview:atIndex:", v92);
  objc_msgSend(*(id *)((char *)v71 + v93), "insertArrangedSubview:atIndex:", *(_QWORD *)((char *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_coarseLabel), 0);
  v95 = *(void **)((char *)v71 + v93);
  v347 = *(char **)((char *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_locationSettings);
  objc_msgSend(v95, "insertArrangedSubview:atIndex:");
LABEL_35:
  v96 = *(_QWORD *)(*(_QWORD *)&v70[v85] + 48);
  v97 = swift_retain(v96);
  v98 = (uint64_t)v331;
  dispatch thunk of FMFManager.preferences.getter(v97);
  v99 = swift_release(v96);
  v100 = v338;
  v101 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v338 + 48))(v98, 1, v84, v99);
  v102 = v335;
  if (v101 == 1)
  {
    sub_1000051EC(v98, (uint64_t *)&unk_1005E59F0);
LABEL_41:
    v114 = (char *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_displayAddress;
    v115 = *(_QWORD *)((char *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_displayAddress + 8);
    *((_WORD *)v114 + 8) = 0;
    *(_QWORD *)v114 = 0;
    *((_QWORD *)v114 + 1) = 0;
    *(_QWORD *)&v116 = swift_bridgeObjectRelease(v115).n128_u64[0];
    v117 = *(char **)((char *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_notificationView);
    objc_msgSend(*(id *)&v117[OBJC_IVAR____TtC6FindMy20FMMeNotificationView_allowFriendRequestSwitch], "setHidden:", 1, v116);
    objc_msgSend(v117, "removeFromSuperview");
    v118 = OBJC_IVAR____TtC6FindMy18FMMeViewController_verticalStackView;
    v119 = OBJC_IVAR____TtC6FindMy18FMMeViewController_actionButtonsStackView;
    objc_msgSend(*(id *)((char *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_verticalStackView), "addArrangedSubview:", *(_QWORD *)((char *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_actionButtonsStackView));
    objc_msgSend(*(id *)((char *)v71 + v118), "addArrangedSubview:", *(_QWORD *)((char *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_helpFriendView));
    if (*((_BYTE *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_isClearTagEnabledOverride) == 2 && v350)
    {
      v120 = OBJC_IVAR____TtC6FindMy18FMMeViewController_clearIgnoredTagsButton;
      v121 = *(_BYTE **)((char *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_clearIgnoredTagsButton);
      v121[OBJC_IVAR____TtC6FindMy15FMPlatterButton_alignment] = 2;
      v122 = v121;
      sub_10043710C();

      v123 = *(_BYTE **)((char *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_editFindMyNotificationSettingsButton);
      v123[OBJC_IVAR____TtC6FindMy15FMPlatterButton_alignment] = 1;
      v124 = v123;
      sub_10043710C();

      objc_msgSend(*(id *)((char *)v71 + v119), "addArrangedSubview:", *(_QWORD *)((char *)v71 + v120));
    }
    else
    {
      v125 = *(_BYTE **)((char *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_editFindMyNotificationSettingsButton);
      v125[OBJC_IVAR____TtC6FindMy15FMPlatterButton_alignment] = 2;
      v126 = v125;
      sub_10043710C();

      objc_msgSend(*(id *)((char *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_clearIgnoredTagsButton), "removeFromSuperview");
    }
    goto LABEL_108;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v100 + 32))(v335, v98, v84);
  v103 = *(_QWORD *)(*(_QWORD *)&v70[v85] + 48);
  v104 = v100;
  v105 = swift_retain(v103);
  v106 = dispatch thunk of FMFManager.devices.getter(v105);
  v107 = swift_release(v103);
  if (!v106)
  {
    (*(void (**)(uint64_t, uint64_t, __n128))(v104 + 8))(v102, v84, v107);
    goto LABEL_41;
  }
  v315 = v106;
  v108 = *(_QWORD *)(*(_QWORD *)&v70[v85] + 48);
  v109 = swift_retain(v108);
  v110 = (uint64_t)v318;
  dispatch thunk of FMFManager.myInfo.getter(v109);
  v111 = swift_release(v108);
  v112 = v324;
  v113 = v325;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v324 + 48))(v110, 1, v325, v111) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v338 + 8))(v102, v84);
    swift_bridgeObjectRelease(v315);
    sub_1000051EC(v110, (uint64_t *)&unk_1005D2A40);
    goto LABEL_41;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v112 + 32))(v323, v110, v113);
  v127 = *((unsigned __int8 *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_isLocationSharingOnOverride);
  v128 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v338 + 16);
  v129 = v314;
  v130 = v128(v314, v102, v84);
  if (v127 == 2)
    v131 = FMFPreferences.hideLocation.getter(v130) ^ 1;
  else
    v131 = v127 & 1;
  v132 = v312;
  v133 = *(void (**)(char *, uint64_t))(v338 + 8);
  v133(v129, v84);
  v134 = *((unsigned __int8 *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_isAllowFriendsRequestOnOverride);
  v135 = v128(v132, v102, v84);
  if (v134 == 2)
    v136 = FMFPreferences.allowFriendRequests.getter(v135);
  else
    v136 = v134 & 1;
  v309 = (void (*)(uint64_t, uint64_t))v133;
  v133(v132, v84);
  v137 = v347;
  v138 = *(_QWORD *)&v347[OBJC_IVAR____TtC6FindMy22FMLocationSettingsView_shareLocationSwitch];
  v139 = v131 & 1;
  *(_BYTE *)(v138 + OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_isOn) = v139;
  objc_msgSend(*(id *)(v138 + OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_settingSwitch), "setOn:", v139);
  v140 = v345;
  v141 = v337;
  v142 = *(_QWORD *)(*(_QWORD *)&v345[v337] + 48);
  v143 = swift_retain(v142);
  v144 = dispatch thunk of FMFManager.friendsOperationsRestricted.getter(v143);
  swift_release(v142);
  v137[OBJC_IVAR____TtC6FindMy22FMLocationSettingsView_friendsOperationsRestricted] = v144 & 1;
  v145 = *(_QWORD *)&v140[v141];
  swift_retain(v145);
  v146 = sub_100071738(v139, v145);
  v148 = v147;
  v150 = v149;
  swift_release(v145);
  v151 = (char *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_displayAddress;
  v152 = *(_QWORD *)((char *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_displayAddress + 8);
  *(_QWORD *)v151 = v146;
  *((_QWORD *)v151 + 1) = v148;
  v308 = v151;
  *((_WORD *)v151 + 8) = v150 & 0x101;
  *(_QWORD *)&v153 = swift_bridgeObjectRelease(v152).n128_u64[0];
  v154 = *(_QWORD *)((char *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_notificationView);
  v155 = *(_BYTE **)(v154 + OBJC_IVAR____TtC6FindMy20FMMeNotificationView_allowFriendRequestSwitch);
  v156 = v140;
  v155[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_isOn] = v136 & 1;
  objc_msgSend(*(id *)&v155[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_settingSwitch], "setOn:", v153);
  v155[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_isEnabled] = (v144 & 1) == 0;
  v157 = v155;
  sub_100115CF4();

  v158 = OBJC_IVAR____TtC6FindMy18FMMeViewController_verticalStackView;
  v159 = &selRef_viewWillAppear_;
  objc_msgSend(*(id *)((char *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_verticalStackView), "addArrangedSubview:", v154);
  v312 = (char *)OBJC_IVAR____TtC6FindMy18FMMeViewController_actionButtonsStackView;
  objc_msgSend(*(id *)((char *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_actionButtonsStackView), "removeFromSuperview");
  v160 = *(_QWORD *)(*(_QWORD *)&v156[v141] + 48);
  v161 = swift_retain(v160);
  v162 = dispatch thunk of FMFManager.locationAlerts.getter(v161);
  v163 = swift_release(v160);
  v314 = (char *)v158;
  if (!v162)
  {
    v219 = *(void **)((char *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_locationAlerts);
    objc_msgSend(v219, "removeFromSuperview", v163.n128_f64[0]);
    v220 = *(void **)((char *)v71 + v158);
    v351 = v219;
    objc_msgSend(v220, "addArrangedSubview:", v219);
    v218 = &selRef_viewWillAppear_;
    goto LABEL_83;
  }
  v307 = v162;
  v164 = *(_QWORD *)(v162 + 16);
  v165 = v332;
  if (!v164)
  {
LABEL_77:
    *(_QWORD *)&v217 = swift_bridgeObjectRelease(v307).n128_u64[0];
    v351 = *(id *)((char *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_locationAlerts);
    objc_msgSend(v351, "removeFromSuperview", v217);
    v156 = v345;
    v141 = v337;
    v218 = &selRef_viewWillAppear_;
    v159 = &selRef_viewWillAppear_;
    v158 = (uint64_t)v314;
    goto LABEL_83;
  }
  v166 = (char *)(v307 + ((*(unsigned __int8 *)(v330 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v330 + 80)));
  LODWORD(v338) = enum case for FMFLocationAlertTarget.alertFriends(_:);
  LODWORD(v331) = enum case for FMFLocationAlertTarget.alertMe(_:);
  v310 = enum case for FMFLocationAlertAcceptanceStatus.hidden(_:);
  v318 = *(char **)(v330 + 72);
  v351 = *(id *)(v330 + 16);
  while (1)
  {
    v349 = v166;
    v168 = ((uint64_t (*)(char *, __n128))v351)(v165, v163);
    FMFLocationAlert.locationAlertTarget.getter(v168);
    v169 = *(void (**)(char *, _QWORD, uint64_t))(v343 + 104);
    v170 = v346;
    v169(v342, v338, v346);
    v171 = sub_100008000((unint64_t *)&unk_1005E5A00, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocationAlertTarget, (uint64_t)&protocol conformance descriptor for FMFLocationAlertTarget);
    dispatch thunk of RawRepresentable.rawValue.getter(&v354, v170, v171);
    dispatch thunk of RawRepresentable.rawValue.getter(&v352, v170, v171);
    v172 = *((_QWORD *)&v354 + 1);
    v173 = *((_QWORD *)&v352 + 1);
    if ((_QWORD)v354 == (_QWORD)v352 && *((_QWORD *)&v354 + 1) == *((_QWORD *)&v352 + 1))
    {
      v175 = 1;
      v173 = *((_QWORD *)&v354 + 1);
    }
    else
    {
      v175 = _stringCompareWithSmolCheck(_:_:expecting:)(v354, *((_QWORD *)&v354 + 1), v352, *((_QWORD *)&v352 + 1), 0);
    }
    v176 = v329;
    swift_bridgeObjectRelease(v172);
    v177 = swift_bridgeObjectRelease(v173);
    v178 = *(void (**)(char *, uint64_t, __n128))(v343 + 8);
    v179 = v346;
    v178(v342, v346, v177);
    ((void (*)(char *, uint64_t))v178)(v341, v179);
    v167 = v336;
    v180 = ((uint64_t (*)(char *, char *, uint64_t))v351)(v176, v165, v336);
    if ((v175 & 1) != 0)
      v181 = FMFLocationAlert.setByMe.getter(v180);
    else
      v181 = 0;
    v182 = *(void (**)(char *, uint64_t))(v330 + 8);
    v182(v176, v167);
    v183 = v344;
    v184 = ((uint64_t (*)(char *, char *, uint64_t))v351)(v344, v165, v167);
    if ((v181 & 1) != 0)
    {
      v182(v183, v167);
      goto LABEL_82;
    }
    v348 = v164;
    FMFLocationAlert.locationAlertTarget.getter(v184);
    v185 = v346;
    v169(v340, v331, v346);
    dispatch thunk of RawRepresentable.rawValue.getter(&v354, v185, v171);
    dispatch thunk of RawRepresentable.rawValue.getter(&v352, v185, v171);
    v186 = *((_QWORD *)&v354 + 1);
    v187 = *((_QWORD *)&v352 + 1);
    if (v354 == v352)
    {
      swift_bridgeObjectRelease_n(*((_QWORD *)&v354 + 1), 2);
      v188 = v346;
      ((void (*)(char *, uint64_t))v178)(v340, v346);
      ((void (*)(char *, uint64_t))v178)(v339, v188);
      v189 = v327;
      v190 = v344;
      v191 = (void (*)(char *, char *, uint64_t))v351;
      v192 = ((uint64_t (*)(char *, char *, uint64_t))v351)(v327, v344, v167);
      v193 = v334;
      v194 = v167;
      v195 = v328;
    }
    else
    {
      v194 = v167;
      v196 = _stringCompareWithSmolCheck(_:_:expecting:)(v354, *((_QWORD *)&v354 + 1), v352, *((_QWORD *)&v352 + 1), 0);
      swift_bridgeObjectRelease(v186);
      v197 = swift_bridgeObjectRelease(v187);
      v198 = v346;
      v178(v340, v346, v197);
      ((void (*)(char *, uint64_t))v178)(v339, v198);
      v189 = v327;
      v190 = v344;
      v191 = (void (*)(char *, char *, uint64_t))v351;
      v192 = ((uint64_t (*)(char *, char *, uint64_t))v351)(v327, v344, v194);
      v193 = v334;
      v195 = v328;
      if ((v196 & 1) == 0)
      {
        v182(v189, v194);
        v191(v195, v190, v194);
        v167 = v194;
        v165 = v332;
LABEL_55:
        v182(v195, v167);
        v182(v190, v167);
        goto LABEL_56;
      }
    }
    v199 = FMFLocationAlert.setOnMe.getter(v192);
    v182(v189, v194);
    v200 = ((uint64_t (*)(char *, char *, uint64_t))v191)(v195, v190, v194);
    v167 = v194;
    v165 = v332;
    if ((v199 & 1) == 0)
      goto LABEL_55;
    v201 = v320;
    FMFLocationAlert.acceptanceStatus.getter(v200);
    v202 = v322;
    v203 = v321;
    v204 = v317;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v322 + 104))(v321, v310, v317);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v202 + 56))(v203, 0, 1, v204);
    v205 = v193 + *(int *)(v316 + 48);
    sub_100007464(v201, v193, (uint64_t *)&unk_1005DF470);
    sub_100007464(v203, v205, (uint64_t *)&unk_1005DF470);
    v206 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v202 + 48);
    if (v206(v193, 1, v204) != 1)
      break;
    sub_1000051EC(v203, (uint64_t *)&unk_1005DF470);
    sub_1000051EC(v201, (uint64_t *)&unk_1005DF470);
    v207 = v336;
    v182(v195, v336);
    v182(v344, v207);
    v208 = v206(v205, 1, v204);
    v165 = v332;
    if (v208 != 1)
      goto LABEL_81;
    sub_1000051EC(v334, (uint64_t *)&unk_1005DF470);
    v167 = v336;
LABEL_56:
    v182(v165, v167);
    v166 = &v318[(_QWORD)v349];
    v164 = v348 - 1;
    if (v348 == 1)
      goto LABEL_77;
  }
  v209 = (uint64_t)v319;
  sub_100007464(v334, (uint64_t)v319, (uint64_t *)&unk_1005DF470);
  if (v206(v205, 1, v204) != 1)
  {
    v210 = v322;
    v211 = v311;
    (*(void (**)(char *, uint64_t, uint64_t))(v322 + 32))(v311, v205, v204);
    v212 = sub_100008000((unint64_t *)&unk_1005D2A70, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocationAlertAcceptanceStatus, (uint64_t)&protocol conformance descriptor for FMFLocationAlertAcceptanceStatus);
    v213 = dispatch thunk of static Equatable.== infix(_:_:)(v319, v211, v204, v212);
    v214 = *(void (**)(char *, uint64_t))(v210 + 8);
    v214(v211, v204);
    sub_1000051EC(v321, (uint64_t *)&unk_1005DF470);
    sub_1000051EC(v320, (uint64_t *)&unk_1005DF470);
    v215 = v336;
    v182(v195, v336);
    v182(v344, v215);
    v216 = v204;
    v167 = v215;
    v214(v319, v216);
    sub_1000051EC(v334, (uint64_t *)&unk_1005DF470);
    v165 = v332;
    if ((v213 & 1) == 0)
      goto LABEL_82;
    goto LABEL_56;
  }
  sub_1000051EC(v321, (uint64_t *)&unk_1005DF470);
  sub_1000051EC(v320, (uint64_t *)&unk_1005DF470);
  v221 = v336;
  v182(v195, v336);
  v182(v344, v221);
  (*(void (**)(uint64_t, uint64_t))(v322 + 8))(v209, v204);
  v165 = v332;
LABEL_81:
  sub_1000051EC(v334, (uint64_t *)&unk_1005D2A30);
  v167 = v336;
LABEL_82:
  *(_QWORD *)&v222 = swift_bridgeObjectRelease(v307).n128_u64[0];
  v223 = v314;
  v224 = *(void **)&v314[(_QWORD)v71];
  v225 = v165;
  v159 = &selRef_viewWillAppear_;
  v351 = *(id *)((char *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_locationAlerts);
  objc_msgSend(v224, "addArrangedSubview:", v222);
  v182(v225, v167);
  v158 = (uint64_t)v223;
  v156 = v345;
  v141 = v337;
  v218 = &selRef_viewWillAppear_;
LABEL_83:
  v226 = *(_QWORD *)(*(_QWORD *)&v156[v141] + 40);
  if (*(_BYTE *)(v226 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_isLocationAuthorized) == 1)
    v227 = *(_BYTE *)(v226 + OBJC_IVAR____TtC6FindMy18FMLocationProvider_limitedPrecision) ^ 1;
  else
    v227 = 0;
  objc_msgSend(*(id *)((char *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_coarseLabel), v218[3], v227 & 1);
  v228 = v312;
  objc_msgSend(*(id *)((char *)v71 + v158), v159[4], *(_QWORD *)&v312[(_QWORD)v71]);
  v229 = (void *)objc_opt_self(NSLayoutConstraint);
  v230 = sub_100053F2C(&qword_1005D2F10);
  v231 = swift_allocObject(v230, 64, 7);
  *(_OWORD *)(v231 + 16) = xmmword_100481720;
  v232 = *(void **)((char *)v71 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_actionBackground);
  v233 = objc_msgSend(v232, "widthAnchor");
  v234 = objc_msgSend(*(id *)&v228[(_QWORD)v71], "widthAnchor");
  v235 = objc_msgSend(v233, "constraintEqualToAnchor:", v234);

  *(_QWORD *)(v231 + 32) = v235;
  v236 = objc_msgSend(v232, "heightAnchor");
  v237 = objc_msgSend(*(id *)&v228[(_QWORD)v71], "heightAnchor");
  v238 = objc_msgSend(v236, "constraintEqualToAnchor:", v237);

  *(_QWORD *)(v231 + 40) = v238;
  v239 = objc_msgSend(v232, "centerYAnchor");
  v240 = objc_msgSend(*(id *)&v228[(_QWORD)v71], "centerYAnchor");
  v241 = objc_msgSend(v239, "constraintEqualToAnchor:", v240);

  *(_QWORD *)(v231 + 48) = v241;
  v242 = objc_msgSend(v232, "centerXAnchor");
  v243 = objc_msgSend(*(id *)&v228[(_QWORD)v71], "centerXAnchor");
  v244 = objc_msgSend(v242, "constraintEqualToAnchor:", v243);

  *(_QWORD *)(v231 + 56) = v244;
  *(_QWORD *)&v354 = v231;
  specialized Array._endMutation()(v245);
  v246 = v354;
  sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v229, "activateConstraints:", isa, swift_bridgeObjectRelease(v246).n128_f64[0]);

  v248 = OBJC_IVAR____TtC6FindMy18FMMeViewController_clearIgnoredTagsButton;
  v249 = *(_BYTE **)((char *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_clearIgnoredTagsButton);
  if (*((_BYTE *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_isClearTagEnabledOverride) == 2 && v350)
  {
    v249[OBJC_IVAR____TtC6FindMy15FMPlatterButton_alignment] = 2;
    v250 = v249;
    sub_10043710C();

    objc_msgSend(*(id *)&v312[(_QWORD)v71], "addArrangedSubview:", *(_QWORD *)((char *)v71 + v248));
    v251 = v345;
    v252 = (uint64_t)v313;
    v253 = v333;
  }
  else
  {
    objc_msgSend(v249, "removeFromSuperview");
    v251 = v345;
    v252 = (uint64_t)v313;
    v253 = v333;
  }
  v254 = *(_QWORD *)((char *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_stewieViewModel);
  KeyPath = swift_getKeyPath(&unk_100481828);
  v256 = swift_getKeyPath(&unk_100481850);
  static Published.subscript.getter(&v354, v254, KeyPath, v256);
  swift_release(KeyPath);
  swift_release(v256);
  v257 = v356;
  v258 = 256;
  if (!BYTE1(v354))
    v258 = 0;
  v259 = v258 | v354;
  v260 = 0x10000;
  if (!BYTE2(v354))
    v260 = 0;
  v261 = 0x1000000;
  if (!BYTE3(v354))
    v261 = 0;
  v262 = v259 | v260 | v261;
  v263 = &_mh_execute_header;
  if (!BYTE4(v354))
    v263 = 0;
  v264 = 0x10000000000;
  if (!BYTE5(v354))
    v264 = 0;
  v265 = 0x1000000000000;
  if (!BYTE6(v354))
    v265 = 0;
  sub_100138484(v262 | (unint64_t)v263 | v264 | v265, *((uint64_t *)&v354 + 1), v355, v356, &v354);

  v266 = swift_getKeyPath(&unk_100481828);
  v267 = swift_getKeyPath(&unk_100481850);
  static Published.subscript.getter(&v352, v254, v266, v267);
  swift_release(v266);
  swift_release(v267);
  v268 = v352;

  sub_1003746F8(&v354, v268);
  sub_100071DB8((uint64_t)&v354);
  v269 = v337;
  v270 = *(_QWORD *)(*(_QWORD *)&v251[v337] + 48);
  v271 = swift_retain(v270);
  dispatch thunk of FMFManager.myLocation.getter(v271);
  swift_release(v270);
  v272 = *(_QWORD *)v308;
  v273 = *((_QWORD *)v308 + 1);
  LODWORD(v266) = *((unsigned __int16 *)v308 + 8);
  swift_bridgeObjectRetain(v273);
  v274 = v315;
  sub_10027BF14(v335, v315, v323, v252, v272, v273, v266);
  swift_bridgeObjectRelease(v273);
  swift_bridgeObjectRelease(v274);
  sub_1000051EC(v252, (uint64_t *)&unk_1005D3350);
  v275 = *(_QWORD *)(*(_QWORD *)&v251[v269] + 48);
  swift_retain(v275);
  v277 = dispatch thunk of FMFManager.friends.getter(v276);
  swift_release(v275);
  v278 = *(_QWORD *)(*(_QWORD *)&v251[v269] + 48);
  v279 = swift_retain(v278);
  v280 = dispatch thunk of FMFManager.locationAlerts.getter(v279);
  swift_release(v278);
  v281 = *(_QWORD *)(*(_QWORD *)&v251[v269] + 48);
  v282 = swift_retain(v281);
  v283 = dispatch thunk of FMFManager.contactsController.getter(v282);
  swift_release(v281);
  sub_1003D76F0(v277, v280, v283);
  swift_bridgeObjectRelease(v277);
  swift_release(v283);
  *(_QWORD *)&v284 = swift_bridgeObjectRelease(v280).n128_u64[0];
  objc_msgSend(*(id *)&v314[(_QWORD)v71], "addArrangedSubview:", *(_QWORD *)((char *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_helpFriendView), v284);
  v285 = (char *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_delegate;
  Strong = swift_unknownObjectWeakLoadStrong((char *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_delegate);
  if (Strong)
  {
    v287 = Strong;
    v288 = *((_QWORD *)v285 + 1);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, uint64_t))(v288 + 8))(ObjectType, v288);
    swift_unknownObjectRelease(v287);
  }
  v290 = *(_BYTE **)((char *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_editFindMyNotificationSettingsButton);
  if (v350)
    v291 = 1;
  else
    v291 = 2;
  v290[OBJC_IVAR____TtC6FindMy15FMPlatterButton_alignment] = v291;
  v292 = v290;
  sub_10043710C();

  (*(void (**)(uint64_t, uint64_t))(v324 + 8))(v323, v325);
  v309(v335, v253);
LABEL_108:
  v293 = OBJC_IVAR____TtC6FindMy18FMMeViewController_editSafetyAlertsNotificationSettingsButton;
  v294 = *(_BYTE **)((char *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_editSafetyAlertsNotificationSettingsButton);
  v294[OBJC_IVAR____TtC6FindMy15FMPlatterButton_alignment] = 0;
  v295 = v294;
  sub_10043710C();

  v296 = OBJC_IVAR____TtC6FindMy18FMMeViewController_actionButtonsStackView;
  objc_msgSend(*(id *)((char *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_actionButtonsStackView), "addArrangedSubview:", *(_QWORD *)((char *)v71 + OBJC_IVAR____TtC6FindMy18FMMeViewController_editFindMyNotificationSettingsButton));
  objc_msgSend(*(id *)((char *)v71 + v296), "addArrangedSubview:", *(_QWORD *)((char *)v71 + v293));
  v297 = *(void **)((char *)v71 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_tertiaryLabel);
  v298 = objc_msgSend(v297, "text");
  if (v298)
  {
    v299 = v298;
    v300 = static String._unconditionallyBridgeFromObjectiveC(_:)(v298);
    v302 = v301;

    swift_bridgeObjectRelease(v302);
    v303 = HIBYTE(v302) & 0xF;
    if ((v302 & 0x2000000000000000) == 0)
      v303 = v300 & 0xFFFFFFFFFFFFLL;
    v304 = v303 == 0;
  }
  else
  {
    v304 = 1;
  }
  return objc_msgSend(v297, "setHidden:", v304);
}

void sub_10006A8EC(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  void *v10;
  uint64_t Strong;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const mach_header_64 *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  _BYTE v24[24];
  __int128 v25[3];

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v8 = a1[6];
  v23 = *((_QWORD *)a1 + 1);
  v22 = a1[16];
  v9 = a2 + 16;
  v10 = (void *)*((_QWORD *)a1 + 3);
  swift_beginAccess(a2 + 16, v24, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v9);
  if (Strong)
  {
    v12 = (void *)Strong;
    v13 = *(id *)(Strong + OBJC_IVAR____TtC6FindMy18FMMeViewController_stewieSettings);

    v14 = 256;
    if (!v3)
      v14 = 0;
    v15 = v14 | v2;
    v16 = 0x10000;
    if (!v4)
      v16 = 0;
    v17 = 0x1000000;
    if (!v5)
      v17 = 0;
    v18 = v15 | v16 | v17;
    v19 = &_mh_execute_header;
    if (!v6)
      v19 = 0;
    v20 = 0x10000000000;
    if (!v7)
      v20 = 0;
    v21 = 0x1000000000000;
    if (!v8)
      v21 = 0;
    sub_100138484(v18 | (unint64_t)v19 | v20 | v21, v23, v22, v10, v25);
    sub_1003746F8(v25, v2);
    sub_100071DB8((uint64_t)v25);

  }
}

uint64_t sub_10006AA6C(char a1)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD aBlock[5];
  uint64_t v35;
  objc_super v36;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType(v2);
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v33 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v31 = *(_QWORD *)(v8 - 8);
  v32 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DispatchTime(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v30 - v16;
  v36.receiver = v2;
  v36.super_class = ObjectType;
  objc_msgSendSuper2(&v36, "viewDidAppear:", a1 & 1);
  v18 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v30 = static OS_dispatch_queue.main.getter(v18);
  static DispatchTime.now()(v30);
  + infix(_:_:)(v15, 0.5);
  v19 = *(void (**)(char *, uint64_t))(v12 + 8);
  v19(v15, v11);
  v20 = swift_allocObject(&unk_100541930, 24, 7);
  *(_QWORD *)(v20 + 16) = v2;
  aBlock[4] = sub_100073BBC;
  v35 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_100541948;
  v21 = _Block_copy(aBlock);
  v22 = v35;
  v23 = v2;
  swift_release(v22);
  static DispatchQoS.unspecified.getter(v24);
  aBlock[0] = _swiftEmptyArrayStorage;
  v25 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v26 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v27 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v26, v27, v5, v25);
  v28 = (void *)v30;
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v17, v10, v7, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v32);
  return ((uint64_t (*)(char *, uint64_t))v19)(v17, v11);
}

void sub_10006AD2C(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  char v25;
  char v26;
  uint64_t v27;
  char *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  char **v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char v44[24];

  v2 = type metadata accessor for FMSelectionPendingAction(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100053F2C(&qword_1005D2C68);
  __chkstk_darwin(v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100053F2C(&qword_1005D2C70);
  v10 = __chkstk_darwin(v9);
  v40 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v38 - v13;
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v38 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v38 - v18;
  v41 = a1;
  v39 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator;
  v20 = *(_QWORD *)(*(_QWORD *)&a1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator] + 56)
      + OBJC_IVAR____TtC6FindMy21FMSelectionController_pendingAction;
  swift_beginAccess(v20, v44, 0, 0);
  sub_100007464(v20, (uint64_t)v19, &qword_1005D2C70);
  v21 = sub_100053F2C(&qword_1005D2C78);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v17, 10, 10, v21);
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v22(v17, 0, 1, v2);
  v23 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_100007464((uint64_t)v19, (uint64_t)v8, &qword_1005D2C70);
  sub_100007464((uint64_t)v17, v23, &qword_1005D2C70);
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v24((uint64_t)v8, 1, v2) != 1)
  {
    sub_100007464((uint64_t)v8, (uint64_t)v14, &qword_1005D2C70);
    if (v24(v23, 1, v2) != 1)
    {
      v38 = v22;
      sub_100073C48(v23, (uint64_t)v5);
      sub_1001F813C((uint64_t)v14, (uint64_t)v5);
      v26 = v25;
      sub_100073C0C((uint64_t)v5);
      sub_1000051EC((uint64_t)v17, &qword_1005D2C70);
      sub_1000051EC((uint64_t)v19, &qword_1005D2C70);
      sub_100073C0C((uint64_t)v14);
      sub_1000051EC((uint64_t)v8, &qword_1005D2C70);
      if ((v26 & 1) == 0)
        return;
      goto LABEL_8;
    }
    sub_1000051EC((uint64_t)v17, &qword_1005D2C70);
    sub_1000051EC((uint64_t)v19, &qword_1005D2C70);
    sub_100073C0C((uint64_t)v14);
LABEL_6:
    sub_1000051EC((uint64_t)v8, &qword_1005D2C68);
    return;
  }
  v38 = v22;
  sub_1000051EC((uint64_t)v17, &qword_1005D2C70);
  sub_1000051EC((uint64_t)v19, &qword_1005D2C70);
  if (v24(v23, 1, v2) != 1)
    goto LABEL_6;
  sub_1000051EC((uint64_t)v8, &qword_1005D2C70);
LABEL_8:
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v27 = type metadata accessor for Logger(0);
  sub_100056D88(v27, (uint64_t)qword_1005F5748);
  v28 = v41;
  v29 = Logger.logObject.getter(v28);
  v30 = static os_log_type_t.default.getter(v29);
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc(12, -1);
    v32 = (char **)swift_slowAlloc(8, -1);
    *(_DWORD *)v31 = 138412290;
    v42 = v28;
    v33 = v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43);
    *v32 = v28;

    _os_log_impl((void *)&_mh_execute_header, v29, v30, "FMMeViewController<%@>: showing education sheet", v31, 0xCu);
    v34 = sub_100053F2C((uint64_t *)&unk_1005D9680);
    swift_arrayDestroy(v32, 1, v34);
    swift_slowDealloc(v32, -1, -1);
    swift_slowDealloc(v31, -1, -1);
  }
  else
  {

    v29 = v28;
  }

  v35 = (uint64_t)v40;
  v36 = *(_QWORD *)(*(_QWORD *)&v41[v39] + 56);
  v38(v40, 1, 1, v2);
  v37 = v36 + OBJC_IVAR____TtC6FindMy21FMSelectionController_pendingAction;
  swift_beginAccess(v36 + OBJC_IVAR____TtC6FindMy21FMSelectionController_pendingAction, &v42, 33, 0);
  swift_retain(v36);
  sub_100073BC4(v35, v37);
  swift_endAccess(&v42);
  swift_release(v36);
  sub_100071ECC(0);
}

void sub_10006B270(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[24];
  objc_super v28;

  v2 = v1;
  v28.receiver = v2;
  v28.super_class = (Class)swift_getObjectType(v2);
  objc_msgSendSuper2(&v28, "viewWillDisappear:", a1 & 1);
  v4 = OBJC_IVAR____TtC6FindMy18FMMeViewController_peopleSubscription;
  v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy18FMMeViewController_peopleSubscription];
  if (v5)
  {
    v6 = *(uint64_t **)(*(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator] + 48);
    swift_beginAccess(v6 + 2, v27, 33, 0);
    swift_retain(v5);
    swift_retain(v6);
    v7 = sub_10005D57C(v6 + 2, v5);
    v8 = v7;
    v9 = v6[2];
    if ((unint64_t)v9 >> 62)
    {
      if (v9 < 0)
        v24 = v6[2];
      else
        v24 = v9 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v6[2]);
      v10 = _CocoaArrayWrapper.endIndex.getter(v24);
      swift_bridgeObjectRelease(v9);
      if (v10 >= v8)
        goto LABEL_4;
    }
    else
    {
      v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v10 >= v7)
      {
LABEL_4:
        sub_10005D338(v8, v10);
        swift_endAccess(v27);
        swift_release(v6);
        swift_release(v5);
        v11 = *(_QWORD *)&v2[v4];
        *(_QWORD *)&v2[v4] = 0;
        swift_release(v11);
        goto LABEL_5;
      }
    }
    __break(1u);
    goto LABEL_19;
  }
LABEL_5:
  v4 = OBJC_IVAR____TtC6FindMy18FMMeViewController_deviceSubscription;
  v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy18FMMeViewController_deviceSubscription];
  if (!v5)
    goto LABEL_9;
  v6 = *(uint64_t **)(*(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator] + 24);
  swift_beginAccess(v6 + 2, v27, 33, 0);
  swift_retain(v5);
  swift_retain(v6);
  v12 = sub_1001138E0(v6 + 2, v5);
  v8 = v12;
  v9 = v6[2];
  if ((unint64_t)v9 >> 62)
  {
LABEL_19:
    if (v9 < 0)
      v25 = v9;
    else
      v25 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v13 = _CocoaArrayWrapper.endIndex.getter(v25);
    swift_bridgeObjectRelease(v9);
    if (v13 >= v8)
      goto LABEL_8;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v13 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v13 < v12)
    goto LABEL_23;
LABEL_8:
  sub_1002006EC(v8, v13);
  swift_endAccess(v27);
  swift_release(v6);
  swift_release(v5);
  v14 = *(_QWORD *)&v2[v4];
  *(_QWORD *)&v2[v4] = 0;
  swift_release(v14);
LABEL_9:
  v4 = OBJC_IVAR____TtC6FindMy18FMMeViewController_conditionsSubscription;
  v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy18FMMeViewController_conditionsSubscription];
  if (!v5)
  {
LABEL_13:
    v20 = &v2[OBJC_IVAR____TtC6FindMy18FMMeViewController_cancellables];
    swift_beginAccess(v20, v27, 1, 0);
    v21 = *(_QWORD *)v20;
    swift_bridgeObjectRetain(*(_QWORD *)v20);
    sub_10006B5B4(v22);
    swift_bridgeObjectRelease(v21);
    v23 = *(_QWORD *)v20;
    *(_QWORD *)v20 = &_swiftEmptySetSingleton;
    swift_bridgeObjectRelease(v23);
    return;
  }
  v15 = *(char **)(*(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator] + 16);
  v16 = (uint64_t *)&v15[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions];
  swift_beginAccess(&v15[OBJC_IVAR____TtC6FindMy19FMConditionProvider_subscriptions], v27, 33, 0);
  swift_retain(v5);
  v6 = v15;
  v17 = sub_10005D558(v16, v5);
  v8 = v17;
  v9 = *v16;
  if ((unint64_t)*v16 >> 62)
  {
LABEL_24:
    if (v9 < 0)
      v26 = v9;
    else
      v26 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v18 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(v9);
    if (v18 >= v8)
      goto LABEL_12;
    goto LABEL_28;
  }
  v18 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v18 >= v17)
  {
LABEL_12:
    sub_10005D32C(v8, v18);
    swift_endAccess(v27);

    swift_release(v5);
    v19 = *(_QWORD *)&v2[v4];
    *(_QWORD *)&v2[v4] = 0;
    swift_release(v19);
    goto LABEL_13;
  }
LABEL_28:
  __break(1u);
}

void sub_10006B5B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[5];
  uint64_t v27;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v2 = a1;
    else
      v2 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = __CocoaSet.makeIterator()(v2);
    v4 = type metadata accessor for AnyCancellable(0);
    v5 = sub_100008000((unint64_t *)&qword_1005D2C60, (uint64_t (*)(uint64_t))&type metadata accessor for AnyCancellable, (uint64_t)&protocol conformance descriptor for AnyCancellable);
    v6 = Set.Iterator.init(_cocoa:)(v26, v3, v4, v5);
    v1 = v26[0];
    v24 = v26[1];
    v7 = v26[2];
    v8 = v26[3];
    v9 = v26[4];
  }
  else
  {
    v10 = -1 << *(_BYTE *)(a1 + 32);
    v24 = a1 + 56;
    v7 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain(a1);
    v8 = 0;
  }
  v13 = (unint64_t)(v7 + 64) >> 6;
  if (v1 < 0)
    goto LABEL_13;
  while (1)
  {
    if (v9)
    {
      v14 = (v9 - 1) & v9;
      v15 = __clz(__rbit64(v9)) | (v8 << 6);
      v16 = v8;
      goto LABEL_32;
    }
    v21 = v8 + 1;
    if (__OFADD__(v8, 1))
      break;
    if (v21 >= v13)
      goto LABEL_35;
    v22 = *(_QWORD *)(v24 + 8 * v21);
    v16 = v8 + 1;
    if (!v22)
    {
      v16 = v8 + 2;
      if (v8 + 2 >= v13)
        goto LABEL_35;
      v22 = *(_QWORD *)(v24 + 8 * v16);
      if (!v22)
      {
        v16 = v8 + 3;
        if (v8 + 3 >= v13)
          goto LABEL_35;
        v22 = *(_QWORD *)(v24 + 8 * v16);
        if (!v22)
        {
          v16 = v8 + 4;
          if (v8 + 4 >= v13)
            goto LABEL_35;
          v22 = *(_QWORD *)(v24 + 8 * v16);
          if (!v22)
          {
            v16 = v8 + 5;
            if (v8 + 5 >= v13)
              goto LABEL_35;
            v22 = *(_QWORD *)(v24 + 8 * v16);
            if (!v22)
            {
              v23 = v8 + 6;
              while (v13 != v23)
              {
                v22 = *(_QWORD *)(v24 + 8 * v23++);
                if (v22)
                {
                  v16 = v23 - 1;
                  goto LABEL_31;
                }
              }
LABEL_35:
              sub_100073BB4(v1);
              return;
            }
          }
        }
      }
    }
LABEL_31:
    v14 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v16 << 6);
LABEL_32:
    v20 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v15);
    swift_retain(v20);
    if (!v20)
      goto LABEL_35;
    while (1)
    {
      AnyCancellable.cancel()();
      swift_release(v20);
      v8 = v16;
      v9 = v14;
      if ((v1 & 0x8000000000000000) == 0)
        break;
LABEL_13:
      v17 = __CocoaSet.Iterator.next()(v6);
      if (v17)
      {
        v18 = v17;
        v25 = v17;
        v19 = type metadata accessor for AnyCancellable(0);
        swift_unknownObjectRetain(v18);
        swift_dynamicCast(&v27, &v25, (char *)&type metadata for Swift.AnyObject + 8, v19, 7);
        v20 = v27;
        swift_unknownObjectRelease(v18);
        v16 = v8;
        v14 = v9;
        if (v20)
          continue;
      }
      goto LABEL_35;
    }
  }
  __break(1u);
}

void sub_10006B894(uint64_t a1)
{
  void *v1;
  id v3;
  id v4;
  double left;
  double top;
  double right;
  double bottom;
  id v9;
  void *v10;
  objc_super v11;

  v11.receiver = v1;
  v11.super_class = (Class)swift_getObjectType(v1);
  objc_msgSendSuper2(&v11, "traitCollectionDidChange:", a1);
  v3 = objc_msgSend(v1, "traitCollection");
  v4 = objc_msgSend(v3, "horizontalSizeClass");

  if (v4 == (id)2)
  {
    if (qword_1005D1DC8 != -1)
      swift_once(&qword_1005D1DC8, sub_10005F330);
    right = *(double *)&qword_1005F5648;
    bottom = 0.0;
    left = *(double *)&qword_1005F5648;
    top = 0.0;
  }
  else
  {
    top = UIEdgeInsetsZero.top;
    left = UIEdgeInsetsZero.left;
    bottom = UIEdgeInsetsZero.bottom;
    right = UIEdgeInsetsZero.right;
  }
  v9 = objc_msgSend(v1, "view");
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, "setLayoutMargins:", top, left, bottom, right);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10006BA18(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t *v11;
  uint64_t i;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;

  v3 = a3[2];
  if (!v3)
    return 0;
  v7 = a3[4];
  v8 = a3[5];
  if (v7 == a1 && v8 == a2)
    return 1;
  result = _stringCompareWithSmolCheck(_:_:expecting:)(v7, v8, a1, a2, 0);
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v11 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v13 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v14 = *(v11 - 1);
    v15 = *v11;
    v16 = v14 == a1 && v15 == a2;
    if (v16 || (_stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, a1, a2, 0) & 1) != 0)
      return 1;
    result = 0;
    v11 += 2;
    if (v13 == v3)
      return result;
  }
  __break(1u);
  return result;
}

BOOL sub_10006BADC(_BOOL8 result, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t i;
  uint64_t v5;
  int v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = result;
  if (*(_BYTE *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 33; ; ++i)
  {
    v5 = i - 31;
    if (__OFADD__(i - 32, 1))
      break;
    v6 = *(unsigned __int8 *)(a2 + i);
    result = v6 == v3;
    if (v6 == v3 || v5 == v2)
      return result;
  }
  __break(1u);
  return result;
}

id sub_10006BB3C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  Swift::String v7;
  Swift::String v8;
  void *object;
  NSString v10;
  uint64_t v11;
  id v12;
  id v13;
  Swift::String v14;
  Swift::String v15;
  void *v16;
  NSString v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  id v23;
  id v24;
  Swift::String v25;
  Swift::String v26;
  void *v27;
  NSString v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  Swift::String v34;
  Swift::String v35;
  void *v36;
  NSString v37;
  id v38;
  id v39;
  uint64_t v40;
  id v41;
  id v42;
  Swift::String v43;
  Swift::String v44;
  void *v45;
  NSString v46;
  id v47;
  id v48;
  id v49;
  id v50;
  uint64_t v51;
  id v52;
  id v53;
  Swift::String v54;
  Swift::String_optional v55;
  Swift::String v56;
  void *v57;
  NSString v58;
  id v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  id v70;
  unsigned int v71;
  id v72;
  NSString v73;
  unsigned int v74;
  void *v75;
  id v76;
  char *v77;
  id v79;
  Swift::String v80;
  Swift::String v81;
  Swift::String v82;
  Swift::String v83;
  Swift::String v84;
  Swift::String v85;

  v1 = v0;
  sub_100225BE4();
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_batteryIndicatorView), "setHidden:", 1);
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryBackground), "setAlpha:", 1.0);
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primarySeperator), "setAlpha:", 1.0);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryLabel);
  v79 = (id)objc_opt_self(UIFont);
  v3 = objc_msgSend(v79, "preferredFontForTextStyle:", UIFontTextStyleTitle2);
  v4 = (void *)sub_10003CEE8(2);

  objc_msgSend(v2, "setFont:", v4);
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v5 = (void *)objc_opt_self(NSBundle);
  v6 = objc_msgSend(v5, "mainBundle");
  v80._countAndFlagsBits = 0xD00000000000001ELL;
  v80._object = (void *)0x80000001004A5480;
  v7._countAndFlagsBits = 0x545F4241545F454DLL;
  v7._object = (void *)0xEC000000454C5449;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v80)._object;

  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setText:", v10, swift_bridgeObjectRelease(object).n128_f64[0]);

  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_secondaryLabel), "setNumberOfLines:", 0);
  v11 = OBJC_IVAR____TtC6FindMy18FMMeViewController_nameLocationButton;
  v12 = objc_retain(*(id *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy18FMMeViewController_nameLocationButton)
                          + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label));
  _StringGuts.grow(_:)(20);
  v13 = objc_msgSend(v5, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
  v14._countAndFlagsBits = 0xD000000000000014;
  v81._object = (void *)0x80000001004A54C0;
  v14._object = (void *)0x80000001004A54A0;
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  v81._countAndFlagsBits = 0xD000000000000026;
  v16 = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, (NSBundle)v13, v15, v81)._object;

  v17 = String._bridgeToObjectiveC()();
  objc_msgSend(v12, "setText:", v17, swift_bridgeObjectRelease(v16).n128_f64[0]);

  v18 = *(void **)(*(_QWORD *)(v1 + v11) + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label);
  v19 = (void *)objc_opt_self(UIColor);
  v20 = v18;
  v21 = objc_msgSend(v19, "systemBlueColor");
  objc_msgSend(v20, "setTextColor:", v21);

  v22 = OBJC_IVAR____TtC6FindMy18FMMeViewController_editFindMyNotificationSettingsButton;
  v23 = objc_retain(*(id *)(*(_QWORD *)(v1
                                      + OBJC_IVAR____TtC6FindMy18FMMeViewController_editFindMyNotificationSettingsButton)
                          + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label));
  _StringGuts.grow(_:)(20);
  v24 = objc_msgSend(v5, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
  v82._countAndFlagsBits = 0xD000000000000038;
  v82._object = (void *)0x80000001004A5520;
  v25._object = (void *)0x80000001004A54F0;
  v25._countAndFlagsBits = 0xD000000000000026;
  v26._countAndFlagsBits = 0;
  v26._object = (void *)0xE000000000000000;
  v27 = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, (Swift::String_optional)0, (NSBundle)v24, v26, v82)._object;

  v28 = String._bridgeToObjectiveC()();
  objc_msgSend(v23, "setText:", v28, swift_bridgeObjectRelease(v27).n128_f64[0]);

  v29 = *(id *)(*(_QWORD *)(v1 + v22) + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label);
  v30 = objc_msgSend(v19, "systemBlueColor");
  objc_msgSend(v29, "setTextColor:", v30);

  v31 = OBJC_IVAR____TtC6FindMy18FMMeViewController_editSafetyAlertsNotificationSettingsButton;
  v32 = objc_retain(*(id *)(*(_QWORD *)(v1
                                      + OBJC_IVAR____TtC6FindMy18FMMeViewController_editSafetyAlertsNotificationSettingsButton)
                          + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label));
  _StringGuts.grow(_:)(20);
  v33 = objc_msgSend(v5, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
  v34._countAndFlagsBits = 0xD00000000000002CLL;
  v83._countAndFlagsBits = 0xD00000000000003ELL;
  v83._object = (void *)0x80000001004A5590;
  v34._object = (void *)0x80000001004A5560;
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  v36 = NSLocalizedString(_:tableName:bundle:value:comment:)(v34, (Swift::String_optional)0, (NSBundle)v33, v35, v83)._object;

  v37 = String._bridgeToObjectiveC()();
  objc_msgSend(v32, "setText:", v37, swift_bridgeObjectRelease(v36).n128_f64[0]);

  v38 = *(id *)(*(_QWORD *)(v1 + v31) + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label);
  v39 = objc_msgSend(v19, "systemBlueColor");
  objc_msgSend(v38, "setTextColor:", v39);

  v40 = OBJC_IVAR____TtC6FindMy18FMMeViewController_coarseLabel;
  v41 = *(id *)(v1 + OBJC_IVAR____TtC6FindMy18FMMeViewController_coarseLabel);
  _StringGuts.grow(_:)(20);
  v42 = objc_msgSend(v5, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
  v43._countAndFlagsBits = 0xD000000000000015;
  v84._countAndFlagsBits = 0xD000000000000027;
  v84._object = (void *)0x80000001004A55F0;
  v43._object = (void *)0x80000001004A55D0;
  v44._countAndFlagsBits = 0;
  v44._object = (void *)0xE000000000000000;
  v45 = NSLocalizedString(_:tableName:bundle:value:comment:)(v43, (Swift::String_optional)0, (NSBundle)v42, v44, v84)._object;

  v46 = String._bridgeToObjectiveC()();
  objc_msgSend(v41, "setText:", v46, swift_bridgeObjectRelease(v45).n128_f64[0]);

  v47 = *(id *)(v1 + v40);
  v48 = objc_msgSend(v19, "secondaryLabelColor");
  objc_msgSend(v47, "setTextColor:", v48);

  objc_msgSend(*(id *)(v1 + v40), "setNumberOfLines:", 0);
  v49 = *(id *)(v1 + v40);
  v50 = objc_msgSend(v79, "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  objc_msgSend(v49, "setFont:", v50);

  v51 = OBJC_IVAR____TtC6FindMy18FMMeViewController_clearIgnoredTagsButton;
  v52 = objc_retain(*(id *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy18FMMeViewController_clearIgnoredTagsButton)
                          + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label));
  v53 = objc_msgSend(v5, "mainBundle");
  v54._countAndFlagsBits = 0xD000000000000011;
  v55.value._countAndFlagsBits = 0xD000000000000013;
  v85._countAndFlagsBits = 0xD000000000000018;
  v85._object = (void *)0x80000001004A5660;
  v54._object = (void *)0x80000001004A5620;
  v55.value._object = (void *)0x80000001004A5640;
  v56._countAndFlagsBits = 0;
  v56._object = (void *)0xE000000000000000;
  v57 = NSLocalizedString(_:tableName:bundle:value:comment:)(v54, v55, (NSBundle)v53, v56, v85)._object;

  v58 = String._bridgeToObjectiveC()();
  objc_msgSend(v52, "setText:", v58, swift_bridgeObjectRelease(v57).n128_f64[0]);

  v59 = *(id *)(*(_QWORD *)(v1 + v51) + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label);
  v60 = objc_msgSend(v19, "systemBlueColor");
  objc_msgSend(v59, "setTextColor:", v60);

  v61 = OBJC_IVAR____TtC6FindMy18FMMeViewController_actionButtonsStackView;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC6FindMy18FMMeViewController_actionButtonsStackView), "setAxis:", 1);
  objc_msgSend(*(id *)(v1 + v61), "setSpacing:", 0.0);
  v62 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy18FMMeViewController_locationAlerts)
      + OBJC_IVAR____TtC6FindMy22FMMyLocationAlertsView_delegate;
  *(_QWORD *)(v62 + 8) = &off_1005411D8;
  swift_unknownObjectWeakAssign(v62, v1);
  v63 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy18FMMeViewController_locationSettings)
      + OBJC_IVAR____TtC6FindMy22FMLocationSettingsView_delegate;
  *(_QWORD *)(v63 + 8) = &off_1005413B0;
  swift_unknownObjectWeakAssign(v63, v1);
  v64 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy18FMMeViewController_notificationView);
  v65 = v64 + OBJC_IVAR____TtC6FindMy20FMMeNotificationView_delegate;
  *(_QWORD *)(v65 + 8) = &off_1005413A0;
  swift_unknownObjectWeakAssign(v65, v1);
  v66 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy18FMMeViewController_stewieSettings)
      + OBJC_IVAR____TtC6FindMy20FMStewieSettingsView_delegate;
  *(_QWORD *)(v66 + 8) = &off_1005411C8;
  swift_unknownObjectWeakAssign(v66, v1);
  v67 = OBJC_IVAR____TtC6FindMy18FMMeViewController_verticalStackView;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC6FindMy18FMMeViewController_verticalStackView), "setAxis:", 1);
  v68 = qword_1005D1D20;
  v69 = *(id *)(v1 + v67);
  if (v68 != -1)
    swift_once(&qword_1005D1D20, sub_100228680);
  objc_msgSend(v69, "setSpacing:", *(double *)&qword_1005F5368);

  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollView), "addSubview:", *(_QWORD *)(v1 + v67));
  v70 = objc_msgSend((id)objc_opt_self(FMSystemInfo), "sharedInstance");
  v71 = objc_msgSend(v70, "isInternalBuild");

  if (v71)
  {
    v72 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
    v73 = String._bridgeToObjectiveC()();
    v74 = objc_msgSend(v72, "BOOLForKey:", v73);

    if (v74)
    {
      v75 = *(void **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator) + 40);
      v76 = objc_allocWithZone((Class)type metadata accessor for FMPISDebugLocationPlatter());
      v77 = sub_1004428D0(v75);
      objc_msgSend(*(id *)(v1 + v67), "addArrangedSubview:", v77);

    }
  }
  objc_msgSend(*(id *)(v1 + v67), "addArrangedSubview:", v64);
  return objc_msgSend(*(id *)(v1 + v67), "addArrangedSubview:", *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy18FMMeViewController_helpFriendView));
}

id sub_10006C614()
{
  char *v0;
  char *v1;
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id result;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  Class isa;

  v1 = v0;
  sub_10022659C();
  v2 = OBJC_IVAR____TtC6FindMy18FMMeViewController_verticalStackView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy18FMMeViewController_verticalStackView], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_actionBackground], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v3 = *((double *)&xmmword_1005F5940 + 1);
  v4 = *(double *)&qword_1005F5978;
  v5 = sub_100053F2C(&qword_1005D2F10);
  v6 = swift_allocObject(v5, 64, 7);
  *(_OWORD *)(v6 + 16) = xmmword_100481720;
  v7 = objc_msgSend(*(id *)&v1[v2], "topAnchor");
  v8 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_tertiaryRowStackView], "bottomAnchor");
  v9 = objc_msgSend(v7, "constraintEqualToAnchor:", v8);

  *(_QWORD *)(v6 + 32) = v9;
  v10 = objc_msgSend(*(id *)&v1[v2], "leadingAnchor");
  result = objc_msgSend(v1, "view");
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  v12 = result;
  v13 = objc_msgSend(result, "layoutMarginsGuide");

  v14 = objc_msgSend(v13, "leadingAnchor");
  v15 = objc_msgSend(v10, "constraintEqualToAnchor:", v14);

  *(_QWORD *)(v6 + 40) = v15;
  v16 = objc_msgSend(*(id *)&v1[v2], "trailingAnchor");
  result = objc_msgSend(v1, "view");
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  v17 = result;
  v18 = (void *)objc_opt_self(NSLayoutConstraint);
  v19 = objc_msgSend(v17, "layoutMarginsGuide");

  v20 = objc_msgSend(v19, "trailingAnchor");
  v21 = objc_msgSend(v16, "constraintEqualToAnchor:", v20);

  *(_QWORD *)(v6 + 48) = v21;
  v22 = objc_msgSend(*(id *)&v1[v2], "bottomAnchor");
  v23 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_scrollView], "bottomAnchor");
  v24 = objc_msgSend(v22, "constraintLessThanOrEqualToAnchor:constant:", v23, -(v3 + v4));

  *(_QWORD *)(v6 + 56) = v24;
  specialized Array._endMutation()(v25);
  sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v18, "activateConstraints:", isa, swift_bridgeObjectRelease(v6).n128_f64[0]);

  result = *(id *)&v1[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_secondaryLabelTopConstraint];
  if (result)
    return objc_msgSend(result, "setConstant:", 60.0);
  return result;
}

void sub_10006C9CC()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;
  id v4;

  v1 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "handleEditFindMyNotificationsLabel");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy18FMMeViewController_editFindMyNotificationSettingsButton), "addGestureRecognizer:", v1);
  v2 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "handleEditSafetyAlertsNotificationsLabel");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy18FMMeViewController_editSafetyAlertsNotificationSettingsButton), "addGestureRecognizer:", v2);
  v3 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "handleLocationLabel");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy18FMMeViewController_nameLocationButton), "addGestureRecognizer:", v3);
  v4 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "handleClearTags");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy18FMMeViewController_clearIgnoredTagsButton), "addGestureRecognizer:", v4);

}

void sub_10006CB44()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint8_t *v22;
  char *v23;
  char *v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char *v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  char **v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __n128 v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(char *, unint64_t, uint64_t, __n128);
  __n128 v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  __n128 v68;
  uint64_t v69;
  __n128 v70;
  __n128 v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  __n128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  os_log_type_t v82;
  int v83;
  uint64_t v84;
  char **v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  __n128 v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t (*v108)(uint64_t, uint64_t, uint64_t);
  uint64_t v109;
  char *v110;
  char *v111;
  char *v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;

  v1 = sub_100053F2C(&qword_1005D2BC8);
  __chkstk_darwin(v1);
  v3 = (char *)&v103 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FMFDevice(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v110 = (char *)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v114 = (char *)&v103 - v9;
  __chkstk_darwin(v8);
  v111 = (char *)&v103 - v10;
  v11 = sub_100053F2C((uint64_t *)&unk_1005D2A40);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v103 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v113 = (char *)&v103 - v15;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v16 = type metadata accessor for Logger(0);
  v17 = sub_100056D88(v16, (uint64_t)qword_1005F5748);
  v18 = v0;
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  v21 = os_log_type_enabled(v19, v20);
  v115 = v4;
  if (v21)
  {
    v22 = (uint8_t *)swift_slowAlloc(12, -1);
    v108 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))swift_slowAlloc(8, -1);
    v109 = v5;
    *(_DWORD *)v22 = 138412290;
    v116 = (uint64_t)v18;
    v23 = v18;
    v112 = v14;
    v24 = v23;
    v5 = v109;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, &v117);
    v25 = v108;
    *(_QWORD *)v108 = v18;

    v14 = v112;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "FMMeViewController<%@>: change me device button pressed", v22, 0xCu);
    v26 = sub_100053F2C((uint64_t *)&unk_1005D9680);
    swift_arrayDestroy(v25, 1, v26);
    swift_slowDealloc(v25, -1, -1);
    swift_slowDealloc(v22, -1, -1);

  }
  else
  {

  }
  v27 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator;
  v28 = *(_QWORD *)(*(_QWORD *)&v18[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator] + 48);
  v29 = swift_retain(v28);
  v30 = dispatch thunk of FMFManager.friendsOperationsRestricted.getter(v29);
  swift_release(v28);
  if ((v30 & 1) != 0)
  {
    v31 = v18;
    v32 = Logger.logObject.getter(v31);
    v33 = static os_log_type_t.default.getter(v32);
    if (!os_log_type_enabled(v32, v33))
    {

      return;
    }
    v34 = swift_slowAlloc(12, -1);
    v35 = (char **)swift_slowAlloc(8, -1);
    *(_DWORD *)v34 = 138412290;
    v116 = (uint64_t)v31;
    v36 = v31;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, &v117);
    *v35 = v31;

    _os_log_impl((void *)&_mh_execute_header, v32, v33, "FMMeViewController<%@>: Cannot change me device, friends operations restricted", (uint8_t *)v34, 0xCu);
    v37 = sub_100053F2C((uint64_t *)&unk_1005D9680);
    swift_arrayDestroy(v35, 1, v37);
    v38 = v35;
    goto LABEL_33;
  }
  v39 = *(_QWORD *)(*(_QWORD *)&v18[v27] + 48);
  v40 = swift_retain(v39);
  v41 = v113;
  dispatch thunk of FMFManager.myInfo.getter(v40);
  v42 = (uint64_t)v41;
  swift_release(v39);
  v43 = type metadata accessor for FMFMyInfo(0);
  v44 = *(_QWORD *)(v43 - 8);
  v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 48);
  v46 = v45(v42, 1, v43);
  v109 = v43;
  if ((_DWORD)v46 == 1)
  {
    sub_1000051EC(v42, (uint64_t *)&unk_1005D2A40);
  }
  else
  {
    v108 = v45;
    v47 = FMFMyInfo.deviceId.getter(v46);
    v48 = v44;
    v50 = v49;
    v107 = v48;
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v42, v43);
    v51 = *(_QWORD *)(*(_QWORD *)&v18[v27] + 48);
    v52 = swift_retain(v51);
    v53 = dispatch thunk of FMFManager.devices.getter(v52);
    v54 = swift_release(v51);
    if (v53)
    {
      v113 = (char *)v17;
      v55 = *(_QWORD *)(v53 + 16);
      v56 = v115;
      if (v55)
      {
        v105 = v27;
        v106 = v3;
        v112 = v14;
        v57 = v53 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
        v58 = *(_QWORD *)(v5 + 72);
        v59 = v5;
        v60 = *(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16);
        v104 = v53;
        v61 = swift_bridgeObjectRetain(v53);
        v62 = v114;
        while (1)
        {
          v63 = v60(v62, v57, v56, v61);
          v64 = FMFDevice.identifier.getter(v63);
          v66 = v65;
          if (v64 == v47 && v65 == v50)
          {
            v53 = v104;
            swift_bridgeObjectRelease(v104);
            v71 = swift_bridgeObjectRelease(v50);
            goto LABEL_25;
          }
          v67 = _stringCompareWithSmolCheck(_:_:expecting:)(v64, v65, v47, v50, 0);
          v68 = swift_bridgeObjectRelease(v66);
          if ((v67 & 1) != 0)
            break;
          v62 = v114;
          v56 = v115;
          (*(void (**)(char *, uint64_t, __n128))(v59 + 8))(v114, v115, v68);
          v57 += v58;
          if (!--v55)
          {
            v53 = v104;
            v54 = swift_bridgeObjectRelease(v104);
            v69 = 1;
            v5 = v59;
            v14 = v112;
            v27 = v105;
            v3 = v106;
            goto LABEL_22;
          }
        }
        v53 = v104;
        v71 = swift_bridgeObjectRelease(v104);
        v56 = v115;
LABEL_25:
        v45 = v108;
        v5 = v59;
        v3 = v106;
        (*(void (**)(char *, char *, uint64_t, __n128))(v59 + 32))(v106, v114, v56, v71);
        v69 = 0;
        v14 = v112;
        v27 = v105;
      }
      else
      {
        v69 = 1;
LABEL_22:
        v45 = v108;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56))(v3, v69, 1, v56, v54);
      swift_bridgeObjectRelease(v50);
      v72 = swift_bridgeObjectRelease(v53);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v5 + 48))(v3, 1, v56, v72) != 1)
      {
        v93 = v27;
        v94 = v111;
        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v111, v3, v56);
        v95 = v110;
        (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v110, v94, v56);
        v96 = type metadata accessor for FMFUpdateMeDeviceAction(0);
        swift_allocObject(v96, *(unsigned int *)(v96 + 48), *(unsigned __int16 *)(v96 + 52));
        v97 = v56;
        v98 = FMFUpdateMeDeviceAction.init(meDevice:)(v95);
        v99 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v18[v93] + 48) + 56);
        v100 = swift_allocObject(&unk_1005417C8, 24, 7);
        *(_QWORD *)(v100 + 16) = v18;
        v101 = v18;
        swift_retain(v99);
        sub_1000D421C(v98, (uint64_t)sub_100073AD4, v100);
        swift_release(v98);
        swift_release(v99);
        v102 = swift_release(v100);
        (*(void (**)(char *, uint64_t, __n128))(v5 + 8))(v94, v97, v102);
        return;
      }
    }
    else
    {
      v70 = swift_bridgeObjectRelease(v50);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56))(v3, 1, 1, v115, v70);
      v45 = v108;
    }
    sub_1000051EC((uint64_t)v3, &qword_1005D2BC8);
    v44 = v107;
  }
  v73 = *(_QWORD *)(*(_QWORD *)&v18[v27] + 48);
  v74 = swift_retain(v73);
  dispatch thunk of FMFManager.myInfo.getter(v74);
  v75 = swift_release(v73);
  v76 = v109;
  v77 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v45)(v14, 1, v109, v75);
  if ((_DWORD)v77 == 1)
  {
    sub_1000051EC((uint64_t)v14, (uint64_t *)&unk_1005D2A40);
    v78 = 0;
    v79 = 0;
  }
  else
  {
    v78 = FMFMyInfo.deviceId.getter(v77);
    v79 = v80;
    (*(void (**)(char *, uint64_t))(v44 + 8))(v14, v76);
  }
  swift_bridgeObjectRetain(v79);
  v81 = v18;
  v32 = Logger.logObject.getter(v81);
  v82 = static os_log_type_t.default.getter(v32);
  v83 = v82;
  if (os_log_type_enabled(v32, v82))
  {
    v84 = swift_slowAlloc(22, -1);
    LODWORD(v114) = v83;
    v34 = v84;
    v85 = (char **)swift_slowAlloc(8, -1);
    v115 = swift_slowAlloc(32, -1);
    v116 = (uint64_t)v81;
    v118 = v115;
    *(_DWORD *)v34 = 138412546;
    v86 = v81;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, &v117);
    *v85 = v81;

    *(_WORD *)(v34 + 12) = 2080;
    v116 = v78;
    v117 = v79;
    swift_bridgeObjectRetain(v79);
    v87 = sub_100053F2C(&qword_1005D2BD0);
    v88 = String.init<A>(describing:)(&v116, v87);
    v90 = v89;
    v116 = sub_100056DA0(v88, v89, &v118);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v116, &v117);
    swift_bridgeObjectRelease_n(v79, 2);
    swift_bridgeObjectRelease(v90);
    _os_log_impl((void *)&_mh_execute_header, v32, (os_log_type_t)v114, "FMMeViewController<%@>: Cannot change me device, can't find device %s", (uint8_t *)v34, 0x16u);
    v91 = sub_100053F2C((uint64_t *)&unk_1005D9680);
    swift_arrayDestroy(v85, 1, v91);
    swift_slowDealloc(v85, -1, -1);
    v92 = v115;
    swift_arrayDestroy(v115, 1, (char *)&type metadata for Any + 8);
    v38 = (_QWORD *)v92;
LABEL_33:
    swift_slowDealloc(v38, -1, -1);
    swift_slowDealloc(v34, -1, -1);

    return;
  }

  swift_bridgeObjectRelease_n(v79, 2);
}

void sub_10006D4BC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char *v16;
  uint64_t v17;
  __int16 v18;
  char *v19;
  uint64_t v20;
  char *v21;
  id v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;

  v1 = sub_100053F2C((uint64_t *)&unk_1005D3350);
  __chkstk_darwin(v1);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v4 = type metadata accessor for Logger(0);
  sub_100056D88(v4, (uint64_t)qword_1005F5748);
  v5 = v0;
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    v24 = v5;
    v10 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25);
    *v9 = v5;

    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMMeViewController<%@>: present location label selector", v8, 0xCu);
    v11 = sub_100053F2C((uint64_t *)&unk_1005D9680);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

  }
  v12 = *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator];
  v13 = *(_QWORD *)(v12 + 48);
  swift_retain(v12);
  v14 = swift_retain(v13);
  dispatch thunk of FMFManager.myUnshiftedLocation.getter(v14);
  swift_release(v13);
  v15 = objc_allocWithZone((Class)type metadata accessor for FMLabelViewController(0));
  v16 = (char *)sub_10033DCCC(v12, (uint64_t)v3, 1);
  swift_release(v12);
  v17 = *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy18FMMeViewController_displayAddress + 8];
  v18 = *(_WORD *)&v5[OBJC_IVAR____TtC6FindMy18FMMeViewController_displayAddress + 16];
  v19 = &v16[OBJC_IVAR____TtC6FindMy21FMLabelViewController_displayAddress];
  v20 = *(_QWORD *)&v16[OBJC_IVAR____TtC6FindMy21FMLabelViewController_displayAddress + 8];
  *(_QWORD *)v19 = *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy18FMMeViewController_displayAddress];
  *((_QWORD *)v19 + 1) = v17;
  *((_WORD *)v19 + 8) = v18;
  swift_bridgeObjectRetain(v17);
  swift_bridgeObjectRelease(v20);
  objc_allocWithZone((Class)type metadata accessor for FMActivityIndicatingNavigationController());
  v21 = v16;
  v22 = sub_1000A750C(v21, 2);
  objc_msgSend(v5, "presentViewController:animated:completion:", v22, 1, 0);

}

void sub_10006D770(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id v24;
  uint64_t v25;
  id v26;
  char *v27;
  id v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *aBlock;
  unint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  uint64_t v45;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v5 = type metadata accessor for Logger(0);
  sub_100056D88(v5, (uint64_t)qword_1005F5748);
  v6 = v2;
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v38 = a1;
    v9 = swift_slowAlloc(22, -1);
    v10 = (_QWORD *)swift_slowAlloc(8, -1);
    v37 = swift_slowAlloc(32, -1);
    v39 = v37;
    aBlock = v6;
    *(_DWORD *)v9 = 138412546;
    v11 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v41);
    *v10 = v6;

    *(_WORD *)(v9 + 12) = 2080;
    aBlock = 0;
    v41 = 0xE000000000000000;
    if ((a2 & 1) != 0)
      v12 = 1702195828;
    else
      v12 = 0x65736C6166;
    if ((a2 & 1) != 0)
      v13 = 0xE400000000000000;
    else
      v13 = 0xE500000000000000;
    v14 = v13;
    String.append(_:)(*(Swift::String *)&v12);
    swift_bridgeObjectRelease(v13);
    v15 = v41;
    aBlock = (char *)sub_100056DA0((uint64_t)aBlock, v41, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v41);
    swift_bridgeObjectRelease(v15);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "FMMeViewController<%@>: location settings, share location state changed: %s", (uint8_t *)v9, 0x16u);
    v16 = sub_100053F2C((uint64_t *)&unk_1005D9680);
    swift_arrayDestroy(v10, 1, v16);
    swift_slowDealloc(v10, -1, -1);
    swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v37, -1, -1);
    v17 = v9;
    a1 = v38;
    swift_slowDealloc(v17, -1, -1);

  }
  else
  {

  }
  v18 = type metadata accessor for FMFShowHideLocationAction(0);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  v19 = FMFShowHideLocationAction.init(hideLocation:)((a2 & 1) == 0);
  objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC6FindMy22FMLocationSettingsView_shareLocationSwitch), "setUserInteractionEnabled:", 0);
  v6[OBJC_IVAR____TtC6FindMy18FMMeViewController_isLocationSharingOnOverride] = a2 & 1;
  v20 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator] + 48)
                  + 56);
  if ((a2 & 1) != 0)
    v21 = 2;
  else
    v21 = 1;
  v22 = swift_allocObject(&unk_1005416B0, 25, 7);
  *(_QWORD *)(v22 + 16) = v6;
  *(_BYTE *)(v22 + 24) = a2 & 1;
  v23 = v6;
  swift_retain(v20);
  sub_1000D421C(v19, (uint64_t)sub_1000726D8, v22);
  swift_release(v20);
  swift_release(v22);
  v24 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ToggleLocationSharingIntent()), "init");
  objc_msgSend(v24, "setState:", v21);
  v25 = swift_allocObject(&unk_1005416D8, 24, 7);
  *(_QWORD *)(v25 + 16) = v23;
  v26 = objc_allocWithZone((Class)INInteraction);
  v27 = v23;
  v28 = objc_msgSend(v26, "initWithIntent:response:", v24, 0);
  v29 = swift_allocObject(&unk_100541700, 32, 7);
  *(_QWORD *)(v29 + 16) = sub_1000726E4;
  *(_QWORD *)(v29 + 24) = v25;
  v44 = sub_100072710;
  v45 = v29;
  aBlock = (char *)_NSConcreteStackBlock;
  v41 = 1107296256;
  v42 = sub_1000063D8;
  v43 = &unk_100541718;
  v30 = _Block_copy(&aBlock);
  v31 = v45;
  swift_retain(v25);
  objc_msgSend(v28, "donateInteractionWithCompletion:", v30, swift_release(v31).n128_f64[0]);
  _Block_release(v30);
  swift_release(v25);

  v32 = (void *)objc_opt_self(UIView);
  v33 = swift_allocObject(&unk_100541750, 24, 7);
  *(_QWORD *)(v33 + 16) = v27;
  v44 = sub_100072718;
  v45 = v33;
  aBlock = (char *)_NSConcreteStackBlock;
  v41 = 1107296256;
  v42 = sub_100037DF8;
  v43 = &unk_100541768;
  v34 = _Block_copy(&aBlock);
  v35 = v45;
  v36 = v27;
  swift_release(v35);
  objc_msgSend(v32, "animateWithDuration:animations:", v34, 0.2);
  _Block_release(v34);
  swift_release(v19);

}

id sub_10006DC54(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v7;
  id v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v7 = type metadata accessor for Logger(0);
  sub_100056D88(v7, (uint64_t)qword_1005F5748);
  v8 = a3;
  swift_errorRetain(a2);
  v9 = (char *)v8;
  v10 = swift_errorRetain(a2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(22, -1);
    v14 = (_QWORD *)swift_slowAlloc(8, -1);
    v22 = swift_slowAlloc(32, -1);
    v23 = (uint64_t)v9;
    v24 = v22;
    *(_DWORD *)v13 = 138412546;
    v15 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24);
    *v14 = v9;

    *(_WORD *)(v13 + 12) = 2080;
    v23 = a2;
    swift_errorRetain(a2);
    v16 = sub_100053F2C(&qword_1005D7E40);
    v17 = String.init<A>(describing:)(&v23, v16);
    v19 = v18;
    v23 = sub_100056DA0(v17, v18, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, &v24);
    swift_bridgeObjectRelease(v19);
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "FMMeViewController<%@>: location settings, share location completed with error?: %s", (uint8_t *)v13, 0x16u);
    v20 = sub_100053F2C((uint64_t *)&unk_1005D9680);
    swift_arrayDestroy(v14, 1, v20);
    swift_slowDealloc(v14, -1, -1);
    swift_arrayDestroy(v22, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v22, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {

    swift_errorRelease(a2);
    swift_errorRelease(a2);
  }

  objc_msgSend(*(id *)(*(_QWORD *)&v9[OBJC_IVAR____TtC6FindMy18FMMeViewController_locationSettings]+ OBJC_IVAR____TtC6FindMy22FMLocationSettingsView_shareLocationSwitch), "setUserInteractionEnabled:", 1);
  v9[OBJC_IVAR____TtC6FindMy18FMMeViewController_isLocationSharingOnOverride] = ((a2 != 0) ^ a4) & 1;
  return sub_1000689D0();
}

void sub_10006DF10(uint64_t a1, void *a2)
{
  uint64_t v4;
  id v5;
  id v6;
  os_log_type_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  NSObject *oslog;
  uint64_t v18;
  uint64_t v19;

  if (a1)
  {
    swift_errorRetain(a1);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v4 = type metadata accessor for Logger(0);
    sub_100056D88(v4, (uint64_t)qword_1005F5748);
    swift_errorRetain(a1);
    v5 = a2;
    swift_errorRetain(a1);
    v6 = v5;
    oslog = Logger.logObject.getter(v6);
    v7 = static os_log_type_t.error.getter(oslog);
    if (os_log_type_enabled(oslog, v7))
    {
      v8 = swift_slowAlloc(22, -1);
      v9 = (_QWORD *)swift_slowAlloc(8, -1);
      v10 = swift_slowAlloc(32, -1);
      v18 = (uint64_t)v6;
      v19 = v10;
      *(_DWORD *)v8 = 138412546;
      v11 = v6;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19);
      *v9 = v6;

      *(_WORD *)(v8 + 12) = 2080;
      v18 = a1;
      swift_errorRetain(a1);
      v12 = sub_100053F2C((uint64_t *)&unk_1005D2AC0);
      v13 = String.init<A>(describing:)(&v18, v12);
      v15 = v14;
      v18 = sub_100056DA0(v13, v14, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19);
      swift_bridgeObjectRelease(v15);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, oslog, v7, "FMMeViewController<%@>: error during show/hide location donation - %s", (uint8_t *)v8, 0x16u);
      v16 = sub_100053F2C((uint64_t *)&unk_1005D9680);
      swift_arrayDestroy(v9, 1, v16);
      swift_slowDealloc(v9, -1, -1);
      swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v10, -1, -1);
      swift_slowDealloc(v8, -1, -1);

      swift_errorRelease(a1);
    }
    else
    {
      swift_errorRelease(a1);

      swift_errorRelease(a1);
      swift_errorRelease(a1);

    }
  }
}

id sub_10006E1A8(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v7;
  id v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v7 = type metadata accessor for Logger(0);
  sub_100056D88(v7, (uint64_t)qword_1005F5748);
  v8 = a3;
  swift_errorRetain(a2);
  v9 = (char *)v8;
  v10 = swift_errorRetain(a2);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc(22, -1);
    v14 = (_QWORD *)swift_slowAlloc(8, -1);
    v23 = swift_slowAlloc(32, -1);
    v24 = (uint64_t)v9;
    v25 = v23;
    *(_DWORD *)v13 = 138412546;
    v15 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25);
    *v14 = v9;

    *(_WORD *)(v13 + 12) = 2080;
    v24 = a2;
    swift_errorRetain(a2);
    v16 = sub_100053F2C(&qword_1005D7E40);
    v17 = String.init<A>(describing:)(&v24, v16);
    v19 = v18;
    v24 = sub_100056DA0(v17, v18, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v24, &v25);
    swift_bridgeObjectRelease(v19);
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "FMMeViewController<%@>: allow friend requests setting change completed with error?: %s", (uint8_t *)v13, 0x16u);
    v20 = sub_100053F2C((uint64_t *)&unk_1005D9680);
    swift_arrayDestroy(v14, 1, v20);
    swift_slowDealloc(v14, -1, -1);
    swift_arrayDestroy(v23, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v23, -1, -1);
    swift_slowDealloc(v13, -1, -1);
  }
  else
  {

    swift_errorRelease(a2);
    swift_errorRelease(a2);
  }

  objc_msgSend(*(id *)(*(_QWORD *)&v9[OBJC_IVAR____TtC6FindMy18FMMeViewController_locationSettings]+ OBJC_IVAR____TtC6FindMy22FMLocationSettingsView_shareLocationSwitch), "setUserInteractionEnabled:", 1);
  v21 = a4 & 1;
  if (a2)
    v21 = 2;
  v9[OBJC_IVAR____TtC6FindMy18FMMeViewController_isAllowFriendsRequestOnOverride] = v21;
  return sub_1000689D0();
}

void sub_10006E464(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void **v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  void ***v26;
  void **v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  _QWORD v43[2];
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  void **aBlock;
  _QWORD v53[4];
  uint64_t v54;

  v50 = a2;
  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v48 = *(_QWORD *)(v3 - 8);
  v49 = v3;
  __chkstk_darwin(v3);
  v47 = (char *)v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v45 = *(_QWORD *)(v5 - 8);
  v46 = v5;
  __chkstk_darwin(v5);
  v44 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS.QoSClass(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100053F2C((uint64_t *)&unk_1005D3470);
  __chkstk_darwin(v11);
  v13 = (char *)v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for URL(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  v17 = __chkstk_darwin(v14);
  v18 = (char *)v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v20 = (char *)v43 - v19;
  URL.init(string:)(a1, v50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_1000051EC((uint64_t)v13, (uint64_t *)&unk_1005D3470);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v21 = type metadata accessor for Logger(0);
    sub_100056D88(v21, (uint64_t)qword_1005F5748);
    v22 = (void **)(id)v43[1];
    v23 = Logger.logObject.getter(v22);
    v24 = static os_log_type_t.error.getter(v23);
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc(12, -1);
      v26 = (void ***)swift_slowAlloc(8, -1);
      *(_DWORD *)v25 = 138412290;
      aBlock = v22;
      v27 = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v53);
      *v26 = v22;

      _os_log_impl((void *)&_mh_execute_header, v23, v24, "FMMeViewController<%@>: error opening settings. Invalid URL", v25, 0xCu);
      v28 = sub_100053F2C((uint64_t *)&unk_1005D9680);
      swift_arrayDestroy(v26, 1, v28);
      swift_slowDealloc(v26, -1, -1);
      swift_slowDealloc(v25, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    v29 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v43[0] = v20;
    v29(v20, v13, v14);
    sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for DispatchQoS.QoSClass.default(_:), v7);
    v50 = static OS_dispatch_queue.global(qos:)(v10);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v30 = v43[0];
    (*(void (**)(char *, _QWORD, uint64_t))(v15 + 16))(v18, v43[0], v14);
    v31 = *(unsigned __int8 *)(v15 + 80);
    v32 = (v31 + 16) & ~v31;
    v33 = swift_allocObject(&unk_1005418E0, v32 + v16, v31 | 7);
    v29((char *)(v33 + v32), v18, v14);
    v53[3] = sub_100073B88;
    v54 = v33;
    aBlock = _NSConcreteStackBlock;
    v53[0] = 1107296256;
    v53[1] = sub_100037DF8;
    v53[2] = &unk_1005418F8;
    v34 = _Block_copy(&aBlock);
    v35 = v44;
    static DispatchQoS.unspecified.getter(v34);
    v51 = _swiftEmptyArrayStorage;
    v36 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v37 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
    v38 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
    v39 = v47;
    v40 = v37;
    v41 = v49;
    dispatch thunk of SetAlgebra.init<A>(_:)(&v51, v40, v38, v49, v36);
    v42 = (void *)v50;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v35, v39, v34);
    _Block_release(v34);

    (*(void (**)(char *, uint64_t))(v48 + 8))(v39, v41);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v35, v46);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v30, v14);
    swift_release(v54);
  }
}

void sub_10006EA40()
{
  void *v0;
  uint64_t v1;
  void **v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  void ***v6;
  void **v7;
  uint64_t v8;
  void *v9;
  id v10;
  Swift::String v11;
  Swift::String_optional v12;
  Swift::String v13;
  void *object;
  id v15;
  Swift::String v16;
  Swift::String_optional v17;
  Swift::String v18;
  void *v19;
  id v20;
  Swift::String v21;
  Swift::String_optional v22;
  Swift::String v23;
  void *v24;
  NSString v25;
  id v26;
  NSString v27;
  void *v28;
  id v29;
  uint64_t v30;
  void **v31;
  NSString v32;
  void *v33;
  id v34;
  void **aBlock;
  _QWORD v36[4];
  uint64_t v37;
  Swift::String v38;
  Swift::String v39;
  Swift::String v40;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v1 = type metadata accessor for Logger(0);
  sub_100056D88(v1, (uint64_t)qword_1005F5748);
  v2 = v0;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = (void ***)swift_slowAlloc(8, -1);
    *(_DWORD *)v5 = 138412290;
    aBlock = v2;
    v7 = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v36);
    *v6 = v2;

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FMMeViewController<%@>: clear ignored tags", v5, 0xCu);
    v8 = sub_100053F2C((uint64_t *)&unk_1005D9680);
    swift_arrayDestroy(v6, 1, v8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
  v9 = (void *)objc_opt_self(NSBundle);
  v10 = objc_msgSend(v9, "mainBundle");
  v11._countAndFlagsBits = 0xD000000000000012;
  v38._object = (void *)0x80000001004A5660;
  v11._object = (void *)0x80000001004A5680;
  v12.value._countAndFlagsBits = 0xD000000000000013;
  v12.value._object = (void *)0x80000001004A5640;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v38._countAndFlagsBits = 0xD000000000000018;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, v12, (NSBundle)v10, v13, v38)._object;

  v15 = objc_msgSend(v9, "mainBundle");
  v39._object = (void *)0x80000001004A5660;
  v16._object = (void *)0x80000001004A56A0;
  v16._countAndFlagsBits = 0xD000000000000018;
  v17.value._countAndFlagsBits = 0xD000000000000013;
  v17.value._object = (void *)0x80000001004A5640;
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  v39._countAndFlagsBits = 0xD000000000000018;
  v19 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, v17, (NSBundle)v15, v18, v39)._object;

  v20 = objc_msgSend(v9, "mainBundle");
  v21._countAndFlagsBits = 0xD000000000000017;
  v40._object = (void *)0x80000001004A5660;
  v21._object = (void *)0x80000001004A56C0;
  v22.value._countAndFlagsBits = 0xD000000000000013;
  v22.value._object = (void *)0x80000001004A5640;
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  v40._countAndFlagsBits = 0xD000000000000018;
  v24 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, v22, (NSBundle)v20, v23, v40)._object;

  v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v26 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", 0, v25, 0);

  v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v19);
  v28 = (void *)objc_opt_self(UIAlertAction);
  v29 = objc_msgSend(v28, "actionWithTitle:style:handler:", v27, 1, 0);

  v30 = swift_allocObject(&unk_1005417F0, 24, 7);
  *(_QWORD *)(v30 + 16) = v2;
  v31 = v2;
  v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v24);
  v36[3] = sub_100073ADC;
  v37 = v30;
  aBlock = _NSConcreteStackBlock;
  v36[0] = 1107296256;
  v36[1] = sub_100008B40;
  v36[2] = &unk_100541808;
  v33 = _Block_copy(&aBlock);
  v34 = objc_msgSend(v28, "actionWithTitle:style:handler:", v32, 2, v33, swift_release(v37).n128_f64[0]);
  _Block_release(v33);

  objc_msgSend(v26, "addAction:", v29);
  objc_msgSend(v26, "addAction:", v34);
  objc_msgSend(v31, "presentViewController:animated:completion:", v26, 1, 0);

}

double sub_10006EED4(uint64_t a1, _BYTE *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD aBlock[5];
  uint64_t v28;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v25 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v23 = *(_QWORD *)(v6 - 8);
  v24 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS.QoSClass(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(*(_QWORD *)&a2[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator] + 24);
  v14 = swift_retain(v13);
  v15 = FMIPManager.unknownItems.getter(v14);
  swift_release(v13);
  a2[OBJC_IVAR____TtC6FindMy18FMMeViewController_isClearTagEnabledOverride] = 1;
  sub_1000689D0();
  sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for DispatchQoS.QoSClass.default(_:), v9);
  v16 = (void *)static OS_dispatch_queue.global(qos:)(v12);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v17 = swift_allocObject(&unk_100541840, 32, 7);
  *(_QWORD *)(v17 + 16) = v15;
  *(_QWORD *)(v17 + 24) = a2;
  aBlock[4] = sub_100073B10;
  v28 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_100541858;
  v18 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter(a2);
  v26 = _swiftEmptyArrayStorage;
  v19 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v20 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v21 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v26, v20, v21, v3, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v5, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v24);
  *(_QWORD *)&result = swift_release(v28).n128_u64[0];
  return result;
}

double sub_10006F190(uint64_t a1, char *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  char *v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  char *v46;
  __n128 v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(char *, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;

  v52 = a2;
  v3 = type metadata accessor for FMIPUnknownItemAlertState(0);
  v57 = *(_QWORD *)(v3 - 8);
  v58 = v3;
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v45 - v7;
  v9 = type metadata accessor for FMIPUnknownItem(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v51 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v53 = (char *)&v45 - v14;
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v16 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v55 = *(_QWORD *)(v10 + 72);
    v59 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v54 = enum case for FMIPUnknownItemAlertState.ignored(_:);
    v45 = a1;
    v17 = swift_bridgeObjectRetain(a1);
    v17.n128_u64[0] = 136315138;
    v47 = v17;
    v46 = (char *)&type metadata for Any + 8;
    v18 = v53;
    v49 = v8;
    v50 = v6;
    v48 = v9;
    v56 = v10;
    do
    {
      v21 = v59(v18, v16, v9);
      FMIPUnknownItem.alertState.getter(v21);
      v22 = v57;
      v23 = v58;
      (*(void (**)(char *, _QWORD, uint64_t))(v57 + 104))(v6, v54, v58);
      v24 = sub_100008000(&qword_1005DA790, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPUnknownItemAlertState, (uint64_t)&protocol conformance descriptor for FMIPUnknownItemAlertState);
      dispatch thunk of RawRepresentable.rawValue.getter(&v61, v23, v24);
      dispatch thunk of RawRepresentable.rawValue.getter(&v60, v23, v24);
      v26 = v60;
      v25 = v61;
      v27 = *(void (**)(char *, uint64_t))(v22 + 8);
      v27(v6, v23);
      v27(v8, v23);
      if (v25 == v26)
      {
        v28 = v51;
        v59(v51, (uint64_t)v18, v9);
        v29 = type metadata accessor for FMIPIgnoreItemAction(0);
        swift_allocObject(v29, *(unsigned int *)(v29 + 48), *(unsigned __int16 *)(v29 + 52));
        v30 = FMIPIgnoreItemAction.init(unknownItem:until:)(v28, 0);
        v31 = v52;
        v32 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v52[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator]
                                    + 24)
                        + 32);
        v33 = swift_allocObject(&unk_100541890, 24, 7);
        *(_QWORD *)(v33 + 16) = v31;
        v34 = qword_1005D1DE8;
        swift_retain(v32);
        v35 = v31;
        if (v34 != -1)
          swift_once(&qword_1005D1DE8, sub_100005ADC);
        v36 = type metadata accessor for Logger(0);
        sub_100056D88(v36, (uint64_t)qword_1005F5748);
        v37 = swift_retain_n(v30, 2);
        v38 = Logger.logObject.getter(v37);
        v39 = static os_log_type_t.default.getter(v38);
        if (os_log_type_enabled(v38, v39))
        {
          v40 = swift_slowAlloc(12, -1);
          v41 = swift_slowAlloc(32, -1);
          v61 = v41;
          *(_DWORD *)v40 = v47.n128_u32[0];
          v42 = FMIPUTItemAction.debugDescription.getter();
          v44 = v43;
          *(_QWORD *)(v40 + 4) = sub_100056DA0(v42, v43, &v61);
          swift_release_n(v30, 2);
          swift_bridgeObjectRelease(v44);
          _os_log_impl((void *)&_mh_execute_header, v38, v39, "FMDevicesActionController: perform UT item action %s", (uint8_t *)v40, 0xCu);
          swift_arrayDestroy(v41, 1, v46);
          swift_slowDealloc(v41, -1, -1);
          swift_slowDealloc(v40, -1, -1);

        }
        else
        {

          swift_release_n(v30, 2);
        }
        v19 = swift_allocObject(&unk_1005418B8, 32, 7);
        *(_QWORD *)(v19 + 16) = sub_100073B18;
        *(_QWORD *)(v19 + 24) = v33;
        swift_retain(v33);
        FMIPManager.perform(action:completion:)(v30, sub_100073B20, v19);
        swift_release(v30);
        swift_release(v32);
        swift_release(v33);
        v20 = swift_release(v19);
        v8 = v49;
        v6 = v50;
        v9 = v48;
        v18 = v53;
      }
      (*(void (**)(char *, uint64_t, __n128))(v56 + 8))(v18, v9, v20);
      v16 += v55;
      --v15;
    }
    while (v15);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v45).n128_u64[0];
  }
  return result;
}

void sub_10006F5F4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  os_log_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v6 = type metadata accessor for FMIPItemActionStatus(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v10 = type metadata accessor for Logger(0);
  sub_100056D88(v10, (uint64_t)qword_1005F5748);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v11 = a3;
  swift_errorRetain(a2);
  v12 = v11;
  v13 = swift_errorRetain(a2);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter(v14);
  v16 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    v17 = swift_slowAlloc(32, -1);
    v33 = v7;
    v18 = v17;
    v19 = (_QWORD *)swift_slowAlloc(8, -1);
    v36 = swift_slowAlloc(64, -1);
    v37 = (uint64_t)v12;
    v38 = v36;
    *(_DWORD *)v18 = 138412802;
    v35 = v14;
    v20 = v12;
    v34 = v16;
    v21 = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
    *v19 = v12;

    *(_WORD *)(v18 + 12) = 2080;
    v22 = sub_100008000((unint64_t *)&unk_1005D2C50, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItemActionStatus, (uint64_t)&protocol conformance descriptor for FMIPItemActionStatus);
    v23 = dispatch thunk of CustomStringConvertible.description.getter(v6, v22);
    v25 = v24;
    v37 = sub_100056DA0(v23, v24, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
    v26 = swift_bridgeObjectRelease(v25);
    (*(void (**)(char *, uint64_t, __n128))(v33 + 8))(v9, v6, v26);
    *(_WORD *)(v18 + 22) = 2080;
    v37 = a2;
    swift_errorRetain(a2);
    v27 = sub_100053F2C(&qword_1005D7E40);
    v28 = String.init<A>(describing:)(&v37, v27);
    v30 = v29;
    v37 = sub_100056DA0(v28, v29, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
    swift_bridgeObjectRelease(v30);
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    v14 = v35;
    _os_log_impl((void *)&_mh_execute_header, v35, (os_log_type_t)v34, "FMMeViewController<%@>: clear ignoreAction completed with status %s, and error %s", (uint8_t *)v18, 0x20u);
    v31 = sub_100053F2C((uint64_t *)&unk_1005D9680);
    swift_arrayDestroy(v19, 1, v31);
    swift_slowDealloc(v19, -1, -1);
    v32 = v36;
    swift_arrayDestroy(v36, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1, -1);
    swift_slowDealloc(v18, -1, -1);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_errorRelease(a2);
    swift_errorRelease(a2);
  }

  *((_BYTE *)v12 + OBJC_IVAR____TtC6FindMy18FMMeViewController_isClearTagEnabledOverride) = 2;
}

id sub_10006F97C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v5 = type metadata accessor for Logger(0);
  sub_100056D88(v5, (uint64_t)qword_1005F5748);
  v6 = a3;
  swift_errorRetain(a2);
  v7 = v6;
  v8 = swift_errorRetain(a2);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc(22, -1);
    v12 = (_QWORD *)swift_slowAlloc(8, -1);
    v20 = swift_slowAlloc(32, -1);
    v21 = (uint64_t)v7;
    v22 = v20;
    *(_DWORD *)v11 = 138412546;
    v13 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22);
    *v12 = v7;

    *(_WORD *)(v11 + 12) = 2080;
    v21 = a2;
    swift_errorRetain(a2);
    v14 = sub_100053F2C(&qword_1005D7E40);
    v15 = String.init<A>(describing:)(&v21, v14);
    v17 = v16;
    v21 = sub_100056DA0(v15, v16, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22);
    swift_bridgeObjectRelease(v17);
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "FMMeViewController<%@>: me device update with error?: %s", (uint8_t *)v11, 0x16u);
    v18 = sub_100053F2C((uint64_t *)&unk_1005D9680);
    swift_arrayDestroy(v12, 1, v18);
    swift_slowDealloc(v12, -1, -1);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    swift_slowDealloc(v11, -1, -1);
  }
  else
  {

    swift_errorRelease(a2);
    swift_errorRelease(a2);
  }

  return sub_1000689D0();
}

void sub_10006FBE4()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  double v4;
  double v5;
  double v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)swift_getObjectType(v0);
  objc_msgSendSuper2(&v7, "viewDidLayoutSubviews");
  if (qword_1005D1D20 != -1)
    swift_once(&qword_1005D1D20, sub_100228680);
  v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_secondaryLabelTopConstraint];
  if (v1)
  {
    v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_primaryLabel];
    v3 = v1;
    objc_msgSend(v2, "frame");
    v5 = v4;
    objc_msgSend(v2, "frame");
    objc_msgSend(v3, "setConstant:", v5 + v6 + 30.0);

  }
}

uint64_t type metadata accessor for FMMeViewController()
{
  return objc_opt_self(_TtC6FindMy18FMMeViewController);
}

void sub_10006FD18()
{
  id v0;
  NSURL *v1;
  void *v2;
  void *v3;
  void *v4;
  Class isa;

  v0 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (v0)
  {
    v2 = v0;
    URL._bridgeToObjectiveC()(v1);
    v4 = v3;
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v2, "openSensitiveURL:withOptions:", v4, isa);

  }
}

uint64_t sub_10006FDD0()
{
  return sub_100072488((uint64_t)&unk_100541570, (uint64_t)sub_100073CBC, (uint64_t)&unk_100541588);
}

uint64_t sub_10006FDFC(uint64_t a1, uint64_t a2)
{
  return sub_100072280(a2, (uint64_t)&unk_100541520, (uint64_t)sub_100073CBC, (uint64_t)&unk_100541538);
}

uint64_t sub_10006FE2C(uint64_t a1, uint64_t a2)
{
  return sub_100072280(a2, (uint64_t)&unk_1005414D0, (uint64_t)sub_100073CBC, (uint64_t)&unk_1005414E8);
}

uint64_t sub_10006FE5C(uint64_t a1, uint64_t a2)
{
  return sub_100072280(a2, (uint64_t)&unk_100541480, (uint64_t)sub_100073CBC, (uint64_t)&unk_100541498);
}

uint64_t sub_10006FE8C()
{
  return sub_100072488((uint64_t)&unk_100541430, (uint64_t)sub_100073CBC, (uint64_t)&unk_100541448);
}

uint64_t sub_10006FEB8()
{
  return sub_100072488((uint64_t)&unk_1005413E0, (uint64_t)sub_100073CBC, (uint64_t)&unk_1005413F8);
}

uint64_t sub_10006FEE4()
{
  return sub_100072488((uint64_t)&unk_100541610, (uint64_t)sub_100073CBC, (uint64_t)&unk_100541628);
}

uint64_t sub_10006FF10(uint64_t a1, uint64_t a2)
{
  return sub_100072280(a2, (uint64_t)&unk_1005415C0, (uint64_t)sub_100073CBC, (uint64_t)&unk_1005415D8);
}

uint64_t sub_10006FF40()
{
  return sub_100072488((uint64_t)&unk_100541660, (uint64_t)sub_100073CBC, (uint64_t)&unk_100541678);
}

uint64_t sub_10006FF6C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;
  uint64_t result;
  char v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD v16[2];
  char v17;
  uint64_t v18;

  v3 = *a1;
  KeyPath = swift_getKeyPath(&unk_100481828);
  v5 = swift_getKeyPath(&unk_100481850);
  static Published.subscript.getter(v16, v3, KeyPath, v5);
  swift_release(KeyPath);
  result = swift_release(v5);
  v7 = BYTE1(v16[0]);
  v8 = BYTE2(v16[0]);
  v9 = BYTE3(v16[0]);
  v10 = BYTE4(v16[0]);
  v11 = BYTE5(v16[0]);
  v12 = BYTE6(v16[0]);
  v13 = v16[1];
  v14 = v17;
  v15 = v18;
  *(_BYTE *)a2 = v16[0];
  *(_BYTE *)(a2 + 1) = v7;
  *(_BYTE *)(a2 + 2) = v8;
  *(_BYTE *)(a2 + 3) = v9;
  *(_BYTE *)(a2 + 4) = v10;
  *(_BYTE *)(a2 + 5) = v11;
  *(_BYTE *)(a2 + 6) = v12;
  *(_QWORD *)(a2 + 8) = v13;
  *(_BYTE *)(a2 + 16) = v14;
  *(_QWORD *)(a2 + 24) = v15;
  return result;
}

void sub_100070030(char *a1, uint64_t *a2)
{
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char v9;
  void *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  _BYTE v16[8];
  uint64_t v17;
  char v18;
  void *v19;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v8 = a1[6];
  v13 = *((_QWORD *)a1 + 1);
  v9 = a1[16];
  v10 = (void *)*((_QWORD *)a1 + 3);
  v11 = *a2;
  KeyPath = swift_getKeyPath(&unk_100481828);
  v14 = swift_getKeyPath(&unk_100481850);
  v16[0] = v2;
  v16[1] = v3;
  v16[2] = v4;
  v16[3] = v5;
  v16[4] = v6;
  v16[5] = v7;
  v16[6] = v8;
  v17 = v13;
  v18 = v9;
  v19 = v10;
  v12 = v10;
  swift_retain(v11);
  static Published.subscript.setter(v16, v11, KeyPath, v14);
  sub_100138EB8();
}

uint64_t sub_10007010C(uint64_t a1)
{
  return swift_slowAlloc(a1, -1);
}

uint64_t sub_100070114(uint64_t a1)
{
  return swift_slowDealloc(a1, -1, -1);
}

uint64_t sub_100070120(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_100070130(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_100070164(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100059310(a1, a2, a3, a4, &qword_1005D2AE0, type metadata accessor for FMBeaconSharingModuleEntry);
}

_QWORD *sub_100070178(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100053F2C((uint64_t *)&unk_1005D2A90);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_100071370(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100070284(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100059310(a1, a2, a3, a4, &qword_1005D2AB0, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPSafeLocation);
}

uint64_t sub_100070298(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100059310(a1, a2, a3, a4, &qword_1005D2AA8, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPPlaySoundChannels);
}

uint64_t sub_1000702AC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100059310(a1, a2, a3, a4, &qword_1005D2AB8, (uint64_t (*)(_QWORD))&type metadata accessor for FMFFriend);
}

uint64_t sub_1000702C0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100059310(a1, a2, a3, a4, (uint64_t *)&unk_1005D2B90, type metadata accessor for FMItemCellViewModel);
}

uint64_t sub_1000702D4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100059310(a1, a2, a3, a4, &qword_1005D2AF0, type metadata accessor for FMAllowLocationAlertCellViewModel);
}

_QWORD *sub_1000702E8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100070DD0(a1, a2, a3, a4, &qword_1005D2B78, &qword_1005D2B80);
}

uint64_t sub_1000702FC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100059310(a1, a2, a3, a4, &qword_1005D2B88, type metadata accessor for FMDeviceCellViewModel);
}

uint64_t sub_100070310(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100059310(a1, a2, a3, a4, &qword_1005D2C18, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPItemImageCacheRequest);
}

uint64_t sub_100070324(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100059310(a1, a2, a3, a4, &qword_1005D2B50, (uint64_t (*)(_QWORD))&type metadata accessor for FMFLocationAlert);
}

_QWORD *sub_100070338(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100070488(a1, a2, a3, a4, (uint64_t *)&unk_1005D2C40);
}

_QWORD *sub_100070344(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100053F2C(&qword_1005D2B68);
      v11 = (_QWORD *)swift_allocObject(v10, 48 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 48);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[6 * v8 + 4])
          memmove(v13, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1000732C4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100070468(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100059310(a1, a2, a3, a4, &qword_1005D2C20, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPDevice);
}

_QWORD *sub_10007047C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100070488(a1, a2, a3, a4, &qword_1005D2C30);
}

_QWORD *sub_100070488(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  _QWORD *v12;
  size_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      v11 = sub_100053F2C(a5);
      v12 = (_QWORD *)swift_allocObject(v11, v10 + 32, 7);
      v13 = j__malloc_size(v12);
      v12[2] = v9;
      v12[3] = 2 * v13 - 64;
      v14 = v12 + 4;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v12 != a4 || v14 >= (_QWORD *)((char *)a4 + v9 + 32))
          memmove(v14, a4 + 4, v9);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v12 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1000735F4(0, v9, (char *)v14, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v12;
  }
  __break(1u);
  return result;
}

_QWORD *sub_10007057C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100070488(a1, a2, a3, a4, &qword_1005D2BB8);
}

uint64_t sub_100070588(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100059310(a1, a2, a3, a4, &qword_1005D2C10, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPItem);
}

uint64_t sub_10007059C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100059310(a1, a2, a3, a4, &qword_1005D2C08, type metadata accessor for FMUnknownItemsListDataSource.Entry);
}

uint64_t sub_1000705B0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000705D8(a1, a2, a3, a4, &qword_1005D2BF8, &qword_1005D2C00);
}

uint64_t sub_1000705C4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000705D8(a1, a2, a3, a4, &qword_1005D2BE8, &qword_1005D2BF0);
}

uint64_t sub_1000705D8(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  size_t v19;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
LABEL_29:
        result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division by zero", 16, 2, "Swift/IntegerTypes.swift", 24, 2, 14377, 0);
LABEL_31:
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  v13 = sub_100053F2C(a5);
  v14 = *(_QWORD *)(sub_100053F2C(a6) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(unsigned __int8 *)(v14 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (_QWORD *)swift_allocObject(v13, v17 + v15 * v12, v16 | 7);
  v19 = j__malloc_size(v18);
  if (!v15)
    goto LABEL_29;
  if (v19 - v17 == 0x8000000000000000 && v15 == -1)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Division results in an overflow", 31, 2, "Swift/IntegerTypes.swift", 24, 2, 14384, 0);
    goto LABEL_31;
  }
  v18[2] = v11;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v15);
LABEL_19:
  v21 = *(_QWORD *)(sub_100053F2C(a6) - 8);
  v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v23 = (unint64_t)v18 + v22;
  if ((a1 & 1) != 0)
  {
    v24 = a4 + v22;
    if ((unint64_t)v18 < a4 || v23 >= v24 + *(_QWORD *)(v21 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack((char *)v18 + v22, v24);
    }
    else if (v18 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront((char *)v18 + v22, v24);
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1000733D0(0, v11, v23, a4, a6);
  }
  swift_bridgeObjectRelease(a4);
  return (uint64_t)v18;
}

_QWORD *sub_1000707E4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100053F2C(&qword_1005D2BD8);
      v11 = (_QWORD *)swift_allocObject(v10, 24 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v8 + 4])
          memmove(v13, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1000734E8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100070908(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100070488(a1, a2, a3, a4, &qword_1005D2BC0);
}

_QWORD *sub_100070914(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100053F2C((uint64_t *)&unk_1005D2AD0);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000736D8(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100070A20(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_100059310(a1, a2, a3, a4, &qword_1005D2BB0, type metadata accessor for FMLocationAlertRowViewModel);
}

_QWORD *sub_100070A34(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100053F2C(&qword_1005D2BA0);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000737E0(0, v8, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100070B40(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100053F2C(&qword_1005D2B58);
      v11 = (_QWORD *)swift_allocObject(v10, 24 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v11[2] = v8;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      v13 = v11 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v8 + 4])
          memmove(v13, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v13 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_100072174(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100070C60(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000705D8(a1, a2, a3, a4, &qword_1005D2B10, &qword_1005D2B18);
}

uint64_t sub_100070C74(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000705D8(a1, a2, a3, a4, &qword_1005D2B20, &qword_1005D2B28);
}

uint64_t sub_100070C88(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000705D8(a1, a2, a3, a4, &qword_1005D2B30, &qword_1005D2B38);
}

uint64_t sub_100070C9C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1000705D8(a1, a2, a3, a4, (uint64_t *)&unk_1005D2B40, (uint64_t *)&unk_1005E42A0);
}

_QWORD *sub_100070CB0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      v10 = sub_100053F2C(&qword_1005D2AF8);
      v11 = (_QWORD *)swift_allocObject(v10, 16 * v9 + 32, 7);
      v12 = j__malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v8;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = _swiftEmptyArrayStorage;
      v14 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v8 + 4])
          memmove(v14, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000738E8(0, v8, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_100070DBC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_100070DD0(a1, a2, a3, a4, (uint64_t *)&unk_1005D2B00, &qword_1005E3BA0);
}

_QWORD *sub_100070DD0(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      v13 = sub_100053F2C(a5);
      v14 = (_QWORD *)swift_allocObject(v13, 8 * v12 + 32, 7);
      v15 = j__malloc_size(v14);
      v16 = v15 - 32;
      if (v15 < 32)
        v16 = v15 - 25;
      v14[2] = v11;
      v14[3] = 2 * (v16 >> 3);
      v17 = v14 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v14 = _swiftEmptyArrayStorage;
      v17 = &_swiftEmptyArrayStorage[4];
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v14 != a4 || v17 >= &a4[v11 + 4])
          memmove(v17, a4 + 4, 8 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1000739D0(0, v11, (unint64_t)v17, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease(a4);
    return v14;
  }
  __break(1u);
  return result;
}

void sub_100070EE8(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = a4();
  v8 = v7;
  v9 = sub_100056DA0(v6, v7, a3);
  v10 = *a1 + 8;
  v11 = v9;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12);
  swift_bridgeObjectRelease(v8);
  *a1 = v10;
}

uint64_t sub_100070F58(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;

  v5 = a1;
  v6 = a1 >> 16;
  v7 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v13 = String.UTF16View.index(_:offsetBy:)(15, v6, a2);
    v14 = v13 + (v7 << 16);
    v15 = v13 & 0xFFFFFFFFFFFFFFFCLL | v5 & 3;
    v16 = v14 & 0xFFFFFFFFFFFF0000;
    if (!v7)
      v16 = v15;
    return v16 | 4;
  }
  else
  {
    v8 = String.UTF8View._foreignIndex(_:offsetBy:)(15, v6);
    v9 = v8 + (v7 << 16);
    v10 = v8 & 0xFFFFFFFFFFFFFFFCLL | v5 & 3;
    v11 = v9 & 0xFFFFFFFFFFFF0000;
    if (!v7)
      v11 = v10;
    return v11 | 8;
  }
}

uint64_t sub_100070FD0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    v10 = sub_100053F2C(&qword_1005D2A88);
    v11 = (char *)swift_allocObject(v10, v9 + 32, 7);
    v12 = j__malloc_size(v11);
    *((_QWORD *)v11 + 2) = v8;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v8])
      memmove(v13, v14, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v8] || v13 >= &v14[v8])
  {
    memcpy(v13, v14, v8);
LABEL_28:
    swift_bridgeObjectRelease(a4);
    return (uint64_t)v11;
  }
LABEL_30:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

_BYTE **sub_10007111C(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

uint64_t sub_100071130(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr))
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  a4(&v7);
  v5 = *a1 + 4;
  result = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v7, (char *)&v7 + 4);
  *a1 = v5;
  return result;
}

uint64_t sub_100071188(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr))
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  a4(&v7);
  v5 = *a1 + 8;
  result = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v7, &v8);
  *a1 = v5;
  return result;
}

void *sub_1000711E0(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  uint64_t v4;

  if (__src)
    v4 = a2 - (_QWORD)__src;
  else
    v4 = 0;
  if (!__dst)
  {
    if (v4 <= 0)
      return __src;
LABEL_10:
    __src = (void *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutableRawBufferPointer.copyMemory source has too many elements", 69, 2, "Swift/UnsafeRawBufferPointer.swift", 34, 2, 487, 0);
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v4)
    goto LABEL_10;
  if (__src)
    return memmove(__dst, __src, a2 - (_QWORD)__src);
  return __src;
}

uint64_t sub_100071274(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_100071298@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

void sub_1000712C0(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a4();
  v7 = (void *)v6;
  v8 = *a1 + 8;
  if (v6)
    v10 = v6;
  else
    v10 = 0;
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v10, &v11);
  *a1 = v8;
  v9 = *a2;
  if (*a2)
  {
    *v9 = v7;
    *a2 = v9 + 1;
  }
  else
  {

  }
}

uint64_t sub_100071370(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy(a3);
      return v6;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

void sub_100071460()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  objc_class *v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void *v19;
  char *v20;

  v1 = v0;
  v2 = OBJC_IVAR____TtC6FindMy18FMMeViewController_locationSettings;
  *(_QWORD *)&v1[v2] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMLocationSettingsView(0)), "init");
  v3 = OBJC_IVAR____TtC6FindMy18FMMeViewController_stewieSettings;
  *(_QWORD *)&v1[v3] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMStewieSettingsView()), "init");
  v4 = OBJC_IVAR____TtC6FindMy18FMMeViewController_locationAlerts;
  *(_QWORD *)&v1[v4] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMMyLocationAlertsView()), "init");
  v5 = OBJC_IVAR____TtC6FindMy18FMMeViewController_editFindMyNotificationSettingsButton;
  v6 = (objc_class *)type metadata accessor for FMSingleLinePlatterButton();
  v7 = objc_allocWithZone(v6);
  *(_QWORD *)&v1[v5] = sub_1000472FC(0, 0, 0, 1);
  v8 = OBJC_IVAR____TtC6FindMy18FMMeViewController_editSafetyAlertsNotificationSettingsButton;
  v9 = objc_allocWithZone(v6);
  *(_QWORD *)&v1[v8] = sub_1000472FC(0, 0, 0, 1);
  v10 = OBJC_IVAR____TtC6FindMy18FMMeViewController_nameLocationButton;
  v11 = objc_allocWithZone(v6);
  *(_QWORD *)&v1[v10] = sub_1000472FC(0, 0, 0, 1);
  v12 = OBJC_IVAR____TtC6FindMy18FMMeViewController_clearIgnoredTagsButton;
  v13 = objc_allocWithZone(v6);
  *(_QWORD *)&v1[v12] = sub_1000472FC(0, 0, 0, 1);
  v14 = OBJC_IVAR____TtC6FindMy18FMMeViewController_helpFriendView;
  *(_QWORD *)&v1[v14] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMHelpFriendView()), "init");
  v15 = OBJC_IVAR____TtC6FindMy18FMMeViewController_actionButtonsStackView;
  *(_QWORD *)&v1[v15] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v16 = OBJC_IVAR____TtC6FindMy18FMMeViewController_verticalStackView;
  *(_QWORD *)&v1[v16] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v17 = OBJC_IVAR____TtC6FindMy18FMMeViewController_coarseLabel;
  *(_QWORD *)&v1[v17] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy18FMMeViewController_peopleSubscription] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy18FMMeViewController_deviceSubscription] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy18FMMeViewController_conditionsSubscription] = 0;
  v1[OBJC_IVAR____TtC6FindMy18FMMeViewController_isLocationSharingOnOverride] = 2;
  v1[OBJC_IVAR____TtC6FindMy18FMMeViewController_isAllowFriendsRequestOnOverride] = 2;
  v1[OBJC_IVAR____TtC6FindMy18FMMeViewController_isAllowLocationAlertsOnOverride] = 2;
  v1[OBJC_IVAR____TtC6FindMy18FMMeViewController_isClearTagEnabledOverride] = 2;
  v1[OBJC_IVAR____TtC6FindMy18FMMeViewController_currentLimitedPrecision] = 0;
  v18 = &v1[OBJC_IVAR____TtC6FindMy18FMMeViewController_displayAddress];
  *((_WORD *)v18 + 8) = 0;
  *(_QWORD *)v18 = 0;
  *((_QWORD *)v18 + 1) = 0;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_10013CC00((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    v19 = &_swiftEmptySetSingleton;
  }
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy18FMMeViewController_cancellables] = v19;
  v20 = &v1[OBJC_IVAR____TtC6FindMy18FMMeViewController_delegate];
  *((_QWORD *)v20 + 1) = 0;
  swift_unknownObjectWeakInit(v20);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMMeViewController.swift", 31, 2, 80, 0);
  __break(1u);
}

uint64_t sub_100071738(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  id v15;
  Swift::String v16;
  Swift::String v17;
  uint64_t countAndFlagsBits;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t inited;
  void *v24;
  id v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  void *v33;
  void *v34;
  double v35;
  double v36;
  double v37;
  double v38;
  id v39;
  id v40;
  uint64_t v41;
  id v42;
  Swift::String v43;
  Swift::String v44;
  id v46;
  Swift::String v47;
  Swift::String v48;
  Swift::String v49;
  uint64_t v50;
  uint64_t v51;
  __n128 v52;
  _BYTE v53[12];
  int v54;
  _BYTE v55[64];
  uint64_t v56;
  unint64_t v57;
  Swift::String v58;
  Swift::String v59;
  Swift::String v60;
  Swift::String v61;

  v4 = sub_100053F2C((uint64_t *)&unk_1005D3350);
  v5 = __chkstk_darwin(v4);
  v7 = &v53[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v53[-v8];
  v10 = type metadata accessor for FMFLocation(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = &v53[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((a1 & 1) == 0)
  {
    v56 = 0;
    v57 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v57);
    v15 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v16._countAndFlagsBits = 0xD000000000000021;
    v58._countAndFlagsBits = 0xD000000000000033;
    v58._object = (void *)0x80000001004A5380;
    v16._object = (void *)0x80000001004A5350;
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v58)._countAndFlagsBits;

    return countAndFlagsBits;
  }
  dispatch thunk of FMFManager.myLocation.getter(v12);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 32))(v14, v9, v10);
    if (qword_1005D1F68 != -1)
      swift_once(&qword_1005D1F68, sub_100006164);
    if (byte_1005F5E31 != 1)
    {
      (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v14, v10);
      goto LABEL_13;
    }
    v19 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_limitedPrecision);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 16))(v7, v14, v10);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    v54 = v19;
    countAndFlagsBits = sub_1000530E0((uint64_t)v7, v19 ^ 1u);
    v21 = v20;
    sub_1000051EC((uint64_t)v7, (uint64_t *)&unk_1005D3350);
    v22 = sub_100053F2C((uint64_t *)&unk_1005D2A90);
    inited = swift_initStackObject(v22, v55);
    *(_OWORD *)(inited + 16) = xmmword_100481730;
    v56 = 0;
    v57 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v57);
    v24 = (void *)objc_opt_self(NSBundle);
    v25 = objc_msgSend(v24, "mainBundle");
    v59._countAndFlagsBits = 0xD000000000000030;
    v59._object = (void *)0x80000001004A5400;
    v26._object = (void *)0x80000001004A53E0;
    v26._countAndFlagsBits = 0xD00000000000001ELL;
    v27._countAndFlagsBits = 0;
    v27._object = (void *)0xE000000000000000;
    v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, (Swift::String_optional)0, (NSBundle)v25, v27, v59);

    *(Swift::String *)(inited + 32) = v28;
    *(_QWORD *)(inited + 48) = static PublishedLocation.Label.noLocationLabel.getter();
    *(_QWORD *)(inited + 56) = v29;
    v30 = sub_10006BA18(countAndFlagsBits, v21, (_QWORD *)inited);
    swift_setDeallocating(inited);
    v31 = swift_arrayDestroy(inited + 32, 2, &type metadata for String);
    if ((v30 & 1) != 0)
    {
      v32 = v54;
      v33 = (void *)FMFLocation.location.getter(v31);
      if (v33)
      {
        v34 = v33;
        objc_msgSend(v33, "coordinate", swift_bridgeObjectRelease(v21).n128_f64[0]);
        v36 = v35;
        v38 = v37;

        v39 = objc_msgSend(objc_allocWithZone((Class)MUCoordinateStringFormatter), "init");
        v40 = objc_msgSend(v39, "stringFromCoordinate:", v36, v38);

        countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
        v21 = v41;

        if ((v32 & 1) != 0)
          goto LABEL_20;
LABEL_22:
        (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v14, v10);
        return countAndFlagsBits;
      }
      if ((v32 & 1) == 0)
        goto LABEL_22;
    }
    else if ((v54 & 1) == 0)
    {
      goto LABEL_22;
    }
LABEL_20:
    v56 = 0;
    v57 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    v46 = objc_msgSend(v24, "mainBundle", swift_bridgeObjectRelease(v57).n128_f64[0]);
    v61._object = (void *)0x80000001004A5440;
    v47._countAndFlagsBits = 0x4444415F5241454ELL;
    v47._object = (void *)0xEC00000053534552;
    v48._countAndFlagsBits = 0;
    v48._object = (void *)0xE000000000000000;
    v61._countAndFlagsBits = 0xD00000000000001ELL;
    v49 = NSLocalizedString(_:tableName:bundle:value:comment:)(v47, (Swift::String_optional)0, (NSBundle)v46, v48, v61);

    v50 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
    v51 = swift_allocObject(v50, 72, 7);
    *(_OWORD *)(v51 + 16) = xmmword_100481740;
    *(_QWORD *)(v51 + 56) = &type metadata for String;
    *(_QWORD *)(v51 + 64) = sub_100071E88();
    *(_QWORD *)(v51 + 32) = countAndFlagsBits;
    *(_QWORD *)(v51 + 40) = v21;
    countAndFlagsBits = String.init(format:_:)(v49._countAndFlagsBits, v49._object, v51);
    v52 = swift_bridgeObjectRelease(v49._object);
    (*(void (**)(_BYTE *, uint64_t, __n128))(v11 + 8))(v14, v10, v52);
    return countAndFlagsBits;
  }
  sub_1000051EC((uint64_t)v9, (uint64_t *)&unk_1005D3350);
LABEL_13:
  if (qword_1005D1F68 != -1)
    swift_once(&qword_1005D1F68, sub_100006164);
  if (byte_1005F5E31 != 1)
    return 0;
  v56 = 0;
  v57 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v57);
  v42 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v60._countAndFlagsBits = 0xD00000000000001CLL;
  v60._object = (void *)0x80000001004A53C0;
  v43._countAndFlagsBits = 0x45524444415F4F4ELL;
  v43._object = (void *)0xEA00000000005353;
  v44._countAndFlagsBits = 0;
  v44._object = (void *)0xE000000000000000;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v43, (Swift::String_optional)0, (NSBundle)v42, v44, v60)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_100071DB8(uint64_t a1)
{
  sub_100071DEC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  return a1;
}

unint64_t sub_100071DEC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (result >> 62 == 1)
  {
    swift_bridgeObjectRelease(a3);
    return sub_100071E5C(a4, a5, a6);
  }
  else if (!(result >> 62))
  {
    return sub_100071E5C(a2, a3, a4);
  }
  return result;
}

uint64_t sub_100071E5C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1)
    return sub_100071E70(a1, a2, a3);
  return a1;
}

uint64_t sub_100071E70(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 1)
    return swift_bridgeObjectRelease(a2);
  return result;
}

unint64_t sub_100071E88()
{
  unint64_t result;

  result = qword_1005D2AA0;
  if (!qword_1005D2AA0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for String, &type metadata for String);
    atomic_store(result, (unint64_t *)&qword_1005D2AA0);
  }
  return result;
}

void sub_100071ECC(char a1)
{
  void *v1;
  uint64_t My;
  _QWORD *v4;
  char v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  id v18;
  char *v19;
  _QWORD v20[4];

  My = type metadata accessor for Feature.FindMy(0);
  v20[2] = My;
  v20[3] = sub_100008000((unint64_t *)&qword_1005D9690, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.FindMy, (uint64_t)&protocol conformance descriptor for Feature.FindMy);
  v4 = sub_10003D370(&v19);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(My - 8) + 104))(v4, enum case for Feature.FindMy.fmNiftyCurve(_:), My);
  LOBYTE(My) = isFeatureEnabled(_:)(&v19);
  sub_100029574(&v19);
  if ((My & 1) != 0)
  {
    v5 = a1 & 1;
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v6 = type metadata accessor for Logger(0);
    sub_100056D88(v6, (uint64_t)qword_1005F5748);
    v7 = v1;
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc(12, -1);
      v11 = (_QWORD *)swift_slowAlloc(8, -1);
      *(_DWORD *)v10 = 138412290;
      v19 = v7;
      v12 = v7;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, v20);
      *v11 = v7;

      _os_log_impl((void *)&_mh_execute_header, v8, v9, "FMMeViewController<%@>: update Stewie location actioned", v10, 0xCu);
      v13 = sub_100053F2C((uint64_t *)&unk_1005D9680);
      swift_arrayDestroy(v11, 1, v13);
      swift_slowDealloc(v11, -1, -1);
      swift_slowDealloc(v10, -1, -1);

    }
    else
    {

    }
    type metadata accessor for FMStewieWelcomeViewController(0);
    v14 = *(_QWORD *)&v7[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator];
    v15 = *(_QWORD *)&v7[OBJC_IVAR____TtC6FindMy18FMMeViewController_stewieViewModel];
    v16 = v7;
    swift_retain(v14);
    swift_retain(v15);
    v17 = sub_10037CC08(v14, v15, (uint64_t)v7, (uint64_t)&off_1005411B8, v5);
    v18 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v17);
    objc_msgSend(v16, "presentViewController:animated:completion:", v18, 1, 0);

  }
}

uint64_t sub_100072174(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v6 = a4 + 24 * a1 + 32;
  v7 = a3 + 24 * v4;
  if (v6 >= v7 || v6 + 24 * v4 <= a3)
  {
    sub_100053F2C(&qword_1005D2B60);
    swift_arrayInitWithCopy(a3);
    return v7;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100072280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[5];
  uint64_t v29;

  v8 = v4;
  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v27 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for DispatchQoS(0);
  v12 = *(_QWORD *)(v26 - 8);
  __chkstk_darwin(v26);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v16 = (void *)static OS_dispatch_queue.main.getter(v15);
  v17 = swift_allocObject(a2, 24, 7);
  *(_QWORD *)(v17 + 16) = v4;
  aBlock[4] = a3;
  v29 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = a4;
  v18 = _Block_copy(aBlock);
  v19 = v29;
  v20 = v8;
  swift_release(v19);
  static DispatchQoS.unspecified.getter(v21);
  aBlock[0] = _swiftEmptyArrayStorage;
  v22 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v23 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v24 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v23, v24, v9, v22);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v14, v11, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v26);
}

uint64_t sub_100072488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[5];
  uint64_t v28;

  v7 = v3;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v26 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v25 - 8);
  __chkstk_darwin(v25);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v15 = (void *)static OS_dispatch_queue.main.getter(v14);
  v16 = swift_allocObject(a1, 24, 7);
  *(_QWORD *)(v16 + 16) = v3;
  aBlock[4] = a2;
  v28 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = a3;
  v17 = _Block_copy(aBlock);
  v18 = v28;
  v19 = v7;
  swift_release(v18);
  static DispatchQoS.unspecified.getter(v20);
  aBlock[0] = _swiftEmptyArrayStorage;
  v21 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v22 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v23 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v22, v23, v8, v21);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v10, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v25);
}

uint64_t sub_100072690()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000726B4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

id sub_1000726D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10006DC54(a1, a2, *(void **)(v2 + 16), *(_BYTE *)(v2 + 24));
}

void sub_1000726E4(uint64_t a1)
{
  uint64_t v1;

  sub_10006DF10(a1, *(void **)(v1 + 16));
}

uint64_t sub_1000726EC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100072710(uint64_t a1)
{
  uint64_t v1;

  return sub_1001840C4(a1, *(uint64_t (**)(uint64_t))(v1 + 16));
}

id sub_100072718()
{
  return sub_1000689D0();
}

uint64_t sub_100072738()
{
  return sub_100072760("FMMeViewController<%@>: change me device actioned", (uint64_t (*)(void))sub_10006CB44);
}

uint64_t sub_10007274C()
{
  return sub_100072760("FMMeViewController<%@>: edit location name actioned", (uint64_t (*)(void))sub_10006D4BC);
}

uint64_t sub_100072760(char *a1, uint64_t (*a2)(void))
{
  void *v2;
  uint64_t v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t (*v9)(void);
  uint8_t *v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  char *format;
  id v16;
  uint64_t v17;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v5 = type metadata accessor for Logger(0);
  sub_100056D88(v5, (uint64_t)qword_1005F5748);
  v6 = v2;
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    format = a1;
    v9 = a2;
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = (_QWORD *)swift_slowAlloc(8, -1);
    *(_DWORD *)v10 = 138412290;
    v16 = v6;
    v12 = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17);
    *v11 = v6;

    a2 = v9;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, format, v10, 0xCu);
    v13 = sub_100053F2C((uint64_t *)&unk_1005D9680);
    swift_arrayDestroy(v11, 1, v13);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

  }
  return a2();
}

void sub_100072908(int a1)
{
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __n128 v38;
  char *v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  char **v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  void (*v47)(char *, char *, uint64_t);
  char *v48;
  char *v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;

  LODWORD(v2) = a1;
  v3 = sub_100053F2C((uint64_t *)&unk_1005E59F0);
  __chkstk_darwin(v3);
  v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FMFPreferences(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v64 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v65 = (char *)&v57 - v11;
  __chkstk_darwin(v10);
  v13 = (char *)&v57 - v12;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v14 = type metadata accessor for Logger(0);
  v15 = sub_100056D88(v14, (uint64_t)qword_1005F5748);
  v16 = v1;
  v63 = v15;
  v17 = Logger.logObject.getter(v16);
  v18 = static os_log_type_t.default.getter(v17);
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc(22, -1);
    v61 = v6;
    v20 = v19;
    v21 = swift_slowAlloc(8, -1);
    v59 = v7;
    v22 = v5;
    v23 = (_QWORD *)v21;
    v57 = v21;
    v58 = swift_slowAlloc(32, -1);
    v68 = v58;
    *(_DWORD *)v20 = 138412546;
    v66 = (uint64_t)v16;
    v60 = v13;
    v24 = v16;
    v62 = v2;
    v25 = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, &v67);
    *v23 = v16;
    v5 = v22;

    *(_WORD *)(v20 + 12) = 2080;
    v66 = 0;
    v67 = 0xE000000000000000;
    if ((v62 & 1) != 0)
      v26 = 1702195828;
    else
      v26 = 0x65736C6166;
    if ((v62 & 1) != 0)
      v27 = 0xE400000000000000;
    else
      v27 = 0xE500000000000000;
    v28 = v27;
    String.append(_:)(*(Swift::String *)&v26);
    swift_bridgeObjectRelease(v27);
    v2 = v67;
    v66 = sub_100056DA0(v66, v67, &v68);
    v13 = v60;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, &v67);
    v29 = v2;
    LOBYTE(v2) = v62;
    swift_bridgeObjectRelease(v29);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "FMMeViewController<%@>: friends settings, allow friend request state changed: %s", (uint8_t *)v20, 0x16u);
    v30 = sub_100053F2C((uint64_t *)&unk_1005D9680);
    v31 = v57;
    swift_arrayDestroy(v57, 1, v30);
    v7 = v59;
    swift_slowDealloc(v31, -1, -1);
    v32 = v58;
    swift_arrayDestroy(v58, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1, -1);
    v33 = v20;
    v6 = v61;
    swift_slowDealloc(v33, -1, -1);

  }
  else
  {

  }
  v34 = v2 & 1;
  v16[OBJC_IVAR____TtC6FindMy18FMMeViewController_isAllowFriendsRequestOnOverride] = v2 & 1;
  v35 = OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator;
  v36 = *(_QWORD *)(*(_QWORD *)&v16[OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator] + 48);
  v37 = swift_retain(v36);
  dispatch thunk of FMFManager.preferences.getter(v37);
  v38 = swift_release(v36);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v7 + 48))(v5, 1, v6, v38) == 1)
  {
    sub_1000051EC((uint64_t)v5, (uint64_t *)&unk_1005E59F0);
    v39 = v16;
    v40 = Logger.logObject.getter(v39);
    v41 = static os_log_type_t.error.getter(v40);
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc(12, -1);
      v43 = (char **)swift_slowAlloc(8, -1);
      *(_DWORD *)v42 = 138412290;
      v66 = (uint64_t)v39;
      v44 = v39;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v66, &v67);
      *v43 = v39;

      _os_log_impl((void *)&_mh_execute_header, v40, v41, "FMMeViewController<%@>: prefs is nil for some reason", v42, 0xCu);
      v45 = sub_100053F2C((uint64_t *)&unk_1005D9680);
      swift_arrayDestroy(v43, 1, v45);
      swift_slowDealloc(v43, -1, -1);
      swift_slowDealloc(v42, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    v46 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v46(v13, v5, v6);
    v47 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v48 = v64;
    v47(v64, v13, v6);
    v49 = v65;
    FMFPreferences.init(prefs:allowFriendRequests:)(v48, v34);
    v50 = *(void (**)(char *, uint64_t))(v7 + 8);
    v50(v13, v6);
    v46(v13, v49, v6);
    v47(v49, v13, v6);
    v51 = type metadata accessor for FMFUpdatePrefsAction(0);
    swift_allocObject(v51, *(unsigned int *)(v51 + 48), *(unsigned __int16 *)(v51 + 52));
    v52 = FMFUpdatePrefsAction.init(prefs:)(v49);
    v53 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v16[v35] + 48) + 56);
    v54 = swift_allocObject(&unk_1005417A0, 25, 7);
    *(_QWORD *)(v54 + 16) = v16;
    *(_BYTE *)(v54 + 24) = v34;
    v55 = v16;
    swift_retain(v53);
    sub_1000D421C(v52, (uint64_t)sub_100072EC8, v54);
    swift_release(v52);
    swift_release(v53);
    v56 = swift_release(v54);
    ((void (*)(char *, uint64_t, __n128))v50)(v13, v6, v56);
  }
}

id sub_100072EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10006E1A8(a1, a2, *(void **)(v2 + 16), *(_BYTE *)(v2 + 24));
}

void sub_100072ED4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t My;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  _QWORD *v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  NSObject **v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  _QWORD v32[4];

  v1 = sub_100053F2C((uint64_t *)&unk_1005D2A40);
  __chkstk_darwin(v1);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  My = type metadata accessor for Feature.FindMy(0);
  v32[2] = My;
  v32[3] = sub_100008000((unint64_t *)&qword_1005D9690, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.FindMy, (uint64_t)&protocol conformance descriptor for Feature.FindMy);
  v5 = sub_10003D370(&v31);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(My - 8) + 104))(v5, enum case for Feature.FindMy.fmNiftyCurve(_:), My);
  LOBYTE(My) = isFeatureEnabled(_:)(&v31);
  sub_100029574(&v31);
  if ((My & 1) != 0)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v6 = type metadata accessor for Logger(0);
    v7 = sub_100056D88(v6, (uint64_t)qword_1005F5748);
    v8 = v0;
    v9 = Logger.logObject.getter(v8);
    v10 = static os_log_type_t.default.getter(v9);
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc(12, -1);
      v12 = swift_slowAlloc(8, -1);
      v30 = v7;
      v31 = v8;
      v13 = (_QWORD *)v12;
      *(_DWORD *)v11 = 138412290;
      v14 = v8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, v32);
      *v13 = v8;

      _os_log_impl((void *)&_mh_execute_header, v9, v10, "FMMeViewController<%@>: update Stewie location confirmed", v11, 0xCu);
      v15 = sub_100053F2C((uint64_t *)&unk_1005D9680);
      swift_arrayDestroy(v13, 1, v15);
      swift_slowDealloc(v13, -1, -1);
      swift_slowDealloc(v11, -1, -1);
    }
    else
    {

      v9 = v8;
    }

    v16 = (*(_QWORD **)((char *)&v8->isa + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator))[6];
    v17 = swift_retain(v16);
    dispatch thunk of FMFManager.myInfo.getter(v17);
    swift_release(v16);
    v18 = type metadata accessor for FMFMyInfo(0);
    v19 = *(_QWORD *)(v18 - 8);
    v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v3, 1, v18);
    if ((_DWORD)v20 == 1)
    {
      sub_1000051EC((uint64_t)v3, (uint64_t *)&unk_1005D2A40);
      v21 = v8;
      v22 = Logger.logObject.getter(v21);
      v23 = static os_log_type_t.default.getter(v22);
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc(12, -1);
        v25 = (NSObject **)swift_slowAlloc(8, -1);
        *(_DWORD *)v24 = 138412290;
        v31 = v21;
        v26 = v21;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, v32);
        *v25 = v21;

        _os_log_impl((void *)&_mh_execute_header, v22, v23, "FMMeViewController<%@>: couldn't update Stewie: No deviceId", v24, 0xCu);
        v27 = sub_100053F2C((uint64_t *)&unk_1005D9680);
        swift_arrayDestroy(v25, 1, v27);
        swift_slowDealloc(v25, -1, -1);
        swift_slowDealloc(v24, -1, -1);

      }
      else
      {

      }
    }
    else
    {
      FMFMyInfo.deviceId.getter(v20);
      v29 = v28;
      (*(void (**)(char *, uint64_t))(v19 + 8))(v3, v18);
      swift_bridgeObjectRelease(v29);
      sub_100138A0C(v8);
    }
  }
}

uint64_t sub_1000732C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v6 = a4 + 48 * a1 + 32;
  v7 = a3 + 48 * v4;
  if (v6 >= v7 || v6 + 48 * v4 <= a3)
  {
    sub_100053F2C(&qword_1005D2B70);
    swift_arrayInitWithCopy(a3);
    return v7;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1000733D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v9 = *(_QWORD *)(sub_100053F2C(a5) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 72);
  v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
  v13 = v11 * v5;
  v14 = a3 + v13;
  v15 = v12 + v13;
  if (v12 >= v14 || v15 <= a3)
  {
    swift_arrayInitWithCopy(a3);
    return v14;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1000734E8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_11;
  }
  v6 = a4 + 24 * a1 + 32;
  v7 = a3 + 24 * v4;
  if (v6 >= v7 || v6 + 24 * v4 <= a3)
  {
    sub_100053F2C(&qword_1005D2BE0);
    swift_arrayInitWithCopy(a3);
    return v7;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_11:
  __break(1u);
  return result;
}

char *sub_1000735F4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if ((v4 & 0x8000000000000000) != 0)
    {
      result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1000736D8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 16 * a1 + 32;
    v7 = a3 + 16 * v4;
    if (v6 >= v7 || v6 + 16 * v4 <= a3)
    {
      sub_100053F2C(&qword_1005DB480);
      swift_arrayInitWithCopy(a3);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1000737E0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v6 = a4 + 16 * a1 + 32;
    v7 = a3 + 16 * v4;
    if (v6 >= v7 || v6 + 16 * v4 <= a3)
    {
      sub_100053F2C(&qword_1005D2BA8);
      swift_arrayInitWithCopy(a3);
      return v7;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

char *sub_1000738E8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 < 0)
    {
      result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = 16 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1000739D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    if (v5 < 0)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
      goto LABEL_9;
    }
    v7 = a4 + 8 * a1 + 32;
    v8 = a3 + 8 * v5;
    if (v7 >= v8 || v7 + 8 * v5 <= a3)
    {
      sub_100053F2C(a5);
      swift_arrayInitWithCopy(a3);
      return v8;
    }
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_9:
  __break(1u);
  return result;
}

id sub_100073AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_10006F97C(a1, a2, *(void **)(v2 + 16));
}

double sub_100073ADC(uint64_t a1)
{
  uint64_t v1;

  return sub_10006EED4(a1, *(_BYTE **)(v1 + 16));
}

uint64_t sub_100073AE4()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

double sub_100073B10()
{
  uint64_t v0;

  return sub_10006F190(*(_QWORD *)(v0 + 16), *(char **)(v0 + 24));
}

void sub_100073B18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10006F5F4(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_100073B20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1000B0D7C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_100073B28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_100073B88()
{
  type metadata accessor for URL(0);
  sub_10006FD18();
}

uint64_t sub_100073BB4(uint64_t a1)
{
  return swift_release(a1 & 0x7FFFFFFFFFFFFFFFLL);
}

void sub_100073BBC()
{
  uint64_t v0;

  sub_10006AD2C(*(char **)(v0 + 16));
}

uint64_t sub_100073BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C(&qword_1005D2C70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100073C0C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FMSelectionPendingAction(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100073C48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMSelectionPendingAction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100073C8C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_100073CB0(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_10006A8EC(a1, v1);
}

__n128 sub_100073D5C()
{
  uint64_t v0;
  id v1;
  __n128 result;

  if (qword_1005D1DD0 != -1)
    swift_once(&qword_1005D1DD0, sub_10005E180);
  v0 = qword_1005F5670;
  v1 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
  *(_QWORD *)&xmmword_1005D2CA0 = 0x4046000000000000;
  *((_QWORD *)&xmmword_1005D2CA0 + 1) = v0;
  xmmword_1005D2CB0 = xmmword_100481880;
  qword_1005D2CC0 = 0x4041000000000000;
  qword_1005D2CC8 = 2;
  qword_1005D2CD0 = (uint64_t)v1;
  unk_1005D2CD8 = xmmword_100481890;
  __asm { FMOV            V0.2D, #4.0 }
  unk_1005D2CE8 = result;
  return result;
}

uint64_t sub_100073E8C(uint64_t a1)
{
  _BYTE *v1;
  double v2;
  _BYTE *v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  CGFloat v11;
  char *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  void *v20;
  void *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  _QWORD *v30;
  void *v31;
  void *v32;
  _QWORD *v33;
  void *v34;
  void *v35;
  double v36;
  double v37;
  double v38;
  id v39;
  id v40;
  id v41;
  id v42;
  void *v43;
  char **v44;
  id v45;
  id v46;
  Swift::String v47;
  void *object;
  NSString v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  uint64_t v55;
  double v56;
  double v57;
  double v58;
  uint64_t v59;
  id v60;
  id v61;
  CGPathRef v62;
  id v63;
  double v64;
  double v65;
  double v66;
  double v67;
  uint64_t v68;
  uint64_t v70;
  CGImage *v71;
  CGImageRef v72;
  id v73;
  UIImage *v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  double v79;
  id v80;
  id v81;
  id v82;
  id v83;
  double v84;
  id v85;
  double v86;
  id v87;
  id v88;
  NSString v89;
  CGAffineTransform transform;
  CGRect v91;

  v3 = v1;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v5 = type metadata accessor for Logger(0);
  sub_100056D88(v5, (uint64_t)qword_1005F5748);
  v6 = swift_bridgeObjectRetain_n(a1, 2);
  v7 = Logger.logObject.getter(v6);
  LOBYTE(v8) = static os_log_type_t.default.getter(v7);
  v9 = (unint64_t)a1 >> 62;
  if (!os_log_type_enabled((os_log_t)v7, (os_log_type_t)v8))
  {

    swift_bridgeObjectRelease_n(a1, 2);
    goto LABEL_8;
  }
  v10 = swift_slowAlloc(12, -1);
  *(_DWORD *)v10 = 134217984;
  if (v9)
    goto LABEL_75;
  v11 = *(double *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease(a1);
    transform.a = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&transform, &transform.b);
    swift_bridgeObjectRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v7, (os_log_type_t)v8, "*x* FMClusteredAnnotation: update annotations %ld ", (uint8_t *)v10, 0xCu);
    swift_slowDealloc(v10, -1, -1);

LABEL_8:
    if (v9)
    {
      if (a1 < 0)
        v76 = a1;
      else
        v76 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v10 = _CocoaArrayWrapper.endIndex.getter(v76);
      swift_bridgeObjectRelease(a1);
    }
    else
    {
      v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v12 = &v3[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_style];
    v13 = 0.0;
    if (v10 >= 2)
      v13 = *((double *)v12 + 10);
    v14 = *(double *)v12;
    v15 = *((double *)v12 + 2);
    v87 = *(id *)&v3[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_balloonLayer];
    objc_msgSend(v87, "frame");
    v17 = v16;
    v18 = *((double *)v12 + 7);
    v19 = *((double *)v12 + 8);
    v20 = *(void **)&v3[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_firstImage];
    objc_msgSend(v20, "setHidden:", 1);
    v85 = *(id *)&v3[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_secondImage];
    objc_msgSend(v85, "setHidden:", 1);
    v83 = *(id *)&v3[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_thirdImage];
    objc_msgSend(v83, "setHidden:", 1);
    v21 = *(void **)&v3[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_additionalCount];
    objc_msgSend(v21, "setHidden:", 1);
    v8 = *(void **)&v3[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_additionalText];
    objc_msgSend(v8, "setHidden:", 1);
    if (v9)
    {
      if (a1 < 0)
        v25 = a1;
      else
        v25 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v7 = _CocoaArrayWrapper.endIndex.getter(v25);
      v82 = v21;
      if (!v7)
      {
LABEL_24:
        swift_bridgeObjectRelease(a1);
        goto LABEL_25;
      }
    }
    else
    {
      v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a1);
      v82 = v21;
      if (!v7)
        goto LABEL_24;
    }
    if ((a1 & 0xC000000000000001) != 0)
    {
      v22 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
      goto LABEL_17;
    }
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
      break;
    v22 = (char *)*(id *)(a1 + 32);
LABEL_17:
    v23 = v22;
    swift_bridgeObjectRelease(a1);
    v24 = *(_QWORD *)&v23[OBJC_IVAR____TtC6FindMy12FMAnnotation_fmClusterIdentifier];
    v7 = *(_QWORD *)&v23[OBJC_IVAR____TtC6FindMy12FMAnnotation_fmClusterIdentifier + 8];
    sub_1000758C4(v24, v7);

    if (v7 < 4 || (v3[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_puckHidden] & 1) != 0)
    {
      sub_1000758D8(v24, v7);
LABEL_25:
      v88 = *(id *)&v3[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_puckIcon];
      objc_msgSend(v88, "setHidden:", 1);
      v21 = *(void **)&v3[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_puckBackgroundLayer];
      objc_msgSend(v21, "setHidden:", 1);
      goto LABEL_26;
    }
    v81 = v8;
    v70 = OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_cachedHomeIcon;
    if (*(_QWORD *)&v3[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_cachedHomeIcon])
    {
      sub_1000758D8(v24, v7);
    }
    else
    {
      v89 = String._bridgeToObjectiveC()();
      v71 = (CGImage *)objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v89);

      sub_1000758D8(v24, v7);
      v72 = v71;
      if (v71)
      {
        v73 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
        v74 = sub_100342E94(v73);

        v72 = -[UIImage CGImage](v74, "CGImage");
      }
      v75 = *(void **)&v3[v70];
      *(_QWORD *)&v3[v70] = v72;

    }
    v7 = *(_QWORD *)&v3[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_puckIcon];
    objc_msgSend((id)v7, "setContents:", *(_QWORD *)&v3[v70]);
    v88 = (id)v7;
    objc_msgSend((id)v7, "setHidden:", 0);
    v21 = *(void **)&v3[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_puckBackgroundLayer];
    objc_msgSend(v21, "setHidden:", 0);
    v8 = v81;
LABEL_26:
    v2 = (v14 - v15) * 0.5;
    v17 = v2 + v17;
    if (v10 < 1)
    {
      v29 = 0;
      goto LABEL_43;
    }
    v9 = a1 & 0xC000000000000001;
    v80 = v8;
    if ((a1 & 0xC000000000000001) != 0)
      goto LABEL_73;
    if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v26 = *(id *)(a1 + 32);
      goto LABEL_30;
    }
    __break(1u);
LABEL_75:
    if (a1 < 0)
      v78 = a1;
    else
      v78 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v11 = COERCE_DOUBLE(_CocoaArrayWrapper.endIndex.getter(v78));
    swift_bridgeObjectRelease(a1);
  }
  __break(1u);
LABEL_73:
  v26 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
LABEL_30:
  v27 = v26;
  v13 = v2 + v13;
  v28 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v26) + 0x188))();

  v7 = (unint64_t)objc_msgSend(v28, "CGImage");
  objc_msgSend(v20, "setContents:", v7);

  objc_msgSend(v20, "setFrame:", v13, v17, v15, v15);
  objc_msgSend(v20, "setHidden:", 0);
  v29 = 0;
  if (v10 < 2)
    goto LABEL_43;
  if (v9)
  {
    v30 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(1, a1);
LABEL_34:
    v31 = v30;
    v32 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v30) + 0x188))();

    v7 = (unint64_t)objc_msgSend(v32, "CGImage");
    objc_msgSend(v85, "setContents:", v7);

    objc_msgSend(v85, "setFrame:", v15 + v13, v17, v15, v15);
    objc_msgSend(v85, "setHidden:", 0);
    v29 = 0;
    if ((unint64_t)v10 < 3)
      goto LABEL_43;
    if (v9)
      goto LABEL_81;
    if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10) < 3uLL)
      __break(1u);
    v33 = *(id *)(a1 + 48);
  }
  else
  {
    if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
    {
      v30 = *(id *)(a1 + 40);
      goto LABEL_34;
    }
    __break(1u);
LABEL_81:
    v33 = (_QWORD *)specialized _ArrayBuffer._getElementSlowPath(_:)(2, a1);
  }
  v34 = v33;
  v35 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v33) + 0x188))();

  v7 = (unint64_t)objc_msgSend(v35, "CGImage");
  objc_msgSend(v83, "setContents:", v7);

  v13 = v15 + v15 + v13;
  objc_msgSend(v83, "setFrame:", v13, v17, v15, v15);
  objc_msgSend(v83, "setHidden:", 0);
  v29 = 0;
  if ((unint64_t)v10 >= 4)
  {
    v36 = *((double *)v12 + 3);
    v29 = 1;
    objc_msgSend(v83, "setHidden:", 1);
    objc_msgSend(v87, "frame");
    v86 = (v14 - v36) * 0.5;
    objc_msgSend(v82, "setFrame:", v13, v86 + v37, v15, v15);
    v84 = v13;
    v38 = *((double *)v12 + 4);
    v79 = v36;
    v39 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithRoundedRect:cornerRadius:", 0.0, 0.0, v38, v36, v36 * 0.5);
    v40 = objc_msgSend(v39, "CGPath");

    objc_msgSend(v82, "setPath:", v40);
    v41 = objc_msgSend(v3, "traitCollection");
    v42 = objc_msgSend(v41, "userInterfaceStyle");

    v43 = (void *)objc_opt_self(UIColor);
    v44 = &selRef_systemGray4Color;
    if (v42 != (id)2)
      v44 = &selRef_systemGray3Color;
    v45 = objc_msgSend(v43, *v44);
    v46 = objc_msgSend(v45, "CGColor");

    objc_msgSend(v82, "setFillColor:", v46);
    objc_msgSend(v82, "setHidden:", 0);
    objc_msgSend(v80, "setHidden:", 0);
    *(_QWORD *)&transform.a = 43;
    transform.b = -1.7573882e159;
    v47._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter(&type metadata for Int, &protocol witness table for Int);
    object = v47._object;
    String.append(_:)(v47);
    swift_bridgeObjectRelease(object);
    v7 = *(_QWORD *)&transform.b;
    v49 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v7);
    objc_msgSend(v80, "setString:", v49);

    objc_msgSend(v80, "preferredFrameSize");
    v51 = v50;
    v53 = v52;
    v13 = v84 + (v38 - v50) * 0.5;
    objc_msgSend(v87, "frame");
    objc_msgSend(v80, "setFrame:", v13, (v79 - v53) * 0.5 + v86 + v54 + 1.0, v51, v53);
  }
LABEL_43:
  if (__OFSUB__(v10, 1))
  {
    __break(1u);
LABEL_67:
    if ((v7 & 0x8000000000000000) != 0)
      v77 = v7;
    else
      v77 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v59 = _CocoaArrayWrapper.endIndex.getter(v77);
    swift_bridgeObjectRelease(v7);
    goto LABEL_53;
  }
  v55 = (v10 - 1) & ~((v10 - 1) >> 63);
  if (*((_QWORD *)v12 + 5) < v55)
    v55 = *((_QWORD *)v12 + 5);
  v56 = v15 * (double)v55 + *((double *)v12 + 10) + *((double *)v12 + 10);
  v57 = v56 + -4.0;
  v58 = v56 + 0.0;
  if (v10 <= 1)
    v58 = 0.0;
  if ((_DWORD)v29)
    v13 = v57;
  else
    v13 = v58;
  v29 = OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_annotations;
  v7 = *(_QWORD *)&v3[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_annotations];
  if (v7 >> 62)
    goto LABEL_67;
  v59 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_53:
  if (v59 != v10)
  {
    v60 = sub_10038E428(v14 * 0.5, v14 * 0.125, v13);
    v61 = objc_msgSend(v60, "CGPath");
    objc_msgSend(v87, "setPath:", v61);

    objc_msgSend(v87, "setFrame:", 0.0, 0.0, v14 + v13, v14);
    transform.a = 1.0;
    transform.b = 0.0;
    transform.c = 0.0;
    transform.d = 1.0;
    transform.tx = 0.0;
    transform.ty = 0.0;
    v91.origin.x = 0.0;
    v91.origin.y = 0.0;
    v91.size.width = v14 + v13;
    v91.size.height = v14;
    v62 = CGPathCreateWithEllipseInRect(v91, &transform);
    objc_msgSend(v87, "setShadowPath:", v62);
    v63 = objc_msgSend(v3, "layer");
    objc_msgSend(v63, "setFrame:", 0.0, 0.0, v14 + v13, v14 + v14 + 45.0);

  }
  objc_msgSend(v21, "setFrame:", (v14 + v13) * 0.5 - v18 * 0.5, v19 + v17 + v18 + v18, v18, v18);
  objc_msgSend(v21, "frame");
  objc_msgSend(v88, "setFrame:", v64 + *((double *)v12 + 9), v65 + *((double *)v12 + 9), v66 - (*((double *)v12 + 9) + *((double *)v12 + 9)), v67 - (*((double *)v12 + 9) + *((double *)v12 + 9)));
  sub_100075270();
  v68 = *(_QWORD *)&v3[v29];
  *(_QWORD *)&v3[v29] = a1;
  swift_bridgeObjectRetain(a1);
  return swift_bridgeObjectRelease(v68);
}

id sub_100074B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  objc_class *ObjectType;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  NSString v28;
  id v29;
  id v30;
  objc_super v32;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType(v3);
  v8 = &v4[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_style];
  v9 = qword_1005D1B50;
  v10 = v4;
  if (v9 != -1)
    swift_once(&qword_1005D1B50, sub_100073D5C);
  v11 = qword_1005D2CC0;
  v12 = qword_1005D2CC8;
  v13 = (void *)qword_1005D2CD0;
  v14 = xmmword_1005D2CB0;
  v15 = unk_1005D2CD8;
  v16 = unk_1005D2CE8;
  *(_OWORD *)v8 = xmmword_1005D2CA0;
  *((_OWORD *)v8 + 1) = v14;
  *((_QWORD *)v8 + 4) = v11;
  *((_QWORD *)v8 + 5) = v12;
  *((_QWORD *)v8 + 6) = v13;
  *(_OWORD *)(v8 + 56) = v15;
  *(_OWORD *)(v8 + 72) = v16;
  v17 = OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_balloonLayer;
  v18 = objc_allocWithZone((Class)CAShapeLayer);
  v19 = v13;
  *(_QWORD *)&v10[v17] = objc_msgSend(v18, "init");
  v20 = OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_firstImage;
  *(_QWORD *)&v10[v20] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  v21 = OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_secondImage;
  *(_QWORD *)&v10[v21] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  v22 = OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_thirdImage;
  *(_QWORD *)&v10[v22] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  v23 = OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_additionalCount;
  *(_QWORD *)&v10[v23] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v24 = OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_additionalText;
  *(_QWORD *)&v10[v24] = objc_msgSend(objc_allocWithZone((Class)CATextLayer), "init");
  v25 = OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_puckBackgroundLayer;
  *(_QWORD *)&v10[v25] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v26 = OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_puckIcon;
  *(_QWORD *)&v10[v26] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  *(_QWORD *)&v10[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_cachedHomeIcon] = 0;
  *(_QWORD *)&v10[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_annotations] = _swiftEmptyArrayStorage;
  v10[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_puckHidden] = 0;

  if (a3)
  {
    v28 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v27 = swift_bridgeObjectRelease(a3).n128_u64[0];
  }
  else
  {
    v28 = 0;
  }
  v32.receiver = v10;
  v32.super_class = ObjectType;
  v29 = objc_msgSendSuper2(&v32, "initWithAnnotation:reuseIdentifier:", a1, v28, v27);

  v30 = v29;
  sub_100074D6C();
  sub_100075270();

  swift_unknownObjectRelease(a1);
  return v30;
}

void sub_100074D6C()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t inited;
  NSString *v7;
  unint64_t v8;
  id v9;
  id v10;
  double v11;
  double v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  double v18;
  char *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  double v34;
  uint64_t v35;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_balloonLayer];
  objc_msgSend(v2, "setAnchorPoint:", 0.5, 1.0);
  v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_additionalText];
  v4 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
  v5 = sub_100053F2C((uint64_t *)&unk_1005D7EA0);
  inited = swift_initStackObject(v5, &v35);
  *(_OWORD *)(inited + 16) = xmmword_100481740;
  *(_QWORD *)(inited + 32) = UIFontWeightTrait;
  *(UIFontWeight *)(inited + 40) = UIFontWeightMedium;
  v7 = UIFontWeightTrait;
  v8 = sub_10004907C(inited);
  v9 = sub_100049188(v8);

  objc_msgSend(v3, "setFont:", v9, swift_bridgeObjectRelease(v8).n128_f64[0]);
  objc_msgSend(v3, "setFontSize:", 15.0);
  v10 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v10, "scale");
  v12 = v11;

  objc_msgSend(v3, "setContentsScale:", v12);
  v13 = (void *)objc_opt_self(UIColor);
  v14 = objc_msgSend(v13, "whiteColor");
  v15 = objc_msgSend(v14, "CGColor");

  objc_msgSend(v3, "setForegroundColor:", v15);
  v16 = objc_msgSend(v13, "blackColor");
  v17 = objc_msgSend(v16, "CGColor");

  objc_msgSend(v2, "setShadowColor:", v17);
  objc_msgSend(v2, "setShadowOffset:", 0.0, 0.0);
  LODWORD(v18) = 1045220557;
  objc_msgSend(v2, "setShadowOpacity:", v18);
  v19 = &v1[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_style];
  objc_msgSend(v2, "setShadowRadius:", *(double *)&v1[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_style + 8]);
  v20 = objc_msgSend((id)objc_opt_self(UIBezierPath), "bezierPathWithOvalInRect:", 0.0, 0.0, *((double *)v19 + 7), *((double *)v19 + 7));
  v21 = *(void **)&v1[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_puckBackgroundLayer];
  v22 = objc_msgSend(v20, "CGPath");
  objc_msgSend(v21, "setPath:", v22);

  v23 = objc_msgSend(*((id *)v19 + 6), "CGColor");
  objc_msgSend(v21, "setFillColor:", v23);

  v24 = *(void **)&v1[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_puckIcon];
  objc_msgSend(v24, "setContentsGravity:", kCAGravityResizeAspectFill);
  v25 = objc_msgSend(v1, "layer");
  objc_msgSend(v25, "addSublayer:", v21);

  v26 = objc_msgSend(v1, "layer");
  objc_msgSend(v26, "addSublayer:", v24);

  v27 = objc_msgSend(v1, "layer");
  objc_msgSend(v27, "addSublayer:", v2);

  v28 = objc_msgSend(v1, "layer");
  objc_msgSend(v28, "addSublayer:", *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_firstImage]);

  v29 = objc_msgSend(v1, "layer");
  objc_msgSend(v29, "addSublayer:", *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_secondImage]);

  v30 = objc_msgSend(v1, "layer");
  objc_msgSend(v30, "addSublayer:", *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_thirdImage]);

  v31 = objc_msgSend(v1, "layer");
  objc_msgSend(v31, "addSublayer:", *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_additionalCount]);

  v32 = objc_msgSend(v1, "layer");
  objc_msgSend(v32, "addSublayer:", v3);

  v33 = objc_msgSend(v1, "layer");
  objc_msgSend(v33, "setAnchorPoint:", 0.5, 0.5);

  LODWORD(v34) = 1148846080;
  objc_msgSend(v1, "setDisplayPriority:", v34);

}

void sub_100075270()
{
  char *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  void *v5;
  id v6;
  id v7;

  v1 = objc_msgSend(v0, "traitCollection");
  v2 = objc_msgSend(v1, "userInterfaceStyle");

  if (v2 == (id)2)
  {
    v3 = objc_msgSend((id)objc_opt_self(UIColor), "systemGray3Color");
    v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_balloonLayer];
    v7 = objc_msgSend(v3, "CGColor");
    objc_msgSend(v4, "setFillColor:");

  }
  else
  {
    v5 = *(void **)&v0[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_balloonLayer];
    v6 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
    v7 = objc_msgSend(v6, "CGColor");

    objc_msgSend(v5, "setFillColor:", v7);
  }

}

void sub_100075418()
{
  void *v0;
  void *v1;
  objc_class *ObjectType;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[5];
  uint64_t v10;
  objc_super v11;
  objc_super v12;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType(v0);
  v12.receiver = v1;
  v12.super_class = ObjectType;
  objc_msgSendSuper2(&v12, "prepareForDisplay");
  v11.receiver = v1;
  v11.super_class = ObjectType;
  v3 = objc_msgSendSuper2(&v11, "annotation");
  if (v3)
  {
    v4 = v3;
    v5 = type metadata accessor for FMClusterAnnotation();
    v6 = swift_dynamicCastClass(v4, v5);
    if (v6)
    {
      v9[2] = __chkstk_darwin(v6);
      v7 = sub_100053F2C(&qword_1005E3BC0);
      OS_dispatch_queue.sync<A>(execute:)(&v10, sub_1000758EC, v9, v7);
      v8 = v10;
      sub_100073E8C(v10);
      swift_unknownObjectRelease(v4);
      swift_bridgeObjectRelease(v8);
    }
    else
    {
      swift_unknownObjectRelease(v4);
    }
  }
}

void destroy for FMClusteredAnnotationViewStyle(uint64_t a1)
{

}

uint64_t initializeWithCopy for FMClusteredAnnotationViewStyle(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  void *v4;
  id v5;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v4 = *(void **)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v5 = v4;
  return a1;
}

_QWORD *assignWithCopy for FMClusteredAnnotationViewStyle(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  v4 = (void *)a2[6];
  v5 = (void *)a1[6];
  a1[6] = v4;
  v6 = v4;

  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  return a1;
}

__n128 initializeWithTake for FMClusteredAnnotationViewStyle(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for FMClusteredAnnotationViewStyle(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  void *v6;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  v6 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;

  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMClusteredAnnotationViewStyle(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMClusteredAnnotationViewStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMClusteredAnnotationViewStyle()
{
  return &type metadata for FMClusteredAnnotationViewStyle;
}

uint64_t sub_1000758C4(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 4)
    return swift_bridgeObjectRetain(a2);
  return result;
}

uint64_t sub_1000758D8(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 4)
    return swift_bridgeObjectRelease(a2);
  return result;
}

uint64_t sub_1000758EC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_100353464(*(_QWORD *)(v1 + 16), a1);
}

void sub_100075904(uint64_t a1)
{
  void *v1;
  void *v2;
  objc_class *ObjectType;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[5];
  uint64_t v12;
  objc_super v13;
  objc_super v14;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType(v2);
  v14.receiver = v2;
  v14.super_class = ObjectType;
  objc_msgSendSuper2(&v14, "setAnnotation:", a1);
  v13.receiver = v2;
  v13.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v13, "annotation");
  if (v5)
  {
    v6 = v5;
    v7 = type metadata accessor for FMClusterAnnotation();
    v8 = swift_dynamicCastClass(v6, v7);
    if (v8)
    {
      v11[2] = __chkstk_darwin(v8);
      v9 = sub_100053F2C(&qword_1005E3BC0);
      OS_dispatch_queue.sync<A>(execute:)(&v12, sub_100075C14, v11, v9);
      v10 = v12;
      sub_100073E8C(v12);
      swift_unknownObjectRelease(v6);
      swift_bridgeObjectRelease(v10);
    }
    else
    {
      swift_unknownObjectRelease(v6);
    }
  }
}

void sub_100075A24()
{
  _BYTE *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_style;
  if (qword_1005D1B50 != -1)
    swift_once(&qword_1005D1B50, sub_100073D5C);
  v2 = &v0[v1];
  v3 = qword_1005D2CC0;
  v4 = qword_1005D2CC8;
  v5 = (void *)qword_1005D2CD0;
  v6 = xmmword_1005D2CB0;
  v7 = unk_1005D2CD8;
  v8 = unk_1005D2CE8;
  *(_OWORD *)v2 = xmmword_1005D2CA0;
  *((_OWORD *)v2 + 1) = v6;
  *((_QWORD *)v2 + 4) = v3;
  *((_QWORD *)v2 + 5) = v4;
  *((_QWORD *)v2 + 6) = v5;
  *(_OWORD *)(v2 + 56) = v7;
  *(_OWORD *)(v2 + 72) = v8;
  v9 = OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_balloonLayer;
  v10 = objc_allocWithZone((Class)CAShapeLayer);
  v11 = v5;
  *(_QWORD *)&v0[v9] = objc_msgSend(v10, "init");
  v12 = OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_firstImage;
  *(_QWORD *)&v0[v12] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  v13 = OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_secondImage;
  *(_QWORD *)&v0[v13] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  v14 = OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_thirdImage;
  *(_QWORD *)&v0[v14] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  v15 = OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_additionalCount;
  *(_QWORD *)&v0[v15] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v16 = OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_additionalText;
  *(_QWORD *)&v0[v16] = objc_msgSend(objc_allocWithZone((Class)CATextLayer), "init");
  v17 = OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_puckBackgroundLayer;
  *(_QWORD *)&v0[v17] = objc_msgSend(objc_allocWithZone((Class)CAShapeLayer), "init");
  v18 = OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_puckIcon;
  *(_QWORD *)&v0[v18] = objc_msgSend(objc_allocWithZone((Class)CALayer), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_cachedHomeIcon] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_annotations] = _swiftEmptyArrayStorage;
  v0[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_puckHidden] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMClusteredAnnotationView.swift", 38, 2, 83, 0);
  __break(1u);
}

uint64_t sub_100075C14@<X0>(_QWORD *a1@<X8>)
{
  return sub_1000758EC(a1);
}

uint64_t UITabBarItem.largeContentTitle.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, "title");
  if (!v1)
    return 0;
  v2 = v1;
  v3 = static String._unconditionallyBridgeFromObjectiveC(_:)(v1);

  return v3;
}

id UITabBarItem.largeContentImage.getter()
{
  void *v0;

  return objc_msgSend(v0, "image");
}

CGFloat UITabBarItem.largeContentImageInsets.getter()
{
  return UIEdgeInsetsZero.top;
}

double sub_100075D8C()
{
  void *v0;
  NSString *v1;
  id v2;
  id v3;
  double result;

  v0 = (void *)objc_opt_self(UIColor);
  v1 = UIFontTextStyleBody;
  v2 = objc_msgSend(v0, "labelColor");
  v3 = objc_msgSend(v2, "colorWithAlphaComponent:", 0.5);

  qword_1005F4CB0 = (uint64_t)v1;
  qword_1005F4CB8 = (uint64_t)v1;
  qword_1005F4CC0 = (uint64_t)v3;
  *(_OWORD *)&qword_1005F4CC8 = xmmword_100481910;
  unk_1005F4CD8 = xmmword_100481920;
  result = 0.0;
  unk_1005F4CE8 = xmmword_100481930;
  return result;
}

void sub_100075E44()
{
  char *v0;
  char *v1;
  uint64_t v2;
  double v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  double v16;
  id v17;
  id v18;
  id v19;
  double v20;
  id v21;
  id v22;
  double v23;
  double v24;
  id v25;
  double v26;
  double v27;
  id v28;
  uint64_t v29;
  Class isa;
  id v31;

  v1 = v0;
  if (qword_1005D1B58 != -1)
    swift_once(&qword_1005D1B58, sub_100075D8C);
  v2 = qword_1005F4CB0;
  v3 = *(double *)&qword_1005F4CD0;
  v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMy26FMPhoneNumberTableViewCell_textField];
  v5 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy26FMPhoneNumberTableViewCell_textField], "superview");

  if (!v5)
  {
    v6 = (void *)objc_opt_self(UIFont);
    v7 = objc_msgSend(v6, "preferredFontForTextStyle:", v2);
    objc_msgSend(v4, "setFont:", v7);

    objc_msgSend(v4, "setAdjustsFontForContentSizeCategory:", 1);
    objc_msgSend(v4, "setAutocorrectionType:", 2);
    objc_msgSend(v4, "setTextContentType:", UITextContentTypeTelephoneNumber);
    objc_msgSend(v4, "setKeyboardType:", 5);
    objc_msgSend(v4, "setAutocorrectionType:", 1);
    objc_msgSend(v4, "setTextAlignment:", 4);
    objc_msgSend(v4, "setClearButtonMode:", 1);
    objc_msgSend(v4, "setDelegate:", v1);
    objc_msgSend(v4, "addTarget:action:forControlEvents:", v1, "textFieldDidChangeWithSender:", 0x20000);
    v8 = objc_msgSend(v1, "contentView");
    objc_msgSend(v8, "addSubview:", v4);

    objc_msgSend(v4, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v31 = (id)objc_opt_self(NSLayoutConstraint);
    v9 = sub_100053F2C(&qword_1005D2F10);
    v10 = swift_allocObject(v9, 64, 7);
    *(_OWORD *)(v10 + 16) = xmmword_100481720;
    v11 = objc_msgSend(v4, "centerYAnchor");
    v12 = objc_msgSend(v1, "centerYAnchor");
    v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

    *(_QWORD *)(v10 + 32) = v13;
    v14 = objc_msgSend(v4, "leadingAnchor");
    v15 = objc_msgSend(v1, "leadingAnchor");
    objc_msgSend(v1, "layoutMargins");
    v17 = objc_msgSend(v14, "constraintEqualToAnchor:constant:", v15, v16);

    *(_QWORD *)(v10 + 40) = v17;
    v18 = objc_msgSend(v4, "trailingAnchor");
    v19 = objc_msgSend(v1, "trailingAnchor");
    objc_msgSend(v1, "layoutMargins");
    v21 = objc_msgSend(v18, "constraintEqualToAnchor:constant:", v19, -v20);

    *(_QWORD *)(v10 + 48) = v21;
    v22 = objc_msgSend(v4, "heightAnchor");
    v23 = *(double *)&qword_1005F4CC8;
    v24 = *(double *)&qword_1005F4CD0;
    v25 = objc_msgSend(v6, "preferredFontForTextStyle:", qword_1005F4CB0);
    objc_msgSend(v25, "lineHeight");
    v27 = v26;

    v28 = objc_msgSend(v22, "constraintEqualToConstant:", v24 + v24 + v23 * v27 - (v3 + v3));
    *(_QWORD *)(v10 + 56) = v28;
    specialized Array._endMutation()(v29);
    sub_100048C64();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v31, "activateConstraints:", isa, swift_bridgeObjectRelease(v10).n128_f64[0]);

  }
  sub_100076298();
}

void sub_100076298()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  double v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  double v11;
  double v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  double v26;
  double v27;
  id v28;
  double v29;
  double v30;
  id v31;
  uint64_t v32;
  Class isa;

  if (qword_1005D1B58 != -1)
    swift_once(&qword_1005D1B58, sub_100075D8C);
  v2 = qword_1005F4CB8;
  v1 = qword_1005F4CC0;
  v3 = *(double *)&qword_1005F4CD0;
  v4 = unk_1005F4CD8;
  v5 = *(double *)&qword_1005F4CE0;
  v6 = unk_1005F4CE8;
  v7 = *(void **)&v0[OBJC_IVAR____TtC6FindMy26FMPhoneNumberTableViewCell_placeHolderLabel];
  v8 = objc_msgSend(v7, "superview");

  if (!v8)
  {
    v9 = (void *)objc_opt_self(UIFont);
    v10 = objc_msgSend(v9, "preferredFontForTextStyle:", v2);
    objc_msgSend(v7, "setFont:", v10);

    objc_msgSend(v7, "setNumberOfLines:", 0);
    objc_msgSend(v7, "setTextColor:", v1);
    objc_msgSend(v7, "setTextAlignment:", 4);
    objc_msgSend(v7, "setAdjustsFontForContentSizeCategory:", 1);
    objc_msgSend(v0, "addSubview:", v7);
    objc_msgSend(v7, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v11 = -0.0;
    if (v0[OBJC_IVAR____TtC6FindMy26FMPhoneNumberTableViewCell_textViewIsEnabled])
      v11 = v6;
    v12 = v5 + v11;
    v13 = (void *)objc_opt_self(NSLayoutConstraint);
    v14 = sub_100053F2C(&qword_1005D2F10);
    v15 = swift_allocObject(v14, 64, 7);
    *(_OWORD *)(v15 + 16) = xmmword_100481720;
    v16 = objc_msgSend(v7, "centerYAnchor");
    v17 = objc_msgSend(v0, "centerYAnchor");
    v18 = objc_msgSend(v16, "constraintEqualToAnchor:", v17);

    *(_QWORD *)(v15 + 32) = v18;
    v19 = objc_msgSend(v7, "leadingAnchor");
    v20 = objc_msgSend(v0, "leadingAnchor");
    v21 = objc_msgSend(v19, "constraintEqualToAnchor:constant:", v20, v12);

    *(_QWORD *)(v15 + 40) = v21;
    v22 = objc_msgSend(v7, "trailingAnchor");
    v23 = objc_msgSend(v0, "trailingAnchor");
    v24 = objc_msgSend(v22, "constraintEqualToAnchor:constant:", v23, -v4);

    *(_QWORD *)(v15 + 48) = v24;
    v25 = objc_msgSend(v7, "heightAnchor");
    v26 = *(double *)&qword_1005F4CC8;
    v27 = *(double *)&qword_1005F4CD0;
    v28 = objc_msgSend(v9, "preferredFontForTextStyle:", qword_1005F4CB0);
    objc_msgSend(v28, "lineHeight");
    v30 = v29;

    v31 = objc_msgSend(v25, "constraintEqualToConstant:", v27 + v27 + v26 * v30 - (v3 + v3));
    *(_QWORD *)(v15 + 56) = v31;
    specialized Array._endMutation()(v32);
    sub_100048C64();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v13, "activateConstraints:", isa, swift_bridgeObjectRelease(v15).n128_f64[0]);

  }
}

id sub_10007668C()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC6FindMy26FMPhoneNumberTableViewCell_textViewIsEnabled) == 1)
    v1 = objc_msgSend(*(id *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy26FMPhoneNumberTableViewCell_textView)+ OBJC_IVAR____TtC6FindMy17FMMessageTextView_textView), "text");
  else
    v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy26FMPhoneNumberTableViewCell_textField), "text");
  v2 = v1;
  v3 = v2;
  if (v2)
  {
    v4 = static String._unconditionallyBridgeFromObjectiveC(_:)(v2);
    v6 = v5;

    v3 = (void *)String.characterCount.getter(v4, v6);
    swift_bridgeObjectRelease(v6);
  }
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy26FMPhoneNumberTableViewCell_placeHolderLabel), "setHidden:", (uint64_t)v3 > 0);
}

void sub_10007675C()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  id v5;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC6FindMy26FMPhoneNumberTableViewCell_textFieldIsEnabled) == 1)
  {
    v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                               + OBJC_IVAR____TtC6FindMy26FMPhoneNumberTableViewCell_textField), "superview"));

    if (!v1)
      sub_100075E44();
  }
  else
  {
    v2 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy26FMPhoneNumberTableViewCell_placeHolderLabel);
    v3 = objc_msgSend(v2, "superview");

    if (v3)
      objc_msgSend(v2, "removeFromSuperview");
    v4 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy26FMPhoneNumberTableViewCell_textField);
    v5 = objc_msgSend(v4, "superview");

    if (v5)
    {
      objc_msgSend(v4, "resignFirstResponder");
      objc_msgSend(v4, "removeFromSuperview");
    }
  }
}

uint64_t sub_100076974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  uint64_t Strong;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  char v26;
  uint64_t v28;

  v6 = v5;
  v12 = type metadata accessor for CharacterSet(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  static CharacterSet.decimalDigits.getter(v14);
  CharacterSet.insert(_:)(43);
  swift_bridgeObjectRetain(a5);
  v17 = sub_100373FE0(a4, a5, (uint64_t)v16);
  v19 = v18;
  v20 = swift_bridgeObjectRelease(a5);
  (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v16, v12, v20);
  v21 = v6 + OBJC_IVAR____TtC6FindMy26FMPhoneNumberTableViewCell_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v6 + OBJC_IVAR____TtC6FindMy26FMPhoneNumberTableViewCell_delegate);
  if (Strong)
  {
    v23 = Strong;
    v24 = *(_QWORD *)(v21 + 8);
    ObjectType = swift_getObjectType(Strong);
    v26 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 16))(a1, a2, a3, v17, v19, ObjectType, v24);
    swift_unknownObjectRelease(v23);
  }
  else
  {
    v26 = 0;
  }
  swift_bridgeObjectRelease(v19);
  sub_10007668C();
  return v26 & 1;
}

id sub_100076D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v6;
  id v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  NSString v14;
  id v15;
  objc_super v17;

  v6 = OBJC_IVAR____TtC6FindMy26FMPhoneNumberTableViewCell_textField;
  v7 = objc_allocWithZone((Class)UITextField);
  v8 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v7, "init");
  v9 = OBJC_IVAR____TtC6FindMy26FMPhoneNumberTableViewCell_textView;
  *(_QWORD *)&v8[v9] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMMessageTextView()), "init");
  v10 = OBJC_IVAR____TtC6FindMy26FMPhoneNumberTableViewCell_placeHolderLabel;
  *(_QWORD *)&v8[v10] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v11 = &v8[OBJC_IVAR____TtC6FindMy26FMPhoneNumberTableViewCell_delegate];
  *((_QWORD *)v11 + 1) = 0;
  swift_unknownObjectWeakInit(v11);
  swift_unknownObjectWeakInit(&v8[OBJC_IVAR____TtC6FindMy26FMPhoneNumberTableViewCell_textViewDelegate]);
  v8[OBJC_IVAR____TtC6FindMy26FMPhoneNumberTableViewCell_textFieldIsEnabled] = 0;
  v8[OBJC_IVAR____TtC6FindMy26FMPhoneNumberTableViewCell_textViewIsEnabled] = 0;
  v12 = &v8[OBJC_IVAR____TtC6FindMy26FMPhoneNumberTableViewCell_initialPhoneNumber];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  v13 = &v8[OBJC_IVAR____TtC6FindMy26FMPhoneNumberTableViewCell_placeHolderText];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;

  if (a3)
  {
    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v14 = 0;
  }
  v17.receiver = v8;
  v17.super_class = (Class)type metadata accessor for FMPhoneNumberTableViewCell();
  v15 = objc_msgSendSuper2(&v17, "initWithStyle:reuseIdentifier:", a1, v14);

  return v15;
}

id sub_100076EC8(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  id v11;
  objc_super v13;

  v3 = OBJC_IVAR____TtC6FindMy26FMPhoneNumberTableViewCell_textField;
  v4 = objc_allocWithZone((Class)UITextField);
  v5 = v1;
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtC6FindMy26FMPhoneNumberTableViewCell_textView;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMMessageTextView()), "init");
  v7 = OBJC_IVAR____TtC6FindMy26FMPhoneNumberTableViewCell_placeHolderLabel;
  *(_QWORD *)&v5[v7] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v8 = &v5[OBJC_IVAR____TtC6FindMy26FMPhoneNumberTableViewCell_delegate];
  *((_QWORD *)v8 + 1) = 0;
  swift_unknownObjectWeakInit(v8);
  swift_unknownObjectWeakInit(&v5[OBJC_IVAR____TtC6FindMy26FMPhoneNumberTableViewCell_textViewDelegate]);
  v5[OBJC_IVAR____TtC6FindMy26FMPhoneNumberTableViewCell_textFieldIsEnabled] = 0;
  v5[OBJC_IVAR____TtC6FindMy26FMPhoneNumberTableViewCell_textViewIsEnabled] = 0;
  v9 = &v5[OBJC_IVAR____TtC6FindMy26FMPhoneNumberTableViewCell_initialPhoneNumber];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v10 = &v5[OBJC_IVAR____TtC6FindMy26FMPhoneNumberTableViewCell_placeHolderText];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;

  v13.receiver = v5;
  v13.super_class = (Class)type metadata accessor for FMPhoneNumberTableViewCell();
  v11 = objc_msgSendSuper2(&v13, "initWithCoder:", a1);

  return v11;
}

double sub_100077024()
{
  uint64_t v0;
  double result;

  sub_10005E190(v0 + OBJC_IVAR____TtC6FindMy26FMPhoneNumberTableViewCell_delegate);
  sub_10005E190(v0 + OBJC_IVAR____TtC6FindMy26FMPhoneNumberTableViewCell_textViewDelegate);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy26FMPhoneNumberTableViewCell_initialPhoneNumber + 8));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0
                                                           + OBJC_IVAR____TtC6FindMy26FMPhoneNumberTableViewCell_placeHolderText
                                                           + 8)).n128_u64[0];
  return result;
}

id sub_1000770A8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPhoneNumberTableViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMPhoneNumberTableViewCell()
{
  return objc_opt_self(_TtC6FindMy26FMPhoneNumberTableViewCell);
}

double sub_100077188()
{
  uint64_t v0;
  NSString *v1;
  double result;

  v0 = qword_1005D1E80;
  v1 = UIFontTextStyleFootnote;
  if (v0 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  result = *(double *)&qword_1005F5978;
  qword_1005D2F18 = (uint64_t)v1;
  unk_1005D2F20 = xmmword_1004819B0;
  qword_1005D2F30 = qword_1005F5978;
  qword_1005D2F38 = 0x4090000000000000;
  return result;
}

void sub_100077254()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  Swift::String v21;
  Swift::String v22;
  void *object;
  NSString v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  void (*v43)(char *, uint64_t);
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  NSString v57;
  double v58;
  id v59;
  const char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char v67;
  void *v68;
  void *v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  NSString v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  void *v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  NSString v96;
  double v97;
  id v98;
  char *v99;
  uint64_t v100;
  char *v101;
  void (*v102)(uint64_t, uint64_t);
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  id v110;
  SEL *v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  void *v115;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  void *v119;
  uint64_t v120;
  uint64_t v121;
  Swift::String v122;
  uint64_t v123;
  void *v124;
  id v125;
  Swift::String v126;
  Swift::String v127;
  void *v128;
  char *v129;
  NSString v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  id v137;
  void *v138;
  id v139;
  id v140;
  id v141;
  void *v142;
  uint64_t v143;
  uint64_t inited;
  uint64_t v145;
  NSString *v146;
  id v147;
  NSString *v148;
  id v149;
  unint64_t v150;
  Class isa;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t (*v159)(char *, uint64_t);
  uint64_t (*v160)(char *, uint64_t, uint64_t);
  id v161;
  id v162;
  id v163;
  uint64_t v164;
  uint64_t v165;
  char v166[112];
  unint64_t v167;
  unint64_t v168;
  uint64_t v169;
  char v170[8];
  Swift::String v171;
  Swift::String v172;

  v1 = v0;
  v2 = type metadata accessor for FMIPFeatures(0);
  v165 = *(_QWORD *)(v2 - 8);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v152 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v152 - v6;
  v8 = sub_100053F2C(&qword_1005D6710);
  v9 = __chkstk_darwin(v8);
  v156 = (uint64_t)&v152 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v158 = (char *)&v152 - v12;
  v13 = __chkstk_darwin(v11);
  v157 = (char *)&v152 - v14;
  v15 = __chkstk_darwin(v13);
  v164 = (uint64_t)&v152 - v16;
  __chkstk_darwin(v15);
  v18 = (char *)&v152 - v17;
  sub_100212108();
  v19 = objc_msgSend(v0, "headerView");
  v167 = 0;
  v168 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v168);
  v163 = (id)objc_opt_self(NSBundle);
  v20 = objc_msgSend(v163, "mainBundle");
  v21._countAndFlagsBits = 0xD00000000000001ALL;
  v171._countAndFlagsBits = 0xD00000000000002CLL;
  v171._object = (void *)0x80000001004A5C50;
  v21._object = (void *)0x80000001004A5C30;
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)v20, v22, v171)._object;

  v24 = String._bridgeToObjectiveC()();
  objc_msgSend(v19, "setTitle:", v24, swift_bridgeObjectRelease(object).n128_f64[0]);

  v25 = OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_footerLabel;
  v26 = *(void **)&v1[OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_footerLabel];
  v27 = (void *)objc_opt_self(UIFont);
  v28 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_style];
  v29 = v26;
  v161 = v27;
  v30 = objc_msgSend(v27, "preferredFontForTextStyle:", v28);
  objc_msgSend(v29, "setFont:", v30);

  objc_msgSend(*(id *)&v1[v25], "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(*(id *)&v1[v25], "setNumberOfLines:", 0);
  v31 = *(void **)&v1[v25];
  v32 = (void *)objc_opt_self(UIColor);
  v33 = v31;
  v162 = v32;
  v34 = objc_msgSend(v32, "secondaryLabelColor");
  objc_msgSend(v33, "setTextColor:", v34);

  objc_msgSend(*(id *)&v1[v25], "setTextAlignment:", 4);
  objc_msgSend(*(id *)&v1[v25], "setAdjustsFontForContentSizeCategory:", 1);
  v35 = objc_msgSend(v1, "contentView");
  objc_msgSend(v35, "addSubview:", *(_QWORD *)&v1[v25]);

  v36 = (uint64_t)&v1[OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_device];
  swift_beginAccess(&v1[OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_device], v170, 0, 0);
  sub_100007464(v36, (uint64_t)v18, &qword_1005D6710);
  v37 = type metadata accessor for FMIPDevice(0);
  v38 = *(_QWORD *)(v37 - 8);
  v160 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
  v39 = v160(v18, 1, v37);
  if ((_DWORD)v39 == 1)
  {
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  FMIPDevice.features.getter(v39);
  v159 = *(uint64_t (**)(char *, uint64_t))(v38 + 8);
  v40 = v159(v18, v37);
  static FMIPFeatures.isKeypadEnabled.getter(v40);
  v41 = sub_100008000((unint64_t *)&qword_1005D72F0, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPFeatures, (uint64_t)&protocol conformance descriptor for FMIPFeatures);
  v42 = dispatch thunk of SetAlgebra.isSuperset(of:)(v5, v2, v41);
  v43 = *(void (**)(char *, uint64_t))(v165 + 8);
  v43(v5, v2);
  v43(v7, v2);
  if ((v1[OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_mode + 4] & 1) != 0)
    return;
  v44 = *(_DWORD *)&v1[OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_mode];
  switch(v44)
  {
    case 4:
      v71 = objc_msgSend(v1, "headerView");
      v72 = v164;
      sub_100007464(v36, v164, &qword_1005D6710);
      v73 = sub_1001DE71C(0xD000000000000026, 0x80000001004A5CA0, v72);
      v75 = v74;
      v77 = v76;
      v79 = v78;
      swift_bridgeObjectRetain(v78);
      sub_1001DDC8C(v73, v75, v77, v79, 0, 0);
      v81 = v80;
      swift_bridgeObjectRelease_n(v79, 2);
      swift_bridgeObjectRelease(v75);
      sub_1000051EC(v72, &qword_1005D6710);
      v82 = String._bridgeToObjectiveC()();
      objc_msgSend(v71, "setDetailText:", v82, swift_bridgeObjectRelease(v81).n128_f64[0]);
      v83 = 0xD000000000000012;
      v68 = (void *)0x80000001004A5C80;
      v84 = 1;
LABEL_21:
      v110 = v163;
      v111 = (SEL *)&unk_1005AA000;

      goto LABEL_22;
    case 2:
      v153 = v41;
      v155 = v5;
      v152 = v7;
      v154 = v2;
      v157 = (char *)objc_msgSend(v1, "headerView");
      v85 = v164;
      sub_100007464(v36, v164, &qword_1005D6710);
      v86 = sub_1001DE71C(0xD000000000000025, 0x80000001004A5D10, v85);
      v88 = v87;
      v89 = v42;
      v91 = v90;
      v165 = v36;
      v93 = v92;
      swift_bridgeObjectRetain(v92);
      sub_1001DDC8C(v86, v88, v91, v93, 0, 0);
      v95 = v94;
      swift_bridgeObjectRelease_n(v93, 2);
      swift_bridgeObjectRelease(v88);
      sub_1000051EC(v85, &qword_1005D6710);
      v96 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v97 = swift_bridgeObjectRelease(v95).n128_u64[0];
      v98 = v157;
      objc_msgSend(v157, "setDetailText:", v96, v97);

      v60 = "FMLocalizedString ";
      if ((v89 & 1) == 0)
      {
        v99 = v158;
        sub_100007464(v165, (uint64_t)v158, &qword_1005D6710);
        v100 = v160(v99, 1, v37);
        if ((_DWORD)v100 == 1)
        {
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
        v101 = v152;
        FMIPDevice.features.getter(v100);
        v102 = (void (*)(uint64_t, uint64_t))v159;
        v103 = v159(v99, v37);
        v104 = v155;
        static FMIPFeatures.isEraseAfterLockSupported.getter(v103);
        v105 = v154;
        v106 = dispatch thunk of SetAlgebra.isSuperset(of:)(v104, v154, v153);
        v43(v104, v105);
        v43(v101, v105);
        if ((v106 & 1) == 0)
        {
          v107 = v165;
          v108 = v156;
          sub_100007464(v165, v156, &qword_1005D6710);
          if (v160((char *)v108, 1, v37) != 1)
          {
            v109 = FMIPDevice.isConsideredAccessory.getter();
            v102(v108, v37);
            v68 = (void *)0x80000001004A5CF0;
            if ((v109 & 1) == 0)
            {
              v69 = *(void **)&v1[v25];
              v70 = v107;
              goto LABEL_20;
            }
            goto LABEL_17;
          }
LABEL_32:
          __break(1u);
          return;
        }
      }
      break;
    case 1:
      v153 = v41;
      v155 = v5;
      v152 = v7;
      v154 = v2;
      v158 = (char *)objc_msgSend(v1, "headerView");
      v45 = v164;
      sub_100007464(v36, v164, &qword_1005D6710);
      v46 = sub_1001DE71C(0xD000000000000025, 0x80000001004A5D80, v45);
      v165 = v36;
      v47 = v46;
      v49 = v48;
      v50 = v42;
      v52 = v51;
      v54 = v53;
      swift_bridgeObjectRetain(v53);
      sub_1001DDC8C(v47, v49, v52, v54, 0, 0);
      v56 = v55;
      swift_bridgeObjectRelease_n(v54, 2);
      swift_bridgeObjectRelease(v49);
      sub_1000051EC(v45, &qword_1005D6710);
      v57 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v58 = swift_bridgeObjectRelease(v56).n128_u64[0];
      v59 = v158;
      objc_msgSend(v158, "setDetailText:", v57, v58);

      v60 = "DEVICE_ENTER_MESSAGE_FOOTNOTE";
      if ((v50 & 1) == 0)
      {
        v61 = v157;
        sub_100007464(v165, (uint64_t)v157, &qword_1005D6710);
        v62 = v160(v61, 1, v37);
        if ((_DWORD)v62 != 1)
        {
          v63 = v152;
          FMIPDevice.features.getter(v62);
          v64 = v159(v61, v37);
          v65 = v155;
          static FMIPFeatures.isEraseAfterLockSupported.getter(v64);
          v66 = v154;
          v67 = dispatch thunk of SetAlgebra.isSuperset(of:)(v65, v154, v153);
          v43(v65, v66);
          v43(v63, v66);
          v68 = (void *)0x80000001004A5D60;
          if ((v67 & 1) == 0)
          {
            v69 = *(void **)&v1[v25];
            v70 = v165;
LABEL_20:
            v112 = v164;
            sub_100007464(v70, v164, &qword_1005D6710);
            v71 = v69;
            v113 = sub_1001DE71C(0xD00000000000001DLL, 0x80000001004A5D40, v112);
            v115 = v114;
            v117 = v116;
            v119 = v118;
            swift_bridgeObjectRetain(v118);
            sub_1001DDC8C(v113, v115, v117, v119, 0, 0);
            v121 = v120;
            swift_bridgeObjectRelease_n(v119, 2);
            swift_bridgeObjectRelease(v115);
            sub_1000051EC(v112, &qword_1005D6710);
            v82 = String._bridgeToObjectiveC()();
            objc_msgSend(v71, "setText:", v82, swift_bridgeObjectRelease(v121).n128_f64[0]);
            v84 = 0;
            v83 = 0xD000000000000011;
            goto LABEL_21;
          }
LABEL_17:
          v84 = 0;
          goto LABEL_18;
        }
        goto LABEL_30;
      }
      break;
    default:
      return;
  }
  v84 = 0;
  v68 = (void *)((unint64_t)v60 | 0x8000000000000000);
LABEL_18:
  v83 = 0xD000000000000011;
  v110 = v163;
  v111 = (SEL *)&unk_1005AA000;
LABEL_22:
  v167 = 0;
  v168 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v168);
  v167 = 0xD000000000000012;
  v168 = 0x80000001004A5CD0;
  v122._countAndFlagsBits = v83;
  v122._object = v68;
  String.append(_:)(v122);
  v123 = v167;
  v124 = (void *)v168;
  v125 = objc_msgSend(v110, v111[208]);
  v172._object = v124;
  v126._countAndFlagsBits = v83;
  v126._object = v68;
  v127._countAndFlagsBits = 0;
  v127._object = (void *)0xE000000000000000;
  v172._countAndFlagsBits = v123;
  v128 = NSLocalizedString(_:tableName:bundle:value:comment:)(v126, (Swift::String_optional)0, (NSBundle)v125, v127, v172)._object;
  swift_bridgeObjectRelease(v68);
  swift_bridgeObjectRelease(v124);

  v169 = type metadata accessor for FMDeviceEditableMessageViewController(0);
  v167 = (unint64_t)v1;
  v129 = v1;
  v130 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v128);
  v131 = v169;
  if (v169)
  {
    v132 = sub_100029550(&v167, v169);
    v133 = *(_QWORD *)(v131 - 8);
    __chkstk_darwin(v132);
    v135 = (char *)&v152 - ((v134 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v133 + 16))(v135);
    v136 = _bridgeAnythingToObjectiveC<A>(_:)(v135, v131);
    (*(void (**)(char *, uint64_t))(v133 + 8))(v135, v131);
    sub_100029574(&v167);
  }
  else
  {
    v136 = 0;
  }
  v137 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithTitle:style:target:action:", v130, 0, v136, "completeActionWithSender:");

  swift_unknownObjectRelease(v136);
  v138 = *(void **)&v129[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_rightBarButtonItem];
  *(_QWORD *)&v129[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_rightBarButtonItem] = v137;
  v139 = v137;

  v140 = objc_msgSend(v129, "navigationItem");
  objc_msgSend(v140, "setRightBarButtonItem:", v139);

  if (v84)
  {
    v141 = objc_msgSend(v161, "systemFontOfSize:", 20.0);
    v142 = (void *)sub_10003CEE8(2);

    v143 = sub_100053F2C((uint64_t *)&unk_1005D7EB0);
    inited = swift_initStackObject(v143, v166);
    *(_OWORD *)(inited + 16) = xmmword_100481730;
    *(_QWORD *)(inited + 32) = NSFontAttributeName;
    v145 = sub_100006C5C(0, (unint64_t *)&qword_1005D2F88, UIFont_ptr);
    *(_QWORD *)(inited + 40) = v142;
    *(_QWORD *)(inited + 64) = v145;
    *(_QWORD *)(inited + 72) = NSForegroundColorAttributeName;
    v146 = NSFontAttributeName;
    v147 = v142;
    v148 = NSForegroundColorAttributeName;
    v149 = objc_msgSend(v162, "systemRedColor");
    *(_QWORD *)(inited + 104) = sub_100006C5C(0, (unint64_t *)&qword_1005DB750, UIColor_ptr);
    *(_QWORD *)(inited + 80) = v149;
    v150 = sub_10011D674(inited);
    type metadata accessor for Key(0);
    sub_100008000((unint64_t *)&qword_1005D2620, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100481500);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v139, "setTitleTextAttributes:forState:", isa, 0, swift_bridgeObjectRelease(v150).n128_f64[0]);

  }
}

void sub_10007810C()
{
  char *v0;
  char *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  Class isa;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  double *v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  void *v39;
  Class v40;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_tableView];
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = sub_100053F2C(&qword_1005D2F10);
  v4 = swift_allocObject(v3, 64, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100481720;
  v5 = objc_msgSend(v2, "topAnchor");
  v6 = objc_msgSend(v1, "contentView");
  v7 = objc_msgSend(v6, "topAnchor");

  if (qword_1005D1D08 != -1)
    swift_once(&qword_1005D1D08, sub_1002128E8);
  v8 = objc_msgSend(v5, "constraintEqualToAnchor:constant:", v7, *(double *)&qword_1005F5320);

  *(_QWORD *)(v4 + 32) = v8;
  v9 = objc_msgSend(v2, "leadingAnchor");
  v10 = objc_msgSend(v1, "contentView");
  v11 = objc_msgSend(v10, "leadingAnchor");

  v12 = objc_msgSend(v9, "constraintEqualToAnchor:", v11);
  *(_QWORD *)(v4 + 40) = v12;
  v13 = objc_msgSend(v2, "trailingAnchor");
  v14 = objc_msgSend(v1, "contentView");
  v15 = objc_msgSend(v14, "trailingAnchor");

  v16 = objc_msgSend(v13, "constraintEqualToAnchor:", v15);
  *(_QWORD *)(v4 + 48) = v16;
  v17 = *(void **)&v1[OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_tableViewheightConstraint];
  if (v17)
  {
    v39 = (void *)objc_opt_self(NSLayoutConstraint);
    *(_QWORD *)(v4 + 56) = v17;
    specialized Array._endMutation()(v39);
    sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
    v18 = v17;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v39, "activateConstraints:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

    v20 = OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_footerLabel;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_footerLabel], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v21 = swift_allocObject(v3, 64, 7);
    *(_OWORD *)(v21 + 16) = xmmword_100481720;
    v22 = objc_msgSend(*(id *)&v1[v20], "topAnchor");
    v23 = objc_msgSend(v2, "bottomAnchor");
    v24 = (double *)&v1[OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_style];
    v25 = objc_msgSend(v22, "constraintEqualToAnchor:constant:", v23, -*(double *)&v1[OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_style + 16]);

    *(_QWORD *)(v21 + 32) = v25;
    v26 = objc_msgSend(*(id *)&v1[v20], "leadingAnchor");
    v27 = objc_msgSend(v1, "contentView");
    v28 = objc_msgSend(v27, "leadingAnchor");

    v29 = objc_msgSend(v26, "constraintEqualToAnchor:constant:", v28, v24[3]);
    *(_QWORD *)(v21 + 40) = v29;
    v30 = objc_msgSend(*(id *)&v1[v20], "trailingAnchor");
    v31 = objc_msgSend(v1, "contentView");
    v32 = objc_msgSend(v31, "trailingAnchor");

    v33 = objc_msgSend(v30, "constraintEqualToAnchor:constant:", v32, -v24[1]);
    *(_QWORD *)(v21 + 48) = v33;
    v34 = objc_msgSend(*(id *)&v1[v20], "bottomAnchor");
    v35 = objc_msgSend(v1, "contentView");
    v36 = objc_msgSend(v35, "bottomAnchor");

    v37 = objc_msgSend(v34, "constraintEqualToAnchor:", v36);
    *(_QWORD *)(v21 + 56) = v37;
    specialized Array._endMutation()(v38);
    v40 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v39, "activateConstraints:", v40, swift_bridgeObjectRelease(v21).n128_f64[0]);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1000786CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  _BYTE v10[24];

  v1 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v1);
  v3 = &v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = v0 + OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_device;
  swift_beginAccess(v4, v10, 0, 0);
  sub_100007464(v4, (uint64_t)v3, &qword_1005D6710);
  v5 = type metadata accessor for FMIPDevice(0);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v5);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v8 = FMIPDevice.maxMessageLength.getter();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v3, v5);
    return v8;
  }
  return result;
}

id sub_1000787B4(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  int v10;
  void *v11;
  id v12;
  char *v13;
  id v14;
  Swift::String v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String *v18;
  uint64_t v19;
  void *v20;
  unint64_t v21;
  id v22;
  NSString v23;
  void *v24;
  id v25;
  char *v26;
  id v27;
  Swift::String v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String *v31;
  uint64_t v32;
  void *object;
  unint64_t v34;
  id v35;
  NSString v36;
  void *v37;
  uint64_t v38;
  id v39;
  char *v40;
  uint64_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  id v55;
  NSString v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  Swift::String v60;
  Swift::String v61;

  v3 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v3);
  v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1002122F4(a1);
  v7 = type metadata accessor for FMEditableMessageTableViewCell();
  v8 = swift_dynamicCastClass(v6, v7);
  if (v8 && (*(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_mode + 4) & 1) == 0)
  {
    v10 = *(_DWORD *)(v1 + OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_mode);
    switch(v10)
    {
      case 4:
        v24 = *(void **)(v8 + OBJC_IVAR____TtC6FindMy30FMEditableMessageTableViewCell_textView);
        v58 = 0;
        v59 = 0xE000000000000000;
        v25 = v6;
        v26 = v24;
        _StringGuts.grow(_:)(20);
        swift_bridgeObjectRelease(v59);
        v27 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v61._countAndFlagsBits = 0xD000000000000037;
        v61._object = (void *)0x80000001004A5BC0;
        v28._object = (void *)0x80000001004A5B90;
        v28._countAndFlagsBits = 0xD000000000000025;
        v29._countAndFlagsBits = 0;
        v29._object = (void *)0xE000000000000000;
        v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, (Swift::String_optional)0, (NSBundle)v27, v29, v61);

        v31 = (Swift::String *)&v26[OBJC_IVAR____TtC6FindMy17FMMessageTextView_placeHolderText];
        v32 = *(_QWORD *)&v26[OBJC_IVAR____TtC6FindMy17FMMessageTextView_placeHolderText + 8];
        *v31 = v30;
        swift_bridgeObjectRelease(v32);
        object = v31->_object;
        if (object)
          v34 = (unint64_t)object;
        else
          v34 = 0xE000000000000000;
        v35 = *(id *)&v26[OBJC_IVAR____TtC6FindMy17FMMessageTextView_placeHolderLabel];
        swift_bridgeObjectRetain(object);
        v36 = String._bridgeToObjectiveC()();
        objc_msgSend(v35, "setText:", v36, swift_bridgeObjectRelease(v34).n128_f64[0]);

        sub_10011F84C();
        break;
      case 2:
        v37 = *(void **)(v8 + OBJC_IVAR____TtC6FindMy30FMEditableMessageTableViewCell_textView);
        v38 = v1 + OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_device;
        swift_beginAccess(v38, &v58, 0, 0);
        sub_100007464(v38, (uint64_t)v5, &qword_1005D6710);
        v39 = v6;
        v40 = v37;
        v41 = sub_1001DE71C(0xD000000000000025, 0x80000001004A5C00, (uint64_t)v5);
        v43 = v42;
        v45 = v44;
        v47 = v46;
        swift_bridgeObjectRetain(v46);
        v48 = sub_1001DDC8C(v41, v43, v45, v47, 0, 0);
        v50 = v49;
        swift_bridgeObjectRelease_n(v47, 2);
        swift_bridgeObjectRelease(v43);
        sub_1000051EC((uint64_t)v5, &qword_1005D6710);
        v51 = (uint64_t *)&v40[OBJC_IVAR____TtC6FindMy17FMMessageTextView_placeHolderText];
        v52 = *(_QWORD *)&v40[OBJC_IVAR____TtC6FindMy17FMMessageTextView_placeHolderText + 8];
        *v51 = v48;
        v51[1] = v50;
        swift_bridgeObjectRelease(v52);
        v53 = v51[1];
        if (v53)
          v54 = v51[1];
        else
          v54 = 0xE000000000000000;
        v55 = *(id *)&v40[OBJC_IVAR____TtC6FindMy17FMMessageTextView_placeHolderLabel];
        swift_bridgeObjectRetain(v53);
        v56 = String._bridgeToObjectiveC()();
        objc_msgSend(v55, "setText:", v56, swift_bridgeObjectRelease(v54).n128_f64[0]);

        sub_10011F84C();
        break;
      case 1:
        v11 = *(void **)(v8 + OBJC_IVAR____TtC6FindMy30FMEditableMessageTableViewCell_textView);
        v58 = 0;
        v59 = 0xE000000000000000;
        v12 = v6;
        v13 = v11;
        _StringGuts.grow(_:)(20);
        swift_bridgeObjectRelease(v59);
        v14 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v60._countAndFlagsBits = 0xD000000000000037;
        v60._object = (void *)0x80000001004A5BC0;
        v15._object = (void *)0x80000001004A5B90;
        v15._countAndFlagsBits = 0xD000000000000025;
        v16._countAndFlagsBits = 0;
        v16._object = (void *)0xE000000000000000;
        v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v60);

        v18 = (Swift::String *)&v13[OBJC_IVAR____TtC6FindMy17FMMessageTextView_placeHolderText];
        v19 = *(_QWORD *)&v13[OBJC_IVAR____TtC6FindMy17FMMessageTextView_placeHolderText + 8];
        *v18 = v17;
        swift_bridgeObjectRelease(v19);
        v20 = v18->_object;
        if (v20)
          v21 = (unint64_t)v20;
        else
          v21 = 0xE000000000000000;
        v22 = *(id *)&v13[OBJC_IVAR____TtC6FindMy17FMMessageTextView_placeHolderLabel];
        swift_bridgeObjectRetain(v20);
        v23 = String._bridgeToObjectiveC()();
        objc_msgSend(v22, "setText:", v23, swift_bridgeObjectRelease(v21).n128_f64[0]);

        sub_10011F84C();
        break;
    }
  }
  return v6;
}

void sub_100078D5C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  Swift::String v12;
  Swift::String v13;
  Swift::String v14;
  id v15;
  Swift::String v16;
  Swift::String v17;
  Swift::String v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  Swift::String v34;
  Swift::String v35;

  v4 = v3;
  v31 = a1;
  v7 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v7);
  v9 = (char *)&object - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = 0;
  v33 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v33);
  v10 = (void *)objc_opt_self(NSBundle);
  v11 = objc_msgSend(v10, "mainBundle");
  v34._countAndFlagsBits = 0xD000000000000039;
  v34._object = (void *)0x80000001004A5DE0;
  v12._object = (void *)0x80000001004A5DB0;
  v12._countAndFlagsBits = 0xD000000000000027;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v34);
  object = v14._object;
  countAndFlagsBits = v14._countAndFlagsBits;

  v32 = 0;
  v33 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v15 = objc_msgSend(v10, "mainBundle", swift_bridgeObjectRelease(v33).n128_f64[0]);
  v16._countAndFlagsBits = 0xD000000000000015;
  v35._object = (void *)0x80000001004A5E40;
  v16._object = (void *)0x80000001004A5E20;
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v35._countAndFlagsBits = 0xD000000000000027;
  v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v35);

  v19 = objc_msgSend(objc_allocWithZone((Class)AKAppleIDAuthenticationInAppContext), "init");
  v20 = v4 + OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_device;
  swift_beginAccess(v4 + OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_device, &v32, 0, 0);
  sub_100007464(v20, (uint64_t)v9, &qword_1005D6710);
  v21 = type metadata accessor for FMIPDevice(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v9, 1, v21) == 1)
  {
    __break(1u);
  }
  else
  {
    v23 = *(_QWORD *)(v4 + OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_passcode);
    v22 = *(_QWORD *)(v4 + OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_passcode + 8);
    v24 = type metadata accessor for FMIPLockAction(0);
    swift_allocObject(v24, *(unsigned int *)(v24 + 48), *(unsigned __int16 *)(v24 + 52));
    swift_bridgeObjectRetain(v22);
    v25 = swift_bridgeObjectRetain(a2);
    v26 = FMIPLockAction.init(device:message:passcode:)(v9, v31, a2, v23, v22, v25);
    objc_msgSend(v19, "setPresentingViewController:", v4);
    swift_retain(v26);
    v27 = v19;
    dispatch thunk of FMIPDeviceAction.authenticationContext.setter(v19);
    swift_release(v26);

    v28 = countAndFlagsBits;
    *(_QWORD *)a3 = v26;
    *(_QWORD *)(a3 + 8) = v28;
    *(_QWORD *)(a3 + 16) = object;
    *(Swift::String *)(a3 + 24) = v18;
  }
}

void sub_10007902C(NSObject *a1, uint64_t a2, void **a3, uint64_t a4, void *a5, uint64_t a6, unint64_t a7, uint64_t a8)
{
  void **v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void **v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void **v22;
  uint64_t v23;
  uint64_t v24;
  void **v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void **v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  void **v47;
  void **v48;
  os_log_t v49;
  unint64_t v50;
  void (*v51)(void **, unint64_t, uint64_t);
  void **v52;
  char *v53;
  void **v54;
  int v55;
  unint64_t v56;
  uint64_t v57;
  void **v58;
  uint64_t v59;
  void **v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  __n128 v70;
  uint64_t (*v71)(void **, uint64_t, __n128);
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void **v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  __n128 v89;
  os_log_t v90;
  void **v91;
  uint64_t v92;
  id v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  char v98;
  void *v99;
  void *v100;
  id v101;
  Swift::String v102;
  Swift::String v103;
  Swift::String v104;
  uint64_t v105;
  uint64_t v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void **v113;
  NSString v114;
  NSString v115;
  id v116;
  id v117;
  Swift::String v118;
  Swift::String v119;
  void *object;
  uint64_t v121;
  id v122;
  id v123;
  NSString v124;
  void *v125;
  id v126;
  id v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  os_log_type_t v134;
  int v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  __n128 v141;
  uint64_t (*v142)(char *, uint64_t, __n128);
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  unint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  unint64_t v157;
  unint64_t v158;
  __n128 v159;
  void **v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  NSObject *v166;
  os_log_type_t v167;
  int v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  unint64_t v174;
  __n128 v175;
  uint64_t (*v176)(char *, uint64_t, __n128);
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  unint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  unint64_t v190;
  uint64_t v191;
  __n128 v192;
  os_log_t v193;
  void **v194;
  uint64_t v195;
  uint64_t v196;
  id v197;
  void *v198;
  uint64_t v199;
  uint64_t v200;
  id v201;
  void *v202;
  void *v203;
  char *v204;
  char *v205;
  uint64_t v206;
  os_log_t v207;
  char *v208;
  char *v209;
  void **v210;
  id v211;
  os_log_t v212;
  void **v213;
  uint64_t v214;
  void ***p_aBlock;
  unint64_t v216;
  void **v217;
  uint64_t v218;
  void **aBlock;
  unint64_t v220;
  void *v221;
  void *v222;
  void (*v223)(int);
  uint64_t v224;
  Swift::String v225;
  Swift::String v226;

  p_aBlock = (void ***)a6;
  v216 = a7;
  v217 = a3;
  v214 = a2;
  v207 = a1;
  v9 = *(void ***)(a8 + 16);
  v209 = *(char **)(a8 + 8);
  v210 = v9;
  v10 = type metadata accessor for FMIPActionStatus(0);
  v212 = *(os_log_t *)(v10 - 8);
  v213 = (void **)v10;
  __chkstk_darwin(v10);
  v208 = (char *)&v204 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FMIPDevice(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = __chkstk_darwin(v12);
  v16 = (void **)((char *)&v204 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = __chkstk_darwin(v14);
  v19 = (char *)&v204 - v18;
  v20 = __chkstk_darwin(v17);
  v22 = (void **)((char *)&v204 - v21);
  v23 = __chkstk_darwin(v20);
  v25 = (void **)((char *)&v204 - v24);
  v26 = __chkstk_darwin(v23);
  v28 = (char *)&v204 - v27;
  v29 = __chkstk_darwin(v26);
  v31 = (char *)&v204 - v30;
  v32 = __chkstk_darwin(v29);
  v34 = (void **)((char *)&v204 - v33);
  v211 = a5;
  sub_10034AB98(v32);
  if (!v217)
  {
    v205 = v31;
    v206 = v12;
    v209 = v19;
    v210 = v25;
    v49 = v212;
    v48 = v213;
    v217 = v34;
    if (!v214 || !*(_QWORD *)(v214 + 16))
      return;
    v50 = v214 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v214 = v13;
    v51 = *(void (**)(void **, unint64_t, uint64_t))(v13 + 16);
    v52 = v217;
    v51(v217, v50, v206);
    v53 = v208;
    v54 = v48;
    ((void (*)(char *, os_log_t, void **))v49[2].isa)(v208, v207, v48);
    v55 = ((uint64_t (*)(char *, void **))v49[11].isa)(v53, v48);
    if (v55 == enum case for FMIPActionStatus.error(_:))
    {
      v56 = v216;
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v57 = type metadata accessor for Logger(0);
      sub_100056D88(v57, (uint64_t)qword_1005F5748);
      v58 = v210;
      v59 = v206;
      v51(v210, (unint64_t)v52, v206);
      v60 = v22;
      v51(v22, (unint64_t)v52, v59);
      v61 = swift_bridgeObjectRetain_n(v56, 2);
      v62 = Logger.logObject.getter(v61);
      v63 = static os_log_type_t.default.getter(v62);
      v64 = v63;
      if (os_log_type_enabled(v62, v63))
      {
        v65 = swift_slowAlloc(32, -1);
        v213 = (void **)swift_slowAlloc(96, -1);
        aBlock = v213;
        *(_DWORD *)v65 = 136315650;
        v212 = v62;
        swift_bridgeObjectRetain(v56);
        v218 = sub_100056DA0((uint64_t)p_aBlock, v56, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v218, &aBlock);
        v66 = swift_bridgeObjectRelease_n(v56, 3);
        *(_WORD *)(v65 + 12) = 2080;
        v67 = FMIPDevice.name.getter(v66);
        v69 = v68;
        v218 = sub_100056DA0(v67, v68, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v218, &aBlock);
        v70 = swift_bridgeObjectRelease(v69);
        v71 = *(uint64_t (**)(void **, uint64_t, __n128))(v214 + 8);
        v72 = v71(v58, v206, v70);
        *(_WORD *)(v65 + 22) = 2080;
        v73 = FMIPDevice.identifier.getter(v72);
        v75 = v74;
        v76 = sub_1003C4014(10, v73, v74);
        v78 = v77;
        LODWORD(v216) = v64;
        v79 = v60;
        v81 = v80;
        v83 = v82;
        swift_bridgeObjectRelease(v75);
        v84 = v76;
        v85 = v206;
        v86 = static String._fromSubstring(_:)(v84, v78, v81, v83);
        v88 = v87;
        swift_bridgeObjectRelease(v83);
        v218 = sub_100056DA0(v86, v88, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v218, &aBlock);
        v89 = swift_bridgeObjectRelease(v88);
        v71(v79, v85, v89);
        v90 = v212;
        _os_log_impl((void *)&_mh_execute_header, v212, (os_log_type_t)v216, "FMDeviceMessageViewController: Error %s %s %s", (uint8_t *)v65, 0x20u);
        v91 = v213;
        swift_arrayDestroy(v213, 3, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v91, -1, -1);
        v92 = v65;
LABEL_27:
        swift_slowDealloc(v92, -1, -1);

        goto LABEL_36;
      }
      swift_bridgeObjectRelease_n(v56, 2);
      v71 = *(uint64_t (**)(void **, uint64_t, __n128))(v214 + 8);
      v161 = v206;
      ((void (*)(void **, uint64_t))v71)(v58, v206);
      ((void (*)(void **, uint64_t))v71)(v60, v161);

    }
    else
    {
      v128 = v216;
      if (v55 != enum case for FMIPActionStatus.pending(_:))
      {
        if (qword_1005D1DE8 != -1)
          swift_once(&qword_1005D1DE8, sub_100005ADC);
        v162 = type metadata accessor for Logger(0);
        sub_100056D88(v162, (uint64_t)qword_1005F5748);
        v163 = v209;
        v164 = v206;
        v51((void **)v209, (unint64_t)v52, v206);
        v51(v16, (unint64_t)v52, v164);
        v165 = swift_bridgeObjectRetain_n(v128, 2);
        v166 = Logger.logObject.getter(v165);
        v167 = static os_log_type_t.default.getter(v166);
        v168 = v167;
        if (os_log_type_enabled(v166, v167))
        {
          v169 = (char *)v16;
          v170 = swift_slowAlloc(32, -1);
          v210 = (void **)swift_slowAlloc(96, -1);
          aBlock = v210;
          *(_DWORD *)v170 = 136315650;
          v207 = v166;
          swift_bridgeObjectRetain(v128);
          v218 = sub_100056DA0((uint64_t)p_aBlock, v128, (uint64_t *)&aBlock);
          p_aBlock = &aBlock;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v218, &aBlock);
          v171 = swift_bridgeObjectRelease_n(v128, 3);
          *(_WORD *)(v170 + 12) = 2080;
          v172 = FMIPDevice.name.getter(v171);
          v174 = v173;
          v218 = sub_100056DA0(v172, v173, (uint64_t *)&aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v218, &aBlock);
          v175 = swift_bridgeObjectRelease(v174);
          LODWORD(v216) = v168;
          v176 = *(uint64_t (**)(char *, uint64_t, __n128))(v214 + 8);
          v177 = v176(v163, v206, v175);
          *(_WORD *)(v170 + 22) = 2080;
          v214 = v170 + 24;
          v204 = v169;
          v178 = FMIPDevice.identifier.getter(v177);
          v180 = v179;
          v181 = sub_1003C4014(10, v178, v179);
          v183 = v182;
          v185 = v184;
          v187 = v186;
          swift_bridgeObjectRelease(v180);
          v188 = static String._fromSubstring(_:)(v181, v183, v185, v187);
          v190 = v189;
          v191 = v187;
          v71 = (uint64_t (*)(void **, uint64_t, __n128))v176;
          swift_bridgeObjectRelease(v191);
          v218 = sub_100056DA0(v188, v190, (uint64_t *)&aBlock);
          v54 = v48;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v218, p_aBlock);
          v192 = swift_bridgeObjectRelease(v190);
          v176(v204, v206, v192);
          v193 = v207;
          _os_log_impl((void *)&_mh_execute_header, v207, (os_log_type_t)v216, "FMDeviceMessageViewController: Done %s %s %s", (uint8_t *)v170, 0x20u);
          v194 = v210;
          swift_arrayDestroy(v210, 3, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v194, -1, -1);
          swift_slowDealloc(v170, -1, -1);

        }
        else
        {
          swift_bridgeObjectRelease_n(v128, 2);
          v71 = *(uint64_t (**)(void **, uint64_t, __n128))(v214 + 8);
          v196 = v206;
          ((void (*)(char *, uint64_t))v71)(v163, v206);
          ((void (*)(void **, uint64_t))v71)(v16, v196);

        }
        ((void (*)(char *, void **))v49[1].isa)(v208, v54);
        goto LABEL_36;
      }
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v129 = type metadata accessor for Logger(0);
      sub_100056D88(v129, (uint64_t)qword_1005F5748);
      v131 = v205;
      v130 = v206;
      v51((void **)v205, (unint64_t)v52, v206);
      v132 = v28;
      v51((void **)v28, (unint64_t)v52, v130);
      v133 = swift_bridgeObjectRetain_n(v128, 2);
      v90 = (os_log_t)Logger.logObject.getter(v133);
      v134 = static os_log_type_t.default.getter(v90);
      v135 = v134;
      if (os_log_type_enabled(v90, v134))
      {
        v136 = swift_slowAlloc(32, -1);
        v213 = (void **)swift_slowAlloc(96, -1);
        aBlock = v213;
        *(_DWORD *)v136 = 136315650;
        LODWORD(v212) = v135;
        swift_bridgeObjectRetain(v128);
        v218 = sub_100056DA0((uint64_t)p_aBlock, v128, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v218, &aBlock);
        v137 = swift_bridgeObjectRelease_n(v128, 3);
        *(_WORD *)(v136 + 12) = 2080;
        v138 = FMIPDevice.name.getter(v137);
        v140 = v139;
        v218 = sub_100056DA0(v138, v139, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v218, &aBlock);
        v141 = swift_bridgeObjectRelease(v140);
        v142 = *(uint64_t (**)(char *, uint64_t, __n128))(v214 + 8);
        v143 = v142(v131, v206, v141);
        *(_WORD *)(v136 + 22) = 2080;
        v216 = v136 + 24;
        v144 = FMIPDevice.identifier.getter(v143);
        v146 = v145;
        v147 = sub_1003C4014(10, v144, v145);
        v148 = v132;
        v150 = v149;
        v152 = v151;
        v154 = v153;
        swift_bridgeObjectRelease(v146);
        v155 = static String._fromSubstring(_:)(v147, v150, v152, v154);
        v157 = v156;
        swift_bridgeObjectRelease(v154);
        v218 = sub_100056DA0(v155, v157, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v218, &aBlock);
        v158 = v157;
        v71 = (uint64_t (*)(void **, uint64_t, __n128))v142;
        v159 = swift_bridgeObjectRelease(v158);
        v142(v148, v206, v159);
        _os_log_impl((void *)&_mh_execute_header, v90, (os_log_type_t)v212, "FMDeviceMessageViewController: %s pending on %s %s", (uint8_t *)v136, 0x20u);
        v160 = v213;
        swift_arrayDestroy(v213, 3, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v160, -1, -1);
        v92 = v136;
        goto LABEL_27;
      }
      swift_bridgeObjectRelease_n(v128, 2);
      v71 = *(uint64_t (**)(void **, uint64_t, __n128))(v214 + 8);
      v195 = v206;
      ((void (*)(char *, uint64_t))v71)(v131, v206);
      ((void (*)(char *, uint64_t))v71)(v28, v195);

    }
LABEL_36:
    v197 = sub_100345BE8();
    if (v197)
    {
      v198 = v197;
      v199 = type metadata accessor for FMActivityIndicatingNavigationController();
      v200 = swift_dynamicCastClass(v198, v199);

      if (v200)
      {
        v201 = objc_msgSend(v211, "navigationController");
        if (v201)
        {
          v202 = v201;
          v223 = (void (*)(int))State.rawValue.getter;
          v224 = 0;
          aBlock = _NSConcreteStackBlock;
          v220 = 1107296256;
          v221 = sub_100037DF8;
          v222 = &unk_100541BB8;
          v203 = _Block_copy(&aBlock);
          objc_msgSend(v202, "dismissViewControllerAnimated:completion:", 1, v203);
          _Block_release(v203);

        }
      }
    }
    ((void (*)(void **, uint64_t))v71)(v217, v206);
    return;
  }
  v35 = (void *)_convertErrorToNSError(_:)(v217);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v36 = type metadata accessor for Logger(0);
  sub_100056D88(v36, (uint64_t)qword_1005F5748);
  v37 = v216;
  swift_bridgeObjectRetain_n(v216, 2);
  v38 = v35;
  v39 = Logger.logObject.getter(v38);
  v40 = static os_log_type_t.default.getter(v39);
  if (os_log_type_enabled(v39, v40))
  {
    v41 = swift_slowAlloc(22, -1);
    v217 = (void **)swift_slowAlloc(64, -1);
    aBlock = v217;
    *(_DWORD *)v41 = 136315394;
    swift_bridgeObjectRetain(v37);
    v218 = sub_100056DA0((uint64_t)p_aBlock, v37, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v218, &aBlock);
    swift_bridgeObjectRelease_n(v37, 3);
    *(_WORD *)(v41 + 12) = 2080;
    v42 = v38;
    v43 = objc_msgSend(v42, "description");
    v44 = static String._unconditionallyBridgeFromObjectiveC(_:)(v43);
    v46 = v45;

    v218 = sub_100056DA0(v44, v46, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v218, &aBlock);

    swift_bridgeObjectRelease(v46);
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "FMDeviceMessageViewController: Error %s %s", (uint8_t *)v41, 0x16u);
    v47 = v217;
    swift_arrayDestroy(v217, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v47, -1, -1);
    swift_slowDealloc(v41, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v37, 2);
  }
  v93 = objc_msgSend(v38, "domain");
  v94 = static String._unconditionallyBridgeFromObjectiveC(_:)(v93);
  v96 = v95;

  if (v94 == 0xD000000000000015 && v96 == 0x80000001004A5E70)
  {
    v97 = swift_bridgeObjectRelease(0x80000001004A5E70).n128_u64[0];
    goto LABEL_18;
  }
  v98 = _stringCompareWithSmolCheck(_:_:expecting:)(v94, v96, 0xD000000000000015, 0x80000001004A5E70, 0);
  v97 = swift_bridgeObjectRelease(v96).n128_u64[0];
  if ((v98 & 1) != 0)
  {
LABEL_18:
    if (objc_msgSend(v38, "code", *(double *)&v97) == (id)-7003)
    {
LABEL_20:

      return;
    }
  }
  if (sub_10021ED40())
    goto LABEL_20;
  v99 = v38;
  aBlock = 0;
  v220 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v220);
  v100 = (void *)objc_opt_self(NSBundle);
  v101 = objc_msgSend(v100, "mainBundle");
  v102._countAndFlagsBits = 0xD00000000000001DLL;
  v225._countAndFlagsBits = 0xD00000000000002FLL;
  v225._object = (void *)0x80000001004A5EB0;
  v102._object = (void *)0x80000001004A5E90;
  v103._countAndFlagsBits = 0;
  v103._object = (void *)0xE000000000000000;
  v104 = NSLocalizedString(_:tableName:bundle:value:comment:)(v102, (Swift::String_optional)0, (NSBundle)v101, v103, v225);

  v105 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
  v106 = swift_allocObject(v105, 72, 7);
  *(_OWORD *)(v106 + 16) = xmmword_100481740;
  v107 = objc_msgSend(v38, "localizedDescription");
  v108 = static String._unconditionallyBridgeFromObjectiveC(_:)(v107);
  v110 = v109;

  *(_QWORD *)(v106 + 56) = &type metadata for String;
  *(_QWORD *)(v106 + 64) = sub_100071E88();
  *(_QWORD *)(v106 + 32) = v108;
  *(_QWORD *)(v106 + 40) = v110;
  String.init(format:_:)(v104._countAndFlagsBits, v104._object, v106);
  v112 = v111;
  swift_bridgeObjectRelease(v104._object);
  v113 = v210;
  swift_bridgeObjectRetain(v210);
  v114 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v113);
  v115 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v112);
  v116 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v114, v115, 1);

  aBlock = 0;
  v220 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v117 = objc_msgSend(v100, "mainBundle", swift_bridgeObjectRelease(v220).n128_f64[0]);
  v226._countAndFlagsBits = 0xD000000000000021;
  v226._object = (void *)0x80000001004A5EE0;
  v118._countAndFlagsBits = 0x4F545455425F4B4FLL;
  v118._object = (void *)0xEF454C5449545F4ELL;
  v119._countAndFlagsBits = 0;
  v119._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v118, (Swift::String_optional)0, (NSBundle)v117, v119, v226)._object;

  v121 = swift_allocObject(&unk_100541BF0, 24, 7);
  v122 = v211;
  *(_QWORD *)(v121 + 16) = v211;
  v123 = v122;
  v124 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v223 = sub_10007B904;
  v224 = v121;
  aBlock = _NSConcreteStackBlock;
  v220 = 1107296256;
  v221 = sub_100008B40;
  v222 = &unk_100541C08;
  v125 = _Block_copy(&aBlock);
  swift_release(v224);
  v126 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v124, 1, v125);
  _Block_release(v125);

  objc_msgSend(v116, "addAction:", v126);
  v127 = sub_1002124FC();
  objc_msgSend(v127, "resignFirstResponder");

  objc_msgSend(v123, "presentViewController:animated:completion:", v116, 1, 0);
}

void sub_10007A138(int a1, id a2)
{
  id v2;
  void *v3;
  void *v4;
  _QWORD v5[6];

  v2 = objc_msgSend(a2, "navigationController");
  if (v2)
  {
    v3 = v2;
    v5[4] = State.rawValue.getter;
    v5[5] = 0;
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 1107296256;
    v5[2] = sub_100037DF8;
    v5[3] = &unk_100541C30;
    v4 = _Block_copy(v5);
    objc_msgSend(v3, "dismissViewControllerAnimated:completion:", 1, v4);
    _Block_release(v4);

  }
}

char *sub_10007A22C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  char *v9;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  void *v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  id v28;
  id v29;

  v15 = &v9[OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_device];
  v16 = type metadata accessor for FMIPDevice(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  v17 = &v9[OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_primaryItemPart];
  v18 = type metadata accessor for FMIPItem(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = &v9[OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_mode];
  *(_DWORD *)v19 = 0;
  v19[4] = 1;
  *(_QWORD *)&v9[OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_tableViewheightConstraint] = 0;
  v20 = OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_style;
  v21 = qword_1005D1B60;
  v22 = v9;
  if (v21 != -1)
    swift_once(&qword_1005D1B60, sub_100077188);
  v23 = &v22[v20];
  v24 = (void *)qword_1005D2F18;
  v25 = unk_1005D2F20;
  v26 = *(_OWORD *)&qword_1005D2F30;
  *(_QWORD *)v23 = qword_1005D2F18;
  *(_OWORD *)(v23 + 8) = v25;
  *(_OWORD *)(v23 + 24) = v26;
  v27 = OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_footerLabel;
  v28 = objc_allocWithZone((Class)UILabel);
  v29 = v24;
  *(_QWORD *)&v22[v27] = objc_msgSend(v28, "init");

  return sub_100212910(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

void sub_10007A3C4()
{
  uint64_t v0;

  sub_1000051EC(v0 + OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_device, &qword_1005D6710);
  sub_1000051EC(v0 + OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_primaryItemPart, (uint64_t *)&unk_1005D3AA0);

}

id sub_10007A430()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMDeviceEditableMessageViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10007A4DC()
{
  return type metadata accessor for FMDeviceEditableMessageViewController(0);
}

uint64_t type metadata accessor for FMDeviceEditableMessageViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1005D2F70;
  if (!qword_1005D2F70)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMDeviceEditableMessageViewController);
  return result;
}

void sub_10007A520(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[6];

  sub_100007178(319, &qword_1005D2F80, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPDevice);
  if (v3 <= 0x3F)
  {
    v6[0] = *(_QWORD *)(v2 - 8) + 64;
    sub_100007178(319, (unint64_t *)&qword_1005DD290, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItem);
    if (v5 <= 0x3F)
    {
      v6[1] = *(_QWORD *)(v4 - 8) + 64;
      v6[2] = &unk_100481A08;
      v6[3] = &unk_100481A20;
      v6[4] = &unk_100481A38;
      v6[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
      swift_updateClassMetadata2(a1, 256, 6, v6, a1 + 512);
    }
  }
}

void destroy for FMEditableMessageViewStyle(id *a1)
{

}

uint64_t initializeWithCopy for FMDeviceEditableMessageViewStyle(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for FMDeviceEditableMessageViewStyle(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

__n128 initializeWithCopy for FMCardContainerConfiguration(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for FMDeviceEditableMessageViewStyle(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMDeviceEditableMessageViewStyle(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMDeviceEditableMessageViewStyle(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMDeviceEditableMessageViewStyle()
{
  return &type metadata for FMDeviceEditableMessageViewStyle;
}

char *sub_10007A78C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  id v26;
  id v27;
  void *v28;
  _BYTE v31[24];

  v16 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v16);
  v18 = &v31[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  objc_allocWithZone((Class)type metadata accessor for FMDeviceEditableMessageViewController(0));
  swift_retain(a1);
  v19 = sub_10007A22C(0, 0xE000000000000000, 0, 0, a1, a5, a6, a7, a8);
  v20 = type metadata accessor for FMIPDevice(0);
  v21 = *(_QWORD *)(v20 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v21 + 16))(v18, a2, v20);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  v22 = (uint64_t)&v19[OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_device];
  swift_beginAccess(&v19[OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_device], v31, 33, 0);
  v23 = v19;
  sub_10007A9C8((uint64_t)v18, v22);
  swift_endAccess(v31);
  v24 = (uint64_t)&v23[OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_primaryItemPart];
  swift_beginAccess(&v23[OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_primaryItemPart], v31, 33, 0);
  sub_10007AA10(a3, v24);
  swift_endAccess(v31);
  v25 = &v23[OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_mode];
  *(_DWORD *)v25 = a4;
  v25[4] = 0;
  v26 = objc_msgSend(*(id *)&v23[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_tableView], "heightAnchor");
  v27 = objc_msgSend(v26, "constraintEqualToConstant:", *(double *)&v23[OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_style + 32]);
  swift_release(a1);

  sub_1000051EC(a3, (uint64_t *)&unk_1005D3AA0);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(a2, v20);
  v28 = *(void **)&v23[OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_tableViewheightConstraint];
  *(_QWORD *)&v23[OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_tableViewheightConstraint] = v27;

  return v23;
}

uint64_t sub_10007A9C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C(&qword_1005D6710);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007AA10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007AA58()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v21 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v10 = (void *)static OS_dispatch_queue.main.getter(v9);
  v11 = swift_allocObject(&unk_100541C68, 24, 7);
  *(_QWORD *)(v11 + 16) = v0;
  aBlock[4] = sub_10007B930;
  v23 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_100541C80;
  v12 = _Block_copy(aBlock);
  v13 = v23;
  v14 = v1;
  swift_release(v13);
  static DispatchQoS.unspecified.getter(v15);
  aBlock[0] = _swiftEmptyArrayStorage;
  v16 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v17 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v18 = sub_1000555E4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v17, v18, v2, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_10007AC54()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  double v19;
  void *v20;
  id v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  unint64_t v27;
  uint64_t v29;
  char *v30;
  id v31;
  void *v32;
  void *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t);
  uint64_t v53;
  __n128 v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  NSObject *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  void *v70;
  char *v71;
  void (*v72)(char *, uint64_t);
  Swift::String v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  Swift::String v87;
  void *object;
  unint64_t v89;
  os_log_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(uint64_t);
  void *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  unint64_t v104;
  id v105;
  id v106;
  void *v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  _BYTE *v112;
  _QWORD v113[2];
  uint64_t v114;
  os_log_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t (*v118)(char *, uint64_t, uint64_t);
  uint64_t v119;
  uint64_t v120;
  char *v121;
  unint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128[2];
  uint64_t v129;
  _BYTE v130[24];
  uint64_t aBlock;
  uint64_t v132;
  uint64_t (*v133)(uint64_t);
  void *v134;
  uint64_t (*v135)();
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char v139;

  v1 = v0;
  v2 = type metadata accessor for Logger(0);
  v125 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v124 = (char *)v113 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100053F2C(&qword_1005D6710);
  v5 = __chkstk_darwin(v4);
  v123 = (uint64_t)v113 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)v113 - v8;
  v10 = __chkstk_darwin(v7);
  v12 = (char *)v113 - v11;
  __chkstk_darwin(v10);
  v14 = (char *)v113 - v13;
  v15 = type metadata accessor for FMLostModeTrackable(0);
  __chkstk_darwin(v15);
  v17 = (char *)v113 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (char *)sub_1002124FC();
  v126 = v2;
  if (v18)
  {
    v20 = v18;
    v21 = objc_msgSend(*(id *)&v18[OBJC_IVAR____TtC6FindMy17FMMessageTextView_textView], "text");
    v22 = (unint64_t)v21;
    if (v21)
    {
      v23 = static String._unconditionallyBridgeFromObjectiveC(_:)(v21);
      v25 = v24;

      v22 = v25;
    }
    else
    {

      v23 = 0;
    }
  }
  else
  {
    v23 = 0;
    v22 = 0;
  }
  v26 = (uint64_t *)&v1[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_phoneNumber];
  v27 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_phoneNumber + 8];
  if (v27)
  {
    if ((v27 & 0x2000000000000000) != 0 ? HIBYTE(v27) & 0xF : *v26 & 0xFFFFFFFFFFFFLL)
    {
      if (!v22)
        goto LABEL_16;
      v29 = HIBYTE(v22) & 0xF;
      if ((v22 & 0x2000000000000000) == 0)
        v29 = v23 & 0xFFFFFFFFFFFFLL;
      if (!v29)
      {
LABEL_16:
        if ((v1[OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_mode + 4] & 1) == 0
          && *(_DWORD *)&v1[OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_mode] == 2)
        {
          v122 = v22;
          v30 = (char *)sub_1002124FC();
          v22 = (unint64_t)v30;
          if (v30)
          {
            v23 = *(_QWORD *)&v30[OBJC_IVAR____TtC6FindMy17FMMessageTextView_placeHolderText];
            v121 = *(char **)&v30[OBJC_IVAR____TtC6FindMy17FMMessageTextView_placeHolderText + 8];
            swift_bridgeObjectRetain(v121);

            v22 = (unint64_t)v121;
          }
          else
          {
            v23 = 0;
          }
          *(_QWORD *)&v19 = swift_bridgeObjectRelease(v122).n128_u64[0];
        }
      }
    }
  }
  if ((v1[OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_mode + 4] & 1) != 0)
    goto LABEL_22;
  v34 = *(_DWORD *)&v1[OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_mode];
  if (v34 == 4)
  {
    v121 = v9;
    v122 = v22;
    v40 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_mediator]
                                + 24)
                    + 32);
    v41 = (uint64_t)&v1[OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_device];
    swift_beginAccess(&v1[OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_device], v130, 0, 0);
    sub_100007464(v41, (uint64_t)v12, &qword_1005D6710);
    v42 = type metadata accessor for FMIPDevice(0);
    v119 = *(_QWORD *)(v42 - 8);
    v43 = *(unsigned int (**)(char *, uint64_t))(v119 + 48);
    v120 = v42;
    if (v43(v12, 1) == 1)
    {
      __break(1u);
      goto LABEL_45;
    }
    v44 = *v26;
    v45 = v26[1];
    v47 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_passcode];
    v46 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_passcode + 8];
    swift_bridgeObjectRetain(v46);
    v48 = v122;
    swift_bridgeObjectRetain(v122);
    swift_retain(v40);
    swift_bridgeObjectRetain(v45);
    v49 = v44;
    v22 = v48;
    sub_1000BA490((uint64_t)v12, v23, v48, v49, v45, v47, v46, v1, &aBlock);
    v50 = v40;
    v51 = aBlock;
    v35 = v132;
    v52 = v133;
    v37 = (uint64_t)v134;
    v39 = (unint64_t)v135;
    swift_release(v50);
    swift_bridgeObjectRelease(v22);
    v53 = v45;
    v36 = v51;
    swift_bridgeObjectRelease(v53);
    v54 = swift_bridgeObjectRelease(v46);
    v55 = v12;
    v38 = (uint64_t)v52;
    (*(void (**)(char *, uint64_t, __n128))(v119 + 8))(v55, v120, v54);
    v9 = v121;
LABEL_31:
    v120 = v35;
    v121 = (char *)v37;
    sub_10007B810(v36, v35, v38, v37, v39);
    v56 = qword_1005D1DE8;
    swift_retain(v36);
    swift_bridgeObjectRetain(v39);
    v58 = v124;
    v57 = v125;
    if (v56 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v59 = v126;
    v60 = sub_100056D88(v126, (uint64_t)qword_1005F5748);
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v58, v60, v59);
    v61 = v1;
    swift_bridgeObjectRetain_n(v39, 2);
    v1 = v61;
    v62 = Logger.logObject.getter(v1);
    LODWORD(v119) = static os_log_type_t.default.getter(v62);
    if (!os_log_type_enabled(v62, (os_log_type_t)v119))
    {

      swift_bridgeObjectRelease_n(v39, 2);
      v92 = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v58, v59);
      goto LABEL_41;
    }
    v115 = v62;
    v116 = v38;
    v117 = v36;
    v122 = v22;
    v63 = swift_slowAlloc(32, -1);
    v114 = swift_slowAlloc(96, -1);
    v129 = v114;
    *(_DWORD *)v63 = 136315650;
    swift_bridgeObjectRetain(v39);
    aBlock = sub_100056DA0((uint64_t)v121, v39, &v129);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, &v132);
    swift_bridgeObjectRelease_n(v39, 3);
    *(_WORD *)(v63 + 12) = 2080;
    v127 = 0;
    v128[0] = 0xE000000000000000;
    v64 = (uint64_t)&v1[OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_device];
    swift_beginAccess(&v1[OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_device], &aBlock, 0, 0);
    sub_100007464(v64, (uint64_t)v9, &qword_1005D6710);
    v65 = type metadata accessor for FMIPDevice(0);
    v66 = *(_QWORD *)(v65 - 8);
    v118 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v66 + 48);
    v67 = v118(v9, 1, v65);
    if ((_DWORD)v67 != 1)
    {
      v113[1] = v63 + 14;
      v68 = FMIPDevice.name.getter(v67);
      v70 = v69;
      v71 = v9;
      v72 = *(void (**)(char *, uint64_t))(v66 + 8);
      v72(v71, v65);
      v73._countAndFlagsBits = v68;
      v73._object = v70;
      String.append(_:)(v73);
      swift_bridgeObjectRelease(v70);
      v74 = v128[0];
      v127 = sub_100056DA0(v127, v128[0], &v129);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v127, v128);

      swift_bridgeObjectRelease(v74);
      *(_WORD *)(v63 + 22) = 2080;
      v127 = 0;
      v128[0] = 0xE000000000000000;
      v75 = v123;
      sub_100007464(v64, v123, &qword_1005D6710);
      v76 = v118((char *)v75, 1, v65);
      if ((_DWORD)v76 != 1)
      {
        v77 = FMIPDevice.identifier.getter(v76);
        v79 = v78;
        v72((char *)v75, v65);
        v80 = sub_1003C4014(10, v77, v79);
        v82 = v81;
        v84 = v83;
        v86 = v85;
        swift_bridgeObjectRelease(v79);
        v87._countAndFlagsBits = static String._fromSubstring(_:)(v80, v82, v84, v86);
        object = v87._object;
        String.append(_:)(v87);
        swift_bridgeObjectRelease(v86);
        swift_bridgeObjectRelease(object);
        v89 = v128[0];
        v127 = sub_100056DA0(v127, v128[0], &v129);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v127, v128);

        swift_bridgeObjectRelease(v89);
        v90 = v115;
        _os_log_impl((void *)&_mh_execute_header, v115, (os_log_type_t)v119, "FMDeviceMessageViewController: %s %s %s...", (uint8_t *)v63, 0x20u);
        v91 = v114;
        swift_arrayDestroy(v114, 3, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v91, -1, -1);
        swift_slowDealloc(v63, -1, -1);

        v92 = (*(uint64_t (**)(char *, uint64_t))(v125 + 8))(v124, v126);
        v22 = v122;
        v36 = v117;
        v38 = v116;
LABEL_41:
        sub_100389D70(v92);
        v108 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_mediator]
                                     + 24)
                         + 32);
        v109 = (_QWORD *)swift_allocObject(&unk_100541BA0, 80, 7);
        v110 = (uint64_t)v121;
        v109[2] = v1;
        v109[3] = v110;
        v109[4] = v39;
        v109[5] = v36;
        v111 = v120;
        v109[6] = v120;
        v109[7] = v38;
        v109[8] = v110;
        v109[9] = v39;
        swift_retain(v36);
        swift_bridgeObjectRetain(v39);
        v112 = v1;
        swift_retain(v108);
        swift_bridgeObjectRetain(v38);
        sub_1000B2024(v36, (uint64_t)sub_10007B88C, (uint64_t)v109);
        sub_10007B8CC(v36, v111, v38, v110, v39);
        swift_release(v108);
        swift_release(v109);
        swift_bridgeObjectRelease(v39);
        swift_bridgeObjectRelease(v38);
        swift_release_n(v36, 2);
LABEL_42:
        swift_bridgeObjectRelease(v22);
        return;
      }
      goto LABEL_46;
    }
LABEL_45:

    __break(1u);
LABEL_46:

    __break(1u);
    goto LABEL_47;
  }
  if (v34 != 2)
  {
    if (v34 != 1)
    {
LABEL_22:
      v31 = objc_msgSend(v1, "navigationController", v19);
      if (v31)
      {
        v32 = v31;
        v135 = State.rawValue.getter;
        v136 = 0;
        aBlock = (uint64_t)_NSConcreteStackBlock;
        v132 = 1107296256;
        v133 = sub_100037DF8;
        v134 = &unk_100541B68;
        v33 = _Block_copy(&aBlock);
        objc_msgSend(v32, "dismissViewControllerAnimated:completion:", 1, v33);
        _Block_release(v33);

      }
      goto LABEL_42;
    }
    swift_bridgeObjectRetain(v22);
    sub_100078D5C(v23, v22, (uint64_t)&aBlock);
    v36 = aBlock;
    v35 = v132;
    v38 = (uint64_t)v133;
    v37 = (uint64_t)v134;
    v39 = (unint64_t)v135;
    swift_bridgeObjectRelease(v22);
    goto LABEL_31;
  }
  v93 = (uint64_t (*)(uint64_t))*v26;
  v94 = (void *)v26[1];
  v95 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_passcode];
  v96 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_passcode + 8];
  aBlock = v23;
  v132 = v22;
  v133 = v93;
  v134 = v94;
  v135 = 0;
  v136 = 0;
  v137 = v95;
  v138 = v96;
  v139 = 1;
  v122 = v22;
  v97 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy31FMEditableMessageViewController_mediator];
  v98 = (uint64_t)&v1[OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_device];
  swift_beginAccess(&v1[OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_device], v130, 0, 0);
  sub_100007464(v98, (uint64_t)v14, &qword_1005D6710);
  v99 = type metadata accessor for FMIPDevice(0);
  v100 = *(_QWORD *)(v99 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48))(v14, 1, v99) == 1)
  {
LABEL_47:
    __break(1u);
    return;
  }
  v101 = (uint64_t)&v17[*(int *)(sub_100053F2C(&qword_1005D2F90) + 48)];
  (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v17, v14, v99);
  v102 = (uint64_t)&v1[OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_primaryItemPart];
  swift_beginAccess(&v1[OBJC_IVAR____TtC6FindMy37FMDeviceEditableMessageViewController_primaryItemPart], &v127, 0, 0);
  sub_100007464(v102, v101, (uint64_t *)&unk_1005D3AA0);
  swift_storeEnumTagMultiPayload(v17, v15, 1);
  v103 = objc_allocWithZone((Class)type metadata accessor for FMLostModeConfirmationViewController(0));
  swift_bridgeObjectRetain(v96);
  v104 = v122;
  swift_bridgeObjectRetain(v122);
  swift_retain(v97);
  swift_bridgeObjectRetain(v94);
  v105 = sub_1000E5938(v97, (uint64_t)v17, (uint64_t)&aBlock);
  v106 = objc_msgSend(v1, "navigationController", swift_release(v97).n128_f64[0]);
  if (v106)
  {
    v107 = v106;
    objc_msgSend(v106, "pushViewController:animated:", v105, 1);
    swift_bridgeObjectRelease(v104);

  }
  else
  {
    swift_bridgeObjectRelease(v104);

  }
}

uint64_t sub_10007B810(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (result)
  {
    swift_retain(result);
    swift_bridgeObjectRetain(a3);
    return swift_bridgeObjectRetain(a5);
  }
  return result;
}

uint64_t sub_10007B848()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  swift_release(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 72));
  return swift_deallocObject(v0, 80, 7);
}

void sub_10007B88C(NSObject *a1, uint64_t a2, void **a3, uint64_t a4)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  __int128 v8;
  uint64_t v9;
  _OWORD v10[2];
  uint64_t v11;

  v5 = *(void **)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(_QWORD *)(v4 + 32);
  v8 = *(_OWORD *)(v4 + 56);
  v9 = *(_QWORD *)(v4 + 72);
  v10[0] = *(_OWORD *)(v4 + 40);
  v10[1] = v8;
  v11 = v9;
  sub_10007902C(a1, a2, a3, a4, v5, v6, v7, (uint64_t)v10);
}

uint64_t sub_10007B8CC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (result)
  {
    swift_release(result);
    swift_bridgeObjectRelease(a3);
    return swift_bridgeObjectRelease(a5);
  }
  return result;
}

void sub_10007B904(int a1)
{
  uint64_t v1;

  sub_10007A138(a1, *(id *)(v1 + 16));
}

uint64_t sub_10007B90C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_10007B930()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), "updateViewConstraints");
}

void sub_10007BA70()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  Class isa;

  v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy25FMPlusButtonTableViewCell_addButton];
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = sub_100053F2C(&qword_1005D2F10);
  v4 = swift_allocObject(v3, 64, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100481720;
  v5 = objc_msgSend(v1, "centerYAnchor");
  v6 = objc_msgSend(v0, "centerYAnchor");
  v7 = objc_msgSend(v5, "constraintEqualToAnchor:", v6);

  *(_QWORD *)(v4 + 32) = v7;
  v8 = objc_msgSend(v1, "leadingAnchor");
  v9 = objc_msgSend(v0, "leadingAnchor");
  v10 = objc_msgSend(v8, "constraintEqualToAnchor:", v9);

  *(_QWORD *)(v4 + 40) = v10;
  v11 = objc_msgSend(v1, "trailingAnchor");
  v12 = objc_msgSend(v0, "trailingAnchor");
  v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

  *(_QWORD *)(v4 + 48) = v13;
  v14 = objc_msgSend(v1, "heightAnchor");
  v15 = objc_msgSend(v0, "heightAnchor");
  v16 = objc_msgSend(v14, "constraintEqualToAnchor:", v15);

  *(_QWORD *)(v4 + 56) = v16;
  specialized Array._endMutation()(v17);
  sub_100048C64();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "activateConstraints:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

}

id sub_10007BCBC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPlusButtonTableViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMPlusButtonTableViewCell()
{
  return objc_opt_self(_TtC6FindMy25FMPlusButtonTableViewCell);
}

char *sub_10007BD1C(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  NSString v9;
  char *v10;
  uint64_t v11;
  char *v12;
  objc_super v14;
  __int128 v15[3];

  v3 = v2;
  v5 = OBJC_IVAR____TtC6FindMy25FMPlusButtonTableViewCell_addButton;
  v6 = qword_1005D1CB0;
  v7 = v3;
  if (v6 != -1)
    swift_once(&qword_1005D1CB0, sub_1001DCCA0);
  v15[0] = xmmword_1005F5160;
  v15[1] = *(_OWORD *)&qword_1005F5170;
  v15[2] = xmmword_1005F5180;
  v8 = objc_allocWithZone((Class)type metadata accessor for FMAddButton());
  *(_QWORD *)&v3[v5] = sub_1001DCD18(0, 0xE000000000000000, v15);

  if (a2)
  {
    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v9 = 0;
  }
  v14.receiver = v7;
  v14.super_class = (Class)type metadata accessor for FMPlusButtonTableViewCell();
  v10 = (char *)objc_msgSendSuper2(&v14, "initWithStyle:reuseIdentifier:", 3, v9);

  v11 = *(_QWORD *)&v10[OBJC_IVAR____TtC6FindMy25FMPlusButtonTableViewCell_addButton];
  v12 = v10;
  objc_msgSend(v12, "addSubview:", v11);
  sub_10007BA70();

  return v12;
}

CGFloat sub_10007BE54()
{
  CGFloat result;

  result = UITableViewAutomaticDimension;
  qword_1005F4D20 = *(_QWORD *)&UITableViewAutomaticDimension;
  return result;
}

BOOL sub_10007BE6C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_10007BE80()
{
  unsigned __int8 *v0;
  Swift::UInt v1;
  _QWORD v3[9];

  v1 = *v0;
  Hasher.init(_seed:)(v3, 0);
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_10007BEC4()
{
  unsigned __int8 *v0;

  Hasher._combine(_:)(*v0);
}

Swift::Int sub_10007BEEC(uint64_t a1)
{
  unsigned __int8 *v1;
  Swift::UInt v2;
  _QWORD v4[9];

  v2 = *v1;
  Hasher.init(_seed:)(v4, a1);
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

double sub_10007BF2C()
{
  double result;

  qword_1005D2FD0 = 0;
  qword_1005D2FD8 = *(_QWORD *)&UITableViewAutomaticDimension;
  result = 0.0;
  xmmword_1005D2FE0 = 0u;
  unk_1005D2FF0 = 0u;
  qword_1005D3000 = 0;
  return result;
}

uint64_t sub_10007BF58(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  id v39;
  char *v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  _QWORD aBlock[5];
  uint64_t v56;
  char v57[24];

  v53 = a2;
  v3 = type metadata accessor for FMFLocationAlertTriggerType(0);
  v51 = *(_QWORD *)(v3 - 8);
  v4 = __chkstk_darwin(v3);
  v50 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v7 = (char *)&v48 - v6;
  v8 = sub_100053F2C(&qword_1005D3318);
  v9 = __chkstk_darwin(v8);
  v52 = (uint64_t)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v12 = (char *)&v48 - v11;
  v13 = sub_100053F2C((uint64_t *)&unk_1005D3350);
  v14 = __chkstk_darwin(v13);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v18 = (char *)&v48 - v17;
  v19 = type metadata accessor for FMFLocation(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100007464(a1, (uint64_t)v18, (uint64_t *)&unk_1005D3350);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_1000051EC((uint64_t)v18, (uint64_t *)&unk_1005D3350);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v16, 1, 1, v19);
    v23 = v54;
    v24 = (uint64_t)&v54[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController__selectedLocation];
    swift_beginAccess(&v54[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController__selectedLocation], aBlock, 33, 0);
    sub_100099CDC((uint64_t)v16, v24, (uint64_t *)&unk_1005D3350);
    swift_endAccess(aBlock);
    v25 = type metadata accessor for TimeZone(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v12, 1, 1, v25);
    v26 = (uint64_t)&v23[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_selectedLocationTimeZone];
    swift_beginAccess(&v23[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_selectedLocationTimeZone], aBlock, 33, 0);
    sub_100099CDC((uint64_t)v12, v26, &qword_1005D3318);
    return swift_endAccess(aBlock);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v16, v22, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v16, 0, 1, v19);
    v49 = v22;
    v28 = v54;
    v29 = (uint64_t)&v54[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController__selectedLocation];
    swift_beginAccess(&v54[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController__selectedLocation], aBlock, 33, 0);
    sub_100099CDC((uint64_t)v16, v29, (uint64_t *)&unk_1005D3350);
    swift_endAccess(aBlock);
    v30 = v53;
    sub_100007464(v53, (uint64_t)v12, &qword_1005D3318);
    v31 = (uint64_t)&v28[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_selectedLocationTimeZone];
    swift_beginAccess(&v28[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_selectedLocationTimeZone], aBlock, 33, 0);
    sub_100099CDC((uint64_t)v12, v31, &qword_1005D3318);
    swift_endAccess(aBlock);
    v32 = &v28[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_triggerType];
    swift_beginAccess(&v28[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_triggerType], v57, 0, 0);
    v33 = v51;
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v7, v32, v3);
    v34 = v50;
    (*(void (**)(char *, _QWORD, uint64_t))(v33 + 104))(v50, enum case for FMFLocationAlertTriggerType.scheduled(_:), v3);
    v35 = sub_100008000(&qword_1005D33D0, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocationAlertTriggerType, (uint64_t)&protocol conformance descriptor for FMFLocationAlertTriggerType);
    LOBYTE(v32) = dispatch thunk of static Equatable.== infix(_:_:)(v7, v34, v3, v35);
    v36 = *(void (**)(char *, uint64_t))(v33 + 8);
    v36(v34, v3);
    v36(v7, v3);
    v37 = v52;
    sub_100007464(v30, v52, &qword_1005D3318);
    if ((v32 & 1) != 0
      && (v38 = type metadata accessor for TimeZone(0),
          (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v37, 1, v38) == 1))
    {
      sub_1000051EC(v37, &qword_1005D3318);
      v39 = sub_100089898();
      v40 = v49;
      v41 = FMFLocation.location.getter(v39);
      if (v41)
      {
        v42 = (void *)v41;
        v43 = objc_msgSend(objc_allocWithZone((Class)CLGeocoder), "init");
        v44 = swift_allocObject(&unk_100542130, 24, 7);
        *(_QWORD *)(v44 + 16) = v28;
        aBlock[4] = sub_100099D20;
        v56 = v44;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1003CB934;
        aBlock[3] = &unk_100542148;
        v45 = _Block_copy(aBlock);
        v46 = v56;
        v47 = v28;
        objc_msgSend(v43, "reverseGeocodeLocation:completionHandler:", v42, v45, swift_release(v46).n128_f64[0]);
        _Block_release(v45);

      }
      return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v40, v19);
    }
    else
    {
      sub_1000051EC(v37, &qword_1005D3318);
      return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v49, v19);
    }
  }
}

void sub_10007C4A4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  NSObject *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  NSObject *v38;
  _QWORD aBlock[5];
  uint64_t v40;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(NSObject **)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2 && a1)
  {
    if ((unint64_t)a1 >> 62)
    {
      if (a1 >= 0)
        v32 = a1 & 0xFFFFFFFFFFFFFF8;
      else
        v32 = a1;
      swift_bridgeObjectRetain(a1);
      v14 = (void *)_CocoaArrayWrapper.endIndex.getter(v32);
      if (v14)
      {
LABEL_5:
        if ((a1 & 0xC000000000000001) != 0)
        {
          v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
        }
        else
        {
          if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_24;
          }
          v15 = *(id *)(a1 + 32);
        }
        v14 = v15;
        swift_bridgeObjectRelease(a1);
        if (qword_1005D1DE8 == -1)
        {
LABEL_9:
          v38 = v7;
          v16 = type metadata accessor for Logger(0);
          v17 = sub_100056D88(v16, (uint64_t)qword_1005F5748);
          v18 = Logger.logObject.getter(v17);
          v19 = static os_log_type_t.default.getter(v18);
          if (os_log_type_enabled(v18, v19))
          {
            v20 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v20 = 0;
            _os_log_impl((void *)&_mh_execute_header, v18, v19, "FMLocationAlertViewController: reverse geocode updating timeZone", v20, 2u);
            swift_slowDealloc(v20, -1, -1);
          }

          v21 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
          v22 = (void *)static OS_dispatch_queue.main.getter(v21);
          v23 = swift_allocObject(&unk_100542180, 32, 7);
          *(_QWORD *)(v23 + 16) = v14;
          *(_QWORD *)(v23 + 24) = a3;
          aBlock[4] = sub_100099D54;
          v40 = v23;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_100037DF8;
          aBlock[3] = &unk_100542198;
          v24 = _Block_copy(aBlock);
          v25 = v40;
          v26 = v14;
          v27 = a3;
          swift_release(v25);
          static DispatchQoS.unspecified.getter(v28);
          aBlock[0] = _swiftEmptyArrayStorage;
          v29 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
          v30 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
          v31 = sub_1000555E4();
          dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v30, v31, v6, v29);
          OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v9, v24);
          _Block_release(v24);

          ((void (*)(char *, uint64_t))v38[1].isa)(v9, v6);
          (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
          return;
        }
LABEL_24:
        swift_once(&qword_1005D1DE8, sub_100005ADC);
        goto LABEL_9;
      }
    }
    else
    {
      v14 = *(void **)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a1);
      if (v14)
        goto LABEL_5;
    }
    swift_bridgeObjectRelease(a1);
  }
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v33 = type metadata accessor for Logger(0);
  v34 = sub_100056D88(v33, (uint64_t)qword_1005F5748);
  v38 = Logger.logObject.getter(v34);
  v35 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v38, v35))
  {
    v36 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v36 = 0;
    _os_log_impl((void *)&_mh_execute_header, v38, v35, "FMLocationAlertViewController: reverse geocode failed while getting directions", v36, 2u);
    swift_slowDealloc(v36, -1, -1);
  }

}

uint64_t sub_10007C8AC(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  id v20;
  void *v21;
  void (*v22)(_BYTE *, _BYTE *, uint64_t);
  void (*v23)(_BYTE *, _QWORD, uint64_t, uint64_t);
  unsigned int (*v24)(_BYTE *, uint64_t, uint64_t);
  uint64_t v25;
  unsigned int v26;
  void *v27;
  uint64_t v28;
  int64_t v29;
  Class isa;
  _BYTE v32[24];
  _BYTE v33[24];

  v4 = sub_100053F2C(&qword_1005D3318);
  v5 = __chkstk_darwin(v4);
  v7 = &v32[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __chkstk_darwin(v5);
  v10 = &v32[-v9];
  __chkstk_darwin(v8);
  v12 = &v32[-v11];
  v13 = type metadata accessor for TimeZone(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = &v32[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  v19 = &v32[-v18];
  v20 = objc_msgSend(a1, "timeZone");
  if (!v20)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
    return sub_1000051EC((uint64_t)v12, &qword_1005D3318);
  }
  v21 = v20;
  static TimeZone._unconditionallyBridgeFromObjectiveC(_:)();

  v22 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 32);
  v22(v12, v17, v13);
  v23 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v14 + 56);
  v23(v12, 0, 1, v13);
  v24 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48);
  if (v24(v12, 1, v13) == 1)
    return sub_1000051EC((uint64_t)v12, &qword_1005D3318);
  v22(v19, v12, v13);
  v25 = a2 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_selectedLocationTimeZone;
  swift_beginAccess(a2 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_selectedLocationTimeZone, v33, 0, 0);
  sub_100007464(v25, (uint64_t)v10, &qword_1005D3318);
  v26 = v24(v10, 1, v13);
  sub_1000051EC((uint64_t)v10, &qword_1005D3318);
  if (v26 == 1)
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 16))(v7, v19, v13);
    v23(v7, 0, 1, v13);
    swift_beginAccess(v25, v32, 33, 0);
    sub_100099CDC((uint64_t)v7, v25, &qword_1005D3318);
    swift_endAccess(v32);
    v27 = *(void **)(a2 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_tableView);
    v28 = sub_10007CB8C(1);
    v29 = sub_1000883F4(v28);
    type metadata accessor for IndexPath(0);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v27, "reloadRowsAtIndexPaths:withRowAnimation:", isa, 5, swift_bridgeObjectRelease(v29).n128_f64[0]);

    sub_100089898();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v14 + 8))(v19, v13);
}

uint64_t sub_10007CB8C(int a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(_BYTE *, char *, uint64_t);
  _BYTE *v18;
  void (*v19)(_BYTE *, _QWORD, uint64_t);
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  char v23;
  void (*v24)(_BYTE *, uint64_t);
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  __n128 v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  _BYTE v35[4];
  int v36;
  _BYTE *v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  unsigned int v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49[24];

  v3 = type metadata accessor for FMFLocationAlertTriggerType(0);
  v39 = *(_QWORD *)(v3 - 8);
  v4 = __chkstk_darwin(v3);
  v42 = &v35[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __chkstk_darwin(v4);
  v41 = &v35[-v7];
  v8 = __chkstk_darwin(v6);
  v38 = &v35[-v9];
  __chkstk_darwin(v8);
  v37 = &v35[-v10];
  result = (uint64_t)objc_msgSend(v1, "numberOfSectionsInTableView:", *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_tableView]);
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v12 = result;
    v36 = a1;
    if (result)
    {
      v44 = &v1[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_triggerType];
      swift_beginAccess(&v1[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_triggerType], v49, 0, 0);
      v13 = 0;
      v43 = enum case for FMFLocationAlertTriggerType.scheduled(_:);
      v14 = _swiftEmptyArrayStorage;
      v40 = v12;
      while (1)
      {
        if (v13 == 1)
        {
          LOBYTE(v15) = 1;
        }
        else if (v13)
        {
          v16 = v39;
          v17 = *(void (**)(_BYTE *, char *, uint64_t))(v39 + 16);
          v18 = v37;
          v17(v37, v44, v3);
          v19 = *(void (**)(_BYTE *, _QWORD, uint64_t))(v16 + 104);
          v20 = v3;
          v21 = v38;
          v19(v38, v43, v20);
          v22 = sub_100008000(&qword_1005D33D0, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocationAlertTriggerType, (uint64_t)&protocol conformance descriptor for FMFLocationAlertTriggerType);
          v23 = dispatch thunk of static Equatable.== infix(_:_:)(v18, v21, v20, v22);
          v24 = *(void (**)(_BYTE *, uint64_t))(v16 + 8);
          v25 = v21;
          v3 = v20;
          v24(v25, v20);
          v24(v18, v20);
          if ((v23 & 1) != 0)
          {
            v15 = 2;
          }
          else
          {
            v15 = 3;
            v12 = v40;
            if (v13 == 2)
              goto LABEL_20;
          }
          v17(v41, v44, v20);
          v19(v42, v43, v20);
          v26 = sub_100008000(&qword_1005D33D8, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocationAlertTriggerType, (uint64_t)&protocol conformance descriptor for FMFLocationAlertTriggerType);
          dispatch thunk of RawRepresentable.rawValue.getter(&v47, v20, v26);
          dispatch thunk of RawRepresentable.rawValue.getter(&v45, v20, v26);
          v27 = v48;
          v28 = v46;
          if (v47 == v45 && v48 == v46)
          {
            swift_bridgeObjectRelease_n(v48, 2);
            v24(v42, v3);
            v24(v41, v3);
            v12 = v40;
          }
          else
          {
            v29 = _stringCompareWithSmolCheck(_:_:expecting:)(v47, v48, v45, v46, 0);
            swift_bridgeObjectRelease(v27);
            v30 = swift_bridgeObjectRelease(v28);
            ((void (*)(_BYTE *, uint64_t, __n128))v24)(v42, v3, v30);
            v24(v41, v3);
            v12 = v40;
            if ((v29 & 1) == 0)
              goto LABEL_19;
          }
          if (v13 == v15)
          {
            LOBYTE(v15) = 2;
          }
          else
          {
            if (v13 != v15 + 1)
            {
LABEL_19:
              LOBYTE(v15) = 5;
              goto LABEL_20;
            }
            LOBYTE(v15) = 4;
          }
        }
        else
        {
          LOBYTE(v15) = 0;
        }
LABEL_20:
        if ((swift_isUniquelyReferenced_nonNull_native(v14) & 1) == 0)
          v14 = sub_100070338(0, v14[2] + 1, 1, v14);
        v32 = v14[2];
        v31 = v14[3];
        if (v32 >= v31 >> 1)
          v14 = sub_100070338((_QWORD *)(v31 > 1), v32 + 1, 1, v14);
        ++v13;
        v14[2] = v32 + 1;
        *((_BYTE *)v14 + v32 + 32) = v15;
        if (v12 == v13)
          goto LABEL_27;
      }
    }
    v14 = _swiftEmptyArrayStorage;
LABEL_27:
    result = sub_10010CB70(v36, (uint64_t)v14);
    if ((v33 & 1) == 0)
    {
      v34 = result;
      swift_bridgeObjectRelease(v14);
      return v34;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10007CF64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  id v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t, uint64_t, uint64_t);
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  id v95;
  NSString v96;
  id v97;
  id v98;
  NSString v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  void (*v114)(char *);
  char *v115;
  uint64_t v116;
  uint64_t (*v117)(char *);
  uint64_t v118;
  uint64_t result;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void (*v130)(uint64_t, uint64_t);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  int v145;
  char *v146;
  uint64_t v147;
  uint64_t (*v148)(char *, uint64_t, uint64_t);
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  __n128 v156;
  void (*v157)(char *, uint64_t);
  char *v158;
  uint64_t v159;
  uint64_t (*v160)(uint64_t, uint64_t, uint64_t);
  uint64_t v161;
  char v162;
  char v163;
  uint64_t v164;
  objc_class *v165;
  char *v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char v176;
  char *v177;
  char *v178;
  uint64_t v179;
  char *v180;
  __n128 v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  void (*v190)(char *, char *, uint64_t);
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  unint64_t v195;
  uint64_t v196;
  uint64_t v197;
  unint64_t v198;
  uint64_t v199;
  void *v200;
  uint64_t v201;
  void *v202;
  uint64_t v203;
  void *v204;
  id v205;
  id v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  id v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  _QWORD *v218;
  id v219;
  uint64_t (*v220)(uint64_t, uint64_t, uint64_t);
  __n128 v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  char v226;
  __n128 v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char **v231;
  uint64_t v232;
  id v233;
  id v234;
  uint64_t v235;
  uint64_t v236;
  void (*v237)(uint64_t, uint64_t, __n128);
  uint64_t v238;
  __n128 v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  int v244;
  char **v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  uint64_t v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  char *v256;
  char *v257;
  char *v258;
  char *v259;
  uint64_t v260;
  uint64_t v261;
  char *v262;
  uint64_t v263;
  void (*v264)(char *, uint64_t, uint64_t, uint64_t);
  char *v265;
  char *v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  char *v271;
  uint64_t v272;
  char *v273;
  char *v274;
  uint64_t v275;
  char *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  int v280;
  uint64_t v281;
  char *v282;
  char *v283;
  uint64_t v284;
  char *v285;
  char *v286;
  uint64_t v287;
  char *v288;
  char *v289;
  char *v290;
  uint64_t v291;
  uint64_t v292;
  char *v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  char *v300;
  uint64_t v301;
  uint64_t v302;
  void (*v303)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v304;
  char *v305;
  uint64_t (*v306)(uint64_t, uint64_t, uint64_t);
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  objc_super v319;
  char v320[8];

  v280 = a7;
  LODWORD(v290) = a6;
  v313 = a5;
  v297 = a4;
  v314 = a3;
  v307 = a2;
  v310 = a1;
  v8 = sub_100053F2C(&qword_1005D3318);
  __chkstk_darwin(v8);
  v265 = (char *)&v250 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v261 = type metadata accessor for UUID(0);
  v260 = *(_QWORD *)(v261 - 8);
  __chkstk_darwin(v261);
  v259 = (char *)&v250 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FMFLocation(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v256 = (char *)&v250 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v302 = type metadata accessor for FMFLocationAlertTriggerType(0);
  v301 = *(_QWORD *)(v302 - 8);
  __chkstk_darwin(v302);
  v271 = (char *)&v250 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FMFLocationAlertTarget(0);
  v311 = *(_QWORD *)(v15 - 8);
  v312 = v15;
  __chkstk_darwin(v15);
  v283 = (char *)&v250 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for FMFLocationAlert(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = __chkstk_darwin(v17);
  v285 = (char *)&v250 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v19);
  v273 = (char *)&v250 - v22;
  v272 = v23;
  __chkstk_darwin(v21);
  v286 = (char *)&v250 - v24;
  v25 = sub_100053F2C((uint64_t *)&unk_1005E5940);
  v26 = __chkstk_darwin(v25);
  v282 = (char *)&v250 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v281 = (uint64_t)&v250 - v28;
  v299 = type metadata accessor for FMFFriend(0);
  v278 = *(_QWORD *)(v299 - 8);
  v29 = __chkstk_darwin(v299);
  v252 = (char *)&v250 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v300 = (char *)&v250 - v31;
  v32 = sub_100053F2C(&qword_1005D3380);
  v268 = *(_QWORD *)(v32 - 8);
  v33 = __chkstk_darwin(v32);
  v251 = (uint64_t)&v250 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __chkstk_darwin(v33);
  v255 = (uint64_t)&v250 - v36;
  v37 = __chkstk_darwin(v35);
  v284 = (uint64_t)&v250 - v38;
  v39 = __chkstk_darwin(v37);
  v269 = (uint64_t)&v250 - v40;
  v41 = __chkstk_darwin(v39);
  v258 = (char *)&v250 - v42;
  v43 = __chkstk_darwin(v41);
  v279 = (uint64_t)&v250 - v44;
  v45 = __chkstk_darwin(v43);
  v254 = (uint64_t)&v250 - v46;
  v270 = v47;
  __chkstk_darwin(v45);
  v275 = (uint64_t)&v250 - v48;
  v49 = type metadata accessor for FMFSchedule.DaysOfWeek(0);
  __chkstk_darwin(v49);
  v274 = (char *)&v250 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v295 = type metadata accessor for Calendar.Component(0);
  v294 = *(_QWORD *)(v295 - 8);
  __chkstk_darwin(v295);
  v293 = (char *)&v250 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v287 = type metadata accessor for Calendar(0);
  v296 = *(_QWORD *)(v287 - 8);
  v52 = __chkstk_darwin(v287);
  v289 = (char *)&v250 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v52);
  v305 = (char *)&v250 - v54;
  v292 = type metadata accessor for Date(0);
  v291 = *(_QWORD *)(v292 - 8);
  v55 = __chkstk_darwin(v292);
  v288 = (char *)&v250 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v55);
  v306 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&v250 - v57);
  v267 = sub_100053F2C((uint64_t *)&unk_1005D3350);
  v58 = __chkstk_darwin(v267);
  v250 = (char *)&v250 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __chkstk_darwin(v58);
  v253 = (uint64_t)&v250 - v61;
  v62 = __chkstk_darwin(v60);
  v262 = (char *)&v250 - v63;
  v64 = __chkstk_darwin(v62);
  v257 = (char *)&v250 - v65;
  v66 = __chkstk_darwin(v64);
  v276 = (char *)&v250 - v67;
  v68 = __chkstk_darwin(v66);
  v266 = (char *)&v250 - v69;
  __chkstk_darwin(v68);
  v71 = (char *)&v250 - v70;
  v72 = &v7[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_delegate];
  *((_QWORD *)v72 + 1) = 0;
  swift_unknownObjectWeakInit(v72);
  v73 = (uint64_t)&v7[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_locationAlert];
  v308 = v18;
  v74 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  v304 = v17;
  v74(&v7[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_locationAlert], 1, 1, v17);
  v75 = OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_tableView;
  v76 = objc_allocWithZone((Class)UITableView);
  v77 = v7;
  *(_QWORD *)&v7[v75] = objc_msgSend(v76, "initWithFrame:style:", 1, 0.0, 0.0, 0.0, 0.0);
  v78 = OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_mapSnapshotter;
  v79 = type metadata accessor for FMMapSnapshotter();
  swift_allocObject(v79, 32, 7);
  *(_QWORD *)&v77[v78] = sub_1000EFEC0();
  v77[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_repeatingCellsExpanded] = 1;
  v77[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_triggerCellsExpanded] = 1;
  v77[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_locationCellsExpanded] = 1;
  v77[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_startTimeCellsExpanded] = 0;
  v77[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_endTimeCellsExpanded] = 0;
  v80 = (uint64_t)&v77[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_myCurrentLocation];
  v298 = v12;
  v81 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v81(&v77[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_myCurrentLocation], 1, 1, v11);
  v82 = (uint64_t)&v77[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_myCurrentUnshiftedLocation];
  v81(&v77[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_myCurrentUnshiftedLocation], 1, 1, v11);
  v81(&v77[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_customLocation], 1, 1, v11);
  v83 = OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_locationShifter;
  v84 = type metadata accessor for FMLocationShifter(0);
  swift_allocObject(v84, *(unsigned int *)(v84 + 48), *(unsigned __int16 *)(v84 + 52));
  *(_QWORD *)&v77[v83] = FMLocationShifter.init()();
  v309 = v11;
  v303 = v81;
  v81(&v77[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController__selectedLocation], 1, 1, v11);
  v85 = &v77[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_selectedLocationTimeZone];
  v86 = type metadata accessor for TimeZone(0);
  v87 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 56);
  v263 = v86;
  v264 = v87;
  ((void (*)(char *, uint64_t, uint64_t))v87)(v85, 1, 1);
  v88 = &v77[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_selectedRadius];
  *(_QWORD *)v88 = 0;
  v88[8] = 1;
  *(_QWORD *)&v77[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_imageCache] = &_swiftEmptyDictionarySingleton;
  v277 = OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_repeating;
  v77[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_repeating] = 0;
  (*(void (**)(char *, _QWORD, uint64_t))(v301 + 104))(&v77[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_triggerType], enum case for FMFLocationAlertTriggerType.leaving(_:), v302);
  *(_QWORD *)&v77[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_doneButton] = 0;
  *(_QWORD *)&v77[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_removeButton] = 0;
  *(_QWORD *)&v77[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_doneButtonItem] = 0;
  *(_QWORD *)&v77[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_removeCell] = 0;
  v77[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_cancelable] = (char)v290;
  *(_QWORD *)&v77[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendHandles] = v297;
  sub_100007464(v314, (uint64_t)&v77[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendForAlert], &qword_1005D3380);
  (*(void (**)(char *, uint64_t, uint64_t))(v311 + 16))(&v77[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_alertTarget], v307, v312);
  swift_beginAccess(v73, v320, 33, 0);
  sub_100098898(v313, v73);
  swift_endAccess(v320);
  v89 = v310;
  v90 = *(_QWORD *)(v310 + 48);
  v91 = swift_retain(v90);
  dispatch thunk of FMFManager.myLocation.getter(v91);
  swift_release(v90);
  swift_beginAccess(v80, v320, 33, 0);
  sub_100099CDC((uint64_t)v71, v80, (uint64_t *)&unk_1005D3350);
  swift_endAccess(v320);
  v92 = *(_QWORD *)(v89 + 48);
  v93 = swift_retain(v92);
  dispatch thunk of FMFManager.myUnshiftedLocation.getter(v93);
  swift_release(v92);
  swift_beginAccess(v82, v320, 33, 0);
  v290 = v71;
  sub_100099CDC((uint64_t)v71, v82, (uint64_t *)&unk_1005D3350);
  swift_endAccess(v320);
  v94 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
  *(_QWORD *)&v77[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_dateFormatter] = v94;
  v95 = v94;
  v96 = String._bridgeToObjectiveC()();
  objc_msgSend(v95, "setLocalizedDateFormatFromTemplate:", v96);

  v97 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
  *(_QWORD *)&v77[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_timeFormatterWithTimezone] = v97;
  v98 = v97;
  v99 = String._bridgeToObjectiveC()();
  objc_msgSend(v98, "setLocalizedDateFormatFromTemplate:", v99);

  v100 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
  *(_QWORD *)&v77[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_timeFormatterNoTimezone] = v100;
  objc_msgSend(v100, "setTimeStyle:", 1);
  v101 = type metadata accessor for FMFSchedule(0);
  v297 = ((uint64_t (*)(void))swift_allocBox)();
  v103 = v102;
  FMFSchedule.init()();
  FMFSchedule.startHour.setter(9);
  FMFSchedule.startMin.setter(0);
  FMFSchedule.endHour.setter(17);
  v104 = FMFSchedule.endMin.setter(0);
  v105 = Date.init()(v104);
  v106 = static Calendar.current.getter(v105);
  v107 = v289;
  static Calendar.current.getter(v106);
  v108 = v294;
  v109 = v293;
  v110 = v295;
  v111 = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v294 + 104))(v293, enum case for Calendar.Component.weekday(_:), v295);
  v112 = v288;
  Date.init()(v111);
  v113 = Calendar.component(_:from:)(v109, v112);
  v114 = *(void (**)(char *))(v291 + 8);
  v115 = v112;
  v116 = v292;
  v114(v115);
  (*(void (**)(char *, uint64_t))(v108 + 8))(v109, v110);
  v117 = *(uint64_t (**)(char *))(v296 + 8);
  v118 = v287;
  result = v117(v107);
  if (!__OFADD__(v113, 6))
  {
    ((void (*)(char *, uint64_t))v117)(v305, v118);
    ((void (*)(uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t))v114)(v306, v116);
    type metadata accessor for ScheduleDaysOfWeekCell(0);
    v120 = v274;
    sub_10007EA54((v113 + 6) % 7);
    FMFSchedule.daysOfWeek.setter(v120);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 16))(&v77[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_schedule], v103, v101);
    v77[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_editable] = v280 & 1;
    v121 = v314;
    v122 = v275;
    sub_100007464(v314, v275, &qword_1005D3380);
    v123 = v278;
    v124 = v299;
    v306 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v278 + 48);
    v125 = v306(v122, 1, v299);
    if ((_DWORD)v125 == 1)
    {
      sub_1000051EC(v122, &qword_1005D3380);
      v126 = v310;
      v127 = v304;
    }
    else
    {
      v128 = (uint64_t)v266;
      FMFFriend.location.getter(v125);
      v129 = v123;
      v130 = *(void (**)(uint64_t, uint64_t))(v123 + 8);
      v131 = v124;
      v130(v122, v124);
      v132 = v298;
      v133 = v309;
      v134 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v298 + 48))(v128, 1, v309);
      v126 = v310;
      v127 = v304;
      if ((_DWORD)v134 == 1)
      {
        sub_1000051EC(v128, (uint64_t *)&unk_1005D3350);
        v124 = v131;
        v123 = v129;
        v121 = v314;
      }
      else
      {
        v135 = FMFLocation.location.getter(v134);
        v136 = v128;
        v137 = (void *)v135;
        (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v136, v133);
        v124 = v131;
        v123 = v129;
        v121 = v314;
        if (v137)
        {

          v138 = v254;
          sub_100007464(v121, v254, &qword_1005D3380);
          v139 = v306(v138, 1, v124);
          v140 = (uint64_t)v276;
          if ((_DWORD)v139 != 1)
          {
            FMFFriend.location.getter(v139);
            v130(v138, v124);
            LODWORD(v305) = 1;
            v142 = v308;
            v141 = v309;
LABEL_11:
            sub_10005DAA0(v140, (uint64_t)&v77[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendLocation], (uint64_t *)&unk_1005D3350);
            v143 = v121;
            v144 = v279;
            sub_100007464(v143, v279, &qword_1005D3380);
            v145 = v306(v144, 1, v124);
            v146 = v300;
            if (v145 == 1)
            {
              sub_1000051EC(v144, &qword_1005D3380);
              v147 = (uint64_t)v282;
            }
            else
            {
              v148 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v123 + 32);
              v149 = v148(v300, v144, v124);
              v147 = (uint64_t)v282;
              if ((_DWORD)v305)
              {
                v150 = FMFFriend.identifier.getter(v149);
                v152 = v151;
                v153 = v258;
                sub_10009AF28(v150, v151, v258);
                v154 = v153;
                if (v306((uint64_t)v153, 1, v124) == 1)
                {
                  sub_1000051EC((uint64_t)v153, &qword_1005D3380);
                  v155 = (uint64_t)v257;
                  v303(v257, 1, 1, v309);
                  v156 = swift_bridgeObjectRelease(v152);
                  v157 = *(void (**)(char *, uint64_t))(v123 + 8);
                }
                else
                {
                  v158 = v252;
                  v148(v252, (uint64_t)v154, v124);
                  v155 = (uint64_t)v257;
                  dispatch thunk of FMFManager.unshiftedLocation(for:)(v158);
                  v157 = *(void (**)(char *, uint64_t))(v123 + 8);
                  v157(v158, v124);
                  v156 = swift_bridgeObjectRelease(v152);
                }
                v127 = v304;
                ((void (*)(char *, uint64_t, __n128))v157)(v300, v124, v156);
                sub_10005DAA0(v155, (uint64_t)&v77[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendUnshiftedLocation], (uint64_t *)&unk_1005D3350);
                v142 = v308;
LABEL_20:
                v159 = v281;
                sub_100007464(v313, v281, (uint64_t *)&unk_1005E5940);
                v160 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v142 + 48);
                v161 = v160(v159, 1, v127);
                if ((_DWORD)v161 == 1)
                {
                  sub_1000051EC(v159, (uint64_t *)&unk_1005E5940);
                  v162 = 0;
                }
                else
                {
                  v163 = FMFLocationAlert.repeating.getter(v161);
                  v142 = v308;
                  v164 = v159;
                  v162 = v163;
                  (*(void (**)(uint64_t, uint64_t))(v308 + 8))(v164, v127);
                }
                v77[v277] = v162 & 1;

                *(_QWORD *)&v77[OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator] = v126;
                v165 = (objc_class *)type metadata accessor for FMMediatedViewController();
                v319.receiver = v77;
                v319.super_class = v165;
                swift_retain(v126);
                v166 = (char *)objc_msgSendSuper2(&v319, "initWithNibName:bundle:", 0, 0);
                v167 = (uint64_t)&v166[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_locationAlert];
                swift_beginAccess(&v166[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_locationAlert], v320, 0, 0);
                sub_100007464(v167, v147, (uint64_t *)&unk_1005E5940);
                if (v160(v147, 1, v127) != 1)
                {
                  v175 = v286;
                  v303 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v142 + 32);
                  ((void (*)(char *, uint64_t, uint64_t))v303)(v286, v147, v127);
                  v176 = v166[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_editable];
                  v166[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_triggerCellsExpanded] = v176;
                  v166[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_locationCellsExpanded] = v176;
                  v166[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_startTimeCellsExpanded] = 0;
                  v166[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_endTimeCellsExpanded] = 0;
                  v166[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_repeatingCellsExpanded] = v176;
                  v305 = v166;
                  v177 = v166;
                  v178 = v271;
                  v179 = v142;
                  FMFLocationAlert.triggerType.getter(v177);
                  v300 = v177;
                  v180 = &v177[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_triggerType];
                  v181 = swift_beginAccess(&v177[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_triggerType], &v315, 33, 0);
                  (*(void (**)(char *, char *, uint64_t, __n128))(v301 + 40))(v180, v178, v302, v181);
                  swift_endAccess(&v315);
                  v306 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))swift_allocBox(v267);
                  v182 = v127;
                  v184 = v183;
                  FMFLocationAlert.location.getter(v306);
                  v185 = v298;
                  v186 = v309;
                  v187 = 0;
                  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v298 + 48))(v184, 1, v309))
                  {
                    v188 = v256;
                    v189 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v185 + 16))(v256, v184, v186);
                    v187 = FMFLocation.location.getter(v189);
                    (*(void (**)(char *, uint64_t))(v185 + 8))(v188, v186);
                  }
                  v190 = *(void (**)(char *, char *, uint64_t))(v179 + 16);
                  v191 = v273;
                  v190(v273, v175, v182);
                  v192 = v269;
                  sub_100007464(v314, v269, &qword_1005D3380);
                  v190(v285, v191, v182);
                  sub_100007464(v192, v284, &qword_1005D3380);
                  v193 = *(unsigned __int8 *)(v179 + 80);
                  v194 = (v193 + 24) & ~v193;
                  v195 = (v272 + v194 + 7) & 0xFFFFFFFFFFFFFFF8;
                  v196 = *(unsigned __int8 *)(v268 + 80);
                  v197 = (v196 + v195 + 8) & ~v196;
                  v198 = (v270 + v197 + 7) & 0xFFFFFFFFFFFFFFF8;
                  v199 = swift_allocObject(&unk_100541D20, v198 + 8, v193 | v196 | 7);
                  *(_QWORD *)(v199 + 16) = v306;
                  ((void (*)(uint64_t, char *, uint64_t))v303)(v199 + v194, v191, v182);
                  v200 = v300;
                  *(_QWORD *)(v199 + v195) = v300;
                  v201 = v192;
                  v202 = (void *)v187;
                  sub_10005DAA0(v201, v199 + v197, &qword_1005D3380);
                  v203 = v297;
                  *(_QWORD *)(v199 + v198) = v297;
                  v204 = v200;
                  if (v202)
                  {
                    v205 = v200;
                    swift_retain_n(v306, 2);
                    swift_retain_n(v203, 2);
                    v205;
                    v206 = v202;
                    v207 = v259;
                    v208 = UUID.init()(v206);
                    v209 = UUID.uuidString.getter(v208);
                    v211 = v210;
                    (*(void (**)(char *, uint64_t))(v260 + 8))(v207, v261);
                    v212 = type metadata accessor for FMLocationShiftingRequest(0);
                    swift_allocObject(v212, *(unsigned int *)(v212 + 48), *(unsigned __int16 *)(v212 + 52));
                    v213 = v206;
                    v214 = FMLocationShiftingRequest.init(identifier:location:)(v209, v211, v213);
                    v215 = sub_100053F2C(&qword_1005D2F10);
                    v216 = swift_allocObject(v215, 40, 7);
                    *(_OWORD *)(v216 + 16) = xmmword_100481B00;
                    *(_QWORD *)(v216 + 32) = v214;
                    v315 = v216;
                    specialized Array._endMutation()(v216);
                    v217 = v315;
                    v218 = (_QWORD *)swift_allocObject(&unk_100541D48, 40, 7);
                    v218[2] = v213;
                    v218[3] = sub_1000989F0;
                    v218[4] = v199;
                    v219 = v213;
                    swift_retain(v214);
                    swift_retain(v199);
                    dispatch thunk of FMLocationShifter.shift(requests:completion:)(v217, sub_10005EDC4, v218);
                    v220 = v306;
                    swift_release(v306);
                    swift_release(v199);

                    swift_release(v214);
                    swift_bridgeObjectRelease(v217);
                    v221 = swift_release(v218);
                    v126 = v310;
                    v222 = (uint64_t)v285;
                    v223 = v203;
                    v224 = v284;
                    v225 = (uint64_t)v220;
                  }
                  else
                  {
                    v233 = v200;
                    v225 = (uint64_t)v306;
                    swift_retain_n(v306, 2);
                    swift_retain_n(v203, 2);
                    v234 = v233;
                    v235 = (uint64_t)v285;
                    v236 = v284;
                    sub_10007EA94(0, v225, (uint64_t)v285, (uint64_t)v234, v284, v203);
                    swift_release(v225);
                    v221 = swift_release(v199);
                    v219 = 0;
                    v126 = v310;
                    v222 = v235;
                    v223 = v203;
                    v224 = v236;
                  }
                  v237 = *(void (**)(uint64_t, uint64_t, __n128))(v308 + 8);
                  v238 = v304;
                  v237(v222, v304, v221);

                  sub_1000051EC(v224, &qword_1005D3380);
                  v239 = swift_release(v223);
                  v237((uint64_t)v286, v238, v239);
                  swift_release(v225);
                  v171 = v307;
                  v174 = v314;
                  v166 = v305;
                  goto LABEL_47;
                }
                v168 = v166;
                sub_1000051EC(v147, (uint64_t *)&unk_1005E5940);
                v169 = v312;
                (*(void (**)(char *, _QWORD, uint64_t))(v311 + 104))(v283, enum case for FMFLocationAlertTarget.alertMe(_:), v312);
                v170 = sub_100008000((unint64_t *)&unk_1005E5A00, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocationAlertTarget, (uint64_t)&protocol conformance descriptor for FMFLocationAlertTarget);
                v171 = v307;
                dispatch thunk of RawRepresentable.rawValue.getter(&v315, v169, v170);
                dispatch thunk of RawRepresentable.rawValue.getter(&v317, v169, v170);
                v172 = v316;
                v173 = v318;
                if (v315 == v317 && v316 == v318)
                {
                  swift_bridgeObjectRelease_n(v316, 2);
                  (*(void (**)(char *, uint64_t))(v311 + 8))(v283, v312);
                  v174 = v314;
                }
                else
                {
                  v226 = _stringCompareWithSmolCheck(_:_:expecting:)(v315, v316, v317, v318, 0);
                  swift_bridgeObjectRelease(v172);
                  v227 = swift_bridgeObjectRelease(v173);
                  (*(void (**)(char *, uint64_t, __n128))(v311 + 8))(v283, v312, v227);
                  v174 = v314;
                  if ((v226 & 1) == 0)
                  {
                    v242 = (uint64_t)&v168[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_myCurrentLocation];
                    swift_beginAccess(&v168[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_myCurrentLocation], &v315, 0, 0);
                    v243 = v253;
                    sub_100007464(v242, v253, (uint64_t *)&unk_1005D3350);
                    v244 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v298 + 48))(v243, 1, v309);
                    sub_1000051EC(v243, (uint64_t *)&unk_1005D3350);
                    if (v244 != 1)
                    {
                      v248 = (uint64_t)v290;
                      sub_100007464(v242, (uint64_t)v290, (uint64_t *)&unk_1005D3350);
                      v249 = (uint64_t)v265;
                      v264(v265, 1, 1, v263);
                      sub_10007BF58(v248, v249);
                      sub_1000051EC(v248, (uint64_t *)&unk_1005D3350);
                      v247 = v249;
                      goto LABEL_46;
                    }
                    v223 = v297;
                    if ((v305 & 1) == 0)
                    {
LABEL_47:
                      sub_10007F9D8();
                      sub_100080378();
                      swift_release(v126);

                      sub_1000051EC(v313, (uint64_t *)&unk_1005E5940);
                      sub_1000051EC(v174, &qword_1005D3380);
                      (*(void (**)(uint64_t, uint64_t))(v311 + 8))(v171, v312);
                      swift_release(v223);
                      return (uint64_t)v166;
                    }
                    v228 = v251;
                    sub_100007464(v174, v251, &qword_1005D3380);
                    v229 = v299;
                    v230 = v306(v228, 1, v299);
                    if ((_DWORD)v230 == 1)
                    {
                      sub_1000051EC(v228, &qword_1005D3380);
                      v231 = &v282;
                      goto LABEL_35;
                    }
                    v245 = &v282;
LABEL_44:
                    v232 = (uint64_t)*(v245 - 32);
                    FMFFriend.location.getter(v230);
                    (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v228, v229);
                    goto LABEL_45;
                  }
                }
                if (!(_DWORD)v305)
                {
                  v240 = *(_QWORD *)(v126 + 48);
                  v241 = swift_retain(v240);
                  v232 = (uint64_t)v262;
                  dispatch thunk of FMFManager.myLocation.getter(v241);
                  swift_release(v240);
                  goto LABEL_45;
                }
                v228 = v255;
                sub_100007464(v174, v255, &qword_1005D3380);
                v229 = v299;
                v230 = v306(v228, 1, v299);
                if ((_DWORD)v230 == 1)
                {
                  sub_1000051EC(v228, &qword_1005D3380);
                  v231 = (char **)&v294;
LABEL_35:
                  v232 = (uint64_t)*(v231 - 32);
                  v303((char *)v232, 1, 1, v309);
LABEL_45:
                  v246 = (uint64_t)v265;
                  v264(v265, 1, 1, v263);
                  sub_10007BF58(v232, v246);
                  sub_1000051EC(v232, (uint64_t *)&unk_1005D3350);
                  v247 = v246;
LABEL_46:
                  sub_1000051EC(v247, &qword_1005D3318);
                  v223 = v297;
                  goto LABEL_47;
                }
                v245 = (char **)&v294;
                goto LABEL_44;
              }
              (*(void (**)(char *, uint64_t))(v123 + 8))(v146, v124);
              v127 = v304;
            }
            v303(&v77[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendUnshiftedLocation], 1, 1, v141);
            goto LABEL_20;
          }
          sub_1000051EC(v138, &qword_1005D3380);
          LODWORD(v305) = 1;
          v141 = v309;
          v303((char *)v140, 1, 1, v309);
LABEL_10:
          v142 = v308;
          goto LABEL_11;
        }
      }
    }
    v140 = (uint64_t)v276;
    v141 = v309;
    v303(v276, 1, 1, v309);
    LODWORD(v305) = 0;
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10007EA54(uint64_t a1)
{
  uint64_t result;

  switch(a1)
  {
    case 0:
      result = static FMFSchedule.DaysOfWeek.sunday.getter();
      break;
    case 1:
      result = static FMFSchedule.DaysOfWeek.monday.getter();
      break;
    case 2:
      result = static FMFSchedule.DaysOfWeek.tuesday.getter();
      break;
    case 3:
      result = static FMFSchedule.DaysOfWeek.wednesday.getter();
      break;
    case 4:
      result = static FMFSchedule.DaysOfWeek.thursday.getter();
      break;
    case 5:
      result = static FMFSchedule.DaysOfWeek.friday.getter();
      break;
    case 6:
      result = static FMFSchedule.DaysOfWeek.saturday.getter();
      break;
    default:
      result = static FMFSchedule.DaysOfWeek.none.getter();
      break;
  }
  return result;
}

uint64_t sub_10007EA94(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  BOOL v85;
  uint64_t v86;
  uint64_t v87;
  unsigned int v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char v93;
  void (*v94)(char *, uint64_t);
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(char *, uint64_t);
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unsigned int (*v105)(uint64_t, uint64_t, uint64_t);
  uint64_t v106;
  __n128 v107;
  char *v108;
  uint64_t v109;
  __n128 v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v117;
  id v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char v143[24];
  _BYTE v144[24];
  char v145[8];
  char v146[8];
  char v147[8];
  char v148[8];
  char v149[8];

  v141 = a6;
  v127 = a5;
  v139 = a4;
  v142 = a3;
  v8 = sub_100053F2C(&qword_1005D3318);
  __chkstk_darwin(v8);
  v130 = (char *)&v117 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100053F2C((uint64_t *)&unk_1005D3330);
  v11 = __chkstk_darwin(v10);
  v134 = (char *)&v117 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v133 = (char *)&v117 - v13;
  v129 = type metadata accessor for FMFSchedule(0);
  v128 = *(_QWORD *)(v129 - 8);
  __chkstk_darwin(v129);
  v131 = (char *)&v117 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100053F2C(&qword_1005D3380);
  v16 = __chkstk_darwin(v15);
  v124 = (uint64_t)&v117 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v137 = (uint64_t)&v117 - v18;
  v19 = type metadata accessor for FMFLocation(0);
  v20 = *(_QWORD *)(v19 - 8);
  __chkstk_darwin(v19);
  v119 = (char *)&v117 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = sub_100053F2C((uint64_t *)&unk_1005D3340);
  v22 = __chkstk_darwin(v138);
  v140 = (uint64_t)&v117 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v25 = (char *)&v117 - v24;
  v26 = sub_100053F2C(&qword_1005DC400);
  __chkstk_darwin(v26);
  v123 = (char *)&v117 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_100053F2C(&qword_1005D3370);
  __chkstk_darwin(v28);
  v30 = (char *)&v117 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_100053F2C((uint64_t *)&unk_1005D3350);
  v32 = __chkstk_darwin(v31);
  v132 = (uint64_t)&v117 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __chkstk_darwin(v32);
  v120 = (uint64_t)&v117 - v35;
  v36 = __chkstk_darwin(v34);
  v125 = (char *)&v117 - v37;
  v38 = __chkstk_darwin(v36);
  v126 = (uint64_t)&v117 - v39;
  v40 = __chkstk_darwin(v38);
  v136 = (uint64_t)&v117 - v41;
  v42 = __chkstk_darwin(v40);
  v121 = (uint64_t)&v117 - v43;
  v44 = __chkstk_darwin(v42);
  v46 = (char *)&v117 - v45;
  v47 = __chkstk_darwin(v44);
  v49 = (char *)&v117 - v48;
  v50 = __chkstk_darwin(v47);
  v52 = (char *)&v117 - v51;
  __chkstk_darwin(v50);
  v54 = (char *)&v117 - v53;
  v55 = swift_projectBox(a2);
  v122 = swift_projectBox(v141);
  v141 = v55;
  v135 = v20;
  if (a1)
  {
    v118 = a1;
    FMFLocationAlert.location.getter(v118);
    v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
    v57 = v56(v52, 1, v19);
    if ((_DWORD)v57 == 1)
    {
      sub_1000051EC((uint64_t)v52, (uint64_t *)&unk_1005D3350);
      v58 = type metadata accessor for FMFAddress(0);
      v59 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v30, 1, 1, v58);
    }
    else
    {
      FMFLocation.address.getter(v57);
      v59 = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v52, v19);
    }
    FMFLocationAlert.location.getter(v59);
    v60 = v56(v49, 1, v19);
    v61 = v123;
    if ((_DWORD)v60 == 1)
    {
      sub_1000051EC((uint64_t)v49, (uint64_t *)&unk_1005D3350);
      v62 = type metadata accessor for FMFLabel(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v61, 1, 1, v62);
      v55 = v141;
      v20 = v135;
    }
    else
    {
      FMFLocation.label.getter(v60);
      v20 = v135;
      (*(void (**)(char *, uint64_t))(v135 + 8))(v49, v19);
      v55 = v141;
    }
    FMFLocation.init(from:address:label:labels:)(v118, v30, v61, 0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v54, 0, 1, v19);
    swift_beginAccess(v55, v143, 1, 0);
    sub_100099CDC((uint64_t)v54, v55, (uint64_t *)&unk_1005D3350);
  }
  swift_beginAccess(v55, v149, 0, 0);
  sub_100007464(v55, (uint64_t)v46, (uint64_t *)&unk_1005D3350);
  v63 = v139 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_myCurrentLocation;
  swift_beginAccess(v139 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_myCurrentLocation, v148, 0, 0);
  v64 = (uint64_t)&v25[*(int *)(v138 + 48)];
  sub_100007464((uint64_t)v46, (uint64_t)v25, (uint64_t *)&unk_1005D3350);
  sub_100007464(v63, v64, (uint64_t *)&unk_1005D3350);
  v65 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  if (v65((uint64_t)v25, 1, v19) == 1)
  {
    sub_1000051EC((uint64_t)v46, (uint64_t *)&unk_1005D3350);
    if (v65(v64, 1, v19) == 1)
    {
      sub_1000051EC((uint64_t)v25, (uint64_t *)&unk_1005D3350);
      v66 = v137;
      sub_100007464(v127, v137, &qword_1005D3380);
      v67 = (uint64_t)v130;
      v68 = (uint64_t)v134;
      v69 = v129;
      v70 = v128;
LABEL_26:
      v90 = sub_1000051EC(v66, &qword_1005D3380);
      v89 = v139;
      goto LABEL_29;
    }
    goto LABEL_14;
  }
  v71 = v121;
  sub_100007464((uint64_t)v25, v121, (uint64_t *)&unk_1005D3350);
  if (v65(v64, 1, v19) == 1)
  {
    sub_1000051EC((uint64_t)v46, (uint64_t *)&unk_1005D3350);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v71, v19);
LABEL_14:
    sub_1000051EC((uint64_t)v25, (uint64_t *)&unk_1005D3340);
    v66 = v137;
    sub_100007464(v127, v137, &qword_1005D3380);
    v67 = (uint64_t)v130;
    v69 = v129;
    v70 = v128;
    goto LABEL_15;
  }
  v91 = v119;
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 32))(v119, v64, v19);
  v92 = sub_100008000(&qword_1005D3378, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocation, (uint64_t)&protocol conformance descriptor for FMFLocation);
  v93 = dispatch thunk of static Equatable.== infix(_:_:)(v71, v91, v19, v92);
  v94 = *(void (**)(char *, uint64_t))(v20 + 8);
  v94(v91, v19);
  sub_1000051EC((uint64_t)v46, (uint64_t *)&unk_1005D3350);
  v94((char *)v71, v19);
  sub_1000051EC((uint64_t)v25, (uint64_t *)&unk_1005D3350);
  v66 = v137;
  sub_100007464(v127, v137, &qword_1005D3380);
  v67 = (uint64_t)v130;
  v68 = (uint64_t)v134;
  v69 = v129;
  v70 = v128;
  if ((v93 & 1) != 0)
    goto LABEL_26;
LABEL_15:
  v72 = v141;
  swift_beginAccess(v141, v147, 0, 0);
  sub_100007464(v72, v136, (uint64_t *)&unk_1005D3350);
  v73 = v124;
  sub_100007464(v66, v124, &qword_1005D3380);
  v74 = type metadata accessor for FMFFriend(0);
  v75 = *(_QWORD *)(v74 - 8);
  v76 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v73, 1, v74);
  v77 = v67;
  if ((_DWORD)v76 == 1)
  {
    sub_1000051EC(v73, &qword_1005D3380);
    v78 = v126;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v135 + 56))(v126, 1, 1, v19);
  }
  else
  {
    v79 = v126;
    FMFFriend.location.getter(v76);
    v80 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
    v78 = v79;
    v80(v73, v74);
  }
  v81 = (uint64_t)v125;
  v82 = v140 + *(int *)(v138 + 48);
  v83 = v136;
  sub_100007464(v136, v140, (uint64_t *)&unk_1005D3350);
  v84 = v140;
  sub_100007464(v78, v82, (uint64_t *)&unk_1005D3350);
  v85 = v65(v84, 1, v19) == 1;
  v86 = v78;
  v87 = v137;
  if (v85)
  {
    sub_1000051EC(v86, (uint64_t *)&unk_1005D3350);
    v84 = v140;
    sub_1000051EC(v83, (uint64_t *)&unk_1005D3350);
    sub_1000051EC(v87, &qword_1005D3380);
    v88 = v65(v82, 1, v19);
    v89 = v139;
    v67 = v77;
    v68 = (uint64_t)v134;
    if (v88 == 1)
    {
      v90 = sub_1000051EC(v84, (uint64_t *)&unk_1005D3350);
      goto LABEL_29;
    }
  }
  else
  {
    sub_100007464(v84, v81, (uint64_t *)&unk_1005D3350);
    v67 = v77;
    if (v65(v82, 1, v19) != 1)
    {
      v95 = v81;
      v96 = v135;
      v97 = v119;
      (*(void (**)(char *, uint64_t, uint64_t))(v135 + 32))(v119, v82, v19);
      v98 = sub_100008000(&qword_1005D3378, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocation, (uint64_t)&protocol conformance descriptor for FMFLocation);
      LODWORD(v138) = dispatch thunk of static Equatable.== infix(_:_:)(v95, v97, v19, v98);
      v99 = v87;
      v100 = *(void (**)(char *, uint64_t))(v96 + 8);
      v100(v97, v19);
      sub_1000051EC(v126, (uint64_t *)&unk_1005D3350);
      sub_1000051EC(v136, (uint64_t *)&unk_1005D3350);
      sub_1000051EC(v99, &qword_1005D3380);
      v100((char *)v95, v19);
      v90 = sub_1000051EC(v140, (uint64_t *)&unk_1005D3350);
      v89 = v139;
      v68 = (uint64_t)v134;
      if ((v138 & 1) != 0)
        goto LABEL_29;
      goto LABEL_28;
    }
    sub_1000051EC(v126, (uint64_t *)&unk_1005D3350);
    sub_1000051EC(v136, (uint64_t *)&unk_1005D3350);
    sub_1000051EC(v87, &qword_1005D3380);
    (*(void (**)(uint64_t, uint64_t))(v135 + 8))(v81, v19);
    v89 = v139;
    v68 = (uint64_t)v134;
  }
  sub_1000051EC(v84, (uint64_t *)&unk_1005D3340);
LABEL_28:
  v101 = v141;
  swift_beginAccess(v141, v146, 0, 0);
  v102 = v120;
  sub_100007464(v101, v120, (uint64_t *)&unk_1005D3350);
  v103 = v89 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_customLocation;
  swift_beginAccess(v89 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_customLocation, v145, 33, 0);
  sub_100099CDC(v102, v103, (uint64_t *)&unk_1005D3350);
  v90 = swift_endAccess(v145);
LABEL_29:
  v104 = (uint64_t)v133;
  FMFLocationAlert.schedule.getter(v90);
  v105 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48);
  if (v105(v104, 1, v69) == 1)
  {
    v106 = v122;
    v107 = swift_beginAccess(v122, v145, 0, 0);
    v108 = v131;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v70 + 16))(v131, v106, v69, v107);
    sub_1000051EC(v104, (uint64_t *)&unk_1005D3330);
  }
  else
  {
    v108 = v131;
    (*(void (**)(char *, uint64_t, uint64_t))(v70 + 32))(v131, v104, v69);
  }
  v109 = v89 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_schedule;
  v110 = swift_beginAccess(v89 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_schedule, v144, 33, 0);
  (*(void (**)(uint64_t, char *, uint64_t, __n128))(v70 + 40))(v109, v108, v69, v110);
  swift_endAccess(v144);
  v111 = v141;
  swift_beginAccess(v141, v144, 0, 0);
  v112 = v111;
  v113 = v132;
  v114 = sub_100007464(v112, v132, (uint64_t *)&unk_1005D3350);
  FMFLocationAlert.schedule.getter(v114);
  if (v105(v68, 1, v69) == 1)
  {
    sub_1000051EC(v68, (uint64_t *)&unk_1005D3330);
    v115 = type metadata accessor for TimeZone(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 56))(v67, 1, 1, v115);
  }
  else
  {
    FMFSchedule.timeZone.getter();
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v68, v69);
  }
  sub_10007BF58(v113, v67);
  sub_1000051EC(v67, &qword_1005D3318);
  return sub_1000051EC(v113, (uint64_t *)&unk_1005D3350);
}

id sub_10007F904(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  objc_super v7;

  v7.receiver = a1;
  v7.super_class = (Class)type metadata accessor for FMLocationAlertViewController(0);
  return objc_msgSendSuper2(&v7, *a4, a3);
}

void sub_10007F9D8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  Swift::String v6;
  Swift::String v7;
  void *object;
  uint64_t v9;
  char *v10;
  NSString v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  unint64_t v22;
  unint64_t v23;
  const char *v24;
  unint64_t v25;
  Swift::String v26;
  void *v27;
  char *v28;
  NSString v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  id v41;
  Class isa;
  void *v43;
  id v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  NSString v48;
  id v49;
  void *v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t ObjCClassFromMetadata;
  NSString v55;
  uint64_t v56;
  uint64_t v57;
  NSString v58;
  uint64_t v59;
  uint64_t v60;
  NSString v61;
  uint64_t v62;
  uint64_t v63;
  NSString v64;
  uint64_t v65;
  uint64_t v66;
  NSString v67;
  uint64_t v68;
  uint64_t v69;
  NSString v70;
  uint64_t v71;
  uint64_t v72;
  NSString v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  NSString v79;
  id v80;
  void *v81;
  unint64_t v82;
  uint64_t v83;
  char *v84;
  unint64_t v85;
  uint64_t v86;
  char v87[24];
  Swift::String v88;

  v1 = v0;
  v2 = sub_100053F2C((uint64_t *)&unk_1005E5940);
  __chkstk_darwin(v2);
  v4 = (char *)&v83 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v0[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_cancelable] == 1)
  {
    v84 = 0;
    v85 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v85);
    v5 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v6._countAndFlagsBits = 0xD000000000000015;
    v88._countAndFlagsBits = 0xD000000000000027;
    v88._object = (void *)0x80000001004A7670;
    v6._object = (void *)0x80000001004A7650;
    v7._countAndFlagsBits = 0;
    v7._object = (void *)0xE000000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v88)._object;

    v9 = type metadata accessor for FMLocationAlertViewController(0);
    v86 = v9;
    v84 = v1;
    v10 = v1;
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    if (v9)
    {
      v12 = sub_100029550(&v84, v9);
      v13 = *(_QWORD *)(v9 - 8);
      __chkstk_darwin(v12);
      v15 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v13 + 16))(v15);
      v16 = _bridgeAnythingToObjectiveC<A>(_:)(v15, v9);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v9);
      sub_100029574(&v84);
    }
    else
    {
      v16 = 0;
    }
    v17 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithTitle:style:target:action:", v11, 0, v16, "cancel");

    swift_unknownObjectRelease(v16);
    v18 = objc_msgSend(v10, "navigationItem");
    objc_msgSend(v18, "setLeftBarButtonItem:animated:", v17, 1);

  }
  if (v1[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_editable] == 1)
  {
    v19 = (uint64_t)&v1[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_locationAlert];
    swift_beginAccess(&v1[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_locationAlert], v87, 0, 0);
    sub_100007464(v19, (uint64_t)v4, (uint64_t *)&unk_1005E5940);
    v20 = type metadata accessor for FMFLocationAlert(0);
    LODWORD(v19) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v4, 1, v20);
    sub_1000051EC((uint64_t)v4, (uint64_t *)&unk_1005E5940);
    v84 = 0;
    v85 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v85);
    if ((_DWORD)v19 == 1)
    {
      v21 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v22 = 0xD000000000000012;
      v23 = 0xD000000000000024;
      v82 = 0x80000001004A75D0;
      v24 = "LOCATION_ALERT_ADD";
    }
    else
    {
      v21 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v22 = 0xD000000000000013;
      v23 = 0xD000000000000025;
      v82 = 0x80000001004A7620;
      v24 = "LOCATION_ALERT_DONE";
    }
    v25 = (unint64_t)(v24 - 32) | 0x8000000000000000;
    v26._countAndFlagsBits = 0;
    v26._object = (void *)0xE000000000000000;
    v27 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v22, (Swift::String_optional)0, (NSBundle)v21, v26, *(Swift::String *)&v23)._object;

    v86 = type metadata accessor for FMLocationAlertViewController(0);
    v84 = v1;
    v28 = v1;
    v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v27);
    v30 = v86;
    if (v86)
    {
      v31 = sub_100029550(&v84, v86);
      v32 = *(_QWORD *)(v30 - 8);
      __chkstk_darwin(v31);
      v34 = (char *)&v83 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v32 + 16))(v34);
      v35 = _bridgeAnythingToObjectiveC<A>(_:)(v34, v30);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v30);
      sub_100029574(&v84);
    }
    else
    {
      v35 = 0;
    }
    v36 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithTitle:style:target:action:", v29, 2, v35, "saveAlert");

    swift_unknownObjectRelease(v35);
    objc_msgSend(v36, "setEnabled:", 0);
    v37 = objc_msgSend(v28, "navigationItem");
    v38 = sub_100053F2C(&qword_1005D2F10);
    v39 = swift_allocObject(v38, 40, 7);
    *(_OWORD *)(v39 + 16) = xmmword_100481B00;
    *(_QWORD *)(v39 + 32) = v36;
    v84 = (char *)v39;
    specialized Array._endMutation()(v39);
    v40 = v84;
    sub_100006C5C(0, &qword_1005D34A0, UIBarButtonItem_ptr);
    v41 = v36;
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v37, "setRightBarButtonItems:animated:", isa, 0, swift_bridgeObjectRelease(v40).n128_f64[0]);

    v43 = *(void **)&v28[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_doneButtonItem];
    *(_QWORD *)&v28[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_doneButtonItem] = v41;
    v44 = v41;

    sub_100089898();
  }
  v45 = objc_msgSend(v1, "navigationItem");
  sub_10008065C();
  v47 = v46;
  v48 = String._bridgeToObjectiveC()();
  objc_msgSend(v45, "setTitle:", v48, swift_bridgeObjectRelease(v47).n128_f64[0]);

  v49 = objc_msgSend(v1, "view");
  if (v49)
  {
    v50 = v49;
    v51 = objc_msgSend((id)objc_opt_self(UIColor), "systemGroupedBackgroundColor");
    objc_msgSend(v50, "setBackgroundColor:", v51);

    v52 = *(void **)&v1[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_tableView];
    objc_msgSend(v52, "_setSectionContentInsetFollowsLayoutMargins:", 1);
    objc_msgSend(v52, "contentInset");
    objc_msgSend(v52, "setContentInset:", -17.0);
    objc_msgSend(v52, "setDataSource:", v1);
    objc_msgSend(v52, "setDelegate:", v1);
    v53 = type metadata accessor for SelectionCell();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v53);
    v55 = String._bridgeToObjectiveC()();
    objc_msgSend(v52, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v55);

    v56 = type metadata accessor for TriggerTypeCell();
    v57 = swift_getObjCClassFromMetadata(v56);
    v58 = String._bridgeToObjectiveC()();
    objc_msgSend(v52, "registerClass:forCellReuseIdentifier:", v57, v58);

    v59 = type metadata accessor for FMPlusButtonTableViewCell();
    v60 = swift_getObjCClassFromMetadata(v59);
    v61 = String._bridgeToObjectiveC()();
    objc_msgSend(v52, "registerClass:forCellReuseIdentifier:", v60, v61);

    v62 = type metadata accessor for ScheduleTimeCell();
    v63 = swift_getObjCClassFromMetadata(v62);
    v64 = String._bridgeToObjectiveC()();
    objc_msgSend(v52, "registerClass:forCellReuseIdentifier:", v63, v64);

    v65 = type metadata accessor for ScheduleTimePickerCell(0);
    v66 = swift_getObjCClassFromMetadata(v65);
    v67 = String._bridgeToObjectiveC()();
    objc_msgSend(v52, "registerClass:forCellReuseIdentifier:", v66, v67);

    v68 = type metadata accessor for ScheduleDaysOfWeekCell(0);
    v69 = swift_getObjCClassFromMetadata(v68);
    v70 = String._bridgeToObjectiveC()();
    objc_msgSend(v52, "registerClass:forCellReuseIdentifier:", v69, v70);

    v71 = type metadata accessor for AlertLocationCell();
    v72 = swift_getObjCClassFromMetadata(v71);
    v73 = String._bridgeToObjectiveC()();
    objc_msgSend(v52, "registerClass:forCellReuseIdentifier:", v72, v73);

    v74 = sub_100006C5C(0, &qword_1005E27C0, UITableViewCell_ptr);
    v75 = swift_getObjCClassFromMetadata(v74);
    v84 = (char *)v74;
    v76 = sub_100053F2C(&qword_1005D3410);
    String.init<A>(describing:)(&v84, v76);
    v78 = v77;
    v79 = String._bridgeToObjectiveC()();
    objc_msgSend(v52, "registerClass:forCellReuseIdentifier:", v75, v79, swift_bridgeObjectRelease(v78).n128_f64[0]);

    v80 = objc_msgSend(v1, "view");
    if (v80)
    {
      v81 = v80;
      objc_msgSend(v80, "addSubview:", v52);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_100080378()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  Class isa;

  v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_tableView];
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = sub_100053F2C(&qword_1005D2F10);
  v3 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100481720;
  v4 = objc_msgSend(v1, "topAnchor");
  v5 = objc_msgSend(v0, "view");
  if (!v5)
  {
    __break(1u);
    goto LABEL_7;
  }
  v6 = v5;
  v7 = objc_msgSend(v5, "topAnchor");

  v8 = objc_msgSend(v4, "constraintEqualToAnchor:", v7);
  *(_QWORD *)(v3 + 32) = v8;
  v9 = objc_msgSend(v1, "leadingAnchor");
  v10 = objc_msgSend(v0, "view");
  if (!v10)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v11 = v10;
  v12 = objc_msgSend(v10, "leadingAnchor");

  v13 = objc_msgSend(v9, "constraintEqualToAnchor:", v12);
  *(_QWORD *)(v3 + 40) = v13;
  v14 = objc_msgSend(v1, "trailingAnchor");
  v15 = objc_msgSend(v0, "view");
  if (!v15)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v16 = v15;
  v17 = objc_msgSend(v15, "trailingAnchor");

  v18 = objc_msgSend(v14, "constraintEqualToAnchor:", v17);
  *(_QWORD *)(v3 + 48) = v18;
  v19 = objc_msgSend(v1, "bottomAnchor");
  v20 = objc_msgSend(v0, "view");
  if (v20)
  {
    v21 = v20;
    v22 = (void *)objc_opt_self(NSLayoutConstraint);
    v23 = objc_msgSend(v21, "bottomAnchor");

    v24 = objc_msgSend(v19, "constraintEqualToAnchor:", v23);
    *(_QWORD *)(v3 + 56) = v24;
    specialized Array._endMutation()(v25);
    sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v22, "activateConstraints:", isa, swift_bridgeObjectRelease(v3).n128_f64[0]);

    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_10008065C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  Swift::String v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t countAndFlagsBits;
  Swift::String v25;
  uint64_t result;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  Swift::String v30;

  v1 = sub_100053F2C(&qword_1005D3380);
  __chkstk_darwin(v1);
  v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FMFLocationAlertTarget(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_alertTarget, v4);
  v8 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v8 == enum case for FMFLocationAlertTarget.alertMe(_:))
  {
    v28 = 0;
    v29 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v29);
    v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v10 = 0xD000000000000038;
    v27 = 0x80000001004A7570;
    v11 = 0x80000001004A7540;
    v12 = 0xD000000000000026;
    goto LABEL_9;
  }
  if (v8 == enum case for FMFLocationAlertTarget.alertFriends(_:))
  {
    sub_100007464(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendForAlert, (uint64_t)v3, &qword_1005D3380);
    v13 = type metadata accessor for FMFFriend(0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v3, 1, v13) == 1)
    {
      sub_1000051EC((uint64_t)v3, &qword_1005D3380);
    }
    else
    {
      v15 = FMFFriend.properName.getter();
      v17 = v16;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v3, v13);
      if (v17)
      {
        v28 = 0;
        v29 = 0xE000000000000000;
        _StringGuts.grow(_:)(20);
        swift_bridgeObjectRelease(v29);
        v18 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v19._countAndFlagsBits = 0xD00000000000002ALL;
        v30._countAndFlagsBits = 0xD00000000000003CLL;
        v30._object = (void *)0x80000001004A7500;
        v19._object = (void *)0x80000001004A74D0;
        v20._countAndFlagsBits = 0;
        v20._object = (void *)0xE000000000000000;
        v21 = NSLocalizedString(_:tableName:bundle:value:comment:)(v19, (Swift::String_optional)0, (NSBundle)v18, v20, v30);

        v22 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
        v23 = swift_allocObject(v22, 72, 7);
        *(_OWORD *)(v23 + 16) = xmmword_100481740;
        *(_QWORD *)(v23 + 56) = &type metadata for String;
        *(_QWORD *)(v23 + 64) = sub_100071E88();
        *(_QWORD *)(v23 + 32) = v15;
        *(_QWORD *)(v23 + 40) = v17;
        countAndFlagsBits = String.init(format:_:)(v21._countAndFlagsBits, v21._object, v23);
        swift_bridgeObjectRelease(v21._object);
        return countAndFlagsBits;
      }
    }
    v28 = 0;
    v29 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v29);
    v9 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v12 = 0xD000000000000032;
    v10 = 0xD000000000000044;
    v27 = 0x80000001004A7480;
    v11 = 0x80000001004A7440;
LABEL_9:
    v25._countAndFlagsBits = 0;
    v25._object = (void *)0xE000000000000000;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v12, (Swift::String_optional)0, (NSBundle)v9, v25, *(Swift::String *)&v10)._countAndFlagsBits;

    return countAndFlagsBits;
  }
  result = _diagnoseUnexpectedEnumCase<A>(type:)(v4, v4);
  __break(1u);
  return result;
}

_QWORD *sub_100080A90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  _QWORD v22[4];
  _QWORD *v23;

  v1 = sub_100053F2C(&qword_1005D3380);
  __chkstk_darwin(v1);
  v3 = (char *)&v22[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendHandles);
  if (v4)
  {
    v5 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendHandles);
  }
  else
  {
    sub_100007464(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendForAlert, (uint64_t)v3, &qword_1005D3380);
    v6 = type metadata accessor for FMFFriend(0);
    v7 = *(_QWORD *)(v6 - 8);
    v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v3, 1, v6);
    if ((_DWORD)v8 == 1)
    {
      sub_1000051EC((uint64_t)v3, &qword_1005D3380);
      v5 = &_swiftEmptySetSingleton;
    }
    else
    {
      v5 = (void *)FMFFriend.contactHandles.getter(v8);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v3, v6);
    }
  }
  swift_bridgeObjectRetain(v4);
  v9 = sub_1000587F0((uint64_t)v5);
  swift_bridgeObjectRelease(v5);
  v10 = v9[2];
  v21 = v9;
  if (v10)
  {
    v11 = sub_1000517B8();
    v12 = v9 + 5;
    v13 = _swiftEmptyArrayStorage;
    do
    {
      v15 = *(v12 - 1);
      v14 = *v12;
      v22[2] = v15;
      v22[3] = v14;
      v22[0] = 64;
      v22[1] = 0xE100000000000000;
      swift_bridgeObjectRetain(v14);
      if ((StringProtocol.contains<A>(_:)(v22, &type metadata for String, &type metadata for String, v11, v11) & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v13);
        v23 = v13;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100111E28(0, v13[2] + 1, 1);
          v13 = v23;
        }
        v18 = v13[2];
        v17 = v13[3];
        if (v18 >= v17 >> 1)
        {
          sub_100111E28(v17 > 1, v18 + 1, 1);
          v13 = v23;
        }
        v13[2] = v18 + 1;
        v19 = &v13[2 * v18];
        v19[4] = v15;
        v19[5] = v14;
      }
      else
      {
        swift_bridgeObjectRelease(v14);
      }
      v12 += 2;
      --v10;
    }
    while (v10);
  }
  else
  {
    v13 = _swiftEmptyArrayStorage;
  }
  swift_release(v21);
  return v13;
}

_QWORD *sub_100080CC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  _QWORD v22[4];
  _QWORD *v23;

  v1 = sub_100053F2C(&qword_1005D3380);
  __chkstk_darwin(v1);
  v3 = (char *)&v22[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendHandles);
  if (v4)
  {
    v5 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendHandles);
  }
  else
  {
    sub_100007464(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendForAlert, (uint64_t)v3, &qword_1005D3380);
    v6 = type metadata accessor for FMFFriend(0);
    v7 = *(_QWORD *)(v6 - 8);
    v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v3, 1, v6);
    if ((_DWORD)v8 == 1)
    {
      sub_1000051EC((uint64_t)v3, &qword_1005D3380);
      v5 = &_swiftEmptySetSingleton;
    }
    else
    {
      v5 = (void *)FMFFriend.contactHandles.getter(v8);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v3, v6);
    }
  }
  swift_bridgeObjectRetain(v4);
  v9 = sub_1000587F0((uint64_t)v5);
  swift_bridgeObjectRelease(v5);
  v10 = v9[2];
  v21 = v9;
  if (v10)
  {
    v11 = sub_1000517B8();
    v12 = v9 + 5;
    v13 = _swiftEmptyArrayStorage;
    do
    {
      v15 = *(v12 - 1);
      v14 = *v12;
      v22[2] = v15;
      v22[3] = v14;
      v22[0] = 64;
      v22[1] = 0xE100000000000000;
      swift_bridgeObjectRetain(v14);
      if ((StringProtocol.contains<A>(_:)(v22, &type metadata for String, &type metadata for String, v11, v11) & 1) != 0)
      {
        swift_bridgeObjectRelease(v14);
      }
      else
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v13);
        v23 = v13;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100111E28(0, v13[2] + 1, 1);
          v13 = v23;
        }
        v18 = v13[2];
        v17 = v13[3];
        if (v18 >= v17 >> 1)
        {
          sub_100111E28(v17 > 1, v18 + 1, 1);
          v13 = v23;
        }
        v13[2] = v18 + 1;
        v19 = &v13[2 * v18];
        v19[4] = v15;
        v19[5] = v14;
      }
      v12 += 2;
      --v10;
    }
    while (v10);
  }
  else
  {
    v13 = _swiftEmptyArrayStorage;
  }
  swift_release(v21);
  return v13;
}

uint64_t sub_100080EF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  void (*v59)(char *, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(char *, uint64_t);
  unsigned int (*v82)(uint64_t, uint64_t, uint64_t);
  uint64_t v83;
  void (*v84)(char *, uint64_t, uint64_t);
  char *v85;
  uint64_t v86;
  unsigned int v87;
  uint64_t v88;
  char *v89;
  char *v90;
  char v91;
  uint64_t v92;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  char *v127;
  void (*v128)(char *, uint64_t);
  uint64_t v129;
  uint64_t v130;
  void (*v131)(char *, uint64_t);
  uint64_t (*v132)(char *, char *, uint64_t);
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char v137[8];
  char v138[8];

  v108 = a1;
  v107 = type metadata accessor for Calendar.SearchDirection(0);
  v123 = *(_QWORD *)(v107 - 8);
  __chkstk_darwin(v107);
  v122 = (char *)&v94 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = type metadata accessor for Calendar.RepeatedTimePolicy(0);
  v120 = *(_QWORD *)(v121 - 8);
  __chkstk_darwin(v121);
  v119 = (char *)&v94 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for Calendar.MatchingPolicy(0);
  v129 = *(_QWORD *)(v3 - 8);
  v130 = v3;
  __chkstk_darwin(v3);
  v118 = (char *)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  v6 = __chkstk_darwin(v5);
  v104 = (uint64_t)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v106 = (uint64_t)&v94 - v9;
  __chkstk_darwin(v8);
  v136 = (uint64_t)&v94 - v10;
  v11 = type metadata accessor for Date(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v102 = (char *)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v115 = (char *)&v94 - v16;
  __chkstk_darwin(v15);
  v109 = (char *)&v94 - v17;
  v124 = type metadata accessor for FMFSchedule.DaysOfWeek(0);
  v18 = *(_QWORD *)(v124 - 8);
  v19 = __chkstk_darwin(v124);
  v21 = (char *)&v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v126 = (char *)&v94 - v22;
  v114 = type metadata accessor for TimeZone(0);
  v113 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v112 = (char *)&v94 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = type metadata accessor for Calendar.Identifier(0);
  v97 = *(_QWORD *)(v98 - 8);
  __chkstk_darwin(v98);
  v96 = (char *)&v94 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for Calendar(0);
  v25 = *(_QWORD *)(v103 - 8);
  __chkstk_darwin(v103);
  v127 = (char *)&v94 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = type metadata accessor for FMFSchedule(0);
  v135 = *(_QWORD *)(v27 - 8);
  __chkstk_darwin(v27);
  v29 = (char *)&v94 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_100053F2C(&qword_1005D3318);
  v31 = __chkstk_darwin(v30);
  v95 = (char *)&v94 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v34 = (char *)&v94 - v33;
  v35 = sub_100053F2C((uint64_t *)&unk_1005D3400);
  __chkstk_darwin(v35);
  v37 = (char *)&v94 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for DateComponents(0);
  v99 = *(_QWORD *)(v100 - 8);
  __chkstk_darwin(v100);
  v39 = (char *)&v94 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = v12;
  v105 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v105(v108, 1, 1, v11);
  v101 = v25;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v37, 1, 1, v103);
  v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v113 + 56);
  v125 = v34;
  v40(v34, 1, 1, v114);
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)(v37, v34, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
    1,
    0,
    1,
    0,
    1,
    0,
    1,
    0,
    1,
    0,
    1);
  v41 = (char *)v128 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_schedule;
  swift_beginAccess((char *)v128 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_schedule, v138, 0, 0);
  v42 = v135;
  v43 = *(uint64_t (**)(char *, char *, uint64_t))(v135 + 16);
  v44 = v43(v29, v41, v27);
  v45 = FMFSchedule.startHour.getter(v44);
  v46 = *(void (**)(char *, uint64_t))(v42 + 8);
  v46(v29, v27);
  DateComponents.hour.setter(v45, 0);
  v132 = v43;
  v133 = v41;
  v47 = v43(v29, v41, v27);
  v48 = FMFSchedule.startMin.getter(v47);
  v134 = v29;
  v135 = v27;
  v131 = v46;
  v46(v29, v27);
  v49 = v113;
  v50 = v114;
  DateComponents.minute.setter(v48, 0);
  v51 = (uint64_t)v128 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_selectedLocationTimeZone;
  swift_beginAccess((char *)v128 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_selectedLocationTimeZone, v137, 0, 0);
  v52 = (uint64_t)v125;
  sub_100007464(v51, (uint64_t)v125, &qword_1005D3318);
  v125 = v39;
  DateComponents.timeZone.setter(v52);
  v53 = v97;
  v54 = v96;
  v55 = v98;
  (*(void (**)(char *, _QWORD, uint64_t))(v97 + 104))(v96, enum case for Calendar.Identifier.gregorian(_:), v98);
  Calendar.init(identifier:)(v54);
  v56 = v55;
  v57 = (uint64_t)v95;
  (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v56);
  sub_100007464(v51, v57, &qword_1005D3318);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v57, 1, v50) == 1)
  {
    v58 = v112;
    static TimeZone.current.getter();
    sub_1000051EC(v57, &qword_1005D3318);
  }
  else
  {
    v59 = *(void (**)(char *, uint64_t, uint64_t))(v49 + 32);
    v58 = v112;
    v59(v112, v57, v50);
  }
  v60 = Calendar.timeZone.setter(v58);
  LODWORD(v114) = enum case for Calendar.MatchingPolicy.nextTime(_:);
  LODWORD(v113) = enum case for Calendar.RepeatedTimePolicy.first(_:);
  LODWORD(v112) = enum case for Calendar.SearchDirection.forward(_:);
  v61 = 1;
  v62 = v124;
  v63 = v126;
  v64 = v107;
  v117 = v11;
  v111 = v18;
  v110 = v21;
  do
  {
    switch(v61)
    {
      case 1:
        static FMFSchedule.DaysOfWeek.sunday.getter(v60);
        break;
      case 2:
        static FMFSchedule.DaysOfWeek.monday.getter(v60);
        break;
      case 3:
        static FMFSchedule.DaysOfWeek.tuesday.getter(v60);
        break;
      case 4:
        static FMFSchedule.DaysOfWeek.wednesday.getter(v60);
        break;
      case 5:
        static FMFSchedule.DaysOfWeek.thursday.getter(v60);
        break;
      case 6:
        static FMFSchedule.DaysOfWeek.friday.getter(v60);
        break;
      case 7:
        static FMFSchedule.DaysOfWeek.saturday.getter(v60);
        break;
      default:
        static FMFSchedule.DaysOfWeek.none.getter(v60);
        break;
    }
    v65 = v134;
    v66 = v135;
    v67 = v132(v134, v133, v135);
    FMFSchedule.daysOfWeek.getter(v67);
    v131(v65, v66);
    v68 = sub_100008000(&qword_1005D3390, (uint64_t (*)(uint64_t))&type metadata accessor for FMFSchedule.DaysOfWeek, (uint64_t)&protocol conformance descriptor for FMFSchedule.DaysOfWeek);
    LOBYTE(v65) = dispatch thunk of SetAlgebra.isSuperset(of:)(v63, v62, v68);
    v69 = *(void (**)(char *, uint64_t))(v18 + 8);
    v69(v21, v62);
    if ((v65 & 1) == 0)
    {
      v60 = ((uint64_t (*)(char *, uint64_t))v69)(v63, v62);
      goto LABEL_6;
    }
    v128 = v69;
    v70 = (uint64_t)v125;
    v71 = DateComponents.weekday.setter(v61, 0);
    v72 = v115;
    Date.init()(v71);
    v73 = v118;
    (*(void (**)(char *, _QWORD, uint64_t))(v129 + 104))(v118, v114, v130);
    v74 = v120;
    v75 = v119;
    v76 = v121;
    (*(void (**)(char *, _QWORD, uint64_t))(v120 + 104))(v119, v113, v121);
    v78 = v122;
    v77 = v123;
    (*(void (**)(char *, _QWORD, uint64_t))(v123 + 104))(v122, v112, v64);
    Calendar.nextDate(after:matching:matchingPolicy:repeatedTimePolicy:direction:)(v72, v70, v73, v75, v78);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v78, v64);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v75, v76);
    v79 = v117;
    (*(void (**)(char *, uint64_t))(v129 + 8))(v73, v130);
    v80 = v116;
    v81 = *(void (**)(char *, uint64_t))(v116 + 8);
    v81(v72, v79);
    v82 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48);
    if (v82(v136, 1, v79) == 1)
    {
      v63 = v126;
      v62 = v124;
      v128(v126, v124);
      v60 = sub_1000051EC(v136, (uint64_t *)&unk_1005D3320);
LABEL_24:
      v18 = v111;
      v21 = v110;
      goto LABEL_6;
    }
    v83 = v108;
    v84 = *(void (**)(char *, uint64_t, uint64_t))(v80 + 32);
    v85 = v109;
    v84(v109, v136, v79);
    v86 = v106;
    sub_100007464(v83, v106, (uint64_t *)&unk_1005D3320);
    v87 = v82(v86, 1, v79);
    sub_1000051EC(v86, (uint64_t *)&unk_1005D3320);
    if (v87 == 1)
    {
      v63 = v126;
      v62 = v124;
      v128(v126, v124);
      sub_1000051EC(v83, (uint64_t *)&unk_1005D3320);
      v84((char *)v83, (uint64_t)v85, v79);
      v60 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v105)(v83, 0, 1, v79);
LABEL_23:
      v64 = v107;
      goto LABEL_24;
    }
    v88 = v104;
    sub_100007464(v83, v104, (uint64_t *)&unk_1005D3320);
    if (v82(v88, 1, v79) == 1)
    {
      v81(v109, v79);
      v63 = v126;
      v62 = v124;
      v128(v126, v124);
      v60 = sub_1000051EC(v88, (uint64_t *)&unk_1005D3320);
      goto LABEL_23;
    }
    v89 = v102;
    v84(v102, v88, v79);
    v90 = v109;
    v91 = static Date.< infix(_:_:)(v109, v89);
    v81(v89, v79);
    v62 = v124;
    v128(v126, v124);
    if ((v91 & 1) != 0)
    {
      v92 = v108;
      sub_1000051EC(v108, (uint64_t *)&unk_1005D3320);
      v84((char *)v92, (uint64_t)v90, v79);
      v60 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v105)(v92, 0, 1, v79);
    }
    else
    {
      v60 = ((uint64_t (*)(char *, uint64_t))v81)(v90, v79);
    }
    v64 = v107;
    v18 = v111;
    v21 = v110;
    v63 = v126;
LABEL_6:
    ++v61;
  }
  while (v61 != 8);
  (*(void (**)(char *, uint64_t))(v101 + 8))(v127, v103);
  return (*(uint64_t (**)(char *, uint64_t))(v99 + 8))(v125, v100);
}

void sub_100081B40()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  void (*v148)(uint64_t, char *, uint64_t);
  int v149;
  uint64_t v150;
  uint64_t *v151;
  uint64_t v152;
  uint64_t v153;
  void (*v154)(char *, uint64_t);
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  int v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  int v166;
  uint64_t v167;
  char *v168;
  _QWORD *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  void (*v177)(_QWORD, _QWORD, _QWORD);
  char *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  unsigned int (*v184)(uint64_t, uint64_t, uint64_t);
  uint64_t v185;
  void (*v186)(char *, uint64_t, uint64_t);
  unsigned int (*v187)(uint64_t, uint64_t, uint64_t);
  uint64_t v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  void (*v193)(char *, uint64_t);
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  void (*v204)(_QWORD, _QWORD, _QWORD);
  uint64_t v205;
  uint64_t v206;
  unsigned int v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  char *v211;
  char *v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  char v216;
  void (*v217)(char *, uint64_t);
  uint64_t v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t *v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  char *v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  char *v240;
  uint64_t v241;
  char *v242;
  char *v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  char *v251;
  _QWORD *v252;
  _QWORD *v253;
  char *v254;
  uint64_t v255;
  void (*v256)(_QWORD);
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  char v260;
  __n128 v261;
  void (*v262)(char *, uint64_t, __n128);
  uint64_t v263;
  uint64_t v264;
  char *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  NSObject *v272;
  os_log_type_t v273;
  uint8_t *v274;
  const char *v275;
  void (*v276)(char *, uint64_t, __n128);
  char *v277;
  uint64_t v278;
  char *v279;
  uint64_t v280;
  int v281;
  uint64_t v282;
  double v283;
  char *v284;
  uint64_t v285;
  unsigned int (*v286)(uint64_t, uint64_t, uint64_t);
  uint64_t v287;
  uint64_t v288;
  NSObject *v289;
  os_log_type_t v290;
  _BOOL4 v291;
  uint64_t v292;
  uint8_t *v293;
  uint64_t v294;
  int v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  NSObject *v301;
  os_log_type_t v302;
  uint8_t *v303;
  uint8_t *v304;
  uint64_t v305;
  int v306;
  uint64_t v307;
  uint64_t v308;
  void *v309;
  uint64_t v310;
  char *v311;
  uint64_t v312;
  uint64_t v313;
  void *v314;
  double v315;
  char *v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  char *v321;
  uint64_t v322;
  uint64_t v323;
  char *v324;
  uint64_t v325;
  uint64_t v326;
  void (*v327)(char *, uint64_t, uint64_t);
  char v328;
  _QWORD *v329;
  _QWORD *v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  char v335;
  __n128 v336;
  uint64_t v337;
  char *v338;
  uint64_t v339;
  uint64_t v340;
  char *v341;
  uint64_t v342;
  char *v343;
  uint64_t v344;
  char *v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  char *v349;
  uint64_t v350;
  uint64_t v351;
  char *v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  char *v357;
  _QWORD *v358;
  void (*v359)(char *, uint64_t, __n128);
  uint64_t v360;
  uint64_t v361;
  _QWORD *v362;
  uint64_t v363;
  __n128 v364;
  uint64_t v365;
  uint64_t v366;
  char *v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t (*v370)(uint64_t, uint64_t, uint64_t);
  int v371;
  int v372;
  char *v373;
  char *v374;
  uint64_t v375;
  NSObject *v376;
  os_log_type_t v377;
  uint8_t *v378;
  void *v379;
  uint64_t v380;
  void (*v381)(uint64_t, char *, uint64_t);
  uint64_t v382;
  char *v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t (*v386)(uint64_t, uint64_t, uint64_t);
  uint64_t v387;
  int v388;
  uint64_t v389;
  void (*v390)(char *, uint64_t, __n128);
  uint64_t v391;
  int v392;
  void (*v393)(char *, uint64_t);
  uint64_t v394;
  char *v395;
  uint64_t v396;
  uint64_t v397;
  void (*v398)(char *, uint64_t);
  uint64_t v399;
  char *v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  char *v409;
  uint64_t v410;
  uint64_t v411;
  char *v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  char *v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  char *v420;
  _QWORD *v421;
  _QWORD *v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  void (*v426)(char *, uint64_t, uint64_t);
  char v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  char v432;
  __n128 v433;
  uint64_t v434;
  char *v435;
  uint64_t v436;
  uint64_t v437;
  char *v438;
  uint64_t v439;
  uint64_t v440;
  char *v441;
  uint64_t v442;
  uint64_t v443;
  char *v444;
  uint64_t v445;
  uint64_t v446;
  char v447;
  void (*v448)(char *, uint64_t);
  __int16 v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  char *v454;
  uint64_t v455;
  uint64_t v456;
  char *v457;
  char *v458;
  uint64_t v459;
  uint64_t v460;
  char *v461;
  char *v462;
  char *v463;
  uint64_t v464;
  char *v465;
  char *v466;
  char *v467;
  uint64_t v468;
  char *v469;
  char *v470;
  uint64_t v471;
  char *v472;
  char *v473;
  char *v474;
  char *v475;
  char *v476;
  char *v477;
  uint64_t v478;
  char *v479;
  char *v480;
  uint64_t v481;
  char *v482;
  char *v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  char *v489;
  char *v490;
  char *v491;
  char *v492;
  char *v493;
  char *v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  char *v504;
  char *v505;
  char *v506;
  char *v507;
  char *v508;
  char *v509;
  char *v510;
  uint64_t v511;
  char *v512;
  char *v513;
  char *v514;
  char *v515;
  uint64_t v516;
  uint64_t v517;
  _QWORD *v518;
  char *v519;
  uint64_t v520;
  char *v521;
  uint64_t v522;
  _QWORD *v523;
  char *v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  unsigned int (*v528)(uint64_t, uint64_t, uint64_t);
  uint64_t v529;
  uint64_t v530;
  char *v531;
  void (*v532)(uint64_t, char *, uint64_t);
  uint64_t (*v533)(char *, uint64_t, uint64_t);
  char *v534;
  uint64_t v535;
  uint64_t v536;
  _BYTE v537[24];
  uint64_t v538;
  void **v539;
  _QWORD v540[6];
  void **v541;
  uint64_t v542;
  void **v543;
  uint64_t v544;
  char v545[24];
  char v546[24];
  char v547[32];

  v1 = v0;
  v2 = type metadata accessor for FMFLocationAlertTarget(0);
  v459 = *(_QWORD *)(v2 - 8);
  v460 = v2;
  __chkstk_darwin(v2);
  v477 = (char *)&v450 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v471 = sub_100053F2C((uint64_t *)&unk_1005D3340);
  v4 = __chkstk_darwin(v471);
  v456 = (uint64_t)&v450 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v491 = (char *)&v450 - v6;
  v7 = type metadata accessor for FMFLocationAlertAddressType(0);
  v495 = *(_QWORD *)(v7 - 8);
  v496 = v7;
  v8 = __chkstk_darwin(v7);
  v476 = (char *)&v450 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v494 = (char *)&v450 - v10;
  v11 = sub_100053F2C(&qword_1005D3380);
  v12 = __chkstk_darwin(v11);
  v458 = (char *)&v450 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v455 = (uint64_t)&v450 - v14;
  v15 = sub_100053F2C((uint64_t *)&unk_1005DF470);
  v16 = __chkstk_darwin(v15);
  v462 = (char *)&v450 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v490 = (char *)&v450 - v18;
  v19 = sub_100053F2C((uint64_t *)&unk_1005D3330);
  v20 = __chkstk_darwin(v19);
  v461 = (char *)&v450 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v489 = (char *)&v450 - v22;
  v23 = sub_100053F2C((uint64_t *)&unk_1005DF480);
  __chkstk_darwin(v23);
  v509 = (char *)&v450 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_100053F2C((uint64_t *)&unk_1005E5940);
  v26 = __chkstk_darwin(v25);
  v464 = (uint64_t)&v450 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __chkstk_darwin(v26);
  v453 = (uint64_t)&v450 - v29;
  __chkstk_darwin(v28);
  v514 = (char *)&v450 - v30;
  v522 = type metadata accessor for FMFLocationAlert(0);
  v520 = *(_QWORD *)(v522 - 8);
  v31 = __chkstk_darwin(v522);
  v454 = (char *)&v450 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __chkstk_darwin(v31);
  v508 = (char *)&v450 - v34;
  __chkstk_darwin(v33);
  v519 = (char *)&v450 - v35;
  v36 = type metadata accessor for TimeZone(0);
  v499 = *(_QWORD *)(v36 - 8);
  v500 = v36;
  __chkstk_darwin(v36);
  v479 = (char *)&v450 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v530 = type metadata accessor for FMFLocationAlertTriggerType(0);
  v528 = *(_QWORD **)(v530 - 8);
  v38 = __chkstk_darwin(v530);
  v472 = (char *)&v450 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __chkstk_darwin(v38);
  v473 = (char *)&v450 - v41;
  v42 = __chkstk_darwin(v40);
  v475 = (char *)&v450 - v43;
  v44 = __chkstk_darwin(v42);
  v506 = (char *)&v450 - v45;
  v46 = __chkstk_darwin(v44);
  v507 = (char *)&v450 - v47;
  v48 = __chkstk_darwin(v46);
  v513 = (char *)&v450 - v49;
  __chkstk_darwin(v48);
  v512 = (char *)&v450 - v50;
  v51 = sub_100053F2C(&qword_1005D3318);
  v52 = __chkstk_darwin(v51);
  v498 = (uint64_t)&v450 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v52);
  v501 = (uint64_t)&v450 - v54;
  v527 = type metadata accessor for FMFAddress(0);
  v526 = *(_QWORD *)(v527 - 8);
  __chkstk_darwin(v527);
  v492 = (char *)&v450 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v525 = sub_100053F2C(&qword_1005D3450);
  v56 = __chkstk_darwin(v525);
  v518 = (uint64_t *)((char *)&v450 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v56);
  v515 = (char *)&v450 - v58;
  v59 = sub_100053F2C(&qword_1005D3370);
  v60 = __chkstk_darwin(v59);
  v505 = (char *)&v450 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __chkstk_darwin(v60);
  v481 = (uint64_t)&v450 - v63;
  v64 = __chkstk_darwin(v62);
  v511 = (uint64_t)&v450 - v65;
  v66 = __chkstk_darwin(v64);
  v524 = (char *)&v450 - v67;
  v68 = __chkstk_darwin(v66);
  v493 = (char *)&v450 - v69;
  v70 = __chkstk_darwin(v68);
  v497 = (uint64_t)&v450 - v71;
  v72 = __chkstk_darwin(v70);
  v523 = (uint64_t *)((char *)&v450 - v73);
  v74 = __chkstk_darwin(v72);
  v516 = (uint64_t)&v450 - v75;
  __chkstk_darwin(v74);
  v531 = (char *)&v450 - v76;
  v77 = type metadata accessor for FMFLocation(0);
  v78 = *(_QWORD *)(v77 - 8);
  v79 = __chkstk_darwin(v77);
  v474 = (char *)&v450 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = __chkstk_darwin(v79);
  v470 = (char *)&v450 - v82;
  v83 = __chkstk_darwin(v81);
  v504 = (char *)&v450 - v84;
  v85 = __chkstk_darwin(v83);
  v467 = (char *)&v450 - v86;
  v87 = __chkstk_darwin(v85);
  v463 = (char *)&v450 - v88;
  v89 = __chkstk_darwin(v87);
  v469 = (char *)&v450 - v90;
  v91 = __chkstk_darwin(v89);
  v457 = (char *)&v450 - v92;
  v93 = __chkstk_darwin(v91);
  v466 = (char *)&v450 - v94;
  v95 = __chkstk_darwin(v93);
  v521 = (char *)&v450 - v96;
  v97 = __chkstk_darwin(v95);
  v510 = (char *)&v450 - v98;
  __chkstk_darwin(v97);
  v100 = (char *)&v450 - v99;
  v101 = sub_100053F2C((uint64_t *)&unk_1005D3350);
  v102 = __chkstk_darwin(v101);
  v451 = (uint64_t)&v450 - ((v103 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = __chkstk_darwin(v102);
  v517 = (uint64_t)&v450 - v105;
  v106 = __chkstk_darwin(v104);
  v452 = (uint64_t)&v450 - v107;
  v108 = __chkstk_darwin(v106);
  v468 = (uint64_t)&v450 - v109;
  v110 = __chkstk_darwin(v108);
  v488 = (uint64_t)&v450 - v111;
  v112 = __chkstk_darwin(v110);
  v484 = (uint64_t)&v450 - v113;
  v114 = __chkstk_darwin(v112);
  v487 = (uint64_t)&v450 - v115;
  v116 = __chkstk_darwin(v114);
  v486 = (uint64_t)&v450 - v117;
  v118 = __chkstk_darwin(v116);
  v478 = (uint64_t)&v450 - v119;
  v120 = __chkstk_darwin(v118);
  v502 = (uint64_t)&v450 - v121;
  v122 = __chkstk_darwin(v120);
  v503 = (uint64_t)&v450 - v123;
  v124 = __chkstk_darwin(v122);
  v480 = (char *)&v450 - v125;
  v126 = __chkstk_darwin(v124);
  v482 = (char *)&v450 - v127;
  v128 = __chkstk_darwin(v126);
  v483 = (char *)&v450 - v129;
  v130 = __chkstk_darwin(v128);
  v485 = (uint64_t)&v450 - v131;
  v132 = __chkstk_darwin(v130);
  v134 = (char *)&v450 - v133;
  v135 = __chkstk_darwin(v132);
  v137 = (char *)&v450 - v136;
  v138 = __chkstk_darwin(v135);
  v140 = (char *)&v450 - v139;
  __chkstk_darwin(v138);
  v142 = (char *)&v450 - v141;
  v143 = sub_100053F2C(&qword_1005DC400);
  v144 = __chkstk_darwin(v143);
  v465 = (char *)&v450 - ((v145 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v144);
  v147 = (char *)&v450 - v146;
  v534 = v1;
  v148 = &v1[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController__selectedLocation];
  swift_beginAccess((void (*)(uint64_t, char *, uint64_t))v148, v547, 0, 0);
  v532 = (void (*)(uint64_t, char *, uint64_t))v148;
  sub_100007464((uint64_t)v148, (uint64_t)v142, (uint64_t *)&unk_1005D3350);
  v533 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v78 + 48);
  v149 = v533(v142, 1, v77);
  v529 = v78;
  v535 = v77;
  if (v149)
  {
    v150 = v77;
    v151 = (uint64_t *)&unk_1005D3350;
    v152 = (uint64_t)v142;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v100, v142, v77);
    v153 = sub_1000051EC((uint64_t)v142, (uint64_t *)&unk_1005D3350);
    FMFLocation.label.getter(v153);
    v154 = *(void (**)(char *, uint64_t))(v78 + 8);
    v150 = v77;
    v154(v100, v77);
    v155 = type metadata accessor for FMFLabel(0);
    v156 = *(_QWORD *)(v155 - 8);
    v157 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v156 + 48))(v147, 1, v155);
    if ((_DWORD)v157 != 1)
    {
      v510 = (char *)FMFLabel.value.getter(v157);
      v531 = v168;
      (*(void (**)(char *, uint64_t))(v156 + 8))(v147, v155);
      goto LABEL_10;
    }
    v151 = &qword_1005DC400;
    v152 = (uint64_t)v147;
  }
  sub_1000051EC(v152, v151);
  sub_100007464((uint64_t)v532, (uint64_t)v140, (uint64_t *)&unk_1005D3350);
  v158 = v533(v140, 1, v150);
  v159 = (uint64_t)v531;
  if (v158)
  {
    sub_1000051EC((uint64_t)v140, (uint64_t *)&unk_1005D3350);
    v510 = 0;
    v531 = 0;
LABEL_10:
    v160 = v529;
    v165 = v527;
    v167 = (uint64_t)v515;
    goto LABEL_16;
  }
  v160 = v529;
  v161 = v510;
  v162 = v535;
  (*(void (**)(char *, char *, uint64_t))(v529 + 16))(v510, v140, v535);
  v163 = sub_1000051EC((uint64_t)v140, (uint64_t *)&unk_1005D3350);
  FMFLocation.address.getter(v163);
  (*(void (**)(char *, uint64_t))(v160 + 8))(v161, v162);
  v164 = v526;
  v165 = v527;
  v166 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v526 + 48))(v159, 1, v527);
  v167 = (uint64_t)v515;
  if (v166 == 1)
  {
    sub_1000051EC(v159, &qword_1005D3370);
  }
  else
  {
    v169 = (_QWORD *)FMFAddress.formattedAddressLines.getter();
    (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v159, v165);
    if (v169)
    {
      if (v169[2])
      {
        v170 = (char *)v169[5];
        v510 = (char *)v169[4];
        v531 = v170;
        swift_bridgeObjectRetain(v170);
        swift_bridgeObjectRelease(v169);
        goto LABEL_16;
      }
      swift_bridgeObjectRelease(v169);
    }
  }
  v510 = 0;
  v531 = 0;
LABEL_16:
  sub_100007464((uint64_t)v532, (uint64_t)v137, (uint64_t *)&unk_1005D3350);
  if (v533(v137, 1, v535))
  {
    sub_1000051EC((uint64_t)v137, (uint64_t *)&unk_1005D3350);
    v171 = v526;
    v172 = v516;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v526 + 56))(v516, 1, 1, v165);
  }
  else
  {
    v173 = v521;
    v174 = v535;
    (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v521, v137, v535);
    v175 = sub_1000051EC((uint64_t)v137, (uint64_t *)&unk_1005D3350);
    v172 = v516;
    FMFLocation.address.getter(v175);
    (*(void (**)(char *, uint64_t))(v160 + 8))(v173, v174);
    v171 = v526;
  }
  v176 = &v534[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_myCurrentLocation];
  swift_beginAccess(&v534[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_myCurrentLocation], v546, 0, 0);
  v516 = (uint64_t)v176;
  sub_100007464((uint64_t)v176, (uint64_t)v134, (uint64_t *)&unk_1005D3350);
  if (v533(v134, 1, v535))
  {
    sub_1000051EC((uint64_t)v134, (uint64_t *)&unk_1005D3350);
    v177 = (void (*)(_QWORD, _QWORD, _QWORD))v523;
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v171 + 56))(v523, 1, 1, v165);
  }
  else
  {
    v178 = v521;
    v179 = v171;
    v180 = v535;
    (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v521, v134, v535);
    v181 = sub_1000051EC((uint64_t)v134, (uint64_t *)&unk_1005D3350);
    v177 = (void (*)(_QWORD, _QWORD, _QWORD))v523;
    FMFLocation.address.getter(v181);
    v182 = v180;
    v171 = v179;
    (*(void (**)(char *, uint64_t))(v160 + 8))(v178, v182);
  }
  v183 = v167 + *(int *)(v525 + 48);
  sub_100007464(v172, v167, &qword_1005D3370);
  sub_100007464((uint64_t)v177, v183, &qword_1005D3370);
  v184 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v171 + 48);
  if (v184(v167, 1, v165) == 1)
  {
    sub_1000051EC((uint64_t)v177, &qword_1005D3370);
    v165 = v527;
    sub_1000051EC(v172, &qword_1005D3370);
    if (v184(v183, 1, v165) == 1)
    {
      sub_1000051EC(v167, &qword_1005D3370);
      goto LABEL_29;
    }
    goto LABEL_27;
  }
  v185 = v497;
  sub_100007464(v167, v497, &qword_1005D3370);
  if (v184(v183, 1, v165) == 1)
  {
    sub_1000051EC((uint64_t)v523, &qword_1005D3370);
    sub_1000051EC(v172, &qword_1005D3370);
    (*(void (**)(uint64_t, uint64_t))(v171 + 8))(v185, v165);
LABEL_27:
    sub_1000051EC(v167, &qword_1005D3450);
    goto LABEL_31;
  }
  v186 = *(void (**)(char *, uint64_t, uint64_t))(v171 + 32);
  v187 = v184;
  v188 = v171;
  v189 = v492;
  v186(v492, v183, v165);
  v190 = sub_100008000(&qword_1005D3458, (uint64_t (*)(uint64_t))&type metadata accessor for FMFAddress, (uint64_t)&protocol conformance descriptor for FMFAddress);
  LODWORD(v515) = dispatch thunk of static Equatable.== infix(_:_:)(v185, v189, v165, v190);
  v191 = v167;
  v192 = v160;
  v193 = *(void (**)(char *, uint64_t))(v188 + 8);
  v194 = v189;
  v171 = v188;
  v184 = v187;
  v193(v194, v165);
  sub_1000051EC((uint64_t)v523, &qword_1005D3370);
  sub_1000051EC(v172, &qword_1005D3370);
  v193((char *)v185, v527);
  v160 = v192;
  v165 = v527;
  sub_1000051EC(v191, &qword_1005D3370);
  if ((v515 & 1) != 0)
  {
LABEL_29:
    swift_bridgeObjectRelease(v531);
    v195 = v485;
    sub_100007464(v516, v485, (uint64_t *)&unk_1005D3350);
    if (v533((char *)v195, 1, v535))
    {
      sub_1000051EC(v195, (uint64_t *)&unk_1005D3350);
      v196 = (uint64_t)v483;
    }
    else
    {
      v219 = v466;
      v220 = v535;
      (*(void (**)(char *, uint64_t, uint64_t))(v160 + 16))(v466, v195, v535);
      v221 = sub_1000051EC(v195, (uint64_t *)&unk_1005D3350);
      v222 = (uint64_t)v465;
      FMFLocation.label.getter(v221);
      (*(void (**)(char *, uint64_t))(v160 + 8))(v219, v220);
      v223 = type metadata accessor for FMFLabel(0);
      v224 = *(_QWORD *)(v223 - 8);
      v225 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v224 + 48))(v222, 1, v223);
      v196 = (uint64_t)v483;
      if ((_DWORD)v225 != 1)
      {
        v510 = (char *)FMFLabel.value.getter(v225);
        v209 = v240;
        (*(void (**)(uint64_t, uint64_t))(v224 + 8))(v222, v223);
        v160 = v529;
        goto LABEL_56;
      }
      sub_1000051EC(v222, &qword_1005DC400);
      v160 = v529;
      v165 = v527;
    }
    sub_100007464(v516, v196, (uint64_t *)&unk_1005D3350);
    if (v533((char *)v196, 1, v535))
    {
      v226 = (uint64_t *)&unk_1005D3350;
      v227 = v196;
    }
    else
    {
      v236 = v457;
      v237 = v535;
      (*(void (**)(char *, uint64_t, uint64_t))(v160 + 16))(v457, v196, v535);
      v238 = sub_1000051EC(v196, (uint64_t *)&unk_1005D3350);
      FMFLocation.address.getter(v238);
      v239 = v493;
      (*(void (**)(char *, uint64_t))(v160 + 8))(v236, v237);
      if (v184((uint64_t)v239, 1, v165) != 1)
      {
        v357 = v239;
        v358 = (_QWORD *)FMFAddress.formattedAddressLines.getter();
        (*(void (**)(char *, uint64_t))(v171 + 8))(v357, v165);
        if (v358)
        {
          v208 = (uint64_t)v514;
          v241 = (uint64_t)v482;
          if (v358[2])
          {
            v209 = (char *)v358[5];
            v510 = (char *)v358[4];
            swift_bridgeObjectRetain(v209);
            swift_bridgeObjectRelease(v358);
          }
          else
          {
            swift_bridgeObjectRelease(v358);
            v510 = 0;
            v209 = 0;
          }
          goto LABEL_57;
        }
        goto LABEL_54;
      }
      v226 = &qword_1005D3370;
      v227 = (uint64_t)v239;
    }
    sub_1000051EC(v227, v226);
LABEL_54:
    v510 = 0;
    v209 = 0;
LABEL_56:
    v208 = (uint64_t)v514;
    v241 = (uint64_t)v482;
LABEL_57:
    v242 = &v534[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_myCurrentUnshiftedLocation];
    swift_beginAccess(&v534[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_myCurrentUnshiftedLocation], v537, 0, 0);
    sub_100007464((uint64_t)v242, v241, (uint64_t *)&unk_1005D3350);
    if (v533((char *)v241, 1, v535) == 1)
    {
      sub_1000051EC(v241, (uint64_t *)&unk_1005D3350);
    }
    else
    {
      v243 = v209;
      v244 = v469;
      v245 = v535;
      (*(void (**)(char *, uint64_t, uint64_t))(v160 + 32))(v469, v241, v535);
      v246 = (uint64_t)v480;
      (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v480, v244, v245);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v160 + 56))(v246, 0, 1, v245);
      v247 = &v534[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_selectedLocationTimeZone];
      swift_beginAccess(&v534[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_selectedLocationTimeZone], &v536, 0, 0);
      v248 = (uint64_t)v247;
      v249 = v501;
      sub_100007464(v248, v501, &qword_1005D3318);
      sub_10007BF58(v246, v249);
      sub_1000051EC(v249, &qword_1005D3318);
      sub_1000051EC(v246, (uint64_t *)&unk_1005D3350);
      v250 = v244;
      v209 = v243;
      (*(void (**)(char *, uint64_t))(v160 + 8))(v250, v245);
    }
    goto LABEL_60;
  }
LABEL_31:
  v197 = v503;
  sub_100007464((uint64_t)v532, v503, (uint64_t *)&unk_1005D3350);
  if (v533((char *)v197, 1, v535))
  {
    sub_1000051EC(v197, (uint64_t *)&unk_1005D3350);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v171 + 56))(v524, 1, 1, v165);
  }
  else
  {
    v198 = v521;
    v199 = v535;
    (*(void (**)(char *, uint64_t, uint64_t))(v160 + 16))(v521, v197, v535);
    v200 = sub_1000051EC(v197, (uint64_t *)&unk_1005D3350);
    FMFLocation.address.getter(v200);
    (*(void (**)(char *, uint64_t))(v160 + 8))(v198, v199);
  }
  v201 = v502;
  sub_100007464((uint64_t)&v534[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendLocation], v502, (uint64_t *)&unk_1005D3350);
  v202 = v533((char *)v201, 1, v535);
  v203 = v511;
  if ((_DWORD)v202 == 1)
  {
    sub_1000051EC(v201, (uint64_t *)&unk_1005D3350);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v171 + 56))(v203, 1, 1, v165);
  }
  else
  {
    FMFLocation.address.getter(v202);
    (*(void (**)(uint64_t, uint64_t))(v160 + 8))(v201, v535);
  }
  v204 = (void (*)(_QWORD, _QWORD, _QWORD))v518;
  v205 = (uint64_t)v518 + *(int *)(v525 + 48);
  v206 = (uint64_t)v524;
  sub_100007464((uint64_t)v524, (uint64_t)v518, &qword_1005D3370);
  sub_100007464(v203, v205, &qword_1005D3370);
  if (v184((uint64_t)v204, 1, v165) == 1)
  {
    sub_1000051EC(v203, &qword_1005D3370);
    sub_1000051EC(v206, &qword_1005D3370);
    v207 = v184(v205, 1, v165);
    v208 = (uint64_t)v514;
    if (v207 == 1)
    {
      sub_1000051EC((uint64_t)v518, &qword_1005D3370);
      v209 = v531;
      goto LABEL_44;
    }
  }
  else
  {
    v210 = v481;
    sub_100007464((uint64_t)v204, v481, &qword_1005D3370);
    if (v184(v205, 1, v165) != 1)
    {
      v213 = v526;
      v214 = v492;
      (*(void (**)(char *, uint64_t, uint64_t))(v526 + 32))(v492, v205, v165);
      v215 = sub_100008000(&qword_1005D3458, (uint64_t (*)(uint64_t))&type metadata accessor for FMFAddress, (uint64_t)&protocol conformance descriptor for FMFAddress);
      v216 = dispatch thunk of static Equatable.== infix(_:_:)(v210, v214, v165, v215);
      v217 = *(void (**)(char *, uint64_t))(v213 + 8);
      v217(v214, v165);
      sub_1000051EC(v511, &qword_1005D3370);
      sub_1000051EC((uint64_t)v524, &qword_1005D3370);
      v217((char *)v210, v165);
      sub_1000051EC((uint64_t)v204, &qword_1005D3370);
      v208 = (uint64_t)v514;
      v209 = v531;
      if ((v216 & 1) == 0)
      {
LABEL_60:
        v212 = v512;
        v211 = v513;
        goto LABEL_61;
      }
LABEL_44:
      v218 = v478;
      sub_100007464((uint64_t)&v534[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendUnshiftedLocation], v478, (uint64_t *)&unk_1005D3350);
      if (v533((char *)v218, 1, v535) == 1)
      {
        sub_1000051EC(v218, (uint64_t *)&unk_1005D3350);
      }
      else
      {
        v228 = v529;
        v229 = v463;
        v230 = v535;
        (*(void (**)(char *, uint64_t, uint64_t))(v529 + 32))(v463, v218, v535);
        v231 = (uint64_t)v480;
        (*(void (**)(char *, char *, uint64_t))(v228 + 16))(v480, v229, v230);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v228 + 56))(v231, 0, 1, v230);
        v232 = &v534[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_selectedLocationTimeZone];
        swift_beginAccess(&v534[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_selectedLocationTimeZone], v537, 0, 0);
        v233 = (uint64_t)v232;
        v234 = v501;
        sub_100007464(v233, v501, &qword_1005D3318);
        sub_10007BF58(v231, v234);
        sub_1000051EC(v234, &qword_1005D3318);
        sub_1000051EC(v231, (uint64_t *)&unk_1005D3350);
        v235 = v229;
        v209 = v531;
        (*(void (**)(char *, uint64_t))(v228 + 8))(v235, v230);
      }
      goto LABEL_60;
    }
    sub_1000051EC(v511, &qword_1005D3370);
    sub_1000051EC((uint64_t)v524, &qword_1005D3370);
    (*(void (**)(uint64_t, uint64_t))(v526 + 8))(v210, v165);
    v208 = (uint64_t)v514;
  }
  sub_1000051EC((uint64_t)v518, &qword_1005D3450);
  v212 = v512;
  v211 = v513;
  v209 = v531;
LABEL_61:
  v251 = &v534[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_triggerType];
  swift_beginAccess(&v534[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_triggerType], v545, 0, 0);
  v252 = v528;
  v253 = (_QWORD *)v528[2];
  v524 = v251;
  v254 = v251;
  v255 = v530;
  v518 = v253;
  ((void (*)(char *, char *, uint64_t))v253)(v212, v254, v530);
  v256 = (void (*)(_QWORD))v252[13];
  LODWORD(v515) = enum case for FMFLocationAlertTriggerType.scheduled(_:);
  v523 = v256;
  v256(v211);
  v257 = sub_100008000(&qword_1005D33D8, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocationAlertTriggerType, (uint64_t)&protocol conformance descriptor for FMFLocationAlertTriggerType);
  dispatch thunk of RawRepresentable.rawValue.getter(&v539, v255, v257);
  v525 = v257;
  dispatch thunk of RawRepresentable.rawValue.getter(&v543, v255, v257);
  v258 = v540[0];
  v259 = v544;
  v531 = v209;
  if (v539 == v543 && v540[0] == v544)
  {
    v260 = 1;
    v259 = v540[0];
  }
  else
  {
    v260 = _stringCompareWithSmolCheck(_:_:expecting:)(v539, v540[0], v543, v544, 0);
  }
  swift_bridgeObjectRelease(v258);
  v261 = swift_bridgeObjectRelease(v259);
  v262 = (void (*)(char *, uint64_t, __n128))v528[1];
  v263 = v530;
  v262(v211, v530, v261);
  ((void (*)(char *, uint64_t))v262)(v212, v263);
  v264 = v517;
  if ((v260 & 1) != 0)
  {
    v265 = &v534[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_selectedLocationTimeZone];
    swift_beginAccess(&v534[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_selectedLocationTimeZone], &v538, 0, 0);
    v266 = (uint64_t)v265;
    v267 = v498;
    sub_100007464(v266, v498, &qword_1005D3318);
    v269 = v499;
    v268 = v500;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v499 + 48))(v267, 1, v500) == 1)
    {
      swift_bridgeObjectRelease(v531);
      sub_1000051EC(v267, &qword_1005D3318);
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v270 = type metadata accessor for Logger(0);
      v271 = sub_100056D88(v270, (uint64_t)qword_1005F5748);
      v272 = Logger.logObject.getter(v271);
      v273 = static os_log_type_t.error.getter(v272);
      if (!os_log_type_enabled(v272, v273))
        goto LABEL_86;
      v274 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v274 = 0;
      v275 = "No time zone to set alert on";
      goto LABEL_85;
    }
    v276 = (void (*)(_QWORD, _QWORD, __n128))v262;
    v277 = v479;
    (*(void (**)(char *, uint64_t, uint64_t))(v269 + 32))(v479, v267, v268);
    v278 = v501;
    (*(void (**)(uint64_t, char *, uint64_t))(v269 + 16))(v501, v277, v268);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v269 + 56))(v278, 0, 1, v268);
    swift_beginAccess(&v534[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_schedule], &v539, 33, 0);
    FMFSchedule.timeZone.setter(v278);
    swift_endAccess(&v539);
    v279 = v277;
    v262 = (void (*)(char *, uint64_t, __n128))v276;
    (*(void (**)(char *, uint64_t))(v269 + 8))(v279, v268);
  }
  if ((v534[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_selectedRadius + 8] & 1) != 0)
  {
    v280 = v486;
    sub_100007464((uint64_t)v532, v486, (uint64_t *)&unk_1005D3350);
    v281 = v533((char *)v280, 1, v535);
    v282 = v522;
    if (v281)
    {
      sub_1000051EC(v280, (uint64_t *)&unk_1005D3350);
LABEL_75:
      v283 = 100.0;
      goto LABEL_77;
    }
    v310 = v529;
    v311 = v467;
    v312 = v535;
    (*(void (**)(char *, uint64_t, uint64_t))(v529 + 16))(v467, v280, v535);
    v313 = sub_1000051EC(v280, (uint64_t *)&unk_1005D3350);
    v314 = (void *)FMFLocation.location.getter(v313);
    (*(void (**)(char *, uint64_t))(v310 + 8))(v311, v312);
    if (!v314)
      goto LABEL_75;
    objc_msgSend(v314, "horizontalAccuracy");
    v283 = v315;

  }
  else
  {
    v283 = *(double *)&v534[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_selectedRadius];
    v282 = v522;
  }
LABEL_77:
  v284 = &v534[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_locationAlert];
  swift_beginAccess(&v534[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_locationAlert], &v543, 0, 0);
  sub_100007464((uint64_t)v284, v208, (uint64_t *)&unk_1005E5940);
  v285 = v520;
  v286 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v520 + 48);
  if (v286(v208, 1, v282) != 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v285 + 32))(v519, v208, v282);
    v298 = v285;
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v299 = type metadata accessor for Logger(0);
    v300 = sub_100056D88(v299, (uint64_t)qword_1005F5748);
    v301 = Logger.logObject.getter(v300);
    v302 = static os_log_type_t.default.getter(v301);
    if (os_log_type_enabled(v301, v302))
    {
      v303 = (uint8_t *)swift_slowAlloc(12, -1);
      *(_DWORD *)v303 = 134217984;
      v539 = *(void ***)&v283;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v539, v540);
      _os_log_impl((void *)&_mh_execute_header, v301, v302, "LocationAlertViewController: Updating an existing alert (radius=%fm)", v303, 0xCu);
      v304 = v303;
      v282 = v522;
      swift_slowDealloc(v304, -1, -1);
    }

    (*(void (**)(char *, char *, uint64_t))(v298 + 16))(v508, v519, v282);
    v305 = v487;
    sub_100007464((uint64_t)v532, v487, (uint64_t *)&unk_1005D3350);
    v306 = v533((char *)v305, 1, v535);
    v307 = v529;
    if (v306)
    {
      sub_1000051EC(v305, (uint64_t *)&unk_1005D3350);
      v517 = 0;
    }
    else
    {
      v316 = v521;
      v317 = v535;
      (*(void (**)(char *, uint64_t, uint64_t))(v529 + 16))(v521, v305, v535);
      v318 = sub_1000051EC(v305, (uint64_t *)&unk_1005D3350);
      v517 = FMFLocation.location.getter(v318);
      (*(void (**)(char *, uint64_t))(v307 + 8))(v316, v317);
    }
    v319 = v526;
    v320 = v484;
    sub_100007464((uint64_t)v532, v484, (uint64_t *)&unk_1005D3350);
    if (v533((char *)v320, 1, v535))
    {
      sub_1000051EC(v320, (uint64_t *)&unk_1005D3350);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v319 + 56))(v505, 1, 1, v527);
    }
    else
    {
      v321 = v521;
      v322 = v535;
      (*(void (**)(char *, uint64_t, uint64_t))(v307 + 16))(v521, v320, v535);
      v323 = sub_1000051EC(v320, (uint64_t *)&unk_1005D3350);
      FMFLocation.address.getter(v323);
      (*(void (**)(char *, uint64_t))(v307 + 8))(v321, v322);
    }
    v324 = v509;
    v325 = (uint64_t)v524;
    v326 = v530;
    v327 = (void (*)(char *, uint64_t, uint64_t))v518;
    ((void (*)(char *, char *, uint64_t))v518)(v509, v524, v530);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v528[7])(v324, 0, 1, v326);
    v328 = v534[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_repeating];
    v329 = sub_100080CC0();
    v330 = sub_100080A90();
    v327(v507, v325, v326);
    ((void (*)(char *, _QWORD, uint64_t))v523)(v506, v515, v326);
    v331 = v525;
    dispatch thunk of RawRepresentable.rawValue.getter(&v539, v326, v525);
    dispatch thunk of RawRepresentable.rawValue.getter(&v541, v326, v331);
    v332 = v540[0];
    v333 = v542;
    if (v539 == v541 && v540[0] == v542)
    {
      swift_bridgeObjectRelease_n(v540[0], 2);
      v334 = v530;
      ((void (*)(char *, uint64_t))v262)(v506, v530);
      ((void (*)(char *, uint64_t))v262)(v507, v334);
    }
    else
    {
      v335 = _stringCompareWithSmolCheck(_:_:expecting:)(v539, v540[0], v541, v542, 0);
      swift_bridgeObjectRelease(v332);
      v336 = swift_bridgeObjectRelease(v333);
      v337 = v530;
      v262(v506, v530, v336);
      ((void (*)(char *, uint64_t))v262)(v507, v337);
      if ((v335 & 1) == 0)
      {
        v342 = type metadata accessor for FMFSchedule(0);
        v341 = v489;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v342 - 8) + 56))(v489, 1, 1, v342);
        goto LABEL_107;
      }
    }
    v338 = &v534[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_schedule];
    swift_beginAccess(&v534[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_schedule], &v539, 0, 0);
    v339 = type metadata accessor for FMFSchedule(0);
    v340 = *(_QWORD *)(v339 - 8);
    v341 = v489;
    (*(void (**)(char *, char *, uint64_t))(v340 + 16))(v489, v338, v339);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v340 + 56))(v341, 0, 1, v339);
LABEL_107:
    v343 = v531;
    v344 = type metadata accessor for FMFLocationAlertAcceptanceStatus(0);
    v345 = v490;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v344 - 8) + 56))(v490, 1, 1, v344);
    v346 = type metadata accessor for FMFUpdateLocationAlertAction(0);
    swift_allocObject(v346, *(unsigned int *)(v346 + 48), *(unsigned __int16 *)(v346 + 52));
    HIBYTE(v449) = v328;
    LOBYTE(v449) = 1;
    v347 = FMFUpdateLocationAlertAction.init(locationAlert:location:radius:address:label:triggerType:isOn:repeating:phoneNumbers:emails:schedule:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:)(v508, v517, *(_QWORD *)&v283, 0, v505, v510, v343, v509, v449, v329, v330, v341, 0, 0, 0, 0, v345);
    (*(void (**)(char *, uint64_t))(v520 + 8))(v519, v522);
LABEL_108:
    v348 = swift_retain(v347);
    v349 = v534;
    sub_100389D70(v348);
    v350 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v349[OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator] + 48)
                     + 56);
    v351 = swift_allocObject(&unk_100541FF0, 24, 7);
    *(_QWORD *)(v351 + 16) = v349;
    swift_retain(v350);
    v352 = v349;
    sub_1000D421C(v347, (uint64_t)sub_100099CC4, v351);
    swift_release(v350);
    swift_release(v351);
    swift_release_n(v347, 2);
    return;
  }
  v528 = v286;
  sub_1000051EC(v208, (uint64_t *)&unk_1005E5940);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v287 = type metadata accessor for Logger(0);
  v288 = sub_100056D88(v287, (uint64_t)qword_1005F5748);
  v289 = Logger.logObject.getter(v288);
  v290 = static os_log_type_t.default.getter(v289);
  v291 = os_log_type_enabled(v289, v290);
  v292 = (uint64_t)v491;
  if (v291)
  {
    v293 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v293 = 134217984;
    v539 = *(void ***)&v283;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v539, v540);
    _os_log_impl((void *)&_mh_execute_header, v289, v290, "LocationAlertViewController: Creating a new alert (radius=%fm)", v293, 0xCu);
    swift_slowDealloc(v293, -1, -1);
  }

  v294 = v488;
  sub_100007464((uint64_t)v532, v488, (uint64_t *)&unk_1005D3350);
  v295 = v533((char *)v294, 1, v535);
  v296 = v529;
  if (v295 == 1)
  {
    swift_bridgeObjectRelease(v531);
    v297 = sub_1000051EC(v294, (uint64_t *)&unk_1005D3350);
    v272 = Logger.logObject.getter(v297);
    v273 = static os_log_type_t.error.getter(v272);
    if (!os_log_type_enabled(v272, v273))
    {
LABEL_86:

      return;
    }
    v274 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v274 = 0;
    v275 = "No location to set alert on";
LABEL_85:
    _os_log_impl((void *)&_mh_execute_header, v272, v273, v275, v274, 2u);
    swift_slowDealloc(v274, -1, -1);
    goto LABEL_86;
  }
  v526 = *(_QWORD *)(v529 + 32);
  ((void (*)(char *, uint64_t, uint64_t))v526)(v504, v294, v535);
  v308 = *(_QWORD *)&v534[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendHandles];
  if (v308)
  {
    v309 = *(void **)&v534[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendHandles];
  }
  else
  {
    v353 = v455;
    sub_100007464((uint64_t)&v534[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendForAlert], v455, &qword_1005D3380);
    v354 = type metadata accessor for FMFFriend(0);
    v355 = *(_QWORD *)(v354 - 8);
    v356 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v355 + 48))(v353, 1, v354);
    if ((_DWORD)v356 == 1)
    {
      sub_1000051EC(v353, &qword_1005D3380);
      v309 = &_swiftEmptySetSingleton;
    }
    else
    {
      v527 = v288;
      v359 = (void (*)(_QWORD, _QWORD, __n128))v262;
      v360 = v353;
      v309 = (void *)FMFFriend.contactHandles.getter(v356);
      v361 = v360;
      v262 = (void (*)(char *, uint64_t, __n128))v359;
      v288 = v527;
      v264 = v517;
      (*(void (**)(uint64_t, uint64_t))(v355 + 8))(v361, v354);
    }
    v296 = v529;
  }
  swift_bridgeObjectRetain(v308);
  v362 = sub_1000587F0((uint64_t)v309);
  swift_bridgeObjectRelease(v309);
  v363 = v362[2];
  v364 = swift_release(v362);
  if (v363)
  {
    v514 = *(char **)(v495 + 104);
    ((void (*)(char *, _QWORD, uint64_t, __n128))v514)(v494, enum case for FMFLocationAlertAddressType.custom(_:), v496, v364);
    v365 = v468;
    v366 = v535;
    v532 = *(void (**)(uint64_t, char *, uint64_t))(v296 + 16);
    v532(v468, v504, v535);
    v367 = *(char **)(v296 + 56);
    v368 = v365;
    v519 = v367;
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v367)(v365, 0, 1, v366);
    v369 = v292 + *(int *)(v471 + 48);
    sub_100007464(v368, v292, (uint64_t *)&unk_1005D3350);
    sub_100007464(v516, v369, (uint64_t *)&unk_1005D3350);
    v370 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v533;
    v371 = v533((char *)v292, 1, v366);
    v527 = v288;
    if (v371 == 1)
    {
      sub_1000051EC(v368, (uint64_t *)&unk_1005D3350);
      v372 = v370(v369, 1, v535);
      v373 = v470;
      if (v372 == 1)
      {
        sub_1000051EC(v292, (uint64_t *)&unk_1005D3350);
        v532((uint64_t)v373, v504, v535);
        v374 = *(char **)(v529 + 8);
LABEL_133:
        v521 = v374;
        ((void (*)(char *, uint64_t))v374)(v373, v535);
        v389 = (uint64_t)v458;
        goto LABEL_134;
      }
    }
    else
    {
      v380 = v452;
      sub_100007464(v292, v452, (uint64_t *)&unk_1005D3350);
      if (v370(v369, 1, v535) != 1)
      {
        v395 = v521;
        v396 = v535;
        ((void (*)(char *, uint64_t, uint64_t))v526)(v521, v369, v535);
        v397 = sub_100008000(&qword_1005D3378, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocation, (uint64_t)&protocol conformance descriptor for FMFLocation);
        LODWORD(v516) = dispatch thunk of static Equatable.== infix(_:_:)(v380, v395, v396, v397);
        v398 = *(void (**)(char *, uint64_t))(v529 + 8);
        v398(v395, v396);
        sub_1000051EC(v468, (uint64_t *)&unk_1005D3350);
        v399 = v380;
        v374 = (char *)v398;
        v398((char *)v399, v396);
        sub_1000051EC(v292, (uint64_t *)&unk_1005D3350);
        v373 = v470;
        v381 = v532;
        v532((uint64_t)v470, v504, v396);
        if ((v516 & 1) != 0)
          goto LABEL_133;
LABEL_126:
        v382 = v535;
        v381(v264, v373, v535);
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v519)(v264, 0, 1, v382);
        v383 = &v534[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendLocation];
        v384 = v456;
        v385 = v456 + *(int *)(v471 + 48);
        sub_100007464(v264, v456, (uint64_t *)&unk_1005D3350);
        sub_100007464((uint64_t)v383, v385, (uint64_t *)&unk_1005D3350);
        v386 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v533;
        if (v533((char *)v384, 1, v382) == 1)
        {
          sub_1000051EC(v264, (uint64_t *)&unk_1005D3350);
          v387 = v535;
          v521 = *(char **)(v529 + 8);
          ((void (*)(char *, uint64_t))v521)(v470, v535);
          v388 = v386(v385, 1, v387);
          v389 = (uint64_t)v458;
          if (v388 == 1)
          {
            sub_1000051EC(v384, (uint64_t *)&unk_1005D3350);
            goto LABEL_134;
          }
        }
        else
        {
          v390 = (void (*)(_QWORD, _QWORD, __n128))v262;
          v391 = v451;
          sub_100007464(v384, v451, (uint64_t *)&unk_1005D3350);
          v392 = v386(v385, 1, v535);
          v389 = (uint64_t)v458;
          if (v392 != 1)
          {
            v444 = v521;
            v445 = v535;
            ((void (*)(char *, uint64_t, uint64_t))v526)(v521, v385, v535);
            v446 = sub_100008000(&qword_1005D3378, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocation, (uint64_t)&protocol conformance descriptor for FMFLocation);
            v447 = dispatch thunk of static Equatable.== infix(_:_:)(v391, v444, v445, v446);
            v448 = *(void (**)(char *, uint64_t))(v529 + 8);
            v448(v444, v445);
            sub_1000051EC(v517, (uint64_t *)&unk_1005D3350);
            v448(v470, v445);
            v521 = (char *)v448;
            v448((char *)v391, v445);
            sub_1000051EC(v384, (uint64_t *)&unk_1005D3350);
            v262 = (void (*)(char *, uint64_t, __n128))v390;
            if ((v447 & 1) == 0)
            {
LABEL_135:
              sub_100007464((uint64_t)&v534[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendForAlert], v389, &qword_1005D3380);
              v402 = type metadata accessor for FMFFriend(0);
              v403 = *(_QWORD *)(v402 - 8);
              v404 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v403 + 48))(v389, 1, v402);
              if ((_DWORD)v404 == 1)
              {
                sub_1000051EC(v389, &qword_1005D3380);
                v405 = v453;
                sub_100007464((uint64_t)v284, v453, (uint64_t *)&unk_1005E5940);
                v406 = v522;
                if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v528)(v405, 1, v522))
                {
                  sub_1000051EC(v405, (uint64_t *)&unk_1005E5940);
                  v529 = 0;
                  v526 = 0;
                }
                else
                {
                  v408 = v520;
                  v409 = v454;
                  (*(void (**)(char *, uint64_t, uint64_t))(v520 + 16))(v454, v405, v406);
                  v410 = sub_1000051EC(v405, (uint64_t *)&unk_1005E5940);
                  v529 = FMFLocationAlert.friendId.getter(v410);
                  v526 = v411;
                  (*(void (**)(char *, uint64_t))(v408 + 8))(v409, v406);
                }
              }
              else
              {
                v529 = FMFFriend.identifier.getter(v404);
                v526 = v407;
                (*(void (**)(uint64_t, uint64_t))(v403 + 8))(v389, v402);
              }
              v412 = v534;
              v413 = v464;
              sub_100007464((uint64_t)v284, v464, (uint64_t *)&unk_1005E5940);
              v414 = v522;
              if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v528)(v413, 1, v522))
              {
                sub_1000051EC(v413, (uint64_t *)&unk_1005E5940);
                v533 = 0;
              }
              else
              {
                v415 = v520;
                v416 = v454;
                (*(void (**)(char *, uint64_t, uint64_t))(v520 + 16))(v454, v413, v414);
                v417 = sub_1000051EC(v413, (uint64_t *)&unk_1005E5940);
                v533 = (uint64_t (*)(char *, uint64_t, uint64_t))FMFLocationAlert.followerIds.getter(v417);
                (*(void (**)(char *, uint64_t))(v415 + 8))(v416, v414);
              }
              v419 = v459;
              v418 = v460;
              v420 = v412;
              v421 = sub_100080A90();
              v422 = sub_100080CC0();
              v423 = v535;
              ((void (*)(char *, char *))v532)(v474, v504);
              (*(void (**)(char *, char *, uint64_t))(v495 + 16))(v476, v494, v496);
              (*(void (**)(char *, char *, uint64_t))(v419 + 16))(v477, &v420[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_alertTarget], v418);
              v424 = (uint64_t)v524;
              v425 = v530;
              v426 = (void (*)(char *, uint64_t, uint64_t))v518;
              ((void (*)(char *, char *, uint64_t))v518)(v475, v524, v530);
              v427 = v420[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_repeating];
              v426(v473, v424, v425);
              ((void (*)(char *, _QWORD, uint64_t))v523)(v472, v515, v425);
              v428 = v525;
              dispatch thunk of RawRepresentable.rawValue.getter(&v539, v425, v525);
              dispatch thunk of RawRepresentable.rawValue.getter(&v541, v425, v428);
              v429 = v540[0];
              v430 = v542;
              if (v539 == v541 && v540[0] == v542)
              {
                swift_bridgeObjectRelease_n(v540[0], 2);
                v431 = v530;
                ((void (*)(char *, uint64_t))v262)(v472, v530);
                ((void (*)(char *, uint64_t))v262)(v473, v431);
              }
              else
              {
                v432 = _stringCompareWithSmolCheck(_:_:expecting:)(v539, v540[0], v541, v542, 0);
                swift_bridgeObjectRelease(v429);
                v433 = swift_bridgeObjectRelease(v430);
                v434 = v530;
                v262(v472, v530, v433);
                ((void (*)(char *, uint64_t))v262)(v473, v434);
                if ((v432 & 1) == 0)
                {
                  v439 = type metadata accessor for FMFSchedule(0);
                  v438 = v461;
                  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v439 - 8) + 56))(v461, 1, 1, v439);
                  goto LABEL_149;
                }
              }
              v435 = &v534[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_schedule];
              swift_beginAccess(&v534[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_schedule], &v539, 0, 0);
              v436 = type metadata accessor for FMFSchedule(0);
              v437 = *(_QWORD *)(v436 - 8);
              v438 = v461;
              (*(void (**)(char *, char *, uint64_t))(v437 + 16))(v461, v435, v436);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v437 + 56))(v438, 0, 1, v436);
LABEL_149:
              v440 = v423;
              v441 = v462;
              v442 = type metadata accessor for FMFLocationAlertAcceptanceStatus(0);
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v442 - 8) + 56))(v441, 1, 1, v442);
              v443 = type metadata accessor for FMFAddLocationAlertAction(0);
              swift_allocObject(v443, *(unsigned int *)(v443 + 48), *(unsigned __int16 *)(v443 + 52));
              v347 = FMFAddLocationAlertAction.init(friendId:followerIds:emails:phoneNumbers:location:address:label:addressType:radius:locationAlertTarget:triggerType:repeating:schedule:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:)(v529, v526, v533, v421, v422, v474, 0, 0, v283, v510, v531, v476, v477, v475, v427, v438, 0, 0, 0,
                       0,
                       v441);
              (*(void (**)(char *, uint64_t))(v495 + 8))(v494, v496);
              ((void (*)(char *, uint64_t))v521)(v504, v440);
              goto LABEL_108;
            }
LABEL_134:
            v400 = v494;
            v401 = v496;
            (*(void (**)(char *, uint64_t))(v495 + 8))(v494, v496);
            ((void (*)(char *, _QWORD, uint64_t))v514)(v400, enum case for FMFLocationAlertAddressType.currentLocation(_:), v401);
            goto LABEL_135;
          }
          sub_1000051EC(v517, (uint64_t *)&unk_1005D3350);
          v393 = *(void (**)(char *, uint64_t))(v529 + 8);
          v394 = v535;
          v393(v470, v535);
          v521 = (char *)v393;
          v393((char *)v391, v394);
          v262 = (void (*)(char *, uint64_t, __n128))v390;
        }
        sub_1000051EC(v384, (uint64_t *)&unk_1005D3340);
        goto LABEL_135;
      }
      sub_1000051EC(v468, (uint64_t *)&unk_1005D3350);
      (*(void (**)(uint64_t, uint64_t))(v529 + 8))(v380, v535);
      v373 = v470;
    }
    sub_1000051EC(v292, (uint64_t *)&unk_1005D3340);
    v381 = v532;
    v532((uint64_t)v373, v504, v535);
    goto LABEL_126;
  }
  swift_bridgeObjectRelease(v531);
  v376 = Logger.logObject.getter(v375);
  v377 = static os_log_type_t.error.getter(v376);
  if (os_log_type_enabled(v376, v377))
  {
    v378 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v378 = 0;
    _os_log_impl((void *)&_mh_execute_header, v376, v377, "No friend handles to set alert on", v378, 2u);
    swift_slowDealloc(v378, -1, -1);
  }

  v540[3] = State.rawValue.getter;
  v540[4] = 0;
  v539 = _NSConcreteStackBlock;
  v540[0] = 1107296256;
  v540[1] = sub_100037DF8;
  v540[2] = &unk_100542008;
  v379 = _Block_copy(&v539);
  objc_msgSend(v534, "dismissViewControllerAnimated:completion:", 1, v379);
  _Block_release(v379);
  (*(void (**)(char *, uint64_t))(v296 + 8))(v504, v535);
}

double sub_100084B20(uint64_t a1, void **a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void **v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint8_t *v27;
  void **v28;
  void **v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  void **v33;
  uint8_t *v34;
  void *v35;
  double result;
  char *v37;
  char v38;
  void *v39;
  id v40;
  Swift::String v41;
  Swift::String_optional v42;
  Swift::String v43;
  Swift::String v44;
  id v45;
  Swift::String v46;
  Swift::String_optional v47;
  Swift::String v48;
  Swift::String v49;
  void *object;
  void *v51;
  uint64_t v52;
  char v53;
  void (*v54)(char *, uint64_t, uint64_t, uint64_t);
  void **v55;
  char v56;
  void (*v57)(void **, uint64_t);
  id v58;
  Swift::String v59;
  Swift::String v60;
  Swift::String v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  Swift::String v68;
  Swift::String_optional v69;
  Swift::String v70;
  Swift::String v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  Swift::String v77;
  Swift::String_optional v78;
  Swift::String v79;
  Swift::String v80;
  void *v81;
  void *v82;
  void *v83;
  void *v84;
  id v85;
  Swift::String v86;
  Swift::String_optional v87;
  Swift::String v88;
  Swift::String v89;
  id v90;
  Swift::String v91;
  Swift::String_optional v92;
  Swift::String v93;
  Swift::String v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  void *v99;
  id v100;
  Swift::String v101;
  Swift::String v102;
  Swift::String v103;
  id v104;
  Swift::String v105;
  Swift::String v106;
  Swift::String v107;
  void *v108;
  char *v109;
  void *v110;
  void *v111;
  void *v112;
  id v113;
  Swift::String v114;
  Swift::String_optional v115;
  Swift::String v116;
  Swift::String v117;
  id v118;
  Swift::String v119;
  Swift::String_optional v120;
  Swift::String v121;
  Swift::String v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t countAndFlagsBits;
  void **v131;
  char *v132;
  uint64_t v133;
  char v134[8];
  uint64_t v135;
  uint64_t v136;
  char v137[8];
  _QWORD v138[3];
  char v139[8];
  _QWORD v140[3];
  char v141[8];
  _QWORD v142[3];
  char v143[8];
  void **aBlock;
  unint64_t v145;
  uint64_t (*v146)(uint64_t);
  void *v147;
  uint64_t (*v148)();
  uint64_t v149;
  Swift::String v150;
  Swift::String v151;
  Swift::String v152;
  Swift::String v153;
  Swift::String v154;
  Swift::String v155;
  Swift::String v156;
  Swift::String v157;
  Swift::String v158;
  Swift::String v159;
  Swift::String v160;

  v5 = sub_100053F2C(&qword_1005D3380);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v127 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v127 - v9;
  v11 = sub_100053F2C((uint64_t *)&unk_1005D3460);
  __chkstk_darwin(v11);
  v13 = (char *)&v127 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FMFActionsError(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v18 = (void **)((char *)&v127 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = __chkstk_darwin(v16);
  v21 = (char *)&v127 - v20;
  sub_10034AB98(v19);
  if (!a2)
  {
    v148 = State.rawValue.getter;
    v149 = 0;
    aBlock = _NSConcreteStackBlock;
    v145 = 1107296256;
    v146 = sub_100037DF8;
    v147 = &unk_100542030;
    v35 = _Block_copy(&aBlock);
    objc_msgSend(a3, "dismissViewControllerAnimated:completion:", 1, v35);
    _Block_release(v35);
    return result;
  }
  v131 = v18;
  v132 = a3;
  swift_errorRetain(a2);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v22 = type metadata accessor for Logger(0);
  sub_100056D88(v22, (uint64_t)qword_1005F5748);
  swift_errorRetain(a2);
  v23 = swift_errorRetain(a2);
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.error.getter(v24);
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc(12, -1);
    v129 = v10;
    v27 = (uint8_t *)v26;
    v28 = (void **)swift_slowAlloc(32, -1);
    countAndFlagsBits = (uint64_t)v8;
    v29 = v28;
    aBlock = v28;
    v128 = v13;
    *(_DWORD *)v27 = 136315138;
    v127 = v15;
    swift_getErrorValue(a2, v137, v134);
    v30 = Error.localizedDescription.getter(v135, v136);
    v32 = v31;
    v133 = sub_100056DA0(v30, v31, (uint64_t *)&aBlock);
    v15 = v127;
    v13 = v128;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v133, v134);
    swift_bridgeObjectRelease(v32);
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Error creating action to save alert %s", v27, 0xCu);
    swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
    v33 = v29;
    v8 = (char *)countAndFlagsBits;
    swift_slowDealloc(v33, -1, -1);
    v34 = v27;
    v10 = v129;
    swift_slowDealloc(v34, -1, -1);
  }
  else
  {
    swift_errorRelease(a2);
    swift_errorRelease(a2);
  }

  swift_getErrorValue(a2, v143, v142);
  sub_1000858D0(v142[1], v142[2]);
  v37 = v132;
  if ((v38 & 1) != 0)
  {
    v39 = (void *)objc_opt_self(NSBundle);
    v131 = a2;
    v40 = objc_msgSend(v39, "mainBundle");
    v41._countAndFlagsBits = 0xD00000000000002ALL;
    v150._object = (void *)0x80000001004A6680;
    v41._object = (void *)0x80000001004A72F0;
    v42.value._countAndFlagsBits = 0xD000000000000012;
    v42.value._object = (void *)0x80000001004A6660;
    v43._countAndFlagsBits = 0;
    v43._object = (void *)0xE000000000000000;
    v150._countAndFlagsBits = 0xD000000000000017;
    v44 = NSLocalizedString(_:tableName:bundle:value:comment:)(v41, v42, (NSBundle)v40, v43, v150);

    v45 = objc_msgSend(v39, "mainBundle");
    v46._countAndFlagsBits = 0xD00000000000002CLL;
    v151._object = (void *)0x80000001004A6680;
    v46._object = (void *)0x80000001004A7320;
    v47.value._countAndFlagsBits = 0xD000000000000012;
    v47.value._object = (void *)0x80000001004A6660;
    v48._countAndFlagsBits = 0;
    v48._object = (void *)0xE000000000000000;
    v151._countAndFlagsBits = 0xD000000000000017;
    v49 = NSLocalizedString(_:tableName:bundle:value:comment:)(v46, v47, (NSBundle)v45, v48, v151);
    object = v49._object;

    sub_100085CBC(v44._countAndFlagsBits, (uint64_t)v44._object, v49._countAndFlagsBits, (uint64_t)v49._object);
    swift_errorRelease(v131);
    v51 = v44._object;
LABEL_30:
    swift_bridgeObjectRelease(v51);
    v108 = object;
    goto LABEL_31;
  }
  aBlock = a2;
  swift_errorRetain(a2);
  v52 = sub_100053F2C((uint64_t *)&unk_1005D2AC0);
  v53 = swift_dynamicCast(v13, &aBlock, v52, v14, 6);
  v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  if ((v53 & 1) != 0)
  {
    v54(v13, 0, 1, v14);
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v21, v13, v14);
    v55 = v131;
    (*(void (**)(void **, _QWORD, uint64_t))(v15 + 104))(v131, enum case for FMFActionsError.unavailableInDemoMode(_:), v14);
    v56 = static FMFActionsError.== infix(_:_:)(v21, v55);
    v57 = *(void (**)(void **, uint64_t))(v15 + 8);
    v57(v55, v14);
    if ((v56 & 1) != 0)
    {
      aBlock = 0;
      v145 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(v145);
      v58 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v59._countAndFlagsBits = 0xD00000000000001ELL;
      v152._countAndFlagsBits = 0xD000000000000030;
      v152._object = (void *)0x80000001004A72B0;
      v59._object = (void *)0x80000001004A7290;
      v60._countAndFlagsBits = 0;
      v60._object = (void *)0xE000000000000000;
      v61 = NSLocalizedString(_:tableName:bundle:value:comment:)(v59, (Swift::String_optional)0, (NSBundle)v58, v60, v152);

      sub_100086000(v61._countAndFlagsBits, (uint64_t)v61._object, 0, 0xE000000000000000);
      swift_bridgeObjectRelease(v61._object);
      swift_errorRelease(a2);
      v57((void **)v21, v14);
      return result;
    }
    v57((void **)v21, v14);
  }
  else
  {
    v54(v13, 1, 1, v14);
    sub_1000051EC((uint64_t)v13, (uint64_t *)&unk_1005D3460);
  }
  swift_getErrorValue(a2, v141, v140);
  sub_100086234(v140[1], v140[2]);
  if ((v62 & 1) != 0)
  {
    sub_100007464((uint64_t)&v37[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendForAlert], (uint64_t)v10, &qword_1005D3380);
    v63 = type metadata accessor for FMFFriend(0);
    v64 = (uint64_t)v10;
    v65 = *(_QWORD *)(v63 - 8);
    v66 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v64, 1, v63);
    if ((_DWORD)v66 == 1)
    {
      sub_1000051EC(v64, &qword_1005D3380);
      v67 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v153._countAndFlagsBits = 0xD000000000000017;
      v68._countAndFlagsBits = 0xD00000000000002ELL;
      v153._object = (void *)0x80000001004A6680;
      v68._object = (void *)0x80000001004A7200;
      v69.value._object = (void *)0x80000001004A6660;
      v69.value._countAndFlagsBits = 0xD000000000000012;
      v70._countAndFlagsBits = 0;
      v70._object = (void *)0xE000000000000000;
      v71 = NSLocalizedString(_:tableName:bundle:value:comment:)(v68, v69, (NSBundle)v67, v70, v153);
      countAndFlagsBits = v71._countAndFlagsBits;
      v72 = v71._object;

    }
    else
    {
      countAndFlagsBits = FMFFriend.name.getter(v66);
      v72 = v82;
      (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v64, v63);
    }
    v131 = a2;
    v83 = *(void **)&v37[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_doneButtonItem];
    if (v83)
      objc_msgSend(v83, "setEnabled:", 1);
    v84 = (void *)objc_opt_self(NSBundle);
    v85 = objc_msgSend(v84, "mainBundle");
    v86._countAndFlagsBits = 0xD000000000000025;
    v155._object = (void *)0x80000001004A6680;
    v86._object = (void *)0x80000001004A7230;
    v87.value._countAndFlagsBits = 0xD000000000000012;
    v87.value._object = (void *)0x80000001004A6660;
    v88._countAndFlagsBits = 0;
    v88._object = (void *)0xE000000000000000;
    v155._countAndFlagsBits = 0xD000000000000017;
    v89 = NSLocalizedString(_:tableName:bundle:value:comment:)(v86, v87, (NSBundle)v85, v88, v155);

    v90 = objc_msgSend(v84, "mainBundle");
    v91._countAndFlagsBits = 0xD000000000000027;
    v156._object = (void *)0x80000001004A6680;
    v91._object = (void *)0x80000001004A7260;
    v92.value._countAndFlagsBits = 0xD000000000000012;
    v92.value._object = (void *)0x80000001004A6660;
    v93._countAndFlagsBits = 0;
    v93._object = (void *)0xE000000000000000;
    v156._countAndFlagsBits = 0xD000000000000017;
    v94 = NSLocalizedString(_:tableName:bundle:value:comment:)(v91, v92, (NSBundle)v90, v93, v156);

    v95 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
    v96 = swift_allocObject(v95, 72, 7);
    *(_OWORD *)(v96 + 16) = xmmword_100481740;
    *(_QWORD *)(v96 + 56) = &type metadata for String;
    *(_QWORD *)(v96 + 64) = sub_100071E88();
    *(_QWORD *)(v96 + 32) = countAndFlagsBits;
    *(_QWORD *)(v96 + 40) = v72;
    v97 = String.init(format:_:)(v94._countAndFlagsBits, v94._object, v96);
    object = v98;
    swift_bridgeObjectRelease(v94._object);
    sub_1000866B0(v89._countAndFlagsBits, (uint64_t)v89._object, v97, (uint64_t)object);
    swift_errorRelease(v131);
    v51 = v89._object;
    goto LABEL_30;
  }
  swift_getErrorValue(a2, v139, v138);
  if ((sub_1000869D8(v138[1]) & 1) != 0)
  {
    sub_100007464((uint64_t)&v37[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendForAlert], (uint64_t)v8, &qword_1005D3380);
    v73 = type metadata accessor for FMFFriend(0);
    v74 = *(_QWORD *)(v73 - 8);
    v75 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v74 + 48))(v8, 1, v73);
    if ((_DWORD)v75 == 1)
    {
      sub_1000051EC((uint64_t)v8, &qword_1005D3380);
      v76 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v154._countAndFlagsBits = 0xD000000000000017;
      v77._countAndFlagsBits = 0xD000000000000036;
      v154._object = (void *)0x80000001004A6680;
      v77._object = (void *)0x80000001004A7160;
      v78.value._object = (void *)0x80000001004A6660;
      v78.value._countAndFlagsBits = 0xD000000000000012;
      v79._countAndFlagsBits = 0;
      v79._object = (void *)0xE000000000000000;
      v80 = NSLocalizedString(_:tableName:bundle:value:comment:)(v77, v78, (NSBundle)v76, v79, v154);
      countAndFlagsBits = v80._countAndFlagsBits;
      v81 = v80._object;

    }
    else
    {
      countAndFlagsBits = FMFFriend.name.getter(v75);
      v109 = v8;
      v81 = v110;
      (*(void (**)(char *, uint64_t))(v74 + 8))(v109, v73);
    }
    v131 = a2;
    v111 = *(void **)&v37[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_doneButtonItem];
    if (v111)
      objc_msgSend(v111, "setEnabled:", 1);
    v112 = (void *)objc_opt_self(NSBundle);
    v113 = objc_msgSend(v112, "mainBundle");
    v114._countAndFlagsBits = 0xD00000000000002DLL;
    v159._object = (void *)0x80000001004A6680;
    v114._object = (void *)0x80000001004A71A0;
    v115.value._countAndFlagsBits = 0xD000000000000012;
    v115.value._object = (void *)0x80000001004A6660;
    v116._countAndFlagsBits = 0;
    v116._object = (void *)0xE000000000000000;
    v159._countAndFlagsBits = 0xD000000000000017;
    v117 = NSLocalizedString(_:tableName:bundle:value:comment:)(v114, v115, (NSBundle)v113, v116, v159);

    v118 = objc_msgSend(v112, "mainBundle");
    v119._countAndFlagsBits = 0xD00000000000002FLL;
    v160._object = (void *)0x80000001004A6680;
    v119._object = (void *)0x80000001004A71D0;
    v120.value._countAndFlagsBits = 0xD000000000000012;
    v120.value._object = (void *)0x80000001004A6660;
    v121._countAndFlagsBits = 0;
    v121._object = (void *)0xE000000000000000;
    v160._countAndFlagsBits = 0xD000000000000017;
    v122 = NSLocalizedString(_:tableName:bundle:value:comment:)(v119, v120, (NSBundle)v118, v121, v160);

    v123 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
    v124 = swift_allocObject(v123, 72, 7);
    *(_OWORD *)(v124 + 16) = xmmword_100481740;
    *(_QWORD *)(v124 + 56) = &type metadata for String;
    *(_QWORD *)(v124 + 64) = sub_100071E88();
    *(_QWORD *)(v124 + 32) = countAndFlagsBits;
    *(_QWORD *)(v124 + 40) = v81;
    v125 = String.init(format:_:)(v122._countAndFlagsBits, v122._object, v124);
    object = v126;
    swift_bridgeObjectRelease(v122._object);
    sub_1000866B0(v117._countAndFlagsBits, (uint64_t)v117._object, v125, (uint64_t)object);
    swift_errorRelease(v131);
    v51 = v117._object;
    goto LABEL_30;
  }
  aBlock = 0;
  v145 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v145);
  v99 = (void *)objc_opt_self(NSBundle);
  v100 = objc_msgSend(v99, "mainBundle");
  v101._countAndFlagsBits = 0xD000000000000022;
  v157._countAndFlagsBits = 0xD000000000000034;
  v157._object = (void *)0x80000001004A70B0;
  v101._object = (void *)0x80000001004A7080;
  v102._countAndFlagsBits = 0;
  v102._object = (void *)0xE000000000000000;
  v103 = NSLocalizedString(_:tableName:bundle:value:comment:)(v101, (Swift::String_optional)0, (NSBundle)v100, v102, v157);

  aBlock = 0;
  v145 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v104 = objc_msgSend(v99, "mainBundle", swift_bridgeObjectRelease(v145).n128_f64[0]);
  v105._countAndFlagsBits = 0xD000000000000024;
  v158._countAndFlagsBits = 0xD000000000000036;
  v158._object = (void *)0x80000001004A7120;
  v105._object = (void *)0x80000001004A70F0;
  v106._countAndFlagsBits = 0;
  v106._object = (void *)0xE000000000000000;
  v107 = NSLocalizedString(_:tableName:bundle:value:comment:)(v105, (Swift::String_optional)0, (NSBundle)v104, v106, v158);

  sub_100086000(v103._countAndFlagsBits, (uint64_t)v103._object, v107._countAndFlagsBits, (uint64_t)v107._object);
  swift_errorRelease(a2);
  swift_bridgeObjectRelease(v103._object);
  v108 = v107._object;
LABEL_31:
  *(_QWORD *)&result = swift_bridgeObjectRelease(v108).n128_u64[0];
  return result;
}

void sub_1000858D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  double v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  int64_t v35;
  int64_t v36;
  unint64_t v37;
  unint64_t v38;
  int64_t v39;
  unint64_t v40;
  int64_t v41;
  _QWORD v43[3];
  _BYTE v44[8];
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  _OWORD v48[2];

  v4 = *(_QWORD *)(a1 - 8);
  __chkstk_darwin(a1);
  v6 = (char *)&v43[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, a1);
  v8 = _getErrorEmbeddedNSError<A>(_:)(v6, a1, a2);
  if (v8)
  {
    v9 = v8;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
  }
  else
  {
    v9 = swift_allocError(a1, a2, 0, 0);
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v10, v6, a1);
  }
  v11 = (void *)_convertErrorToNSError(_:)(v9);
  swift_errorRelease(v9);
  v12 = objc_msgSend(v11, "domain");
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(CKErrorDomain);
  if (v13 == v16 && v15 == v17)
  {
    swift_bridgeObjectRelease_n(v15, 2);
  }
  else
  {
    v19 = v17;
    v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, v16, v17, 0);
    swift_bridgeObjectRelease(v15);
    *(_QWORD *)&v21 = swift_bridgeObjectRelease(v19).n128_u64[0];
    if ((v20 & 1) == 0)
    {
LABEL_9:

      return;
    }
  }
  if (objc_msgSend(v11, "code", v21) != (id)2)
    goto LABEL_9;
  v22 = objc_msgSend(v11, "userInfo");
  v23 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v22, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(CKPartialErrorsByItemIDKey);
  v26 = v25;
  if (*(_QWORD *)(v23 + 16) && (v27 = sub_10004C348(v24, v25), (v28 & 1) != 0))
  {
    sub_100056E70(*(_QWORD *)(v23 + 56) + 32 * v27, (uint64_t)&v46);
  }
  else
  {
    v46 = 0u;
    v47 = 0u;
  }
  swift_bridgeObjectRelease(v26);
  swift_bridgeObjectRelease(v23);
  if (!*((_QWORD *)&v47 + 1))
    goto LABEL_45;
  sub_10004C850(&v46, v48);
  v29 = sub_100053F2C(&qword_1005D3488);
  swift_dynamicCast(&v45, v48, (char *)&type metadata for Any + 8, v29, 7);
  v30 = v45;
  v31 = v45 + 64;
  v32 = 1 << *(_BYTE *)(v45 + 32);
  v33 = -1;
  if (v32 < 64)
    v33 = ~(-1 << v32);
  v34 = v33 & *(_QWORD *)(v45 + 64);
  v35 = (unint64_t)(v32 + 63) >> 6;
  swift_bridgeObjectRetain(v45);
  v36 = 0;
  while (v34)
  {
    v37 = __clz(__rbit64(v34));
    v34 &= v34 - 1;
    v38 = v37 | (v36 << 6);
LABEL_22:
    swift_getErrorValue(*(_QWORD *)(*(_QWORD *)(v30 + 56) + 8 * v38), v44, v43);
    if ((sub_1000858D0(v43[1], v43[2]) & 1) != 0)
      goto LABEL_42;
  }
  v39 = v36 + 1;
  if (__OFADD__(v36, 1))
  {
    __break(1u);
    goto LABEL_44;
  }
  if (v39 >= v35)
    goto LABEL_42;
  v40 = *(_QWORD *)(v31 + 8 * v39);
  ++v36;
  if (v40)
    goto LABEL_41;
  v36 = v39 + 1;
  if (v39 + 1 >= v35)
    goto LABEL_42;
  v40 = *(_QWORD *)(v31 + 8 * v36);
  if (v40)
    goto LABEL_41;
  v36 = v39 + 2;
  if (v39 + 2 >= v35)
    goto LABEL_42;
  v40 = *(_QWORD *)(v31 + 8 * v36);
  if (v40)
    goto LABEL_41;
  v36 = v39 + 3;
  if (v39 + 3 >= v35)
    goto LABEL_42;
  v40 = *(_QWORD *)(v31 + 8 * v36);
  if (v40)
    goto LABEL_41;
  v36 = v39 + 4;
  if (v39 + 4 >= v35)
    goto LABEL_42;
  v40 = *(_QWORD *)(v31 + 8 * v36);
  if (v40)
  {
LABEL_41:
    v34 = (v40 - 1) & v40;
    v38 = __clz(__rbit64(v40)) + (v36 << 6);
    goto LABEL_22;
  }
  v41 = v39 + 5;
  if (v41 >= v35)
  {
LABEL_42:

    swift_release(v30);
    swift_bridgeObjectRelease(v30);
    return;
  }
  v40 = *(_QWORD *)(v31 + 8 * v41);
  if (v40)
  {
    v36 = v41;
    goto LABEL_41;
  }
  while (1)
  {
    v36 = v41 + 1;
    if (__OFADD__(v41, 1))
      break;
    if (v36 >= v35)
      goto LABEL_42;
    v40 = *(_QWORD *)(v31 + 8 * v36);
    ++v41;
    if (v40)
      goto LABEL_41;
  }
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
}

void sub_100085CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  NSString v8;
  NSString v9;
  id v10;
  void *v11;
  id v12;
  Swift::String v13;
  Swift::String v14;
  void *object;
  uint64_t v16;
  id v17;
  NSString v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  Swift::String v23;
  Swift::String v24;
  void *v25;
  NSString v26;
  id v27;
  void **aBlock;
  unint64_t v29;
  void (*v30)(uint64_t, void *);
  void *v31;
  double (*v32)(uint64_t);
  uint64_t v33;
  Swift::String v34;
  Swift::String v35;

  v5 = v4;
  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRetain(a2);
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  v10 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v8, v9, 1);

  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v11 = (void *)objc_opt_self(NSBundle);
  v12 = objc_msgSend(v11, "mainBundle");
  v13._countAndFlagsBits = 0xD000000000000015;
  v34._countAndFlagsBits = 0xD000000000000027;
  v34._object = (void *)0x80000001004A7370;
  v13._object = (void *)0x80000001004A7350;
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v34)._object;

  v16 = swift_allocObject(&unk_100542068, 24, 7);
  *(_QWORD *)(v16 + 16) = v5;
  v17 = v5;
  v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v32 = sub_100099CCC;
  v33 = v16;
  aBlock = _NSConcreteStackBlock;
  v29 = 1107296256;
  v30 = sub_100008B40;
  v31 = &unk_100542080;
  v19 = _Block_copy(&aBlock);
  swift_release(v33);
  v20 = (void *)objc_opt_self(UIAlertAction);
  v21 = objc_msgSend(v20, "actionWithTitle:style:handler:", v18, 0, v19);
  _Block_release(v19);

  aBlock = 0;
  v29 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v22 = objc_msgSend(v11, "mainBundle", swift_bridgeObjectRelease(v29).n128_f64[0]);
  v35._countAndFlagsBits = 0xD000000000000025;
  v35._object = (void *)0x80000001004A73C0;
  v23._object = (void *)0x80000001004A73A0;
  v23._countAndFlagsBits = 0xD000000000000013;
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v23, (Swift::String_optional)0, (NSBundle)v22, v24, v35)._object;

  v26 = String._bridgeToObjectiveC()();
  v27 = objc_msgSend(v20, "actionWithTitle:style:handler:", v26, 0, 0, swift_bridgeObjectRelease(v25).n128_f64[0]);

  objc_msgSend(v10, "addAction:", v27);
  objc_msgSend(v10, "addAction:", v21);
  objc_msgSend(v17, "presentViewController:animated:completion:", v10, 1, 0);

}

void sub_100086000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  NSString v8;
  NSString v9;
  id v10;
  id v11;
  Swift::String v12;
  Swift::String v13;
  void *object;
  NSString v15;
  void *v16;
  id v17;
  _QWORD aBlock[5];
  uint64_t v19;
  Swift::String v20;

  v5 = v4;
  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRetain(a2);
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  v10 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v8, v9, 1);

  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v11 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v20._object = (void *)0x80000001004A5EE0;
  v12._countAndFlagsBits = 0x4F545455425F4B4FLL;
  v12._object = (void *)0xEF454C5449545F4ELL;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  v20._countAndFlagsBits = 0xD000000000000021;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v20)._object;

  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  aBlock[4] = State.rawValue.getter;
  v19 = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100008B40;
  aBlock[3] = &unk_1005420F8;
  v16 = _Block_copy(aBlock);
  swift_release(v19);
  v17 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v15, 0, v16);
  _Block_release(v16);

  objc_msgSend(v10, "addAction:", v17);
  objc_msgSend(v5, "presentViewController:animated:completion:", v10, 1, 0);

}

void sub_100086234(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char v25;
  double v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int64_t v40;
  int64_t v41;
  unint64_t v42;
  unint64_t v43;
  int64_t v44;
  unint64_t v45;
  int64_t v46;
  uint64_t v47;
  _QWORD v49[3];
  _BYTE v50[8];
  _QWORD v51[3];
  _BYTE v52[8];
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  _OWORD v56[2];

  v4 = *(_QWORD *)(a1 - 8);
  __chkstk_darwin(a1);
  v6 = (char *)&v49[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, a1);
  v8 = _getErrorEmbeddedNSError<A>(_:)(v6, a1, a2);
  if (v8)
  {
    v9 = v8;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
  }
  else
  {
    v9 = swift_allocError(a1, a2, 0, 0);
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v10, v6, a1);
  }
  v11 = (void *)_convertErrorToNSError(_:)(v9);
  swift_errorRelease(v9);
  v12 = objc_msgSend(v11, "domain");
  v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
  v15 = v14;

  v16 = static String._unconditionallyBridgeFromObjectiveC(_:)(CKErrorDomain);
  if (v16 == v13 && v17 == v15)
  {
    swift_bridgeObjectRelease(v15);
  }
  else
  {
    v19 = v17;
    v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, v13, v15, 0);
    swift_bridgeObjectRelease(v19);
    if ((v20 & 1) == 0)
    {
      v21 = static String._unconditionallyBridgeFromObjectiveC(_:)(FMFFenceErrorDomain);
      if (v21 == v13 && v22 == v15)
      {
        swift_bridgeObjectRelease_n(v15, 2);
LABEL_50:
        objc_msgSend(v11, "code", v26);

        return;
      }
      v24 = v22;
      v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v22, v13, v15, 0);
      swift_bridgeObjectRelease(v15);
      *(_QWORD *)&v26 = swift_bridgeObjectRelease(v24).n128_u64[0];
      if ((v25 & 1) != 0)
        goto LABEL_50;
LABEL_20:

      return;
    }
  }
  if (objc_msgSend(v11, "code", swift_bridgeObjectRelease(v15).n128_f64[0]) != (id)2)
    goto LABEL_20;
  v27 = objc_msgSend(v11, "userInfo");
  v28 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v27, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v29 = static String._unconditionallyBridgeFromObjectiveC(_:)(CKPartialErrorsByItemIDKey);
  v31 = v30;
  if (*(_QWORD *)(v28 + 16) && (v32 = sub_10004C348(v29, v30), (v33 & 1) != 0))
  {
    sub_100056E70(*(_QWORD *)(v28 + 56) + 32 * v32, (uint64_t)&v54);
  }
  else
  {
    v54 = 0u;
    v55 = 0u;
  }
  swift_bridgeObjectRelease(v31);
  swift_bridgeObjectRelease(v28);
  if (!*((_QWORD *)&v55 + 1))
    goto LABEL_54;
  sub_10004C850(&v54, v56);
  v34 = sub_100053F2C(&qword_1005D3488);
  swift_dynamicCast(&v53, v56, (char *)&type metadata for Any + 8, v34, 7);
  v35 = v53;
  v36 = v53 + 64;
  v37 = 1 << *(_BYTE *)(v53 + 32);
  v38 = -1;
  if (v37 < 64)
    v38 = ~(-1 << v37);
  v39 = v38 & *(_QWORD *)(v53 + 64);
  v40 = (unint64_t)(v37 + 63) >> 6;
  swift_bridgeObjectRetain(v53);
  v41 = 0;
  while (1)
  {
    if (v39)
    {
      v42 = __clz(__rbit64(v39));
      v39 &= v39 - 1;
      v43 = v42 | (v41 << 6);
      goto LABEL_46;
    }
    v44 = v41 + 1;
    if (__OFADD__(v41, 1))
    {
      __break(1u);
      goto LABEL_53;
    }
    if (v44 >= v40)
      goto LABEL_51;
    v45 = *(_QWORD *)(v36 + 8 * v44);
    ++v41;
    if (!v45)
    {
      v41 = v44 + 1;
      if (v44 + 1 >= v40)
        goto LABEL_51;
      v45 = *(_QWORD *)(v36 + 8 * v41);
      if (!v45)
      {
        v41 = v44 + 2;
        if (v44 + 2 >= v40)
          goto LABEL_51;
        v45 = *(_QWORD *)(v36 + 8 * v41);
        if (!v45)
        {
          v41 = v44 + 3;
          if (v44 + 3 >= v40)
            goto LABEL_51;
          v45 = *(_QWORD *)(v36 + 8 * v41);
          if (!v45)
          {
            v41 = v44 + 4;
            if (v44 + 4 >= v40)
              goto LABEL_51;
            v45 = *(_QWORD *)(v36 + 8 * v41);
            if (!v45)
              break;
          }
        }
      }
    }
LABEL_45:
    v39 = (v45 - 1) & v45;
    v43 = __clz(__rbit64(v45)) + (v41 << 6);
LABEL_46:
    v47 = *(_QWORD *)(*(_QWORD *)(v35 + 56) + 8 * v43);
    swift_getErrorValue(v47, v52, v51);
    if (sub_10021EE24(v51[1], v51[2]) != (id)22)
    {
      swift_getErrorValue(v47, v50, v49);
      if (sub_10021EE24(v49[1], v49[2]) != (id)33)
        continue;
    }
LABEL_51:

    swift_release(v35);
    swift_bridgeObjectRelease(v35);
    return;
  }
  v46 = v44 + 5;
  if (v46 >= v40)
    goto LABEL_51;
  v45 = *(_QWORD *)(v36 + 8 * v46);
  if (v45)
  {
    v41 = v46;
    goto LABEL_45;
  }
  while (1)
  {
    v41 = v46 + 1;
    if (__OFADD__(v46, 1))
      break;
    if (v41 >= v40)
      goto LABEL_51;
    v45 = *(_QWORD *)(v36 + 8 * v41);
    ++v46;
    if (v45)
      goto LABEL_45;
  }
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
}

void sub_1000866B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  NSString v8;
  NSString v9;
  id v10;
  void *v11;
  id v12;
  Swift::String v13;
  Swift::String v14;
  void *object;
  NSString v16;
  void *v17;
  id v18;
  id v19;
  Swift::String v20;
  Swift::String v21;
  void *v22;
  NSString v23;
  void *v24;
  id v25;
  _QWORD aBlock[5];
  uint64_t v27;
  Swift::String v28;
  Swift::String v29;

  v5 = v4;
  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRetain(a2);
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  v10 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v8, v9, 1);

  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v11 = (void *)objc_opt_self(NSBundle);
  v12 = objc_msgSend(v11, "mainBundle");
  v28._countAndFlagsBits = 0xD000000000000021;
  v28._object = (void *)0x80000001004A5EE0;
  v13._countAndFlagsBits = 0x4F545455425F4B4FLL;
  v13._object = (void *)0xEF454C5449545F4ELL;
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v28)._object;

  v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v17 = (void *)objc_opt_self(UIAlertAction);
  v18 = objc_msgSend(v17, "actionWithTitle:style:handler:", v16, 0, 0);

  _StringGuts.grow(_:)(20);
  v19 = objc_msgSend(v11, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
  v29._countAndFlagsBits = 0xD000000000000029;
  v29._object = (void *)0x80000001004A7410;
  v20._object = (void *)0x80000001004A73F0;
  v20._countAndFlagsBits = 0xD000000000000017;
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  v22 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, (Swift::String_optional)0, (NSBundle)v19, v21, v29)._object;

  v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v22);
  aBlock[4] = sub_100094414;
  v27 = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100008B40;
  aBlock[3] = &unk_1005420D0;
  v24 = _Block_copy(aBlock);
  v25 = objc_msgSend(v17, "actionWithTitle:style:handler:", v23, 0, v24, swift_release(v27).n128_f64[0]);
  _Block_release(v24);

  objc_msgSend(v10, "addAction:", v25);
  objc_msgSend(v10, "addAction:", v18);
  objc_msgSend(v5, "presentViewController:animated:completion:", v10, 1, 0);

}

uint64_t sub_1000869D8(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16;
  double v17;
  id v18;
  uint64_t v19;
  id v20;

  __chkstk_darwin(a1);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v3);
  v5 = sub_100006C5C(0, &qword_1005D3480, NSError_ptr);
  result = swift_dynamicCast(&v20, v3, a1, v5, 6);
  if ((_DWORD)result)
  {
    v7 = v20;
    v8 = objc_msgSend(v20, "domain");
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
    v11 = v10;

    v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(FMFFenceErrorDomain);
    if (v9 == v12 && v11 == v13)
    {
      swift_bridgeObjectRelease_n(v11, 2);
    }
    else
    {
      v15 = v13;
      v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v11, v12, v13, 0);
      swift_bridgeObjectRelease(v11);
      *(_QWORD *)&v17 = swift_bridgeObjectRelease(v15).n128_u64[0];
      if ((v16 & 1) == 0)
      {

        return 0;
      }
    }
    v18 = objc_msgSend(v7, "code", v17);

    return v18 == (id)4;
  }
  return result;
}

void sub_100086B30(int a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  id v47;
  Swift::String v48;
  Swift::String v49;
  Swift::String v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  char *v54;
  _QWORD *v55;
  void (*v56)(char *, char *, uint64_t, __n128);
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  char *v63;
  void (*v64)(char *, uint64_t);
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  _QWORD *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __n128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  __n128 v80;
  char *v81;
  uint64_t v82;
  char *v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unsigned int v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  NSString v99;
  id v100;
  id v101;
  Swift::String v102;
  Swift::String v103;
  void *v104;
  void *object;
  uint64_t v106;
  NSString v107;
  void *v108;
  void *v109;
  id v110;
  id v111;
  Swift::String v112;
  Swift::String v113;
  void *v114;
  uint64_t v115;
  uint64_t v116;
  NSString v117;
  void *v118;
  id v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  _QWORD *v125;
  __n128 v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void *v131;
  uint64_t v132;
  char v133;
  __n128 v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  id v138;
  Swift::String_optional v139;
  Swift::String v140;
  Swift::String v141;
  Swift::String v142;
  uint64_t v143;
  unint64_t v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v147;
  void (*v148)(char *, _QWORD, uint64_t);
  void (*v149)(char *, char *, uint64_t, __n128);
  char *v150;
  unint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  _QWORD *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  unsigned int (*v171)(uint64_t, uint64_t, uint64_t);
  char *v172;
  _QWORD *v173;
  _BYTE *v174;
  void **v175;
  uint64_t v176;
  void **v177;
  uint64_t v178;
  void **aBlock;
  unint64_t v180;
  void (*v181)(uint64_t, void *);
  void *v182;
  void *v183;
  uint64_t v184;
  char v185[8];
  Swift::String v186;
  Swift::String v187;
  Swift::String v188;
  Swift::String v189;

  v168 = a3;
  v167 = a2;
  LODWORD(v171) = a1;
  v4 = sub_100053F2C(&qword_1005D3370);
  __chkstk_darwin(v4);
  v169 = (char *)&v146 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = type metadata accessor for FMFLocation(0);
  v161 = *(_QWORD *)(v162 - 8);
  v6 = __chkstk_darwin(v162);
  v155 = (char *)&v146 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v157 = (char *)&v146 - v8;
  v9 = sub_100053F2C((uint64_t *)&unk_1005D3350);
  v10 = __chkstk_darwin(v9);
  v170 = (uint64_t)&v146 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v160 = (uint64_t)&v146 - v12;
  v13 = sub_100053F2C(&qword_1005DC400);
  __chkstk_darwin(v13);
  v156 = (char *)&v146 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  __chkstk_darwin(v15);
  v164 = (uint64_t)&v146 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = (_QWORD *)type metadata accessor for Date(0);
  v165 = *(v166 - 1);
  __chkstk_darwin(v166);
  v163 = (char *)&v146 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for FMFLocationAlertTriggerType(0);
  v173 = *(_QWORD **)(v18 - 8);
  v19 = __chkstk_darwin(v18);
  v158 = (char *)&v146 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v19);
  v23 = (char *)&v146 - v22;
  v24 = __chkstk_darwin(v21);
  v172 = (char *)&v146 - v25;
  __chkstk_darwin(v24);
  v27 = (char *)&v146 - v26;
  v28 = sub_100053F2C(&qword_1005D3380);
  v29 = __chkstk_darwin(v28);
  v31 = (char *)&v146 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v33 = (char *)&v146 - v32;
  v174 = v3;
  v34 = (uint64_t)&v3[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendForAlert];
  sub_100007464((uint64_t)&v3[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendForAlert], (uint64_t)&v146 - v32, &qword_1005D3380);
  v35 = type metadata accessor for FMFFriend(0);
  v36 = *(_QWORD *)(v35 - 8);
  v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48);
  v38 = v37(v33, 1, v35);
  if ((_DWORD)v38 == 1)
  {
    sub_1000051EC((uint64_t)v33, &qword_1005D3380);
    return;
  }
  v152 = v23;
  v159 = v18;
  v39 = FMFFriend.name.getter(v38);
  v41 = v40;
  v42 = *(void (**)(char *, uint64_t))(v36 + 8);
  v42(v33, v35);
  sub_100007464(v34, (uint64_t)v31, &qword_1005D3380);
  if (v37(v31, 1, v35) == 1)
  {
    sub_1000051EC((uint64_t)v31, &qword_1005D3380);
LABEL_7:
    v45 = v41;
    goto LABEL_8;
  }
  v43 = FMFFriend.shortName.getter();
  v45 = v44;
  v42(v31, v35);
  if (!v45)
    goto LABEL_7;
  swift_bridgeObjectRelease(v41);
  v39 = v43;
LABEL_8:
  aBlock = 0;
  v180 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v180);
  v46 = (id)objc_opt_self(NSBundle);
  v47 = objc_msgSend(v46, "mainBundle");
  v48._countAndFlagsBits = 0xD000000000000033;
  v186._countAndFlagsBits = 0xD000000000000045;
  v186._object = (void *)0x80000001004A6F20;
  v48._object = (void *)0x80000001004A6EE0;
  v49._countAndFlagsBits = 0;
  v49._object = (void *)0xE000000000000000;
  v50 = NSLocalizedString(_:tableName:bundle:value:comment:)(v48, (Swift::String_optional)0, (NSBundle)v47, v49, v186);

  v147 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
  v51 = swift_allocObject(v147, 72, 7);
  *(_OWORD *)(v51 + 16) = xmmword_100481740;
  *(_QWORD *)(v51 + 56) = &type metadata for String;
  v151 = sub_100071E88();
  *(_QWORD *)(v51 + 64) = v151;
  v153 = v39;
  *(_QWORD *)(v51 + 32) = v39;
  *(_QWORD *)(v51 + 40) = v45;
  swift_bridgeObjectRetain(v45);
  v154 = String.init(format:_:)(v50._countAndFlagsBits, v50._object, v51);
  v53 = v52;
  swift_bridgeObjectRelease(v50._object);
  v54 = &v174[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_triggerType];
  swift_beginAccess(&v174[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_triggerType], v185, 0, 0);
  v55 = v173;
  v56 = (void (*)(char *, char *, uint64_t, __n128))v173[2];
  v150 = v54;
  v57 = v159;
  v149 = v56;
  ((void (*)(char *, char *, uint64_t))v56)(v27, v54, v159);
  v148 = (void (*)(char *, _QWORD, uint64_t))v55[13];
  v148(v172, enum case for FMFLocationAlertTriggerType.scheduled(_:), v57);
  v58 = sub_100008000(&qword_1005D33D8, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocationAlertTriggerType, (uint64_t)&protocol conformance descriptor for FMFLocationAlertTriggerType);
  dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v57, v58);
  dispatch thunk of RawRepresentable.rawValue.getter(&v177, v57, v58);
  v59 = v180;
  v60 = v178;
  if (aBlock == v177 && v180 == v178)
  {
    swift_bridgeObjectRelease_n(v180, 2);
    v61 = (char)v171;
  }
  else
  {
    v62 = _stringCompareWithSmolCheck(_:_:expecting:)(aBlock, v180, v177, v178, 0);
    swift_bridgeObjectRelease(v59);
    swift_bridgeObjectRelease(v60);
    v61 = v62 & v171;
  }
  v63 = v169;
  v64 = (void (*)(char *, uint64_t))v173[1];
  v64(v172, v57);
  v64(v27, v57);
  v65 = v170;
  if ((v61 & 1) != 0)
  {
    v66 = v164;
    v67 = v174;
    sub_100080EF0(v164);
    v68 = v165;
    v69 = v166;
    if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD *))(v165 + 48))(v66, 1, v166) == 1)
    {
      swift_bridgeObjectRelease(v45);
      sub_1000051EC(v66, (uint64_t *)&unk_1005D3320);
    }
    else
    {
      v74 = swift_bridgeObjectRelease(v53);
      v75 = (uint64_t)v163;
      (*(void (**)(char *, uint64_t, _QWORD *, __n128))(v68 + 32))(v163, v66, v69, v74);
      v76 = sub_100088548(v75);
      v78 = v77;
      sub_100088984(v75, v76, v77, v153, v45);
      v53 = v79;
      swift_bridgeObjectRelease(v45);
      v80 = swift_bridgeObjectRelease(v78);
      (*(void (**)(uint64_t, _QWORD *, __n128))(v68 + 8))(v75, v69, v80);
    }
    goto LABEL_29;
  }
  v67 = v174;
  if (v174[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_repeating] != 1 || (v171 & 1) == 0)
    goto LABEL_27;
  v173 = v53;
  v70 = &v174[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController__selectedLocation];
  swift_beginAccess(&v174[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController__selectedLocation], &v177, 0, 0);
  v172 = v70;
  v71 = v160;
  sub_100007464((uint64_t)v70, v160, (uint64_t *)&unk_1005D3350);
  v72 = v161;
  v73 = v162;
  v171 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v161 + 48);
  if (v171(v71, 1, v162))
  {
    sub_1000051EC(v71, (uint64_t *)&unk_1005D3350);
  }
  else
  {
    v166 = v46;
    v81 = v157;
    (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(v157, v71, v73);
    v82 = sub_1000051EC(v71, (uint64_t *)&unk_1005D3350);
    v83 = v156;
    FMFLocation.label.getter(v82);
    v84 = *(void (**)(char *, uint64_t))(v72 + 8);
    v85 = (uint64_t)v83;
    v84(v81, v73);
    v86 = type metadata accessor for FMFLabel(0);
    v87 = *(_QWORD *)(v86 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v87 + 48))(v85, 1, v86) != 1)
    {
      v120 = v85;
      v121 = FMFLabel.localizedValue.getter();
      v123 = v122;
      (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v120, v86);
      v124 = v173;
      goto LABEL_34;
    }
    sub_1000051EC(v85, &qword_1005DC400);
    v46 = v166;
    v63 = v169;
    v65 = v170;
  }
  v53 = v173;
  sub_100007464((uint64_t)v172, v65, (uint64_t *)&unk_1005D3350);
  v88 = v162;
  v89 = v171(v65, 1, v162);
  v90 = v161;
  if (!v89)
  {
    v93 = v65;
    v94 = v155;
    (*(void (**)(char *, uint64_t, uint64_t))(v161 + 16))(v155, v93, v88);
    v95 = sub_1000051EC(v170, (uint64_t *)&unk_1005D3350);
    FMFLocation.address.getter(v95);
    (*(void (**)(char *, uint64_t))(v90 + 8))(v94, v88);
    v96 = type metadata accessor for FMFAddress(0);
    v97 = *(_QWORD *)(v96 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v97 + 48))(v63, 1, v96) == 1)
    {
      v91 = &qword_1005D3370;
      v92 = (uint64_t)v63;
      goto LABEL_26;
    }
    v125 = (_QWORD *)FMFAddress.formattedAddressLines.getter();
    (*(void (**)(char *, uint64_t))(v97 + 8))(v63, v96);
    if (!v125)
      goto LABEL_27;
    if (!v125[2])
    {
      swift_bridgeObjectRelease(v45);
      v98 = v125;
      goto LABEL_28;
    }
    v166 = v46;
    v121 = v125[4];
    v123 = v125[5];
    swift_bridgeObjectRetain(v123);
    swift_bridgeObjectRelease(v53);
    v124 = v125;
LABEL_34:
    v126 = swift_bridgeObjectRelease(v124);
    v127 = v159;
    v149(v152, v150, v159, v126);
    v148(v158, enum case for FMFLocationAlertTriggerType.arriving(_:), v127);
    dispatch thunk of RawRepresentable.rawValue.getter(&aBlock, v127, v58);
    dispatch thunk of RawRepresentable.rawValue.getter(&v175, v127, v58);
    v128 = v180;
    v129 = v176;
    if (aBlock == v175 && v180 == v176)
    {
      swift_bridgeObjectRelease_n(v180, 2);
      v130 = v159;
      v64(v158, v159);
      v64(v152, v130);
      v131 = (void *)0x80000001004A7030;
      v132 = 0xD000000000000048;
    }
    else
    {
      v133 = _stringCompareWithSmolCheck(_:_:expecting:)(aBlock, v180, v175, v176, 0);
      swift_bridgeObjectRelease(v128);
      v134 = swift_bridgeObjectRelease(v129);
      v135 = v159;
      ((void (*)(char *, uint64_t, __n128))v64)(v158, v159, v134);
      v64(v152, v135);
      if ((v133 & 1) != 0)
        v132 = 0xD000000000000048;
      else
        v132 = 0xD000000000000047;
      if ((v133 & 1) != 0)
        v131 = (void *)0x80000001004A7030;
      else
        v131 = (void *)0x80000001004A6FE0;
    }
    v136 = v147;
    v137 = v166;
    v138 = objc_msgSend(v166, "mainBundle");
    v139.value._countAndFlagsBits = 0xD000000000000012;
    v189._countAndFlagsBits = 0xD000000000000017;
    v189._object = (void *)0x80000001004A6680;
    v139.value._object = (void *)0x80000001004A6660;
    v140._countAndFlagsBits = v132;
    v140._object = v131;
    v141._countAndFlagsBits = 0;
    v141._object = (void *)0xE000000000000000;
    v142 = NSLocalizedString(_:tableName:bundle:value:comment:)(v140, v139, (NSBundle)v138, v141, v189);
    swift_bridgeObjectRelease(v131);

    v143 = swift_allocObject(v136, 112, 7);
    *(_OWORD *)(v143 + 16) = xmmword_100481730;
    v144 = v151;
    *(_QWORD *)(v143 + 56) = &type metadata for String;
    *(_QWORD *)(v143 + 64) = v144;
    *(_QWORD *)(v143 + 32) = v153;
    *(_QWORD *)(v143 + 40) = v45;
    *(_QWORD *)(v143 + 96) = &type metadata for String;
    *(_QWORD *)(v143 + 104) = v144;
    *(_QWORD *)(v143 + 72) = v121;
    *(_QWORD *)(v143 + 80) = v123;
    v46 = v137;
    String.init(format:_:)(v142._countAndFlagsBits, v142._object, v143);
    v53 = v145;
    swift_bridgeObjectRelease(v142._object);
    goto LABEL_29;
  }
  v91 = (uint64_t *)&unk_1005D3350;
  v92 = v65;
LABEL_26:
  sub_1000051EC(v92, v91);
LABEL_27:
  v98 = (_QWORD *)v45;
LABEL_28:
  swift_bridgeObjectRelease(v98);
LABEL_29:
  v99 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v53);
  v100 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", 0, v99, 0);

  aBlock = 0;
  v180 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v101 = objc_msgSend(v46, "mainBundle", swift_bridgeObjectRelease(v180).n128_f64[0]);
  v187._countAndFlagsBits = 0xD00000000000001FLL;
  v187._object = (void *)0x80000001004A6F70;
  v102._countAndFlagsBits = 0x425F4C45434E4143;
  v102._object = (void *)0xED00004E4F545455;
  v103._countAndFlagsBits = 0;
  v103._object = (void *)0xE000000000000000;
  v104 = v46;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v102, (Swift::String_optional)0, (NSBundle)v101, v103, v187)._object;

  v106 = swift_allocObject(&unk_100541F28, 24, 7);
  *(_QWORD *)(v106 + 16) = v67;
  v174 = v67;
  v107 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v183 = sub_100099C98;
  v184 = v106;
  aBlock = _NSConcreteStackBlock;
  v180 = 1107296256;
  v181 = sub_100008B40;
  v182 = &unk_100541F40;
  v108 = _Block_copy(&aBlock);
  swift_release(v184);
  v109 = (void *)objc_opt_self(UIAlertAction);
  v110 = objc_msgSend(v109, "actionWithTitle:style:handler:", v107, 1, v108);
  _Block_release(v108);

  aBlock = 0;
  v180 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v111 = objc_msgSend(v104, "mainBundle", swift_bridgeObjectRelease(v180).n128_f64[0]);
  v112._countAndFlagsBits = 0xD000000000000016;
  v188._countAndFlagsBits = 0xD000000000000028;
  v188._object = (void *)0x80000001004A6FB0;
  v112._object = (void *)0x80000001004A6F90;
  v113._countAndFlagsBits = 0;
  v113._object = (void *)0xE000000000000000;
  v114 = NSLocalizedString(_:tableName:bundle:value:comment:)(v112, (Swift::String_optional)0, (NSBundle)v111, v113, v188)._object;

  v115 = swift_allocObject(&unk_100541F78, 32, 7);
  *(_QWORD *)(v115 + 16) = v167;
  v116 = v168;
  *(_QWORD *)(v115 + 24) = v168;
  swift_retain(v116);
  v117 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v114);
  v183 = sub_100021E58;
  v184 = v115;
  aBlock = _NSConcreteStackBlock;
  v180 = 1107296256;
  v181 = sub_100008B40;
  v182 = &unk_100541F90;
  v118 = _Block_copy(&aBlock);
  v119 = objc_msgSend(v109, "actionWithTitle:style:handler:", v117, 0, v118, swift_release(v184).n128_f64[0]);
  _Block_release(v118);

  objc_msgSend(v100, "addAction:", v110);
  objc_msgSend(v100, "addAction:", v119);
  objc_msgSend(v174, "presentViewController:animated:completion:", v100, 1, 0);

}

void sub_100087B04(uint64_t a1, void *a2)
{
  void *v3;
  _QWORD v4[6];

  v4[4] = State.rawValue.getter;
  v4[5] = 0;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 1107296256;
  v4[2] = sub_100037DF8;
  v4[3] = &unk_100541FB8;
  v3 = _Block_copy(v4);
  objc_msgSend(a2, "dismissViewControllerAnimated:completion:", 1, v3);
  _Block_release(v3);
}

double sub_100087B8C()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  __n128 v17;
  char v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double result;
  __n128 v25;
  void (*v26)(char *, uint64_t, __n128);
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = v0;
  v2 = type metadata accessor for FMFLocationAlertTriggerType(0);
  v29 = *(_QWORD *)(v2 - 8);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v29 - v6;
  v8 = type metadata accessor for FMFLocationAlertTarget(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void **)&v0[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_doneButtonItem];
  if (v12)
    objc_msgSend(v12, "setEnabled:", 0);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for FMFLocationAlertTarget.alertMe(_:), v8);
  v13 = sub_100008000((unint64_t *)&unk_1005E5A00, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocationAlertTarget, (uint64_t)&protocol conformance descriptor for FMFLocationAlertTarget);
  dispatch thunk of RawRepresentable.rawValue.getter(&v32, v8, v13);
  dispatch thunk of RawRepresentable.rawValue.getter(&v34, v8, v13);
  v14 = v33;
  v15 = v35;
  if (v32 == v34 && v33 == v35)
  {
    swift_bridgeObjectRelease_n(v33, 2);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    v16 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v33, v34, v35, 0);
    swift_bridgeObjectRelease(v14);
    v17 = swift_bridgeObjectRelease(v15);
    (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v11, v8, v17);
    if ((v16 & 1) == 0)
    {
      sub_100081B40();
      return result;
    }
  }
  if ((v1[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_repeating] & 1) != 0)
  {
    v18 = 1;
  }
  else
  {
    v19 = &v1[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_triggerType];
    swift_beginAccess(&v1[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_triggerType], &v32, 0, 0);
    v20 = v29;
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v7, v19, v2);
    (*(void (**)(char *, _QWORD, uint64_t))(v20 + 104))(v5, enum case for FMFLocationAlertTriggerType.scheduled(_:), v2);
    v21 = sub_100008000(&qword_1005D33D8, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocationAlertTriggerType, (uint64_t)&protocol conformance descriptor for FMFLocationAlertTriggerType);
    dispatch thunk of RawRepresentable.rawValue.getter(&v34, v2, v21);
    dispatch thunk of RawRepresentable.rawValue.getter(&v30, v2, v21);
    v22 = v35;
    v23 = v31;
    if (v34 == v30 && v35 == v31)
    {
      v18 = 1;
      v23 = v35;
    }
    else
    {
      v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v34, v35, v30, v31, 0);
    }
    swift_bridgeObjectRelease(v22);
    v25 = swift_bridgeObjectRelease(v23);
    v26 = *(void (**)(char *, uint64_t, __n128))(v20 + 8);
    v26(v5, v2, v25);
    ((void (*)(char *, uint64_t))v26)(v7, v2);
  }
  v27 = swift_allocObject(&unk_100541F00, 24, 7);
  *(_QWORD *)(v27 + 16) = v1;
  v28 = v1;
  sub_100086B30(v18 & 1, (uint64_t)sub_100099C78, v27);
  *(_QWORD *)&result = swift_release(v27).n128_u64[0];
  return result;
}

void sub_100087EF8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  __n128 v23;
  char v25[24];

  v1 = v0;
  v2 = sub_100053F2C((uint64_t *)&unk_1005E5940);
  __chkstk_darwin(v2);
  v4 = &v25[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = type metadata accessor for FMFLocationAlert(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = &v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  v11 = &v25[-v10 - 8];
  v12 = (uint64_t)&v1[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_locationAlert];
  swift_beginAccess(&v1[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_locationAlert], v25, 0, 0);
  sub_100007464(v12, (uint64_t)v4, (uint64_t *)&unk_1005E5940);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1000051EC((uint64_t)v4, (uint64_t *)&unk_1005E5940);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v13 = type metadata accessor for Logger(0);
    v14 = sub_100056D88(v13, (uint64_t)qword_1005F5748);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.error.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "No location alert to be removed", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    v18 = type metadata accessor for FMFRemoveLocationAlertAction(0);
    swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
    v19 = FMFRemoveLocationAlertAction.init(locationAlert:)(v9);
    sub_100389D70(v19);
    v20 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator] + 48)
                    + 56);
    v21 = swift_allocObject(&unk_100541EB0, 24, 7);
    *(_QWORD *)(v21 + 16) = v1;
    swift_retain(v20);
    v22 = v1;
    sub_1000D421C(v19, (uint64_t)sub_100099C70, v21);
    swift_release(v19);
    swift_release(v20);
    v23 = swift_release(v21);
    (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v11, v5, v23);
  }
}

void sub_1000881A4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  void *v14;
  uint64_t v15;
  _QWORD v16[3];
  _BYTE v17[8];
  uint64_t aBlock[6];

  if (a2)
  {
    swift_errorRetain(a2);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v5 = type metadata accessor for Logger(0);
    sub_100056D88(v5, (uint64_t)qword_1005F5748);
    swift_errorRetain(a2);
    v6 = swift_errorRetain(a2);
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.error.getter(v7);
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(12, -1);
      v10 = swift_slowAlloc(32, -1);
      aBlock[0] = v10;
      *(_DWORD *)v9 = 136315138;
      swift_getErrorValue(a2, v17, v16);
      v11 = Error.localizedDescription.getter(v16[1], v16[2]);
      v13 = v12;
      v15 = sub_100056DA0(v11, v12, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v15, v16);
      swift_bridgeObjectRelease(v13);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Error removing the location alert - %s", v9, 0xCu);
      swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v10, -1, -1);
      swift_slowDealloc(v9, -1, -1);

      a1 = swift_errorRelease(a2);
    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      swift_errorRelease(a2);

    }
  }
  sub_10034AB98(a1);
  aBlock[4] = (uint64_t)State.rawValue.getter;
  aBlock[5] = 0;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100037DF8;
  aBlock[3] = (uint64_t)&unk_100541EC8;
  v14 = _Block_copy(aBlock);
  objc_msgSend(a3, "dismissViewControllerAnimated:completion:", 1, v14);
  _Block_release(v14);
}

int64_t sub_1000883F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t result;
  int64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v3 = type metadata accessor for IndexPath(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (int64_t)objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_tableView), "numberOfRowsInSection:", a1);
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v8 = result;
    v9 = _swiftEmptyArrayStorage;
    if (result)
    {
      v14 = _swiftEmptyArrayStorage;
      sub_100111F10(0, result, 0);
      v10 = 0;
      v9 = v14;
      do
      {
        IndexPath.init(row:section:)(v10, a1);
        v14 = v9;
        v12 = v9[2];
        v11 = v9[3];
        if (v12 >= v11 >> 1)
        {
          sub_100111F10(v11 > 1, v12 + 1, 1);
          v9 = v14;
        }
        ++v10;
        v9[2] = v12 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))((unint64_t)v9+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v12, v6, v3);
      }
      while (v8 != v10);
    }
    return (int64_t)v9;
  }
  return result;
}

uint64_t sub_100088548(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t);
  int v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  void (*v28)(_BYTE *, uint64_t);
  uint64_t *v29;
  void *v30;
  int v31;
  id v32;
  Class isa;
  Class v34;
  id v35;
  uint64_t v36;
  _BYTE v38[12];
  int v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[24];

  v44 = a1;
  v2 = type metadata accessor for TimeZone(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v40 = &v38[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_100053F2C(&qword_1005D3440);
  __chkstk_darwin(v5);
  v7 = &v38[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_100053F2C(&qword_1005D3318);
  v9 = __chkstk_darwin(v8);
  v41 = &v38[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = __chkstk_darwin(v9);
  v13 = &v38[-v12];
  v14 = __chkstk_darwin(v11);
  v16 = &v38[-v15];
  __chkstk_darwin(v14);
  v18 = &v38[-v17];
  v42 = v1;
  v19 = v1 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_selectedLocationTimeZone;
  swift_beginAccess(v1 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_selectedLocationTimeZone, v45, 0, 0);
  v20 = sub_100007464(v19, (uint64_t)v18, &qword_1005D3318);
  static TimeZone.current.getter(v20);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v16, 0, 1, v2);
  v21 = (uint64_t)&v7[*(int *)(v5 + 48)];
  sub_100007464((uint64_t)v18, (uint64_t)v7, &qword_1005D3318);
  sub_100007464((uint64_t)v16, v21, &qword_1005D3318);
  v43 = v3;
  v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v22((uint64_t)v7, 1, v2) == 1)
  {
    sub_1000051EC((uint64_t)v16, &qword_1005D3318);
    sub_1000051EC((uint64_t)v18, &qword_1005D3318);
    v23 = v22(v21, 1, v2);
    v24 = (uint64_t)v41;
    if (v23 == 1)
    {
      sub_1000051EC((uint64_t)v7, &qword_1005D3318);
LABEL_8:
      v29 = &OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_timeFormatterNoTimezone;
      goto LABEL_10;
    }
    goto LABEL_6;
  }
  sub_100007464((uint64_t)v7, (uint64_t)v13, &qword_1005D3318);
  if (v22(v21, 1, v2) == 1)
  {
    sub_1000051EC((uint64_t)v16, &qword_1005D3318);
    sub_1000051EC((uint64_t)v18, &qword_1005D3318);
    (*(void (**)(_BYTE *, uint64_t))(v43 + 8))(v13, v2);
    v24 = (uint64_t)v41;
LABEL_6:
    sub_1000051EC((uint64_t)v7, &qword_1005D3440);
    goto LABEL_9;
  }
  v25 = v43;
  v26 = v40;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v43 + 32))(v40, v21, v2);
  v27 = sub_100008000(&qword_1005D3448, (uint64_t (*)(uint64_t))&type metadata accessor for TimeZone, (uint64_t)&protocol conformance descriptor for TimeZone);
  v39 = dispatch thunk of static Equatable.== infix(_:_:)(v13, v26, v2, v27);
  v28 = *(void (**)(_BYTE *, uint64_t))(v25 + 8);
  v28(v26, v2);
  sub_1000051EC((uint64_t)v16, &qword_1005D3318);
  sub_1000051EC((uint64_t)v18, &qword_1005D3318);
  v28(v13, v2);
  sub_1000051EC((uint64_t)v7, &qword_1005D3318);
  v24 = (uint64_t)v41;
  if ((v39 & 1) != 0)
    goto LABEL_8;
LABEL_9:
  v29 = &OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_timeFormatterWithTimezone;
LABEL_10:
  v30 = *(void **)(v42 + *v29);
  sub_100007464(v19, v24, &qword_1005D3318);
  v31 = v22(v24, 1, v2);
  v32 = v30;
  if (v31 == 1)
  {
    isa = 0;
  }
  else
  {
    isa = TimeZone._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v24, v2);
  }
  objc_msgSend(v32, "setTimeZone:", isa);

  v34 = Date._bridgeToObjectiveC()().super.isa;
  v35 = objc_msgSend(v32, "stringFromDate:", v34);

  v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v35);
  return v36;
}

uint64_t sub_100088984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  id v37;
  Class isa;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  void (*v50)(_BYTE *, uint64_t);
  _BYTE *v51;
  uint64_t v52;
  _BYTE *v53;
  _BYTE *v54;
  _BYTE *v55;
  uint64_t v56;
  int v57;
  _BYTE *v58;
  _BYTE *v59;
  uint64_t v60;
  id v61;
  unint64_t v62;
  unint64_t v63;
  const char *v64;
  _BYTE *v65;
  uint64_t v66;
  char v67;
  unint64_t v68;
  Swift::String_optional v69;
  Swift::String v70;
  Swift::String v71;
  void *object;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t countAndFlagsBits;
  void *v78;
  uint64_t v79;
  id v80;
  Class v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  Swift::String v87;
  Swift::String_optional v88;
  Swift::String v89;
  Swift::String v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v96;
  _BYTE v97[12];
  int v98;
  _BYTE *v99;
  _BYTE *v100;
  uint64_t v101;
  _BYTE *v102;
  uint64_t v103;
  _BYTE *v104;
  _BYTE *v105;
  _BYTE *v106;
  _BYTE *v107;
  _BYTE *v108;
  void (*v109)(_BYTE *, uint64_t);
  uint64_t v110;
  _BYTE *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119[32];
  Swift::String v120;

  v115 = a2;
  v116 = a5;
  v114 = a4;
  v110 = a3;
  v118 = a1;
  v113 = sub_100053F2C(&qword_1005D3430);
  v6 = __chkstk_darwin(v113);
  v106 = &v97[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  v111 = &v97[-v8];
  v112 = type metadata accessor for Date(0);
  v117 = *(_QWORD *)(v112 - 8);
  v9 = __chkstk_darwin(v112);
  v105 = &v97[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = __chkstk_darwin(v9);
  v102 = &v97[-v12];
  __chkstk_darwin(v11);
  v14 = &v97[-v13];
  v15 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  v16 = __chkstk_darwin(v15);
  v100 = &v97[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = __chkstk_darwin(v16);
  v107 = &v97[-v19];
  v20 = __chkstk_darwin(v18);
  v108 = &v97[-v21];
  v22 = __chkstk_darwin(v20);
  v104 = &v97[-v23];
  v24 = __chkstk_darwin(v22);
  v26 = &v97[-v25];
  __chkstk_darwin(v24);
  v28 = &v97[-v27];
  v29 = sub_100053F2C(&qword_1005D3318);
  __chkstk_darwin(v29);
  v31 = &v97[-((v30 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v101 = OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_dateFormatter;
  v32 = *(void **)(v5 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_dateFormatter);
  v103 = v5;
  v33 = v5 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_selectedLocationTimeZone;
  swift_beginAccess(v5 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_selectedLocationTimeZone, v119, 0, 0);
  sub_100007464(v33, (uint64_t)v31, &qword_1005D3318);
  v34 = type metadata accessor for TimeZone(0);
  v35 = *(_QWORD *)(v34 - 8);
  v36 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v35 + 48))(v31, 1, v34);
  v37 = v32;
  isa = 0;
  if (v36 != 1)
  {
    isa = TimeZone._bridgeToObjectiveC()().super.isa;
    (*(void (**)(_BYTE *, uint64_t))(v35 + 8))(v31, v34);
  }
  objc_msgSend(v37, "setTimeZone:", isa);

  v39 = sub_1000A4A6C((uint64_t)v28);
  Date.init()(v39);
  sub_1000A4A6C((uint64_t)v26);
  v40 = v117;
  v41 = v112;
  v109 = *(void (**)(_BYTE *, uint64_t))(v117 + 8);
  v109(v14, v112);
  v42 = v113;
  v43 = v111;
  v44 = (uint64_t)&v111[*(int *)(v113 + 48)];
  sub_100007464((uint64_t)v28, (uint64_t)v111, (uint64_t *)&unk_1005D3320);
  sub_100007464((uint64_t)v26, v44, (uint64_t *)&unk_1005D3320);
  v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 48);
  if (v45((uint64_t)v43, 1, v41) != 1)
  {
    v99 = v26;
    v48 = v104;
    sub_100007464((uint64_t)v43, (uint64_t)v104, (uint64_t *)&unk_1005D3320);
    if (v45(v44, 1, v41) != 1)
    {
      v49 = v42;
      v59 = v102;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v40 + 32))(v102, v44, v41);
      v60 = sub_100008000((unint64_t *)&qword_1005D3438, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
      v98 = dispatch thunk of static Equatable.== infix(_:_:)(v48, v59, v41, v60);
      v50 = v109;
      v109(v59, v41);
      sub_1000051EC((uint64_t)v99, (uint64_t *)&unk_1005D3320);
      sub_1000051EC((uint64_t)v28, (uint64_t *)&unk_1005D3320);
      v50(v48, v41);
      sub_1000051EC((uint64_t)v43, (uint64_t *)&unk_1005D3320);
      v46 = v110;
      v47 = v116;
      if ((v98 & 1) != 0)
        goto LABEL_16;
LABEL_9:
      v51 = v108;
      v52 = sub_1000A4A6C((uint64_t)v108);
      v53 = v105;
      Date.init()(v52);
      v54 = v107;
      sub_1000A4C94((uint64_t)v107);
      v50(v53, v41);
      v55 = v106;
      v56 = (uint64_t)&v106[*(int *)(v49 + 48)];
      sub_100007464((uint64_t)v51, (uint64_t)v106, (uint64_t *)&unk_1005D3320);
      sub_100007464((uint64_t)v54, v56, (uint64_t *)&unk_1005D3320);
      if (v45((uint64_t)v55, 1, v41) == 1)
      {
        sub_1000051EC((uint64_t)v54, (uint64_t *)&unk_1005D3320);
        sub_1000051EC((uint64_t)v51, (uint64_t *)&unk_1005D3320);
        v57 = v45(v56, 1, v41);
        v47 = v116;
        if (v57 == 1)
        {
          sub_1000051EC((uint64_t)v55, (uint64_t *)&unk_1005D3320);
LABEL_18:
          v61 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
          v62 = 0xD000000000000017;
          v63 = 0xD00000000000003DLL;
          v96 = 0x80000001004A6680;
          v64 = "LOCATION_ALERT_SCHEDULED_CONFIRM_MESSAGE_WITH_FRIEND_TOMORROW";
          goto LABEL_19;
        }
      }
      else
      {
        v58 = v100;
        sub_100007464((uint64_t)v55, (uint64_t)v100, (uint64_t *)&unk_1005D3320);
        if (v45(v56, 1, v41) != 1)
        {
          v65 = v102;
          (*(void (**)(_BYTE *, uint64_t, uint64_t))(v117 + 32))(v102, v56, v41);
          v66 = sub_100008000((unint64_t *)&qword_1005D3438, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
          v67 = dispatch thunk of static Equatable.== infix(_:_:)(v58, v65, v41, v66);
          v50(v65, v41);
          sub_1000051EC((uint64_t)v107, (uint64_t *)&unk_1005D3320);
          sub_1000051EC((uint64_t)v108, (uint64_t *)&unk_1005D3320);
          v50(v58, v41);
          sub_1000051EC((uint64_t)v55, (uint64_t *)&unk_1005D3320);
          v47 = v116;
          if ((v67 & 1) != 0)
            goto LABEL_18;
LABEL_20:
          v80 = *(id *)(v103 + v101);
          v81 = Date._bridgeToObjectiveC()().super.isa;
          v82 = objc_msgSend(v80, "stringFromDate:", v81);

          v83 = static String._unconditionallyBridgeFromObjectiveC(_:)(v82);
          v85 = v84;

          v86 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
          v120._countAndFlagsBits = 0xD000000000000017;
          v87._countAndFlagsBits = 0xD000000000000039;
          v120._object = (void *)0x80000001004A6680;
          v87._object = (void *)0x80000001004A6E20;
          v88.value._object = (void *)0x80000001004A6660;
          v88.value._countAndFlagsBits = 0xD000000000000012;
          v89._countAndFlagsBits = 0;
          v89._object = (void *)0xE000000000000000;
          v90 = NSLocalizedString(_:tableName:bundle:value:comment:)(v87, v88, (NSBundle)v86, v89, v120);
          object = v90._object;

          v91 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
          v92 = swift_allocObject(v91, 152, 7);
          *(_OWORD *)(v92 + 16) = xmmword_100481B10;
          *(_QWORD *)(v92 + 56) = &type metadata for String;
          v93 = sub_100071E88();
          *(_QWORD *)(v92 + 32) = v114;
          *(_QWORD *)(v92 + 40) = v47;
          *(_QWORD *)(v92 + 96) = &type metadata for String;
          *(_QWORD *)(v92 + 104) = v93;
          *(_QWORD *)(v92 + 64) = v93;
          *(_QWORD *)(v92 + 72) = v83;
          *(_QWORD *)(v92 + 80) = v85;
          *(_QWORD *)(v92 + 136) = &type metadata for String;
          *(_QWORD *)(v92 + 144) = v93;
          *(_QWORD *)(v92 + 112) = v115;
          *(_QWORD *)(v92 + 120) = v46;
          swift_bridgeObjectRetain(v47);
          swift_bridgeObjectRetain(v46);
          countAndFlagsBits = v90._countAndFlagsBits;
          v78 = v90._object;
          v79 = v92;
          goto LABEL_21;
        }
        sub_1000051EC((uint64_t)v107, (uint64_t *)&unk_1005D3320);
        sub_1000051EC((uint64_t)v108, (uint64_t *)&unk_1005D3320);
        v50(v58, v41);
        v47 = v116;
      }
      sub_1000051EC((uint64_t)v55, &qword_1005D3430);
      goto LABEL_20;
    }
    sub_1000051EC((uint64_t)v99, (uint64_t *)&unk_1005D3320);
    sub_1000051EC((uint64_t)v28, (uint64_t *)&unk_1005D3320);
    v109(v48, v41);
LABEL_8:
    v49 = v42;
    sub_1000051EC((uint64_t)v43, &qword_1005D3430);
    v50 = v109;
    v46 = v110;
    goto LABEL_9;
  }
  sub_1000051EC((uint64_t)v26, (uint64_t *)&unk_1005D3320);
  sub_1000051EC((uint64_t)v28, (uint64_t *)&unk_1005D3320);
  if (v45(v44, 1, v41) != 1)
    goto LABEL_8;
  sub_1000051EC((uint64_t)v43, (uint64_t *)&unk_1005D3320);
  v46 = v110;
  v47 = v116;
LABEL_16:
  v61 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v62 = 0xD000000000000017;
  v63 = 0xD00000000000003ALL;
  v96 = 0x80000001004A6680;
  v64 = "LOCATION_ALERT_SCHEDULED_CONFIRM_MESSAGE_WITH_FRIEND_TODAY";
LABEL_19:
  v68 = (unint64_t)(v64 - 32) | 0x8000000000000000;
  v69.value._object = (void *)0x80000001004A6660;
  v69.value._countAndFlagsBits = 0xD000000000000012;
  v70._countAndFlagsBits = 0;
  v70._object = (void *)0xE000000000000000;
  v71 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v63, v69, (NSBundle)v61, v70, *(Swift::String *)&v62);
  object = v71._object;

  v73 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
  v74 = swift_allocObject(v73, 112, 7);
  *(_OWORD *)(v74 + 16) = xmmword_100481730;
  *(_QWORD *)(v74 + 56) = &type metadata for String;
  v75 = sub_100071E88();
  *(_QWORD *)(v74 + 32) = v114;
  *(_QWORD *)(v74 + 40) = v47;
  *(_QWORD *)(v74 + 96) = &type metadata for String;
  *(_QWORD *)(v74 + 104) = v75;
  v76 = v115;
  *(_QWORD *)(v74 + 64) = v75;
  *(_QWORD *)(v74 + 72) = v76;
  *(_QWORD *)(v74 + 80) = v46;
  swift_bridgeObjectRetain(v47);
  swift_bridgeObjectRetain(v46);
  countAndFlagsBits = v71._countAndFlagsBits;
  v78 = v71._object;
  v79 = v74;
LABEL_21:
  v94 = String.init(format:_:)(countAndFlagsBits, v78, v79);
  swift_bridgeObjectRelease(object);
  return v94;
}

uint64_t sub_100089338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unsigned int *v28;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v60 = a2;
  v61 = a1;
  v3 = type metadata accessor for FMFLocationAlertTarget(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v55 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v8 = (char *)&v54 - v7;
  v9 = sub_100053F2C((uint64_t *)&unk_1005D3350);
  v10 = __chkstk_darwin(v9);
  v56 = (uint64_t)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v54 - v13;
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v54 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v54 - v18;
  v57 = v2 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendLocation;
  sub_100007464(v2 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendLocation, (uint64_t)&v54 - v18, (uint64_t *)&unk_1005D3350);
  v20 = type metadata accessor for FMFLocation(0);
  v58 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48);
  v21 = v58(v19, 1, v20);
  v22 = sub_1000051EC((uint64_t)v19, (uint64_t *)&unk_1005D3350);
  v59 = v2;
  if (v21 == 1)
  {
    v23 = -1;
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v8, enum case for FMFLocationAlertTarget.alertMe(_:), v3);
    v24 = sub_100008000((unint64_t *)&unk_1005E5A00, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocationAlertTarget, (uint64_t)&protocol conformance descriptor for FMFLocationAlertTarget);
    dispatch thunk of RawRepresentable.rawValue.getter(&v66, v3, v24);
    dispatch thunk of RawRepresentable.rawValue.getter(&v64, v3, v24);
    v25 = v67;
    v26 = v65;
    if (v66 == v64 && v67 == v65)
    {
      swift_bridgeObjectRelease_n(v67, 2);
      v23 = 0;
    }
    else
    {
      v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v66, v67, v64, v65, 0);
      swift_bridgeObjectRelease(v25);
      swift_bridgeObjectRelease(v26);
      v23 = (v27 & 1) - 1;
    }
    v22 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v8, v3);
  }
  if (v23 == IndexPath.row.getter(v22))
  {
    v28 = (unsigned int *)&enum case for FMFLocationAlertAddressType.friendLocation(_:);
LABEL_14:
    v32 = *v28;
    v33 = type metadata accessor for FMFLocationAlertAddressType(0);
    v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104);
    v35 = v60;
LABEL_15:
    v36 = v32;
    return v34(v35, v36, v33);
  }
  v29 = v59 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_myCurrentLocation;
  swift_beginAccess(v59 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_myCurrentLocation, &v66, 0, 0);
  sub_100007464(v29, (uint64_t)v17, (uint64_t *)&unk_1005D3350);
  v30 = v58;
  LODWORD(v29) = v58(v17, 1, v20);
  v31 = sub_1000051EC((uint64_t)v17, (uint64_t *)&unk_1005D3350);
  if ((_DWORD)v29 != 1)
    ++v23;
  if (v23 == IndexPath.row.getter(v31))
  {
    v28 = (unsigned int *)&enum case for FMFLocationAlertAddressType.currentLocation(_:);
    goto LABEL_14;
  }
  sub_100007464(v57, (uint64_t)v14, (uint64_t *)&unk_1005D3350);
  v38 = v30(v14, 1, v20);
  v39 = sub_1000051EC((uint64_t)v14, (uint64_t *)&unk_1005D3350);
  if (v38 == 1)
  {
    v41 = v59;
    v40 = v60;
    goto LABEL_24;
  }
  v41 = v59;
  v42 = v55;
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v55, enum case for FMFLocationAlertTarget.alertFriends(_:), v3);
  v43 = sub_100008000((unint64_t *)&unk_1005E5A00, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocationAlertTarget, (uint64_t)&protocol conformance descriptor for FMFLocationAlertTarget);
  dispatch thunk of RawRepresentable.rawValue.getter(&v64, v3, v43);
  dispatch thunk of RawRepresentable.rawValue.getter(&v62, v3, v43);
  v44 = v65;
  v45 = v63;
  if (v64 == v62 && v65 == v63)
  {
    swift_bridgeObjectRelease_n(v65, 2);
    v39 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v42, v3);
    v40 = v60;
  }
  else
  {
    v46 = _stringCompareWithSmolCheck(_:_:expecting:)(v64, v65, v62, v63, 0);
    swift_bridgeObjectRelease(v44);
    v47 = swift_bridgeObjectRelease(v45);
    v39 = (*(uint64_t (**)(char *, uint64_t, __n128))(v4 + 8))(v42, v3, v47);
    v40 = v60;
    if ((v46 & 1) == 0)
      goto LABEL_24;
  }
  ++v23;
LABEL_24:
  if (v23 == IndexPath.row.getter(v39))
  {
    v32 = enum case for FMFLocationAlertAddressType.friendLocation(_:);
    v33 = type metadata accessor for FMFLocationAlertAddressType(0);
    v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104);
    v35 = v40;
    goto LABEL_15;
  }
  v48 = v41 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_customLocation;
  swift_beginAccess(v41 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_customLocation, &v64, 0, 0);
  v49 = v56;
  sub_100007464(v48, v56, (uint64_t *)&unk_1005D3350);
  LODWORD(v48) = v58((char *)v49, 1, v20);
  v50 = sub_1000051EC(v49, (uint64_t *)&unk_1005D3350);
  if ((_DWORD)v48 == 1)
    v51 = v23;
  else
    v51 = v23 + 1;
  v52 = IndexPath.row.getter(v50);
  v33 = type metadata accessor for FMFLocationAlertAddressType(0);
  v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104);
  if (v51 == v52)
    v53 = (unsigned int *)&enum case for FMFLocationAlertAddressType.custom(_:);
  else
    v53 = (unsigned int *)&enum case for FMFLocationAlertAddressType.unknown(_:);
  v36 = *v53;
  v35 = v40;
  return v34(v35, v36, v33);
}

id sub_100089898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  unsigned int (*v56)(char *, uint64_t, uint64_t);
  void *v57;
  id result;
  uint64_t v59;
  void (*v60)(_QWORD);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  __n128 v65;
  void (*v66)(char *, uint64_t, __n128);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  __n128 v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(char *, uint64_t);
  void *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t (*v95)(uint64_t, uint64_t, uint64_t);
  uint64_t v96;
  int v97;
  void *v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  void (*v102)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t (*v113)(uint64_t, uint64_t, uint64_t);
  int v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int v119;
  char *v120;
  uint64_t v121;
  char v122;
  char *v123;
  void (*v124)(uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  void *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  unsigned int (*v134)(uint64_t, uint64_t, uint64_t);
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char v139;
  void (*v140)(char *, uint64_t);
  uint64_t v141;
  uint64_t v142;
  unsigned int (*v143)(uint64_t, uint64_t, uint64_t);
  uint64_t v144;
  void (*v145)(char *, uint64_t, uint64_t);
  char *v146;
  uint64_t v147;
  int v148;
  void (*v149)(char *, uint64_t);
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  void (*v159)(char *, uint64_t);
  void *v160;
  void *v161;
  unsigned int (*v162)(uint64_t, uint64_t, uint64_t);
  void (*v163)(uint64_t, uint64_t);
  uint64_t v164;
  unsigned int v165;
  void (*v166)(char *, _QWORD, uint64_t);
  void (*v167)(char *, uint64_t, uint64_t);
  char *v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  _QWORD *v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  char v203[8];
  char v204[8];
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char v209[8];
  char v210[8];

  v1 = sub_100053F2C((uint64_t *)&unk_1005D3330);
  __chkstk_darwin(v1);
  v170 = (char *)&v162 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for FMFLocation(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v171 = (char *)&v162 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v177 = sub_100053F2C((uint64_t *)&unk_1005D3340);
  __chkstk_darwin(v177);
  v179 = (char *)&v162 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v184 = sub_100053F2C(&qword_1005D3420);
  __chkstk_darwin(v184);
  v188 = (uint64_t)&v162 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v190 = type metadata accessor for FMFLocationAlert(0);
  v197 = *(_QWORD *)(v190 - 8);
  __chkstk_darwin(v190);
  v183 = (char *)&v162 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100053F2C((uint64_t *)&unk_1005DF480);
  v10 = __chkstk_darwin(v9);
  v182 = (uint64_t)&v162 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v186 = (char *)&v162 - v13;
  __chkstk_darwin(v12);
  v187 = (uint64_t)&v162 - v14;
  v15 = sub_100053F2C((uint64_t *)&unk_1005E5940);
  v16 = __chkstk_darwin(v15);
  v169 = (uint64_t)&v162 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v172 = (uint64_t)&v162 - v19;
  v20 = __chkstk_darwin(v18);
  v176 = (uint64_t)&v162 - v21;
  v22 = __chkstk_darwin(v20);
  v185 = (uint64_t)&v162 - v23;
  __chkstk_darwin(v22);
  v189 = (uint64_t)&v162 - v24;
  v195 = type metadata accessor for FMFSchedule.DaysOfWeek(0);
  v194 = *(_QWORD *)(v195 - 8);
  v25 = __chkstk_darwin(v195);
  v193 = (char *)&v162 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v192 = (char *)&v162 - v27;
  v28 = type metadata accessor for FMFSchedule(0);
  v29 = *(_QWORD *)(v28 - 8);
  v201 = v28;
  v202 = v29;
  v30 = __chkstk_darwin(v28);
  v168 = (char *)&v162 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  v196 = (char *)&v162 - v32;
  v33 = sub_100053F2C(&qword_1005D3318);
  __chkstk_darwin(v33);
  v191 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v162 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  v35 = type metadata accessor for FMFLocationAlertTriggerType(0);
  v36 = *(_QWORD **)(v35 - 8);
  v37 = __chkstk_darwin(v35);
  v174 = (char *)&v162 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __chkstk_darwin(v37);
  v199 = (char *)&v162 - v40;
  v41 = __chkstk_darwin(v39);
  v200 = (char *)&v162 - v42;
  v43 = __chkstk_darwin(v41);
  v45 = (char *)&v162 - v44;
  __chkstk_darwin(v43);
  v47 = (char *)&v162 - v46;
  v48 = sub_100053F2C((uint64_t *)&unk_1005D3350);
  v49 = __chkstk_darwin(v48);
  v173 = (uint64_t)&v162 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __chkstk_darwin(v49);
  v181 = (char *)&v162 - v52;
  __chkstk_darwin(v51);
  v54 = (char *)&v162 - v53;
  v55 = v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController__selectedLocation;
  swift_beginAccess(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController__selectedLocation, v210, 0, 0);
  v175 = v55;
  sub_100007464(v55, (uint64_t)v54, (uint64_t *)&unk_1005D3350);
  v178 = v4;
  v56 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  v180 = v3;
  LODWORD(v3) = v56(v54, 1, v3);
  sub_1000051EC((uint64_t)v54, (uint64_t *)&unk_1005D3350);
  if ((_DWORD)v3 == 1)
  {
    v57 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_doneButtonItem);
    if (v57)
      objc_msgSend(v57, "setEnabled:", 0);
    result = *(id *)(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_doneButton);
    if (!result)
      return result;
    return objc_msgSend(result, "setEnabled:", 0);
  }
  v198 = v0;
  v59 = v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_triggerType;
  swift_beginAccess(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_triggerType, v209, 0, 0);
  v167 = (void (*)(char *, uint64_t, uint64_t))v36[2];
  v167(v47, v59, v35);
  v60 = (void (*)(_QWORD))v36[13];
  v165 = enum case for FMFLocationAlertTriggerType.scheduled(_:);
  v166 = (void (*)(char *, _QWORD, uint64_t))v60;
  v60(v45);
  v61 = sub_100008000(&qword_1005D33D8, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocationAlertTriggerType, (uint64_t)&protocol conformance descriptor for FMFLocationAlertTriggerType);
  dispatch thunk of RawRepresentable.rawValue.getter(&v207, v35, v61);
  dispatch thunk of RawRepresentable.rawValue.getter(&v205, v35, v61);
  v62 = v208;
  v63 = v206;
  if (v207 == v205 && v208 == v206)
  {
    v64 = 1;
    v63 = v208;
  }
  else
  {
    v64 = _stringCompareWithSmolCheck(_:_:expecting:)(v207, v208, v205, v206, 0);
  }
  swift_bridgeObjectRelease(v62);
  v65 = swift_bridgeObjectRelease(v63);
  v66 = (void (*)(char *, uint64_t, __n128))v36[1];
  v66(v45, v35, v65);
  ((void (*)(char *, uint64_t))v66)(v47, v35);
  if ((v64 & 1) == 0
    || (v67 = v198 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_selectedLocationTimeZone,
        swift_beginAccess(v198 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_selectedLocationTimeZone, v203, 0, 0), v68 = (uint64_t)v191, sub_100007464(v67, (uint64_t)v191, &qword_1005D3318), v69 = type metadata accessor for TimeZone(0), LODWORD(v67) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 48))(v68, 1, v69), sub_1000051EC(v68, &qword_1005D3318), (_DWORD)v67 != 1))
  {
    v191 = v36;
    v162 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v56;
    v72 = (uint64_t)v200;
    v164 = v59;
    v167(v200, v59, v35);
    v73 = v199;
    v166(v199, v165, v35);
    dispatch thunk of RawRepresentable.rawValue.getter(&v207, v35, v61);
    dispatch thunk of RawRepresentable.rawValue.getter(&v205, v35, v61);
    v74 = v208;
    v75 = v206;
    v163 = (void (*)(uint64_t, uint64_t))v66;
    if (v207 == v205 && v208 == v206)
    {
      swift_bridgeObjectRelease_n(v208, 2);
      ((void (*)(char *, uint64_t))v66)(v73, v35);
      ((void (*)(uint64_t, uint64_t))v66)(v72, v35);
      v76 = v198;
      v77 = v201;
      v78 = v202;
    }
    else
    {
      v79 = _stringCompareWithSmolCheck(_:_:expecting:)(v207, v208, v205, v206, 0);
      swift_bridgeObjectRelease(v74);
      v80 = swift_bridgeObjectRelease(v75);
      v66(v73, v35, v80);
      ((void (*)(uint64_t, uint64_t))v66)(v72, v35);
      v76 = v198;
      v77 = v201;
      v78 = v202;
      if ((v79 & 1) == 0)
        goto LABEL_26;
    }
    v81 = v76 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_schedule;
    swift_beginAccess(v76 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_schedule, v204, 0, 0);
    v82 = v196;
    v83 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v78 + 16))(v196, v81, v77);
    v84 = v192;
    FMFSchedule.daysOfWeek.getter(v83);
    v85 = (*(uint64_t (**)(char *, uint64_t))(v78 + 8))(v82, v77);
    v86 = v193;
    static FMFSchedule.DaysOfWeek.none.getter(v85);
    v87 = sub_100008000(&qword_1005D3398, (uint64_t (*)(uint64_t))&type metadata accessor for FMFSchedule.DaysOfWeek, (uint64_t)&protocol conformance descriptor for FMFSchedule.DaysOfWeek);
    v88 = v195;
    dispatch thunk of RawRepresentable.rawValue.getter(&v207, v195, v87);
    dispatch thunk of RawRepresentable.rawValue.getter(&v205, v88, v87);
    v89 = v207;
    v90 = v205;
    v91 = *(void (**)(char *, uint64_t))(v194 + 8);
    v91(v86, v88);
    v91(v84, v88);
    if (v89 == v90)
      goto LABEL_21;
LABEL_26:
    v93 = v76 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_locationAlert;
    swift_beginAccess(v76 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_locationAlert, &v207, 0, 0);
    v94 = v189;
    sub_100007464(v93, v189, (uint64_t *)&unk_1005E5940);
    v95 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v197 + 48);
    v96 = v190;
    v97 = v95(v94, 1, v190);
    sub_1000051EC(v94, (uint64_t *)&unk_1005E5940);
    if (v97 == 1)
      goto LABEL_27;
    v99 = v185;
    sub_100007464(v93, v185, (uint64_t *)&unk_1005E5940);
    v199 = (char *)v95;
    v100 = v95(v99, 1, v96);
    v200 = (char *)v93;
    if (v100)
    {
      sub_1000051EC(v99, (uint64_t *)&unk_1005E5940);
      v101 = (uint64_t)v191;
      v102 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v191[7];
      v103 = v187;
      v102(v187, 1, 1, v35);
    }
    else
    {
      v104 = v197;
      v105 = v183;
      (*(void (**)(char *, uint64_t, uint64_t))(v197 + 16))(v183, v99, v96);
      v106 = sub_1000051EC(v99, (uint64_t *)&unk_1005E5940);
      v103 = v187;
      FMFLocationAlert.triggerType.getter(v106);
      (*(void (**)(char *, uint64_t))(v104 + 8))(v105, v96);
      v101 = (uint64_t)v191;
      v102 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v191[7];
      v102(v103, 0, 1, v35);
    }
    v107 = (uint64_t)v186;
    v108 = v184;
    v109 = v96;
    v167(v186, v164, v35);
    v102(v107, 0, 1, v35);
    v110 = v188;
    v111 = v188 + *(int *)(v108 + 48);
    sub_100007464(v103, v188, (uint64_t *)&unk_1005DF480);
    v112 = v110;
    sub_100007464(v107, v111, (uint64_t *)&unk_1005DF480);
    v113 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v101 + 48);
    v114 = v113(v112, 1, v35);
    v76 = v198;
    if (v114 == 1)
    {
      sub_1000051EC(v107, (uint64_t *)&unk_1005DF480);
      v112 = v188;
      sub_1000051EC(v103, (uint64_t *)&unk_1005DF480);
      v115 = v113(v111, 1, v35);
      v116 = v202;
      if (v115 == 1)
      {
        sub_1000051EC(v112, (uint64_t *)&unk_1005DF480);
        v117 = (uint64_t)v181;
        goto LABEL_41;
      }
    }
    else
    {
      v118 = v182;
      sub_100007464(v112, v182, (uint64_t *)&unk_1005DF480);
      v119 = v113(v111, 1, v35);
      v116 = v202;
      if (v119 != 1)
      {
        v120 = v174;
        ((void (*)(char *, uint64_t, uint64_t))v191[4])(v174, v111, v35);
        v121 = sub_100008000(&qword_1005D33D0, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocationAlertTriggerType, (uint64_t)&protocol conformance descriptor for FMFLocationAlertTriggerType);
        v122 = dispatch thunk of static Equatable.== infix(_:_:)(v118, v120, v35, v121);
        v123 = v120;
        v124 = v163;
        v163((uint64_t)v123, v35);
        sub_1000051EC((uint64_t)v186, (uint64_t *)&unk_1005DF480);
        sub_1000051EC(v187, (uint64_t *)&unk_1005DF480);
        v124(v118, v35);
        sub_1000051EC(v112, (uint64_t *)&unk_1005DF480);
        v117 = (uint64_t)v181;
        if ((v122 & 1) != 0)
        {
LABEL_41:
          v125 = v176;
          sub_100007464((uint64_t)v200, v176, (uint64_t *)&unk_1005E5940);
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v199)(v125, 1, v96))
          {
            sub_1000051EC(v125, (uint64_t *)&unk_1005E5940);
            v126 = v178;
            v127 = v180;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v178 + 56))(v117, 1, 1, v180);
            v128 = (uint64_t)v179;
          }
          else
          {
            v130 = v197;
            v131 = v183;
            (*(void (**)(char *, uint64_t, uint64_t))(v197 + 16))(v183, v125, v96);
            v132 = sub_1000051EC(v125, (uint64_t *)&unk_1005E5940);
            FMFLocationAlert.location.getter(v132);
            (*(void (**)(char *, uint64_t))(v130 + 8))(v131, v96);
            v127 = v180;
            v128 = (uint64_t)v179;
            v126 = v178;
          }
          v133 = v128 + *(int *)(v177 + 48);
          sub_100007464(v117, v128, (uint64_t *)&unk_1005D3350);
          sub_100007464(v175, v133, (uint64_t *)&unk_1005D3350);
          v134 = v162;
          if (v162(v128, 1, v127) == 1)
          {
            sub_1000051EC(v117, (uint64_t *)&unk_1005D3350);
            if (v134(v133, 1, v127) == 1)
            {
              sub_1000051EC(v128, (uint64_t *)&unk_1005D3350);
              goto LABEL_55;
            }
          }
          else
          {
            v135 = v173;
            sub_100007464(v128, v173, (uint64_t *)&unk_1005D3350);
            if (v134(v133, 1, v127) != 1)
            {
              v136 = v171;
              (*(void (**)(char *, uint64_t, uint64_t))(v126 + 32))(v171, v133, v127);
              v137 = sub_100008000(&qword_1005D3378, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocation, (uint64_t)&protocol conformance descriptor for FMFLocation);
              v138 = v135;
              v139 = dispatch thunk of static Equatable.== infix(_:_:)(v135, v136, v127, v137);
              v140 = *(void (**)(char *, uint64_t))(v126 + 8);
              v140(v136, v127);
              sub_1000051EC(v117, (uint64_t *)&unk_1005D3350);
              v140((char *)v138, v127);
              sub_1000051EC(v128, (uint64_t *)&unk_1005D3350);
              if ((v139 & 1) != 0)
              {
LABEL_55:
                v141 = (uint64_t)v200;
                v142 = v172;
                sub_100007464((uint64_t)v200, v172, (uint64_t *)&unk_1005E5940);
                v143 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v199;
                if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v199)(v142, 1, v109))
                {
                  sub_1000051EC(v142, (uint64_t *)&unk_1005E5940);
                }
                else
                {
                  v144 = v197;
                  v145 = *(void (**)(char *, uint64_t, uint64_t))(v197 + 16);
                  v146 = v183;
                  v145(v183, v142, v109);
                  v147 = sub_1000051EC(v142, (uint64_t *)&unk_1005E5940);
                  v148 = FMFLocationAlert.repeating.getter(v147) & 1;
                  v149 = *(void (**)(char *, uint64_t))(v144 + 8);
                  v149(v146, v109);
                  if (*(unsigned __int8 *)(v76 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_repeating) == v148)
                  {
                    v150 = v169;
                    sub_100007464(v141, v169, (uint64_t *)&unk_1005E5940);
                    if (v143(v150, 1, v109))
                    {
                      sub_1000051EC(v150, (uint64_t *)&unk_1005E5940);
                      v151 = (uint64_t)v170;
                      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v116 + 56))(v170, 1, 1, v201);
                    }
                    else
                    {
                      v152 = v183;
                      v145(v183, v150, v109);
                      v153 = sub_1000051EC(v150, (uint64_t *)&unk_1005E5940);
                      v151 = (uint64_t)v170;
                      FMFLocationAlert.schedule.getter(v153);
                      v149(v152, v109);
                      v154 = v201;
                      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v116 + 48))(v151, 1, v201) != 1)
                      {
                        v155 = v168;
                        (*(void (**)(char *, uint64_t, uint64_t))(v116 + 32))(v168, v151, v154);
                        v156 = v76 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_schedule;
                        swift_beginAccess(v76 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_schedule, &v205, 0, 0);
                        v157 = v196;
                        (*(void (**)(char *, uint64_t, uint64_t))(v116 + 16))(v196, v156, v154);
                        v158 = sub_100008000(&qword_1005D3428, (uint64_t (*)(uint64_t))&type metadata accessor for FMFSchedule, (uint64_t)&protocol conformance descriptor for FMFSchedule);
                        LOBYTE(v156) = dispatch thunk of static Equatable.== infix(_:_:)(v155, v157, v154, v158);
                        v159 = *(void (**)(char *, uint64_t))(v116 + 8);
                        v159(v157, v154);
                        if ((v156 & 1) == 0)
                        {
                          v160 = *(void **)(v76 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_doneButtonItem);
                          if (v160)
                            objc_msgSend(v160, "setEnabled:", 1);
                          v161 = *(void **)(v76 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_doneButton);
                          if (v161)
                            objc_msgSend(v161, "setEnabled:", 1);
                          return (id)((uint64_t (*)(char *, uint64_t))v159)(v155, v154);
                        }
                        v159(v155, v154);
                        goto LABEL_21;
                      }
                    }
                    sub_1000051EC(v151, (uint64_t *)&unk_1005D3330);
LABEL_21:
                    v92 = *(void **)(v76 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_doneButtonItem);
                    if (v92)
                      objc_msgSend(v92, "setEnabled:", 0);
                    result = *(id *)(v76 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_doneButton);
                    if (result)
                      return objc_msgSend(result, "setEnabled:", 0);
                    return result;
                  }
                }
              }
LABEL_27:
              v98 = *(void **)(v76 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_doneButtonItem);
              if (v98)
                objc_msgSend(v98, "setEnabled:", 1);
              result = *(id *)(v76 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_doneButton);
              if (!result)
                return result;
              return objc_msgSend(result, "setEnabled:", 1);
            }
            sub_1000051EC(v117, (uint64_t *)&unk_1005D3350);
            (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v135, v127);
          }
          sub_1000051EC(v128, (uint64_t *)&unk_1005D3340);
          goto LABEL_27;
        }
LABEL_43:
        v129 = *(void **)(v76 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_doneButtonItem);
        if (v129)
          objc_msgSend(v129, "setEnabled:", 1);
        result = *(id *)(v76 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_doneButton);
        if (!result)
          return result;
        return objc_msgSend(result, "setEnabled:", 1);
      }
      sub_1000051EC((uint64_t)v186, (uint64_t *)&unk_1005DF480);
      sub_1000051EC(v187, (uint64_t *)&unk_1005DF480);
      v163(v118, v35);
    }
    sub_1000051EC(v112, &qword_1005D3420);
    goto LABEL_43;
  }
  v70 = v198;
  v71 = *(void **)(v198 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_doneButtonItem);
  if (v71)
    objc_msgSend(v71, "setEnabled:", 0);
  result = *(id *)(v70 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_doneButton);
  if (result)
    return objc_msgSend(result, "setEnabled:", 0);
  return result;
}

void sub_10008ABE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_10005E190(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_delegate);
  sub_1000051EC(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_locationAlert, (uint64_t *)&unk_1005E5940);

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_mapSnapshotter));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendHandles));
  sub_1000051EC(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendForAlert, &qword_1005D3380);
  v1 = v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_alertTarget;
  v2 = type metadata accessor for FMFLocationAlertTarget(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1000051EC(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_myCurrentLocation, (uint64_t *)&unk_1005D3350);
  sub_1000051EC(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_myCurrentUnshiftedLocation, (uint64_t *)&unk_1005D3350);
  sub_1000051EC(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendLocation, (uint64_t *)&unk_1005D3350);
  sub_1000051EC(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendUnshiftedLocation, (uint64_t *)&unk_1005D3350);
  sub_1000051EC(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_customLocation, (uint64_t *)&unk_1005D3350);
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_locationShifter));
  sub_1000051EC(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController__selectedLocation, (uint64_t *)&unk_1005D3350);
  sub_1000051EC(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_selectedLocationTimeZone, &qword_1005D3318);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_imageCache));
  v3 = v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_triggerType;
  v4 = type metadata accessor for FMFLocationAlertTriggerType(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_schedule;
  v6 = type metadata accessor for FMFSchedule(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);

}

id sub_10008AE08()
{
  return sub_100094C38(type metadata accessor for FMLocationAlertViewController);
}

uint64_t sub_10008B03C()
{
  return type metadata accessor for FMLocationAlertViewController(0);
}

uint64_t type metadata accessor for FMLocationAlertViewController(uint64_t a1)
{
  return sub_10001DC04(a1, (uint64_t *)&unk_1005D3168, (uint64_t)&nominal type descriptor for FMLocationAlertViewController);
}

void sub_10008B058(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD v16[12];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  char *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  char *v36;
  char *v37;
  char *v38;

  v16[0] = &unk_100481BB0;
  sub_100007178(319, &qword_1005D3178, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocationAlert);
  if (v3 <= 0x3F)
  {
    v16[1] = *(_QWORD *)(v2 - 8) + 64;
    v16[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v16[3] = (char *)&value witness table for Builtin.NativeObject + 64;
    v16[4] = &unk_100481BC8;
    v16[5] = &unk_100481BC8;
    v16[6] = &unk_100481BC8;
    v16[7] = &unk_100481BC8;
    v16[8] = &unk_100481BC8;
    v16[9] = &unk_100481BE0;
    sub_100007178(319, (unint64_t *)&qword_1005D3180, (uint64_t (*)(uint64_t))&type metadata accessor for FMFFriend);
    if (v5 <= 0x3F)
    {
      v16[10] = *(_QWORD *)(v4 - 8) + 64;
      v6 = type metadata accessor for FMFLocationAlertTarget(319);
      if (v7 <= 0x3F)
      {
        v16[11] = *(_QWORD *)(v6 - 8) + 64;
        sub_100007178(319, (unint64_t *)&qword_1005E27A0, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocation);
        if (v9 <= 0x3F)
        {
          v17 = *(_QWORD *)(v8 - 8) + 64;
          v18 = v17;
          v19 = v17;
          v20 = v17;
          v21 = v17;
          v22 = (char *)&value witness table for Builtin.NativeObject + 64;
          v23 = v17;
          sub_100007178(319, &qword_1005D3190, (uint64_t (*)(uint64_t))&type metadata accessor for TimeZone);
          if (v11 <= 0x3F)
          {
            v24 = *(_QWORD *)(v10 - 8) + 64;
            v25 = &unk_100481BF8;
            v26 = (char *)&value witness table for Builtin.BridgeObject + 64;
            v27 = &unk_100481BC8;
            v12 = type metadata accessor for FMFLocationAlertTriggerType(319);
            if (v13 <= 0x3F)
            {
              v28 = *(_QWORD *)(v12 - 8) + 64;
              v14 = type metadata accessor for FMFSchedule(319);
              if (v15 <= 0x3F)
              {
                v29 = *(_QWORD *)(v14 - 8) + 64;
                v30 = &unk_100481BE0;
                v31 = &unk_100481BE0;
                v32 = &unk_100481BE0;
                v33 = &unk_100481BE0;
                v34 = &unk_100481BC8;
                v35 = &unk_100481BC8;
                v36 = (char *)&value witness table for Builtin.UnknownObject + 64;
                v37 = (char *)&value witness table for Builtin.UnknownObject + 64;
                v38 = (char *)&value witness table for Builtin.UnknownObject + 64;
                swift_updateClassMetadata2(a1, 256, 34, v16, a1 + 96);
              }
            }
          }
        }
      }
    }
  }
}

id sub_10008B238(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void *v25;
  id v26;
  void *v27;
  id result;
  uint64_t v29;
  __n128 v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  __n128 v58;
  uint64_t v59;
  char v60;
  char v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  Class isa;
  double v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  _BYTE v88[24];

  v82 = type metadata accessor for FMFSchedule(0);
  v79 = *(_QWORD *)(v82 - 8);
  v3 = __chkstk_darwin(v82);
  v80 = (char *)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v81 = (char *)&v77 - v5;
  v6 = type metadata accessor for DateComponents(0);
  v83 = *(_QWORD *)(v6 - 8);
  v84 = v6;
  v7 = __chkstk_darwin(v6);
  v78 = (uint64_t)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v77 - v10;
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v77 - v13;
  __chkstk_darwin(v12);
  v16 = (char *)&v77 - v15;
  v17 = type metadata accessor for IndexPath(0);
  v18 = *(_QWORD *)(v17 - 8);
  __chkstk_darwin(v17);
  v20 = (char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100053F2C(&qword_1005D33C0);
  __chkstk_darwin(v21);
  v23 = (char *)&v77 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = v1;
  v25 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_tableView);
  v85 = a1;
  v26 = objc_msgSend(v25, "indexPathForCell:", a1);
  if (!v26)
  {
LABEL_28:
    result = (id)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v23, 1, 1, v17);
    goto LABEL_29;
  }
  v27 = v26;
  v87 = v25;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v26);

  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v23, v20, v17);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v23, 0, 1, v17);
  result = (id)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v23, 1, v17);
  if ((_DWORD)result == 1)
  {
LABEL_29:
    __break(1u);
    return result;
  }
  v29 = IndexPath.row.getter(result);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v23, v17);
  v86 = v17;
  if (v29 == 1)
  {
    sub_1000952AC((uint64_t)v16);
    v31 = DateComponents.hour.getter(v30);
    v33 = v32;
    v34 = v84;
    v35 = *(void (**)(char *, uint64_t))(v83 + 8);
    v35(v16, v84);
    if ((v33 & 1) != 0)
      v31 = 0;
    v23 = (char *)(v24 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_schedule);
    swift_beginAccess(v24 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_schedule, v88, 33, 0);
    FMFSchedule.startHour.setter(v31);
    swift_endAccess(v88);
    v36 = sub_1000952AC((uint64_t)v14);
    v37 = DateComponents.minute.getter(v36);
    v39 = v38;
    v35(v14, v34);
    v40 = v24;
    if ((v39 & 1) != 0)
      v37 = 0;
    swift_beginAccess(v23, v88, 33, 0);
    FMFSchedule.startMin.setter(v37);
    swift_endAccess(v88);
    v41 = v79;
    v42 = *(uint64_t (**)(char *, char *, uint64_t))(v79 + 16);
    v44 = v81;
    v43 = v82;
    v45 = v42(v81, v23, v82);
    v46 = FMFSchedule.endHour.getter(v45);
    v47 = *(void (**)(char *, uint64_t))(v41 + 8);
    v47(v44, v43);
    v17 = (uint64_t)v80;
    v48 = v42(v80, v23, v43);
    v49 = FMFSchedule.startHour.getter(v48);
    v47((char *)v17, v43);
    if (v49 < v46)
      goto LABEL_23;
    v50 = v42(v44, v23, v43);
    v51 = FMFSchedule.startHour.getter(v50);
    v47(v44, v43);
    v52 = __OFADD__(v51, 1);
    v53 = v51 + 1;
    if (!v52)
    {
      swift_beginAccess(v23, v88, 33, 0);
      FMFSchedule.endHour.setter(v53);
      swift_endAccess(v88);
      v54 = v42(v44, v23, v43);
      v55 = FMFSchedule.startMin.getter(v54);
      v47(v44, v43);
      swift_beginAccess(v23, v88, 33, 0);
      v56 = v55;
      goto LABEL_22;
    }
    __break(1u);
    goto LABEL_28;
  }
  if ((*(_BYTE *)(v24 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_startTimeCellsExpanded) & 1) != 0)
  {
    v57 = v29 == 3;
    v40 = v24;
    if (!v57)
      goto LABEL_23;
  }
  else
  {
    v57 = v29 == 2;
    v40 = v24;
    if (!v57)
      goto LABEL_23;
  }
  sub_1000952AC((uint64_t)v11);
  v59 = DateComponents.hour.getter(v58);
  v61 = v60;
  v62 = v84;
  v63 = *(void (**)(char *, uint64_t))(v83 + 8);
  v63(v11, v84);
  if ((v61 & 1) != 0)
    v64 = 0;
  else
    v64 = v59;
  v65 = v40 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_schedule;
  swift_beginAccess(v40 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_schedule, v88, 33, 0);
  FMFSchedule.endHour.setter(v64);
  swift_endAccess(v88);
  v66 = v78;
  v67 = sub_1000952AC(v78);
  v68 = DateComponents.minute.getter(v67);
  v70 = v69;
  v63((char *)v66, v62);
  if ((v70 & 1) != 0)
    v68 = 0;
  swift_beginAccess(v65, v88, 33, 0);
  v56 = v68;
LABEL_22:
  FMFSchedule.endMin.setter(v56);
  swift_endAccess(v88);
LABEL_23:
  v71 = sub_10007CB8C(2);
  v72 = sub_100053F2C(&qword_1005D33C8);
  v73 = swift_allocObject(v72, ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ 2 * *(_QWORD *)(v18 + 72), *(unsigned __int8 *)(v18 + 80) | 7);
  *(_OWORD *)(v73 + 16) = xmmword_100481730;
  IndexPath.init(row:section:)(0, v71);
  if (*(_BYTE *)(v40 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_startTimeCellsExpanded))
    v74 = 2;
  else
    v74 = 1;
  IndexPath.init(row:section:)(v74, v71);
  isa = Array._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v76 = swift_bridgeObjectRelease(v73).n128_u64[0];
  objc_msgSend(v87, "reloadRowsAtIndexPaths:withRowAnimation:", isa, 100, v76);

  return sub_100089898();
}

uint64_t sub_10008B840(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t result;
  _QWORD v65[10];
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  v100 = a1;
  v70 = type metadata accessor for IndexPath(0);
  v69 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v68 = (char *)v65 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for IndexSet(0);
  v76 = *(_QWORD *)(v77 - 8);
  __chkstk_darwin(v77);
  v75 = (char *)v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100053F2C(&qword_1005D3380);
  __chkstk_darwin(v4);
  v85 = (char *)v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for FMFLocationAlert(0);
  v83 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v65[3] = (char *)v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100053F2C((uint64_t *)&unk_1005E5940);
  __chkstk_darwin(v7);
  v82 = (char *)v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100053F2C(&qword_1005DC400);
  __chkstk_darwin(v9);
  v84 = (char *)v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100053F2C(&qword_1005D3418);
  __chkstk_darwin(v11);
  v93 = (char *)v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100053F2C(&qword_1005D3370);
  __chkstk_darwin(v13);
  v92 = (char *)v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_100053F2C((uint64_t *)&unk_1005D3340);
  v15 = __chkstk_darwin(v88);
  v67 = (char *)v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v89 = (char *)v65 - v17;
  v99 = type metadata accessor for FMFLocationAlertAddressType(0);
  v98 = *(_QWORD *)(v99 - 8);
  v18 = __chkstk_darwin(v99);
  v96 = (char *)v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v18);
  v74 = (char *)v65 - v21;
  __chkstk_darwin(v20);
  v22 = sub_100053F2C(&qword_1005D3318);
  __chkstk_darwin(v22);
  v72 = (char *)v65 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_100053F2C((uint64_t *)&unk_1005D3350);
  v25 = __chkstk_darwin(v24);
  v80 = (char *)v65 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __chkstk_darwin(v25);
  v79 = (char *)v65 - v28;
  v29 = __chkstk_darwin(v27);
  v78 = (char *)v65 - v30;
  v31 = __chkstk_darwin(v29);
  v91 = (char *)v65 - v32;
  v33 = __chkstk_darwin(v31);
  v65[7] = (char *)v65 - v34;
  v35 = __chkstk_darwin(v33);
  v86 = (char *)v65 - v36;
  v37 = __chkstk_darwin(v35);
  v65[9] = (char *)v65 - v38;
  v39 = __chkstk_darwin(v37);
  v73 = (char *)v65 - v40;
  v41 = __chkstk_darwin(v39);
  v65[6] = (char *)v65 - v42;
  v43 = __chkstk_darwin(v41);
  v65[5] = (char *)v65 - v44;
  v45 = __chkstk_darwin(v43);
  v71 = (char *)v65 - v46;
  __chkstk_darwin(v45);
  v65[4] = (char *)v65 - v47;
  v90 = type metadata accessor for FMFLocation(0);
  v97 = *(_QWORD *)(v90 - 8);
  v48 = __chkstk_darwin(v90);
  v87 = (char *)v65 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __chkstk_darwin(v48);
  v65[8] = (char *)v65 - v51;
  v52 = __chkstk_darwin(v50);
  v65[2] = (char *)v65 - v53;
  v54 = __chkstk_darwin(v52);
  v65[0] = (char *)v65 - v55;
  __chkstk_darwin(v54);
  v65[1] = (char *)v65 - v56;
  v95 = type metadata accessor for FMFLocationAlertTarget(0);
  v94 = *(_QWORD *)(v95 - 8);
  v57 = __chkstk_darwin(v95);
  v81 = (char *)v65 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __chkstk_darwin(v57);
  v60 = __chkstk_darwin(v59);
  __chkstk_darwin(v60);
  v61 = type metadata accessor for FMFLocationAlertTriggerType(0);
  v62 = __chkstk_darwin(v61);
  v63 = IndexPath.section.getter(v62);
  result = sub_10008D574(v63);
  v101 = v1;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_editable) & 1) != 0
    || result == 5)
  {
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_10008D574(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  __n128 v26;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[24];

  v3 = type metadata accessor for FMFLocationAlertTriggerType(0);
  v4 = *(_QWORD **)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v28 - v9;
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v28 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v28 - v14;
  if (!a1)
    return 0;
  if (a1 != 1)
  {
    v17 = v1 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_triggerType;
    swift_beginAccess(v1 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_triggerType, v35, 0, 0);
    v30 = (void (*)(char *, uint64_t, uint64_t))v4[2];
    v30(v15, v17, v3);
    v18 = enum case for FMFLocationAlertTriggerType.scheduled(_:);
    v29 = (void (*)(char *, uint64_t, uint64_t))v4[13];
    v29(v13, enum case for FMFLocationAlertTriggerType.scheduled(_:), v3);
    v19 = sub_100008000(&qword_1005D33D0, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocationAlertTriggerType, (uint64_t)&protocol conformance descriptor for FMFLocationAlertTriggerType);
    v20 = dispatch thunk of static Equatable.== infix(_:_:)(v15, v13, v3, v19);
    v21 = (void (*)(char *, uint64_t))v4[1];
    v21(v13, v3);
    v21(v15, v3);
    if ((v20 & 1) != 0)
    {
      v16 = 2;
    }
    else
    {
      v16 = 3;
      if (a1 == 2)
        return v16;
    }
    v30(v10, v17, v3);
    v29(v7, v18, v3);
    v22 = sub_100008000(&qword_1005D33D8, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocationAlertTriggerType, (uint64_t)&protocol conformance descriptor for FMFLocationAlertTriggerType);
    dispatch thunk of RawRepresentable.rawValue.getter(&v33, v3, v22);
    dispatch thunk of RawRepresentable.rawValue.getter(&v31, v3, v22);
    v23 = v34;
    v24 = v32;
    if (v33 == v31 && v34 == v32)
    {
      swift_bridgeObjectRelease_n(v34, 2);
      v21(v7, v3);
      v21(v10, v3);
    }
    else
    {
      v25 = _stringCompareWithSmolCheck(_:_:expecting:)(v33, v34, v31, v32, 0);
      swift_bridgeObjectRelease(v23);
      v26 = swift_bridgeObjectRelease(v24);
      ((void (*)(char *, uint64_t, __n128))v21)(v7, v3, v26);
      v21(v10, v3);
      if ((v25 & 1) == 0)
        return 5;
    }
    if (v16 == a1)
      return 2;
    if (v16 + 1 == a1)
      return 4;
    return 5;
  }
  return 1;
}

void sub_10008D8F4()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  Swift::String v4;
  Swift::String v5;
  void *object;
  NSString v7;
  id v8;
  id v9;
  Swift::String v10;
  Swift::String v11;
  void *v12;
  NSString v13;
  void *v14;
  id v15;
  id v16;
  Swift::String v17;
  Swift::String v18;
  void *v19;
  uint64_t v20;
  id v21;
  NSString v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  _QWORD aBlock[5];
  uint64_t v28;
  Swift::String v29;
  Swift::String v30;
  Swift::String v31;

  v1 = v0;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v2 = (void *)objc_opt_self(NSBundle);
  v3 = objc_msgSend(v2, "mainBundle");
  v4._countAndFlagsBits = 0xD000000000000022;
  v29._countAndFlagsBits = 0xD000000000000034;
  v29._object = (void *)0x80000001004A6D20;
  v4._object = (void *)0x80000001004A6CF0;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v29)._object;

  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v8 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", 0, v7, 0);

  _StringGuts.grow(_:)(20);
  v9 = objc_msgSend(v2, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
  v10._countAndFlagsBits = 0xD000000000000029;
  v30._countAndFlagsBits = 0xD00000000000003BLL;
  v30._object = (void *)0x80000001004A6D90;
  v10._object = (void *)0x80000001004A6D60;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v30)._object;

  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v12);
  v14 = (void *)objc_opt_self(UIAlertAction);
  v15 = objc_msgSend(v14, "actionWithTitle:style:handler:", v13, 1, 0);

  _StringGuts.grow(_:)(20);
  v16 = objc_msgSend(v2, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
  v31._countAndFlagsBits = 0xD00000000000002DLL;
  v31._object = (void *)0x80000001004A6550;
  v17._object = (void *)0x80000001004A6530;
  v17._countAndFlagsBits = 0xD00000000000001BLL;
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  v19 = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, (Swift::String_optional)0, (NSBundle)v16, v18, v31)._object;

  v20 = swift_allocObject(&unk_100541DC0, 24, 7);
  *(_QWORD *)(v20 + 16) = v1;
  v21 = v1;
  v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v19);
  aBlock[4] = sub_100099BF0;
  v28 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100008B40;
  aBlock[3] = &unk_100541DD8;
  v23 = _Block_copy(aBlock);
  v24 = objc_msgSend(v14, "actionWithTitle:style:handler:", v22, 2, v23, swift_release(v28).n128_f64[0]);
  _Block_release(v23);

  objc_msgSend(v8, "addAction:", v15);
  objc_msgSend(v8, "addAction:", v24);
  v25 = objc_msgSend(v21, "parentViewController");
  if (v25)
  {
    v26 = v25;
    objc_msgSend(v25, "presentViewController:animated:completion:", v8, 1, 0);

  }
}

uint64_t sub_10008DEE0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  unsigned int *v40;
  char *v41;
  uint64_t v42;
  void *v43;
  NSString v44;
  Class isa;
  char *v46;
  char *v47;
  uint64_t (*v48)(char *, uint64_t);
  int v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  void *v56;
  char **v57;
  char *v58;
  void (*v59)(char *, _QWORD, uint64_t);
  char *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  void *v71;
  id v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  id v84;
  void *v85;
  uint64_t v86;
  id v87;
  Swift::String v88;
  Swift::String v89;
  Swift::String v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(char *, char *, uint64_t);
  char *v98;
  unint64_t v99;
  uint64_t v100;
  void (*v101)(char *, uint64_t);
  uint64_t v102;
  uint64_t v103;
  NSString v104;
  uint64_t v105;
  char v106;
  __n128 v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  Swift::String v111;
  void *object;
  NSString v113;
  void *v114;
  char v115;
  __n128 v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  void *v120;
  id v121;
  Swift::String v122;
  Swift::String v123;
  void *v124;
  NSString v125;
  void *v126;
  char *v127;
  char *v128;
  uint64_t v129;
  id v130;
  Swift::String v131;
  Swift::String_optional v132;
  Swift::String v133;
  Swift::String v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  void (*v140)(char *, char *, uint64_t);
  char *v141;
  unint64_t v142;
  uint64_t v143;
  void (*v144)(char *, uint64_t);
  uint64_t v145;
  uint64_t v146;
  NSString v147;
  uint64_t v148;
  double v149;
  id v150;
  char *v151;
  char *v152;
  id v153;
  Swift::String v154;
  Swift::String v155;
  Swift::String v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  unint64_t v163;
  uint64_t v164;
  void (*v165)(char *, uint64_t);
  uint64_t v166;
  uint64_t v167;
  NSString v168;
  uint64_t v169;
  double v170;
  id v171;
  id v172;
  void *v173;
  id v174;
  void *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char v182;
  void (*v183)(char *, uint64_t);
  id v184;
  void *v185;
  id v186;
  void *v187;
  uint64_t v188;
  uint64_t result;
  unint64_t v190;
  char *v191;
  char *v192;
  char *v193;
  char *v194;
  char *v195;
  char *v196;
  char *v197;
  char *v198;
  char *v199;
  char *v200;
  uint64_t countAndFlagsBits;
  uint64_t v202;
  void (*v203)(char *, char *, uint64_t);
  uint64_t v204;
  char *v205;
  char *v206;
  uint64_t v207;
  id v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  unint64_t v213;
  uint64_t v214;
  uint64_t v215;
  char v216[32];
  Swift::String v217;
  Swift::String v218;
  Swift::String v219;
  Swift::String v220;

  v1 = v0;
  v2 = sub_100053F2C(&qword_1005D3380);
  v3 = __chkstk_darwin(v2);
  v199 = (char *)&v191 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v198 = (char *)&v191 - v6;
  __chkstk_darwin(v5);
  countAndFlagsBits = (uint64_t)&v191 - v7;
  v202 = type metadata accessor for FMFFriend(0);
  v204 = *(_QWORD *)(v202 - 8);
  v8 = __chkstk_darwin(v202);
  v10 = (char *)&v191 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v195 = (char *)&v191 - v12;
  v13 = __chkstk_darwin(v11);
  v191 = (char *)&v191 - v14;
  v15 = __chkstk_darwin(v13);
  v194 = (char *)&v191 - v16;
  v17 = __chkstk_darwin(v15);
  v193 = (char *)&v191 - v18;
  __chkstk_darwin(v17);
  v200 = (char *)&v191 - v19;
  v20 = type metadata accessor for FMFLocationAlertTarget(0);
  v209 = *(char **)(v20 - 8);
  v21 = __chkstk_darwin(v20);
  v197 = (char *)&v191 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v21);
  v196 = (char *)&v191 - v24;
  __chkstk_darwin(v23);
  v26 = (char *)&v191 - v25;
  v27 = type metadata accessor for FMFLocationAlertTriggerType(0);
  v28 = *(char **)(v27 - 8);
  v29 = __chkstk_darwin(v27);
  v205 = (char *)&v191 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __chkstk_darwin(v29);
  v206 = (char *)&v191 - v32;
  v33 = __chkstk_darwin(v31);
  v35 = (char *)&v191 - v34;
  v36 = v0[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_triggerCellsExpanded] == 1;
  v192 = v10;
  if (!v36)
  {
    v39 = &v0[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_triggerType];
    swift_beginAccess(&v0[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_triggerType], v216, 0, 0);
    (*((void (**)(char *, char *, uint64_t))v28 + 2))(v35, v39, v27);
    goto LABEL_11;
  }
  v37 = IndexPath.row.getter(v33);
  if (v37 == 2)
  {
    v40 = (unsigned int *)&enum case for FMFLocationAlertTriggerType.scheduled(_:);
LABEL_9:
    v38 = *v40;
    goto LABEL_10;
  }
  if (v37 != 1)
  {
    if (v37)
    {
      result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD00000000000002BLL, 0x80000001004A6790, "FindMy/FMLocationAlertViewController.swift", 42, 2, 1244, 0);
      __break(1u);
      return result;
    }
    v40 = (unsigned int *)&enum case for FMFLocationAlertTriggerType.arriving(_:);
    goto LABEL_9;
  }
  v38 = enum case for FMFLocationAlertTriggerType.leaving(_:);
LABEL_10:
  (*((void (**)(char *, uint64_t, uint64_t))v28 + 13))(v35, v38, v27);
LABEL_11:
  v41 = v35;
  v42 = v27;
  v43 = *(void **)&v0[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_tableView];
  v44 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v208 = objc_msgSend(v43, "dequeueReusableCellWithIdentifier:forIndexPath:", v44, isa);

  v46 = v206;
  v47 = v41;
  v203 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v28 + 2);
  v203(v206, v41, v42);
  v48 = (uint64_t (*)(char *, uint64_t))*((_QWORD *)v28 + 11);
  v207 = v42;
  v49 = v48(v46, v42);
  if (v49 == enum case for FMFLocationAlertTriggerType.leaving(_:))
  {
    (*((void (**)(char *, _QWORD, uint64_t))v209 + 13))(v26, enum case for FMFLocationAlertTarget.alertMe(_:), v20);
    v50 = sub_100008000((unint64_t *)&unk_1005E5A00, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocationAlertTarget, (uint64_t)&protocol conformance descriptor for FMFLocationAlertTarget);
    dispatch thunk of RawRepresentable.rawValue.getter(&v212, v20, v50);
    dispatch thunk of RawRepresentable.rawValue.getter(&v214, v20, v50);
    v51 = v213;
    v52 = v215;
    v53 = v1;
    if (v212 == v214 && v213 == v215)
    {
      swift_bridgeObjectRelease_n(v213, 2);
      (*((void (**)(char *, uint64_t))v209 + 1))(v26, v20);
      v54 = v47;
      v55 = v205;
      v56 = v208;
      v57 = &selRef_viewWillAppear_;
    }
    else
    {
      v65 = _stringCompareWithSmolCheck(_:_:expecting:)(v212, v213, v214, v215, 0);
      swift_bridgeObjectRelease(v51);
      v66 = swift_bridgeObjectRelease(v52);
      (*((void (**)(char *, uint64_t, __n128))v209 + 1))(v26, v20, v66);
      v54 = v47;
      v55 = v205;
      v56 = v208;
      v57 = &selRef_viewWillAppear_;
      if ((v65 & 1) == 0)
        goto LABEL_22;
    }
    v67 = countAndFlagsBits;
    sub_100007464((uint64_t)&v53[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendForAlert], countAndFlagsBits, &qword_1005D3380);
    v68 = v204;
    v69 = v202;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v204 + 48))(v67, 1, v202) != 1)
    {
      v83 = v200;
      (*(void (**)(char *, uint64_t, uint64_t))(v68 + 32))(v200, v67, v69);
      v84 = objc_msgSend(v56, v57[147]);
      if (v84)
      {
        v85 = v84;
        v206 = v28;
        v209 = v53;
        v212 = 0;
        v213 = 0xE000000000000000;
        v86 = v68;
        _StringGuts.grow(_:)(20);
        swift_bridgeObjectRelease(v213);
        v87 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v88._countAndFlagsBits = 0xD000000000000021;
        v217._countAndFlagsBits = 0xD000000000000033;
        v217._object = (void *)0x80000001004A6750;
        v88._object = (void *)0x80000001004A6720;
        v89._countAndFlagsBits = 0;
        v89._object = (void *)0xE000000000000000;
        v90 = NSLocalizedString(_:tableName:bundle:value:comment:)(v88, (Swift::String_optional)0, (NSBundle)v87, v89, v217);

        v91 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
        v92 = v83;
        v93 = swift_allocObject(v91, 72, 7);
        *(_OWORD *)(v93 + 16) = xmmword_100481740;
        v94 = FMFFriend.shortName.getter();
        v96 = v95;
        v97 = *(void (**)(char *, char *, uint64_t))(v86 + 16);
        v98 = v193;
        v97(v193, v92, v69);
        *(_QWORD *)(v93 + 56) = &type metadata for String;
        v99 = sub_100071E88();
        *(_QWORD *)(v93 + 64) = v99;
        if (!v96)
        {
          v94 = FMFFriend.name.getter(v99);
          v96 = v100;
        }
        *(_QWORD *)(v93 + 32) = v94;
        *(_QWORD *)(v93 + 40) = v96;
        v101 = *(void (**)(char *, uint64_t))(v204 + 8);
        v101(v98, v69);
        String.init(format:_:)(v90._countAndFlagsBits, v90._object, v93);
        v103 = v102;
        swift_bridgeObjectRelease(v90._object);
        v104 = String._bridgeToObjectiveC()();
        v105 = v103;
        v69 = v202;
        objc_msgSend(v85, "setText:", v104, swift_bridgeObjectRelease(v105).n128_f64[0]);

        v53 = v209;
        v55 = v205;
        v28 = v206;
        v57 = &selRef_viewWillAppear_;
        v83 = v200;
      }
      else
      {
        v101 = *(void (**)(char *, uint64_t))(v68 + 8);
      }
      v101(v83, v69);
      v56 = v208;
      goto LABEL_57;
    }
    sub_1000051EC(v67, &qword_1005D3380);
LABEL_22:
    v70 = objc_msgSend(v56, v57[147]);
    if (v70)
    {
      v71 = v70;
      v212 = 0;
      v213 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(v213);
      v72 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v73 = 0xD00000000000001BLL;
      v74 = 0xD00000000000002DLL;
      v190 = 0x80000001004A66F0;
      v75 = 0x80000001004A66D0;
      v76 = 0;
      v77 = 0;
LABEL_36:
      v111._countAndFlagsBits = 0;
      v111._object = (void *)0xE000000000000000;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v73, *(Swift::String_optional *)&v76, (NSBundle)v72, v111, *(Swift::String *)&v74)._object;

      v113 = String._bridgeToObjectiveC()();
      v114 = object;
      v57 = &selRef_viewWillAppear_;
      objc_msgSend(v71, "setText:", v113, swift_bridgeObjectRelease(v114).n128_f64[0]);

      goto LABEL_57;
    }
    goto LABEL_57;
  }
  v58 = v1;
  v59 = (void (*)(char *, _QWORD, uint64_t))*((_QWORD *)v209 + 13);
  if (v49 != enum case for FMFLocationAlertTriggerType.scheduled(_:))
  {
    v78 = v197;
    v59(v197, enum case for FMFLocationAlertTarget.alertMe(_:), v20);
    v79 = sub_100008000((unint64_t *)&unk_1005E5A00, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocationAlertTarget, (uint64_t)&protocol conformance descriptor for FMFLocationAlertTarget);
    dispatch thunk of RawRepresentable.rawValue.getter(&v212, v20, v79);
    dispatch thunk of RawRepresentable.rawValue.getter(&v214, v20, v79);
    v80 = v213;
    v81 = v215;
    if (v212 == v214 && v213 == v215)
    {
      swift_bridgeObjectRelease_n(v213, 2);
      (*((void (**)(char *, uint64_t))v209 + 1))(v78, v20);
      v53 = v58;
      v56 = v208;
      v57 = &selRef_viewWillAppear_;
      v82 = (uint64_t)v199;
    }
    else
    {
      v115 = _stringCompareWithSmolCheck(_:_:expecting:)(v212, v213, v214, v215, 0);
      swift_bridgeObjectRelease(v80);
      v116 = swift_bridgeObjectRelease(v81);
      (*((void (**)(char *, uint64_t, __n128))v209 + 1))(v78, v20, v116);
      v53 = v58;
      v56 = v208;
      v57 = &selRef_viewWillAppear_;
      v82 = (uint64_t)v199;
      if ((v115 & 1) == 0)
        goto LABEL_40;
    }
    sub_100007464((uint64_t)&v53[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendForAlert], v82, &qword_1005D3380);
    v117 = v204;
    v118 = v202;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v204 + 48))(v82, 1, v202) != 1)
    {
      v151 = v195;
      (*(void (**)(char *, uint64_t, uint64_t))(v117 + 32))(v195, v82, v118);
      v152 = (char *)objc_msgSend(v56, v57[147]);
      if (v152)
      {
        v209 = v152;
        v212 = 0;
        v213 = 0xE000000000000000;
        _StringGuts.grow(_:)(20);
        swift_bridgeObjectRelease(v213);
        v153 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v154._countAndFlagsBits = 0xD000000000000022;
        v220._countAndFlagsBits = 0xD000000000000034;
        v220._object = (void *)0x80000001004A6600;
        v154._object = (void *)0x80000001004A65D0;
        v155._countAndFlagsBits = 0;
        v155._object = (void *)0xE000000000000000;
        v156 = NSLocalizedString(_:tableName:bundle:value:comment:)(v154, (Swift::String_optional)0, (NSBundle)v153, v155, v220);
        countAndFlagsBits = v156._countAndFlagsBits;

        v157 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
        v158 = swift_allocObject(v157, 72, 7);
        *(_OWORD *)(v158 + 16) = xmmword_100481740;
        v159 = FMFFriend.shortName.getter();
        v161 = v160;
        v162 = v192;
        (*(void (**)(char *, char *, uint64_t))(v204 + 16))(v192, v151, v118);
        *(_QWORD *)(v158 + 56) = &type metadata for String;
        v163 = sub_100071E88();
        *(_QWORD *)(v158 + 64) = v163;
        if (!v161)
        {
          v159 = FMFFriend.name.getter(v163);
          v161 = v164;
        }
        *(_QWORD *)(v158 + 32) = v159;
        *(_QWORD *)(v158 + 40) = v161;
        v165 = *(void (**)(char *, uint64_t))(v204 + 8);
        v165(v162, v118);
        String.init(format:_:)(countAndFlagsBits, v156._object, v158);
        v167 = v166;
        swift_bridgeObjectRelease(v156._object);
        v168 = String._bridgeToObjectiveC()();
        v169 = v167;
        v118 = v202;
        *(_QWORD *)&v170 = swift_bridgeObjectRelease(v169).n128_u64[0];
        v171 = v209;
        objc_msgSend(v209, "setText:", v168, v170);

        v53 = v58;
        v57 = &selRef_viewWillAppear_;
      }
      else
      {
        v165 = *(void (**)(char *, uint64_t))(v117 + 8);
      }
      v165(v195, v118);
      v54 = v47;
      v56 = v208;
      goto LABEL_56;
    }
    sub_1000051EC(v82, &qword_1005D3380);
LABEL_40:
    v119 = objc_msgSend(v56, v57[147]);
    v54 = v47;
    if (v119)
    {
      v120 = v119;
      v212 = 0;
      v213 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(v213);
      v121 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v122._countAndFlagsBits = 0xD00000000000001CLL;
      v218._countAndFlagsBits = 0xD00000000000002ELL;
      v218._object = (void *)0x80000001004A65A0;
      v122._object = (void *)0x80000001004A6580;
      v123._countAndFlagsBits = 0;
      v123._object = (void *)0xE000000000000000;
      v124 = NSLocalizedString(_:tableName:bundle:value:comment:)(v122, (Swift::String_optional)0, (NSBundle)v121, v123, v218)._object;

      v125 = String._bridgeToObjectiveC()();
      v126 = v124;
      v57 = &selRef_viewWillAppear_;
      objc_msgSend(v120, "setText:", v125, swift_bridgeObjectRelease(v126).n128_f64[0]);

    }
LABEL_56:
    (*((void (**)(char *, uint64_t))v28 + 1))(v206, v207);
    v55 = v205;
    goto LABEL_57;
  }
  v60 = v196;
  v59(v196, enum case for FMFLocationAlertTarget.alertMe(_:), v20);
  v61 = sub_100008000((unint64_t *)&unk_1005E5A00, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocationAlertTarget, (uint64_t)&protocol conformance descriptor for FMFLocationAlertTarget);
  dispatch thunk of RawRepresentable.rawValue.getter(&v212, v20, v61);
  dispatch thunk of RawRepresentable.rawValue.getter(&v214, v20, v61);
  v62 = v213;
  v63 = v215;
  if (v212 == v214 && v213 == v215)
  {
    swift_bridgeObjectRelease_n(v213, 2);
    (*((void (**)(char *, uint64_t))v209 + 1))(v60, v20);
    v53 = v58;
    v56 = v208;
    v57 = &selRef_viewWillAppear_;
    v64 = (uint64_t)v198;
  }
  else
  {
    v106 = _stringCompareWithSmolCheck(_:_:expecting:)(v212, v213, v214, v215, 0);
    swift_bridgeObjectRelease(v62);
    v107 = swift_bridgeObjectRelease(v63);
    (*((void (**)(char *, uint64_t, __n128))v209 + 1))(v60, v20, v107);
    v53 = v58;
    v56 = v208;
    v57 = &selRef_viewWillAppear_;
    v64 = (uint64_t)v198;
    if ((v106 & 1) == 0)
      goto LABEL_34;
  }
  sub_100007464((uint64_t)&v53[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendForAlert], v64, &qword_1005D3380);
  v108 = v204;
  v109 = v202;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v204 + 48))(v64, 1, v202) != 1)
  {
    v127 = v194;
    (*(void (**)(char *, uint64_t, uint64_t))(v108 + 32))(v194, v64, v109);
    v128 = (char *)objc_msgSend(v56, v57[147]);
    if (v128)
    {
      v209 = v128;
      v129 = v108;
      v130 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v219._countAndFlagsBits = 0xD000000000000017;
      v131._countAndFlagsBits = 0xD000000000000024;
      v219._object = (void *)0x80000001004A6680;
      v131._object = (void *)0x80000001004A66A0;
      v132.value._object = (void *)0x80000001004A6660;
      v132.value._countAndFlagsBits = 0xD000000000000012;
      v133._countAndFlagsBits = 0;
      v133._object = (void *)0xE000000000000000;
      v134 = NSLocalizedString(_:tableName:bundle:value:comment:)(v131, v132, (NSBundle)v130, v133, v219);
      v206 = (char *)v134._countAndFlagsBits;

      v135 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
      v136 = swift_allocObject(v135, 72, 7);
      *(_OWORD *)(v136 + 16) = xmmword_100481740;
      v137 = FMFFriend.shortName.getter();
      v139 = v138;
      v140 = *(void (**)(char *, char *, uint64_t))(v129 + 16);
      v141 = v191;
      v140(v191, v127, v109);
      *(_QWORD *)(v136 + 56) = &type metadata for String;
      v142 = sub_100071E88();
      *(_QWORD *)(v136 + 64) = v142;
      if (!v139)
      {
        v137 = FMFFriend.name.getter(v142);
        v139 = v143;
      }
      *(_QWORD *)(v136 + 32) = v137;
      *(_QWORD *)(v136 + 40) = v139;
      v144 = *(void (**)(char *, uint64_t))(v204 + 8);
      v144(v141, v109);
      String.init(format:_:)(v206, v134._object, v136);
      v146 = v145;
      swift_bridgeObjectRelease(v134._object);
      v147 = String._bridgeToObjectiveC()();
      v148 = v146;
      v109 = v202;
      *(_QWORD *)&v149 = swift_bridgeObjectRelease(v148).n128_u64[0];
      v150 = v209;
      objc_msgSend(v209, "setText:", v147, v149);

      v53 = v58;
      v57 = &selRef_viewWillAppear_;
    }
    else
    {
      v144 = *(void (**)(char *, uint64_t))(v108 + 8);
    }
    v144(v194, v109);
    v54 = v47;
    v55 = v205;
    v56 = v208;
    goto LABEL_57;
  }
  sub_1000051EC(v64, &qword_1005D3380);
LABEL_34:
  v110 = objc_msgSend(v56, v57[147]);
  v54 = v47;
  v55 = v205;
  if (v110)
  {
    v71 = v110;
    v72 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v74 = 0xD000000000000017;
    v73 = 0xD00000000000001FLL;
    v190 = 0x80000001004A6680;
    v75 = 0x80000001004A6640;
    v77 = 0x80000001004A6660;
    v76 = 0xD000000000000012;
    goto LABEL_36;
  }
LABEL_57:
  v172 = objc_msgSend(v56, v57[147]);
  if (v172)
  {
    v173 = v172;
    objc_msgSend(v172, "setNumberOfLines:", 0);

  }
  v174 = objc_msgSend(v56, v57[147]);
  if (v174)
  {
    v175 = v174;
    objc_msgSend(v174, "setLineBreakMode:", 0);

  }
  v176 = &v53[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_triggerType];
  swift_beginAccess(&v53[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_triggerType], &v212, 0, 0);
  v177 = v207;
  v203(v55, v176, v207);
  v178 = sub_100008000(&qword_1005D33D8, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocationAlertTriggerType, (uint64_t)&protocol conformance descriptor for FMFLocationAlertTriggerType);
  dispatch thunk of RawRepresentable.rawValue.getter(&v214, v177, v178);
  dispatch thunk of RawRepresentable.rawValue.getter(&v210, v177, v178);
  v179 = v215;
  v180 = v211;
  if (v214 == v210 && v215 == v211)
  {
    swift_bridgeObjectRelease_n(v215, 2);
    v181 = 3;
  }
  else
  {
    v182 = _stringCompareWithSmolCheck(_:_:expecting:)(v214, v215, v210, v211, 0);
    swift_bridgeObjectRelease(v179);
    swift_bridgeObjectRelease(v180);
    if ((v182 & 1) != 0)
      v181 = 3;
    else
      v181 = 0;
  }
  v183 = (void (*)(char *, uint64_t))*((_QWORD *)v28 + 1);
  v183(v55, v177);
  objc_msgSend(v56, "setAccessoryType:", v181);
  v184 = objc_msgSend(v56, v57[147]);
  if (v184)
  {
    v185 = v184;
    objc_msgSend(v184, "setEnabled:", v53[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_editable]);

  }
  v186 = objc_msgSend(v56, "detailTextLabel");
  if (v186)
  {
    v187 = v186;
    objc_msgSend(v186, "setEnabled:", v53[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_editable]);

  }
  if (v53[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_editable])
    v188 = 3;
  else
    v188 = 0;
  objc_msgSend(v56, "setSelectionStyle:", v188);
  v183(v54, v177);
  return (uint64_t)v56;
}

id sub_10008F1D4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  NSObject *v116;
  os_log_type_t v117;
  uint64_t v118;
  uint8_t *v119;
  uint8_t *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t (*v128)(char *, uint64_t, uint64_t);
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void (*v139)(char *, uint64_t, uint64_t);
  char *v140;
  uint64_t v141;
  char v142;
  void (*v143)(char *, uint64_t);
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  char v150;
  void (*v151)(char *, uint64_t);
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  char v157;
  void (*v158)(char *, uint64_t);
  char *v159;
  uint64_t v160;
  int v161;
  id v162;
  void *v163;
  id v164;
  Swift::String v165;
  Swift::String v166;
  void *object;
  NSString v168;
  char **v169;
  id v170;
  void *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unsigned int (*v177)(uint64_t, uint64_t, uint64_t);
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  unint64_t v188;
  uint64_t v189;
  id v190;
  void *v191;
  id v192;
  Swift::String v193;
  Swift::String v194;
  Swift::String v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  unint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  NSString v207;
  char **v208;
  id v209;
  void *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t (*v216)(uint64_t, uint64_t, uint64_t);
  uint64_t v217;
  uint64_t v218;
  void (*v219)(uint64_t, uint64_t);
  uint64_t v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  int v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  unint64_t v238;
  uint64_t v239;
  uint64_t v240;
  unsigned int v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  char **v245;
  uint64_t v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  _QWORD *v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  NSString v256;
  uint64_t v257;
  char *v258;
  uint64_t v259;
  char *v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  int v265;
  uint64_t v266;
  uint64_t v267;
  id v268;
  void *v269;
  id v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t (*v277)(uint64_t, uint64_t, uint64_t);
  int v278;
  uint64_t v279;
  char **v280;
  uint64_t v281;
  uint64_t v282;
  char *v283;
  uint64_t v284;
  char v285;
  void (*v286)(char *, uint64_t);
  uint64_t v287;
  uint64_t v288;
  char *v289;
  uint64_t v290;
  void *v291;
  id v292;
  id v293;
  id v294;
  void *v295;
  id v296;
  void *v297;
  id v298;
  void *v299;
  uint64_t v300;
  uint64_t v302;
  uint64_t v303;
  unint64_t v304;
  uint64_t v305;
  id v306;
  void *v307;
  uint64_t v308;
  uint64_t *v309;
  uint64_t v310;
  char *v311;
  uint64_t v312;
  char *v313;
  uint64_t v314;
  uint64_t v315;
  NSString v316;
  id v317;
  void *v318;
  uint64_t v319;
  uint64_t v320;
  NSString v321;
  char *v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  char v327;
  id v328;
  void *v329;
  NSString v330;
  double v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  id v336;
  void *v337;
  id v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  char *v345;
  uint64_t v346;
  char v347;
  void (*v348)(char *, uint64_t);
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  char **v352;
  uint64_t v353;
  id v354;
  uint64_t v355;
  void *v356;
  id v357;
  void *v358;
  uint64_t v359;
  char *v360;
  uint64_t v361;
  void *v362;
  id v363;
  void *v364;
  id v365;
  void *v366;
  id v367;
  uint64_t v368;
  uint64_t v369;
  id v370;
  uint64_t v371;
  char *v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  NSString v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  id v383;
  void *v384;
  id v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  unsigned int (*v391)(uint64_t, uint64_t, uint64_t);
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  char *v396;
  uint64_t v397;
  char v398;
  void (*v399)(char *, uint64_t);
  uint64_t v400;
  uint64_t v401;
  void *v402;
  uint64_t v403;
  id v404;
  id v405;
  id v406;
  void *v407;
  id v408;
  void *v409;
  id v410;
  void *v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  char *v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  char *v424;
  char *v425;
  char *v426;
  uint64_t v427;
  char *v428;
  char *v429;
  char *v430;
  char *v431;
  char *v432;
  char *v433;
  char *v434;
  char *v435;
  char *v436;
  char *v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  char *v442;
  char *v443;
  char *v444;
  char *v445;
  char *v446;
  char *v447;
  uint64_t v448;
  char *v449;
  char *v450;
  char *v451;
  char *v452;
  char *v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  char *v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  char *v464;
  uint64_t v465;
  char *v466;
  uint64_t v467;
  char *v468;
  uint64_t v469;
  char *v470;
  char *v471;
  uint64_t v472;
  char *v473;
  uint64_t countAndFlagsBits;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  id v480;
  char v481[8];
  char v482[8];
  uint64_t v483;
  unint64_t v484;
  char v485[8];
  char v486[8];
  char v487[8];
  Swift::String v488;
  Swift::String v489;

  v2 = v1;
  v480 = a1;
  v3 = sub_100053F2C(&qword_1005DC400);
  __chkstk_darwin(v3);
  v436 = (char *)&v422 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100053F2C(&qword_1005D3370);
  v6 = __chkstk_darwin(v5);
  v430 = (char *)&v422 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v6);
  v451 = (char *)&v422 - v9;
  v10 = __chkstk_darwin(v8);
  v425 = (char *)&v422 - v11;
  v12 = __chkstk_darwin(v10);
  v432 = (char *)&v422 - v13;
  v14 = __chkstk_darwin(v12);
  v437 = (char *)&v422 - v15;
  v16 = __chkstk_darwin(v14);
  v447 = (char *)&v422 - v17;
  v18 = __chkstk_darwin(v16);
  v450 = (char *)&v422 - v19;
  v20 = __chkstk_darwin(v18);
  v442 = (char *)&v422 - v21;
  __chkstk_darwin(v20);
  v433 = (char *)&v422 - v22;
  v23 = sub_100053F2C(&qword_1005D3380);
  __chkstk_darwin(v23);
  v461 = (uint64_t)&v422 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v469 = type metadata accessor for FMFFriend(0);
  v467 = *(_QWORD *)(v469 - 8);
  v25 = __chkstk_darwin(v469);
  v444 = (char *)&v422 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  v466 = (char *)&v422 - v27;
  v28 = type metadata accessor for FMFLocation(0);
  v478 = *(_QWORD *)(v28 - 8);
  v479 = v28;
  v29 = __chkstk_darwin(v28);
  v429 = (char *)&v422 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __chkstk_darwin(v29);
  v428 = (char *)&v422 - v32;
  v33 = __chkstk_darwin(v31);
  v424 = (char *)&v422 - v34;
  v35 = __chkstk_darwin(v33);
  v426 = (char *)&v422 - v36;
  v37 = __chkstk_darwin(v35);
  v435 = (char *)&v422 - v38;
  v39 = __chkstk_darwin(v37);
  v434 = (char *)&v422 - v40;
  v41 = __chkstk_darwin(v39);
  v446 = (char *)&v422 - v42;
  v43 = __chkstk_darwin(v41);
  v449 = (char *)&v422 - v44;
  __chkstk_darwin(v43);
  v470 = (char *)&v422 - v45;
  v46 = sub_100053F2C((uint64_t *)&unk_1005D3350);
  v47 = __chkstk_darwin(v46);
  v456 = (uint64_t)&v422 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __chkstk_darwin(v47);
  v440 = (uint64_t)&v422 - v50;
  v51 = __chkstk_darwin(v49);
  v458 = (char *)&v422 - v52;
  v53 = __chkstk_darwin(v51);
  v438 = (uint64_t)&v422 - v54;
  v55 = __chkstk_darwin(v53);
  v445 = (char *)&v422 - v56;
  v57 = __chkstk_darwin(v55);
  v427 = (uint64_t)&v422 - v58;
  v59 = __chkstk_darwin(v57);
  v431 = (char *)&v422 - v60;
  v61 = __chkstk_darwin(v59);
  v455 = (uint64_t)&v422 - v62;
  v63 = __chkstk_darwin(v61);
  v454 = (uint64_t)&v422 - v64;
  v65 = __chkstk_darwin(v63);
  v468 = (char *)&v422 - v66;
  v67 = __chkstk_darwin(v65);
  v462 = (uint64_t)&v422 - v68;
  v69 = __chkstk_darwin(v67);
  v71 = (char *)&v422 - v70;
  v72 = __chkstk_darwin(v69);
  v74 = (char *)&v422 - v73;
  v75 = __chkstk_darwin(v72);
  v465 = (uint64_t)&v422 - v76;
  v77 = __chkstk_darwin(v75);
  v453 = (char *)&v422 - v78;
  v79 = __chkstk_darwin(v77);
  v439 = (uint64_t)&v422 - v80;
  v81 = __chkstk_darwin(v79);
  v441 = (uint64_t)&v422 - v82;
  v83 = __chkstk_darwin(v81);
  v85 = (char *)&v422 - v84;
  v86 = __chkstk_darwin(v83);
  v448 = (uint64_t)&v422 - v87;
  v88 = __chkstk_darwin(v86);
  v460 = (uint64_t)&v422 - v89;
  v90 = __chkstk_darwin(v88);
  v459 = (uint64_t)&v422 - v91;
  v92 = __chkstk_darwin(v90);
  v94 = (char *)&v422 - v93;
  __chkstk_darwin(v92);
  v96 = (char *)&v422 - v95;
  v97 = sub_100053F2C((uint64_t *)&unk_1005D3340);
  v98 = __chkstk_darwin(v97);
  v452 = (char *)&v422 - ((v99 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = __chkstk_darwin(v98);
  v472 = (uint64_t)&v422 - v101;
  v102 = __chkstk_darwin(v100);
  v457 = (uint64_t)&v422 - v103;
  v104 = __chkstk_darwin(v102);
  v463 = (uint64_t)&v422 - v105;
  v106 = __chkstk_darwin(v104);
  v108 = (char *)&v422 - v107;
  __chkstk_darwin(v106);
  v110 = (char *)&v422 - v109;
  v477 = type metadata accessor for FMFLocationAlertAddressType(0);
  v475 = *(_QWORD *)(v477 - 8);
  v111 = __chkstk_darwin(v477);
  v473 = (char *)&v422 - ((v112 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v111);
  v476 = (uint64_t)&v422 - v113;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v443 = v85;
  v464 = v74;
  v114 = type metadata accessor for Logger(0);
  v115 = sub_100056D88(v114, (uint64_t)qword_1005F5748);
  v116 = Logger.logObject.getter(v115);
  v117 = static os_log_type_t.default.getter(v116);
  if (os_log_type_enabled(v116, v117))
  {
    v118 = v2;
    v119 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v119 = 0;
    _os_log_impl((void *)&_mh_execute_header, v116, v117, "FMLocationAlertViewController: Loading location cells", v119, 2u);
    v120 = v119;
    v2 = v118;
    swift_slowDealloc(v120, -1, -1);
  }
  v471 = v71;

  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_triggerCellsExpanded) == 1)
  {
    v121 = v476;
    sub_100089338((uint64_t)v480, v476);
    v122 = v475;
    v123 = v479;
    goto LABEL_33;
  }
  v124 = v2 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController__selectedLocation;
  swift_beginAccess(v2 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController__selectedLocation, v487, 0, 0);
  countAndFlagsBits = v2;
  v125 = v2 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendLocation;
  v126 = (uint64_t)&v110[*(int *)(v97 + 48)];
  sub_100007464(v124, (uint64_t)v110, (uint64_t *)&unk_1005D3350);
  sub_100007464(v125, v126, (uint64_t *)&unk_1005D3350);
  v127 = v479;
  v128 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v478 + 48);
  if (v128(v110, 1, v479) != 1)
  {
    sub_100007464((uint64_t)v110, (uint64_t)v96, (uint64_t *)&unk_1005D3350);
    if (v128((char *)v126, 1, v127) != 1)
    {
      v138 = v478;
      v139 = *(void (**)(char *, uint64_t, uint64_t))(v478 + 32);
      v423 = v97;
      v140 = v470;
      v139(v470, v126, v127);
      v141 = sub_100008000(&qword_1005D3378, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocation, (uint64_t)&protocol conformance descriptor for FMFLocation);
      v142 = dispatch thunk of static Equatable.== infix(_:_:)(v96, v140, v127, v141);
      v143 = *(void (**)(char *, uint64_t))(v138 + 8);
      v144 = v140;
      v97 = v423;
      v143(v144, v127);
      v143(v96, v127);
      sub_1000051EC((uint64_t)v110, (uint64_t *)&unk_1005D3350);
      v123 = v127;
      if ((v142 & 1) != 0)
        goto LABEL_23;
LABEL_13:
      sub_100007464(v124, (uint64_t)v94, (uint64_t *)&unk_1005D3350);
      v129 = countAndFlagsBits + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_myCurrentLocation;
      swift_beginAccess(countAndFlagsBits + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_myCurrentLocation, v486, 0, 0);
      v130 = (uint64_t)&v108[*(int *)(v97 + 48)];
      sub_100007464((uint64_t)v94, (uint64_t)v108, (uint64_t *)&unk_1005D3350);
      v131 = v479;
      sub_100007464(v129, v130, (uint64_t *)&unk_1005D3350);
      v132 = v128(v108, 1, v131);
      v122 = v475;
      if (v132 == 1)
      {
        sub_1000051EC((uint64_t)v94, (uint64_t *)&unk_1005D3350);
        if (v128((char *)v130, 1, v131) == 1)
        {
          sub_1000051EC((uint64_t)v108, (uint64_t *)&unk_1005D3350);
          v121 = v476;
LABEL_29:
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v122 + 104))(v121, enum case for FMFLocationAlertAddressType.currentLocation(_:), v477);
          v2 = countAndFlagsBits;
          v123 = v479;
          goto LABEL_33;
        }
      }
      else
      {
        v133 = v459;
        sub_100007464((uint64_t)v108, v459, (uint64_t *)&unk_1005D3350);
        if (v128((char *)v130, 1, v131) != 1)
        {
          v423 = v97;
          v146 = v133;
          v147 = v478;
          v148 = v470;
          (*(void (**)(char *, uint64_t, uint64_t))(v478 + 32))(v470, v130, v131);
          v149 = sub_100008000(&qword_1005D3378, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocation, (uint64_t)&protocol conformance descriptor for FMFLocation);
          v150 = dispatch thunk of static Equatable.== infix(_:_:)(v146, v148, v131, v149);
          v151 = *(void (**)(char *, uint64_t))(v147 + 8);
          v151(v148, v131);
          sub_1000051EC((uint64_t)v94, (uint64_t *)&unk_1005D3350);
          v152 = v146;
          v97 = v423;
          v151((char *)v152, v131);
          sub_1000051EC((uint64_t)v108, (uint64_t *)&unk_1005D3350);
          v121 = v476;
          if ((v150 & 1) != 0)
            goto LABEL_29;
LABEL_19:
          v134 = v460;
          sub_100007464(v124, v460, (uint64_t *)&unk_1005D3350);
          v135 = countAndFlagsBits + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_customLocation;
          swift_beginAccess(countAndFlagsBits + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_customLocation, v485, 0, 0);
          v136 = v463;
          v137 = v463 + *(int *)(v97 + 48);
          sub_100007464(v134, v463, (uint64_t *)&unk_1005D3350);
          sub_100007464(v135, v137, (uint64_t *)&unk_1005D3350);
          v123 = v479;
          if (v128((char *)v136, 1, v479) == 1)
          {
            sub_1000051EC(v134, (uint64_t *)&unk_1005D3350);
            if (v128((char *)v137, 1, v123) == 1)
            {
              sub_1000051EC(v136, (uint64_t *)&unk_1005D3350);
LABEL_31:
              (*(void (**)(uint64_t, _QWORD, uint64_t))(v122 + 104))(v121, enum case for FMFLocationAlertAddressType.custom(_:), v477);
              goto LABEL_32;
            }
          }
          else
          {
            v145 = v448;
            sub_100007464(v136, v448, (uint64_t *)&unk_1005D3350);
            if (v128((char *)v137, 1, v123) != 1)
            {
              v153 = v478;
              v154 = v134;
              v155 = v470;
              (*(void (**)(char *, uint64_t, uint64_t))(v478 + 32))(v470, v137, v123);
              v156 = sub_100008000(&qword_1005D3378, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocation, (uint64_t)&protocol conformance descriptor for FMFLocation);
              v157 = dispatch thunk of static Equatable.== infix(_:_:)(v145, v155, v123, v156);
              v158 = *(void (**)(char *, uint64_t))(v153 + 8);
              v158(v155, v479);
              sub_1000051EC(v154, (uint64_t *)&unk_1005D3350);
              v158((char *)v145, v479);
              v123 = v479;
              sub_1000051EC(v463, (uint64_t *)&unk_1005D3350);
              if ((v157 & 1) != 0)
                goto LABEL_31;
              return objc_msgSend(objc_allocWithZone((Class)UITableViewCell), "init");
            }
            sub_1000051EC(v134, (uint64_t *)&unk_1005D3350);
            (*(void (**)(uint64_t, uint64_t))(v478 + 8))(v145, v123);
          }
          sub_1000051EC(v136, (uint64_t *)&unk_1005D3340);
          return objc_msgSend(objc_allocWithZone((Class)UITableViewCell), "init");
        }
        sub_1000051EC((uint64_t)v94, (uint64_t *)&unk_1005D3350);
        (*(void (**)(uint64_t, uint64_t))(v478 + 8))(v133, v131);
      }
      sub_1000051EC((uint64_t)v108, (uint64_t *)&unk_1005D3340);
      v121 = v476;
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v478 + 8))(v96, v127);
LABEL_12:
    sub_1000051EC((uint64_t)v110, (uint64_t *)&unk_1005D3340);
    goto LABEL_13;
  }
  if (v128((char *)v126, 1, v127) != 1)
    goto LABEL_12;
  v123 = v127;
  sub_1000051EC((uint64_t)v110, (uint64_t *)&unk_1005D3350);
LABEL_23:
  v122 = v475;
  v121 = v476;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v475 + 104))(v476, enum case for FMFLocationAlertAddressType.friendLocation(_:), v477);
LABEL_32:
  v2 = countAndFlagsBits;
LABEL_33:
  v159 = v473;
  v160 = v477;
  (*(void (**)(char *, uint64_t, uint64_t))(v122 + 16))(v473, v121, v477);
  v161 = (*(uint64_t (**)(char *, uint64_t))(v122 + 88))(v159, v160);
  if (v161 == enum case for FMFLocationAlertAddressType.currentLocation(_:))
  {
    v480 = sub_100093A18();
    v162 = objc_msgSend(v480, "textLabel");
    if (v162)
    {
      v163 = v162;
      v483 = 0;
      v484 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(v484);
      v164 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v488._countAndFlagsBits = 0xD000000000000034;
      v488._object = (void *)0x80000001004A67F0;
      v165._object = (void *)0x80000001004A67C0;
      v165._countAndFlagsBits = 0xD000000000000022;
      v166._countAndFlagsBits = 0;
      v166._object = (void *)0xE000000000000000;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v165, (Swift::String_optional)0, (NSBundle)v164, v166, v488)._object;

      v168 = String._bridgeToObjectiveC()();
      objc_msgSend(v163, "setText:", v168, swift_bridgeObjectRelease(object).n128_f64[0]);

    }
    v169 = &selRef_viewWillAppear_;
    v170 = objc_msgSend(v480, "detailTextLabel");
    if (!v170)
    {
LABEL_85:
      v268 = objc_msgSend(v480, v169[158]);
      if (v268)
      {
        v269 = v268;
        v270 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
        objc_msgSend(v269, "setTextColor:", v270);

      }
      v271 = v2 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_myCurrentLocation;
      swift_beginAccess(v2 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_myCurrentLocation, &v483, 0, 0);
      v272 = (uint64_t)v471;
      sub_100007464(v271, (uint64_t)v471, (uint64_t *)&unk_1005D3350);
      v273 = v2 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController__selectedLocation;
      swift_beginAccess(v2 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController__selectedLocation, v482, 0, 0);
      v274 = v472;
      v275 = v472 + *(int *)(v97 + 48);
      sub_100007464(v272, v472, (uint64_t *)&unk_1005D3350);
      sub_100007464(v273, v275, (uint64_t *)&unk_1005D3350);
      v276 = v479;
      v277 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v478 + 48);
      if (v277(v274, 1, v479) == 1)
      {
        sub_1000051EC(v272, (uint64_t *)&unk_1005D3350);
        v278 = v277(v275, 1, v276);
        v279 = (uint64_t)v468;
        v280 = &selRef_viewWillAppear_;
        if (v278 == 1)
        {
          sub_1000051EC(v472, (uint64_t *)&unk_1005D3350);
LABEL_94:
          v287 = 3;
LABEL_96:
          objc_msgSend(v480, "setAccessoryType:", v287);
          sub_100007464(v271, v279, (uint64_t *)&unk_1005D3350);
          if (v277(v279, 1, v276))
          {
            sub_1000051EC(v279, (uint64_t *)&unk_1005D3350);
          }
          else
          {
            v288 = v478;
            v289 = v470;
            (*(void (**)(char *, uint64_t, uint64_t))(v478 + 16))(v470, v279, v276);
            v290 = sub_1000051EC(v279, (uint64_t *)&unk_1005D3350);
            v291 = (void *)FMFLocation.location.getter(v290);
            (*(void (**)(char *, uint64_t))(v288 + 8))(v289, v276);
            if (v291)
            {
              v292 = sub_100093BE4(v291);
              if (v292)
              {
                v293 = v292;
                v294 = objc_msgSend(v480, "imageView");
                if (v294)
                {
                  v295 = v294;
                  v293 = v293;
                  objc_msgSend(v295, "setImage:", v293);

                }
              }

            }
          }
          v296 = objc_msgSend(v480, "textLabel");
          if (v296)
          {
            v297 = v296;
            objc_msgSend(v296, "setEnabled:", *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_editable));

          }
          v298 = objc_msgSend(v480, v280[158]);
          if (v298)
          {
            v299 = v298;
            objc_msgSend(v298, "setEnabled:", *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_editable));

          }
          if (*(_BYTE *)(v2 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_editable))
            v300 = 3;
          else
            v300 = 0;
          objc_msgSend(v480, "setSelectionStyle:", v300);
          goto LABEL_112;
        }
      }
      else
      {
        v281 = v462;
        sub_100007464(v274, v462, (uint64_t *)&unk_1005D3350);
        if (v277(v275, 1, v276) != 1)
        {
          v282 = v478;
          v283 = v470;
          (*(void (**)(char *, uint64_t, uint64_t))(v478 + 32))(v470, v275, v276);
          v284 = sub_100008000(&qword_1005D3378, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocation, (uint64_t)&protocol conformance descriptor for FMFLocation);
          v285 = dispatch thunk of static Equatable.== infix(_:_:)(v281, v283, v276, v284);
          v286 = *(void (**)(char *, uint64_t))(v282 + 8);
          v286(v283, v276);
          sub_1000051EC((uint64_t)v471, (uint64_t *)&unk_1005D3350);
          v286((char *)v281, v479);
          v121 = v476;
          v276 = v479;
          sub_1000051EC(v274, (uint64_t *)&unk_1005D3350);
          v279 = (uint64_t)v468;
          v280 = &selRef_viewWillAppear_;
          if ((v285 & 1) != 0)
            goto LABEL_94;
LABEL_95:
          v287 = 0;
          goto LABEL_96;
        }
        sub_1000051EC((uint64_t)v471, (uint64_t *)&unk_1005D3350);
        (*(void (**)(uint64_t, uint64_t))(v478 + 8))(v281, v276);
        v279 = (uint64_t)v468;
        v280 = &selRef_viewWillAppear_;
      }
      sub_1000051EC(v472, (uint64_t *)&unk_1005D3340);
      goto LABEL_95;
    }
    v171 = v170;
    v172 = v97;
    countAndFlagsBits = v2;
    v173 = v2 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_myCurrentLocation;
    swift_beginAccess(v2 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_myCurrentLocation, v481, 0, 0);
    v174 = v465;
    sub_100007464(v173, v465, (uint64_t *)&unk_1005D3350);
    v176 = v478;
    v175 = v479;
    v177 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v478 + 48);
    if (v177(v174, 1, v479))
    {
      sub_1000051EC(v174, (uint64_t *)&unk_1005D3350);
      v97 = v172;
      v178 = (uint64_t)v464;
    }
    else
    {
      v221 = v449;
      (*(void (**)(char *, uint64_t, uint64_t))(v176 + 16))(v449, v174, v175);
      v222 = sub_1000051EC(v174, (uint64_t *)&unk_1005D3350);
      v223 = (uint64_t)v450;
      FMFLocation.address.getter(v222);
      (*(void (**)(char *, uint64_t))(v176 + 8))(v221, v175);
      v224 = type metadata accessor for FMFAddress(0);
      v225 = *(_QWORD *)(v224 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v225 + 48))(v223, 1, v224) == 1)
      {
        sub_1000051EC(v223, &qword_1005D3370);
        v121 = v476;
        v97 = v172;
        v178 = (uint64_t)v464;
        v169 = &selRef_viewWillAppear_;
      }
      else
      {
        v226 = FMFAddress.formattedAddressLines.getter();
        (*(void (**)(uint64_t, uint64_t))(v225 + 8))(v223, v224);
        v121 = v476;
        v97 = v172;
        v178 = (uint64_t)v464;
        v169 = &selRef_viewWillAppear_;
        if (v226)
        {
          if (*(_QWORD *)(v226 + 16))
          {
            v227 = *(_QWORD *)(v226 + 40);
            swift_bridgeObjectRetain(v227);
            swift_bridgeObjectRelease(v226);
            v2 = countAndFlagsBits;
            v122 = v475;
            goto LABEL_81;
          }
          swift_bridgeObjectRelease(v226);
        }
      }
    }
    sub_100007464(v173, v178, (uint64_t *)&unk_1005D3350);
    v255 = v479;
    if (v177(v178, 1, v479))
    {
      sub_1000051EC(v178, (uint64_t *)&unk_1005D3350);
      v256 = 0;
      v2 = countAndFlagsBits;
      v122 = v475;
LABEL_84:
      objc_msgSend(v171, "setText:", v256);

      goto LABEL_85;
    }
    v257 = v478;
    v258 = v446;
    (*(void (**)(char *, uint64_t, uint64_t))(v478 + 16))(v446, v178, v255);
    v259 = sub_1000051EC(v178, (uint64_t *)&unk_1005D3350);
    v260 = v447;
    FMFLocation.address.getter(v259);
    v261 = v258;
    v262 = (uint64_t)v260;
    (*(void (**)(char *, uint64_t))(v257 + 8))(v261, v255);
    v263 = type metadata accessor for FMFAddress(0);
    v264 = *(_QWORD *)(v263 - 8);
    v265 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v264 + 48))(v262, 1, v263);
    v2 = countAndFlagsBits;
    if (v265 == 1)
    {
      sub_1000051EC(v262, &qword_1005D3370);
      v256 = 0;
      v122 = v475;
LABEL_83:
      v121 = v476;
      goto LABEL_84;
    }
    FMFAddress.displayAddress.getter();
    v266 = v262;
    v227 = v267;
    (*(void (**)(uint64_t, uint64_t))(v264 + 8))(v266, v263);
    v122 = v475;
    if (!v227)
    {
      v256 = 0;
      goto LABEL_83;
    }
    v121 = v476;
LABEL_81:
    v256 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v227);
    goto LABEL_84;
  }
  if (v161 == enum case for FMFLocationAlertAddressType.friendLocation(_:))
  {
    v179 = v461;
    sub_100007464(v2 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendForAlert, v461, &qword_1005D3380);
    v180 = v467;
    v181 = v469;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v467 + 48))(v179, 1, v469) == 1)
    {
      sub_1000051EC(v179, &qword_1005D3380);
      v480 = sub_10009360C();
LABEL_112:
      (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v121, v477);
      return v480;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v180 + 32))(v466, v179, v181);
    v480 = sub_100093A18();
    v190 = objc_msgSend(v480, "textLabel");
    if (v190)
    {
      v191 = v190;
      v483 = 0;
      v484 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(v484);
      v192 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v193._countAndFlagsBits = 0xD000000000000027;
      v489._countAndFlagsBits = 0xD000000000000039;
      v489._object = (void *)0x80000001004A6860;
      v193._object = (void *)0x80000001004A6830;
      v194._countAndFlagsBits = 0;
      v194._object = (void *)0xE000000000000000;
      v195 = NSLocalizedString(_:tableName:bundle:value:comment:)(v193, (Swift::String_optional)0, (NSBundle)v192, v194, v489);
      countAndFlagsBits = v195._countAndFlagsBits;

      v196 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
      v197 = swift_allocObject(v196, 72, 7);
      *(_OWORD *)(v197 + 16) = xmmword_100481740;
      v198 = v466;
      v199 = FMFFriend.shortName.getter();
      v201 = v200;
      v202 = v444;
      (*(void (**)(char *, char *, uint64_t))(v180 + 16))(v444, v198, v469);
      *(_QWORD *)(v197 + 56) = &type metadata for String;
      v203 = sub_100071E88();
      *(_QWORD *)(v197 + 64) = v203;
      if (!v201)
      {
        v199 = FMFFriend.name.getter(v203);
        v201 = v204;
      }
      *(_QWORD *)(v197 + 32) = v199;
      *(_QWORD *)(v197 + 40) = v201;
      (*(void (**)(char *, uint64_t))(v467 + 8))(v202, v469);
      String.init(format:_:)(countAndFlagsBits, v195._object, v197);
      v206 = v205;
      swift_bridgeObjectRelease(v195._object);
      v207 = String._bridgeToObjectiveC()();
      objc_msgSend(v191, "setText:", v207, swift_bridgeObjectRelease(v206).n128_f64[0]);

      v121 = v476;
    }
    v208 = &selRef_viewWillAppear_;
    v209 = objc_msgSend(v480, "detailTextLabel");
    if (!v209)
    {
LABEL_196:
      v383 = objc_msgSend(v480, v208[158]);
      if (v383)
      {
        v384 = v383;
        v385 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
        objc_msgSend(v384, "setTextColor:", v385);

      }
      v386 = v2 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendLocation;
      v387 = v2 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController__selectedLocation;
      swift_beginAccess(v2 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController__selectedLocation, &v483, 0, 0);
      v388 = v457;
      v389 = v457 + *(int *)(v97 + 48);
      sub_100007464(v386, v457, (uint64_t *)&unk_1005D3350);
      sub_100007464(v387, v389, (uint64_t *)&unk_1005D3350);
      v390 = v479;
      v391 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v478 + 48);
      if (v391(v388, 1, v479) == 1)
      {
        if (v391(v389, 1, v390) == 1)
        {
          sub_1000051EC(v388, (uint64_t *)&unk_1005D3350);
          v392 = 3;
          v393 = (uint64_t)v453;
          goto LABEL_207;
        }
      }
      else
      {
        v394 = v439;
        sub_100007464(v388, v439, (uint64_t *)&unk_1005D3350);
        if (v391(v389, 1, v390) != 1)
        {
          v395 = v478;
          v396 = v470;
          (*(void (**)(char *, uint64_t, uint64_t))(v478 + 32))(v470, v389, v390);
          v397 = sub_100008000(&qword_1005D3378, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocation, (uint64_t)&protocol conformance descriptor for FMFLocation);
          v398 = dispatch thunk of static Equatable.== infix(_:_:)(v394, v396, v390, v397);
          v399 = *(void (**)(char *, uint64_t))(v395 + 8);
          v399(v396, v390);
          v399((char *)v394, v390);
          v208 = &selRef_viewWillAppear_;
          sub_1000051EC(v457, (uint64_t *)&unk_1005D3350);
          v393 = (uint64_t)v453;
          if ((v398 & 1) != 0)
          {
            v392 = 3;
            goto LABEL_207;
          }
LABEL_206:
          v392 = 0;
LABEL_207:
          objc_msgSend(v480, "setAccessoryType:", v392);
          sub_100007464(v386, v393, (uint64_t *)&unk_1005D3350);
          v400 = v479;
          v401 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v391)(v393, 1, v479);
          if ((_DWORD)v401 == 1)
          {
            sub_1000051EC(v393, (uint64_t *)&unk_1005D3350);
          }
          else
          {
            v402 = (void *)FMFLocation.location.getter(v401);
            (*(void (**)(uint64_t, uint64_t))(v478 + 8))(v393, v400);
            v403 = v469;
            if (!v402)
            {
LABEL_215:
              v408 = objc_msgSend(v480, "textLabel");
              if (v408)
              {
                v409 = v408;
                objc_msgSend(v408, "setEnabled:", *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_editable));

              }
              v410 = objc_msgSend(v480, v208[158]);
              if (v410)
              {
                v411 = v410;
                objc_msgSend(v410, "setEnabled:", *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_editable));

              }
              if (*(_BYTE *)(v2 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_editable))
                v412 = 3;
              else
                v412 = 0;
              objc_msgSend(v480, "setSelectionStyle:", v412);
              (*(void (**)(char *, uint64_t))(v467 + 8))(v466, v403);
              (*(void (**)(uint64_t, uint64_t))(v475 + 8))(v121, v477);
              return v480;
            }
            v404 = sub_100093BE4(v402);
            if (!v404)
            {

              goto LABEL_215;
            }
            v405 = v404;
            v406 = objc_msgSend(v480, "imageView");
            if (v406)
            {
              v407 = v406;
              v405 = v405;
              objc_msgSend(v407, "setImage:", v405);

            }
          }
          v403 = v469;
          goto LABEL_215;
        }
        (*(void (**)(uint64_t, uint64_t))(v478 + 8))(v394, v390);
      }
      sub_1000051EC(v388, (uint64_t *)&unk_1005D3340);
      v393 = (uint64_t)v453;
      goto LABEL_206;
    }
    v210 = v209;
    v423 = v97;
    v211 = v2;
    v212 = v2 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendLocation;
    v213 = (uint64_t)v443;
    sub_100007464(v2 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_friendLocation, (uint64_t)v443, (uint64_t *)&unk_1005D3350);
    v215 = v478;
    v214 = v479;
    v216 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v478 + 48);
    v217 = v216(v213, 1, v479);
    if ((_DWORD)v217 == 1)
    {
      sub_1000051EC(v213, (uint64_t *)&unk_1005D3350);
      v218 = (uint64_t)v442;
    }
    else
    {
      v234 = v433;
      FMFLocation.address.getter(v217);
      v235 = (uint64_t)v234;
      (*(void (**)(uint64_t, uint64_t))(v215 + 8))(v213, v214);
      v236 = type metadata accessor for FMFAddress(0);
      v237 = *(_QWORD *)(v236 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v237 + 48))(v235, 1, v236) == 1)
      {
        sub_1000051EC(v235, &qword_1005D3370);
        v121 = v476;
        v218 = (uint64_t)v442;
        v208 = &selRef_viewWillAppear_;
      }
      else
      {
        v253 = FMFAddress.formattedAddressLines.getter();
        (*(void (**)(uint64_t, uint64_t))(v237 + 8))(v235, v236);
        v121 = v476;
        v218 = (uint64_t)v442;
        v208 = &selRef_viewWillAppear_;
        if (v253)
        {
          if (*(_QWORD *)(v253 + 16))
          {
            v254 = *(_QWORD *)(v253 + 40);
            swift_bridgeObjectRetain(v254);
            swift_bridgeObjectRelease(v253);
            v2 = v211;
            v97 = v423;
            goto LABEL_193;
          }
          swift_bridgeObjectRelease(v253);
        }
      }
    }
    v376 = v441;
    sub_100007464(v212, v441, (uint64_t *)&unk_1005D3350);
    v377 = v479;
    v378 = v216(v376, 1, v479);
    if ((_DWORD)v378 == 1)
    {
      sub_1000051EC(v376, (uint64_t *)&unk_1005D3350);
      v379 = 0;
      v2 = v211;
LABEL_190:
      v97 = v423;
LABEL_195:
      objc_msgSend(v210, "setText:", v379);

      goto LABEL_196;
    }
    FMFLocation.address.getter(v378);
    (*(void (**)(uint64_t, uint64_t))(v478 + 8))(v376, v377);
    v380 = type metadata accessor for FMFAddress(0);
    v381 = *(_QWORD *)(v380 - 8);
    v2 = v211;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v381 + 48))(v218, 1, v380) == 1)
    {
      sub_1000051EC(v218, &qword_1005D3370);
      v379 = 0;
      v121 = v476;
      goto LABEL_190;
    }
    FMFAddress.displayAddress.getter();
    v254 = v382;
    (*(void (**)(uint64_t, uint64_t))(v381 + 8))(v218, v380);
    v97 = v423;
    if (!v254)
    {
      v379 = 0;
      v121 = v476;
      goto LABEL_195;
    }
    v121 = v476;
LABEL_193:
    v379 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v254);
    goto LABEL_195;
  }
  if (v161 != enum case for FMFLocationAlertAddressType.custom(_:))
  {
    v480 = sub_100093864();
    v219 = *(void (**)(uint64_t, uint64_t))(v122 + 8);
    v220 = v477;
    v219(v121, v477);
    v219((uint64_t)v159, v220);
    return v480;
  }
  v423 = v97;
  v480 = sub_100093A18();
  v182 = v123;
  v183 = v2 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_customLocation;
  swift_beginAccess(v2 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_customLocation, &v483, 0, 0);
  v184 = v454;
  sub_100007464(v183, v454, (uint64_t *)&unk_1005D3350);
  v185 = v478;
  v186 = *(char **)(v478 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v186)(v184, 1, v182))
  {
    sub_1000051EC(v184, (uint64_t *)&unk_1005D3350);
    v187 = 0;
    v188 = 0;
    v189 = (uint64_t)v452;
  }
  else
  {
    v228 = v434;
    (*(void (**)(char *, uint64_t, uint64_t))(v185 + 16))(v434, v184, v182);
    v229 = sub_1000051EC(v184, (uint64_t *)&unk_1005D3350);
    v230 = (uint64_t)v436;
    FMFLocation.label.getter(v229);
    (*(void (**)(char *, uint64_t))(v185 + 8))(v228, v182);
    v231 = type metadata accessor for FMFLabel(0);
    v232 = *(_QWORD *)(v231 - 8);
    v233 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v232 + 48))(v230, 1, v231);
    v189 = (uint64_t)v452;
    if (v233 == 1)
    {
      sub_1000051EC(v230, &qword_1005DC400);
      v187 = 0;
      v188 = 0;
    }
    else
    {
      v187 = FMFLabel.localizedValue.getter();
      v188 = v238;
      (*(void (**)(uint64_t, uint64_t))(v232 + 8))(v230, v231);
    }
  }
  countAndFlagsBits = v2;
  v239 = v455;
  sub_100007464(v183, v455, (uint64_t *)&unk_1005D3350);
  v240 = v479;
  v241 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v186)(v239, 1, v479);
  v242 = (uint64_t)v458;
  if (v241)
  {
    sub_1000051EC(v239, (uint64_t *)&unk_1005D3350);
    v243 = 0;
    v244 = 0;
    v245 = &selRef_viewWillAppear_;
    if (!v188)
      goto LABEL_125;
    goto LABEL_117;
  }
  v246 = v478;
  v247 = v435;
  (*(void (**)(char *, uint64_t, uint64_t))(v478 + 16))(v435, v239, v240);
  v248 = sub_1000051EC(v239, (uint64_t *)&unk_1005D3350);
  v249 = (uint64_t)v437;
  FMFLocation.address.getter(v248);
  (*(void (**)(char *, uint64_t))(v246 + 8))(v247, v240);
  v250 = type metadata accessor for FMFAddress(0);
  v251 = *(_QWORD *)(v250 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v251 + 48))(v249, 1, v250) == 1)
  {
    sub_1000051EC(v249, &qword_1005D3370);
  }
  else
  {
    v252 = (_QWORD *)FMFAddress.formattedAddressLines.getter();
    (*(void (**)(uint64_t, uint64_t))(v251 + 8))(v249, v250);
    if (v252)
    {
      if (v252[2])
      {
        v243 = v252[4];
        v244 = v252[5];
        swift_bridgeObjectRetain(v244);
        swift_bridgeObjectRelease(v252);
        goto LABEL_116;
      }
      swift_bridgeObjectRelease(v252);
    }
  }
  v243 = 0;
  v244 = 0;
LABEL_116:
  v242 = (uint64_t)v458;
  v245 = &selRef_viewWillAppear_;
  if (!v188)
  {
LABEL_125:
    v304 = swift_bridgeObjectRelease(v244).n128_u64[0];
    v303 = v478;
    goto LABEL_126;
  }
LABEL_117:
  v302 = HIBYTE(v188) & 0xF;
  if ((v188 & 0x2000000000000000) == 0)
    v302 = v187 & 0xFFFFFFFFFFFFLL;
  if (!v302)
  {
    swift_bridgeObjectRelease(v188);
    goto LABEL_125;
  }
  v303 = v478;
  if (v244)
  {
    if (v187 == v243 && v188 == v244)
    {
      swift_bridgeObjectRelease(v188);
      v304 = swift_bridgeObjectRelease(v244).n128_u64[0];
      goto LABEL_126;
    }
    v327 = _stringCompareWithSmolCheck(_:_:expecting:)(v187, v188, v243, v244, 0);
    swift_bridgeObjectRelease(v244);
    if ((v327 & 1) != 0)
    {
      v304 = swift_bridgeObjectRelease(v188).n128_u64[0];
LABEL_126:
      v305 = (uint64_t)v445;
      v306 = objc_msgSend(v480, v245[147], *(double *)&v304);
      if (!v306)
        goto LABEL_134;
      v307 = v306;
      sub_100007464(v183, v305, (uint64_t *)&unk_1005D3350);
      v308 = v479;
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v186)(v305, 1, v479))
      {
        v309 = (uint64_t *)&unk_1005D3350;
        v310 = v305;
      }
      else
      {
        v311 = v428;
        (*(void (**)(char *, uint64_t, uint64_t))(v303 + 16))(v428, v305, v308);
        v312 = sub_1000051EC(v305, (uint64_t *)&unk_1005D3350);
        FMFLocation.address.getter(v312);
        v313 = v451;
        (*(void (**)(char *, uint64_t))(v303 + 8))(v311, v308);
        v314 = type metadata accessor for FMFAddress(0);
        v315 = *(_QWORD *)(v314 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v315 + 48))(v313, 1, v314) != 1)
        {
          v332 = FMFAddress.formattedAddressLines.getter();
          (*(void (**)(char *, uint64_t))(v315 + 8))(v313, v314);
          if (v332)
          {
            if (*(_QWORD *)(v332 + 16))
            {
              v333 = *(_QWORD *)(v332 + 40);
              swift_bridgeObjectRetain(v333);
              swift_bridgeObjectRelease(v332);
              v316 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease(v333);
              goto LABEL_133;
            }
            swift_bridgeObjectRelease(v332);
          }
LABEL_132:
          v316 = 0;
LABEL_133:
          objc_msgSend(v307, "setText:", v316);

LABEL_134:
          v317 = objc_msgSend(v480, "detailTextLabel");
          if (!v317)
            goto LABEL_152;
          v318 = v317;
          v319 = v438;
          sub_100007464(v183, v438, (uint64_t *)&unk_1005D3350);
          v320 = v479;
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v186)(v319, 1, v479))
            goto LABEL_136;
          v473 = v186;
          v322 = v429;
          (*(void (**)(char *, uint64_t, uint64_t))(v303 + 16))(v429, v319, v320);
          v323 = sub_1000051EC(v319, (uint64_t *)&unk_1005D3350);
          v324 = (uint64_t)v430;
          FMFLocation.address.getter(v323);
          (*(void (**)(char *, uint64_t))(v303 + 8))(v322, v320);
          v325 = type metadata accessor for FMFAddress(0);
          v326 = *(_QWORD *)(v325 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v326 + 48))(v324, 1, v325) == 1)
          {
            sub_1000051EC(v324, &qword_1005D3370);
          }
          else
          {
            FMFAddress.displayAddress.getter();
            v335 = v334;
            (*(void (**)(uint64_t, uint64_t))(v326 + 8))(v324, v325);
            if (v335)
            {
              v321 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease(v335);
LABEL_149:
              v186 = v473;
              goto LABEL_150;
            }
          }
          v321 = 0;
          goto LABEL_149;
        }
        v309 = &qword_1005D3370;
        v310 = (uint64_t)v313;
      }
      sub_1000051EC(v310, v309);
      goto LABEL_132;
    }
  }
  v328 = objc_msgSend(v480, v245[147]);
  if (v328)
  {
    v329 = v328;
    v330 = String._bridgeToObjectiveC()();
    objc_msgSend(v329, "setText:", v330, swift_bridgeObjectRelease(v188).n128_f64[0]);

  }
  else
  {
    *(_QWORD *)&v331 = swift_bridgeObjectRelease(v188).n128_u64[0];
  }
  v368 = (uint64_t)v432;
  v369 = (uint64_t)v431;
  v370 = objc_msgSend(v480, "detailTextLabel", v331);
  if (v370)
  {
    v318 = v370;
    sub_100007464(v183, v369, (uint64_t *)&unk_1005D3350);
    v371 = v479;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v186)(v369, 1, v479))
    {
      sub_1000051EC(v369, (uint64_t *)&unk_1005D3350);
    }
    else
    {
      v473 = v186;
      v372 = v426;
      (*(void (**)(char *, uint64_t, uint64_t))(v303 + 16))(v426, v369, v371);
      v373 = sub_1000051EC(v369, (uint64_t *)&unk_1005D3350);
      FMFLocation.address.getter(v373);
      (*(void (**)(char *, uint64_t))(v303 + 8))(v372, v371);
      v374 = type metadata accessor for FMFAddress(0);
      v375 = *(_QWORD *)(v374 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v375 + 48))(v368, 1, v374) == 1)
      {
        sub_1000051EC(v368, &qword_1005D3370);
        v186 = v473;
      }
      else
      {
        v413 = FMFAddress.formattedAddressLines.getter();
        (*(void (**)(uint64_t, uint64_t))(v375 + 8))(v368, v374);
        v186 = v473;
        if (v413)
        {
          if (*(_QWORD *)(v413 + 16))
          {
            v414 = *(_QWORD *)(v413 + 40);
            swift_bridgeObjectRetain(v414);
            swift_bridgeObjectRelease(v413);
            goto LABEL_234;
          }
          swift_bridgeObjectRelease(v413);
        }
      }
    }
    v319 = v427;
    sub_100007464(v183, v427, (uint64_t *)&unk_1005D3350);
    v415 = v479;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v186)(v319, 1, v479))
    {
LABEL_136:
      sub_1000051EC(v319, (uint64_t *)&unk_1005D3350);
      v321 = 0;
LABEL_150:
      objc_msgSend(v318, "setText:", v321);
LABEL_151:

      goto LABEL_152;
    }
    v473 = v186;
    v416 = v424;
    (*(void (**)(char *, uint64_t, uint64_t))(v303 + 16))(v424, v319, v415);
    v417 = sub_1000051EC(v319, (uint64_t *)&unk_1005D3350);
    v418 = (uint64_t)v425;
    FMFLocation.address.getter(v417);
    (*(void (**)(char *, uint64_t))(v303 + 8))(v416, v415);
    v419 = type metadata accessor for FMFAddress(0);
    v420 = *(_QWORD *)(v419 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v420 + 48))(v418, 1, v419) == 1)
    {
      sub_1000051EC(v418, &qword_1005D3370);
LABEL_235:
      v321 = 0;
      v186 = v473;
      goto LABEL_150;
    }
    FMFAddress.displayAddress.getter();
    v414 = v421;
    (*(void (**)(uint64_t, uint64_t))(v420 + 8))(v418, v419);
    if (!v414)
      goto LABEL_235;
    v186 = v473;
LABEL_234:
    v321 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v414);
    objc_msgSend(v318, "setText:", v321);
    goto LABEL_151;
  }
LABEL_152:
  v336 = objc_msgSend(v480, "detailTextLabel");
  if (v336)
  {
    v337 = v336;
    v338 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
    objc_msgSend(v337, "setTextColor:", v338);

  }
  sub_100007464(v183, v242, (uint64_t *)&unk_1005D3350);
  v339 = countAndFlagsBits + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController__selectedLocation;
  swift_beginAccess(countAndFlagsBits + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController__selectedLocation, v482, 0, 0);
  v340 = v189 + *(int *)(v423 + 48);
  sub_100007464(v242, v189, (uint64_t *)&unk_1005D3350);
  sub_100007464(v339, v340, (uint64_t *)&unk_1005D3350);
  v341 = v479;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v186)(v189, 1, v479) != 1)
  {
    v342 = v440;
    sub_100007464(v189, v440, (uint64_t *)&unk_1005D3350);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v186)(v340, 1, v341) != 1)
    {
      v343 = v189;
      v344 = v242;
      v345 = v470;
      (*(void (**)(char *, uint64_t, uint64_t))(v303 + 32))(v470, v340, v341);
      v346 = sub_100008000(&qword_1005D3378, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocation, (uint64_t)&protocol conformance descriptor for FMFLocation);
      v347 = dispatch thunk of static Equatable.== infix(_:_:)(v342, v345, v341, v346);
      v348 = *(void (**)(char *, uint64_t))(v303 + 8);
      v348(v345, v341);
      sub_1000051EC(v344, (uint64_t *)&unk_1005D3350);
      v348((char *)v342, v341);
      v303 = v478;
      sub_1000051EC(v343, (uint64_t *)&unk_1005D3350);
      if ((v347 & 1) != 0)
        goto LABEL_161;
LABEL_162:
      v349 = 0;
      goto LABEL_163;
    }
    sub_1000051EC(v242, (uint64_t *)&unk_1005D3350);
    (*(void (**)(uint64_t, uint64_t))(v303 + 8))(v342, v341);
LABEL_159:
    sub_1000051EC(v189, (uint64_t *)&unk_1005D3340);
    goto LABEL_162;
  }
  sub_1000051EC(v242, (uint64_t *)&unk_1005D3350);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v186)(v340, 1, v341) != 1)
    goto LABEL_159;
  sub_1000051EC(v189, (uint64_t *)&unk_1005D3350);
LABEL_161:
  v349 = 3;
LABEL_163:
  objc_msgSend(v480, "setAccessoryType:", v349);
  v350 = v456;
  sub_100007464(v183, v456, (uint64_t *)&unk_1005D3350);
  v351 = v479;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v186)(v350, 1, v479))
  {
    sub_1000051EC(v350, (uint64_t *)&unk_1005D3350);
    v352 = &selRef_viewWillAppear_;
    v353 = v476;
  }
  else
  {
    v360 = v470;
    (*(void (**)(char *, uint64_t, uint64_t))(v303 + 16))(v470, v350, v351);
    v361 = sub_1000051EC(v350, (uint64_t *)&unk_1005D3350);
    v362 = (void *)FMFLocation.location.getter(v361);
    (*(void (**)(char *, uint64_t))(v303 + 8))(v360, v351);
    v352 = &selRef_viewWillAppear_;
    v353 = v476;
    if (v362)
    {
      v363 = sub_100093BE4(v362);
      if (v363)
      {
        v364 = v363;
        v365 = objc_msgSend(v480, "imageView");
        if (v365)
        {
          v366 = v365;
          v367 = v364;
          objc_msgSend(v366, "setImage:", v367);

          v352 = &selRef_viewWillAppear_;
        }
        else
        {

        }
      }
      else
      {

      }
    }
  }
  v354 = objc_msgSend(v480, v352[147]);
  v355 = countAndFlagsBits;
  if (v354)
  {
    v356 = v354;
    objc_msgSend(v354, "setEnabled:", *(unsigned __int8 *)(countAndFlagsBits + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_editable));

  }
  v357 = objc_msgSend(v480, "detailTextLabel");
  if (v357)
  {
    v358 = v357;
    objc_msgSend(v357, "setEnabled:", *(unsigned __int8 *)(v355 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_editable));

  }
  if (*(_BYTE *)(v355 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_editable))
    v359 = 3;
  else
    v359 = 0;
  objc_msgSend(v480, "setSelectionStyle:", v359);
  (*(void (**)(uint64_t, uint64_t))(v475 + 8))(v353, v477);
  return v480;
}

uint64_t sub_100092098()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  void *v29;
  NSString v30;
  Class v31;
  id v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(char *, uint64_t, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  Class v49;
  void *v50;
  NSString v51;
  Class isa;
  id v53;
  void *v54;
  id v55;
  Swift::String_optional v56;
  Swift::String v57;
  Swift::String v58;
  void *object;
  NSString v60;
  id v61;
  void *v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  NSString v79;
  id v80;
  void *v81;
  id v82;
  id v83;
  void *v84;
  id v85;
  void *v86;
  uint64_t v87;
  void *v88;
  NSString v89;
  Class v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t (*v98)(char *, uint64_t, uint64_t);
  char *v99;
  uint64_t v100;
  uint64_t v101;
  void (*v102)(char *, uint64_t);
  uint64_t v103;
  uint64_t v104;
  char *v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  Class v109;
  void *v110;
  NSString v111;
  Class v112;
  id v113;
  void *v114;
  id v115;
  Swift::String_optional v116;
  Swift::String v117;
  Swift::String v118;
  void *v119;
  NSString v120;
  id v121;
  void *v122;
  uint64_t v123;
  void (*v124)(char *, uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  NSString v139;
  id v140;
  void *v141;
  id v142;
  id v143;
  void *v144;
  id v145;
  void *v146;
  uint64_t v147;
  uint64_t result;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  char *v156;
  char *v157;
  _BYTE v158[24];
  Swift::String v159;
  Swift::String v160;

  v1 = v0;
  v2 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v149 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v149 - v6;
  v8 = sub_100053F2C(&qword_1005D3318);
  __chkstk_darwin(v8);
  v156 = (char *)&v149 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100053F2C((uint64_t *)&unk_1005D3400);
  __chkstk_darwin(v10);
  v157 = (char *)&v149 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DateComponents(0);
  v152 = *(_QWORD *)(v12 - 8);
  v153 = v12;
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v149 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v149 - v17;
  __chkstk_darwin(v16);
  v20 = (char *)&v149 - v19;
  v155 = type metadata accessor for FMFSchedule(0);
  v21 = *(_QWORD *)(v155 - 8);
  v22 = __chkstk_darwin(v155);
  v24 = (char *)&v149 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v22);
  v154 = (char *)&v149 - v26;
  v27 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_startTimeCellsExpanded);
  v28 = IndexPath.row.getter(v25);
  if (!v28)
  {
    v50 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_tableView);
    v51 = String._bridgeToObjectiveC()();
    isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v34 = (char *)objc_msgSend(v50, "dequeueReusableCellWithIdentifier:forIndexPath:", v51, isa);

    v53 = objc_msgSend(v34, "textLabel");
    if (v53)
    {
      v54 = v53;
      v55 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v56.value._countAndFlagsBits = 0xD000000000000012;
      v57._countAndFlagsBits = 0xD000000000000022;
      v159._object = (void *)0x80000001004A6680;
      v57._object = (void *)0x80000001004A69C0;
      v56.value._object = (void *)0x80000001004A6660;
      v58._countAndFlagsBits = 0;
      v58._object = (void *)0xE000000000000000;
      v159._countAndFlagsBits = 0xD000000000000017;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v57, v56, (NSBundle)v55, v58, v159)._object;

      v60 = String._bridgeToObjectiveC()();
      objc_msgSend(v54, "setText:", v60, swift_bridgeObjectRelease(object).n128_f64[0]);

    }
    v61 = objc_msgSend(v34, "detailTextLabel");
    if (v61)
    {
      v62 = v61;
      v63 = v1 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_schedule;
      swift_beginAccess(v1 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_schedule, v158, 0, 0);
      v150 = v21;
      v151 = v1;
      v64 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
      v65 = (uint64_t)v20;
      v67 = v154;
      v66 = v155;
      v64(v154, v63, v155);
      v68 = type metadata accessor for Calendar(0);
      v69 = v157;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v157, 1, 1, v68);
      v70 = type metadata accessor for TimeZone(0);
      v71 = v34;
      v72 = v156;
      v73 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56))(v156, 1, 1, v70);
      v74 = FMFSchedule.startHour.getter(v73);
      v75 = FMFSchedule.startMin.getter(v74);
      v76 = v72;
      v34 = v71;
      DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)(v69, v76, 0, 1, 0, 1, 0, 1, 0, 1, v74, 0, v75, 0, 0, 1, 0, 1, 0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1);
      sub_100099330(v65);
      v78 = v77;
      (*(void (**)(uint64_t, uint64_t))(v152 + 8))(v65, v153);
      v1 = v151;
      (*(void (**)(char *, uint64_t))(v150 + 8))(v67, v66);
      v79 = String._bridgeToObjectiveC()();
      objc_msgSend(v62, "setText:", v79, swift_bridgeObjectRelease(v78).n128_f64[0]);

    }
    v80 = objc_msgSend(v34, "detailTextLabel");
    if (v80)
    {
      v81 = v80;
      v82 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
      objc_msgSend(v81, "setTextColor:", v82);

    }
    v83 = objc_msgSend(v34, "textLabel");
    if (v83)
    {
      v84 = v83;
      objc_msgSend(v83, "setEnabled:", *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_editable));

    }
    v85 = objc_msgSend(v34, "detailTextLabel");
    if (v85)
    {
      v86 = v85;
      objc_msgSend(v85, "setEnabled:", *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_editable));

    }
    v87 = OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_editable;
    goto LABEL_34;
  }
  if (!v27)
  {
    if (v28 != 2)
    {
      if (v28 != 1)
        goto LABEL_41;
      goto LABEL_23;
    }
LABEL_20:
    v88 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_tableView);
    v89 = String._bridgeToObjectiveC()();
    v90 = IndexPath._bridgeToObjectiveC()().super.isa;
    v91 = objc_msgSend(v88, "dequeueReusableCellWithIdentifier:forIndexPath:", v89, v90);

    v92 = type metadata accessor for ScheduleTimePickerCell(0);
    v151 = swift_dynamicCastClassUnconditional(v91, v92, 0, 0, 0);
    v93 = v151 + OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleTimePickerCell_delegate;
    *(_QWORD *)(v93 + 8) = &off_100541D00;
    swift_unknownObjectWeakAssign(v93, v1);
    v94 = type metadata accessor for Calendar(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 56))(v157, 1, 1, v94);
    v95 = type metadata accessor for TimeZone(0);
    v96 = v156;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56))(v156, 1, 1, v95);
    v97 = v1 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_schedule;
    swift_beginAccess(v1 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_schedule, v158, 0, 0);
    v98 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 16);
    v99 = v154;
    v100 = v155;
    v101 = v98(v154, v97, v155);
    v149 = FMFSchedule.endHour.getter(v101);
    v102 = *(void (**)(char *, uint64_t))(v21 + 8);
    v102(v99, v100);
    v103 = v98(v24, v97, v100);
    v104 = FMFSchedule.endMin.getter(v103);
    v102(v24, v100);
    v105 = v96;
    v34 = (char *)v151;
    DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)(v157, v105, 0, 1, 0, 1, 0, 1, 0, 1, v149, 0, v104, 0, 0, 1, 0, 1, 0,
      1,
      0,
      1,
      0,
      1,
      0,
      1,
      0,
      1,
      0,
      1);
    v106 = *(void **)&v34[OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleTimePickerCell_timePicker];
    Calendar.date(from:)(v15);
    v107 = type metadata accessor for Date(0);
    v108 = *(_QWORD *)(v107 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 48))(v5, 1, v107) != 1)
    {
      v109 = Date._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v108 + 8))(v5, v107);
      objc_msgSend(v106, "setDate:", v109);

      (*(void (**)(char *, uint64_t))(v152 + 8))(v15, v153);
      return (uint64_t)v34;
    }
    __break(1u);
    goto LABEL_40;
  }
  switch(v28)
  {
    case 3:
      goto LABEL_20;
    case 2:
LABEL_23:
      v110 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_tableView);
      v111 = String._bridgeToObjectiveC()();
      v112 = IndexPath._bridgeToObjectiveC()().super.isa;
      v34 = (char *)objc_msgSend(v110, "dequeueReusableCellWithIdentifier:forIndexPath:", v111, v112);

      v113 = objc_msgSend(v34, "textLabel");
      if (v113)
      {
        v114 = v113;
        v115 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v116.value._countAndFlagsBits = 0xD000000000000012;
        v117._countAndFlagsBits = 0xD000000000000020;
        v160._object = (void *)0x80000001004A6680;
        v117._object = (void *)0x80000001004A6990;
        v116.value._object = (void *)0x80000001004A6660;
        v118._countAndFlagsBits = 0;
        v118._object = (void *)0xE000000000000000;
        v160._countAndFlagsBits = 0xD000000000000017;
        v119 = NSLocalizedString(_:tableName:bundle:value:comment:)(v117, v116, (NSBundle)v115, v118, v160)._object;

        v120 = String._bridgeToObjectiveC()();
        objc_msgSend(v114, "setText:", v120, swift_bridgeObjectRelease(v119).n128_f64[0]);

      }
      v121 = objc_msgSend(v34, "detailTextLabel");
      if (v121)
      {
        v122 = v121;
        v123 = v1 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_schedule;
        swift_beginAccess(v1 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_schedule, v158, 0, 0);
        v150 = v21;
        v151 = v1;
        v124 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
        v125 = (uint64_t)v20;
        v127 = v154;
        v126 = v155;
        v124(v154, v123, v155);
        v128 = type metadata accessor for Calendar(0);
        v129 = v157;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 56))(v157, 1, 1, v128);
        v130 = type metadata accessor for TimeZone(0);
        v131 = v34;
        v132 = v156;
        v133 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v130 - 8) + 56))(v156, 1, 1, v130);
        v134 = FMFSchedule.endHour.getter(v133);
        v135 = FMFSchedule.endMin.getter(v134);
        v136 = v132;
        v34 = v131;
        DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)(v129, v136, 0, 1, 0, 1, 0, 1, 0, 1, v134, 0, v135, 0, 0, 1, 0, 1, 0,
          1,
          0,
          1,
          0,
          1,
          0,
          1,
          0,
          1,
          0,
          1);
        sub_100099330(v125);
        v138 = v137;
        (*(void (**)(uint64_t, uint64_t))(v152 + 8))(v125, v153);
        v1 = v151;
        (*(void (**)(char *, uint64_t))(v150 + 8))(v127, v126);
        v139 = String._bridgeToObjectiveC()();
        objc_msgSend(v122, "setText:", v139, swift_bridgeObjectRelease(v138).n128_f64[0]);

      }
      v140 = objc_msgSend(v34, "detailTextLabel");
      if (v140)
      {
        v141 = v140;
        v142 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
        objc_msgSend(v141, "setTextColor:", v142);

      }
      v143 = objc_msgSend(v34, "textLabel");
      if (v143)
      {
        v144 = v143;
        objc_msgSend(v143, "setEnabled:", *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_editable));

      }
      v145 = objc_msgSend(v34, "detailTextLabel");
      if (v145)
      {
        v146 = v145;
        objc_msgSend(v145, "setEnabled:", *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_editable));

      }
      v87 = OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_editable;
LABEL_34:
      if (*(_BYTE *)(v1 + v87))
        v147 = 3;
      else
        v147 = 0;
      objc_msgSend(v34, "setSelectionStyle:", v147);
      return (uint64_t)v34;
    case 1:
      v29 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_tableView);
      v30 = String._bridgeToObjectiveC()();
      v31 = IndexPath._bridgeToObjectiveC()().super.isa;
      v32 = objc_msgSend(v29, "dequeueReusableCellWithIdentifier:forIndexPath:", v30, v31);

      v33 = type metadata accessor for ScheduleTimePickerCell(0);
      v34 = (char *)swift_dynamicCastClassUnconditional(v32, v33, 0, 0, 0);
      v35 = &v34[OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleTimePickerCell_delegate];
      *((_QWORD *)v35 + 1) = &off_100541D00;
      swift_unknownObjectWeakAssign(v35, v1);
      v36 = type metadata accessor for Calendar(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v157, 1, 1, v36);
      v37 = type metadata accessor for TimeZone(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v156, 1, 1, v37);
      v38 = v1 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_schedule;
      swift_beginAccess(v1 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_schedule, v158, 0, 0);
      v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 16);
      v40 = v154;
      v41 = v155;
      v42 = v39(v154, v38, v155);
      v151 = FMFSchedule.startHour.getter(v42);
      v43 = *(void (**)(char *, uint64_t))(v21 + 8);
      v43(v40, v41);
      v44 = v39(v24, v38, v41);
      v45 = FMFSchedule.startMin.getter(v44);
      v43(v24, v41);
      DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)(v157, v156, 0, 1, 0, 1, 0, 1, 0, 1, v151, 0, v45, 0, 0, 1, 0, 1, 0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1);
      v46 = *(void **)&v34[OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleTimePickerCell_timePicker];
      Calendar.date(from:)(v18);
      v47 = type metadata accessor for Date(0);
      v48 = *(_QWORD *)(v47 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v7, 1, v47) != 1)
      {
        v49 = Date._bridgeToObjectiveC()().super.isa;
        (*(void (**)(char *, uint64_t))(v48 + 8))(v7, v47);
        objc_msgSend(v46, "setDate:", v49);

        (*(void (**)(char *, uint64_t))(v152 + 8))(v18, v153);
        return (uint64_t)v34;
      }
LABEL_40:
      __break(1u);
      break;
  }
LABEL_41:
  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000017, 0x80000001004A6930, "FindMy/FMLocationAlertViewController.swift", 42, 2, 1324, 0);
  __break(1u);
  return result;
}

uint64_t sub_100093004(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  char v5;
  id v6;
  void *v7;
  id v8;
  Swift::String v9;
  Swift::String v10;
  void *v11;
  NSString v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  Swift::String v17;
  Swift::String v18;
  void *object;
  NSString v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t result;
  Swift::String v25;
  Swift::String v26;

  v2 = v1;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_repeatingCellsExpanded) != 1)
  {
    v5 = *(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_repeating);
    v4 = sub_10009360C();
    if ((v5 & 1) != 0)
      goto LABEL_5;
LABEL_12:
    v14 = objc_msgSend(v4, "textLabel");
    if (v14)
    {
      v15 = v14;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(0xE000000000000000);
      v16 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v17._countAndFlagsBits = 0xD00000000000002BLL;
      v26._countAndFlagsBits = 0xD00000000000003DLL;
      v26._object = (void *)0x80000001004A6A20;
      v17._object = (void *)0x80000001004A69F0;
      v18._countAndFlagsBits = 0;
      v18._object = (void *)0xE000000000000000;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v17, (Swift::String_optional)0, (NSBundle)v16, v18, v26)._object;

      v20 = String._bridgeToObjectiveC()();
      objc_msgSend(v15, "setText:", v20, swift_bridgeObjectRelease(object).n128_f64[0]);

    }
    if (*(_BYTE *)(v2 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_repeating))
      v13 = 0;
    else
      v13 = 3;
    goto LABEL_17;
  }
  v3 = IndexPath.row.getter(a1);
  if (v3 != 1)
  {
    if (v3)
    {
      result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000028, 0x80000001004A6AD0, "FindMy/FMLocationAlertViewController.swift", 42, 2, 1213, 0);
      __break(1u);
      return result;
    }
    v4 = sub_10009360C();
    goto LABEL_12;
  }
  v4 = sub_10009360C();
LABEL_5:
  v6 = objc_msgSend(v4, "textLabel");
  if (v6)
  {
    v7 = v6;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(0xE000000000000000);
    v8 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v25._countAndFlagsBits = 0xD000000000000039;
    v25._object = (void *)0x80000001004A6A90;
    v9._object = (void *)0x80000001004A6A60;
    v9._countAndFlagsBits = 0xD000000000000027;
    v10._countAndFlagsBits = 0;
    v10._object = (void *)0xE000000000000000;
    v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v25)._object;

    v12 = String._bridgeToObjectiveC()();
    objc_msgSend(v7, "setText:", v12, swift_bridgeObjectRelease(v11).n128_f64[0]);

  }
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_repeating))
    v13 = 3;
  else
    v13 = 0;
LABEL_17:
  objc_msgSend(v4, "setAccessoryType:", v13);
  v21 = objc_msgSend(v4, "textLabel");
  if (v21)
  {
    v22 = v21;
    objc_msgSend(v21, "setEnabled:", *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_editable));

  }
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_editable))
    v23 = 3;
  else
    v23 = 0;
  objc_msgSend(v4, "setSelectionStyle:", v23);
  return (uint64_t)v4;
}

id sub_100093370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  NSString v12;
  Class isa;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  int v24;
  int v25;
  id v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[24];
  char v31[24];
  char v32[24];

  v1 = type metadata accessor for FMFSchedule.DaysOfWeek(0);
  v28 = *(_QWORD *)(v1 - 8);
  v2 = __chkstk_darwin(v1);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v6 = (char *)&v27 - v5;
  v7 = type metadata accessor for FMFSchedule(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = v0;
  v11 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_tableView);
  v12 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v14 = objc_msgSend(v11, "dequeueReusableCellWithIdentifier:forIndexPath:", v12, isa);

  v15 = type metadata accessor for ScheduleDaysOfWeekCell(0);
  v16 = swift_dynamicCastClass(v14, v15);
  if (v16)
  {
    v17 = v16;
    v18 = v29;
    v19 = v29 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_schedule;
    swift_beginAccess(v29 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_schedule, v32, 0, 0);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v19, v7);
    v27 = v14;
    FMFSchedule.daysOfWeek.getter(v27);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v20 = v17 + OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleDaysOfWeekCell_daysOfWeek;
    swift_beginAccess(v17 + OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleDaysOfWeekCell_daysOfWeek, v31, 0, 0);
    v21 = v28;
    (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v4, v20, v1);
    swift_beginAccess(v20, v30, 33, 0);
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 24))(v20, v6, v1);
    swift_endAccess(v30);
    sub_1000959DC();
    v22 = *(void (**)(char *, uint64_t))(v21 + 8);
    v22(v6, v1);
    v22(v4, v1);
    v23 = v17 + OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleDaysOfWeekCell_delegate;
    *(_QWORD *)(v23 + 8) = &off_100541CF0;
    swift_unknownObjectWeakAssign(v23, v18);
    v24 = *(unsigned __int8 *)(v18 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_editable);
    v25 = *(unsigned __int8 *)(v17
                             + OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleDaysOfWeekCell_isEditable);
    *(_BYTE *)(v17 + OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleDaysOfWeekCell_isEditable) = v24;
    if (v24 != v25)
      sub_100095BA0();

  }
  return v14;
}

id sub_10009360C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSString v5;
  Class isa;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v16;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_tableView);
  v16 = sub_100006C5C(0, &qword_1005E27C0, UITableViewCell_ptr);
  v2 = sub_100053F2C(&qword_1005D3410);
  String.init<A>(describing:)(&v16, v2);
  v4 = v3;
  v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v4);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v7 = objc_msgSend(v1, "dequeueReusableCellWithIdentifier:forIndexPath:", v5, isa);

  objc_msgSend(v7, "setIndentationLevel:", 0);
  v8 = objc_msgSend(v7, "textLabel");
  if (v8)
  {
    v9 = v8;
    objc_msgSend(v8, "setTextAlignment:", 3);

  }
  v10 = objc_msgSend(v7, "textLabel");
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend((id)objc_opt_self(UIColor), "labelColor");
    objc_msgSend(v11, "setTextColor:", v12);

  }
  v13 = objc_msgSend(v7, "textLabel");
  if (v13)
  {
    v14 = v13;
    objc_msgSend(v13, "setText:", 0);

  }
  objc_msgSend(v7, "setAccessoryView:", 0);
  return v7;
}

id sub_100093864()
{
  uint64_t v0;
  void *v1;
  NSString v2;
  Class isa;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  Swift::String v11;
  Swift::String v12;
  void *object;
  NSString v14;
  Swift::String v16;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_tableView);
  v2 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v4 = objc_msgSend(v1, "dequeueReusableCellWithIdentifier:forIndexPath:", v2, isa);

  v5 = type metadata accessor for FMPlusButtonTableViewCell();
  v6 = swift_dynamicCastClass(v4, v5);
  if (v6)
  {
    v7 = *(void **)(*(_QWORD *)(v6 + OBJC_IVAR____TtC6FindMy25FMPlusButtonTableViewCell_addButton)
                  + OBJC_IVAR____TtC6FindMy11FMAddButton_titleLabel);
    v8 = v4;
    v9 = v7;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(0xE000000000000000);
    v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v11._countAndFlagsBits = 0xD00000000000002BLL;
    v16._countAndFlagsBits = 0xD00000000000003DLL;
    v16._object = (void *)0x80000001004A68F0;
    v11._object = (void *)0x80000001004A68C0;
    v12._countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v16)._object;

    v14 = String._bridgeToObjectiveC()();
    objc_msgSend(v9, "setText:", v14, swift_bridgeObjectRelease(object).n128_f64[0]);

  }
  return v4;
}

id sub_100093A18()
{
  uint64_t v0;
  void *v1;
  NSString v2;
  Class isa;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_tableView);
  v2 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v4 = objc_msgSend(v1, "dequeueReusableCellWithIdentifier:forIndexPath:", v2, isa);

  v5 = type metadata accessor for AlertLocationCell();
  v6 = swift_dynamicCastClass(v4, v5);
  if (v6)
  {
    v7 = (void *)v6;
    v8 = v4;
    v9 = objc_msgSend(v7, "textLabel");
    if (v9)
    {
      v10 = v9;
      objc_msgSend(v9, "setNumberOfLines:", 0);

    }
    v11 = objc_msgSend(v7, "textLabel");
    if (v11)
    {
      v12 = v11;
      objc_msgSend(v11, "setLineBreakMode:", 0);

    }
    v13 = objc_msgSend(v7, "imageView");
    if (v13)
    {
      v14 = v13;
      v15 = objc_msgSend(v13, "layer");

      objc_msgSend(v15, "setCornerRadius:", 6.0);
    }
    v16 = objc_msgSend(v7, "imageView");
    if (v16)
    {
      v17 = v16;
      v18 = objc_msgSend(v16, "layer");

      objc_msgSend(v18, "setMasksToBounds:", 1);
    }

  }
  return v4;
}

id sub_100093BE4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char **v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  char *v43;
  void *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char v49[24];

  v2 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
  v3 = swift_allocObject(v2, 152, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100481B10;
  v4 = swift_allocObject(v2, 72, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100481740;
  objc_msgSend(a1, "coordinate");
  *(_QWORD *)(v4 + 56) = &type metadata for Double;
  *(_QWORD *)(v4 + 64) = &protocol witness table for Double;
  *(_QWORD *)(v4 + 32) = v5;
  v6 = String.init(format:_:)(1714695717, 0xE400000000000000, v4);
  v8 = v7;
  *(_QWORD *)(v3 + 56) = &type metadata for String;
  v9 = sub_100071E88();
  *(_QWORD *)(v3 + 64) = v9;
  *(_QWORD *)(v3 + 32) = v6;
  *(_QWORD *)(v3 + 40) = v8;
  v10 = swift_allocObject(v2, 72, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100481740;
  v45 = a1;
  objc_msgSend(a1, "coordinate");
  *(_QWORD *)(v10 + 56) = &type metadata for Double;
  *(_QWORD *)(v10 + 64) = &protocol witness table for Double;
  *(_QWORD *)(v10 + 32) = v11;
  v12 = String.init(format:_:)(1714695717, 0xE400000000000000, v10);
  *(_QWORD *)(v3 + 96) = &type metadata for String;
  *(_QWORD *)(v3 + 104) = v9;
  *(_QWORD *)(v3 + 72) = v12;
  *(_QWORD *)(v3 + 80) = v13;
  v14 = swift_allocObject(v2, 72, 7);
  *(_OWORD *)(v14 + 16) = xmmword_100481740;
  v15 = &selRef_viewWillAppear_;
  v16 = objc_msgSend(v46, "traitCollection");
  v17 = objc_msgSend(v16, "userInterfaceStyle");

  *(_QWORD *)(v14 + 56) = &type metadata for Int;
  *(_QWORD *)(v14 + 64) = &protocol witness table for Int;
  *(_QWORD *)(v14 + 32) = v17;
  v18 = String.init(format:_:)(25637, 0xE200000000000000, v14);
  *(_QWORD *)(v3 + 136) = &type metadata for String;
  *(_QWORD *)(v3 + 144) = v9;
  *(_QWORD *)(v3 + 112) = v18;
  *(_QWORD *)(v3 + 120) = v19;
  v20 = String.init(format:_:)(0x40252D40252D4025, 0xE800000000000000, v3);
  v22 = v21;
  v23 = &v46[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_imageCache];
  swift_beginAccess(&v46[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_imageCache], v49, 0, 0);
  v24 = *(_QWORD *)v23;
  if (*(_QWORD *)(v24 + 16))
  {
    swift_bridgeObjectRetain(v22);
    swift_bridgeObjectRetain(v24);
    v25 = sub_10004C348(v20, v22);
    if ((v26 & 1) != 0)
    {
      v27 = *(id *)(*(_QWORD *)(v24 + 56) + 8 * v25);
      swift_bridgeObjectRelease(v22);
      swift_bridgeObjectRelease(v24);
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v28 = type metadata accessor for Logger(0);
      sub_100056D88(v28, (uint64_t)qword_1005F5748);
      swift_bridgeObjectRetain(v22);
      v30 = Logger.logObject.getter(v29);
      v31 = static os_log_type_t.default.getter(v30);
      if (os_log_type_enabled(v30, v31))
      {
        v32 = (uint8_t *)swift_slowAlloc(12, -1);
        v33 = swift_slowAlloc(32, -1);
        v48 = v33;
        *(_DWORD *)v32 = 136315138;
        swift_bridgeObjectRetain(v22);
        v47 = sub_100056DA0(v20, v22, &v48);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48);
        swift_bridgeObjectRelease_n(v22, 3);
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "FMLocationAlertViewController: mapSnapshot returning cached image for  %s", v32, 0xCu);
        swift_arrayDestroy(v33, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v33, -1, -1);
        swift_slowDealloc(v32, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n(v22, 2);
      }
      return v27;
    }
    swift_bridgeObjectRelease(v22);
    swift_bridgeObjectRelease(v24);
  }
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v34 = type metadata accessor for Logger(0);
  sub_100056D88(v34, (uint64_t)qword_1005F5748);
  v35 = swift_bridgeObjectRetain_n(v22, 2);
  v36 = Logger.logObject.getter(v35);
  v37 = static os_log_type_t.default.getter(v36);
  if (os_log_type_enabled(v36, v37))
  {
    v38 = (uint8_t *)swift_slowAlloc(12, -1);
    v39 = swift_slowAlloc(32, -1);
    v48 = v39;
    *(_DWORD *)v38 = 136315138;
    swift_bridgeObjectRetain(v22);
    v47 = sub_100056DA0(v20, v22, &v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v47, &v48);
    swift_bridgeObjectRelease_n(v22, 3);
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "FMLocationAlertViewController: loading new image for %s", v38, 0xCu);
    swift_arrayDestroy(v39, 1, (char *)&type metadata for Any + 8);
    v40 = v39;
    v15 = &selRef_viewWillAppear_;
    swift_slowDealloc(v40, -1, -1);
    swift_slowDealloc(v38, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v22, 2);
  }
  v41 = *(_QWORD *)&v46[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_mapSnapshotter];
  v42 = objc_msgSend(v46, v15[47]);
  swift_bridgeObjectRetain(v22);
  v43 = v46;
  sub_1000F075C(v45, v42, 0, v41, v43, v20, v22, 50.0, 50.0);

  swift_bridgeObjectRelease_n(v22, 2);
  return 0;
}

uint64_t sub_10009418C(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  id v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[5];
  uint64_t v33;
  uint64_t v34;

  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v31 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v30 - 8);
  __chkstk_darwin(v30);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = &a2[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_imageCache];
  swift_beginAccess(&a2[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_imageCache], aBlock, 33, 0);
  swift_bridgeObjectRetain(a4);
  v15 = a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)v14);
  v34 = *(_QWORD *)v14;
  *(_QWORD *)v14 = 0x8000000000000000;
  sub_100179798((uint64_t)v15, a3, a4, isUniquelyReferenced_nonNull_native);
  v17 = *(_QWORD *)v14;
  *(_QWORD *)v14 = v34;
  swift_bridgeObjectRelease(a4);
  swift_bridgeObjectRelease(v17);
  swift_endAccess(aBlock);
  v18 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v19 = (void *)static OS_dispatch_queue.main.getter(v18);
  v20 = swift_allocObject(&unk_100541D70, 24, 7);
  *(_QWORD *)(v20 + 16) = a2;
  aBlock[4] = sub_100099F08;
  v33 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_100541D88;
  v21 = _Block_copy(aBlock);
  v22 = v33;
  v23 = a2;
  swift_release(v22);
  static DispatchQoS.unspecified.getter(v24);
  aBlock[0] = _swiftEmptyArrayStorage;
  v25 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v26 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v27 = sub_1000555E4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v26, v27, v8, v25);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v13, v10, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v30);
}

void sub_100094414()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  NSURL *v19;
  void *v20;
  void *v21;
  unint64_t v22;
  Class isa;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;

  v0 = type metadata accessor for FMFConfigValue(0);
  v1 = *(_QWORD *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100053F2C((uint64_t *)&unk_1005D3470);
  __chkstk_darwin(v4);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for URL(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, enum case for FMFConfigValue.fenceSetupLink(_:), v0);
  v24[0] = 0;
  v24[1] = 0xE000000000000000;
  FMFGlobalConfig<A>(_:fallback:)(&v25, v3, v24, &type metadata for String);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v11 = v26;
  URL.init(string:)(v25, v26);
  v12 = swift_bridgeObjectRelease(v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v8 + 48))(v6, 1, v7, v12) == 1)
  {
    sub_1000051EC((uint64_t)v6, (uint64_t *)&unk_1005D3470);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v13 = type metadata accessor for Logger(0);
    v14 = sub_100056D88(v13, (uint64_t)qword_1005F5748);
    v15 = Logger.logObject.getter(v14);
    v16 = static os_log_type_t.default.getter(v15);
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "FMLocationAlertViewController: Cannot go to link", v17, 2u);
      swift_slowDealloc(v17, -1, -1);
    }

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v18 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
    URL._bridgeToObjectiveC()(v19);
    v21 = v20;
    v22 = sub_10011D84C((uint64_t)_swiftEmptyArrayStorage);
    type metadata accessor for OpenExternalURLOptionsKey(0);
    sub_100008000((unint64_t *)&qword_1005D2610, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_1004814BC);
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v18, "openURL:options:completionHandler:", v21, isa, 0, swift_bridgeObjectRelease(v22).n128_f64[0]);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

double sub_10009470C(uint64_t a1, void *a2)
{
  uint64_t v3;
  double result;

  v3 = swift_allocObject(&unk_1005420B8, 24, 7);
  *(_QWORD *)(v3 + 16) = a2;
  sub_10038685C(a2, (uint64_t)sub_100099CD4, v3);
  *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  return result;
}

void sub_10009475C(char a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  void *v19;
  id v20;
  Swift::String v21;
  Swift::String v22;
  Swift::String v23;
  id v24;
  Swift::String v25;
  Swift::String v26;
  Swift::String v27;
  NSObject *oslog;
  uint64_t v29;
  _QWORD v30[3];
  _BYTE v31[8];
  uint64_t v32;
  unint64_t v33;
  Swift::String v34;
  Swift::String v35;

  v5 = *(void **)(a3 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_doneButtonItem);
  if (v5)
    objc_msgSend(v5, "setEnabled:", 1);
  if (a2)
  {
    swift_errorRetain(a2);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v6 = type metadata accessor for Logger(0);
    sub_100056D88(v6, (uint64_t)qword_1005F5748);
    swift_errorRetain(a2);
    v7 = swift_errorRetain(a2);
    v8 = Logger.logObject.getter(v7);
    v9 = static os_log_type_t.default.getter(v8);
    if (os_log_type_enabled(v8, v9))
    {
      v10 = swift_slowAlloc(18, -1);
      v11 = swift_slowAlloc(32, -1);
      v32 = v11;
      *(_DWORD *)v10 = 67109378;
      LODWORD(v29) = a1 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, (char *)&v29 + 4);
      *(_WORD *)(v10 + 8) = 2080;
      swift_getErrorValue(a2, v31, v30);
      v12 = Error.localizedDescription.getter(v30[1], v30[2]);
      v14 = v13;
      v29 = sub_100056DA0(v12, v13, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v29, v30);
      swift_bridgeObjectRelease(v14);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "FMLocationAlertViewController: didUpgrade=%{BOOL}d, upgrade error %s", (uint8_t *)v10, 0x12u);
      swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v11, -1, -1);
      swift_slowDealloc(v10, -1, -1);
    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);
    }

    v32 = 0;
    v33 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v33);
    v19 = (void *)objc_opt_self(NSBundle);
    v20 = objc_msgSend(v19, "mainBundle");
    v34._countAndFlagsBits = 0xD000000000000034;
    v34._object = (void *)0x80000001004A70B0;
    v21._object = (void *)0x80000001004A7080;
    v21._countAndFlagsBits = 0xD000000000000022;
    v22._countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)v20, v22, v34);

    v32 = 0;
    v33 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    v24 = objc_msgSend(v19, "mainBundle", swift_bridgeObjectRelease(v33).n128_f64[0]);
    v25._countAndFlagsBits = 0xD000000000000024;
    v35._countAndFlagsBits = 0xD000000000000036;
    v35._object = (void *)0x80000001004A7120;
    v25._object = (void *)0x80000001004A70F0;
    v26._countAndFlagsBits = 0;
    v26._object = (void *)0xE000000000000000;
    v27 = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, (Swift::String_optional)0, (NSBundle)v24, v26, v35);

    sub_100086000(v23._countAndFlagsBits, (uint64_t)v23._object, v27._countAndFlagsBits, (uint64_t)v27._object);
    swift_bridgeObjectRelease(v23._object);
    swift_bridgeObjectRelease(v27._object);
    swift_errorRelease(a2);
  }
  else
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v15 = type metadata accessor for Logger(0);
    v16 = sub_100056D88(v15, (uint64_t)qword_1005F5748);
    oslog = Logger.logObject.getter(v16);
    v17 = static os_log_type_t.default.getter(oslog);
    if (os_log_type_enabled(oslog, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v18 = 67109120;
      LODWORD(v32) = a1 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v32, (char *)&v32 + 4);
      _os_log_impl((void *)&_mh_execute_header, oslog, v17, "FMLocationAlertViewController: didUpgrade=%{BOOL}d", v18, 8u);
      swift_slowDealloc(v18, -1, -1);

    }
    else
    {

    }
  }
}

id sub_100094C2C()
{
  return sub_100094C38((uint64_t (*)(_QWORD))type metadata accessor for SelectionCell);
}

id sub_100094C38(uint64_t (*a1)(_QWORD))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, "dealloc");
}

uint64_t type metadata accessor for SelectionCell()
{
  return objc_opt_self(_TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F13SelectionCell);
}

double sub_100094C94()
{
  _BYTE *v0;
  char *v1;
  double result;
  uint64_t v3;

  v1 = &v0[OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F29CheckmarkAlignedTableViewCell____lazy_storage___checkmarkSpacingSize];
  if ((v0[OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F29CheckmarkAlignedTableViewCell____lazy_storage___checkmarkSpacingSize
         + 16] & 1) == 0)
    return *(double *)v1;
  result = sub_100094CD8(v0);
  *(double *)v1 = result;
  *((_QWORD *)v1 + 1) = v3;
  v1[16] = 0;
  return result;
}

double sub_100094CD8(void *a1)
{
  id v1;
  double v2;
  void *v3;
  id v4;
  id v5;
  NSString v6;
  id v7;
  double v8;

  v1 = objc_msgSend(a1, "textLabel");
  v2 = 17.666667;
  if (v1)
  {
    v3 = v1;
    v4 = objc_msgSend(v1, "font");

    if (v4)
    {
      v5 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", v4);
      v6 = String._bridgeToObjectiveC()();
      v7 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v6, v5);

      if (v7)
      {
        objc_msgSend(v7, "size");
        v2 = v8;

      }
      else
      {

      }
    }
  }
  return v2;
}

id sub_100095024()
{
  return sub_100094C38((uint64_t (*)(_QWORD))type metadata accessor for CheckmarkAlignedTableViewCell);
}

uint64_t type metadata accessor for CheckmarkAlignedTableViewCell()
{
  return objc_opt_self(_TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F29CheckmarkAlignedTableViewCell);
}

id sub_1000950B8()
{
  return sub_100094C38((uint64_t (*)(_QWORD))type metadata accessor for TriggerTypeCell);
}

uint64_t type metadata accessor for TriggerTypeCell()
{
  return objc_opt_self(_TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F15TriggerTypeCell);
}

id sub_100095150()
{
  return sub_100094C38((uint64_t (*)(_QWORD))type metadata accessor for AlertLocationCell);
}

uint64_t type metadata accessor for AlertLocationCell()
{
  return objc_opt_self(_TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F17AlertLocationCell);
}

id sub_100095190(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  NSString v11;
  id v12;
  objc_super v14;

  if (a4)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(a4);
    v10 = v9;
    v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v10);
  }
  else
  {
    v11 = 0;
  }
  v14.receiver = a1;
  v14.super_class = (Class)a5(0);
  v12 = objc_msgSendSuper2(&v14, "initWithStyle:reuseIdentifier:", a6, v11);

  return v12;
}

id sub_10009527C()
{
  return sub_100094C38((uint64_t (*)(_QWORD))type metadata accessor for ScheduleTimeCell);
}

uint64_t type metadata accessor for ScheduleTimeCell()
{
  return objc_opt_self(_TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F16ScheduleTimeCell);
}

uint64_t sub_1000952AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, _QWORD, uint64_t);
  void *v15;
  id v16;
  __n128 v17;
  _QWORD v19[2];

  v19[1] = a1;
  v2 = type metadata accessor for Date(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100053F2C(&qword_1005D33B8);
  v7 = type metadata accessor for Calendar.Component(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 72);
  v10 = *(unsigned __int8 *)(v8 + 80);
  v11 = (v10 + 32) & ~v10;
  v12 = swift_allocObject(v6, v11 + 2 * v9, v10 | 7);
  *(_OWORD *)(v12 + 16) = xmmword_100481730;
  v13 = v12 + v11;
  v14 = *(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 104);
  v14(v13, enum case for Calendar.Component.minute(_:), v7);
  v14(v13 + v9, enum case for Calendar.Component.hour(_:), v7);
  v15 = sub_10013C998(v12);
  swift_setDeallocating(v12);
  swift_arrayDestroy(v13, 2, v7);
  swift_deallocClassInstance(v12, 32, 7);
  v16 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleTimePickerCell_timePicker), "date");
  static Date._unconditionallyBridgeFromObjectiveC(_:)(v16);

  Calendar.dateComponents(_:from:)(v15, v5);
  v17 = swift_bridgeObjectRelease(v15);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v17);
}

void sub_1000954A8()
{
  char *v0;
  double v1;
  double v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;

  if (qword_1005D1B70 != -1)
    swift_once(&qword_1005D1B70, sub_10007BF2C);
  v2 = *((double *)&xmmword_1005D2FE0 + 1);
  v1 = unk_1005D2FF0;
  v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleTimePickerCell_timePicker];
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = objc_msgSend(v0, "contentView");
  v5 = objc_msgSend(v0, "contentView");
  v6 = objc_msgSend(v5, "topAnchor");

  v7 = objc_msgSend(v3, "topAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:constant:", v7, v2);

  objc_msgSend(v4, "addConstraint:", v8);
  v9 = objc_msgSend(v0, "contentView");
  v10 = objc_msgSend(v0, "contentView");
  v11 = objc_msgSend(v10, "bottomAnchor");

  v12 = objc_msgSend(v3, "bottomAnchor");
  v13 = objc_msgSend(v11, "constraintEqualToAnchor:", v12);

  objc_msgSend(v9, "addConstraint:", v13);
  v14 = objc_msgSend(v0, "contentView");
  v15 = objc_msgSend(v0, "contentView");
  v16 = objc_msgSend(v15, "leadingAnchor");

  v17 = objc_msgSend(v3, "leadingAnchor");
  v18 = objc_msgSend(v16, "constraintEqualToAnchor:constant:", v17, v1);

  objc_msgSend(v14, "addConstraint:", v18);
  v19 = objc_msgSend(v0, "contentView");
  v20 = objc_msgSend(v0, "contentView");
  v21 = objc_msgSend(v20, "trailingAnchor");

  v22 = objc_msgSend(v3, "trailingAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

  objc_msgSend(v19, "addConstraint:", v23);
}

id sub_100095830()
{
  return sub_100094C38(type metadata accessor for ScheduleTimePickerCell);
}

uint64_t sub_10009589C()
{
  return type metadata accessor for ScheduleTimePickerCell(0);
}

uint64_t type metadata accessor for ScheduleTimePickerCell(uint64_t a1)
{
  return sub_10001DC04(a1, (uint64_t *)&unk_1005D32A8, (uint64_t)&nominal type descriptor for ScheduleTimePickerCell);
}

uint64_t sub_1000958B8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_100481BB0;
  v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
  result = type metadata accessor for Calendar(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

id sub_10009593C(uint64_t a1)
{
  return sub_10009598C(a1, (SEL *)&selRef_systemBlueColor, &qword_1005D3008);
}

id sub_100095950(uint64_t a1)
{
  return sub_10009598C(a1, (SEL *)&selRef_secondarySystemFillColor, &qword_1005D3010);
}

id sub_100095964(uint64_t a1)
{
  return sub_10009598C(a1, (SEL *)&selRef_tertiaryLabelColor, &qword_1005D3018);
}

id sub_100095978(uint64_t a1)
{
  return sub_10009598C(a1, (SEL *)&selRef_secondarySystemFillColor, &qword_1005D3020);
}

id sub_10009598C(uint64_t a1, SEL *a2, _QWORD *a3)
{
  id result;

  result = objc_msgSend((id)objc_opt_self(UIColor), *a2);
  *a3 = result;
  return result;
}

void sub_1000959CC()
{
  qword_1005D3028 = 0x403E000000000000;
}

uint64_t sub_1000959DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t);
  uint64_t result;
  uint64_t v16;
  _QWORD v18[3];
  uint64_t v19;
  _BYTE v20[24];

  v1 = v0;
  v2 = type metadata accessor for FMFSchedule.DaysOfWeek(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = __chkstk_darwin(v2);
  v6 = (char *)&v18[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v18[-1] - v7;
  v9 = v0 + OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleDaysOfWeekCell_daysOfWeek;
  swift_beginAccess(v0 + OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleDaysOfWeekCell_daysOfWeek, v20, 0, 0);
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v10(v8, v9, v2);
  v11 = sub_100008000(&qword_1005D3398, (uint64_t (*)(uint64_t))&type metadata accessor for FMFSchedule.DaysOfWeek, (uint64_t)&protocol conformance descriptor for FMFSchedule.DaysOfWeek);
  dispatch thunk of RawRepresentable.rawValue.getter(v18, v2, v11);
  dispatch thunk of RawRepresentable.rawValue.getter(&v19, v2, v11);
  v12 = v18[0];
  v13 = v19;
  v14 = *(uint64_t (**)(char *, uint64_t))(v3 + 8);
  result = v14(v8, v2);
  if (v12 != v13)
  {
    sub_100095BA0();
    result = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleDaysOfWeekCell_delegate);
    if (result)
    {
      v16 = result;
      v10(v8, v9, v2);
      v10(v6, (uint64_t)v8, v2);
      swift_beginAccess(v16 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_schedule, v18, 33, 0);
      FMFSchedule.daysOfWeek.setter(v6);
      swift_endAccess(v18);
      sub_100089898();
      swift_unknownObjectRelease(v16);
      return v14(v8, v2);
    }
  }
  return result;
}

void sub_100095BA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  id v17;
  uint64_t *i;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  unint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  void (*v30)(char *, uint64_t);
  void *v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  char v44[24];
  char v45[24];

  v1 = type metadata accessor for Calendar(0);
  v42 = *(_QWORD *)(v1 - 8);
  v43 = v1;
  __chkstk_darwin(v1);
  v3 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FMFSchedule.DaysOfWeek(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v36 - v9;
  v11 = (uint64_t *)(v0 + OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleDaysOfWeekCell_dayButtons);
  swift_beginAccess(v0 + OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleDaysOfWeekCell_dayButtons, v45, 0, 0);
  v41 = v11;
  v12 = *v11;
  if (!((unint64_t)*v11 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_3;
  }
  while (1)
  {
    if (v12 < 0)
      v35 = v12;
    else
      v35 = v12 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v12);
    v13 = _CocoaArrayWrapper.endIndex.getter(v35);
    swift_bridgeObjectRelease(v12);
LABEL_3:
    v14 = OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleDaysOfWeekCell_isEditable;
    if (*(_BYTE *)(v0 + OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleDaysOfWeekCell_isEditable) == 1)
    {
      if (qword_1005D1B78 != -1)
        swift_once(&qword_1005D1B78, sub_10009593C);
      v15 = &qword_1005D3008;
    }
    else
    {
      if (qword_1005D1B88 != -1)
        swift_once(&qword_1005D1B88, sub_100095964);
      v15 = &qword_1005D3018;
    }
    v12 = *v15;
    if (*(_BYTE *)(v0 + v14) != 1)
      goto LABEL_15;
    v16 = qword_1005D1B80;
    v17 = (id)v12;
    if (v16 != -1)
      swift_once(&qword_1005D1B80, sub_100095950);
    for (i = &qword_1005D3010; v13 < 0; i = &qword_1005D3020)
    {
      __break(1u);
LABEL_15:
      v19 = qword_1005D1B90;
      v20 = (id)v12;
      if (v19 != -1)
        swift_once(&qword_1005D1B90, sub_100095978);
    }
    if (!v13)
      break;
    v21 = (void *)*i;
    v40 = (id)objc_opt_self(NSCalendar);
    v22 = v0 + OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleDaysOfWeekCell_daysOfWeek;
    v23 = v21;
    v39 = v22;
    swift_beginAccess(v22, v44, 0, 0);
    v24 = 0;
    v37 = (id)v12;
    v38 = v13;
    v36 = v23;
    while (1)
    {
      v25 = objc_msgSend(v40, "currentCalendar", v36);
      static Calendar._unconditionallyBridgeFromObjectiveC(_:)();

      v0 = (uint64_t)v3;
      v26 = Calendar.firstWeekday.getter();
      if (__OFADD__(v26, 6))
        break;
      v0 = (v26 + 6) % 7;
      v27 = (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v3, v43);
      if (__OFADD__(v24, v0))
        goto LABEL_43;
      switch((uint64_t)(v24 + v0) % 7)
      {
        case 0:
          static FMFSchedule.DaysOfWeek.sunday.getter(v27);
          break;
        case 1:
          static FMFSchedule.DaysOfWeek.monday.getter(v27);
          break;
        case 2:
          static FMFSchedule.DaysOfWeek.tuesday.getter(v27);
          break;
        case 3:
          static FMFSchedule.DaysOfWeek.wednesday.getter(v27);
          break;
        case 4:
          static FMFSchedule.DaysOfWeek.thursday.getter(v27);
          break;
        case 5:
          static FMFSchedule.DaysOfWeek.friday.getter(v27);
          break;
        case 6:
          static FMFSchedule.DaysOfWeek.saturday.getter(v27);
          break;
        default:
          static FMFSchedule.DaysOfWeek.none.getter(v27);
          break;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v39, v4);
      v28 = sub_100008000(&qword_1005D3390, (uint64_t (*)(uint64_t))&type metadata accessor for FMFSchedule.DaysOfWeek, (uint64_t)&protocol conformance descriptor for FMFSchedule.DaysOfWeek);
      v29 = dispatch thunk of SetAlgebra.isSuperset(of:)(v10, v4, v28);
      v30 = *(void (**)(char *, uint64_t))(v5 + 8);
      v30(v8, v4);
      if ((v29 & 1) != 0)
        v0 = v12;
      else
        v0 = (uint64_t)v23;
      v12 = *v41;
      if ((*v41 & 0xC000000000000001) != 0)
      {
        v34 = (id)v0;
        swift_bridgeObjectRetain(v12);
        v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v24, v12);
        swift_bridgeObjectRelease(v12);
      }
      else
      {
        if (v24 >= *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_44;
        v31 = *(void **)(v12 + 8 * v24 + 32);
        v32 = (id)v0;
        v33 = v31;
      }
      ++v24;
      objc_msgSend(v33, "setBackgroundColor:", v0);

      v30(v10, v4);
      v12 = (uint64_t)v37;
      v23 = v36;
      if (v38 == v24)
      {

        goto LABEL_41;
      }
    }
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
  }
  v23 = (id)v12;
LABEL_41:

}

void sub_100096054(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  char v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[24];
  char v51[24];
  char v52[24];

  v3 = sub_100053F2C(&qword_1005D3388);
  __chkstk_darwin(v3);
  v46 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Calendar(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FMFSchedule.DaysOfWeek(0);
  v48 = *(_QWORD *)(v9 - 8);
  v10 = __chkstk_darwin(v9);
  v44 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v43 - v13;
  v15 = __chkstk_darwin(v12);
  v16 = __chkstk_darwin(v15);
  v45 = (char *)&v43 - v17;
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v43 - v19;
  __chkstk_darwin(v18);
  v47 = (char *)&v43 - v22;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleDaysOfWeekCell_isEditable) != 1)
    return;
  v49 = v1;
  v43 = v21;
  v23 = (uint64_t *)(v1 + OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleDaysOfWeekCell_dayButtons);
  swift_beginAccess(v1 + OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleDaysOfWeekCell_dayButtons, v52, 0, 0);
  v24 = *v23;
  swift_bridgeObjectRetain(v24);
  sub_10010CBD4(a1, v24);
  v26 = v25;
  v28 = v27;
  swift_bridgeObjectRelease(v24);
  if ((v28 & 1) != 0)
    return;
  v29 = objc_msgSend((id)objc_opt_self(NSCalendar), "currentCalendar");
  static Calendar._unconditionallyBridgeFromObjectiveC(_:)();

  v30 = Calendar.firstWeekday.getter();
  if (__OFADD__(v30, 6))
  {
    __break(1u);
    goto LABEL_14;
  }
  v31 = (v30 + 6) % 7;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (__OFADD__(v26, v31))
  {
LABEL_14:
    __break(1u);
    return;
  }
  type metadata accessor for ScheduleDaysOfWeekCell(0);
  v32 = (uint64_t)v47;
  sub_10007EA54((v26 + v31) % 7);
  v33 = v49 + OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleDaysOfWeekCell_daysOfWeek;
  swift_beginAccess(v49 + OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleDaysOfWeekCell_daysOfWeek, v51, 0, 0);
  v34 = v48;
  v35 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 16);
  v35(v20, v33, v9);
  v36 = sub_100008000(&qword_1005D3390, (uint64_t (*)(uint64_t))&type metadata accessor for FMFSchedule.DaysOfWeek, (uint64_t)&protocol conformance descriptor for FMFSchedule.DaysOfWeek);
  v37 = dispatch thunk of SetAlgebra.isSuperset(of:)(v32, v9, v36);
  v38 = *(void (**)(char *, uint64_t))(v34 + 8);
  v38(v20, v9);
  if ((v37 & 1) != 0)
  {
    v14 = v45;
    v35(v45, v33, v9);
    v35(v20, (uint64_t)v14, v9);
    v39 = v43;
    dispatch thunk of SetAlgebra.intersection(_:)(v32, v9, v36);
    if ((dispatch thunk of SetAlgebra.isEmpty.getter(v9, v36) & 1) != 0)
    {
      v38(v39, v9);
      v40 = 1;
      v41 = v48;
      v42 = (uint64_t)v46;
    }
    else
    {
      dispatch thunk of SetAlgebra.subtract(_:)(v32, v9, v36);
      v41 = v48;
      v42 = (uint64_t)v46;
      (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v46, v39, v9);
      v40 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56))(v42, v40, 1, v9);
    sub_1000051EC(v42, &qword_1005D3388);
    v35(v20, v33, v9);
    swift_beginAccess(v33, v50, 33, 0);
    (*(void (**)(uint64_t, char *, uint64_t))(v41 + 24))(v33, v14, v9);
  }
  else
  {
    v35(v14, v33, v9);
    sub_10009651C(v20, v32);
    v38(v20, v9);
    v20 = v44;
    v35(v44, v33, v9);
    swift_beginAccess(v33, v50, 33, 0);
    (*(void (**)(uint64_t, char *, uint64_t))(v34 + 24))(v33, v14, v9);
  }
  swift_endAccess(v50);
  sub_1000959DC();
  v38(v14, v9);
  v38(v20, v9);
  v38((char *)v32, v9);
}

uint64_t sub_10009651C(char *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;

  v30 = a1;
  v4 = sub_100053F2C(&qword_1005D33A0);
  v5 = __chkstk_darwin(v4);
  v28 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v8 = (char *)&v25 - v7;
  v9 = type metadata accessor for FMFSchedule.DaysOfWeek(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v15 = (char *)&v25 - v14;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v27 = v2;
  v16(v13, v2, v9);
  v17 = sub_100008000(&qword_1005D3390, (uint64_t (*)(uint64_t))&type metadata accessor for FMFSchedule.DaysOfWeek, (uint64_t)&protocol conformance descriptor for FMFSchedule.DaysOfWeek);
  dispatch thunk of SetAlgebra.intersection(_:)(a2, v9, v17);
  v18 = sub_100008000(&qword_1005D33A8, (uint64_t (*)(uint64_t))&type metadata accessor for FMFSchedule.DaysOfWeek, (uint64_t)&protocol conformance descriptor for FMFSchedule.DaysOfWeek);
  v26 = a2;
  v19 = dispatch thunk of static Equatable.== infix(_:_:)(v15, a2, v9, v18) ^ 1;
  v29 = v4;
  v20 = &v8[*(int *)(v4 + 48)];
  *v8 = v19 & 1;
  if ((v19 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    v22 = v26;
    v16(v20, v26, v9);
    v16(v13, v22, v9);
    dispatch thunk of SetAlgebra.formUnion(_:)(v13, v9, v17);
    v21 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  }
  else
  {
    v21 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v21(v20, v15, v9);
  }
  v23 = &v28[*(int *)(v29 + 48)];
  v21(v23, v20, v9);
  v21(v30, v23, v9);
  return v19 & 1;
}

id sub_1000967A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  id v17;
  NSString v18;
  objc_class *v19;
  id v20;
  void *v21;
  char *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id result;
  unint64_t v29;
  void *v30;
  char *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  NSString v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  id v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  id v50;
  id v51;
  _BYTE v52[24];
  objc_super v53;

  v6 = sub_100053F2C(&qword_1005D33B0);
  __chkstk_darwin(v6);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Calendar(0);
  v48 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v49 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FMFSchedule.DaysOfWeek(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = &v3[OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleDaysOfWeekCell_delegate];
  *((_QWORD *)v15 + 1) = 0;
  swift_unknownObjectWeakInit(v15);
  v3[OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleDaysOfWeekCell_isEditable] = 1;
  v16 = v3;
  static FMFSchedule.DaysOfWeek.none.getter(v16);
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v16[OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleDaysOfWeekCell_daysOfWeek], v14, v11);
  *(_QWORD *)&v16[OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleDaysOfWeekCell_dayButtons] = _swiftEmptyArrayStorage;
  v17 = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  objc_msgSend(v17, "setAxis:", 0);
  objc_msgSend(v17, "setDistribution:", 4);
  objc_msgSend(v17, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  *(_QWORD *)&v16[OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleDaysOfWeekCell_buttonsContainerView] = v17;
  v51 = v17;

  if (a3)
  {
    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v18 = 0;
  }
  v19 = (objc_class *)type metadata accessor for ScheduleDaysOfWeekCell(0);
  v53.receiver = v16;
  v53.super_class = v19;
  v20 = objc_msgSendSuper2(&v53, "initWithStyle:reuseIdentifier:", a1, v18);

  v21 = (void *)objc_opt_self(NSCalendar);
  v22 = (char *)v20;
  v23 = objc_msgSend(v21, "currentCalendar");
  static Calendar._unconditionallyBridgeFromObjectiveC(_:)();

  static Locale.autoupdatingCurrent.getter(v24);
  v25 = type metadata accessor for Locale(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v8, 0, 1, v25);
  v26 = Calendar.locale.setter(v8);
  v27 = Calendar.veryShortStandaloneWeekdaySymbols.getter(v26);
  result = (id)Calendar.firstWeekday.getter();
  if (!__OFADD__(result, 6))
  {
    v47 = v9;
    v29 = ((uint64_t)result + 6) % 7;
    v50 = (id)objc_opt_self(UIColor);
    v30 = v22;
    v31 = &v22[OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleDaysOfWeekCell_dayButtons];
    v32 = 7;
    while (1)
    {
      result = objc_msgSend(objc_allocWithZone((Class)UIButton), "init");
      if ((v29 & 0x8000000000000000) != 0)
        break;
      if (v29 >= *(_QWORD *)(v27 + 16))
        goto LABEL_17;
      v33 = result;
      v34 = *(_QWORD *)(v27 + 32 + 16 * v29 + 8);
      swift_bridgeObjectRetain(v34);
      v35 = String._bridgeToObjectiveC()();
      objc_msgSend(v33, "setTitle:forStates:", v35, 0, swift_bridgeObjectRelease(v34).n128_f64[0]);

      objc_msgSend(v33, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
      v36 = qword_1005D1B80;
      v37 = v33;
      if (v36 != -1)
        swift_once(&qword_1005D1B80, sub_100095950);
      objc_msgSend(v37, "setBackgroundColor:", qword_1005D3010);

      v38 = objc_msgSend(v50, "whiteColor");
      objc_msgSend(v37, "setTitleColor:forState:", v38, 0);

      v39 = objc_msgSend(v37, "layer");
      if (qword_1005D1B98 != -1)
        swift_once(&qword_1005D1B98, sub_1000959CC);
      objc_msgSend(v39, "setCornerRadius:", *(double *)&qword_1005D3028 * 0.5);

      objc_msgSend(v37, "setClipsToBounds:", 1);
      objc_msgSend(v37, "addTarget:action:forControlEvents:", v30, "dayButtonPressed:", 64);
      swift_beginAccess(v31, v52, 33, 0);
      v40 = v37;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v40);
      v42 = *(_QWORD *)((*(_QWORD *)v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v41 = *(_QWORD *)((*(_QWORD *)v31 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v42 >= v41 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v41 > 1, v42 + 1, 1);
      v43 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v42, v40);
      specialized Array._endMutation()(v43);
      swift_endAccess(v52);
      objc_msgSend(v51, "addArrangedSubview:", v40);

      v44 = ((v29 + 1) * (unsigned __int128)0x2492492492492493uLL) >> 64;
      v29 = v29 + 1 - 7 * ((v44 + ((v29 + 1 - v44) >> 1)) >> 2);
      if (!--v32)
      {
        v45 = objc_msgSend(v30, "contentView", swift_bridgeObjectRelease(v27).n128_f64[0]);
        v46 = v51;
        objc_msgSend(v45, "addSubview:", v51);

        objc_msgSend(v30, "setSelectionStyle:", 0);
        sub_100096DC8();

        (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v47);
        return v30;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_100096DC8()
{
  char *v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  char v29[24];

  v1 = OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleDaysOfWeekCell_buttonsContainerView;
  v2 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleDaysOfWeekCell_buttonsContainerView], "topAnchor");
  v3 = objc_msgSend(v0, "contentView");
  v4 = objc_msgSend(v3, "topAnchor");

  v5 = objc_msgSend(v2, "constraintEqualToAnchor:constant:", v4, 10.0);
  objc_msgSend(v5, "setActive:", 1);

  v6 = objc_msgSend(*(id *)&v0[v1], "bottomAnchor");
  v7 = objc_msgSend(v0, "contentView");
  v8 = objc_msgSend(v7, "bottomAnchor");

  v9 = objc_msgSend(v6, "constraintEqualToAnchor:constant:", v8, -10.0);
  objc_msgSend(v9, "setActive:", 1);

  v10 = objc_msgSend(*(id *)&v0[v1], "leadingAnchor");
  v11 = objc_msgSend(v0, "contentView");
  v12 = objc_msgSend(v11, "leadingAnchor");

  v13 = objc_msgSend(v10, "constraintEqualToAnchor:constant:", v12, 10.0);
  objc_msgSend(v13, "setActive:", 1);

  v14 = objc_msgSend(*(id *)&v0[v1], "trailingAnchor");
  v15 = objc_msgSend(v0, "contentView");
  v16 = objc_msgSend(v15, "trailingAnchor");

  v17 = objc_msgSend(v14, "constraintEqualToAnchor:constant:", v16, -10.0);
  objc_msgSend(v17, "setActive:", 1);

  v18 = &v0[OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleDaysOfWeekCell_dayButtons];
  swift_beginAccess(&v0[OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleDaysOfWeekCell_dayButtons], v29, 0, 0);
  v19 = 0;
  while (1)
  {
    v20 = *(_QWORD *)v18;
    if ((*(_QWORD *)v18 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain(*(_QWORD *)v18);
      v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v19, v20);
      swift_bridgeObjectRelease(v20);
      goto LABEL_5;
    }
    if (v19 >= *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
      break;
    v21 = *(id *)(v20 + 8 * v19 + 32);
LABEL_5:
    v22 = objc_msgSend(v21, "heightAnchor");
    if (qword_1005D1B98 != -1)
      swift_once(&qword_1005D1B98, sub_1000959CC);
    ++v19;
    v23 = objc_msgSend(v22, "constraintEqualToConstant:", *(double *)&qword_1005D3028);

    objc_msgSend(v23, "setActive:", 1);
    v24 = objc_msgSend(v21, "widthAnchor");
    v25 = objc_msgSend(v24, "constraintEqualToConstant:", *(double *)&qword_1005D3028);

    objc_msgSend(v25, "setActive:", 1);
    v26 = objc_msgSend(v21, "centerYAnchor");
    v27 = objc_msgSend(*(id *)&v0[v1], "centerYAnchor");
    v28 = objc_msgSend(v26, "constraintEqualToAnchor:", v27);

    objc_msgSend(v28, "setActive:", 1);
    if (v19 == 7)
      return;
  }
  __break(1u);
}

id sub_1000972AC()
{
  return sub_100094C38(type metadata accessor for ScheduleDaysOfWeekCell);
}

uint64_t sub_100097328()
{
  return type metadata accessor for ScheduleDaysOfWeekCell(0);
}

uint64_t type metadata accessor for ScheduleDaysOfWeekCell(uint64_t a1)
{
  return sub_10001DC04(a1, (uint64_t *)&unk_1005D3308, (uint64_t)&nominal type descriptor for ScheduleDaysOfWeekCell);
}

uint64_t sub_100097344(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[5];

  v4[0] = &unk_100481BB0;
  v4[1] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[3] = &unk_100481BC8;
  result = type metadata accessor for FMFSchedule.DaysOfWeek(319);
  if (v3 <= 0x3F)
  {
    v4[4] = *(_QWORD *)(result - 8) + 64;
    result = swift_updateClassMetadata2(a1, 256, 5, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

void sub_1000973E0()
{
  _BYTE *v0;
  _BYTE *v1;
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_delegate];
  *((_QWORD *)v2 + 1) = 0;
  swift_unknownObjectWeakInit(v2);
  v3 = &v0[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_locationAlert];
  v4 = type metadata accessor for FMFLocationAlert(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_tableView;
  *(_QWORD *)&v1[v5] = objc_msgSend(objc_allocWithZone((Class)UITableView), "initWithFrame:style:", 1, 0.0, 0.0, 0.0, 0.0);
  v6 = OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_mapSnapshotter;
  v7 = type metadata accessor for FMMapSnapshotter();
  swift_allocObject(v7, 32, 7);
  *(_QWORD *)&v1[v6] = sub_1000EFEC0();
  v1[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_repeatingCellsExpanded] = 1;
  v1[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_triggerCellsExpanded] = 1;
  v1[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_locationCellsExpanded] = 1;
  v1[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_startTimeCellsExpanded] = 0;
  v1[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_endTimeCellsExpanded] = 0;
  v8 = &v1[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_myCurrentLocation];
  v9 = type metadata accessor for FMFLocation(0);
  v10 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
  v10(v8, 1, 1, v9);
  v10(&v1[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_myCurrentUnshiftedLocation], 1, 1, v9);
  v10(&v1[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_customLocation], 1, 1, v9);
  v11 = OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_locationShifter;
  v12 = type metadata accessor for FMLocationShifter(0);
  swift_allocObject(v12, *(unsigned int *)(v12 + 48), *(unsigned __int16 *)(v12 + 52));
  *(_QWORD *)&v1[v11] = FMLocationShifter.init()();
  v10(&v1[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController__selectedLocation], 1, 1, v9);
  v13 = &v1[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_selectedLocationTimeZone];
  v14 = type metadata accessor for TimeZone(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = &v1[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_selectedRadius];
  *(_QWORD *)v15 = 0;
  v15[8] = 1;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_imageCache] = &_swiftEmptyDictionarySingleton;
  v1[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_repeating] = 0;
  v16 = &v1[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_triggerType];
  v17 = enum case for FMFLocationAlertTriggerType.leaving(_:);
  v18 = type metadata accessor for FMFLocationAlertTriggerType(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(v16, v17, v18);
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_doneButton] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_removeButton] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_doneButtonItem] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_removeCell] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMLocationAlertViewController.swift", 42, 2, 282, 0);
  __break(1u);
}

uint64_t sub_1000976B0(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t result;
  id v65;
  id v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  double v75;
  double v76;
  double v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int (*v80)(char *, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(uint64_t, uint64_t, uint64_t);
  int v86;
  BOOL v87;
  double v88;
  uint64_t v89;
  double v90;
  char *v91;
  uint64_t v92;
  void *v93;
  double v94;
  double v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unsigned int v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  void (*v113)(char *, uint64_t);
  char *v114;
  char *v115;
  uint64_t v116;
  id v117;
  void *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  char *v127;
  id v128;
  id v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  void (*v134)(char *, uint64_t);
  char *v135;
  uint64_t v136;
  uint64_t v137;
  id v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  id v142;
  void *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  char *v151;
  char *v152;
  char *v153;
  char *v154;
  char *v155;
  char *v156;
  char *v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  char *v170;
  char *v171;
  void (*v172)(char *, char *, uint64_t);
  char *v173;
  char *v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  id v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char v185[8];
  char v186[8];
  char v187[8];
  char v188[8];
  char v189[8];
  char v190[8];

  v2 = sub_100053F2C(&qword_1005D3318);
  v3 = __chkstk_darwin(v2);
  v165 = (char *)&v150 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v172 = (void (*)(char *, char *, uint64_t))((char *)&v150 - v5);
  v6 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  __chkstk_darwin(v6);
  v157 = (char *)&v150 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100053F2C((uint64_t *)&unk_1005DF470);
  __chkstk_darwin(v8);
  v156 = (char *)&v150 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100053F2C((uint64_t *)&unk_1005D3330);
  __chkstk_darwin(v10);
  v155 = (char *)&v150 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100053F2C((uint64_t *)&unk_1005DF480);
  __chkstk_darwin(v12);
  v154 = (char *)&v150 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = sub_100053F2C((uint64_t *)&unk_1005D3340);
  __chkstk_darwin(v161);
  v162 = (uint64_t)&v150 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = type metadata accessor for FMFLocationAlert(0);
  v183 = *(_QWORD *)(v179 - 8);
  v15 = __chkstk_darwin(v179);
  v160 = (char *)&v150 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v15);
  v153 = (char *)&v150 - v18;
  __chkstk_darwin(v17);
  v176 = (char *)&v150 - v19;
  v20 = sub_100053F2C((uint64_t *)&unk_1005E5940);
  v21 = __chkstk_darwin(v20);
  v152 = (char *)&v150 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v21);
  v167 = (uint64_t)&v150 - v24;
  v25 = __chkstk_darwin(v23);
  v164 = (uint64_t)&v150 - v26;
  __chkstk_darwin(v25);
  v177 = (uint64_t)&v150 - v27;
  v182 = type metadata accessor for FMFLocation(0);
  v180 = *(_QWORD *)(v182 - 8);
  v28 = __chkstk_darwin(v182);
  v151 = (char *)&v150 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v163 = (char *)&v150 - v30;
  v31 = sub_100053F2C((uint64_t *)&unk_1005D3350);
  v32 = __chkstk_darwin(v31);
  v171 = (char *)&v150 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __chkstk_darwin(v32);
  v170 = (char *)&v150 - v35;
  v36 = __chkstk_darwin(v34);
  v158 = (uint64_t)&v150 - v37;
  v38 = __chkstk_darwin(v36);
  v166 = (uint64_t)&v150 - v39;
  __chkstk_darwin(v38);
  v41 = (char *)&v150 - v40;
  v42 = sub_100053F2C((uint64_t *)&unk_1005DC3F0);
  __chkstk_darwin(v42);
  v44 = (char *)&v150 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_100053F2C((uint64_t *)&unk_1005D3360);
  __chkstk_darwin(v45);
  v47 = (char *)&v150 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_100053F2C(&qword_1005DC400);
  v49 = __chkstk_darwin(v48);
  v169 = (uint64_t)&v150 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v49);
  v184 = (uint64_t)&v150 - v51;
  v52 = sub_100053F2C(&qword_1005D3370);
  v53 = __chkstk_darwin(v52);
  v168 = (char *)&v150 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __chkstk_darwin(v53);
  v159 = (char *)&v150 - v56;
  __chkstk_darwin(v55);
  v58 = (char *)&v150 - v57;
  v59 = type metadata accessor for FMFAddress(0);
  v60 = *(_QWORD *)(v59 - 8);
  __chkstk_darwin(v59);
  v62 = (char *)&v150 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = (uint64_t)&a1[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_fmfPlacemark];
  swift_beginAccess(&a1[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_fmfPlacemark], v190, 0, 0);
  sub_100007464(v63, (uint64_t)v58, &qword_1005D3370);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59) == 1)
    return sub_1000051EC((uint64_t)v58, &qword_1005D3370);
  (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v62, v58, v59);
  v65 = objc_msgSend(a1, "title");
  v173 = a1;
  v175 = v59;
  if (v65)
  {

    v66 = objc_msgSend(a1, "title");
    if (v66)
    {
      v67 = v66;
      v68 = static String._unconditionallyBridgeFromObjectiveC(_:)(v66);
      v70 = v69;

    }
    else
    {
      v68 = 0;
      v70 = 0;
    }
    v73 = type metadata accessor for FMFLabelSaveType(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v47, 1, 1, v73);
    v74 = type metadata accessor for FMFLabelSourceType(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v44, 1, 1, v74);
    FMFLabel.init(value:labelSaveType:labelSourceType:)(v68, v70, v47, v44);
    v72 = v181;
    a1 = v173;
  }
  else
  {
    v71 = type metadata accessor for FMFLabel(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v184, 1, 1, v71);
    v72 = v181;
  }
  v174 = v62;
  objc_msgSend(a1, "coordinate");
  v76 = v75;
  objc_msgSend(a1, "coordinate");
  v178 = objc_msgSend(objc_allocWithZone((Class)CLLocation), "initWithLatitude:longitude:", v76, v77);
  v78 = v72 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController__selectedLocation;
  swift_beginAccess(v72 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController__selectedLocation, v189, 0, 0);
  sub_100007464(v78, (uint64_t)v41, (uint64_t *)&unk_1005D3350);
  v79 = v180;
  v80 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v180 + 48);
  v81 = v182;
  if (v80(v41, 1, v182))
  {
    sub_1000051EC((uint64_t)v41, (uint64_t *)&unk_1005D3350);
    v82 = v179;
  }
  else
  {
    v91 = v163;
    (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v163, v41, v81);
    v92 = sub_1000051EC((uint64_t)v41, (uint64_t *)&unk_1005D3350);
    v93 = (void *)FMFLocation.location.getter(v92);
    (*(void (**)(char *, uint64_t))(v79 + 8))(v91, v81);
    v82 = v179;
    if (v93)
    {
      objc_msgSend(v93, "distanceFromLocation:", v178);
      v95 = v94;

      if (v95 > 1.0)
        goto LABEL_17;
    }
  }
  v83 = v72 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_locationAlert;
  swift_beginAccess(v72 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_locationAlert, v188, 0, 0);
  v84 = v177;
  sub_100007464(v83, v177, (uint64_t *)&unk_1005E5940);
  v85 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v183 + 48);
  v86 = v85(v84, 1, v82);
  sub_1000051EC(v84, (uint64_t *)&unk_1005E5940);
  v87 = v86 == 1;
  v72 = v181;
  if (v87)
    goto LABEL_17;
  v88 = *(double *)&v173[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius];
  v89 = v164;
  sub_100007464(v83, v164, (uint64_t *)&unk_1005E5940);
  result = v85(v89, 1, v82);
  if ((_DWORD)result != 1)
  {
    v90 = FMFLocationAlert.radius.getter();
    (*(void (**)(uint64_t, uint64_t))(v183 + 8))(v89, v82);
    if (v88 == v90)
    {
LABEL_38:

      sub_1000051EC(v184, &qword_1005DC400);
      return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v174, v175);
    }
LABEL_17:
    v96 = v72 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_locationAlert;
    swift_beginAccess(v72 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_locationAlert, v187, 0, 0);
    v97 = v167;
    sub_100007464(v96, v167, (uint64_t *)&unk_1005E5940);
    v98 = v183;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v183 + 48))(v97, 1, v82) == 1)
    {
      sub_1000051EC(v97, (uint64_t *)&unk_1005E5940);
      v99 = v173;
      v100 = (uint64_t)v172;
      v101 = (uint64_t)v171;
      v102 = v174;
      goto LABEL_31;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v98 + 32))(v176, v97, v82);
    v103 = v166;
    sub_100007464(v78, v166, (uint64_t *)&unk_1005D3350);
    v104 = v72 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_customLocation;
    swift_beginAccess(v72 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_customLocation, v185, 0, 0);
    v105 = v162;
    v106 = v162 + *(int *)(v161 + 48);
    sub_100007464(v103, v162, (uint64_t *)&unk_1005D3350);
    sub_100007464(v104, v106, (uint64_t *)&unk_1005D3350);
    v107 = v182;
    if (v80((char *)v105, 1, v182) == 1)
    {
      sub_1000051EC(v103, (uint64_t *)&unk_1005D3350);
      v108 = v80((char *)v106, 1, v107);
      v100 = (uint64_t)v172;
      v101 = (uint64_t)v171;
      v102 = v174;
      v99 = v173;
      if (v108 == 1)
      {
        sub_1000051EC(v105, (uint64_t *)&unk_1005D3350);
LABEL_26:
        v172 = *(void (**)(char *, char *, uint64_t))(v183 + 16);
        v172(v160, v176, v179);
        v171 = *(char **)&v99[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius];
        v114 = v159;
        v115 = v102;
        v116 = v175;
        (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v159, v115, v175);
        v177 = v60;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v114, 0, 1, v116);
        v117 = objc_msgSend(v99, "title");
        if (v117)
        {
          v118 = v117;
          v167 = static String._unconditionallyBridgeFromObjectiveC(_:)(v117);
          v166 = v119;

        }
        else
        {
          v167 = 0;
          v166 = 0;
        }
        v72 = v181;
        v120 = type metadata accessor for FMFLocationAlertTriggerType(0);
        v121 = v154;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v120 - 8) + 56))(v154, 1, 1, v120);
        v122 = type metadata accessor for FMFSchedule(0);
        v123 = v155;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v122 - 8) + 56))(v155, 1, 1, v122);
        v124 = type metadata accessor for FMFLocationAlertAcceptanceStatus(0);
        v125 = v156;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v124 - 8) + 56))(v156, 1, 1, v124);
        v126 = type metadata accessor for Date(0);
        v127 = v157;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v126 - 8) + 56))(v157, 1, 1, v126);
        v128 = v178;
        v129 = v178;
        v149 = v125;
        v130 = v153;
        FMFLocationAlert.init(locationAlert:location:radius:address:label:triggerType:isOn:repeating:schedule:phoneNumbers:emails:ckRecordName:ckRecordZoneOwnerName:acceptanceStatus:muteEndDate:)(v160, v128, v171, 0, v159, v167, v166, v121, 514, v123, 0, 0, 0, 0, 0, 0, v149, v127);
        v131 = (uint64_t)v152;
        v132 = v179;
        v172(v152, v130, v179);
        v133 = v183;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v183 + 56))(v131, 0, 1, v132);
        swift_beginAccess(v96, v186, 33, 0);
        sub_100099CDC(v131, v96, (uint64_t *)&unk_1005E5940);
        swift_endAccess(v186);
        v134 = *(void (**)(char *, uint64_t))(v133 + 8);
        v134(v130, v132);
        v134(v176, v132);
        v60 = v177;
        v102 = v174;
LABEL_31:
        v135 = v168;
        v136 = v175;
        (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v168, v102, v175);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v135, 0, 1, v136);
        v137 = v169;
        sub_100007464(v184, v169, &qword_1005DC400);
        v138 = v178;
        v139 = (uint64_t)v170;
        FMFLocation.init(from:address:label:labels:)(v138, v135, v137, 0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v180 + 56))(v139, 0, 1, v182);
        v140 = v72 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_customLocation;
        swift_beginAccess(v72 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_customLocation, v186, 33, 0);
        sub_100099CDC(v139, v140, (uint64_t *)&unk_1005D3350);
        swift_endAccess(v186);
        sub_100007464(v140, v101, (uint64_t *)&unk_1005D3350);
        v141 = *(void **)&v99[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_clPlacemark];
        if (v141)
        {
          v142 = objc_msgSend(v141, "timeZone");
          if (v142)
          {
            v143 = v142;
            v144 = (uint64_t)v165;
            static TimeZone._unconditionallyBridgeFromObjectiveC(_:)();

            v145 = type metadata accessor for TimeZone(0);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v145 - 8) + 56))(v144, 0, 1, v145);
          }
          else
          {
            v147 = type metadata accessor for TimeZone(0);
            v144 = (uint64_t)v165;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v147 - 8) + 56))(v165, 1, 1, v147);
          }
          sub_10005DAA0(v144, v100, &qword_1005D3318);
        }
        else
        {
          v146 = type metadata accessor for TimeZone(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v146 - 8) + 56))(v100, 1, 1, v146);
        }
        sub_10007BF58(v101, v100);
        sub_1000051EC(v100, &qword_1005D3318);
        sub_1000051EC(v101, (uint64_t *)&unk_1005D3350);
        v148 = v72 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_selectedRadius;
        *(_QWORD *)v148 = *(_QWORD *)&v99[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius];
        *(_BYTE *)(v148 + 8) = 0;
        sub_100089898();
        objc_msgSend(*(id *)(v72 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_tableView), "reloadData");
        goto LABEL_38;
      }
    }
    else
    {
      v109 = v158;
      sub_100007464(v105, v158, (uint64_t *)&unk_1005D3350);
      if (v80((char *)v106, 1, v107) != 1)
      {
        v110 = v180;
        v111 = v151;
        (*(void (**)(char *, uint64_t, uint64_t))(v180 + 32))(v151, v106, v107);
        v112 = sub_100008000(&qword_1005D3378, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocation, (uint64_t)&protocol conformance descriptor for FMFLocation);
        LODWORD(v177) = dispatch thunk of static Equatable.== infix(_:_:)(v109, v111, v107, v112);
        v113 = *(void (**)(char *, uint64_t))(v110 + 8);
        v113(v111, v107);
        sub_1000051EC(v166, (uint64_t *)&unk_1005D3350);
        v113((char *)v109, v107);
        sub_1000051EC(v105, (uint64_t *)&unk_1005D3350);
        v100 = (uint64_t)v172;
        v101 = (uint64_t)v171;
        v102 = v174;
        v99 = v173;
        if ((v177 & 1) != 0)
          goto LABEL_26;
LABEL_28:
        (*(void (**)(char *, uint64_t))(v183 + 8))(v176, v179);
        goto LABEL_31;
      }
      sub_1000051EC(v166, (uint64_t *)&unk_1005D3350);
      (*(void (**)(uint64_t, uint64_t))(v180 + 8))(v109, v107);
      v100 = (uint64_t)v172;
      v101 = (uint64_t)v171;
      v102 = v174;
      v99 = v173;
    }
    sub_1000051EC(v105, (uint64_t *)&unk_1005D3340);
    goto LABEL_28;
  }
  __break(1u);
  return result;
}

uint64_t sub_100098898(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C((uint64_t *)&unk_1005E5940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000988E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;

  v1 = type metadata accessor for FMFLocationAlert(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(sub_100053F2C(&qword_1005D3380) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v5 + v7 + 8) & ~v7;
  v9 = *(_QWORD *)(v6 + 64);
  v10 = swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v10);

  v11 = type metadata accessor for FMFFriend(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v0 + v8, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v0 + v8, v11);
  v13 = (v9 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v14 = v13 + 8;
  swift_release(*(_QWORD *)(v0 + v13));
  return swift_deallocObject(v0, v14, v3 | v7 | 7);
}

uint64_t sub_1000989F0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = *(_QWORD *)(type metadata accessor for FMFLocationAlert(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(sub_100053F2C(&qword_1005D3380) - 8);
  v7 = (v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return sub_10007EA94(a1, *(_QWORD *)(v1 + 16), v1 + v4, *(_QWORD *)(v1 + v5), v1 + v7, *(_QWORD *)(v1 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_100098A84()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_100098AB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;

  v2 = sub_100053F2C((uint64_t *)&unk_1005D3350);
  v3 = __chkstk_darwin(v2);
  v4 = __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  v5 = type metadata accessor for FMFLocationAlertTarget(0);
  __chkstk_darwin(v5);
  v6 = (char *)sub_100098BA0 + 4 * byte_100481B3A[sub_10008D574(a1)];
  __asm { BR              X10 }
}

uint64_t sub_100098BA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_triggerCellsExpanded) != 1)
    return 1;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v2, enum case for FMFLocationAlertTarget.alertMe(_:), v1);
  v5 = sub_100008000((unint64_t *)&unk_1005E5A00, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocationAlertTarget, (uint64_t)&protocol conformance descriptor for FMFLocationAlertTarget);
  dispatch thunk of RawRepresentable.rawValue.getter((_QWORD *)(v4 - 88), v1, v5);
  dispatch thunk of RawRepresentable.rawValue.getter((_QWORD *)(v4 - 112), v1, v5);
  v6 = *(_QWORD *)(v4 - 88);
  v7 = *(_QWORD *)(v4 - 80);
  v8 = *(_QWORD *)(v4 - 112);
  v9 = *(_QWORD *)(v4 - 104);
  if (v6 == v8 && v7 == v9)
  {
    swift_bridgeObjectRelease_n(*(_QWORD *)(v4 - 80), 2);
    v10 = 3;
  }
  else
  {
    v11 = _stringCompareWithSmolCheck(_:_:expecting:)(v6, *(_QWORD *)(v4 - 80), v8, *(_QWORD *)(v4 - 104), 0);
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v9);
    if ((v11 & 1) != 0)
      v10 = 3;
    else
      v10 = 2;
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v1);
  return v10;
}

void sub_100098E28(uint64_t a1)
{
  char *v1;

  v1 = (char *)&loc_100098E50 + dword_1000990CC[sub_10008D574(a1)];
  __asm { BR              X10 }
}

uint64_t sub_100098E64()
{
  id v0;
  Swift::String v1;
  Swift::String v2;
  uint64_t countAndFlagsBits;
  Swift::String v5;

  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v0 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v1._countAndFlagsBits = 0xD000000000000020;
  v5._countAndFlagsBits = 0xD000000000000032;
  v5._object = (void *)0x80000001004A6C90;
  v1._object = (void *)0x80000001004A6C60;
  v2._countAndFlagsBits = 0;
  v2._object = (void *)0xE000000000000000;
  countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, (Swift::String_optional)0, (NSBundle)v0, v2, v5)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_1000990E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[24];
  _BYTE v27[24];

  v1 = type metadata accessor for FMFLocationAlertTriggerType(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v22 - v6;
  v8 = sub_100053F2C((uint64_t *)&unk_1005E5940);
  __chkstk_darwin(v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_locationAlert;
  swift_beginAccess(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_locationAlert, v27, 0, 0);
  sub_100007464(v11, (uint64_t)v10, (uint64_t *)&unk_1005E5940);
  v12 = type metadata accessor for FMFLocationAlert(0);
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v10, 1, v12);
  sub_1000051EC((uint64_t)v10, (uint64_t *)&unk_1005E5940);
  v14 = v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_triggerType;
  swift_beginAccess(v14, v26, 0, 0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v7, v14, v1);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, enum case for FMFLocationAlertTriggerType.scheduled(_:), v1);
  v15 = sub_100008000(&qword_1005D33D8, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocationAlertTriggerType, (uint64_t)&protocol conformance descriptor for FMFLocationAlertTriggerType);
  dispatch thunk of RawRepresentable.rawValue.getter(&v24, v1, v15);
  dispatch thunk of RawRepresentable.rawValue.getter(&v22, v1, v15);
  v16 = v25;
  v17 = v23;
  if (v24 == v22 && v25 == v23)
  {
    swift_bridgeObjectRelease_n(v25, 2);
    v18 = 4;
  }
  else
  {
    v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v25, v22, v23, 0);
    swift_bridgeObjectRelease(v16);
    swift_bridgeObjectRelease(v17);
    if ((v19 & 1) != 0)
      v18 = 4;
    else
      v18 = 3;
  }
  v20 = *(void (**)(char *, uint64_t))(v2 + 8);
  v20(v5, v1);
  v20(v7, v1);
  if (v13 == 1)
    return v18;
  else
    return v18 + 1;
}

uint64_t sub_100099330(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  id v17;
  Class isa;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  __chkstk_darwin(v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Date(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Calendar.Identifier(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for Calendar(0);
  v13 = *(_QWORD *)(v22 - 8);
  __chkstk_darwin(v22);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for Calendar.Identifier.gregorian(_:), v9);
  Calendar.init(identifier:)(v12);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  Calendar.date(from:)(a1);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    v17 = objc_msgSend(objc_allocWithZone((Class)NSDateFormatter), "init");
    objc_msgSend(v17, "setDateStyle:", 0);
    objc_msgSend(v17, "setTimeStyle:", 1);
    isa = Date._bridgeToObjectiveC()().super.isa;
    v19 = objc_msgSend(v17, "stringFromDate:", isa);

    v20 = static String._unconditionallyBridgeFromObjectiveC(_:)(v19);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v22);
    return v20;
  }
  return result;
}

void sub_100099580(uint64_t a1)
{
  uint64_t v1;
  char *v2;

  v1 = IndexPath.section.getter(a1);
  v2 = (char *)&loc_1000995C0 + dword_10009988C[sub_10008D574(v1)];
  __asm { BR              X10 }
}

uint64_t sub_1000995D0()
{
  return sub_10008DEE0();
}

id sub_1000995F0()
{
  void *v0;

  return sub_10008F1D4(v0);
}

uint64_t sub_100099610()
{
  return sub_100092098();
}

uint64_t sub_100099630()
{
  uint64_t v0;

  return sub_100093004(v0);
}

id sub_100099650()
{
  return sub_100093370();
}

id sub_100099670()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  Swift::String v5;
  Swift::String v6;
  void *object;
  NSString v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  Swift::String v19;

  v1 = sub_10009360C();
  v2 = objc_msgSend(v1, "textLabel");
  if (v2)
  {
    v3 = v2;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(0xE000000000000000);
    v4 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v19._countAndFlagsBits = 0xD00000000000002DLL;
    v19._object = (void *)0x80000001004A6550;
    v5._object = (void *)0x80000001004A6530;
    v5._countAndFlagsBits = 0xD00000000000001BLL;
    v6._countAndFlagsBits = 0;
    v6._object = (void *)0xE000000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v19)._object;

    v8 = String._bridgeToObjectiveC()();
    objc_msgSend(v3, "setText:", v8, swift_bridgeObjectRelease(object).n128_f64[0]);

  }
  v9 = objc_msgSend(v1, "textLabel");
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, "setTextAlignment:", 1);

  }
  v11 = objc_msgSend(v1, "textLabel");
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend((id)objc_opt_self(UIColor), "systemRedColor");
    objc_msgSend(v12, "setTextColor:", v13);

  }
  v14 = objc_msgSend(v1, "textLabel");
  if (v14)
  {
    v15 = v14;
    objc_msgSend(v14, "setEnabled:", 1);

  }
  objc_msgSend(v1, "setIndentationLevel:", 0);
  objc_msgSend(v1, "setAccessoryType:", 0);
  v16 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_removeCell);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_removeCell) = v1;
  v17 = v1;

  return v17;
}

char *sub_1000998A4(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  id v10;
  char *v11;
  NSString v12;
  objc_class *v13;
  char *v14;
  void *v15;
  char *v16;
  double v17;
  id v18;
  objc_super v20;

  v4 = type metadata accessor for Calendar.Identifier(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = &v2[OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleTimePickerCell_delegate];
  *((_QWORD *)v8 + 1) = 0;
  swift_unknownObjectWeakInit(v8);
  v9 = OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleTimePickerCell_timePicker;
  v10 = objc_allocWithZone((Class)UIDatePicker);
  v11 = v2;
  *(_QWORD *)&v2[v9] = objc_msgSend(v10, "init");
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, enum case for Calendar.Identifier.gregorian(_:), v4);
  Calendar.init(identifier:)(v7);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (a2)
  {
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v12 = 0;
  }
  v13 = (objc_class *)type metadata accessor for ScheduleTimePickerCell(0);
  v20.receiver = v11;
  v20.super_class = v13;
  v14 = (char *)objc_msgSendSuper2(&v20, "initWithStyle:reuseIdentifier:", 0, v12);

  v15 = *(void **)&v14[OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleTimePickerCell_timePicker];
  v16 = v14;
  objc_msgSend(v15, "setDatePickerMode:", 0);
  objc_msgSend(v15, "setMinuteInterval:", 5);
  LODWORD(v17) = 1148846080;
  objc_msgSend(v15, "setContentCompressionResistancePriority:forAxis:", 1, v17);
  objc_msgSend(v15, "addTarget:action:forControlEvents:", v16, "timeChanged", 4096);
  objc_msgSend(v15, "setPreferredDatePickerStyle:", 1);
  v18 = objc_msgSend(v16, "contentView");
  objc_msgSend(v18, "addSubview:", v15);

  sub_1000954A8();
  return v16;
}

void sub_100099ACC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for Calendar.Identifier(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin();
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleTimePickerCell_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v5 = OBJC_IVAR____TtC6FindMyP33_E1D0B8A6ADDE9504767060C8F9C7ED2F22ScheduleTimePickerCell_timePicker;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)UIDatePicker), "init");
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, enum case for Calendar.Identifier.gregorian(_:), v1);
  Calendar.init(identifier:)(v4);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMLocationAlertViewController.swift", 42, 2, 1834, 0);
  __break(1u);
}

void sub_100099BF0()
{
  sub_100087EF8();
}

uint64_t sub_100099C10()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_100099C34()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC6FindMy29FMLocationAlertViewController_tableView), "reloadData");
}

id sub_100099C50()
{
  return sub_100089898();
}

void sub_100099C70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1000881A4(a1, a2, *(void **)(v2 + 16));
}

void sub_100099C78()
{
  sub_100081B40();
}

void sub_100099C98(uint64_t a1)
{
  uint64_t v1;

  sub_100087B04(a1, *(void **)(v1 + 16));
}

uint64_t sub_100099CA0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

double sub_100099CC4(uint64_t a1, void **a2)
{
  uint64_t v2;

  return sub_100084B20(a1, a2, *(char **)(v2 + 16));
}

double sub_100099CCC(uint64_t a1)
{
  uint64_t v1;

  return sub_10009470C(a1, *(void **)(v1 + 16));
}

void sub_100099CD4(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_10009475C(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_100099CDC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = sub_100053F2C(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

void sub_100099D20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10007C4A4(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_100099D28()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100099D54()
{
  uint64_t v0;

  return sub_10007C8AC(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t getEnumTagSinglePayload for LocationAlertTableViewSection(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for LocationAlertTableViewSection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_100099E38 + 4 * byte_100481B45[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_100099E6C + 4 * byte_100481B40[v4]))();
}

uint64_t sub_100099E6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100099E74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100099E7CLL);
  return result;
}

uint64_t sub_100099E88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100099E90);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_100099E94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100099E9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_100099EA8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for LocationAlertTableViewSection()
{
  return &type metadata for LocationAlertTableViewSection;
}

unint64_t sub_100099EC4()
{
  unint64_t result;

  result = qword_1005D34A8;
  if (!qword_1005D34A8)
  {
    result = swift_getWitnessTable(&unk_100481D80, &type metadata for LocationAlertTableViewSection);
    atomic_store(result, (unint64_t *)&qword_1005D34A8);
  }
  return result;
}

id sub_10009A168()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  objc_class *v14;
  __int128 v15;
  __int128 v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v24;
  uint64_t (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint8_t *v38;
  id v39;
  id v40;
  NSURL *v41;
  void *v42;
  void *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  void *v50;
  void *v51;
  uint64_t v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t (*v56)(char *, char *, uint64_t);
  char *v57;
  void (*v58)(char *, uint64_t, __n128);
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  void *v61;
  uint64_t v62;
  uint64_t aBlock[5];
  uint64_t v64;
  objc_super v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  uint64_t v70;

  v1 = v0;
  v2 = sub_100053F2C((uint64_t *)&unk_1005D3470);
  __chkstk_darwin(v2);
  v4 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for URL(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = __chkstk_darwin(v5);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v55 - v10;
  __chkstk_darwin(v9);
  v13 = (char *)&v55 - v12;
  v14 = (objc_class *)type metadata accessor for FMDeviceImageDownloadOperation();
  v65.receiver = v0;
  v65.super_class = v14;
  objc_msgSendSuper2(&v65, "start");
  v15 = *(_OWORD *)&v0[OBJC_IVAR____TtC6FindMy30FMDeviceImageDownloadOperation_request + 48];
  v68 = *(_OWORD *)&v0[OBJC_IVAR____TtC6FindMy30FMDeviceImageDownloadOperation_request + 32];
  v69 = v15;
  v70 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy30FMDeviceImageDownloadOperation_request + 64];
  v16 = *(_OWORD *)&v0[OBJC_IVAR____TtC6FindMy30FMDeviceImageDownloadOperation_request + 16];
  v66 = *(_OWORD *)&v0[OBJC_IVAR____TtC6FindMy30FMDeviceImageDownloadOperation_request];
  v67 = v16;
  v17 = sub_100161EB0((uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, double))(v6 + 48))(v4, 1, v5, v17) == 1)
  {
    sub_10009ADFC((uint64_t)v4);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v18 = type metadata accessor for Logger(0);
    v19 = sub_100056D88(v18, (uint64_t)qword_1005F5748);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.error.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "FMDeviceImageDownloadOperation: operation cannot start without URL", v22, 2u);
      swift_slowDealloc(v22, -1, -1);
    }

    return objc_msgSend(v1, "setFinished:", 1);
  }
  else
  {
    v59 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v59(v13, v4, v5);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v60 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    v61 = v0;
    v24 = type metadata accessor for Logger(0);
    sub_100056D88(v24, (uint64_t)qword_1005F5748);
    v25 = *(uint64_t (**)(char *, char *, uint64_t))(v6 + 16);
    v26 = v25(v11, v13, v5);
    v27 = Logger.logObject.getter(v26);
    v28 = static os_log_type_t.default.getter(v27);
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc(12, -1);
      v57 = v13;
      v30 = (uint8_t *)v29;
      v31 = swift_slowAlloc(32, -1);
      v56 = v25;
      v32 = v31;
      aBlock[0] = v31;
      *(_DWORD *)v30 = 136315138;
      v58 = (void (*)(char *, uint64_t, __n128))(v30 + 4);
      v33 = URL.absoluteString.getter(v31);
      v35 = v34;
      v62 = sub_100056DA0(v33, v34, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, aBlock);
      v36 = swift_bridgeObjectRelease(v35);
      v58 = *(void (**)(char *, uint64_t, __n128))(v6 + 8);
      v58(v11, v5, v36);
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "FMDeviceImageDownloadOperation: started for URL: %s", v30, 0xCu);
      swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
      v37 = v32;
      v25 = v56;
      swift_slowDealloc(v37, -1, -1);
      v38 = v30;
      v13 = v57;
      swift_slowDealloc(v38, -1, -1);
    }
    else
    {
      v58 = *(void (**)(char *, uint64_t, __n128))(v6 + 8);
      ((void (*)(char *, uint64_t))v58)(v11, v5);
    }

    v39 = objc_msgSend((id)objc_opt_self(NSURLSessionConfiguration), "defaultSessionConfiguration");
    objc_msgSend(v39, "setHTTPShouldUsePipelining:", 1);
    v40 = objc_msgSend((id)objc_opt_self(NSURLSession), "sessionWithConfiguration:", v39);
    URL._bridgeToObjectiveC()(v41);
    v43 = v42;
    v44 = v60;
    v25(v60, v13, v5);
    v45 = *(unsigned __int8 *)(v6 + 80);
    v46 = (v45 + 16) & ~v45;
    v47 = (v7 + v46 + 7) & 0xFFFFFFFFFFFFFFF8;
    v48 = v13;
    v49 = swift_allocObject(&unk_1005422E0, v47 + 8, v45 | 7);
    v59((char *)(v49 + v46), v44, v5);
    v50 = v61;
    *(_QWORD *)(v49 + v47) = v61;
    aBlock[4] = (uint64_t)sub_10009AEB0;
    v64 = v49;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10009AC24;
    aBlock[3] = (uint64_t)&unk_1005422F8;
    v51 = _Block_copy(aBlock);
    v52 = v64;
    v53 = v50;
    v54 = objc_msgSend(v40, "dataTaskWithURL:completionHandler:", v43, v51, swift_release(v52).n128_f64[0]);
    _Block_release(v51);

    objc_msgSend(v54, "resume");
    return (id)((uint64_t (*)(char *, uint64_t))v58)(v48, v5);
  }
}

id sub_10009A6C8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, unint64_t, _QWORD);
  uint64_t v51;
  os_log_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;

  v11 = type metadata accessor for URL(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v51 - v16;
  if (a2 >> 60 == 15 || a4)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v33 = type metadata accessor for Logger(0);
    sub_100056D88(v33, (uint64_t)qword_1005F5748);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a5, v11);
    swift_errorRetain(a4);
    v34 = swift_errorRetain(a4);
    v35 = Logger.logObject.getter(v34);
    v36 = static os_log_type_t.default.getter(v35);
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc(22, -1);
      v38 = swift_slowAlloc(64, -1);
      v54 = a6;
      v39 = v38;
      v56 = v38;
      *(_DWORD *)v37 = 136315394;
      v40 = URL.absoluteString.getter(v38);
      v42 = v41;
      v55 = sub_100056DA0(v40, v41, &v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56);
      v43 = swift_bridgeObjectRelease(v42);
      (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v15, v11, v43);
      *(_WORD *)(v37 + 12) = 2080;
      v55 = a4;
      swift_errorRetain(a4);
      v44 = sub_100053F2C(&qword_1005D7E40);
      v45 = String.init<A>(describing:)(&v55, v44);
      v47 = v46;
      v55 = sub_100056DA0(v45, v46, &v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56);
      swift_bridgeObjectRelease(v47);
      swift_errorRelease(a4);
      swift_errorRelease(a4);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "FMDeviceImageDownloadOperation: error received for URL: %s, error: %s", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy(v39, 2, (char *)&type metadata for Any + 8);
      v48 = v39;
      a6 = v54;
      swift_slowDealloc(v48, -1, -1);
      swift_slowDealloc(v37, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
      swift_errorRelease(a4);
      swift_errorRelease(a4);
    }

    (*(void (**)(_QWORD, unint64_t, uint64_t))&a6[OBJC_IVAR____TtC6FindMy30FMDeviceImageDownloadOperation_completion])(0, 0xF000000000000000, a4);
    return objc_msgSend(a6, "setFinished:", 1);
  }
  else
  {
    sub_100027B98(a1, a2);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v18 = type metadata accessor for Logger(0);
    sub_100056D88(v18, (uint64_t)qword_1005F5748);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v17, a5, v11);
    sub_100027B98(a1, a2);
    v19 = sub_100027B98(a1, a2);
    v20 = Logger.logObject.getter(v19);
    v21 = static os_log_type_t.default.getter(v20);
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc(22, -1);
      v23 = swift_slowAlloc(64, -1);
      v53 = v23;
      v56 = v23;
      *(_DWORD *)v22 = 136315394;
      v52 = v20;
      v24 = URL.absoluteString.getter(v23);
      v26 = v25;
      v27 = sub_100056DA0(v24, v25, &v56);
      v54 = a6;
      v55 = v27;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56);
      v28 = swift_bridgeObjectRelease(v26);
      (*(void (**)(char *, uint64_t, __n128))(v12 + 8))(v17, v11, v28);
      *(_WORD *)(v22 + 12) = 2080;
      v29 = Data.debugDescription.getter(a1, a2);
      v31 = v30;
      v55 = sub_100056DA0(v29, v30, &v56);
      a6 = v54;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56);
      swift_bridgeObjectRelease(v31);
      sub_10005F8F8(a1, a2);
      sub_10005F8F8(a1, a2);
      v20 = v52;
      _os_log_impl((void *)&_mh_execute_header, v52, v21, "FMDeviceImageDownloadOperation: response received for URL: %s, data: %s", (uint8_t *)v22, 0x16u);
      v32 = v53;
      swift_arrayDestroy(v53, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v32, -1, -1);
      swift_slowDealloc(v22, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
      sub_10005F8F8(a1, a2);
      sub_10005F8F8(a1, a2);
    }

    v49 = *(void (**)(uint64_t, unint64_t, _QWORD))&a6[OBJC_IVAR____TtC6FindMy30FMDeviceImageDownloadOperation_completion];
    sub_100027B98(a1, a2);
    v49(a1, a2, 0);
    sub_10005F8F8(a1, a2);
    objc_msgSend(a6, "setFinished:", 1);
    return (id)sub_10005F8F8(a1, a2);
  }
}

double sub_10009AC24(uint64_t a1, void *a2, void *a3, void *a4)
{
  void *v6;
  uint64_t v7;
  void (*v8)(void *, unint64_t, void *, void *);
  id v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  id v13;
  double result;

  v6 = a2;
  v8 = *(void (**)(void *, unint64_t, void *, void *))(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    swift_retain(v7);
    v9 = v6;
    v6 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)(v6);
    v11 = v10;

  }
  else
  {
    swift_retain(v7);
    v11 = 0xF000000000000000;
  }
  v12 = a3;
  v13 = a4;
  v8(v6, v11, a3, a4);

  sub_10005F8F8((uint64_t)v6, v11);
  *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  return result;
}

id sub_10009AD34()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMDeviceImageDownloadOperation();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMDeviceImageDownloadOperation()
{
  return objc_opt_self(_TtC6FindMy30FMDeviceImageDownloadOperation);
}

uint64_t sub_10009ADFC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100053F2C((uint64_t *)&unk_1005D3470);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10009AE3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for URL(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return swift_deallocObject(v0, v6 + 8, v5);
}

id sub_10009AEB0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  unint64_t v10;

  v9 = *(_QWORD *)(type metadata accessor for URL(0) - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  return sub_10009A6C8(a1, a2, a3, a4, v4 + v10, *(char **)(v4 + ((*(_QWORD *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_10009AF28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, unint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  __n128 v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  __n128 v38;
  unsigned int (*v39)(uint64_t, uint64_t, uint64_t, __n128);
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  Swift::Int v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  char *v63;
  void (*v64)(char *, uint64_t, uint64_t);
  char *v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v69;
  uint64_t v70;
  unsigned int (*v71)(uint64_t, uint64_t, uint64_t, __n128);
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD v81[10];

  v7 = sub_100053F2C(&qword_1005D3380);
  v8 = __chkstk_darwin(v7);
  v74 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v78 = (uint64_t)&v69 - v10;
  v11 = type metadata accessor for FMFFriend(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v13);
  v73 = (char *)&v69 - v17;
  v18 = __chkstk_darwin(v16);
  v20 = (char *)&v69 - v19;
  __chkstk_darwin(v18);
  v75 = *(_QWORD *)(v3 + 40);
  v76 = (char *)&v69 - v21;
  v23 = dispatch thunk of FMFManager.friends.getter(v22);
  v24 = *(_QWORD *)(v23 + 16);
  v79 = v23;
  v80 = v12;
  v77 = a3;
  if (v24)
  {
    v72 = v15;
    v25 = v23 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v26 = *(_QWORD *)(v12 + 72);
    v27 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v12 + 16);
    swift_bridgeObjectRetain(v23);
    while (1)
    {
      v28 = v27(v20, v25, v11);
      v29 = FMFFriend.identifier.getter(v28);
      v31 = v30;
      if (v29 == a1 && v30 == a2)
      {
        swift_bridgeObjectRelease(v79);
        v36 = a2;
        goto LABEL_11;
      }
      v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v29, v30, a1, a2, 0);
      v33 = swift_bridgeObjectRelease(v31);
      if ((v32 & 1) != 0)
        break;
      (*(void (**)(char *, uint64_t, __n128))(v80 + 8))(v20, v11, v33);
      v25 += v26;
      if (!--v24)
      {
        swift_bridgeObjectRelease(v79);
        a3 = v77;
        v12 = v80;
        v15 = v72;
        goto LABEL_8;
      }
    }
    v36 = v79;
LABEL_11:
    v37 = swift_bridgeObjectRelease(v36);
    v12 = v80;
    v35 = v78;
    (*(void (**)(uint64_t, char *, uint64_t, __n128))(v80 + 32))(v78, v20, v11, v37);
    v34 = *(char **)(v12 + 56);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v34)(v35, 0, 1, v11);
    a3 = v77;
    v15 = v72;
  }
  else
  {
LABEL_8:
    v34 = *(char **)(v12 + 56);
    v35 = v78;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v34)(v78, 1, 1, v11);
  }
  v38 = swift_bridgeObjectRelease(v79);
  v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v12 + 48);
  if (v39(v35, 1, v11, v38) != 1)
  {
    v64 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 32);
    v65 = v76;
    v64(v76, v35, v11);
LABEL_37:
    v64(a3, (uint64_t)v65, v11);
    v67 = 0;
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v34)(a3, v67, 1, v11);
  }
  sub_1000051EC(v35, &qword_1005D3380);
  v41 = dispatch thunk of FMFManager.friends.getter(v40);
  v42 = v41;
  v75 = *(_QWORD *)(v41 + 16);
  if (v75)
  {
    v71 = v39;
    v72 = v34;
    v79 = v41 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v78 = *(_QWORD *)(v12 + 72);
    v76 = *(char **)(v12 + 16);
    v70 = v41;
    swift_bridgeObjectRetain(v41);
    v43 = 0;
    do
    {
      v45 = ((uint64_t (*)(char *, uint64_t, uint64_t))v76)(v15, v79 + v78 * v43, v11);
      v46 = v15;
      v47 = FMFFriend.contactHandles.getter(v45);
      v48 = v47;
      if (*(_QWORD *)(v47 + 16))
      {
        Hasher.init(_seed:)(v81, *(_QWORD *)(v47 + 40));
        String.hash(into:)(v81, a1, a2);
        v49 = Hasher._finalize()();
        v50 = -1 << *(_BYTE *)(v48 + 32);
        v51 = v49 & ~v50;
        if (((*(_QWORD *)(v48 + 56 + ((v51 >> 3) & 0xFFFFFFFFFFFFF8)) >> v51) & 1) != 0)
        {
          v52 = *(_QWORD *)(v48 + 48);
          v53 = (_QWORD *)(v52 + 16 * v51);
          v54 = v53[1];
          v55 = *v53 == a1 && v54 == a2;
          if (v55 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v53, v54, a1, a2, 0) & 1) != 0)
          {
LABEL_30:
            v60 = v70;
            swift_bridgeObjectRelease(v70);
            v61 = swift_bridgeObjectRelease(v48);
            a3 = v77;
            v62 = (uint64_t)v74;
            v12 = v80;
            v63 = v46;
            v42 = v60;
            v39 = v71;
            v34 = v72;
            (*(void (**)(char *, char *, uint64_t, __n128))(v80 + 32))(v74, v63, v11, v61);
            ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v34)(v62, 0, 1, v11);
            goto LABEL_34;
          }
          v56 = ~v50;
          while (1)
          {
            v51 = (v51 + 1) & v56;
            if (((*(_QWORD *)(v48 + 56 + ((v51 >> 3) & 0xFFFFFFFFFFFFF8)) >> v51) & 1) == 0)
              break;
            v57 = (_QWORD *)(v52 + 16 * v51);
            v58 = v57[1];
            v59 = *v57 == a1 && v58 == a2;
            if (v59 || (_stringCompareWithSmolCheck(_:_:expecting:)(*v57, v58, a1, a2, 0) & 1) != 0)
              goto LABEL_30;
          }
        }
      }
      ++v43;
      v44 = swift_bridgeObjectRelease(v48);
      v12 = v80;
      v15 = v46;
      (*(void (**)(char *, uint64_t, __n128))(v80 + 8))(v46, v11, v44);
    }
    while (v43 != v75);
    v42 = v70;
    swift_bridgeObjectRelease(v70);
    a3 = v77;
    v62 = (uint64_t)v74;
    v39 = v71;
    v34 = v72;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v72)(v74, 1, 1, v11);
  }
  else
  {
    v62 = (uint64_t)v74;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v34)(v74, 1, 1, v11);
  }
LABEL_34:
  v66 = swift_bridgeObjectRelease(v42);
  if (v39(v62, 1, v11, v66) != 1)
  {
    v64 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 32);
    v65 = v73;
    v64(v73, v62, v11);
    goto LABEL_37;
  }
  sub_1000051EC(v62, &qword_1005D3380);
  v67 = 1;
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v34)(a3, v67, 1, v11);
}

void sub_10009B43C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  NSObject *oslog;
  uint64_t v12;
  uint64_t v13;

  if (a1)
  {
    swift_errorRetain(a1);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v2 = type metadata accessor for Logger(0);
    sub_100056D88(v2, (uint64_t)qword_1005F5748);
    swift_errorRetain(a1);
    v3 = swift_errorRetain(a1);
    oslog = Logger.logObject.getter(v3);
    v4 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc(12, -1);
      v6 = swift_slowAlloc(32, -1);
      v12 = a1;
      v13 = v6;
      *(_DWORD *)v5 = 136315138;
      swift_errorRetain(a1);
      v7 = sub_100053F2C((uint64_t *)&unk_1005D2AC0);
      v8 = String.init<A>(describing:)(&v12, v7);
      v10 = v9;
      v12 = sub_100056DA0(v8, v9, &v13);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v12, &v13);
      swift_bridgeObjectRelease(v10);
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      _os_log_impl((void *)&_mh_execute_header, oslog, v4, "Error during locate friend donation - %s", v5, 0xCu);
      swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v6, -1, -1);
      swift_slowDealloc(v5, -1, -1);

      swift_errorRelease(a1);
    }
    else
    {
      swift_errorRelease(a1);
      swift_errorRelease(a1);
      swift_errorRelease(a1);

    }
  }
}

uint64_t sub_10009B630(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v4 = type metadata accessor for FMIPBeaconShareState(0);
  v27 = *(_QWORD *)(v4 - 8);
  v28 = v4;
  v5 = ((uint64_t (*)(void))__chkstk_darwin)();
  v26 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v8 = (char *)&v25 - v7;
  v9 = type metadata accessor for FMIPBeaconShare(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for UUID(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  FMIPBeaconShare.beaconIdentifier.getter(v15);
  LOBYTE(a2) = static UUID.== infix(_:_:)(v17, a2);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  if ((a2 & 1) != 0)
  {
    FMIPBeaconShare.state.getter(v18);
    v20 = v26;
    v19 = v27;
    v21 = v28;
    (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v26, enum case for FMIPBeaconShareState.accepted(_:), v28);
    v22 = static FMIPBeaconShareState.== infix(_:_:)(v8, v20);
    v23 = *(void (**)(char *, uint64_t))(v19 + 8);
    v23(v20, v21);
    v23(v8, v21);
  }
  else
  {
    v22 = 0;
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v22 & 1;
}

double sub_10009B800(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  void *v17;
  id v18;
  void *v19;
  _QWORD *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  double result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD aBlock[5];
  _QWORD *v32;

  v3 = v2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v29 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v28 - 8);
  __chkstk_darwin(v28);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v2 + 49) == 1)
  {
    *(_BYTE *)(v2 + 49) = 0;
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v12 = type metadata accessor for Logger(0);
    v13 = sub_100056D88(v12, (uint64_t)qword_1005F5748);
    v14 = Logger.logObject.getter(v13);
    v15 = static os_log_type_t.default.getter(v14);
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "FMPeopleProvider: enter refreshForActionGroup, location alerts need to be refreshed", v16, 2u);
      swift_slowDealloc(v16, -1, -1);
    }

    dispatch_group_enter(*(dispatch_group_t *)(v3 + 32));
    dispatch thunk of FMFManager.startRefreshing()();
  }
  v17 = *(void **)(v3 + 32);
  sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v18 = v17;
  v19 = (void *)static OS_dispatch_queue.main.getter(v18);
  v20 = (_QWORD *)swift_allocObject(&unk_100542390, 40, 7);
  v20[2] = v3;
  v20[3] = a1;
  v20[4] = a2;
  aBlock[4] = sub_10009D974;
  v32 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_1005423A8;
  v21 = _Block_copy(aBlock);
  swift_retain(v3);
  v22 = swift_retain(a2);
  static DispatchQoS.unspecified.getter(v22);
  v30 = _swiftEmptyArrayStorage;
  v23 = sub_10003FAF4((unint64_t *)&qword_1005D2100, 255, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v24 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v25 = sub_1000555E4();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v30, v24, v25, v6, v23);
  OS_dispatch_group.notify(qos:flags:queue:execute:)(v11, v8, v19, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v28);
  *(_QWORD *)&result = swift_release(v32).n128_u64[0];
  return result;
}

