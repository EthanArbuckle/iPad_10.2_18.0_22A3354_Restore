void sub_10037DDEC(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  objc_class *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __n128 v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t updated;
  uint64_t v24;
  _BYTE v26[24];
  objc_super v27;

  v2 = v1;
  v4 = sub_100053F2C(&qword_1005E1B98);
  __chkstk_darwin(v4);
  v6 = &v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_100053F2C(&qword_1005D2C80);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = &v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v11 = (objc_class *)type metadata accessor for FMStewieWelcomeViewController(0);
  v27.receiver = v2;
  v27.super_class = v11;
  objc_msgSendSuper2(&v27, "viewWillAppear:", a1 & 1);
  v12 = OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_viewModel;
  v13 = *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_viewModel];
  if (!v13)
  {
    __break(1u);
    goto LABEL_6;
  }
  swift_beginAccess(v13 + OBJC_IVAR____TtC6FindMy17FMStewieViewModel__state, v26, 33, 0);
  swift_retain(v13);
  v14 = sub_100053F2C(&qword_1005D2C88);
  Published.projectedValue.getter(v14);
  swift_endAccess(v26);
  swift_release(v13);
  v15 = swift_allocObject(&unk_10055E7C0, 24, 7);
  swift_unknownObjectWeakInit(v15 + 16);
  v16 = sub_1003821F0();
  v17 = Publisher<>.sink(receiveValue:)(sub_1003821E8, v15, v7, v16);
  v18 = swift_release(v15);
  (*(void (**)(_BYTE *, uint64_t, __n128))(v8 + 8))(v10, v7, v18);
  v19 = &v2[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_cancellables];
  swift_beginAccess(&v2[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_cancellables], v26, 33, 0);
  AnyCancellable.store(in:)(v19);
  swift_endAccess(v26);
  swift_release(v17);
  v20 = *(_QWORD *)&v2[v12];
  if (!v20)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  swift_retain(*(_QWORD *)&v2[v12]);
  sub_1001386E0();
  swift_release(v20);
  v21 = *(_QWORD *)&v2[v12];
  if (v21)
  {
    v22 = swift_retain(*(_QWORD *)&v2[v12]);
    sub_100380CB0(v22, (uint64_t)v6);
    swift_release(v21);
    updated = type metadata accessor for FMFSatelliteLocationUpdateEvent(0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 56))(v6, 0, 1, updated);
    v24 = (uint64_t)&v2[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_stewieAnalyticsEvent];
    swift_beginAccess(v24, v26, 33, 0);
    sub_10038223C((uint64_t)v6, v24);
    swift_endAccess(v26);
    return;
  }
LABEL_7:
  __break(1u);
}

void sub_10037E058(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  char v9;
  uint64_t v10;
  void *v11;
  uint64_t Strong;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const mach_header_64 *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[24];
  __int128 v24[3];

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a1[5];
  v8 = a1[6];
  v22 = *((_QWORD *)a1 + 1);
  v9 = a1[16];
  v10 = a2 + 16;
  v11 = (void *)*((_QWORD *)a1 + 3);
  swift_beginAccess(a2 + 16, v23, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v10);
  if (Strong)
  {
    v13 = (void *)Strong;
    v14 = 256;
    if (!v3)
      v14 = 0;
    v15 = v14 | v2;
    v16 = 0x10000;
    if (!v4)
      v16 = 0;
    v17 = 0x1000000;
    if (!v5)
      v17 = 0;
    v18 = v15 | v16 | v17;
    v19 = &_mh_execute_header;
    if (!v6)
      v19 = 0;
    v20 = 0x10000000000;
    if (!v7)
      v20 = 0;
    v21 = 0x1000000000000;
    if (!v8)
      v21 = 0;
    sub_100138484(v18 | (unint64_t)v19 | v20 | v21, v22, v9, v11, v24);
    sub_10037F034(v24);
    sub_1000B06E4((uint64_t)v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071DEC);

  }
}

uint64_t sub_10037E1BC(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t updated;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  objc_class *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  char v21[32];
  char v22[24];
  objc_super v23;

  v3 = sub_100053F2C(&qword_1005E1B98);
  __chkstk_darwin(v3);
  v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  updated = type metadata accessor for FMFSatelliteLocationUpdateEvent(0);
  v7 = *(_QWORD *)(updated - 8);
  __chkstk_darwin(updated);
  v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = (objc_class *)type metadata accessor for FMStewieWelcomeViewController(0);
  v23.receiver = v1;
  v23.super_class = v10;
  objc_msgSendSuper2(&v23, "viewWillDisappear:", a1 & 1);
  v11 = &v1[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_cancellables];
  swift_beginAccess(&v1[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_cancellables], v22, 1, 0);
  v12 = *(_QWORD *)v11;
  swift_bridgeObjectRetain(*(_QWORD *)v11);
  sub_10037C980(v13);
  swift_bridgeObjectRelease(v12);
  v14 = *(_QWORD *)v11;
  *(_QWORD *)v11 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease(v14);
  v15 = (uint64_t)&v1[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_stewieAnalyticsEvent];
  swift_beginAccess(&v1[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_stewieAnalyticsEvent], v21, 0, 0);
  sub_100382134(v15, (uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, updated) == 1)
    return sub_1000051EC((uint64_t)v5, &qword_1005E1B98);
  result = (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, updated);
  v17 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_mediator];
  if (v17)
  {
    v18 = *(_QWORD *)(v17 + 24);
    swift_retain(v18);
    FMIPManager.enqueue(satelliteLocationUpdateEvent:)(v9);
    v19 = swift_release(v18);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v7 + 8))(v9, updated, v19);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_10037E3CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  char *v5;
  id v7;
  NSString v8;
  id v9;
  NSString v10;
  void *v11;
  NSString v12;
  id result;

  v7 = objc_msgSend(v5, "buttonTray");
  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v7, "setCaptionText:", v8);

  v9 = *(id *)&v5[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_lowerLabel];
  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v9, "setText:", v10);

  v11 = *(void **)&v5[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_performButton];
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v11, "setTitle:forState:", v12, 0);

  result = objc_msgSend(v11, "setEnabled:", 1);
  v5[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_actionToPerform] = a5;
  return result;
}

id sub_10037E4F0()
{
  char *v0;
  id v1;
  NSString v2;
  id v3;
  Swift::String v4;
  Swift::String_optional v5;
  Swift::String v6;
  void *object;
  void *v8;
  NSString v9;
  id result;
  Swift::String v11;

  v1 = objc_msgSend(v0, "buttonTray");
  v2 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setCaptionText:", v2);

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_lowerLabel], "setText:", 0);
  v3 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v11._countAndFlagsBits = 0xD000000000000017;
  v4._countAndFlagsBits = 0xD000000000000030;
  v11._object = (void *)0x80000001004AB7C0;
  v4._object = (void *)0x80000001004C2FF0;
  v5.value._object = (void *)0x80000001004AB7A0;
  v5.value._countAndFlagsBits = 0xD000000000000012;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v3, v6, v11)._object;

  v8 = *(void **)&v0[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_performButton];
  v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v8, "setTitle:forState:", v9, 0);

  result = objc_msgSend(v8, "setEnabled:", 0);
  v0[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_actionToPerform] = 0;
  return result;
}

id sub_10037E66C()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  Swift::String v4;
  Swift::String_optional v5;
  Swift::String v6;
  void *object;
  NSString v8;
  id v9;
  Swift::String v10;
  Swift::String_optional v11;
  Swift::String v12;
  void *v13;
  void *v14;
  NSString v15;
  id result;
  Swift::String v17;
  Swift::String v18;

  v1 = objc_msgSend(v0, "buttonTray");
  v2 = (void *)objc_opt_self(NSBundle);
  v3 = objc_msgSend(v2, "mainBundle");
  v4._countAndFlagsBits = 0xD00000000000002DLL;
  v17._object = (void *)0x80000001004AB7C0;
  v4._object = (void *)0x80000001004C2F90;
  v5.value._countAndFlagsBits = 0xD000000000000012;
  v5.value._object = (void *)0x80000001004AB7A0;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  v17._countAndFlagsBits = 0xD000000000000017;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v3, v6, v17)._object;

  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  objc_msgSend(v1, "setCaptionText:", v8);

  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_lowerLabel], "setText:", 0);
  v9 = objc_msgSend(v2, "mainBundle");
  v10._countAndFlagsBits = 0xD00000000000002BLL;
  v18._object = (void *)0x80000001004AB7C0;
  v10._object = (void *)0x80000001004C2FC0;
  v11.value._countAndFlagsBits = 0xD000000000000012;
  v11.value._object = (void *)0x80000001004AB7A0;
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  v18._countAndFlagsBits = 0xD000000000000017;
  v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, v11, (NSBundle)v9, v12, v18)._object;

  v14 = *(void **)&v0[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_performButton];
  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v13);
  objc_msgSend(v14, "setTitle:forState:", v15, 0);

  result = objc_msgSend(v14, "setEnabled:", 1);
  v0[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_actionToPerform] = 1;
  return result;
}

void sub_10037E878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  NSString v7;
  NSString v8;
  id v9;
  id v10;
  Swift::String v11;
  Swift::String_optional v12;
  Swift::String v13;
  void *object;
  NSString v15;
  id v16;
  Swift::String v17;

  sub_10037E4F0();
  swift_bridgeObjectRetain(a4);
  swift_bridgeObjectRetain(a2);
  v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  v9 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v7, v8, 1);

  v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v17._countAndFlagsBits = 0xD000000000000017;
  v11._countAndFlagsBits = 0xD000000000000027;
  v17._object = (void *)0x80000001004AB7C0;
  v11._object = (void *)0x80000001004C2B60;
  v12.value._object = (void *)0x80000001004AB7A0;
  v12.value._countAndFlagsBits = 0xD000000000000012;
  v13._countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, v12, (NSBundle)v10, v13, v17)._object;

  v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v16 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v15, 0, 0);

  objc_msgSend(v9, "addAction:", v16);
  objc_msgSend(v4, "presentViewController:animated:completion:", v9, 1, 0);

}

void sub_10037EA48()
{
  void *v0;
  void *v1;
  id v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  void *object;
  id v7;
  Swift::String v8;
  Swift::String_optional v9;
  Swift::String v10;
  void *v11;
  NSString v12;
  NSString v13;
  id v14;
  id v15;
  Swift::String v16;
  Swift::String_optional v17;
  Swift::String v18;
  void *v19;
  uint64_t v20;
  id v21;
  NSString v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  Swift::String v27;
  Swift::String_optional v28;
  Swift::String v29;
  void *v30;
  uint64_t v31;
  id v32;
  id v33;
  NSString v34;
  void *v35;
  id v36;
  Swift::String comment;
  uint64_t v38;
  void (*v39)(uint64_t, void *);
  void *v40;
  void *v41;
  uint64_t v42;
  Swift::String v43;
  Swift::String v44;
  Swift::String v45;
  Swift::String v46;

  sub_10037E4F0();
  v1 = (void *)objc_opt_self(NSBundle);
  v2 = objc_msgSend(v1, "mainBundle");
  v3._countAndFlagsBits = 0xD00000000000002CLL;
  v43._object = (void *)0x80000001004AB7C0;
  v3._object = (void *)0x80000001004C2F30;
  v4.value._countAndFlagsBits = 0xD000000000000012;
  v4.value._object = (void *)0x80000001004AB7A0;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v43._countAndFlagsBits = 0xD000000000000017;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v43)._object;

  v7 = objc_msgSend(v1, "mainBundle");
  v8._countAndFlagsBits = 0xD000000000000026;
  v44._object = (void *)0x80000001004AB7C0;
  v8._object = (void *)0x80000001004C2F60;
  v9.value._countAndFlagsBits = 0xD000000000000012;
  v9.value._object = (void *)0x80000001004AB7A0;
  v10._countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  v44._countAndFlagsBits = 0xD000000000000017;
  v11 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, v9, (NSBundle)v7, v10, v44)._object;

  v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v11);
  v14 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v12, v13, 1);

  v15 = objc_msgSend(v1, "mainBundle");
  v16._countAndFlagsBits = 0xD00000000000002BLL;
  v45._object = (void *)0x80000001004AB7C0;
  v16._object = (void *)0x80000001004C2D80;
  v17.value._countAndFlagsBits = 0xD000000000000012;
  v17.value._object = (void *)0x80000001004AB7A0;
  v18._countAndFlagsBits = 0;
  v18._object = (void *)0xE000000000000000;
  v45._countAndFlagsBits = 0xD000000000000017;
  v19 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, v17, (NSBundle)v15, v18, v45)._object;

  v20 = swift_allocObject(&unk_10055E720, 24, 7);
  *(_QWORD *)(v20 + 16) = v0;
  v21 = v0;
  v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v19);
  v41 = sub_1003820F8;
  v42 = v20;
  comment._object = _NSConcreteStackBlock;
  v38 = 1107296256;
  v39 = sub_100008B40;
  v40 = &unk_10055E738;
  v23 = _Block_copy(&comment._object);
  swift_release(v42);
  v24 = (void *)objc_opt_self(UIAlertAction);
  v25 = objc_msgSend(v24, "actionWithTitle:style:handler:", v22, 0, v23);
  _Block_release(v23);

  v26 = objc_msgSend(v1, "mainBundle");
  v27._countAndFlagsBits = 0xD000000000000027;
  v46._object = (void *)0x80000001004AB7C0;
  v27._object = (void *)0x80000001004C2B60;
  v28.value._countAndFlagsBits = 0xD000000000000012;
  v28.value._object = (void *)0x80000001004AB7A0;
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  v46._countAndFlagsBits = 0xD000000000000017;
  v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v27, v28, (NSBundle)v26, v29, v46)._object;

  v31 = swift_allocObject(&unk_10055E770, 32, 7);
  *(_QWORD *)(v31 + 16) = v21;
  *(_QWORD *)(v31 + 24) = v14;
  v32 = v21;
  v33 = v14;
  v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v30);
  v41 = sub_10038212C;
  v42 = v31;
  comment._object = _NSConcreteStackBlock;
  v38 = 1107296256;
  v39 = sub_100008B40;
  v40 = &unk_10055E788;
  v35 = _Block_copy(&comment._object);
  v36 = objc_msgSend(v24, "actionWithTitle:style:handler:", v34, 0, v35, swift_release(v42).n128_f64[0]);
  _Block_release(v35);

  objc_msgSend(v33, "addAction:", v25);
  objc_msgSend(v33, "addAction:", v36);
  objc_msgSend(v32, "presentViewController:animated:completion:", v33, 1, 0);

}

uint64_t sub_10037EE9C()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;
  uint64_t v2;
  uint64_t updated;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  _BYTE v8[32];

  v0 = sub_10037D1D4((uint64_t)v8);
  v2 = v1;
  updated = type metadata accessor for FMFSatelliteLocationUpdateEvent(0);
  v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 48);
  if (!v4(v2, 1, updated))
    FMFSatelliteLocationUpdateEvent.updateFlowLSOffGoToSettingsPressed.setter(1);
  ((void (*)(_BYTE *, _QWORD))v0)(v8, 0);
  v5 = sub_10037D1D4((uint64_t)v8);
  if (!v4(v6, 1, updated))
    FMFSatelliteLocationUpdateEvent.updateFlowLSOffOkPressed.setter();
  ((void (*)(_BYTE *, _QWORD))v5)(v8, 0);
  return sub_100381DC4();
}

id sub_10037EF5C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t updated;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  _BYTE v12[32];

  v4 = sub_10037D1D4((uint64_t)v12);
  v6 = v5;
  updated = type metadata accessor for FMFSatelliteLocationUpdateEvent(0);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 48);
  if (!v8(v6, 1, updated))
    FMFSatelliteLocationUpdateEvent.updateFlowLSOffGoToSettingsPressed.setter(1);
  ((void (*)(_BYTE *, _QWORD))v4)(v12, 0);
  v9 = sub_10037D1D4((uint64_t)v12);
  if (!v8(v10, 1, updated))
    FMFSatelliteLocationUpdateEvent.updateFlowLSOffOkPressed.setter();
  ((void (*)(_BYTE *, _QWORD))v9)(v12, 0);
  return objc_msgSend(a3, "dismissViewControllerAnimated:completion:", 1, 0);
}

void sub_10037F034(__int128 *a1)
{
  char *v1;
  char *v2;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  __int128 *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  _OWORD *v30;
  char v31;
  uint64_t v32;
  os_log_type_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t KeyPath;
  uint64_t v40;
  uint64_t v41;
  int v42;
  void *v43;
  id v44;
  Swift::String v45;
  Swift::String_optional v46;
  Swift::String v47;
  Swift::String v48;
  uint64_t countAndFlagsBits;
  void *object;
  id v51;
  unint64_t v52;
  const char *v53;
  uint64_t v54;
  os_log_type_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  void *v70;
  id v71;
  Swift::String v72;
  Swift::String_optional v73;
  Swift::String v74;
  Swift::String v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  void *v81;
  id v82;
  Swift::String v83;
  Swift::String_optional v84;
  Swift::String v85;
  Swift::String v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  void *v92;
  id v93;
  Swift::String v94;
  Swift::String_optional v95;
  Swift::String v96;
  Swift::String v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  void *v103;
  id v104;
  Swift::String v105;
  Swift::String_optional v106;
  Swift::String v107;
  Swift::String v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  void *v114;
  id v115;
  Swift::String v116;
  Swift::String_optional v117;
  Swift::String v118;
  Swift::String v119;
  unint64_t v120;
  Swift::String_optional v121;
  Swift::String v122;
  unint64_t v123;
  Swift::String v124;
  void *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  int v131;
  void *v132;
  id v133;
  Swift::String v134;
  Swift::String_optional v135;
  Swift::String v136;
  Swift::String v137;
  id v138;
  Swift::String v139;
  Swift::String_optional v140;
  Swift::String v141;
  Swift::String v142;
  uint64_t v143;
  void *v144;
  uint64_t v145;
  void *v146;
  char v147;
  Swift::String v148;
  Swift::String_optional v149;
  Swift::String v150;
  Swift::String v151;
  id v152;
  Swift::String v153;
  Swift::String_optional v154;
  Swift::String v155;
  Swift::String v156;
  void *v157;
  void *v158;
  id v159;
  Swift::String v160;
  Swift::String_optional v161;
  Swift::String v162;
  Swift::String v163;
  id v164;
  Swift::String v165;
  Swift::String_optional v166;
  Swift::String v167;
  Swift::String v168;
  Swift::String v169;
  Swift::String_optional v170;
  Swift::String v171;
  Swift::String v172;
  uint64_t v173;
  id v174;
  Swift::String v175;
  Swift::String_optional v176;
  Swift::String v177;
  Swift::String v178;
  Swift::String v179;
  Swift::String_optional v180;
  Swift::String v181;
  Swift::String v182;
  Swift::String v183;
  Swift::String_optional v184;
  Swift::String v185;
  Swift::String v186;
  Swift::String v187;
  Swift::String_optional v188;
  Swift::String v189;
  Swift::String v190;
  id v191;
  Swift::String v192;
  Swift::String_optional v193;
  Swift::String v194;
  Swift::String v195;
  id v196;
  unsigned int v197;
  id v198;
  NSString v199;
  unsigned int v200;
  char v201;
  id v202;
  id v203;
  void *v204;
  uint64_t v205;
  unint64_t v206;
  unint64_t v207;
  id v208;
  void *v209;
  uint64_t v210;
  unint64_t v211;
  unint64_t v212;
  Swift::String v213;
  __int128 v214;
  uint64_t v215;
  void *v216;
  void *v217;
  Swift::String v218;
  uint64_t v219;
  Swift::String v220;
  __int128 v221;
  uint64_t v222;
  void *v223;
  Swift::String v224;
  uint64_t v225;
  NSString v226;
  id v227;
  unint64_t v228;
  uint64_t v229;
  uint64_t v230;
  unint64_t v231;
  char *v232;
  _OWORD v233[3];
  __int128 v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  char v238;
  __int128 v239;
  id v240;
  _OWORD v241[3];
  _BYTE v242[56];
  Swift::String v243;
  Swift::String v244;
  Swift::String v245;
  Swift::String v246;
  Swift::String v247;
  Swift::String v248;
  Swift::String v249;
  Swift::String v250;
  Swift::String v251;
  Swift::String v252;
  Swift::String v253;
  Swift::String v254;
  Swift::String v255;
  Swift::String v256;
  Swift::String v257;
  Swift::String v258;
  Swift::String v259;
  Swift::String v260;

  v2 = v1;
  sub_1000B0614(a1, &v234);
  v4 = v234;
  v6 = v235;
  v5 = v236;
  v7 = v237;
  v8 = v238;
  v9 = &v2[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_currentViewState];
  sub_10013E9C0((uint64_t)&v2[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_currentViewState], (uint64_t)v242);
  if ((sub_10013B444((uint64_t)v242) & 1) != 0)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v10 = type metadata accessor for Logger(0);
    v11 = sub_100056D88(v10, (uint64_t)qword_1005F5748);
    v12 = Logger.logObject.getter(v11);
    v13 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc(12, -1);
      v15 = swift_slowAlloc(32, -1);
      *(_QWORD *)&v241[0] = v15;
      *(_DWORD *)v14 = 136315138;
      *(_QWORD *)&v239 = sub_100056DA0(0xD000000000000012, 0x80000001004C2F10, (uint64_t *)v241);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v239, (char *)&v239 + 8);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "FMStewieWelcomeViewController: %s - viewState already set", v14, 0xCu);
      swift_arrayDestroy(v15, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v15, -1, -1);
      swift_slowDealloc(v14, -1, -1);
    }
  }
  else
  {
    v231 = *(_QWORD *)v9;
    v232 = v2;
    v16 = *((_QWORD *)v9 + 3);
    v229 = *((_QWORD *)v9 + 2);
    v230 = *((_QWORD *)v9 + 1);
    v17 = *((_QWORD *)v9 + 4);
    *(_OWORD *)v9 = v4;
    *((_QWORD *)v9 + 2) = v6;
    *((_QWORD *)v9 + 3) = v5;
    *((_QWORD *)v9 + 4) = v7;
    v18 = v9[40];
    v9[40] = v8;
    sub_1000B06E4((uint64_t)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10013C308);
    sub_1003820E4(v231, v230, v229, v16, v17, v18);
    v19 = a1;
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v20 = type metadata accessor for Logger(0);
    sub_100056D88(v20, (uint64_t)qword_1005F5748);
    sub_1000B06E4((uint64_t)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10013C308);
    v21 = sub_1000B06E4((uint64_t)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10013C308);
    v22 = Logger.logObject.getter(v21);
    v23 = static os_log_type_t.default.getter(v22);
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc(22, -1);
      v25 = swift_slowAlloc(64, -1);
      *(_QWORD *)&v239 = v25;
      *(_DWORD *)v24 = 136315394;
      *(_QWORD *)&v241[0] = sub_100056DA0(0xD000000000000012, 0x80000001004C2F10, (uint64_t *)&v239);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v241, (char *)v241 + 8);
      *(_WORD *)(v24 + 12) = 2080;
      sub_1000B0614(a1, v241);
      sub_1000B06E4((uint64_t)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10013C308);
      v26 = String.init<A>(describing:)(v241, &type metadata for FMStewieViewModelState.ViewState);
      v28 = v27;
      *(_QWORD *)&v241[0] = sub_100056DA0(v26, v27, (uint64_t *)&v239);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(v241, (char *)v241 + 8);
      swift_bridgeObjectRelease(v28);
      sub_1000B06E4((uint64_t)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071DEC);
      sub_1000B06E4((uint64_t)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071DEC);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "FMStewieWelcomeViewController: %s - viewState: %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy(v25, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v25, -1, -1);
      swift_slowDealloc(v24, -1, -1);
    }
    else
    {
      sub_1000B06E4((uint64_t)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071DEC);
      sub_1000B06E4((uint64_t)a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071DEC);
    }

    v29 = v232;
    v30 = sub_1000B0614(a1, v241);
    v31 = v241[0];
    if (*(_QWORD *)&v241[0] >> 62)
    {
      if (*(_QWORD *)&v241[0] >> 62 == 1)
      {
        *(_QWORD *)&v241[0] &= 0x3FFFFFFFFFFFFFFFuLL;
        if ((v31 & 1) == 0)
        {
          v32 = static os_log_type_t.error.getter(v30);
          v33 = v32;
          v34 = Logger.logObject.getter(v32);
          v35 = v33;
          if (os_log_type_enabled(v34, v33))
          {
            v36 = (uint8_t *)swift_slowAlloc(12, -1);
            v37 = swift_slowAlloc(32, -1);
            *(_QWORD *)&v239 = v37;
            *(_DWORD *)v36 = 136315138;
            *(_QWORD *)&v233[0] = sub_100056DA0(0xD00000000000002BLL, 0x80000001004C2AE0, (uint64_t *)&v239);
            v29 = v232;
            UnsafeMutableRawBufferPointer.copyMemory(from:)(v233, (char *)v233 + 8);
            _os_log_impl((void *)&_mh_execute_header, v34, v35, "%s", v36, 0xCu);
            swift_arrayDestroy(v37, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v37, -1, -1);
            swift_slowDealloc(v36, -1, -1);
          }

        }
        sub_10037E66C();
      }
      else
      {
        v54 = static os_log_type_t.error.getter(v30);
        v55 = v54;
        v56 = Logger.logObject.getter(v54);
        v57 = v55;
        if (os_log_type_enabled(v56, v55))
        {
          v58 = (uint8_t *)swift_slowAlloc(12, -1);
          v59 = swift_slowAlloc(32, -1);
          *(_QWORD *)&v239 = v59;
          *(_DWORD *)v58 = 136315138;
          *(_QWORD *)&v233[0] = sub_100056DA0(0xD000000000000026, 0x80000001004C2EE0, (uint64_t *)&v239);
          v29 = v232;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(v233, (char *)v233 + 8);
          _os_log_impl((void *)&_mh_execute_header, v56, v57, "%s", v58, 0xCu);
          swift_arrayDestroy(v59, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v59, -1, -1);
          swift_slowDealloc(v58, -1, -1);
        }

LABEL_25:
        sub_10037E4F0();
      }
    }
    else
    {
      *(_QWORD *)&v241[0] &= 0x3FFFFFFFFFFFFFFFuLL;
      switch(v31)
      {
        case 2:
          v38 = *(_QWORD *)&v232[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_viewModel];
          if (!v38)
          {
            __break(1u);
LABEL_74:
            __break(1u);
LABEL_75:
            __break(1u);
LABEL_76:
            __break(1u);
LABEL_77:
            __break(1u);
LABEL_78:
            __break(1u);
LABEL_79:
            __break(1u);
LABEL_80:
            __break(1u);
            JUMPOUT(0x100380820);
          }
          KeyPath = swift_getKeyPath(&unk_10048E148);
          v40 = swift_getKeyPath(&unk_10048E170);
          v41 = swift_retain(v38);
          static Published.subscript.getter(&v239, v41, KeyPath, v40);
          swift_release(v38);
          swift_release(KeyPath);
          swift_release(v40);
          v42 = v239;

          v43 = (void *)objc_opt_self(NSBundle);
          v44 = objc_msgSend(v43, "mainBundle");
          if (v42 == 1)
          {
            v45._countAndFlagsBits = 0xD000000000000022;
            v243._object = (void *)0x80000001004AB7C0;
            v45._object = (void *)0x80000001004C2C50;
            v46.value._countAndFlagsBits = 0xD000000000000012;
            v46.value._object = (void *)0x80000001004AB7A0;
            v47._countAndFlagsBits = 0;
            v47._object = (void *)0xE000000000000000;
            v243._countAndFlagsBits = 0xD000000000000017;
            v48 = NSLocalizedString(_:tableName:bundle:value:comment:)(v45, v46, (NSBundle)v44, v47, v243);
            countAndFlagsBits = v48._countAndFlagsBits;
            object = v48._object;

            v51 = objc_msgSend(v43, "mainBundle");
            v52 = 0xD000000000000029;
            v228 = 0x80000001004AB7C0;
            v53 = "STEWIE_WELCOME_ALERT_AVAILABLE_WHEN_SETUP";
            goto LABEL_44;
          }
          v251._object = (void *)0x80000001004AB7C0;
          v148._object = (void *)0x80000001004C2E80;
          v148._countAndFlagsBits = 0xD00000000000002BLL;
          v149.value._countAndFlagsBits = 0xD000000000000012;
          v149.value._object = (void *)0x80000001004AB7A0;
          v150._countAndFlagsBits = 0;
          v150._object = (void *)0xE000000000000000;
          v251._countAndFlagsBits = 0xD000000000000017;
          v151 = NSLocalizedString(_:tableName:bundle:value:comment:)(v148, v149, (NSBundle)v44, v150, v251);

          v152 = objc_msgSend(v43, "mainBundle");
          v252._object = (void *)0x80000001004AB7C0;
          v153._object = (void *)0x80000001004C2D80;
          v153._countAndFlagsBits = 0xD00000000000002BLL;
          v154.value._countAndFlagsBits = 0xD000000000000012;
          v154.value._object = (void *)0x80000001004AB7A0;
          v155._countAndFlagsBits = 0;
          v155._object = (void *)0xE000000000000000;
          v252._countAndFlagsBits = 0xD000000000000017;
          v156 = NSLocalizedString(_:tableName:bundle:value:comment:)(v153, v154, (NSBundle)v152, v155, v252);
          v125 = v156._object;

          v29 = v232;
          sub_10037E3CC(v151._countAndFlagsBits, (uint64_t)v151._object, v156._countAndFlagsBits, (uint64_t)v156._object, 2);
          v157 = v151._object;
          goto LABEL_58;
        case 3:
          v65 = *(_QWORD *)&v232[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_viewModel];
          if (!v65)
            goto LABEL_75;
          v66 = swift_getKeyPath(&unk_10048E148);
          v67 = swift_getKeyPath(&unk_10048E170);
          v68 = swift_retain(v65);
          static Published.subscript.getter(&v239, v68, v66, v67);
          swift_release(v65);
          swift_release(v66);
          swift_release(v67);
          v69 = v239;

          v70 = (void *)objc_opt_self(NSBundle);
          v71 = objc_msgSend(v70, "mainBundle");
          if (v69 == 1)
          {
            v72._countAndFlagsBits = 0xD000000000000022;
            v244._object = (void *)0x80000001004AB7C0;
            v72._object = (void *)0x80000001004C2C50;
            v73.value._countAndFlagsBits = 0xD000000000000012;
            v73.value._object = (void *)0x80000001004AB7A0;
            v74._countAndFlagsBits = 0;
            v74._object = (void *)0xE000000000000000;
            v244._countAndFlagsBits = 0xD000000000000017;
            v75 = NSLocalizedString(_:tableName:bundle:value:comment:)(v72, v73, (NSBundle)v71, v74, v244);
            countAndFlagsBits = v75._countAndFlagsBits;
            object = v75._object;

            v51 = objc_msgSend(v70, "mainBundle");
            v52 = 0xD00000000000002FLL;
            v228 = 0x80000001004AB7C0;
            v53 = "STEWIE_WELCOME_ALERT_AVAILABLE_WHEN_HAS_FRIENDS";
            goto LABEL_44;
          }
          v169._countAndFlagsBits = 0xD000000000000031;
          v255._object = (void *)0x80000001004AB7C0;
          v169._object = (void *)0x80000001004C2E10;
          v170.value._countAndFlagsBits = 0xD000000000000012;
          v170.value._object = (void *)0x80000001004AB7A0;
          v171._countAndFlagsBits = 0;
          v171._object = (void *)0xE000000000000000;
          v255._countAndFlagsBits = 0xD000000000000017;
          v172 = NSLocalizedString(_:tableName:bundle:value:comment:)(v169, v170, (NSBundle)v71, v171, v255);
          v173 = v172._countAndFlagsBits;
          object = v172._object;

          v174 = objc_msgSend(v70, "mainBundle");
          goto LABEL_55;
        case 4:
          v76 = *(_QWORD *)&v232[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_viewModel];
          if (!v76)
            goto LABEL_76;
          v77 = swift_getKeyPath(&unk_10048E148);
          v78 = swift_getKeyPath(&unk_10048E170);
          v79 = swift_retain(v76);
          static Published.subscript.getter(&v239, v79, v77, v78);
          swift_release(v76);
          swift_release(v77);
          swift_release(v78);
          v80 = v239;

          v81 = (void *)objc_opt_self(NSBundle);
          v82 = objc_msgSend(v81, "mainBundle");
          if (v80 == 1)
          {
            v83._countAndFlagsBits = 0xD000000000000022;
            v245._object = (void *)0x80000001004AB7C0;
            v83._object = (void *)0x80000001004C2C50;
            v84.value._countAndFlagsBits = 0xD000000000000012;
            v84.value._object = (void *)0x80000001004AB7A0;
            v85._countAndFlagsBits = 0;
            v85._object = (void *)0xE000000000000000;
            v245._countAndFlagsBits = 0xD000000000000017;
            v86 = NSLocalizedString(_:tableName:bundle:value:comment:)(v83, v84, (NSBundle)v82, v85, v245);
            countAndFlagsBits = v86._countAndFlagsBits;
            object = v86._object;

            v51 = objc_msgSend(v81, "mainBundle");
            v52 = 0xD00000000000002DLL;
            v228 = 0x80000001004AB7C0;
            v53 = "STEWIE_WELCOME_ALERT_AVAILABLE_WHEN_ME_DEVICE";
            goto LABEL_44;
          }
          v175._countAndFlagsBits = 0xD00000000000002FLL;
          v256._object = (void *)0x80000001004AB7C0;
          v175._object = (void *)0x80000001004C2DB0;
          v176.value._countAndFlagsBits = 0xD000000000000012;
          v176.value._object = (void *)0x80000001004AB7A0;
          v177._countAndFlagsBits = 0;
          v177._object = (void *)0xE000000000000000;
          v256._countAndFlagsBits = 0xD000000000000017;
          v178 = NSLocalizedString(_:tableName:bundle:value:comment:)(v175, v176, (NSBundle)v82, v177, v256);
          v173 = v178._countAndFlagsBits;
          object = v178._object;

          v174 = objc_msgSend(v81, "mainBundle");
          goto LABEL_55;
        case 5:
          v87 = *(_QWORD *)&v232[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_viewModel];
          if (!v87)
            goto LABEL_77;
          v88 = swift_getKeyPath(&unk_10048E148);
          v89 = swift_getKeyPath(&unk_10048E170);
          v90 = swift_retain(v87);
          static Published.subscript.getter(&v239, v90, v88, v89);
          swift_release(v87);
          swift_release(v88);
          swift_release(v89);
          v91 = v239;

          v92 = (void *)objc_opt_self(NSBundle);
          v93 = objc_msgSend(v92, "mainBundle");
          if (v91 == 1)
          {
            v94._countAndFlagsBits = 0xD000000000000022;
            v246._object = (void *)0x80000001004AB7C0;
            v94._object = (void *)0x80000001004C2C50;
            v95.value._countAndFlagsBits = 0xD000000000000012;
            v95.value._object = (void *)0x80000001004AB7A0;
            v96._countAndFlagsBits = 0;
            v96._object = (void *)0xE000000000000000;
            v246._countAndFlagsBits = 0xD000000000000017;
            v97 = NSLocalizedString(_:tableName:bundle:value:comment:)(v94, v95, (NSBundle)v93, v96, v246);
            countAndFlagsBits = v97._countAndFlagsBits;
            object = v97._object;

            v51 = objc_msgSend(v92, "mainBundle");
            v52 = 0xD000000000000035;
            v228 = 0x80000001004AB7C0;
            v53 = "STEWIE_WELCOME_ALERT_AVAILABLE_WHEN_AIRPLANE_MODE_OFF";
            goto LABEL_44;
          }
          v179._countAndFlagsBits = 0xD000000000000037;
          v257._object = (void *)0x80000001004AB7C0;
          v179._object = (void *)0x80000001004C2CC0;
          v180.value._countAndFlagsBits = 0xD000000000000012;
          v180.value._object = (void *)0x80000001004AB7A0;
          v181._countAndFlagsBits = 0;
          v181._object = (void *)0xE000000000000000;
          v257._countAndFlagsBits = 0xD000000000000017;
          v182 = NSLocalizedString(_:tableName:bundle:value:comment:)(v179, v180, (NSBundle)v93, v181, v257);
          v173 = v182._countAndFlagsBits;
          object = v182._object;

          v174 = objc_msgSend(v92, "mainBundle");
          goto LABEL_55;
        case 6:
          v98 = *(_QWORD *)&v232[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_viewModel];
          if (!v98)
            goto LABEL_78;
          v99 = swift_getKeyPath(&unk_10048E148);
          v100 = swift_getKeyPath(&unk_10048E170);
          v101 = swift_retain(v98);
          static Published.subscript.getter(&v239, v101, v99, v100);
          swift_release(v98);
          swift_release(v99);
          swift_release(v100);
          v102 = v239;

          v103 = (void *)objc_opt_self(NSBundle);
          v104 = objc_msgSend(v103, "mainBundle");
          if (v102 == 1)
          {
            v105._countAndFlagsBits = 0xD000000000000022;
            v247._object = (void *)0x80000001004AB7C0;
            v105._object = (void *)0x80000001004C2C50;
            v106.value._countAndFlagsBits = 0xD000000000000012;
            v106.value._object = (void *)0x80000001004AB7A0;
            v107._countAndFlagsBits = 0;
            v107._object = (void *)0xE000000000000000;
            v247._countAndFlagsBits = 0xD000000000000017;
            v108 = NSLocalizedString(_:tableName:bundle:value:comment:)(v105, v106, (NSBundle)v104, v107, v247);
            countAndFlagsBits = v108._countAndFlagsBits;
            object = v108._object;

            v51 = objc_msgSend(v103, "mainBundle");
            v52 = 0xD000000000000034;
            v228 = 0x80000001004AB7C0;
            v53 = "STEWIE_WELCOME_ALERT_AVAILABLE_WHEN_SHARING_LOCATION";
            goto LABEL_44;
          }
          v183._countAndFlagsBits = 0xD000000000000036;
          v258._object = (void *)0x80000001004AB7C0;
          v183._object = (void *)0x80000001004C2C10;
          v184.value._countAndFlagsBits = 0xD000000000000012;
          v184.value._object = (void *)0x80000001004AB7A0;
          v185._countAndFlagsBits = 0;
          v185._object = (void *)0xE000000000000000;
          v258._countAndFlagsBits = 0xD000000000000017;
          v186 = NSLocalizedString(_:tableName:bundle:value:comment:)(v183, v184, (NSBundle)v104, v185, v258);
          v173 = v186._countAndFlagsBits;
          object = v186._object;

          v174 = objc_msgSend(v103, "mainBundle");
          goto LABEL_55;
        case 7:
          v109 = *(_QWORD *)&v232[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_viewModel];
          if (!v109)
            goto LABEL_79;
          v110 = swift_getKeyPath(&unk_10048E148);
          v111 = swift_getKeyPath(&unk_10048E170);
          v112 = swift_retain(v109);
          static Published.subscript.getter(&v239, v112, v110, v111);
          swift_release(v109);
          swift_release(v110);
          swift_release(v111);
          v113 = v239;

          v114 = (void *)objc_opt_self(NSBundle);
          v115 = objc_msgSend(v114, "mainBundle");
          if (v113 == 1)
          {
            v116._countAndFlagsBits = 0xD000000000000021;
            v248._object = (void *)0x80000001004AB7C0;
            v116._object = (void *)0x80000001004C2BC0;
            v117.value._countAndFlagsBits = 0xD000000000000012;
            v117.value._object = (void *)0x80000001004AB7A0;
            v118._countAndFlagsBits = 0;
            v118._object = (void *)0xE000000000000000;
            v248._countAndFlagsBits = 0xD000000000000017;
            v119 = NSLocalizedString(_:tableName:bundle:value:comment:)(v116, v117, (NSBundle)v115, v118, v248);
            countAndFlagsBits = v119._countAndFlagsBits;
            object = v119._object;

            v51 = objc_msgSend(v114, "mainBundle");
            v52 = 0xD00000000000001BLL;
            v228 = 0x80000001004AB7C0;
            v53 = "STEWIE_WELCOME_ALERT_REGION";
LABEL_44:
            v120 = (unint64_t)(v53 - 32) | 0x8000000000000000;
            v121.value._countAndFlagsBits = 0xD000000000000012;
            v121.value._object = (void *)0x80000001004AB7A0;
            v122._countAndFlagsBits = 0;
            v122._object = (void *)0xE000000000000000;
            v123 = 0xD000000000000017;
            v124 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v52, v121, (NSBundle)v51, v122, *(Swift::String *)(&v228 - 1));
            v125 = v124._object;

            v126 = countAndFlagsBits;
            v29 = v232;
            sub_10037E878(v126, (uint64_t)object, v124._countAndFlagsBits, (uint64_t)v124._object);
            goto LABEL_57;
          }
          v187._countAndFlagsBits = 0xD00000000000002FLL;
          v259._object = (void *)0x80000001004AB7C0;
          v187._object = (void *)0x80000001004C2B90;
          v188.value._countAndFlagsBits = 0xD000000000000012;
          v188.value._object = (void *)0x80000001004AB7A0;
          v189._countAndFlagsBits = 0;
          v189._object = (void *)0xE000000000000000;
          v259._countAndFlagsBits = 0xD000000000000017;
          v190 = NSLocalizedString(_:tableName:bundle:value:comment:)(v187, v188, (NSBundle)v115, v189, v259);
          v173 = v190._countAndFlagsBits;
          object = v190._object;

          v174 = objc_msgSend(v114, "mainBundle");
LABEL_55:
          v191 = v174;
          v192._countAndFlagsBits = 0xD000000000000027;
          v260._object = (void *)0x80000001004AB7C0;
          v192._object = (void *)0x80000001004C2B60;
          v193.value._countAndFlagsBits = 0xD000000000000012;
          v193.value._object = (void *)0x80000001004AB7A0;
          v194._countAndFlagsBits = 0;
          v194._object = (void *)0xE000000000000000;
          v260._countAndFlagsBits = 0xD000000000000017;
          v195 = NSLocalizedString(_:tableName:bundle:value:comment:)(v192, v193, (NSBundle)v191, v194, v260);
          v125 = v195._object;

          v143 = v173;
          v144 = object;
          v145 = v195._countAndFlagsBits;
          v146 = v195._object;
          v147 = 0;
          v29 = v232;
          goto LABEL_56;
        case 8:
          v127 = *(_QWORD *)&v232[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_viewModel];
          if (!v127)
            goto LABEL_80;
          v128 = swift_getKeyPath(&unk_10048E148);
          v129 = swift_getKeyPath(&unk_10048E170);
          v130 = swift_retain(v127);
          static Published.subscript.getter(&v239, v130, v128, v129);
          swift_release(v127);
          swift_release(v128);
          swift_release(v129);
          v131 = v239;

          if (v131 == 1)
            goto LABEL_25;
          v132 = (void *)objc_opt_self(NSBundle);
          v133 = objc_msgSend(v132, "mainBundle");
          v134._countAndFlagsBits = 0xD00000000000002DLL;
          v249._object = (void *)0x80000001004AB7C0;
          v134._object = (void *)0x80000001004C2B30;
          v135.value._countAndFlagsBits = 0xD000000000000012;
          v135.value._object = (void *)0x80000001004AB7A0;
          v136._countAndFlagsBits = 0;
          v136._object = (void *)0xE000000000000000;
          v249._countAndFlagsBits = 0xD000000000000017;
          v137 = NSLocalizedString(_:tableName:bundle:value:comment:)(v134, v135, (NSBundle)v133, v136, v249);
          object = v137._object;

          v138 = objc_msgSend(v132, "mainBundle");
          v139._countAndFlagsBits = 0xD000000000000027;
          v250._object = (void *)0x80000001004AB7C0;
          v139._object = (void *)0x80000001004C2B60;
          v140.value._countAndFlagsBits = 0xD000000000000012;
          v140.value._object = (void *)0x80000001004AB7A0;
          v141._countAndFlagsBits = 0;
          v141._object = (void *)0xE000000000000000;
          v250._countAndFlagsBits = 0xD000000000000017;
          v142 = NSLocalizedString(_:tableName:bundle:value:comment:)(v139, v140, (NSBundle)v138, v141, v250);
          v125 = v142._object;

          v143 = v137._countAndFlagsBits;
          v29 = v232;
          v144 = v137._object;
          v145 = v142._countAndFlagsBits;
          v146 = v142._object;
          v147 = 0;
          goto LABEL_56;
        default:
          v60 = *(_QWORD *)&v232[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_viewModel];
          if (!v60)
            goto LABEL_74;
          v61 = swift_getKeyPath(&unk_10048E148);
          v62 = swift_getKeyPath(&unk_10048E170);
          v63 = swift_retain(v60);
          static Published.subscript.getter(&v239, v63, v61, v62);
          swift_release(v60);
          swift_release(v61);
          swift_release(v62);
          v64 = v239;

          if (v64 == 1)
          {
            sub_10037EA48();
          }
          else
          {
            v158 = (void *)objc_opt_self(NSBundle);
            v159 = objc_msgSend(v158, "mainBundle");
            v160._countAndFlagsBits = 0xD000000000000037;
            v253._object = (void *)0x80000001004AB7C0;
            v160._object = (void *)0x80000001004C2D40;
            v161.value._countAndFlagsBits = 0xD000000000000012;
            v161.value._object = (void *)0x80000001004AB7A0;
            v162._countAndFlagsBits = 0;
            v162._object = (void *)0xE000000000000000;
            v253._countAndFlagsBits = 0xD000000000000017;
            v163 = NSLocalizedString(_:tableName:bundle:value:comment:)(v160, v161, (NSBundle)v159, v162, v253);
            object = v163._object;

            v164 = objc_msgSend(v158, "mainBundle");
            v165._countAndFlagsBits = 0xD00000000000002BLL;
            v254._object = (void *)0x80000001004AB7C0;
            v165._object = (void *)0x80000001004C2D80;
            v166.value._countAndFlagsBits = 0xD000000000000012;
            v166.value._object = (void *)0x80000001004AB7A0;
            v167._countAndFlagsBits = 0;
            v167._object = (void *)0xE000000000000000;
            v254._countAndFlagsBits = 0xD000000000000017;
            v168 = NSLocalizedString(_:tableName:bundle:value:comment:)(v165, v166, (NSBundle)v164, v167, v254);
            v125 = v168._object;

            v143 = v163._countAndFlagsBits;
            v29 = v232;
            v144 = v163._object;
            v145 = v168._countAndFlagsBits;
            v146 = v168._object;
            v147 = 3;
LABEL_56:
            sub_10037E3CC(v143, (uint64_t)v144, v145, (uint64_t)v146, v147);
LABEL_57:
            v157 = object;
LABEL_58:
            swift_bridgeObjectRelease(v157);
            swift_bridgeObjectRelease(v125);
          }
          break;
      }
    }
    v196 = objc_msgSend((id)objc_opt_self(FMSystemInfo), "sharedInstance");
    v197 = objc_msgSend(v196, "isInternalBuild");

    if (v197)
    {
      v198 = objc_msgSend((id)objc_opt_self(NSUserDefaults), "standardUserDefaults");
      v199 = String._bridgeToObjectiveC()();
      v200 = objc_msgSend(v198, "BOOLForKey:", v199);

      if (v200)
      {
        sub_1000B0614(v19, &v239);
        v201 = v239;
        if ((unint64_t)v239 >> 62)
        {
          v202 = *(id *)&v29[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_lowerLabel];
          v208 = objc_msgSend(v202, "text");
          if (v208)
          {
            v209 = v208;
            v210 = static String._unconditionallyBridgeFromObjectiveC(_:)(v208);
            v212 = v211;

          }
          else
          {
            v210 = 0;
            v212 = 0xE000000000000000;
          }
          *(_QWORD *)&v233[0] = v210;
          *((_QWORD *)&v233[0] + 1) = v212;
          swift_bridgeObjectRetain(v212);
          v220._countAndFlagsBits = 0x3A47554245440A0ALL;
          v220._object = (void *)0xE90000000000000ALL;
          String.append(_:)(v220);
          swift_bridgeObjectRelease(v212);
          v221 = v233[0];
          sub_1000B0614(v19, v233);
          sub_1000B06E4((uint64_t)v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_10013C308);
          v222 = String.init<A>(describing:)(v233, &type metadata for FMStewieViewModelState.ViewState);
          v217 = v223;
          v233[0] = v221;
          swift_bridgeObjectRetain(*((_QWORD *)&v221 + 1));
          v224._countAndFlagsBits = v222;
          v224._object = v217;
          String.append(_:)(v224);
          v219 = *((_QWORD *)&v221 + 1);
        }
        else
        {
          v202 = *(id *)&v29[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_lowerLabel];
          v203 = objc_msgSend(v202, "text");
          if (v203)
          {
            v204 = v203;
            v205 = static String._unconditionallyBridgeFromObjectiveC(_:)(v203);
            v207 = v206;

          }
          else
          {
            v205 = 0;
            v207 = 0xE000000000000000;
          }
          *(_QWORD *)&v233[0] = v205;
          *((_QWORD *)&v233[0] + 1) = v207;
          swift_bridgeObjectRetain(v207);
          v213._countAndFlagsBits = 0xD000000000000018;
          v213._object = (void *)0x80000001004C2B10;
          String.append(_:)(v213);
          swift_bridgeObjectRelease(v207);
          v214 = v233[0];
          LOBYTE(v233[0]) = v201;
          v215 = String.init<A>(describing:)(v233, &type metadata for FMStewieViewModelState.ViewState.NotAvailableReason);
          v217 = v216;
          v233[0] = v214;
          swift_bridgeObjectRetain(*((_QWORD *)&v214 + 1));
          v218._countAndFlagsBits = v215;
          v218._object = v217;
          String.append(_:)(v218);
          v219 = *((_QWORD *)&v214 + 1);
        }
        swift_bridgeObjectRelease(v219);
        swift_bridgeObjectRelease(v217);
        v225 = *((_QWORD *)&v233[0] + 1);
        v226 = String._bridgeToObjectiveC()();
        objc_msgSend(v202, "setText:", v226, swift_bridgeObjectRelease(v225).n128_f64[0]);

      }
    }
    v227 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 1, v29, "cancelActionWithSender:");
    v12 = objc_msgSend(v29, "navigationItem");
    -[NSObject setLeftBarButtonItem:](v12, "setLeftBarButtonItem:", v227);

  }
}

void sub_10038083C()
{
  void *v0;
  uint64_t v1;
  _BYTE *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v1 = type metadata accessor for Logger(0);
  sub_100056D88(v1, (uint64_t)qword_1005F5748);
  v2 = v0;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc(22, -1);
    v6 = swift_slowAlloc(64, -1);
    v11 = v6;
    *(_DWORD *)v5 = 136315394;
    v10 = sub_100056DA0(0x416D726F66726570, 0xEF29286E6F697463, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v10, &v11);
    *(_WORD *)(v5 + 12) = 2080;
    LOBYTE(v10) = v2[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_actionToPerform];
    v7 = String.init<A>(describing:)(&v10, &type metadata for FMStewieWelcomeActionType);
    v9 = v8;
    v10 = sub_100056DA0(v7, v8, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v10, &v11);

    swift_bridgeObjectRelease(v9);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FMStewieWelcomeViewController: %s - action: %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy(v6, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
  __asm { BR              X10 }
}

void sub_100380B68()
{
  void *v0;
  void *v1;
  uint64_t (*v2)(_QWORD);
  uint64_t v3;
  uint64_t v4;
  uint64_t updated;
  uint64_t v6;
  void *v7;
  _QWORD v8[5];
  uint64_t v9;

  v1 = v0;
  v2 = sub_10037D1D4((uint64_t)v8);
  v4 = v3;
  updated = type metadata accessor for FMFSatelliteLocationUpdateEvent(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 48))(v4, 1, updated))
    FMFSatelliteLocationUpdateEvent.sendLocationTapped.setter(1);
  ((void (*)(_QWORD *, _QWORD))v2)(v8, 0);
  v6 = swift_allocObject(&unk_10055E6D0, 24, 7);
  *(_QWORD *)(v6 + 16) = v1;
  v8[4] = sub_100381DBC;
  v9 = v6;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_100037DF8;
  v8[3] = &unk_10055E6E8;
  v7 = _Block_copy(v8);
  objc_msgSend(v1, "dismissViewControllerAnimated:completion:", 1, v7, swift_release(v9).n128_f64[0]);
  _Block_release(v7);
}

double sub_100380C6C(uint64_t a1)
{
  uint64_t Strong;
  double result;
  uint64_t v3;

  Strong = swift_unknownObjectWeakLoadStrong(a1 + OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_delegate);
  if (Strong)
  {
    v3 = Strong;
    sub_100072ED4();
    *(_QWORD *)&result = swift_unknownObjectRelease(v3).n128_u64[0];
  }
  return result;
}

uint64_t sub_100380CB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t updated;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t KeyPath;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  const mach_header_64 *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_BYTE *, _QWORD, uint64_t);
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_BYTE *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char v37;
  _BYTE *v38;
  unsigned int *v39;
  _BYTE *v40;
  uint64_t v41;
  char v42;
  __n128 v43;
  unsigned int *v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  _BYTE *v48;
  _BYTE *v49;
  uint64_t v50;
  _BYTE *v51;
  _BYTE v53[4];
  unsigned int v54;
  uint64_t v55;
  _BYTE *v56;
  _BYTE *v57;
  _BYTE *v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  __int128 v66[3];
  __int128 v67;
  char v68;
  void *v69;

  v60 = a2;
  v3 = type metadata accessor for FMFSatelliteLocationTapSource(0);
  v61 = *(_QWORD *)(v3 - 8);
  v62 = v3;
  v4 = __chkstk_darwin(v3);
  v58 = &v53[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v59 = &v53[-v6];
  updated = type metadata accessor for FMFSatelliteUpdateBlockingCondition(0);
  v8 = *(_QWORD *)(updated - 8);
  v9 = __chkstk_darwin(updated);
  v57 = &v53[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  v12 = &v53[-v11];
  v13 = type metadata accessor for FMFSatelliteEducationFlowType(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = __chkstk_darwin(v13);
  v56 = &v53[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  v18 = &v53[-v17];
  KeyPath = swift_getKeyPath(&unk_10048E148);
  v20 = swift_getKeyPath(&unk_10048E170);
  static Published.subscript.getter(&v67, a1, KeyPath, v20);
  swift_release(KeyPath);
  swift_release(v20);
  v21 = v69;
  v22 = 256;
  if (!BYTE1(v67))
    v22 = 0;
  v23 = v22 | v67;
  v24 = 0x10000;
  if (!BYTE2(v67))
    v24 = 0;
  v25 = 0x1000000;
  if (!BYTE3(v67))
    v25 = 0;
  v26 = v23 | v24 | v25;
  v27 = &_mh_execute_header;
  if (!BYTE4(v67))
    v27 = 0;
  v28 = 0x10000000000;
  if (!BYTE5(v67))
    v28 = 0;
  v29 = 0x1000000000000;
  if (!BYTE6(v67))
    v29 = 0;
  sub_100138484(v26 | (unint64_t)v27 | v28 | v29, *((uint64_t *)&v67 + 1), v68, v69, v66);

  v64 = v18;
  v65 = v14;
  v30 = *(void (**)(_BYTE *, _QWORD, uint64_t))(v14 + 104);
  v31 = v18;
  v32 = v13;
  v30(v31, enum case for FMFSatelliteEducationFlowType.learnMoreBlockingCondition(_:), v13);
  v33 = enum case for FMFSatelliteUpdateBlockingCondition.none(_:);
  v63 = v8;
  v34 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 104);
  v34(v12, enum case for FMFSatelliteUpdateBlockingCondition.none(_:), updated);
  v35 = swift_getKeyPath(&unk_10048E148);
  v36 = swift_getKeyPath(&unk_10048E170);
  static Published.subscript.getter(&v67, a1, v35, v36);
  swift_release(v35);
  swift_release(v36);
  v54 = v67;

  sub_1000B0614(v66, &v67);
  v37 = v67;
  if ((unint64_t)v67 >> 62)
  {
    if ((unint64_t)v67 >> 62 != 1)
      goto LABEL_27;
    *(_QWORD *)&v67 = v67 & 0x3FFFFFFFFFFFFFFFLL;
    sub_1000B06E4((uint64_t)v66, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071DEC);
    (*(void (**)(_BYTE *, uint64_t))(v63 + 8))(v12, updated);
    v38 = v64;
    (*(void (**)(_BYTE *, uint64_t))(v65 + 8))(v64, v13);
    v30(v38, enum case for FMFSatelliteEducationFlowType.updateLocation(_:), v13);
  }
  else
  {
    *(_QWORD *)&v67 = v67 & 0x3FFFFFFFFFFFFFFFLL;
    (*(void (**)(_BYTE *, uint64_t))(v63 + 8))(v12, updated);
    sub_1000B06E4((uint64_t)v66, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_100071DEC);
    switch(v37)
    {
      case 2:
        v39 = (unsigned int *)&enum case for FMFSatelliteUpdateBlockingCondition.notSetUp(_:);
        break;
      case 3:
        v39 = (unsigned int *)&enum case for FMFSatelliteUpdateBlockingCondition.noFriends(_:);
        break;
      case 4:
        v39 = (unsigned int *)&enum case for FMFSatelliteUpdateBlockingCondition.notMeDevice(_:);
        break;
      case 5:
        v39 = (unsigned int *)&enum case for FMFSatelliteUpdateBlockingCondition.airplaneMode(_:);
        break;
      case 6:
        v39 = (unsigned int *)&enum case for FMFSatelliteUpdateBlockingCondition.shareMyLocationDisabled(_:);
        break;
      case 7:
        v39 = (unsigned int *)&enum case for FMFSatelliteUpdateBlockingCondition.regionNotSupported(_:);
        break;
      case 8:
        v39 = (unsigned int *)&enum case for FMFSatelliteUpdateBlockingCondition.online(_:);
        break;
      default:
        v39 = (unsigned int *)&enum case for FMFSatelliteUpdateBlockingCondition.locationServicesDisabled(_:);
        break;
    }
    v33 = *v39;
  }
  v34(v12, v33, updated);
LABEL_27:
  v40 = v12;
  if ((*(_BYTE *)(v55 + OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_presentationSource) & 1) != 0)
  {
    v41 = updated;
    v42 = _stringCompareWithSmolCheck(_:_:expecting:)(0x7070416E65706FLL, 0xE700000000000000, 0x6163696669746F6ELL, 0xEF7061546E6F6974, 0);
    v43 = swift_bridgeObjectRelease(0xE700000000000000);
    v44 = (unsigned int *)&enum case for FMFSatelliteLocationTapSource.appLaunch(_:);
    if ((v42 & 1) != 0)
      v44 = (unsigned int *)&enum case for FMFSatelliteLocationTapSource.notificationTap(_:);
  }
  else
  {
    v41 = updated;
    v43 = swift_bridgeObjectRelease(0xEF7061546E6F6974);
    v44 = (unsigned int *)&enum case for FMFSatelliteLocationTapSource.notificationTap(_:);
  }
  v46 = v61;
  v45 = v62;
  v47 = v59;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, __n128))(v61 + 104))(v59, *v44, v62, v43);
  v48 = v56;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v65 + 16))(v56, v64, v13);
  v49 = v58;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v46 + 16))(v58, v47, v45);
  v50 = v63;
  v51 = v57;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v63 + 16))(v57, v40, v41);
  FMFSatelliteLocationUpdateEvent.init(flowType:educationFlowInitiatedTapSource:sendLocationTapped:updateFlowBlockingCondition:updateFlowOffline:updateFlowCanceled:updateFlowLSOffGoToSettingsPressed:updateFlowLSOffOkPressed:)(v48, v49, 0, v51, v54, 0, 2, 2);
  (*(void (**)(_BYTE *, uint64_t))(v46 + 8))(v47, v45);
  (*(void (**)(_BYTE *, uint64_t))(v50 + 8))(v40, v41);
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v65 + 8))(v64, v32);
}

id sub_100381244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char *v7;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  __int128 v18;
  __int128 v19;
  char *v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  char *v31;
  uint64_t updated;
  NSString v33;
  NSString v34;
  NSString v35;
  id v36;
  objc_super v38;

  *(_QWORD *)&v7[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_mediator] = 0;
  v12 = &v7[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_delegate];
  *((_QWORD *)v12 + 1) = 0;
  swift_unknownObjectWeakInit(v12);
  *(_QWORD *)&v7[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_viewModel] = 0;
  v13 = &v7[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_style];
  v14 = qword_1005D1F98;
  v15 = v7;
  if (v14 != -1)
    swift_once(&qword_1005D1F98, sub_10037D194);
  v17 = (void *)qword_1005E1AB0;
  v16 = *(void **)algn_1005E1AB8;
  v18 = xmmword_1005E1AC0;
  v19 = unk_1005E1AD0;
  *(_QWORD *)v13 = qword_1005E1AB0;
  *((_QWORD *)v13 + 1) = v16;
  *((_OWORD *)v13 + 1) = v18;
  *((_OWORD *)v13 + 2) = v19;
  v15[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_presentationSource] = 1;
  v20 = &v15[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_currentViewState];
  *(_QWORD *)v20 = 0xFFFFFFFF00;
  *(_OWORD *)(v20 + 8) = 0u;
  *(_OWORD *)(v20 + 24) = 0u;
  v20[40] = 0;
  v21 = OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_imageView;
  v22 = objc_allocWithZone((Class)UIImageView);
  v23 = v17;
  v24 = v16;
  *(_QWORD *)&v15[v21] = objc_msgSend(v22, "init");
  v25 = OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_upperLabel;
  *(_QWORD *)&v15[v25] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v26 = OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_lowerLabel;
  *(_QWORD *)&v15[v26] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v27 = OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_performButton;
  v28 = type metadata accessor for FMOBWhiteBlueBoldTrayButton();
  *(_QWORD *)&v15[v27] = objc_msgSend((id)swift_getObjCClassFromMetadata(v28), "boldButton");
  v15[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_actionToPerform] = 0;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_10013CC00((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    v29 = &_swiftEmptySetSingleton;
  }
  v30 = a7;
  *(_QWORD *)&v15[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_cancellables] = v29;
  v31 = &v15[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_stewieAnalyticsEvent];
  updated = type metadata accessor for FMFSatelliteLocationUpdateEvent(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 56))(v31, 1, 1, updated);

  v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  if (!a4)
  {
    v34 = 0;
    if (a6)
      goto LABEL_7;
LABEL_9:
    v35 = 0;
    goto LABEL_10;
  }
  v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a4);
  if (!a6)
    goto LABEL_9;
LABEL_7:
  v35 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a6);
LABEL_10:
  v38.receiver = v15;
  v38.super_class = (Class)type metadata accessor for FMStewieWelcomeViewController(0);
  v36 = objc_msgSendSuper2(&v38, "initWithTitle:detailText:symbolName:contentLayout:", v33, v34, v35, v30);

  return v36;
}

id sub_1003815BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  char *v6;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void *v16;
  __int128 v17;
  __int128 v18;
  char *v19;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  char *v29;
  uint64_t updated;
  NSString v31;
  NSString v32;
  id v33;
  objc_super v35;

  *(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_mediator] = 0;
  v11 = &v6[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_delegate];
  *((_QWORD *)v11 + 1) = 0;
  swift_unknownObjectWeakInit(v11);
  *(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_viewModel] = 0;
  v12 = &v6[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_style];
  v13 = qword_1005D1F98;
  v14 = v6;
  if (v13 != -1)
    swift_once(&qword_1005D1F98, sub_10037D194);
  v16 = (void *)qword_1005E1AB0;
  v15 = *(void **)algn_1005E1AB8;
  v17 = xmmword_1005E1AC0;
  v18 = unk_1005E1AD0;
  *(_QWORD *)v12 = qword_1005E1AB0;
  *((_QWORD *)v12 + 1) = v15;
  *((_OWORD *)v12 + 1) = v17;
  *((_OWORD *)v12 + 2) = v18;
  v14[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_presentationSource] = 1;
  v19 = &v14[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_currentViewState];
  *(_QWORD *)v19 = 0xFFFFFFFF00;
  *(_OWORD *)(v19 + 8) = 0u;
  *(_OWORD *)(v19 + 24) = 0u;
  v19[40] = 0;
  v20 = OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_imageView;
  v21 = objc_allocWithZone((Class)UIImageView);
  v22 = v16;
  v23 = v15;
  *(_QWORD *)&v14[v20] = objc_msgSend(v21, "init");
  v24 = OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_upperLabel;
  *(_QWORD *)&v14[v24] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v25 = OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_lowerLabel;
  *(_QWORD *)&v14[v25] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v26 = OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_performButton;
  v27 = type metadata accessor for FMOBWhiteBlueBoldTrayButton();
  *(_QWORD *)&v14[v26] = objc_msgSend((id)swift_getObjCClassFromMetadata(v27), "boldButton");
  v14[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_actionToPerform] = 0;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0
    && _CocoaArrayWrapper.endIndex.getter(_swiftEmptyArrayStorage))
  {
    sub_10013CC00((uint64_t)_swiftEmptyArrayStorage);
  }
  else
  {
    v28 = &_swiftEmptySetSingleton;
  }
  *(_QWORD *)&v14[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_cancellables] = v28;
  v29 = &v14[OBJC_IVAR____TtC6FindMy29FMStewieWelcomeViewController_stewieAnalyticsEvent];
  updated = type metadata accessor for FMFSatelliteLocationUpdateEvent(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 56))(v29, 1, 1, updated);

  v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a2);
  if (a4)
  {
    v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a4);
  }
  else
  {
    v32 = 0;
  }
  v35.receiver = v14;
  v35.super_class = (Class)type metadata accessor for FMStewieWelcomeViewController(0);
  v33 = objc_msgSendSuper2(&v35, "initWithTitle:detailText:icon:contentLayout:", v31, v32, a5, a6);

  return v33;
}

id sub_1003818F8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMStewieWelcomeViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100381A18()
{
  return type metadata accessor for FMStewieWelcomeViewController(0);
}

uint64_t type metadata accessor for FMStewieWelcomeViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1005E1B78;
  if (!qword_1005E1B78)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMStewieWelcomeViewController);
  return result;
}

void sub_100381A5C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[13];

  v4[0] = "\b";
  v4[1] = &unk_10048E028;
  v4[2] = "\b";
  v4[3] = &unk_10048E040;
  v4[4] = &unk_10048E058;
  v4[5] = &unk_10048E070;
  v4[6] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[7] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[9] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v4[10] = &unk_10048E088;
  v4[11] = (char *)&value witness table for Builtin.BridgeObject + 64;
  sub_100381B28(319);
  if (v3 <= 0x3F)
  {
    v4[12] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 13, v4, a1 + 80);
  }
}

void sub_100381B28(uint64_t a1)
{
  uint64_t updated;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1005E1B88)
  {
    updated = type metadata accessor for FMFSatelliteLocationUpdateEvent(255);
    v3 = type metadata accessor for Optional(a1, updated);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1005E1B88);
  }
}

uint64_t storeEnumTagSinglePayload for FMStewieWelcomeActionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_100381BC8 + 4 * byte_10048DEEA[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_100381BFC + 4 * byte_10048DEE5[v4]))();
}

uint64_t sub_100381BFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_100381C04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x100381C0CLL);
  return result;
}

uint64_t sub_100381C18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x100381C20);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_100381C24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_100381C2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMStewieWelcomeActionType()
{
  return &type metadata for FMStewieWelcomeActionType;
}

uint64_t initializeWithCopy for FMStewieWelcomeViewStyle(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  __int128 v5;
  id v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  v6 = v3;
  v7 = v4;
  return a1;
}

uint64_t assignWithCopy for FMStewieWelcomeViewStyle(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for FMStewieWelcomeViewStyle(uint64_t a1, _OWORD *a2)
{
  void *v4;
  __int128 v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  v5 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v5;
  return a1;
}

ValueMetadata *type metadata accessor for FMStewieWelcomeViewStyle()
{
  return &type metadata for FMStewieWelcomeViewStyle;
}

unint64_t sub_100381D4C()
{
  unint64_t result;

  result = qword_1005E1B90;
  if (!qword_1005E1B90)
  {
    result = swift_getWitnessTable(&unk_10048E11C, &type metadata for FMStewieWelcomeActionType);
    atomic_store(result, (unint64_t *)&qword_1005E1B90);
  }
  return result;
}

uint64_t sub_100381D98()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_100381DBC()
{
  uint64_t v0;

  return sub_100380C6C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_100381DC4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v8;
  NSURL *v9;
  void *v10;
  void *v11;
  void *v12;
  Class isa;
  uint64_t v14;

  v0 = sub_100053F2C((uint64_t *)&unk_1005D3470);
  __chkstk_darwin(v0);
  v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)(0xD000000000000020, 0x80000001004BEA20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
    return sub_1000051EC((uint64_t)v2, (uint64_t *)&unk_1005D3470);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  v8 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (v8)
  {
    v10 = v8;
    URL._bridgeToObjectiveC()(v9);
    v12 = v11;
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v10, "openSensitiveURL:withOptions:", v12, isa);

  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100381F54()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v8;
  NSURL *v9;
  void *v10;
  void *v11;
  void *v12;
  Class isa;
  uint64_t v14;

  v0 = sub_100053F2C((uint64_t *)&unk_1005D3470);
  __chkstk_darwin(v0);
  v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)(0xD000000000000018, 0x80000001004B4770);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
    return sub_1000051EC((uint64_t)v2, (uint64_t *)&unk_1005D3470);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  v8 = objc_msgSend((id)objc_opt_self(LSApplicationWorkspace), "defaultWorkspace");
  if (v8)
  {
    v10 = v8;
    URL._bridgeToObjectiveC()(v9);
    v12 = v11;
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v10, "openSensitiveURL:withOptions:", v12, isa);

  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1003820E4(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (result >> 8 != 0xFFFFFFFF)
    return sub_100071DEC(result, a2, a3, a4, a5, a6);
  return result;
}

uint64_t sub_1003820F8()
{
  return sub_10037EE9C();
}

uint64_t sub_100382100()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_10038212C(uint64_t a1)
{
  uint64_t v1;

  return sub_10037EF5C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100382134(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C(&qword_1005E1B98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10038217C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D2C60;
  if (!qword_1005D2C60)
  {
    v1 = type metadata accessor for AnyCancellable(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for AnyCancellable, v1);
    atomic_store(result, (unint64_t *)&qword_1005D2C60);
  }
  return result;
}

uint64_t sub_1003821C4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003821E8(unsigned __int8 *a1)
{
  uint64_t v1;

  sub_10037E058(a1, v1);
}

unint64_t sub_1003821F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005D2C90;
  if (!qword_1005D2C90)
  {
    v1 = sub_10004058C(&qword_1005D2C80);
    result = swift_getWitnessTable(&protocol conformance descriptor for Published<A>.Publisher, v1);
    atomic_store(result, (unint64_t *)&qword_1005D2C90);
  }
  return result;
}

uint64_t sub_10038223C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C(&qword_1005E1B98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

char *sub_100382298(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  id v10;
  Swift::String v11;
  Swift::String v12;
  Swift::String v13;
  uint64_t v14;
  id v15;
  char *v16;
  NSString v17;
  objc_class *v18;
  char *v19;
  void *v20;
  char *v21;
  id v22;
  objc_super v24;
  uint64_t v25;
  unint64_t v26;
  Swift::String v27;

  v3 = v2;
  v5 = sub_100053F2C((uint64_t *)&unk_1005E4430);
  __chkstk_darwin(v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = OBJC_IVAR____TtC6FindMy28FMLabelTableViewLocationCell_locationView;
  v25 = 0;
  v26 = 0xE000000000000000;
  v9 = v2;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v26);
  v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v27._countAndFlagsBits = 0xD000000000000026;
  v27._object = (void *)0x80000001004C30F0;
  v11._object = (void *)0x80000001004C30D0;
  v11._countAndFlagsBits = 0xD000000000000014;
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v27);

  v14 = type metadata accessor for FMPlatterIcon(0);
  swift_storeEnumTagMultiPayload(v7, v14, 14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v7, 0, 1, v14);
  v15 = objc_allocWithZone((Class)type metadata accessor for FMMultiSettingsRowView());
  *(_QWORD *)&v3[v8] = sub_100430344(v13._countAndFlagsBits, (uint64_t)v13._object, 1, (uint64_t)v7, 0, 1, 0, 0.0);
  v16 = &v9[OBJC_IVAR____TtC6FindMy28FMLabelTableViewLocationCell_displayAddress];
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  *((_WORD *)v16 + 8) = 0;

  if (a2)
  {
    v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
  }
  else
  {
    v17 = 0;
  }
  v18 = (objc_class *)type metadata accessor for FMLabelTableViewLocationCell();
  v24.receiver = v9;
  v24.super_class = v18;
  v19 = (char *)objc_msgSendSuper2(&v24, "initWithStyle:reuseIdentifier:", 0, v17);

  v20 = *(void **)&v19[OBJC_IVAR____TtC6FindMy28FMLabelTableViewLocationCell_locationView];
  v21 = v19;
  objc_msgSend(v20, "setUserInteractionEnabled:", 1);
  v22 = objc_msgSend(v21, "contentView");
  objc_msgSend(v22, "addSubview:", v20);

  sub_1003827E4();
  return v21;
}

char *sub_100382504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  Swift::String v13;
  Swift::String v14;
  Swift::String v15;
  uint64_t v16;
  id v17;
  char *v18;
  NSString v19;
  objc_class *v20;
  char *v21;
  void *v22;
  char *v23;
  id v24;
  objc_super v26;
  uint64_t v27;
  unint64_t v28;
  Swift::String v29;

  v4 = v3;
  v7 = sub_100053F2C((uint64_t *)&unk_1005E4430);
  __chkstk_darwin(v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = OBJC_IVAR____TtC6FindMy28FMLabelTableViewLocationCell_locationView;
  v27 = 0;
  v28 = 0xE000000000000000;
  v11 = v3;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v28);
  v12 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v29._countAndFlagsBits = 0xD000000000000026;
  v29._object = (void *)0x80000001004C30F0;
  v13._object = (void *)0x80000001004C30D0;
  v13._countAndFlagsBits = 0xD000000000000014;
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v29);

  v16 = type metadata accessor for FMPlatterIcon(0);
  swift_storeEnumTagMultiPayload(v9, v16, 14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v9, 0, 1, v16);
  v17 = objc_allocWithZone((Class)type metadata accessor for FMMultiSettingsRowView());
  *(_QWORD *)&v4[v10] = sub_100430344(v15._countAndFlagsBits, (uint64_t)v15._object, 1, (uint64_t)v9, 0, 1, 0, 0.0);
  v18 = &v11[OBJC_IVAR____TtC6FindMy28FMLabelTableViewLocationCell_displayAddress];
  *(_QWORD *)v18 = 0;
  *((_QWORD *)v18 + 1) = 0;
  *((_WORD *)v18 + 8) = 0;

  if (a3)
  {
    v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v19 = 0;
  }
  v20 = (objc_class *)type metadata accessor for FMLabelTableViewLocationCell();
  v26.receiver = v11;
  v26.super_class = v20;
  v21 = (char *)objc_msgSendSuper2(&v26, "initWithStyle:reuseIdentifier:", a1, v19);

  v22 = *(void **)&v21[OBJC_IVAR____TtC6FindMy28FMLabelTableViewLocationCell_locationView];
  v23 = v21;
  objc_msgSend(v22, "setUserInteractionEnabled:", 1);
  v24 = objc_msgSend(v23, "contentView");
  objc_msgSend(v24, "addSubview:", v22);

  sub_1003827E4();
  return v23;
}

void sub_1003827E4()
{
  char *v0;
  double v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  Class isa;

  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v1 = *(double *)&qword_1005F5978;
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy28FMLabelTableViewLocationCell_locationView];
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = (void *)objc_opt_self(NSLayoutConstraint);
  v4 = sub_100053F2C(&qword_1005D2F10);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100481720;
  v6 = objc_msgSend(v2, "topAnchor");
  v7 = objc_msgSend(v0, "contentView");
  v8 = objc_msgSend(v7, "topAnchor");

  v9 = objc_msgSend(v6, "constraintEqualToAnchor:", v8);
  *(_QWORD *)(v5 + 32) = v9;
  v10 = objc_msgSend(v2, "leadingAnchor");
  v11 = objc_msgSend(v0, "contentView");
  v12 = objc_msgSend(v11, "leadingAnchor");

  v13 = objc_msgSend(v10, "constraintEqualToAnchor:constant:", v12, v1);
  *(_QWORD *)(v5 + 40) = v13;
  v14 = objc_msgSend(v2, "trailingAnchor");
  v15 = objc_msgSend(v0, "contentView");
  v16 = objc_msgSend(v15, "trailingAnchor");

  v17 = objc_msgSend(v14, "constraintEqualToAnchor:constant:", v16, v1);
  *(_QWORD *)(v5 + 48) = v17;
  v18 = objc_msgSend(v2, "bottomAnchor");
  v19 = objc_msgSend(v0, "contentView");
  v20 = objc_msgSend(v19, "bottomAnchor");

  v21 = objc_msgSend(v18, "constraintEqualToAnchor:", v20);
  *(_QWORD *)(v5 + 56) = v21;
  specialized Array._endMutation()(v22);
  sub_100048C64();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v3, "activateConstraints:", isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

}

id sub_100382AE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int16 v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  id *v8;
  void *v9;
  uint64_t v10;
  id v11;
  NSString v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  NSString v19;
  void *v20;
  char **v21;
  id v22;
  uint64_t v23;
  void *v24;
  id v25;
  _BYTE *v26;
  id v27;
  uint64_t v28;
  void *v29;
  id v30;
  id result;

  v1 = v0 + OBJC_IVAR____TtC6FindMy28FMLabelTableViewLocationCell_displayAddress;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy28FMLabelTableViewLocationCell_displayAddress + 8);
  if (v2)
  {
    v3 = *(_WORD *)(v1 + 16);
    v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy28FMLabelTableViewLocationCell_locationView);
    v5 = v3 & 1;
    v6 = (_QWORD *)(v4 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitle);
    v7 = *(_QWORD *)(v4 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitle + 8);
    *v6 = *(_QWORD *)v1;
    v6[1] = v2;
    swift_bridgeObjectRetain(v2);
    swift_bridgeObjectRelease(v7);
    v8 = (id *)(v4 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_secondaryLabel);
    v9 = *(void **)(v4 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_secondaryLabel);
    v10 = v6[1];
    v11 = v9;
    if (v10)
    {
      swift_bridgeObjectRetain(v10);
      v12 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v10);
    }
    else
    {
      v12 = 0;
    }
    objc_msgSend(v9, "setText:", v12);

    v20 = (void *)objc_opt_self(UIColor);
    v21 = &selRef_redColor;
    if ((v3 & 0x101) != 0)
      v21 = &selRef_secondaryLabelColor;
    v22 = objc_msgSend(v20, *v21);
    v23 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitleColor;
    v24 = *(void **)(v4 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitleColor);
    *(_QWORD *)(v4 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitleColor) = v22;
    v25 = v22;

    objc_msgSend(*v8, "setTextColor:", *(_QWORD *)(v4 + v23));
    v26 = (_BYTE *)(v4 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitleIsCopyToPasteboardEnabled);
    *(_BYTE *)(v4 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitleIsCopyToPasteboardEnabled) = v3 & 1;
  }
  else
  {
    v13 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy28FMLabelTableViewLocationCell_locationView);
    v14 = v13 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitle;
    v15 = *(_QWORD *)(v13 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitle + 8);
    *(_OWORD *)(v13 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitle) = xmmword_100484D30;
    swift_bridgeObjectRelease(v15);
    v8 = (id *)(v13 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_secondaryLabel);
    v16 = *(void **)(v13 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_secondaryLabel);
    v17 = *(_QWORD *)(v14 + 8);
    v18 = v16;
    if (v17)
    {
      swift_bridgeObjectRetain(v17);
      v19 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v17);
    }
    else
    {
      v19 = 0;
    }
    objc_msgSend(v16, "setText:", v19);

    v27 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
    v28 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitleColor;
    v29 = *(void **)(v13 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitleColor);
    *(_QWORD *)(v13 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitleColor) = v27;
    v30 = v27;

    objc_msgSend(*v8, "setTextColor:", *(_QWORD *)(v13 + v28));
    v5 = 0;
    v26 = (_BYTE *)(v13 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitleIsCopyToPasteboardEnabled);
    *(_BYTE *)(v13 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitleIsCopyToPasteboardEnabled) = 0;
  }
  result = objc_msgSend(*v8, "setUserInteractionEnabled:", v5);
  *((_BYTE *)*v8 + OBJC_IVAR____TtC6FindMy15FMCopyableLabel_isCopyToPasteboardEnabled) = *v26;
  return result;
}

id sub_100382D8C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMLabelTableViewLocationCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMLabelTableViewLocationCell()
{
  return objc_opt_self(_TtC6FindMy28FMLabelTableViewLocationCell);
}

void sub_100382E18()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String v9;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  Swift::String v15;

  v1 = v0;
  v2 = sub_100053F2C((uint64_t *)&unk_1005E4430);
  __chkstk_darwin(v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC6FindMy28FMLabelTableViewLocationCell_locationView;
  v13 = 0;
  v14 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v14);
  v6 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v15._countAndFlagsBits = 0xD000000000000026;
  v15._object = (void *)0x80000001004C30F0;
  v7._object = (void *)0x80000001004C30D0;
  v7._countAndFlagsBits = 0xD000000000000014;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v15);

  v10 = type metadata accessor for FMPlatterIcon(0);
  swift_storeEnumTagMultiPayload(v4, v10, 14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 0, 1, v10);
  v11 = objc_allocWithZone((Class)type metadata accessor for FMMultiSettingsRowView());
  *(_QWORD *)&v1[v5] = sub_100430344(v9._countAndFlagsBits, (uint64_t)v9._object, 1, (uint64_t)v4, 0, 1, 0, 0.0);
  v12 = &v1[OBJC_IVAR____TtC6FindMy28FMLabelTableViewLocationCell_displayAddress];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  *((_WORD *)v12 + 8) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMLabelTableViewLocationCell.swift", 41, 2, 37, 0);
  __break(1u);
}

uint64_t type metadata accessor for FMPerformanceTestRunner()
{
  return objc_opt_self(_TtC6FindMy23FMPerformanceTestRunner);
}

uint64_t sub_100383010(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  uint64_t v22;
  char *v23;
  id v24;
  id v25;
  _BYTE v27[24];
  char v28[24];

  v2 = v1;
  v4 = sub_100053F2C(&qword_1005D5D08);
  __chkstk_darwin(v4);
  v6 = &v27[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for FMSelectedSection(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __chkstk_darwin(v9);
  v14 = &v27[-v13];
  __chkstk_darwin(v12);
  v16 = &v27[-v15];
  v17 = type metadata accessor for FMPerformanceTestCase(0);
  sub_10004C0BC(a1 + *(int *)(v17 + 20), (uint64_t)v6);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_100348F3C((uint64_t)v6);
  }
  else
  {
    sub_10004C860((uint64_t)v6, (uint64_t)v16);
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 56);
    sub_100024F3C((uint64_t)v16, (uint64_t)v14);
    v19 = v18 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
    swift_beginAccess(v18 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, v28, 0, 0);
    sub_100024F3C(v19, (uint64_t)v11);
    swift_beginAccess(v19, v27, 33, 0);
    swift_retain(v18);
    sub_100009DF8((uint64_t)v14, v19);
    swift_endAccess(v27);
    sub_10004C8A4((uint64_t)v11);
    sub_100024F00((uint64_t)v14);
    sub_100024F00((uint64_t)v11);
    swift_release(v18);
    sub_100024F00((uint64_t)v16);
  }
  v20 = *(char **)(v2 + 24);
  v21 = *(void **)&v20[OBJC_IVAR____TtC6FindMy20FMMainViewController_initialCardContainer];
  v22 = qword_1005D1C38;
  v23 = v20;
  v24 = v21;
  if (v22 != -1)
    swift_once(&qword_1005D1C38, sub_10014758C);
  v25 = sub_1001475D0((uint64_t)v24, *(double *)&xmmword_1005F4F80, *((double *)&xmmword_1005F4F80 + 1));

  objc_msgSend((id)objc_opt_self(RPTTestRunner), "runTestWithParameters:", v25);
  swift_unknownObjectRelease(v25);
  return 1;
}

void sub_100383278(uint64_t a1)
{
  sub_100007B48(a1, 0xD000000000000011, 0x80000001004C3340, &qword_1005E1CC0);
}

void sub_10038329C(uint64_t a1)
{
  sub_100007B48(a1, 0xD000000000000018, 0x80000001004C3320, &qword_1005E1CC8);
}

void sub_100383414()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  Class isa;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy20FMBatteryWrapperView_batteryView];
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v1, "addSubview:", v2);
  v3 = (void *)objc_opt_self(NSLayoutConstraint);
  v4 = sub_100053F2C(&qword_1005D2F10);
  v5 = swift_allocObject(v4, 72, 7);
  *(_OWORD *)(v5 + 16) = xmmword_1004820D0;
  v6 = objc_msgSend(v1, "leadingAnchor");
  v7 = objc_msgSend(v2, "leadingAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

  *(_QWORD *)(v5 + 32) = v8;
  v9 = objc_msgSend(v1, "trailingAnchor");
  v10 = objc_msgSend(v2, "trailingAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

  *(_QWORD *)(v5 + 40) = v11;
  v12 = objc_msgSend(v1, "topAnchor");
  v13 = objc_msgSend(v2, "topAnchor");
  v14 = objc_msgSend(v12, "constraintLessThanOrEqualToAnchor:", v13);

  *(_QWORD *)(v5 + 48) = v14;
  v15 = objc_msgSend(v1, "bottomAnchor");
  v16 = objc_msgSend(v2, "bottomAnchor");
  v17 = objc_msgSend(v15, "constraintGreaterThanOrEqualToAnchor:", v16);

  *(_QWORD *)(v5 + 56) = v17;
  v18 = objc_msgSend(v1, "centerYAnchor");
  v19 = objc_msgSend(v2, "centerYAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:", v19);

  *(_QWORD *)(v5 + 64) = v20;
  specialized Array._endMutation()(v21);
  sub_100048C64();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v3, "activateConstraints:", isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

}

id sub_1003836DC()
{
  return sub_1000E0A1C(type metadata accessor for FMBatteryWrapperView);
}

uint64_t type metadata accessor for FMBatteryWrapperView()
{
  return objc_opt_self(_TtC6FindMy20FMBatteryWrapperView);
}

void sub_100383774(void *a1)
{
  char *v1;
  uint64_t v3;
  char *v4;
  NSString v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  NSString v10;
  id v11;
  id v12;
  NSString v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  objc_super v18;

  v3 = OBJC_IVAR____TtC6FindMy13FMBatteryView_outlineView;
  v4 = v1;
  v5 = String._bridgeToObjectiveC()();
  v6 = (void *)objc_opt_self(UIImage);
  v7 = objc_msgSend(v6, "imageNamed:", v5);

  v8 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v7);
  *(_QWORD *)&v1[v3] = v8;
  v9 = OBJC_IVAR____TtC6FindMy13FMBatteryView_chargingView;
  v10 = String._bridgeToObjectiveC()();
  v11 = objc_msgSend(v6, "imageNamed:", v10);

  v12 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v11);
  *(_QWORD *)&v4[v9] = v12;
  v13 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend(v6, "imageNamed:", v13);

  if (v14)
  {
    v15 = OBJC_IVAR____TtC6FindMy13FMBatteryView_levelView;
    v16 = objc_msgSend(v14, "imageWithRenderingMode:", 2);

    v17 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v16);
    *(_QWORD *)&v4[v15] = v17;
    v4[OBJC_IVAR____TtC6FindMy13FMBatteryView_isCharging] = 0;
    *(_QWORD *)&v4[OBJC_IVAR____TtC6FindMy13FMBatteryView_level] = 0;
    v4[OBJC_IVAR____TtC6FindMy13FMBatteryView_isLowPowerEnabled] = 0;
    v4[OBJC_IVAR____TtC6FindMy13FMBatteryView_shouldShowLowPowerWarning] = 0;

    v18.receiver = v4;
    v18.super_class = (Class)type metadata accessor for FMBatteryView();
    objc_msgSendSuper2(&v18, "initWithCoder:", a1);

  }
  else
  {
    __break(1u);
  }
}

id sub_1003839D0()
{
  return sub_1000E0A1C(type metadata accessor for FMBatteryView);
}

char *sub_1003839DC(char *a1, char **a2, uint64_t a3)
{
  int v3;
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  char *v19;
  char *v20;
  char *v21;
  char *v23;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain(v4);
  }
  else
  {
    v5 = a1;
    v7 = a2[1];
    v6 = a2[2];
    *((_QWORD *)a1 + 1) = v7;
    *((_QWORD *)a1 + 2) = v6;
    v9 = a2[3];
    v8 = a2[4];
    *((_QWORD *)a1 + 3) = v9;
    *((_QWORD *)a1 + 4) = v8;
    v11 = a2[5];
    v10 = a2[6];
    *((_QWORD *)a1 + 5) = v11;
    *((_QWORD *)a1 + 6) = v10;
    a1[56] = *((_BYTE *)a2 + 56);
    v13 = a2[8];
    v12 = a2[9];
    *((_QWORD *)a1 + 8) = v13;
    *((_QWORD *)a1 + 9) = v12;
    v14 = a2[10];
    v15 = *(int *)(a3 + 48);
    v23 = &a1[v15];
    v16 = (uint64_t)a2 + v15;
    *((_QWORD *)a1 + 10) = v14;
    v17 = type metadata accessor for PeopleListPersonRow.State(0);
    v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    v19 = v4;
    v20 = v7;
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v11);
    v21 = v13;
    swift_bridgeObjectRetain(v14);
    v18(v23, v16, v17);
  }
  return v5;
}

uint64_t sub_100383ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 40));

  swift_bridgeObjectRelease(*(_QWORD *)(a1 + 80));
  v4 = a1 + *(int *)(a2 + 48);
  v5 = type metadata accessor for PeopleListPersonRow.State(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_100383B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  id v15;
  id v16;
  id v17;
  uint64_t v19;

  v4 = *(void **)a2;
  v5 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v9 = *(void **)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v8;
  v10 = *(_QWORD *)(a2 + 80);
  v11 = *(int *)(a3 + 48);
  v19 = a1 + v11;
  v12 = a2 + v11;
  *(_QWORD *)(a1 + 80) = v10;
  v13 = type metadata accessor for PeopleListPersonRow.State(0);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  v15 = v4;
  v16 = v5;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  v17 = v9;
  swift_bridgeObjectRetain(v10);
  v14(v19, v12, v13);
  return a1;
}

uint64_t sub_100383C24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  v9 = *(void **)(a1 + 8);
  v10 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v10;
  v11 = v10;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v12 = *(_QWORD *)(a2 + 24);
  v13 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v14 = *(_QWORD *)(a2 + 40);
  v15 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v14;
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRelease(v15);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v16 = *(void **)(a1 + 64);
  v17 = *(void **)(a2 + 64);
  *(_QWORD *)(a1 + 64) = v17;
  v18 = v17;

  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v19 = *(_QWORD *)(a2 + 80);
  v20 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v20);
  v21 = *(int *)(a3 + 48);
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = type metadata accessor for PeopleListPersonRow.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
  return a1;
}

uint64_t sub_100383D2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v5 = *(int *)(a3 + 48);
  v6 = a1 + v5;
  v7 = a2 + v5;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v8 = type metadata accessor for PeopleListPersonRow.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_100383DB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v10;
  swift_bridgeObjectRelease(v11);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v12 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);

  v13 = *(_QWORD *)(a2 + 80);
  v14 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v13;
  swift_bridgeObjectRelease(v14);
  v15 = *(int *)(a3 + 48);
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = type metadata accessor for PeopleListPersonRow.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t sub_100383E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100383E88);
}

uint64_t sub_100383E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for PeopleListPersonRow.State(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 48), a2, v8);
  }
}

uint64_t sub_100383F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100383F10);
}

uint64_t sub_100383F10(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for PeopleListPersonRow.State(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 48), a2, a2, v7);
  }
  return result;
}

uint64_t sub_100383F84(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[9];

  v4[0] = "\b";
  v4[1] = "\b";
  v4[2] = &unk_10048E2A0;
  v4[3] = &unk_10048E2A0;
  v4[4] = (char *)&value witness table for Builtin.Int64 + 64;
  v4[5] = &unk_10048E2B8;
  v4[6] = "\b";
  v4[7] = &unk_10048E2A0;
  result = type metadata accessor for PeopleListPersonRow.State(319);
  if (v3 <= 0x3F)
  {
    v4[8] = *(_QWORD *)(result - 8) + 64;
    swift_initStructMetadata(a1, 256, 9, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_100384020(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::UInt64 v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = v1;
  v4 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    Hasher._combine(_:)(1u);
    v5 = v4;
    NSObject.hash(into:)(a1);

    v6 = *(void **)(v2 + 8);
    if (v6)
    {
LABEL_3:
      Hasher._combine(_:)(1u);
      v7 = v6;
      NSObject.hash(into:)(a1);

      goto LABEL_6;
    }
  }
  else
  {
    Hasher._combine(_:)(0);
    v6 = *(void **)(v1 + 8);
    if (v6)
      goto LABEL_3;
  }
  Hasher._combine(_:)(0);
LABEL_6:
  v8 = *(_QWORD *)(v2 + 16);
  v9 = *(_QWORD *)(v2 + 24);
  swift_bridgeObjectRetain(v9);
  String.hash(into:)(a1, v8, v9);
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 40);
  swift_bridgeObjectRetain(v11);
  String.hash(into:)(a1, v10, v11);
  swift_bridgeObjectRelease(v11);
  if ((*(_QWORD *)(v2 + 48) & 0x7FFFFFFFFFFFFFFFLL) != 0)
    v12 = *(_QWORD *)(v2 + 48);
  else
    v12 = 0;
  Hasher._combine(_:)(v12);
  Hasher._combine(_:)(*(_BYTE *)(v2 + 56));
  v13 = *(void **)(v2 + 64);
  if (v13)
  {
    Hasher._combine(_:)(1u);
    v14 = v13;
    NSObject.hash(into:)(a1);

  }
  else
  {
    Hasher._combine(_:)(0);
  }
  v15 = *(_QWORD *)(v2 + 72);
  v16 = *(_QWORD *)(v2 + 80);
  swift_bridgeObjectRetain(v16);
  String.hash(into:)(a1, v15, v16);
  swift_bridgeObjectRelease(v16);
  type metadata accessor for FMMeCellViewModel(0);
  v17 = type metadata accessor for PeopleListPersonRow.State(0);
  v18 = sub_100008000(&qword_1005D4798, (uint64_t (*)(uint64_t))&type metadata accessor for PeopleListPersonRow.State, (uint64_t)&protocol conformance descriptor for PeopleListPersonRow.State);
  return dispatch thunk of Hashable.hash(into:)(a1, v17, v18);
}

void *sub_1003841C4()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 64);
  v2 = v1;
  return v1;
}

uint64_t sub_1003841E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 80));
  return v1;
}

uint64_t sub_100384214()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 40));
  return v1;
}

double sub_100384240()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

uint64_t sub_100384248()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 56);
}

Swift::Int sub_100384250()
{
  _QWORD v1[9];

  Hasher.init(_seed:)(v1, 0);
  sub_100384020((uint64_t)v1);
  return Hasher._finalize()();
}

Swift::Int sub_100384290(uint64_t a1)
{
  _QWORD v2[9];

  Hasher.init(_seed:)(v2, a1);
  sub_100384020((uint64_t)v2);
  return Hasher._finalize()();
}

uint64_t sub_1003842C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  if (v4 == v6 && v5 == v7)
    return 1;
  else
    return _stringCompareWithSmolCheck(_:_:expecting:)(v4, v5, v6, v7, 0);
}

id sub_1003842F8()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)CNContactStore), "init");
  qword_1005E1E50 = (uint64_t)result;
  return result;
}

void sub_100384328()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(CNAvatarImageRendererSettings), "offMainThreadSynchronousRenderingOnlySettingsWithCacheSize:", 0);
  v1 = objc_msgSend(objc_allocWithZone((Class)CNAvatarImageRenderer), "initWithSettings:", v0);

  qword_1005E1E58 = (uint64_t)v1;
}

void sub_100384558()
{
  void *v0;
  uint64_t v1;
  char *v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  void *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  NSString v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  Class isa;
  double v23;
  id v24;
  id v25;
  int v26;
  void *v27;
  id v28;
  id v29;
  double v30;
  double v31;
  double v32;
  double v33;
  void *v34;
  double v35;
  id v36;
  void *v37;
  uint64_t v38;
  id v39;
  id v40;
  Class v41;
  UIImage *v42;
  NSData *v43;
  NSData *v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  char *v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  double v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t, unint64_t, _QWORD);
  UIImage *v81;
  void *v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  double v99;
  __int128 v100;
  uint64_t v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  uint64_t v108;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v1 = type metadata accessor for Logger(0);
  sub_100056D88(v1, (uint64_t)qword_1005F5748);
  v2 = v0;
  v3 = Logger.logObject.getter(v2);
  v4 = static os_log_type_t.default.getter(v3);
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc(12, -1);
    v6 = (void *)swift_slowAlloc(32, -1);
    *(_DWORD *)v5 = 136315138;
    v90 = v6;
    v7 = *(_OWORD *)&v2[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 80];
    v106 = *(_OWORD *)&v2[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 64];
    v107 = v7;
    v108 = *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 96];
    v8 = *(_OWORD *)&v2[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 16];
    v102 = *(_OWORD *)&v2[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request];
    v103 = v8;
    v9 = *(_OWORD *)&v2[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 48];
    v104 = *(_OWORD *)&v2[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 32];
    v105 = v9;
    v10 = sub_1000DFF68();
    v12 = v11;
    v89 = sub_100056DA0(v10, v11, (uint64_t *)&v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v89, &v90);

    swift_bridgeObjectRelease(v12);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "FMPersonImageCreationOperation: started for filename: %s", v5, 0xCu);
    swift_arrayDestroy(v6, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v6, -1, -1);
    swift_slowDealloc(v5, -1, -1);

  }
  else
  {

  }
  v13 = &v2[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request];
  v15 = *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 16];
  v14 = *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 24];
  if (!v14)
    goto LABEL_18;
  if (qword_1005D1FC0 != -1)
    swift_once(&qword_1005D1FC0, sub_1003842F8);
  v16 = (void *)qword_1005E1E50;
  v17 = String._bridgeToObjectiveC()();
  v18 = sub_100053F2C(&qword_1005D2F10);
  v19 = swift_allocObject(v18, 40, 7);
  *(_OWORD *)(v19 + 16) = xmmword_100481B00;
  v20 = objc_msgSend((id)objc_opt_self(CNAvatarImageRenderer), "descriptorForRequiredKeys");
  *(_QWORD *)(v19 + 32) = v20;
  v90 = (id)v19;
  specialized Array._endMutation()(v20);
  v21 = v90;
  sub_100053F2C(&qword_1005D2410);
  isa = Array._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v23 = swift_bridgeObjectRelease(v21).n128_u64[0];
  v90 = 0;
  v24 = objc_msgSend(v16, "unifiedContactWithIdentifier:keysToFetch:error:", v17, isa, &v90, v23);

  v25 = v90;
  if (!v24)
  {
    v62 = v90;
    v63 = _convertNSErrorToError(_:)(v25);

    swift_willThrow(v64);
    swift_errorRelease(v63);
LABEL_18:
    v65 = *((_QWORD *)v13 + 1);
    v66 = *((_QWORD *)v13 + 4);
    v67 = *((_QWORD *)v13 + 5);
    v68 = v13[48];
    v69 = *((_QWORD *)v13 + 7);
    v70 = *((_QWORD *)v13 + 8);
    v71 = *((double *)v13 + 9);
    v72 = *((_QWORD *)v13 + 12);
    v90 = *(id *)v13;
    v91 = v65;
    v92 = v15;
    v93 = v14;
    v94 = v66;
    v95 = v67;
    v96 = v68;
    v97 = v69;
    v98 = v70;
    v99 = v71;
    v100 = *((_OWORD *)v13 + 5);
    v101 = v72;
    sub_100384CD4((uint64_t)&v90);
    return;
  }
  v84 = *((_QWORD *)v13 + 10);
  v26 = v13[48];
  v27 = (void *)objc_opt_self(UIScreen);
  v28 = v25;
  v29 = objc_msgSend(v27, "mainScreen");
  objc_msgSend(v29, "scale");
  v31 = v30;

  v83 = v26;
  v32 = 38.0;
  if (v26)
    v32 = 66.0;
  v33 = v32 * v31;
  v34 = (void *)objc_opt_self(CNAvatarImageRenderingScope);
  v35 = *((double *)v13 + 9);
  v36 = objc_msgSend(v34, "scopeWithPointSize:scale:rightToLeft:style:", v84 == 1, 0, v33, v33, v35);
  if (qword_1005D1FC8 != -1)
    swift_once(&qword_1005D1FC8, sub_100384328);
  v37 = (void *)qword_1005E1E58;
  v38 = swift_allocObject(v18, 40, 7);
  *(_OWORD *)(v38 + 16) = xmmword_100481B00;
  *(_QWORD *)(v38 + 32) = v24;
  v90 = (id)v38;
  specialized Array._endMutation()(v38);
  v39 = v90;
  sub_100187E20();
  v40 = v24;
  v41 = Array._bridgeToObjectiveC()().super.isa;
  v42 = (UIImage *)objc_msgSend(v37, "avatarImageForContacts:scope:", v41, v36, swift_bridgeObjectRelease(v39).n128_f64[0]);

  v43 = UIImagePNGRepresentation(v42);
  if (v43)
  {
    v44 = v43;
    v81 = v42;
    v82 = v40;
    v86 = v36;
    v45 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v43);
    v47 = v46;

    v48 = v2;
    v49 = Logger.logObject.getter(v48);
    v50 = static os_log_type_t.default.getter(v49);
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc(12, -1);
      v85 = swift_slowAlloc(32, -1);
      *(_DWORD *)v51 = 136315138;
      v89 = v85;
      v52 = *((_QWORD *)v13 + 1);
      v53 = *((_QWORD *)v13 + 4);
      v54 = *((_QWORD *)v13 + 5);
      v55 = *((_QWORD *)v13 + 7);
      v56 = *((_QWORD *)v13 + 8);
      v57 = *((_QWORD *)v13 + 11);
      v58 = *((_QWORD *)v13 + 12);
      v90 = *(id *)v13;
      v91 = v52;
      v92 = v15;
      v93 = v14;
      v94 = v53;
      v95 = v54;
      v96 = v83;
      v97 = v55;
      v98 = v56;
      v99 = v35;
      *(_QWORD *)&v100 = v84;
      *((_QWORD *)&v100 + 1) = v57;
      v101 = v58;
      v59 = sub_1000DFF68();
      v61 = v60;
      v87 = sub_100056DA0(v59, v60, &v89);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v87, &v88);

      swift_bridgeObjectRelease(v61);
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "FMPersonImageCreationOperation: loaded monogram for filename: %s", v51, 0xCu);
      swift_arrayDestroy(v85, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v85, -1, -1);
      swift_slowDealloc(v51, -1, -1);

    }
    else
    {

    }
    v80 = *(void (**)(uint64_t, unint64_t, _QWORD))&v48[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_completion];
    sub_100027B98(v45, v47);
    v80(v45, v47, 0);
    sub_100027BDC(v45, v47);
    objc_msgSend(v48, "setFinished:", 1);
    swift_unknownObjectRelease(v86);

    sub_100027BDC(v45, v47);
  }
  else
  {
    v73 = *((_QWORD *)v13 + 1);
    v74 = *((_QWORD *)v13 + 4);
    v75 = *((_QWORD *)v13 + 5);
    v76 = *((_QWORD *)v13 + 7);
    v77 = *((_QWORD *)v13 + 8);
    v78 = *((_QWORD *)v13 + 11);
    v79 = *((_QWORD *)v13 + 12);
    v90 = *(id *)v13;
    v91 = v73;
    v92 = v15;
    v93 = v14;
    v94 = v74;
    v95 = v75;
    v96 = v26;
    v97 = v76;
    v98 = v77;
    v99 = v35;
    *(_QWORD *)&v100 = v84;
    *((_QWORD *)&v100 + 1) = v78;
    v101 = v79;
    sub_100384CD4((uint64_t)&v90);
    swift_unknownObjectRelease(v36);

  }
}

id sub_100384CD4(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, _QWORD, uint64_t);
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, unint64_t, _QWORD);
  void *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;

  v2 = v1;
  v3 = sub_1003852C8(a1);
  if (v4 >> 60 == 15)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v5 = type metadata accessor for Logger(0);
    sub_100056D88(v5, (uint64_t)qword_1005F5748);
    v6 = v1;
    v7 = Logger.logObject.getter(v6);
    v8 = static os_log_type_t.default.getter(v7);
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc(12, -1);
      v10 = swift_slowAlloc(32, -1);
      v41 = v10;
      *(_DWORD *)v9 = 136315138;
      v11 = *(_OWORD *)&v6[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 80];
      v46 = *(_OWORD *)&v6[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 64];
      v47 = v11;
      v48 = *(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 96];
      v12 = *(_OWORD *)&v6[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 16];
      v42 = *(_OWORD *)&v6[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request];
      v43 = v12;
      v13 = *(_OWORD *)&v6[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 48];
      v44 = *(_OWORD *)&v6[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 32];
      v45 = v13;
      v14 = sub_1000DFF68();
      v16 = v15;
      v40 = sub_100056DA0(v14, v15, &v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41);

      swift_bridgeObjectRelease(v16);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "FMPersonImageCreationOperation: Failed to load silouhette filename: %s", v9, 0xCu);
      swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v10, -1, -1);
      swift_slowDealloc(v9, -1, -1);

    }
    else
    {

    }
    v32 = *(void (**)(uint64_t, _QWORD, uint64_t))&v6[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_completion];
    v33 = type metadata accessor for FMImageCacheError(0);
    v34 = sub_100385408();
    v35 = swift_allocError(v33, v34, 0, 0);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v36, enum case for FMImageCacheError.unknownError(_:), v33);
    v32(v35, 0, 1);
    swift_errorRelease(v35);
  }
  else
  {
    v17 = v3;
    v18 = v4;
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v19 = type metadata accessor for Logger(0);
    sub_100056D88(v19, (uint64_t)qword_1005F5748);
    v20 = v1;
    v21 = Logger.logObject.getter(v20);
    v22 = static os_log_type_t.default.getter(v21);
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc(12, -1);
      v39 = v1;
      v24 = swift_slowAlloc(32, -1);
      v41 = v24;
      *(_DWORD *)v23 = 136315138;
      v25 = *(_OWORD *)&v20[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 80];
      v46 = *(_OWORD *)&v20[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 64];
      v47 = v25;
      v48 = *(_QWORD *)&v20[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 96];
      v26 = *(_OWORD *)&v20[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 16];
      v42 = *(_OWORD *)&v20[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request];
      v43 = v26;
      v27 = *(_OWORD *)&v20[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 48];
      v44 = *(_OWORD *)&v20[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request + 32];
      v45 = v27;
      v28 = sub_1000DFF68();
      v30 = v29;
      v40 = sub_100056DA0(v28, v29, &v41);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, &v41);

      swift_bridgeObjectRelease(v30);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "FMPersonImageCreationOperation: loaded silouhette for filename: %s", v23, 0xCu);
      swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
      v31 = v24;
      v2 = v39;
      swift_slowDealloc(v31, -1, -1);
      swift_slowDealloc(v23, -1, -1);

    }
    else
    {

    }
    v37 = *(void (**)(uint64_t, unint64_t, _QWORD))&v20[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_completion];
    sub_100027B98(v17, v18);
    v37(v17, v18, 0);
    sub_10005F8F8(v17, v18);
    sub_10005F8F8(v17, v18);
  }
  return objc_msgSend(v2, "setFinished:", 1);
}

id sub_100385130()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPersonImageCacheOperation();
  return objc_msgSendSuper2(&v2, "dealloc");
}

id sub_1003851E0(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  objc_class *v12;
  _BYTE *v13;
  char *v14;
  _QWORD *v15;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  objc_super v20;

  v18 = a1[1];
  v19 = *a1;
  v5 = *((_QWORD *)a1 + 4);
  v6 = *((_QWORD *)a1 + 5);
  v7 = *((_BYTE *)a1 + 48);
  v8 = *((_QWORD *)a1 + 7);
  v9 = *((_QWORD *)a1 + 8);
  v10 = *((_QWORD *)a1 + 9);
  v17 = a1[5];
  v11 = *((_QWORD *)a1 + 12);
  v12 = (objc_class *)type metadata accessor for FMPersonImageCacheOperation();
  v13 = objc_allocWithZone(v12);
  v13[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation__isFinished] = 0;
  v14 = &v13[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_request];
  *(_OWORD *)v14 = v19;
  *((_OWORD *)v14 + 1) = v18;
  *((_QWORD *)v14 + 4) = v5;
  *((_QWORD *)v14 + 5) = v6;
  v14[48] = v7;
  *((_QWORD *)v14 + 7) = v8;
  *((_QWORD *)v14 + 8) = v9;
  *((_QWORD *)v14 + 9) = v10;
  *((_OWORD *)v14 + 5) = v17;
  *((_QWORD *)v14 + 12) = v11;
  v15 = &v13[OBJC_IVAR____TtC6FindMy27FMPersonImageCacheOperation_completion];
  *v15 = a2;
  v15[1] = a3;
  v20.receiver = v13;
  v20.super_class = v12;
  return objc_msgSendSuper2(&v20, "init");
}

uint64_t sub_1003852C8(uint64_t a1)
{
  id v2;
  int v3;
  id v4;
  double v5;
  double v6;
  double v7;
  UIImage *v8;
  NSData *v9;
  uint64_t v10;

  if (qword_1005D1FC8 != -1)
    swift_once(&qword_1005D1FC8, sub_100384328);
  v2 = objc_msgSend((id)qword_1005E1E58, "placeholderImageProvider");
  v3 = *(unsigned __int8 *)(a1 + 48);
  v4 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v4, "scale");
  v6 = v5;

  v7 = 38.0;
  if (v3)
    v7 = 66.0;
  v8 = (UIImage *)objc_msgSend(v2, "imageForSize:scale:", v7 * v6, v7 * v6, *(double *)(a1 + 72));
  swift_unknownObjectRelease(v2);
  v9 = UIImagePNGRepresentation(v8);

  if (!v9)
    return 0;
  v10 = static Data._unconditionallyBridgeFromObjectiveC(_:)(v9);

  return v10;
}

unint64_t sub_100385408()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005E1EA8;
  if (!qword_1005E1EA8)
  {
    v1 = type metadata accessor for FMImageCacheError(255);
    result = swift_getWitnessTable(&protocol conformance descriptor for FMImageCacheError, v1);
    atomic_store(result, (unint64_t *)&qword_1005E1EA8);
  }
  return result;
}

void sub_100385450(void *a1, void *a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v33;
  double v35;
  void *v37;
  double v38;
  double *v39;
  unint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  id v51;
  void *v52;
  uint64_t v53;
  char *v54;
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD aBlock[5];
  uint64_t v62;
  CLLocationCoordinate2D v63;
  MKCoordinateRegion v64;

  v3 = v2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v60 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v58 = *(_QWORD *)(v9 - 8);
  v59 = v9;
  __chkstk_darwin(v9);
  v11 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for DispatchTime(0);
  v12 = *(_QWORD *)(v57 - 8);
  v13 = __chkstk_darwin(v57);
  v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = (char *)&v53 - v16;
  v18 = objc_msgSend(a2, "annotation");
  if (v18)
  {
    v19 = v18;
    v20 = type metadata accessor for FMFenceMapAnnotation(0);
    v21 = swift_dynamicCastClass(v19, v20);
    if (!v21)
    {
      swift_unknownObjectRelease(v19);
      return;
    }
    v22 = (char *)v21;
    v56 = v6;
    v23 = *(void **)&v3[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_selectedAnnotation];
    *(_QWORD *)&v3[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_selectedAnnotation] = v21;
    swift_unknownObjectRetain(v19);

    v24 = *(double *)&v22[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius];
    objc_msgSend(v22, "coordinate");
    v64 = MKCoordinateRegionMakeWithDistance(v63, v24 * 3.5, v24 * 3.5);
    objc_msgSend(a1, "regionThatFits:", v64.center.latitude, v64.center.longitude, v64.span.latitudeDelta, v64.span.longitudeDelta);
    v29 = v25;
    if (v26 >= -180.0 && v26 <= 180.0 && v25 >= -90.0 && v25 <= 90.0)
    {
      v33 = v27;
      if (v27 >= 0.0 && v27 <= 180.0)
      {
        v35 = v28;
        if (v28 >= 0.0 && v28 <= 360.0)
        {
          v37 = *(void **)&v3[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView];
          if (!v37)
          {
            __break(1u);
            return;
          }
          v38 = v26;
          objc_msgSend(v37, "setRegion:animated:", 1, v25);
          v39 = (double *)&v3[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_currentMapRegion];
          *v39 = v29;
          v39[1] = v38;
          v39[2] = v33;
          v39[3] = v35;
          *((_BYTE *)v39 + 32) = 0;
        }
      }
    }
    v40 = sub_1000555A8();
    v41 = (void *)static OS_dispatch_queue.main.getter(v40);
    static DispatchTime.now()(v41);
    + infix(_:_:)(v15, 0.5);
    v55 = *(void (**)(char *, uint64_t))(v12 + 8);
    v42 = v57;
    v55(v15, v57);
    v43 = swift_allocObject(&unk_10055EA38, 32, 7);
    *(_QWORD *)(v43 + 16) = v3;
    *(_QWORD *)(v43 + 24) = v22;
    aBlock[4] = sub_100386848;
    v62 = v43;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100037DF8;
    aBlock[3] = &unk_10055EA50;
    v44 = _Block_copy(aBlock);
    v45 = v62;
    swift_unknownObjectRetain(v19);
    v54 = v3;
    swift_release(v45);
    static DispatchQoS.unspecified.getter(v46);
    aBlock[0] = _swiftEmptyArrayStorage;
    v47 = sub_100056580();
    v48 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
    v49 = sub_1000555E4();
    v50 = v56;
    dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v48, v49, v56, v47);
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v17, v11, v8, v44);
    _Block_release(v44);

    (*(void (**)(char *, uint64_t))(v60 + 8))(v8, v50);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v11, v59);
    v55(v17, v42);
    v51 = objc_msgSend(v54, "navigationController");
    if (v51)
    {
      v52 = v51;
      objc_msgSend(v51, "setToolbarHidden:animated:", 0, 0);

    }
    swift_unknownObjectRelease(v19);
  }
}

void sub_1003858B8(uint64_t a1, uint64_t a2)
{
  void *v4;
  id v5;
  void *v6;

  v4 = *(void **)(a2 + OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_overlay);
  v5 = v4;
  sub_1003B1E9C((uint64_t)v4);

  v6 = *(void **)(a1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_dragView);
  if (v6)
  {
    objc_msgSend(v6, "addHandleForAnnotation:", a2);
    sub_1003B2EE4(*(_QWORD *)(a2 + OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius), 0);
  }
  else
  {
    __break(1u);
  }
}

id sub_100385AD4(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  NSString v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  NSString v22;
  id v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  _BOOL8 v31;
  id v32;
  _QWORD v34[2];
  _QWORD v35[2];
  _BYTE v36[24];

  v5 = sub_100053F2C(&qword_1005D3370);
  __chkstk_darwin(v5);
  v7 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a2, "coordinate");
  v35[0] = v8;
  v35[1] = v9;
  v10 = objc_msgSend(a1, "userLocation");
  objc_msgSend(v10, "coordinate");
  v12 = v11;
  v14 = v13;

  v34[0] = v12;
  v34[1] = v14;
  if (CLLocationCoordinate2DGetDistanceFrom(v35, v34) == 0.0)
  {
    v15 = objc_allocWithZone((Class)MKUserLocationView);
    swift_unknownObjectRetain(a2);
    v16 = String._bridgeToObjectiveC()();
    v17 = objc_msgSend(v15, "initWithAnnotation:reuseIdentifier:", a2, v16);

    objc_msgSend(v17, "setTintColor:", *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_style + 8), swift_unknownObjectRelease(a2).n128_f64[0]);
    return v17;
  }
  v18 = type metadata accessor for FMFenceMapAnnotation(0);
  v19 = swift_dynamicCastClass(a2, v18);
  if (!v19)
    return 0;
  v20 = v19;
  v21 = *(unsigned __int8 *)(v19 + OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_locationType);
  swift_unknownObjectRetain(a2);
  v22 = String._bridgeToObjectiveC()();
  v23 = objc_msgSend(a1, "dequeueReusableAnnotationViewWithIdentifier:", v22);

  if (!v23)
  {
    swift_unknownObjectRelease(a2);
    return 0;
  }
  v24 = objc_opt_self(MKMarkerAnnotationView);
  v25 = (void *)swift_dynamicCastObjCClass(v23, v24);
  v17 = v25;
  if (v25)
  {
    objc_msgSend(v25, "setDraggable:", 1);
    v26 = 24;
    if (v21)
      v26 = 32;
    v27 = *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_style + v26);
    v28 = v23;
    objc_msgSend(v17, "setMarkerTintColor:", v27);
    objc_msgSend(v17, "setAnnotation:", v20);

    v29 = v20 + OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_fmfPlacemark;
    swift_beginAccess(v29, v36, 0, 0);
    sub_1003867C0(v29, (uint64_t)v7);
    v30 = type metadata accessor for FMFAddress(0);
    v31 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v7, 1, v30) != 1;
    v32 = v28;
    sub_100386808((uint64_t)v7);
    objc_msgSend(v17, "setCanShowCallout:", v31);

    swift_unknownObjectRelease(a2);
  }
  else
  {
    swift_unknownObjectRelease(a2);

  }
  return v17;
}

id sub_100385E84(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 v9;
  _BYTE v12[24];

  v4 = sub_100053F2C(&qword_1005D3370);
  __chkstk_darwin(v4);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = a2 + OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_fmfPlacemark;
  swift_beginAccess(v7, v12, 0, 0);
  sub_1003867C0(v7, (uint64_t)v6);
  v8 = type metadata accessor for FMFAddress(0);
  v9 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8) != 1;
  sub_100386808((uint64_t)v6);
  return objc_msgSend(a1, "setCanShowCallout:", v9);
}

id sub_100385FD4(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  void *v12;
  double v13;
  id v14;
  id v15;
  id v16;

  v5 = objc_opt_self(MKCircle);
  v6 = swift_dynamicCastObjCClassUnconditional(a2, v5, 0, 0, 0);
  swift_unknownObjectRetain(a2);
  v7 = objc_msgSend(a1, "rendererForOverlay:", v6);
  if (!v7)
    goto LABEL_4;
  v8 = v7;
  v9 = objc_opt_self(MKCircleRenderer);
  v10 = (id)swift_dynamicCastObjCClass(v8, v9);
  if (!v10)
  {

LABEL_4:
    v10 = objc_msgSend(objc_allocWithZone((Class)MKCircleRenderer), "initWithCircle:", v6);
  }
  v11 = v2 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_style;
  v12 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_style + 8);
  v13 = *(double *)(v11 + 16);
  v14 = v10;
  v15 = objc_msgSend(v12, "colorWithAlphaComponent:", v13);
  objc_msgSend(v14, "setFillColor:", v15);

  objc_msgSend(v14, "setStrokeColor:", v12);
  v16 = v14;
  objc_msgSend(v16, "setLineWidth:", 2.0);

  swift_unknownObjectRelease(a2);
  return v16;
}

void sub_10038619C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  char v11;
  void *v12;
  id v13;

  v2 = v1;
  v3 = objc_msgSend(a1, "annotation");
  if (v3)
  {
    v4 = v3;
    v5 = type metadata accessor for FMFenceMapAnnotation(0);
    v6 = swift_dynamicCastClass(v4, v5);
    if (!v6)
      goto LABEL_7;
    v7 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_selectedAnnotation;
    v8 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_selectedAnnotation);
    if (!v8)
      goto LABEL_7;
    v9 = v6;
    swift_unknownObjectRetain(v4);
    v10 = v8;
    v11 = static NSObject.== infix(_:_:)(v9, v10);
    swift_unknownObjectRelease(v4);

    if ((v11 & 1) != 0)
    {
      v12 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_dragView);
      if (v12)
      {
        objc_msgSend(v12, "removeHandle:", 1);
        sub_1003B1E9C(0);
        v13 = *(id *)(v2 + v7);
        *(_QWORD *)(v2 + v7) = 0;
        swift_unknownObjectRelease(v4);

      }
      else
      {
        __break(1u);
      }
    }
    else
    {
LABEL_7:
      swift_unknownObjectRelease(v4);
    }
  }
}

void sub_1003862D0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v13;
  double v15;
  void *v17;
  double v18;
  uint64_t v19;
  CLLocationCoordinate2D v20;
  MKCoordinateRegion v21;

  v2 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_showingUserLocation;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_showingUserLocation) & 1) == 0)
  {
    v4 = objc_msgSend(a1, "userLocation");
    objc_msgSend(a1, "selectAnnotation:animated:", v4, 1);
    objc_msgSend(v4, "coordinate");
    v21 = MKCoordinateRegionMakeWithDistance(v20, 2817.5, 2817.5);
    objc_msgSend(a1, "regionThatFits:", v21.center.latitude, v21.center.longitude, v21.span.latitudeDelta, v21.span.longitudeDelta);
    v9 = v5;
    if (v6 >= -180.0 && v6 <= 180.0 && v5 >= -90.0 && v5 <= 90.0)
    {
      v13 = v7;
      if (v7 >= 0.0 && v7 <= 180.0)
      {
        v15 = v8;
        if (v8 >= 0.0 && v8 <= 360.0)
        {
          v17 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView);
          if (!v17)
          {
            __break(1u);
            return;
          }
          v18 = v6;
          objc_msgSend(v17, "setRegion:animated:", 1, v5);
          v19 = v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_currentMapRegion;
          *(double *)v19 = v9;
          *(double *)(v19 + 8) = v18;
          *(double *)(v19 + 16) = v13;
          *(double *)(v19 + 24) = v15;
          *(_BYTE *)(v19 + 32) = 0;
        }
      }
    }

    *(_BYTE *)(v1 + v2) = 1;
  }
}

void sub_100386460(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  unint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD aBlock[5];
  uint64_t v38;

  v3 = v2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)(a2 - 3) >= 2)
  {
    if (a2 == 1)
    {
      objc_msgSend(a1, "setCanShowCallout:", 0);
      v32 = *(void **)(v3 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_dragView);
      if (v32)
      {
        objc_msgSend(v32, "removeHandle:", 1);
        sub_1003B1E9C(0);
        return;
      }
      __break(1u);
LABEL_12:
      __break(1u);
    }
  }
  else
  {
    v14 = objc_msgSend(a1, "annotation");
    if (v14)
    {
      v15 = v14;
      v16 = type metadata accessor for FMFenceMapAnnotation(0);
      v17 = swift_dynamicCastClass(v15, v16);
      if (!v17)
      {
        swift_unknownObjectRelease(v15);
        return;
      }
      v18 = v17;
      v34 = v15;
      v35 = v7;
      sub_1003CD550();
      v19 = *(void **)(v18 + OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_overlay);
      v20 = v19;
      sub_1003B1E9C((uint64_t)v19);

      v21 = *(void **)(v3 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_dragView);
      if (v21)
      {
        objc_msgSend(v21, "addHandleForAnnotation:", v18);
        v33 = *(_QWORD *)(v18 + OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_didReverseGeocodeGroup);
        v22 = sub_1000555A8();
        v23 = (void *)static OS_dispatch_queue.main.getter(v22);
        v24 = swift_allocObject(&unk_10055E9E8, 32, 7);
        *(_QWORD *)(v24 + 16) = a1;
        *(_QWORD *)(v24 + 24) = v18;
        aBlock[4] = sub_1003867B8;
        v38 = v24;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100037DF8;
        aBlock[3] = &unk_10055EA00;
        v25 = _Block_copy(aBlock);
        v26 = a1;
        v27 = v34;
        v28 = swift_unknownObjectRetain(v34);
        static DispatchQoS.unspecified.getter(v28);
        v36 = _swiftEmptyArrayStorage;
        v29 = sub_100056580();
        v30 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
        v31 = sub_1000555E4();
        dispatch thunk of SetAlgebra.init<A>(_:)(&v36, v30, v31, v6, v29);
        OS_dispatch_group.notify(qos:flags:queue:execute:)(v13, v9, v23, v25);
        _Block_release(v25);

        (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v6);
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        swift_unknownObjectRelease(v27);
        swift_release(v38);
        return;
      }
      goto LABEL_12;
    }
  }
}

uint64_t sub_10038678C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_1003867B8()
{
  uint64_t v0;

  return sub_100385E84(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1003867C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C(&qword_1005D3370);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100386808(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_100053F2C(&qword_1005D3370);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100386848()
{
  uint64_t v0;

  sub_1003858B8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_10038685C(void *a1, uint64_t a2, uint64_t a3)
{
  id v6;
  id v7;
  NSString v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  void **v17;
  void **v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  void ***v22;
  void **v23;
  void **v24;
  uint64_t v25;
  void ***v26;
  _QWORD *v27;
  void *v28;
  void *v29;
  _QWORD *v30;
  void **v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  void **aBlock;
  _QWORD v38[4];
  _QWORD *v39;

  v6 = objc_msgSend(objc_allocWithZone((Class)AKAppleIDAuthenticationContext), "init");
  v7 = objc_msgSend((id)objc_opt_self(CDPAccount), "sharedInstance");
  v8 = v7;
  if (v7)
  {
    v9 = objc_msgSend(v7, "primaryAccountAltDSID");

    if (v9)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
      v11 = v10;

      v8 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v11);
    }
    else
    {
      v8 = 0;
    }
  }
  objc_msgSend(v6, "setAltDSID:", v8);

  objc_msgSend(v6, "setServiceType:", 1);
  v12 = objc_msgSend(objc_allocWithZone((Class)AAUISpinnerViewController), "initWithNibName:bundle:", 0, 0);
  v13 = objc_msgSend(objc_allocWithZone((Class)CDPUIDeviceToDeviceEncryptionHelper), "initWithPresentingViewController:", v12);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v14 = type metadata accessor for Logger(0);
  sub_100056D88(v14, (uint64_t)qword_1005F5748);
  v15 = v12;
  v16 = a1;
  v17 = (void **)v15;
  v18 = (void **)v16;
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(22, -1);
    v36 = a3;
    aBlock = v17;
    v22 = (void ***)swift_slowAlloc(16, -1);
    *(_DWORD *)v21 = 138412546;
    v34 = v13;
    v35 = a2;
    v23 = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v38);
    *v22 = v17;

    *(_WORD *)(v21 + 12) = 2112;
    aBlock = v18;
    v24 = v18;
    a2 = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v38);
    v22[1] = v18;

    v13 = v34;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "FMAppDelegate: upgrade controller - %@, presenter - %@", (uint8_t *)v21, 0x16u);
    v25 = sub_100053F2C((uint64_t *)&unk_1005D9680);
    swift_arrayDestroy(v22, 2, v25);
    v26 = v22;
    a3 = v36;
    swift_slowDealloc(v26, -1, -1);
    swift_slowDealloc(v21, -1, -1);

  }
  else
  {

  }
  v27 = (_QWORD *)swift_allocObject(&unk_10055EB00, 56, 7);
  v27[2] = v13;
  v27[3] = v6;
  v27[4] = v18;
  v27[5] = a2;
  v27[6] = a3;
  v38[3] = sub_100387B1C;
  v39 = v27;
  aBlock = _NSConcreteStackBlock;
  v38[0] = 1107296256;
  v38[1] = sub_100037DF8;
  v38[2] = &unk_10055EB18;
  v28 = v6;
  v29 = _Block_copy(&aBlock);
  v30 = v39;
  v31 = v18;
  v32 = v13;
  v33 = v28;
  swift_retain(a3);
  objc_msgSend(v31, "presentViewController:animated:completion:", v17, 1, v29, swift_release(v30).n128_f64[0]);
  _Block_release(v29);

}

BOOL sub_100386C34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v7;
  int v8;
  NSString v9;
  NSString v10;
  id v11;
  void *v12;
  id v13;
  Swift::String v14;
  Swift::String v15;
  void *object;
  uint64_t v17;
  NSString v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  Swift::String v23;
  Swift::String v24;
  void *v25;
  NSString v26;
  id v27;
  id v29;
  void **aBlock;
  unint64_t v31;
  void (*v32)(uint64_t, void *);
  void *v33;
  double (*v34)(uint64_t);
  uint64_t v35;
  Swift::String v36;
  Swift::String v37;

  v7 = (void *)a1;
  if (qword_1005D1CA8 != -1)
    a1 = swift_once(&qword_1005D1CA8, sub_1001D6884);
  v8 = sub_1001D68F8(a1);
  if (v8 == 1)
  {
    swift_bridgeObjectRetain(a5);
    swift_bridgeObjectRetain(a3);
    v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
    v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a5);
    v11 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v9, v10, 1);

    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(0xE000000000000000);
    v12 = (void *)objc_opt_self(NSBundle);
    v13 = objc_msgSend(v12, "mainBundle");
    v14._countAndFlagsBits = 0xD000000000000015;
    v36._countAndFlagsBits = 0xD000000000000027;
    v36._object = (void *)0x80000001004A7370;
    v14._object = (void *)0x80000001004A7350;
    v15._countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, (NSBundle)v13, v15, v36)._object;

    v17 = swift_allocObject(&unk_10055EA88, 24, 7);
    *(_QWORD *)(v17 + 16) = v7;
    v29 = v7;
    v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v34 = sub_100387554;
    v35 = v17;
    aBlock = _NSConcreteStackBlock;
    v31 = 1107296256;
    v32 = sub_100008B40;
    v33 = &unk_10055EAA0;
    v19 = _Block_copy(&aBlock);
    swift_release(v35);
    v20 = (void *)objc_opt_self(UIAlertAction);
    v21 = objc_msgSend(v20, "actionWithTitle:style:handler:", v18, 0, v19);
    _Block_release(v19);

    aBlock = 0;
    v31 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    v22 = objc_msgSend(v12, "mainBundle", swift_bridgeObjectRelease(v31).n128_f64[0]);
    v37._countAndFlagsBits = 0xD000000000000025;
    v37._object = (void *)0x80000001004A73C0;
    v23._object = (void *)0x80000001004A73A0;
    v23._countAndFlagsBits = 0xD000000000000013;
    v24._countAndFlagsBits = 0;
    v24._object = (void *)0xE000000000000000;
    v25 = NSLocalizedString(_:tableName:bundle:value:comment:)(v23, (Swift::String_optional)0, (NSBundle)v22, v24, v37)._object;

    v26 = String._bridgeToObjectiveC()();
    v27 = objc_msgSend(v20, "actionWithTitle:style:handler:", v26, 1, 0, swift_bridgeObjectRelease(v25).n128_f64[0]);

    objc_msgSend(v11, "addAction:", v21);
    objc_msgSend(v11, "addAction:", v27);
    if (v7)
      objc_msgSend(v29, "presentViewController:animated:completion:", v11, 1, 0);

  }
  return v8 != 1;
}

void sub_100386FC8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  id v7;

  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  swift_retain(v5);
  v7 = a3;
  v6(a2, a3);
  swift_release(v5);

}

void sub_100387028(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  _QWORD *v15;
  void *v16;
  _QWORD *v17;
  id v18;
  _QWORD v19[5];
  _QWORD *v20;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v10 = type metadata accessor for Logger(0);
  v11 = sub_100056D88(v10, (uint64_t)qword_1005F5748);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "FMAppDelegate: upgrade completion executed", v14, 2u);
    swift_slowDealloc(v14, -1, -1);
  }

  v15 = (_QWORD *)swift_allocObject(&unk_10055EB50, 40, 7);
  v15[2] = a3;
  v15[3] = a4;
  v15[4] = a5;
  v19[4] = sub_100387B58;
  v20 = v15;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  v19[2] = sub_100386FC8;
  v19[3] = &unk_10055EB68;
  v16 = _Block_copy(v19);
  v17 = v20;
  v18 = a3;
  swift_retain(a5);
  objc_msgSend(a1, "performDeviceToDeviceEncryptionStateRepairForContext:withCompletion:", a2, v16, swift_release(v17).n128_f64[0]);
  _Block_release(v16);
}

uint64_t sub_1003871B8(char a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[5];
  uint64_t v31;

  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v29 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v27 = *(_QWORD *)(v13 - 8);
  v28 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000555A8();
  v16 = (void *)static OS_dispatch_queue.main.getter();
  v17 = swift_allocObject(&unk_10055EBA0, 56, 7);
  *(_QWORD *)(v17 + 16) = a3;
  *(_QWORD *)(v17 + 24) = a4;
  *(_QWORD *)(v17 + 32) = a5;
  *(_BYTE *)(v17 + 40) = a1;
  *(_QWORD *)(v17 + 48) = a2;
  aBlock[4] = sub_100387B98;
  v31 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_10055EBB8;
  v18 = _Block_copy(aBlock);
  v19 = v31;
  v20 = a3;
  swift_retain(a5);
  swift_errorRetain(a2);
  swift_release(v19);
  static DispatchQoS.unspecified.getter(v21);
  aBlock[0] = _swiftEmptyArrayStorage;
  v22 = sub_100056580();
  v23 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v24 = sub_1000555E4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v23, v24, v10, v22);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v12, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v15, v28);
}

uint64_t sub_1003873B4(void *a1, uint64_t (*a2)(_QWORD, uint64_t), uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v9 = type metadata accessor for Logger(0);
  v10 = sub_100056D88(v9, (uint64_t)qword_1005F5748);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "FMAppDelegate: upgrade completion dispatched", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

  objc_msgSend(a1, "dismissViewControllerAnimated:completion:", 1, 0);
  return a2(a4 & 1, a5);
}

double sub_1003874CC(uint64_t a1, void *a2)
{
  uint64_t v3;
  id v4;
  double result;

  if (a2)
  {
    v3 = swift_allocObject(&unk_10055EAD8, 24, 7);
    *(_QWORD *)(v3 + 16) = a2;
    v4 = a2;
    sub_10038685C(v4, (uint64_t)sub_100387AD8, v3);

    *(_QWORD *)&result = swift_release(v3).n128_u64[0];
  }
  return result;
}

uint64_t sub_100387530()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_100387554(uint64_t a1)
{
  uint64_t v1;

  return sub_1003874CC(a1, *(void **)(v1 + 16));
}

void sub_10038755C(char a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  void *v19;
  id v20;
  Swift::String v21;
  Swift::String v22;
  void *object;
  id v24;
  Swift::String v25;
  Swift::String v26;
  void *v27;
  NSString v28;
  NSString v29;
  id v30;
  id v31;
  Swift::String v32;
  Swift::String v33;
  void *v34;
  NSString v35;
  id v36;
  NSObject *osloga;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  Swift::String v42;
  Swift::String v43;
  Swift::String v44;

  if (a2)
  {
    swift_errorRetain(a2);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v4 = type metadata accessor for Logger(0);
    sub_100056D88(v4, (uint64_t)qword_1005F5748);
    swift_errorRetain(a2);
    v5 = swift_errorRetain(a2);
    v6 = Logger.logObject.getter(v5);
    v7 = static os_log_type_t.default.getter(v6);
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(12, -1);
      v9 = swift_slowAlloc(32, -1);
      v39 = a2;
      v40 = v9;
      *(_DWORD *)v8 = 136315138;
      swift_errorRetain(a2);
      v10 = sub_100053F2C((uint64_t *)&unk_1005D2AC0);
      v11 = String.init<A>(describing:)(&v39, v10);
      v13 = v12;
      v39 = sub_100056DA0(v11, v12, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v39, &v40);
      swift_bridgeObjectRelease(v13);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMAppDelegate: upgrade error=%s", v8, 0xCu);
      swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v9, -1, -1);
      swift_slowDealloc(v8, -1, -1);
    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);
    }

    v40 = 0;
    v41 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v41);
    v19 = (void *)objc_opt_self(NSBundle);
    v20 = objc_msgSend(v19, "mainBundle");
    v42._countAndFlagsBits = 0xD00000000000002FLL;
    v42._object = (void *)0x80000001004C34C0;
    v21._object = (void *)0x80000001004C34A0;
    v21._countAndFlagsBits = 0xD00000000000001DLL;
    v22._countAndFlagsBits = 0;
    v22._object = (void *)0xE000000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v21, (Swift::String_optional)0, (NSBundle)v20, v22, v42)._object;

    v40 = 0;
    v41 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    v24 = objc_msgSend(v19, "mainBundle", swift_bridgeObjectRelease(v41).n128_f64[0]);
    v25._countAndFlagsBits = 0xD00000000000001FLL;
    v43._countAndFlagsBits = 0xD000000000000031;
    v43._object = (void *)0x80000001004C3510;
    v25._object = (void *)0x80000001004C34F0;
    v26._countAndFlagsBits = 0;
    v26._object = (void *)0xE000000000000000;
    v27 = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, (Swift::String_optional)0, (NSBundle)v24, v26, v43)._object;

    v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
    v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v27);
    v30 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v28, v29, 1);

    v40 = 0;
    v41 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    v31 = objc_msgSend(v19, "mainBundle", swift_bridgeObjectRelease(v41).n128_f64[0]);
    v44._countAndFlagsBits = 0xD000000000000021;
    v44._object = (void *)0x80000001004A5EE0;
    v32._countAndFlagsBits = 0x4F545455425F4B4FLL;
    v32._object = (void *)0xEF454C5449545F4ELL;
    v33._countAndFlagsBits = 0;
    v33._object = (void *)0xE000000000000000;
    v34 = NSLocalizedString(_:tableName:bundle:value:comment:)(v32, (Swift::String_optional)0, (NSBundle)v31, v33, v44)._object;

    v35 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v34);
    v36 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v35, 1, 0);

    objc_msgSend(v30, "addAction:", v36);
    objc_msgSend(a3, "presentViewController:animated:completion:", v30, 1, 0);

    swift_errorRelease(a2);
  }
  else
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v15 = type metadata accessor for Logger(0);
    v16 = sub_100056D88(v15, (uint64_t)qword_1005F5748);
    osloga = Logger.logObject.getter(v16);
    v17 = static os_log_type_t.default.getter(osloga);
    if (os_log_type_enabled(osloga, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v18 = 67109120;
      LODWORD(v40) = a1 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v40, (char *)&v40 + 4);
      _os_log_impl((void *)&_mh_execute_header, osloga, v17, "FMAppDelegate: didUpgrade=%{BOOL}d", v18, 8u);
      swift_slowDealloc(v18, -1, -1);

    }
    else
    {

    }
  }
}

void sub_100387AD8(char a1, uint64_t a2)
{
  uint64_t v2;

  sub_10038755C(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_100387AE0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_100387B1C()
{
  uint64_t v0;

  sub_100387028(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t sub_100387B2C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100387B58(char a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1003871B8(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_100387B64()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  swift_errorRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100387B98()
{
  uint64_t v0;

  return sub_1003873B4(*(void **)(v0 + 16), *(uint64_t (**)(_QWORD, uint64_t))(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

void sub_100387C54(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[24];
  objc_super v34;

  v2 = v1;
  v34.receiver = v2;
  v34.super_class = (Class)type metadata accessor for FMUnknownItemsViewController();
  objc_msgSendSuper2(&v34, "viewWillAppear:", a1 & 1);
  if (qword_1005D2070 != -1)
    swift_once(&qword_1005D2070, sub_1003CB89C);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100056D88(v4, (uint64_t)qword_1005F6010);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMUnknownItemsViewController: viewWillAppear", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  v9 = OBJC_IVAR____TtC6FindMy28FMUnknownItemsViewController_mediator;
  v10 = *(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy28FMUnknownItemsViewController_mediator] + 56);
  v11 = type metadata accessor for FMSelectionSubscription(0);
  v12 = swift_allocObject(v11, *(unsigned int *)(v11 + 48), *(unsigned __int16 *)(v11 + 52));
  v13 = v12 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
  *(_QWORD *)(v13 + 8) = 0;
  swift_unknownObjectWeakInit(v13);
  swift_retain(v10);
  v14 = v2;
  UUID.init()(v14);
  v15 = v12 + OBJC_IVAR____TtC6FindMy23FMSelectionSubscription_subscriber;
  *(_QWORD *)(v15 + 8) = &off_10055EC90;
  swift_unknownObjectWeakAssign(v15, v14);

  swift_beginAccess(v10 + 16, v33, 33, 0);
  v16 = swift_retain(v12);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16);
  v18 = *(_QWORD *)((*(_QWORD *)(v10 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v17 = *(_QWORD *)((*(_QWORD *)(v10 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v18 >= v17 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
  v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v12);
  specialized Array._endMutation()(v19);
  swift_endAccess(v33);
  swift_release(v10);
  v20 = *(_QWORD *)&v14[OBJC_IVAR____TtC6FindMy28FMUnknownItemsViewController_selectionSubscription];
  *(_QWORD *)&v14[OBJC_IVAR____TtC6FindMy28FMUnknownItemsViewController_selectionSubscription] = v12;
  swift_release(v20);
  v21 = *(_QWORD *)(*(_QWORD *)&v2[v9] + 24);
  v22 = type metadata accessor for FMDevicesSubscription(0);
  v23 = swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
  v24 = v23 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
  *(_QWORD *)(v24 + 8) = 0;
  swift_unknownObjectWeakInit(v24);
  v25 = v14;
  v26 = swift_retain(v21);
  UUID.init()(v26);
  v27 = v23 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
  *(_QWORD *)(v27 + 8) = &off_10055EBF0;
  swift_unknownObjectWeakAssign(v27, v25);

  swift_beginAccess(v21 + 16, v33, 33, 0);
  v28 = swift_retain(v23);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v28);
  v30 = *(_QWORD *)((*(_QWORD *)(v21 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v29 = *(_QWORD *)((*(_QWORD *)(v21 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v30 >= v29 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v29 > 1, v30 + 1, 1);
  v31 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v30, v23);
  specialized Array._endMutation()(v31);
  swift_endAccess(v33);
  swift_release(v21);
  v32 = *(_QWORD *)&v25[OBJC_IVAR____TtC6FindMy28FMUnknownItemsViewController_deviceSubscription];
  *(_QWORD *)&v25[OBJC_IVAR____TtC6FindMy28FMUnknownItemsViewController_deviceSubscription] = v23;
  swift_release(v32);
  sub_10038858C();
}

uint64_t sub_100387FBC(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  objc_class *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  __objc2_meth_list **p_opt_inst_meths;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t EnumCaseMultiPayload;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  _BYTE v46[24];
  char v47[24];
  _BYTE v48[24];
  objc_super v49;

  v2 = v1;
  v4 = type metadata accessor for FMSelectedSection(0);
  v5 = __chkstk_darwin(v4);
  v43 = (uint64_t)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v42 = (char *)&v42 - v8;
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v42 - v10;
  __chkstk_darwin(v9);
  v13 = (char *)&v42 - v12;
  v14 = (objc_class *)type metadata accessor for FMUnknownItemsViewController();
  v49.receiver = v2;
  v49.super_class = v14;
  objc_msgSendSuper2(&v49, "viewWillDisappear:", a1 & 1);
  if (qword_1005D2070 != -1)
    swift_once(&qword_1005D2070, sub_1003CB89C);
  v15 = type metadata accessor for Logger(0);
  v45 = sub_100056D88(v15, (uint64_t)qword_1005F6010);
  v16 = Logger.logObject.getter(v45);
  v17 = static os_log_type_t.default.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "FMUnknownItemsViewController: viewWillDisappear", v18, 2u);
    swift_slowDealloc(v18, -1, -1);
  }

  v19 = *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy28FMUnknownItemsViewController_selectionSubscription];
  p_opt_inst_meths = &OBJC_PROTOCOL___MKUserTrackingView.opt_inst_meths;
  if (v19)
  {
    v44 = v11;
    v11 = v13;
    v13 = (char *)v4;
    v21 = *(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy28FMUnknownItemsViewController_mediator] + 56);
    swift_beginAccess(v21 + 16, v48, 33, 0);
    swift_retain(v19);
    swift_retain(v21);
    v22 = 0;
    v23 = sub_100334CE8((uint64_t *)(v21 + 16), v19);
    v24 = v23;
    v4 = *(_QWORD *)(v21 + 16);
    if ((unint64_t)v4 >> 62)
    {
      if (v4 < 0)
        v40 = *(_QWORD *)(v21 + 16);
      else
        v40 = v4 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(v21 + 16));
      v25 = _CocoaArrayWrapper.endIndex.getter(v40);
      swift_bridgeObjectRelease(v4);
      if (v25 >= v24)
        goto LABEL_8;
    }
    else
    {
      v25 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v25 >= v23)
      {
LABEL_8:
        v4 = (uint64_t)v13;
        sub_100200704(v24, v25);
        swift_endAccess(v48);
        swift_release(v19);
        swift_release(v21);
        v13 = v11;
        v11 = v44;
        p_opt_inst_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___MKUserTrackingView + 40);
        goto LABEL_9;
      }
    }
    __break(1u);
    goto LABEL_28;
  }
LABEL_9:
  v19 = *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy28FMUnknownItemsViewController_deviceSubscription];
  if (!v19)
    goto LABEL_13;
  v21 = *(_QWORD *)(*(_QWORD *)((char *)p_opt_inst_meths[470] + (_QWORD)v2) + 24);
  swift_beginAccess(v21 + 16, v48, 33, 0);
  swift_retain(v19);
  swift_retain(v21);
  v26 = sub_1001138E0((uint64_t *)(v21 + 16), v19);
  v22 = v26;
  v25 = *(_QWORD *)(v21 + 16);
  if ((unint64_t)v25 >> 62)
  {
LABEL_28:
    if (v25 < 0)
      v41 = v25;
    else
      v41 = v25 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v25);
    v27 = _CocoaArrayWrapper.endIndex.getter(v41);
    swift_bridgeObjectRelease(v25);
    if (v27 >= v22)
      goto LABEL_12;
LABEL_32:
    __break(1u);
    JUMPOUT(0x10038850CLL);
  }
  v27 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v27 < v26)
    goto LABEL_32;
LABEL_12:
  sub_1002006EC(v22, v27);
  swift_endAccess(v48);
  swift_release(v19);
  swift_release(v21);
  p_opt_inst_meths = &OBJC_PROTOCOL___MKUserTrackingView.opt_inst_meths;
LABEL_13:
  v28 = *(uint64_t *)((char *)p_opt_inst_meths[470] + (_QWORD)v2);
  v29 = *(_QWORD *)(v28 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v29, v48, 0, 0);
  sub_100024F3C(v29, (uint64_t)v13);
  sub_100024F3C((uint64_t)v13, (uint64_t)v11);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v11, v4);
  switch((int)EnumCaseMultiPayload)
  {
    case 3:
    case 8:
      EnumCaseMultiPayload = sub_100024F00((uint64_t)v11);
      goto LABEL_15;
    case 15:
LABEL_15:
      v31 = Logger.logObject.getter(EnumCaseMultiPayload);
      v32 = static os_log_type_t.default.getter(v31);
      if (!os_log_type_enabled(v31, v32))
        goto LABEL_21;
      v33 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v33 = 0;
      v34 = "FMUnknownItemsViewController: ignore current selection";
      break;
    case 18:
      v31 = Logger.logObject.getter(EnumCaseMultiPayload);
      v32 = static os_log_type_t.default.getter(v31);
      if (!os_log_type_enabled(v31, v32))
        goto LABEL_21;
      v33 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v33 = 0;
      v34 = "FMUnknownItemsViewController: ranging item ignore current selection";
      break;
    default:
      v35 = *(_QWORD *)(v28 + 56);
      v36 = (uint64_t)v42;
      swift_storeEnumTagMultiPayload(v42, v4, 16);
      v37 = v35 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
      swift_beginAccess(v35 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, v47, 0, 0);
      v38 = v43;
      sub_100024F3C(v37, v43);
      swift_beginAccess(v37, v46, 33, 0);
      swift_retain(v35);
      sub_100009DF8(v36, v37);
      swift_endAccess(v46);
      sub_10004C8A4(v38);
      sub_100024F00(v36);
      sub_100024F00(v38);
      swift_release(v35);
      sub_100024F00((uint64_t)v13);
      v13 = v11;
      return sub_100024F00((uint64_t)v13);
  }
  _os_log_impl((void *)&_mh_execute_header, v31, v32, v34, v33, 2u);
  swift_slowDealloc(v33, -1, -1);
LABEL_21:

  return sub_100024F00((uint64_t)v13);
}

void sub_10038858C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (qword_1005D2070 != -1)
    swift_once(&qword_1005D2070, sub_1003CB89C);
  v0 = type metadata accessor for Logger(0);
  v1 = sub_100056D88(v0, (uint64_t)qword_1005F6010);
  v2 = Logger.logObject.getter(v1);
  v3 = static os_log_type_t.default.getter(v2);
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc(12, -1);
    v5 = swift_slowAlloc(32, -1);
    v7 = v5;
    *(_DWORD *)v4 = 136315138;
    v6 = sub_100056DA0(0xD00000000000001BLL, 0x80000001004C35E0, &v7);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v6, &v7);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "FMUnknownItemsViewController: %s", v4, 0xCu);
    swift_arrayDestroy(v5, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v5, -1, -1);
    swift_slowDealloc(v4, -1, -1);
  }

  sub_100388900();
}

void sub_100388708()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v1 = v0;
  if (qword_1005D2070 != -1)
    swift_once(&qword_1005D2070, sub_1003CB89C);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100056D88(v2, (uint64_t)qword_1005F6010);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = swift_slowAlloc(32, -1);
    v14 = v7;
    *(_DWORD *)v6 = 136315138;
    v13 = sub_100056DA0(0xD000000000000018, 0x80000001004C35C0, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v13, &v14);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMUnknownItemsViewController: %s", v6, 0xCu);
    swift_arrayDestroy(v7, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);
  }

  v8 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy28FMUnknownItemsViewController_mediator);
  objc_allocWithZone((Class)type metadata accessor for FMUnknownItemsLandingViewController());
  v9 = swift_retain(v8);
  v10 = sub_10022A0F4(v9);
  v11 = &v10[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_delegate];
  *((_QWORD *)v11 + 1) = &off_10055EBE0;
  swift_unknownObjectWeakAssign(v11, v1);
  v10[OBJC_IVAR____TtC6FindMy35FMUnknownItemsLandingViewController_type] = 2;
  sub_10022AABC();
  v12 = v10;
  sub_1004203E0(v12, v1);

}

void sub_100388900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  id v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (**v19)();
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24[3];

  v1 = v0;
  v2 = type metadata accessor for FMSelectedSection(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v24[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D2070 != -1)
    swift_once(&qword_1005D2070, sub_1003CB89C);
  v5 = type metadata accessor for Logger(0);
  v6 = sub_100056D88(v5, (uint64_t)qword_1005F6010);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v24[0] = v10;
    *(_DWORD *)v9 = 136315138;
    v23 = sub_100056DA0(0xD000000000000011, 0x80000001004C35A0, v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v23, v24);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "FMUnknownItemsViewController: %s", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }

  v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy28FMUnknownItemsViewController_mediator);
  v12 = *(_QWORD *)(v11 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v12, v24, 0, 0);
  sub_100024F3C(v12, (uint64_t)v4);
  if (swift_getEnumCaseMultiPayload(v4, v2) == 9)
  {
    v13 = *v4;
    v14 = objc_allocWithZone((Class)type metadata accessor for FMUnknownItemsListViewController());
    v15 = swift_retain(v11);
    v16 = sub_10042767C(v15, v13);
    v17 = *(_QWORD *)&v16[OBJC_IVAR____TtC6FindMy32FMUnknownItemsListViewController_dataSource];
    v18 = swift_allocObject(&unk_10055ECE0, 24, 7);
    swift_unknownObjectWeakInit(v18 + 16);
    v19 = (void (**)())(v17 + qword_1005DA540);
    v20 = *(_QWORD *)(v17 + qword_1005DA540);
    v21 = *(_QWORD *)(v17 + qword_1005DA540 + 8);
    *v19 = sub_1003891AC;
    v19[1] = (void (*)())v18;
    sub_1000327F0(v20, v21);
    v22 = v16;
    sub_1004203E0(v22, v1);

  }
  else
  {
    sub_100024F00((uint64_t)v4);
  }
}

void sub_100388BB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    sub_100388708();

  }
}

void sub_100388C00(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  double v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  _BYTE v32[24];
  char v33[24];

  v3 = v2;
  v6 = type metadata accessor for FMSelectedSection(0);
  v7 = __chkstk_darwin(v6);
  v9 = &v32[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __chkstk_darwin(v7);
  v12 = &v32[-v11];
  __chkstk_darwin(v10);
  v14 = &v32[-v13];
  v15 = OBJC_IVAR____TtC6FindMy28FMUnknownItemsViewController_mediator;
  v16 = *(_QWORD *)(*(_QWORD *)&v3[OBJC_IVAR____TtC6FindMy28FMUnknownItemsViewController_mediator] + 56)
      + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v16, v33, 0, 0);
  sub_100024F3C(v16, (uint64_t)v14);
  LODWORD(v16) = swift_getEnumCaseMultiPayload(v14, v6);
  sub_100024F00((uint64_t)v14);
  if ((_DWORD)v16 == 8)
  {
    v17 = *(_QWORD *)&v3[v15];
    v18 = *(_QWORD *)(v17 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection;
    swift_beginAccess(v18, v32, 0, 0);
    sub_100024F3C(v18, (uint64_t)v12);
    objc_allocWithZone((Class)type metadata accessor for FMUTCardViewController(0));
    v19 = swift_retain(v17);
    v20 = sub_100348DD0(v19, (uint64_t)v12);
    *(_QWORD *)&v21 = swift_release(v17).n128_u64[0];
    v20[OBJC_IVAR____TtC6FindMy22FMUTCardViewController_bypassWelcomeScreen] = 1;
    objc_msgSend(v3, "presentCard:completion:", v20, 0, v21);
LABEL_5:

    return;
  }
  swift_storeEnumTagMultiPayload(v12, v6, 15);
  sub_100024F80(a2, (uint64_t)v12);
  v23 = v22;
  sub_100024F00((uint64_t)v12);
  if ((v23 & 1) != 0)
  {
    v24 = *(_QWORD *)&v3[v15];
    v25 = a1 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection;
    swift_beginAccess(v25, v32, 0, 0);
    sub_100024F3C(v25, (uint64_t)v12);
    objc_allocWithZone((Class)type metadata accessor for FMChooseMapSheetController(0));
    v26 = swift_retain(v24);
    v20 = sub_10016AC8C(v26, (uint64_t)v12);
    objc_msgSend(v3, "presentViewController:animated:completion:", v20, 1, 0);
    goto LABEL_5;
  }
  sub_100024F3C(a2, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload(v9, v6) != 9)
  {
    sub_100024F00((uint64_t)v9);
    if (qword_1005D2070 != -1)
      swift_once(&qword_1005D2070, sub_1003CB89C);
    v27 = type metadata accessor for Logger(0);
    v28 = sub_100056D88(v27, (uint64_t)qword_1005F6010);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.default.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "FMUnknownItemsViewController: closing, unknown item is not selected", v31, 2u);
      swift_slowDealloc(v31, -1, -1);
    }

    sub_1001FDE20();
  }
}

uint64_t sub_100388F6C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy28FMUnknownItemsViewController_mediator));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy28FMUnknownItemsViewController_selectionSubscription));
  return swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy28FMUnknownItemsViewController_deviceSubscription));
}

id sub_100388FA8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMUnknownItemsViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMUnknownItemsViewController()
{
  return objc_opt_self(_TtC6FindMy28FMUnknownItemsViewController);
}

id sub_100389044(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  objc_super v11;

  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy28FMUnknownItemsViewController_selectionSubscription] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy28FMUnknownItemsViewController_deviceSubscription] = 0;
  v1[OBJC_IVAR____TtC6FindMy28FMUnknownItemsViewController_shownLandingView] = 0;
  v3 = qword_1005D1DE8;
  v4 = v1;
  if (v3 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v5 = type metadata accessor for Logger(0);
  v6 = sub_100056D88(v5, (uint64_t)qword_1005F5748);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "FMUnknownItemsViewController: Initialized", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  *(_QWORD *)&v4[OBJC_IVAR____TtC6FindMy28FMUnknownItemsViewController_mediator] = a1;
  swift_retain(a1);

  v11.receiver = v4;
  v11.super_class = (Class)type metadata accessor for FMUnknownItemsViewController();
  return objc_msgSendSuper2(&v11, "initWithNibName:bundle:", 0, 0);
}

uint64_t sub_100389188()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003891AC()
{
  uint64_t v0;

  sub_100388BB0(v0);
}

void sub_1003891B4()
{
  char *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  double v15;
  id v16;
  id v17;

  objc_msgSend(v0, "setAxis:", 1);
  if (qword_1005D1FE8 != -1)
    swift_once(&qword_1005D1FE8, sub_100389500);
  objc_msgSend(v0, "setSpacing:", *(double *)&qword_1005F5E88);
  v1 = OBJC_IVAR____TtC6FindMy26FMLostModeSummaryEntryView_footer;
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy26FMLostModeSummaryEntryView_footer];
  v3 = (void *)objc_opt_self(UIColor);
  v4 = v2;
  v5 = objc_msgSend(v3, "secondaryLabelColor");
  objc_msgSend(v4, "setTextColor:", v5);

  v6 = *(void **)&v0[v1];
  v7 = (void *)objc_opt_self(UIFont);
  v8 = v6;
  v9 = objc_msgSend(v7, "preferredFontForTextStyle:", UIFontTextStyleCaption1);
  objc_msgSend(v8, "setFont:", v9);

  objc_msgSend(*(id *)&v0[v1], "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(*(id *)&v0[v1], "setNumberOfLines:", 0);
  objc_msgSend(*(id *)&v0[v1], "setHidden:", 1);
  v10 = OBJC_IVAR____TtC6FindMy26FMLostModeSummaryEntryView_platter;
  objc_msgSend(v0, "addArrangedSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy26FMLostModeSummaryEntryView_platter]);
  objc_msgSend(v0, "addArrangedSubview:", *(_QWORD *)&v0[v1]);
  v11 = *(id *)&v0[v10];
  v12 = objc_msgSend(v3, "secondarySystemBackgroundColor");
  objc_msgSend(v11, "setBackgroundColor:", v12);

  v13 = qword_1005D1FD0;
  v14 = *(id *)&v0[v10];
  if (v13 != -1)
    swift_once(&qword_1005D1FD0, sub_1003894D0);
  v15 = *(double *)&qword_1005F5E70;
  if (qword_1005D1FD8 != -1)
    swift_once(&qword_1005D1FD8, sub_1003894E0);
  objc_msgSend(v14, "setDirectionalLayoutMargins:", v15);

  v16 = objc_msgSend(*(id *)&v0[v10], "layer");
  if (qword_1005D1FE0 != -1)
    swift_once(&qword_1005D1FE0, sub_1003894F0);
  objc_msgSend(v16, "setCornerRadius:", *(double *)&qword_1005F5E80);

  v17 = objc_msgSend(*(id *)&v0[v10], "layer");
  objc_msgSend(v17, "setCornerCurve:", kCACornerCurveContinuous);

}

void sub_1003894D0()
{
  qword_1005F5E70 = 0x401C000000000000;
}

void sub_1003894E0()
{
  qword_1005F5E78 = 0x4030000000000000;
}

void sub_1003894F0()
{
  qword_1005F5E80 = 0x4024000000000000;
}

void sub_100389500()
{
  qword_1005F5E88 = 0x4024000000000000;
}

id sub_1003896C0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMLostModeSummaryEntryView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMLostModeSummaryEntryView()
{
  return objc_opt_self(_TtC6FindMy26FMLostModeSummaryEntryView);
}

uint64_t sub_100389748(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_100389768(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

double sub_10038979C()
{
  void *v0;
  id v1;
  double result;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  double v7;
  id v8;
  objc_super v9;

  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for FMTrackAnnotationView();
  objc_msgSendSuper2(&v9, "prepareForDisplay");
  v1 = objc_msgSend(v0, "annotation");
  if (v1)
  {
    v3 = v1;
    v4 = type metadata accessor for FMTrackAnnotation(0);
    if (swift_dynamicCastClass(v3, v4))
    {
      sub_100389B84();
      v6 = v5;
      objc_msgSend(v0, "setImage:", v5);

      LODWORD(v7) = 1144750080;
      objc_msgSend(v0, "setDisplayPriority:", v7);
      v8 = objc_msgSend(v0, "layer");
      objc_msgSend(v8, "setAnchorPoint:", 0.5, 0.5);
      swift_unknownObjectRelease(v3);

    }
    else
    {
      *(_QWORD *)&result = swift_unknownObjectRelease(v3).n128_u64[0];
    }
  }
  return result;
}

void sub_1003898CC(void *a1, double a2, double a3)
{
  NSString v6;
  id v7;
  void *v8;
  CGContext *v9;
  CGContext *v10;
  CGContext *v11;
  id v12;
  CGContext *v13;
  id v14;

  v6 = String._bridgeToObjectiveC()();
  v14 = objc_msgSend((id)objc_opt_self(UIImage), "imageNamed:", v6);

  if (v14)
  {
    v7 = objc_msgSend(v14, "CGImage");
    if (v7)
    {
      v8 = v7;
      v9 = (CGContext *)objc_msgSend(a1, "CGContext");
      CGContextSaveGState(v9);

      v10 = (CGContext *)objc_msgSend(a1, "CGContext");
      CGContextScaleCTM(v10, 1.0, -1.0);

      v11 = (CGContext *)objc_msgSend(a1, "CGContext");
      CGContextTranslateCTM(v11, 0.0, -a3);

      v12 = objc_msgSend(a1, "CGContext");
      CGContextRef.draw(_:in:byTiling:)(v8, 0, 0.0, 0.0, a2, a3);

      v13 = (CGContext *)objc_msgSend(a1, "CGContext");
      CGContextRestoreGState(v13);

    }
  }
}

id sub_100389B50()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMTrackAnnotationView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_100389B84()
{
  id v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  _QWORD v12[5];
  uint64_t v13;

  v0 = objc_msgSend((id)objc_opt_self(UIColor), "systemBlueColor");
  v1 = objc_msgSend(v0, "colorWithAlphaComponent:", 0.2);

  v2 = objc_msgSend(objc_allocWithZone((Class)UIGraphicsImageRenderer), "initWithSize:", 10.0, 10.0);
  v3 = swift_allocObject(&unk_10055ED28, 32, 7);
  __asm { FMOV            V0.2D, #10.0 }
  *(_OWORD *)(v3 + 16) = _Q0;
  v9 = swift_allocObject(&unk_10055ED50, 32, 7);
  *(_QWORD *)(v9 + 16) = sub_100389D58;
  *(_QWORD *)(v9 + 24) = v3;
  v12[4] = sub_100021E58;
  v13 = v9;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_100389768;
  v12[3] = &unk_10055ED68;
  v10 = _Block_copy(v12);
  v11 = v13;
  swift_retain(v9);
  objc_msgSend(v2, "imageWithActions:", v10, swift_release(v11).n128_f64[0]);

  _Block_release(v10);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation(v9, "", 111, 45, 31, 1);
  swift_release(v3);
  swift_release(v9);
  if ((v2 & 1) != 0)
    __break(1u);
}

uint64_t sub_100389D48()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100389D58(void *a1)
{
  uint64_t v1;

  sub_1003898CC(a1, *(double *)(v1 + 16), *(double *)(v1 + 24));
}

uint64_t sub_100389D60()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_100389D74()
{
  void *v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  NSObject *v7;

  v1 = objc_msgSend(v0, "navigationController");
  if (v1)
  {
    v7 = v1;
    v2 = type metadata accessor for FMActivityIndicatingNavigationController();
    if (swift_dynamicCastClass(v7, v2))
    {
      sub_1000A7F44();
      goto LABEL_9;
    }

  }
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v3 = type metadata accessor for Logger(0);
  v4 = sub_100056D88(v3, (uint64_t)qword_1005F5748);
  v7 = Logger.logObject.getter(v4);
  v5 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v5, "FMActivityIndicatingViewController: showActivityIndicator called on invalid navigation controller.", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }
LABEL_9:

}

id sub_100389E8C(uint64_t a1, unint64_t a2)
{
  void *v4;
  id v5;
  Swift::String v6;
  Swift::String v7;
  Swift::String v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  Swift::String v16;
  Swift::String v17;
  void *object;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  NSString v23;
  unsigned int v24;
  id v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  NSString v32;
  NSString v33;
  id v34;
  id v35;
  id v36;
  Swift::String v37;
  Swift::String v38;
  void *v39;
  NSString v40;
  void *v41;
  id v42;
  _QWORD aBlock[5];
  uint64_t v45;
  Swift::String v46;
  Swift::String v47;
  Swift::String v48;
  Swift::String v49;

  aBlock[0] = 0;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v4 = (void *)objc_opt_self(NSBundle);
  v5 = objc_msgSend(v4, "mainBundle");
  v6._countAndFlagsBits = 0xD000000000000023;
  v46._countAndFlagsBits = 0xD000000000000035;
  v46._object = (void *)0x80000001004C37C0;
  v6._object = (void *)0x80000001004C3790;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v46);

  v9 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
  v10 = swift_allocObject(v9, 72, 7);
  *(_OWORD *)(v10 + 16) = xmmword_100481740;
  *(_QWORD *)(v10 + 56) = &type metadata for String;
  v11 = sub_100071E88();
  *(_QWORD *)(v10 + 64) = v11;
  *(_QWORD *)(v10 + 32) = a1;
  *(_QWORD *)(v10 + 40) = a2;
  swift_bridgeObjectRetain(a2);
  String.init(format:_:)(v8._countAndFlagsBits, v8._object, v10);
  v13 = v12;
  swift_bridgeObjectRelease(v8._object);
  LOBYTE(v10) = sub_1003C06A0(a1, a2, 0);
  swift_bridgeObjectRelease(v14);
  if ((v10 & 1) != 0)
  {
    aBlock[0] = 0;
    _StringGuts.grow(_:)(20);
    v15 = objc_msgSend(v4, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
    v47._countAndFlagsBits = 0xD000000000000039;
    v47._object = (void *)0x80000001004C38A0;
    v16._object = (void *)0x80000001004C3870;
    v16._countAndFlagsBits = 0xD000000000000027;
    v17._countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v47)._object;

    v19 = v4;
  }
  else
  {
    v20 = v4;
    sub_100119FC8();
    v21 = swift_allocObject(v9, 72, 7);
    *(_OWORD *)(v21 + 16) = xmmword_100481740;
    *(_QWORD *)(v21 + 56) = &type metadata for String;
    *(_QWORD *)(v21 + 64) = v11;
    *(_QWORD *)(v21 + 32) = 0xD000000000000029;
    *(_QWORD *)(v21 + 40) = 0x80000001004ACC10;
    v22 = (void *)NSPredicate.init(format:_:)(0x54414D20464C4553, 0xEF40252053454843, v21);
    v23 = String._bridgeToObjectiveC()();
    v24 = objc_msgSend(v22, "evaluateWithObject:", v23);

    if (!v24)
    {
      swift_bridgeObjectRelease(v13);
      return 0;
    }
    aBlock[0] = 0;
    _StringGuts.grow(_:)(20);
    v25 = objc_msgSend(v20, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
    v48._countAndFlagsBits = 0xD000000000000039;
    v48._object = (void *)0x80000001004C3830;
    v26._object = (void *)0x80000001004C3800;
    v26._countAndFlagsBits = 0xD000000000000027;
    v27._countAndFlagsBits = 0;
    v27._object = (void *)0xE000000000000000;
    v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, (Swift::String_optional)0, (NSBundle)v25, v27, v48);

    v29 = v9;
    v19 = v20;
    v30 = swift_allocObject(v29, 72, 7);
    *(_OWORD *)(v30 + 16) = xmmword_100481740;
    *(_QWORD *)(v30 + 56) = &type metadata for String;
    *(_QWORD *)(v30 + 64) = v11;
    *(_QWORD *)(v30 + 32) = a1;
    *(_QWORD *)(v30 + 40) = a2;
    swift_bridgeObjectRetain(a2);
    String.init(format:_:)(v28._countAndFlagsBits, v28._object, v30);
    object = v31;
    swift_bridgeObjectRelease(v28._object);
  }
  v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v13);
  v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  v34 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v32, v33, 1);

  if (v34)
  {
    v35 = v34;
    _StringGuts.grow(_:)(20);
    v36 = objc_msgSend(v19, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
    v49._countAndFlagsBits = 0xD000000000000021;
    v49._object = (void *)0x80000001004A5EE0;
    v37._countAndFlagsBits = 0x4F545455425F4B4FLL;
    v37._object = (void *)0xEF454C5449545F4ELL;
    v38._countAndFlagsBits = 0;
    v38._object = (void *)0xE000000000000000;
    v39 = NSLocalizedString(_:tableName:bundle:value:comment:)(v37, (Swift::String_optional)0, (NSBundle)v36, v38, v49)._object;

    v40 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v39);
    aBlock[4] = State.rawValue.getter;
    v45 = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100008B40;
    aBlock[3] = &unk_10055ED90;
    v41 = _Block_copy(aBlock);
    swift_release(v45);
    v42 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v40, 0, v41);
    _Block_release(v41);

    objc_msgSend(v35, "addAction:", v42);
  }
  return v34;
}

void sub_10038A464(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  void **v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  void **v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  id v44;
  NSString v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void **aBlock;
  uint64_t v57;
  void *v58;
  void *v59;
  uint64_t (*v60)();
  uint64_t v61;

  v5 = sub_100053F2C((uint64_t *)&unk_1005E59F0);
  __chkstk_darwin(v5);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16))
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v8 = type metadata accessor for Logger(0);
    v9 = sub_100056D88(v8, (uint64_t)qword_1005F5748);
    v10 = swift_bridgeObjectRetain_n(a2, 2);
    v11 = Logger.logObject.getter(v10);
    v12 = static os_log_type_t.default.getter(v11);
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc(12, -1);
      v14 = (void **)swift_slowAlloc(32, -1);
      aBlock = v14;
      v54 = v9;
      *(_DWORD *)v13 = 136315138;
      v15 = Array.debugDescription.getter(a2, &type metadata for String);
      v17 = v16;
      v55 = sub_100056DA0(v15, v16, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &aBlock);
      swift_bridgeObjectRelease_n(a2, 2);
      swift_bridgeObjectRelease(v17);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "FMAddFriendViewController: 🙏 Offering shares to %s", v13, 0xCu);
      swift_arrayDestroy(v14, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v14, -1, -1);
      swift_slowDealloc(v13, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n(a2, 2);
    }
    v22 = *(_QWORD *)(*(_QWORD *)&a3[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_mediator] + 48);
    v23 = swift_retain(v22);
    dispatch thunk of FMFManager.preferences.getter(v23);
    swift_release(v22);
    v24 = type metadata accessor for FMFPreferences(0);
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v7, 1, v24) == 1)
    {
      v26 = sub_1000051EC((uint64_t)v7, (uint64_t *)&unk_1005E59F0);
      v27 = 0;
      v28 = 0xE000000000000000;
    }
    else
    {
      v27 = FMFPreferences.primaryEmail.getter();
      v28 = v29;
      v26 = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v7, v24);
    }
    v30 = Logger.logObject.getter(v26);
    v31 = static os_log_type_t.default.getter(v30);
    if (os_log_type_enabled(v30, v31))
    {
      v32 = swift_slowAlloc(22, -1);
      v33 = (void **)swift_slowAlloc(64, -1);
      v55 = 0;
      aBlock = v33;
      *(_DWORD *)v32 = 136315394;
      v34 = sub_100053F2C(&qword_1005E1F90);
      v35 = String.init<A>(describing:)(&v55, v34);
      v54 = v27;
      v36 = a3;
      v38 = v37;
      v55 = sub_100056DA0(v35, v37, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &aBlock);
      swift_bridgeObjectRelease(v38);
      *(_WORD *)(v32 + 12) = 2080;
      v55 = 0;
      v39 = sub_100053F2C(&qword_1005DD2A0);
      v40 = String.init<A>(describing:)(&v55, v39);
      v42 = v41;
      v55 = sub_100056DA0(v40, v41, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &aBlock);
      v43 = v42;
      a3 = v36;
      swift_bridgeObjectRelease(v43);
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "FMAddFriendViewController: 🙏 Will present: \nAnchorItem: %s \nAnchorView: %s", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy(v33, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v33, -1, -1);
      swift_slowDealloc(v32, -1, -1);
    }

    v44 = objc_msgSend((id)objc_opt_self(FMAddFriendsUtilities), "sharedInstance");
    v45 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(v28);
    v46 = swift_allocObject(&unk_10055EDF0, 32, 7);
    *(_QWORD *)(v46 + 16) = a2;
    *(_QWORD *)(v46 + 24) = a3;
    v60 = (uint64_t (*)())sub_10038BA98;
    v61 = v46;
    aBlock = _NSConcreteStackBlock;
    v57 = 1107296256;
    v58 = sub_10005D218;
    v59 = &unk_10055EE08;
    v47 = _Block_copy(&aBlock);
    v48 = v61;
    swift_bridgeObjectRetain(a2);
    v49 = a3;
    swift_release(v48);
    v50 = swift_allocObject(&unk_10055EE40, 24, 7);
    *(_QWORD *)(v50 + 16) = v49;
    v60 = (uint64_t (*)())sub_10038BAA0;
    v61 = v50;
    aBlock = _NSConcreteStackBlock;
    v57 = 1107296256;
    v58 = sub_100037DF8;
    v59 = &unk_10055EE58;
    v51 = _Block_copy(&aBlock);
    LOBYTE(v53) = 1;
    v52 = objc_msgSend(v44, "showOfferActionSheetInViewController:popoverAnchoredAtView:orAnchoredOnBarButtonItem:fromEmail:withCompletion:cancelHandler:showAlert:", v49, 0, 0, v45, v47, v51, swift_release(v61).n128_f64[0], v53);
    _Block_release(v51);
    _Block_release(v47);

  }
  else
  {
    v18 = *(void **)&a3[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView];
    if (v18)
    {
      v19 = objc_msgSend(v18, "textView");
      if (v19)
      {
        v20 = v19;
        objc_msgSend(v19, "resignFirstResponder");

        v60 = State.rawValue.getter;
        v61 = 0;
        aBlock = _NSConcreteStackBlock;
        v57 = 1107296256;
        v58 = sub_100037DF8;
        v59 = &unk_10055EE80;
        v21 = _Block_copy(&aBlock);
        objc_msgSend(a3, "dismissViewControllerAnimated:completion:", 1, v21);
        _Block_release(v21);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_10038AA8C(unint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  __n128 v22;
  uint64_t result;
  uint64_t v24;

  v6 = type metadata accessor for FriendshipExpiration(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v24 - v12;
  __chkstk_darwin(v11);
  v15 = (char *)&v24 - v14;
  if (a1 >= 3)
  {
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0, 0xE000000000000000, "FindMy/FriendshipExpiration.swift", 33, 2, 22, 0);
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v13, *(unsigned int *)*(&off_10055EF48 + a1), v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v13, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v15, v6);
    v16 = type metadata accessor for FMFShareLocationAction(0);
    swift_allocObject(v16, *(unsigned int *)(v16 + 48), *(unsigned __int16 *)(v16 + 52));
    swift_bridgeObjectRetain(a2);
    v18 = FMFShareLocationAction.init(handles:friendId:duration:)(v17, 0, 0, v10);
    sub_100389D74();
    v19 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&a3[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_mediator] + 48)
                    + 56);
    v20 = swift_allocObject(&unk_10055EEB8, 32, 7);
    *(_QWORD *)(v20 + 16) = a2;
    *(_QWORD *)(v20 + 24) = a3;
    swift_bridgeObjectRetain(a2);
    swift_retain(v19);
    v21 = a3;
    sub_1000D421C(v18, (uint64_t)sub_10038BAD8, v20);
    swift_release(v18);
    swift_release(v19);
    v22 = swift_release(v20);
    return (*(uint64_t (**)(char *, uint64_t, __n128))(v7 + 8))(v15, v6, v22);
  }
  return result;
}

void sub_10038AC94(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  Class *v20;
  NSArray v21;
  Class isa;
  unint64_t v23;
  unint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  os_log_t v30;
  uint64_t v31;
  Class *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  os_log_type_t v36;
  uint64_t v37;
  Class *v38;
  NSArray v39;
  Class v40;
  unint64_t v41;
  unint64_t v42;
  __n128 v43;
  os_log_t v44;
  uint64_t v45;
  Class *v46;
  uint64_t v47;
  __n128 v48;
  void *v49;
  id v50;
  void *v51;
  _QWORD *v52;
  void *v53;
  _QWORD *v54;
  uint64_t v55;
  Class *v56;
  os_log_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t aBlock;
  unint64_t v62[4];
  _QWORD *v63;

  v8 = type metadata accessor for FMFActionStatus(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v55 - v13;
  if (a2)
  {
    swift_errorRetain(a2);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v15 = type metadata accessor for Logger(0);
    sub_100056D88(v15, (uint64_t)qword_1005F5748);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
    swift_bridgeObjectRetain(a3);
    swift_errorRetain(a2);
    swift_bridgeObjectRetain(a3);
    v16 = swift_errorRetain(a2);
    v17 = Logger.logObject.getter(v16);
    v18 = static os_log_type_t.default.getter(v17);
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc(32, -1);
      v20 = (Class *)swift_slowAlloc(8, -1);
      v56 = v20;
      v58 = swift_slowAlloc(64, -1);
      v60 = v58;
      *(_DWORD *)v19 = 138412802;
      v57 = v17;
      v21.super.isa = Array._bridgeToObjectiveC()().super.isa;
      v59 = a4;
      isa = v21.super.isa;
      aBlock = (uint64_t)v21.super.isa;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v62);
      *v20 = isa;
      swift_bridgeObjectRelease_n(a3, 2);
      *(_WORD *)(v19 + 12) = 2080;
      aBlock = 0;
      v62[0] = 0xE000000000000000;
      _print_unlocked<A, B>(_:_:)(v12, &aBlock, v8, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v23 = v62[0];
      aBlock = sub_100056DA0(aBlock, v62[0], &v60);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v62);
      v24 = v23;
      a4 = v59;
      v25 = swift_bridgeObjectRelease(v24);
      (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v12, v8, v25);
      *(_WORD *)(v19 + 22) = 2080;
      aBlock = a2;
      swift_errorRetain(a2);
      v26 = sub_100053F2C((uint64_t *)&unk_1005D2AC0);
      v27 = String.init<A>(describing:)(&aBlock, v26);
      v29 = v28;
      aBlock = sub_100056DA0(v27, v28, &v60);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v62);
      swift_bridgeObjectRelease(v29);
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      v30 = v57;
      _os_log_impl((void *)&_mh_execute_header, v57, v18, "FMAddFriendViewController: 🙏 Error offering shares to %@ %s %s", (uint8_t *)v19, 0x20u);
      v31 = sub_100053F2C((uint64_t *)&unk_1005D9680);
      v32 = v56;
      swift_arrayDestroy(v56, 1, v31);
      swift_slowDealloc(v32, -1, -1);
      v33 = v58;
      swift_arrayDestroy(v58, 2, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v33, -1, -1);
      swift_slowDealloc(v19, -1, -1);

      swift_errorRelease(a2);
      goto LABEL_13;
    }
    swift_errorRelease(a2);
    swift_bridgeObjectRelease_n(a3, 2);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    swift_errorRelease(a2);
    swift_errorRelease(a2);
  }
  else
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v34 = type metadata accessor for Logger(0);
    sub_100056D88(v34, (uint64_t)qword_1005F5748);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v14, a1, v8);
    swift_bridgeObjectRetain(a3);
    v17 = Logger.logObject.getter(v35);
    v36 = static os_log_type_t.default.getter(v17);
    if (os_log_type_enabled(v17, v36))
    {
      v37 = swift_slowAlloc(22, -1);
      v38 = (Class *)swift_slowAlloc(8, -1);
      v56 = v38;
      v58 = swift_slowAlloc(32, -1);
      v60 = v58;
      *(_DWORD *)v37 = 138412546;
      v57 = v17;
      v39.super.isa = Array._bridgeToObjectiveC()().super.isa;
      v59 = a4;
      v40 = v39.super.isa;
      aBlock = (uint64_t)v39.super.isa;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v62);
      *v38 = v40;
      swift_bridgeObjectRelease(a3);
      *(_WORD *)(v37 + 12) = 2080;
      aBlock = 0;
      v62[0] = 0xE000000000000000;
      _print_unlocked<A, B>(_:_:)(v14, &aBlock, v8, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
      v41 = v62[0];
      aBlock = sub_100056DA0(aBlock, v62[0], &v60);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v62);
      v42 = v41;
      a4 = v59;
      v43 = swift_bridgeObjectRelease(v42);
      (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v14, v8, v43);
      v44 = v57;
      _os_log_impl((void *)&_mh_execute_header, v57, v36, "FMAddFriendViewController: 🙏 Offered shares to %@ %s", (uint8_t *)v37, 0x16u);
      v45 = sub_100053F2C((uint64_t *)&unk_1005D9680);
      v46 = v56;
      swift_arrayDestroy(v56, 1, v45);
      swift_slowDealloc(v46, -1, -1);
      v47 = v58;
      swift_arrayDestroy(v58, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v47, -1, -1);
      swift_slowDealloc(v37, -1, -1);

      goto LABEL_13;
    }
    v48 = swift_bridgeObjectRelease(a3);
    (*(void (**)(char *, uint64_t, __n128))(v9 + 8))(v14, v8, v48);
  }

LABEL_13:
  v49 = *(void **)&a4[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView];
  if (v49)
  {
    v50 = objc_msgSend(v49, "textView");
    if (v50)
    {
      v51 = v50;
      objc_msgSend(v50, "resignFirstResponder");

      v52 = (_QWORD *)swift_allocObject(&unk_10055EEE0, 40, 7);
      v52[2] = a4;
      v52[3] = a2;
      v52[4] = a3;
      v62[3] = (unint64_t)sub_10038BB14;
      v63 = v52;
      aBlock = (uint64_t)_NSConcreteStackBlock;
      v62[0] = 1107296256;
      v62[1] = (unint64_t)sub_100037DF8;
      v62[2] = (unint64_t)&unk_10055EEF8;
      v53 = _Block_copy(&aBlock);
      v54 = v63;
      swift_bridgeObjectRetain(a3);
      swift_errorRetain(a2);
      objc_msgSend(a4, "dismissViewControllerAnimated:completion:", 1, v53, swift_release(v54).n128_f64[0]);
      _Block_release(v53);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_10038B35C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v23[24];
  _BYTE v24[24];
  _BYTE v25[24];

  v6 = type metadata accessor for FMSelectedSection(0);
  v7 = __chkstk_darwin(v6);
  v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = __chkstk_darwin(v7);
  v12 = &v23[-v11 - 8];
  __chkstk_darwin(v10);
  v14 = &v23[-v13 - 8];
  sub_10038BB20(a2, a3);
  v15 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_mediator;
  v16 = *(_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_mediator) + 56);
  v17 = v16 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection;
  swift_beginAccess(v16 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection, v25, 0, 0);
  sub_100024F3C(v17, (uint64_t)v14);
  swift_storeEnumTagMultiPayload(v12, v6, 14);
  v18 = v16 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v16 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, v24, 0, 0);
  sub_100024F3C(v18, (uint64_t)v9);
  swift_beginAccess(v18, v23, 33, 0);
  swift_retain(v16);
  sub_100009DF8((uint64_t)v12, v18);
  swift_endAccess(v23);
  sub_10004C8A4((uint64_t)v9);
  sub_100024F00((uint64_t)v12);
  sub_100024F00((uint64_t)v9);
  swift_release(v16);
  v19 = *(_QWORD *)(*(_QWORD *)(a1 + v15) + 56);
  sub_100024F3C((uint64_t)v14, (uint64_t)v12);
  v20 = v19 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection;
  swift_beginAccess(v19 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection, v23, 33, 0);
  swift_retain(v19);
  sub_100009DF8((uint64_t)v12, v20);
  swift_endAccess(v23);
  sub_1001F5870();
  sub_100024F00((uint64_t)v12);
  swift_release(v19);
  return sub_100024F00((uint64_t)v14);
}

void sub_10038B560(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;

  v2 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView;
  v3 = *(void **)(a1 + OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView);
  if (!v3)
  {
    __break(1u);
    goto LABEL_6;
  }
  objc_msgSend(v3, "setEditable:", 1);
  v4 = *(void **)(a1 + v2);
  if (!v4)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v5 = objc_msgSend(v4, "textView");
  if (v5)
  {
    v6 = v5;
    objc_msgSend(v5, "becomeFirstResponder");

    return;
  }
LABEL_7:
  __break(1u);
}

id sub_10038B67C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMAddFriendViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10038B6B0()
{
  return type metadata accessor for FMAddFriendViewController(0);
}

uint64_t type metadata accessor for FMAddFriendViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1005E1F80;
  if (!qword_1005E1F80)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMAddFriendViewController);
  return result;
}

uint64_t sub_10038B6F4(uint64_t a1)
{
  _BYTE v2[8];

  return swift_updateClassMetadata2(a1, 256, 0, v2, a1 + 872);
}

void sub_10038B728()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[24];
  _BYTE v15[24];
  _QWORD aBlock[6];

  v1 = type metadata accessor for FMSelectedSection(0);
  v2 = __chkstk_darwin(v1);
  v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  v6 = &v14[-v5];
  v7 = *(void **)&v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView];
  if (v7)
  {
    v8 = objc_msgSend(v7, "textView");
    if (v8)
    {
      v9 = v8;
      objc_msgSend(v8, "resignFirstResponder");

      aBlock[4] = State.rawValue.getter;
      aBlock[5] = 0;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100037DF8;
      aBlock[3] = &unk_10055EF20;
      v10 = _Block_copy(aBlock);
      objc_msgSend(v0, "dismissViewControllerAnimated:completion:", 1, v10);
      _Block_release(v10);
      v11 = *(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_mediator] + 56);
      v12 = v11 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection;
      swift_beginAccess(v11 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection, aBlock, 0, 0);
      sub_100024F3C(v12, (uint64_t)v6);
      v13 = v11 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
      swift_beginAccess(v11 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, v15, 0, 0);
      sub_100024F3C(v13, (uint64_t)v4);
      swift_beginAccess(v13, v14, 33, 0);
      swift_retain(v11);
      sub_100009DF8((uint64_t)v6, v13);
      swift_endAccess(v14);
      sub_10004C8A4((uint64_t)v4);
      sub_100024F00((uint64_t)v6);
      sub_100024F00((uint64_t)v4);
      swift_release(v11);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_10038B910()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  void *v15;

  v1 = OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientTextView];
  if (!v2)
  {
    __break(1u);
    goto LABEL_15;
  }
  v3 = objc_msgSend(v2, "textView");
  if (!v3)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v4 = v3;
  objc_msgSend(v3, "resignFirstResponder");

  v5 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientText + 8];
  if (!v5
    || ((v5 & 0x2000000000000000) != 0
      ? (v6 = HIBYTE(v5) & 0xF)
      : (v6 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_recipientText] & 0xFFFFFFFFFFFFLL),
        !v6 || (sub_1001558C0(0, 0) & 1) != 0))
  {
    v7 = *(void **)&v0[v1];
    if (v7)
    {
      v8 = objc_msgSend(v7, "recipients");
      if (v8)
      {
        v9 = v8;
        v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v8, (char *)&type metadata for Any + 8);

        v11 = sub_10046C214(v10);
        swift_bridgeObjectRelease(v10);
        if (v11)
        {
          v12 = swift_allocObject(&unk_10055EDC8, 24, 7);
          *(_QWORD *)(v12 + 16) = v0;
          v13 = v0;
          sub_10015AC70((uint64_t)v11, (uint64_t)sub_10038BA8C, v12);
          v15 = v14;
          swift_bridgeObjectRelease(v11);

          swift_release(v12);
        }
      }
      return;
    }
LABEL_16:
    __break(1u);
  }
}

uint64_t sub_10038BA68()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_10038BA8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10038A464(a1, a2, *(char **)(v2 + 16));
}

uint64_t sub_10038BA98(unint64_t a1)
{
  uint64_t v1;

  return sub_10038AA8C(a1, *(_QWORD *)(v1 + 16), *(char **)(v1 + 24));
}

void sub_10038BAA0()
{
  uint64_t v0;

  sub_10038B560(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10038BAAC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_10038BAD8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_10038AC94(a1, a2, *(_QWORD *)(v2 + 16), *(char **)(v2 + 24));
}

uint64_t sub_10038BAE0()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10038BB14()
{
  uint64_t v0;

  return sub_10038B35C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD **)(v0 + 32));
}

void sub_10038BB20(uint64_t a1, _QWORD *a2)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  Swift::String v36;
  Swift::String v37;
  Swift::String v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  Swift::String v44;
  Swift::String v45;
  void *object;
  void *v47;
  NSString v48;
  NSString v49;
  void *v50;
  void *v51;
  uint64_t v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  id v59;
  Swift::String v60;
  Swift::String v61;
  Swift::String v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  Swift::String v68;
  Swift::String v69;
  void *v70;
  void *v71;
  NSString v72;
  NSString v73;
  uint64_t v74;
  uint64_t v76;
  uint64_t v77;
  char v78;
  void *v79;
  _QWORD *v80;
  Class isa;
  _QWORD v82[2];
  __int128 v83;
  __int128 v84;
  Swift::String v85;
  Swift::String v86;
  Swift::String v87;
  Swift::String v88;

  if (!a1)
  {
    v50 = (void *)objc_opt_self(FMAddFriendsUtilities);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v50, "showOfferSuccessForHandles:", isa);

    return;
  }
  v79 = (void *)_convertErrorToNSError(_:)(a1);
  v2 = objc_msgSend(v79, "userInfo");
  v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v2, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);

  v4 = v3 + 64;
  v78 = 1;
  v5 = 1 << *(_BYTE *)(v3 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(v3 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain(v3);
  v76 = 0;
  v9 = 0;
  v80 = _swiftEmptyArrayStorage;
  while (1)
  {
    if (v7)
    {
      v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_26;
    }
    v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
LABEL_54:
      __break(1u);
      return;
    }
    if (v12 >= v8)
      goto LABEL_41;
    v13 = *(_QWORD *)(v4 + 8 * v12);
    ++v9;
    if (!v13)
    {
      v9 = v12 + 1;
      if (v12 + 1 >= v8)
        goto LABEL_41;
      v13 = *(_QWORD *)(v4 + 8 * v9);
      if (!v13)
      {
        v9 = v12 + 2;
        if (v12 + 2 >= v8)
          goto LABEL_41;
        v13 = *(_QWORD *)(v4 + 8 * v9);
        if (!v13)
        {
          v9 = v12 + 3;
          if (v12 + 3 >= v8)
            goto LABEL_41;
          v13 = *(_QWORD *)(v4 + 8 * v9);
          if (!v13)
          {
            v9 = v12 + 4;
            if (v12 + 4 >= v8)
              goto LABEL_41;
            v13 = *(_QWORD *)(v4 + 8 * v9);
            if (!v13)
              break;
          }
        }
      }
    }
LABEL_25:
    v7 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v9 << 6);
LABEL_26:
    v15 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v11);
    v17 = *v15;
    v16 = v15[1];
    swift_bridgeObjectRetain_n(v16, 2);
    v18 = sub_1003C8BB4(v17, v16);
    if ((v19 & 1) != 0 || (v20 = v18, 100 * (v18 / 100) != 500) || v18 == 518)
    {
      swift_bridgeObjectRelease(v16);
    }
    else
    {
      if (*(_QWORD *)(v3 + 16) && (v21 = sub_10004C348(v17, v16), (v22 & 1) != 0))
      {
        sub_100056E70(*(_QWORD *)(v3 + 56) + 32 * v21, (uint64_t)&v83);
      }
      else
      {
        v83 = 0u;
        v84 = 0u;
      }
      swift_bridgeObjectRelease(v16);
      if (*((_QWORD *)&v84 + 1))
      {
        if ((swift_dynamicCast(v82, &v83, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
        {
          v77 = v82[0];
          v74 = v82[1];
          if ((swift_isUniquelyReferenced_nonNull_native(v80) & 1) == 0)
            v80 = sub_100070178(0, v80[2] + 1, 1, v80);
          v24 = v80[2];
          v23 = v80[3];
          if (v24 >= v23 >> 1)
            v80 = sub_100070178((_QWORD *)(v23 > 1), v24 + 1, 1, v80);
          v80[2] = v24 + 1;
          v25 = &v80[2 * v24];
          v25[4] = v77;
          v25[5] = v74;
          v76 = v20;
          v78 = 0;
        }
      }
      else
      {
        sub_1000051EC((uint64_t)&v83, &qword_1005D3AB0);
      }
    }
  }
  v14 = v12 + 5;
  if (v14 < v8)
  {
    v13 = *(_QWORD *)(v4 + 8 * v14);
    if (!v13)
    {
      while (1)
      {
        v9 = v14 + 1;
        if (__OFADD__(v14, 1))
          goto LABEL_54;
        if (v9 >= v8)
          goto LABEL_41;
        v13 = *(_QWORD *)(v4 + 8 * v9);
        ++v14;
        if (v13)
          goto LABEL_25;
      }
    }
    v9 = v14;
    goto LABEL_25;
  }
LABEL_41:
  swift_release(v3);
  v26 = v80[2];
  swift_bridgeObjectRelease(v80);
  if (v26)
  {
    if (v26 == 1)
    {
      swift_bridgeObjectRelease(v3);
      if (v78 & 1 | (v76 != 516))
      {
        if (a2[2])
        {
          v28 = a2[4];
          v27 = a2[5];
          swift_bridgeObjectRetain(v27);
          v29 = sub_1003C06A0(v28, v27, 1);
          swift_bridgeObjectRelease(v30);
          if ((v29 & 1) != 0)
          {
            v31 = sub_1000F2C90(v28, v27);
            v33 = v32;
            swift_bridgeObjectRelease(v27);
            *(_QWORD *)&v83 = 0;
            *((_QWORD *)&v83 + 1) = 0xE000000000000000;
            _StringGuts.grow(_:)(20);
            swift_bridgeObjectRelease(*((_QWORD *)&v83 + 1));
            v34 = (void *)objc_opt_self(NSBundle);
            v35 = objc_msgSend(v34, "mainBundle");
            v85._countAndFlagsBits = 0xD000000000000032;
            v85._object = (void *)0x80000001004C3A00;
            v36._object = (void *)0x80000001004C39D0;
            v36._countAndFlagsBits = 0xD000000000000020;
            v37._countAndFlagsBits = 0;
            v37._object = (void *)0xE000000000000000;
            v38 = NSLocalizedString(_:tableName:bundle:value:comment:)(v36, (Swift::String_optional)0, (NSBundle)v35, v37, v85);

            v39 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
            v40 = swift_allocObject(v39, 72, 7);
            *(_OWORD *)(v40 + 16) = xmmword_100481740;
            *(_QWORD *)(v40 + 56) = &type metadata for String;
            *(_QWORD *)(v40 + 64) = sub_100071E88();
            *(_QWORD *)(v40 + 32) = v31;
            *(_QWORD *)(v40 + 40) = v33;
            String.init(format:_:)(v38._countAndFlagsBits, v38._object, v40);
            v42 = v41;
            swift_bridgeObjectRelease(v38._object);
            *(_QWORD *)&v83 = 0;
            *((_QWORD *)&v83 + 1) = 0xE000000000000000;
            _StringGuts.grow(_:)(20);
            v43 = objc_msgSend(v34, "mainBundle", swift_bridgeObjectRelease(*((_QWORD *)&v83 + 1)).n128_f64[0]);
            v44._countAndFlagsBits = 0xD000000000000022;
            v86._countAndFlagsBits = 0xD000000000000034;
            v86._object = (void *)0x80000001004C3A70;
            v44._object = (void *)0x80000001004C3A40;
            v45._countAndFlagsBits = 0;
            v45._object = (void *)0xE000000000000000;
            object = NSLocalizedString(_:tableName:bundle:value:comment:)(v44, (Swift::String_optional)0, (NSBundle)v43, v45, v86)._object;

            v47 = (void *)objc_opt_self(FMAddFriendsUtilities);
            v48 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease(v42);
            v49 = String._bridgeToObjectiveC()();
            objc_msgSend(v47, "showSimpleAlertWithTitle:message:", v48, v49, swift_bridgeObjectRelease(object).n128_f64[0]);

          }
          else
          {
            swift_bridgeObjectRelease(v27);
            objc_msgSend((id)objc_opt_self(FMAddFriendsUtilities), "showGenericErrorAlert");
          }
        }
      }
      else
      {
        objc_msgSend((id)objc_opt_self(FMAddFriendsUtilities), "showOfferToSelfError");
      }
    }
    else
    {
      v51 = (void *)objc_opt_self(NSNumberFormatter);
      v52 = *(_QWORD *)(v3 + 16);
      swift_bridgeObjectRelease(v3);
      v53 = objc_msgSend(objc_allocWithZone((Class)NSNumber), "initWithInteger:", v52);
      v54 = objc_msgSend(v51, "localizedStringFromNumber:numberStyle:", v53, 0);

      v55 = static String._unconditionallyBridgeFromObjectiveC(_:)(v54);
      v57 = v56;

      *(_QWORD *)&v83 = 0;
      *((_QWORD *)&v83 + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(*((_QWORD *)&v83 + 1));
      v58 = (void *)objc_opt_self(NSBundle);
      v59 = objc_msgSend(v58, "mainBundle");
      v60._countAndFlagsBits = 0xD000000000000023;
      v87._countAndFlagsBits = 0xD000000000000035;
      v87._object = (void *)0x80000001004C3920;
      v60._object = (void *)0x80000001004C38F0;
      v61._countAndFlagsBits = 0;
      v61._object = (void *)0xE000000000000000;
      v62 = NSLocalizedString(_:tableName:bundle:value:comment:)(v60, (Swift::String_optional)0, (NSBundle)v59, v61, v87);

      v63 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
      v64 = swift_allocObject(v63, 72, 7);
      *(_OWORD *)(v64 + 16) = xmmword_100481740;
      *(_QWORD *)(v64 + 56) = &type metadata for String;
      *(_QWORD *)(v64 + 64) = sub_100071E88();
      *(_QWORD *)(v64 + 32) = v55;
      *(_QWORD *)(v64 + 40) = v57;
      String.init(format:_:)(v62._countAndFlagsBits, v62._object, v64);
      v66 = v65;
      swift_bridgeObjectRelease(v62._object);
      *(_QWORD *)&v83 = 0;
      *((_QWORD *)&v83 + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      v67 = objc_msgSend(v58, "mainBundle", swift_bridgeObjectRelease(*((_QWORD *)&v83 + 1)).n128_f64[0]);
      v68._countAndFlagsBits = 0xD000000000000025;
      v88._countAndFlagsBits = 0xD000000000000037;
      v88._object = (void *)0x80000001004C3990;
      v68._object = (void *)0x80000001004C3960;
      v69._countAndFlagsBits = 0;
      v69._object = (void *)0xE000000000000000;
      v70 = NSLocalizedString(_:tableName:bundle:value:comment:)(v68, (Swift::String_optional)0, (NSBundle)v67, v69, v88)._object;

      v71 = (void *)objc_opt_self(FMAddFriendsUtilities);
      v72 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v66);
      v73 = String._bridgeToObjectiveC()();
      objc_msgSend(v71, "showSimpleAlertWithTitle:message:", v72, v73, swift_bridgeObjectRelease(v70).n128_f64[0]);

    }
  }
  else
  {
    swift_bridgeObjectRelease(v3);
  }

}

uint64_t sub_10038C414()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_identifier;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_10005E190(v0 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_10038C474()
{
  return type metadata accessor for FMLocationSubscription(0);
}

Swift::Int sub_10038C47C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  v0 = type metadata accessor for UUID(0);
  v1 = sub_100008000((unint64_t *)&unk_1005E4270, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v3, v0, v1);
  return Hasher._finalize()();
}

uint64_t sub_10038C4F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for UUID(0);
  v3 = sub_100008000((unint64_t *)&unk_1005E4270, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  return dispatch thunk of Hashable.hash(into:)(a1, v2, v3);
}

Swift::Int sub_10038C564(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, a1);
  v1 = type metadata accessor for UUID(0);
  v2 = sub_100008000((unint64_t *)&unk_1005E4270, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v4, v1, v2);
  return Hasher._finalize()();
}

uint64_t sub_10038C5DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;

  v5 = v2 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber;
  result = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber);
  if (result)
  {
    v7 = result;
    v8 = *(_QWORD *)(v5 + 8);
    ObjectType = swift_getObjectType(result);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8))(a1, a2, ObjectType, v8);
    return swift_unknownObjectRelease(v7);
  }
  return result;
}

uint64_t sub_10038C664(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;

  v5 = v2 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber;
  result = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber);
  if (result)
  {
    v7 = result;
    v8 = *(_QWORD *)(v5 + 8);
    ObjectType = swift_getObjectType(result);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, a2, ObjectType, v8);
    return swift_unknownObjectRelease(v7);
  }
  return result;
}

uint64_t sub_10038C6EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;

  v5 = v2 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber;
  result = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber);
  if (result)
  {
    v7 = result;
    v8 = *(_QWORD *)(v5 + 8);
    ObjectType = swift_getObjectType(result);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 24))(a1, a2, ObjectType, v8);
    return swift_unknownObjectRelease(v7);
  }
  return result;
}

uint64_t sub_10038C774(_QWORD *a1, _QWORD *a2)
{
  return static UUID.== infix(_:_:)(*a1 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_identifier, *a2 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_identifier);
}

uint64_t sub_10038C790()
{
  return sub_100008000(&qword_1005E2090, type metadata accessor for FMLocationSubscription, (uint64_t)&unk_10048E530);
}

char *sub_10038C7BC(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v15 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v15[(v6 + 16) & ~(unint64_t)v6];
    swift_retain(v15);
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v16 = type metadata accessor for FMFindingTechnology(0);
      (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = *a2;
      v10 = a2[1];
      *(_QWORD *)a1 = *a2;
      *((_QWORD *)a1 + 1) = v10;
      v11 = a2[2];
      *((_QWORD *)a1 + 2) = v11;
      v12 = v9;
      v13 = v10;
      v14 = v11;
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

void sub_10038C8A4(id *a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v4;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a1, a2);
  if (EnumCaseMultiPayload == 1)
  {
    v4 = type metadata accessor for FMFindingTechnology(0);
    (*(void (**)(id *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else if (!EnumCaseMultiPayload)
  {

  }
}

void **sub_10038C914(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
  if (EnumCaseMultiPayload == 1)
  {
    v13 = type metadata accessor for FMFindingTechnology(0);
    (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    v9 = a2[2];
    a1[2] = v9;
    v10 = v7;
    v11 = v8;
    v12 = v9;
    swift_storeEnumTagMultiPayload(a1, a3, 0);
  }
  return a1;
}

void **sub_10038C9D4(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;

  if (a1 != a2)
  {
    sub_1000B0660((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(a2, a3);
    if (EnumCaseMultiPayload == 1)
    {
      v13 = type metadata accessor for FMFindingTechnology(0);
      (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a1, a2, v13);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = *a2;
      *a1 = *a2;
      v8 = a2[1];
      a1[1] = v8;
      v9 = a2[2];
      a1[2] = v9;
      v10 = v7;
      v11 = v8;
      v12 = v9;
      swift_storeEnumTagMultiPayload(a1, a3, 0);
    }
  }
  return a1;
}

uint64_t type metadata accessor for FMPlatterIcon(uint64_t a1)
{
  uint64_t result;

  result = qword_1005E2130;
  if (!qword_1005E2130)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMPlatterIcon);
  return result;
}

void *sub_10038CAE8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
  {
    v6 = type metadata accessor for FMFindingTechnology(0);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload(a1, a3, 1);
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_10038CB74(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1000B0660((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload(a2, a3) == 1)
    {
      v6 = type metadata accessor for FMFindingTechnology(0);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload(a1, a3, 1);
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10038CC10(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = &unk_10048E640;
  result = type metadata accessor for FMFindingTechnology(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_10048E658;
    swift_initEnumMetadataMultiPayload(a1, 256, 3, v4);
    return 0;
  }
  return result;
}

void sub_10038CC88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  v1 = type metadata accessor for FMFindingTechnology(0);
  v2 = __chkstk_darwin(v1);
  __chkstk_darwin(v2);
  v3 = type metadata accessor for FMPlatterIcon(0);
  __chkstk_darwin(v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B05D0(v0, (uint64_t)v5);
  v6 = (char *)sub_10038CD8C + 4 * byte_10048E600[swift_getEnumCaseMultiPayload(v5, v3)];
  __asm { BR              X10 }
}

uint64_t sub_10038CD8C()
{
  uint64_t v0;

  return v0 + 6;
}

uint64_t sub_10038D0DC(uint64_t a1)
{
  return sub_10038D140(a1, (SEL *)&selRef_systemIndigoColor, &qword_1005E2098);
}

uint64_t sub_10038D0F0(uint64_t a1)
{
  return sub_10038D140(a1, (SEL *)&selRef_systemBlueColor, &qword_1005E20A0);
}

uint64_t sub_10038D104(uint64_t a1)
{
  return sub_10038D140(a1, (SEL *)&selRef_systemOrangeColor, &qword_1005E20A8);
}

uint64_t sub_10038D118(uint64_t a1)
{
  return sub_10038D140(a1, (SEL *)&selRef_systemPinkColor, &qword_1005E20B0);
}

uint64_t sub_10038D12C(uint64_t a1)
{
  return sub_10038D140(a1, (SEL *)&selRef_systemRedColor, &qword_1005E20B8);
}

uint64_t sub_10038D140(uint64_t a1, SEL *a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t result;

  v5 = sub_100053F2C(&qword_1005D2F10);
  v6 = swift_allocObject(v5, 48, 7);
  *(_OWORD *)(v6 + 16) = xmmword_1004820B0;
  v7 = (void *)objc_opt_self(UIColor);
  *(_QWORD *)(v6 + 32) = objc_msgSend(v7, "whiteColor");
  v8 = objc_msgSend(v7, *a2);
  *(_QWORD *)(v6 + 40) = v8;
  result = specialized Array._endMutation()(v8);
  *a3 = v6;
  return result;
}

void sub_10038D1EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v1 = v0;
  v2 = type metadata accessor for FMFindingTechnology(0);
  v3 = __chkstk_darwin(v2);
  __chkstk_darwin(v3);
  v4 = type metadata accessor for FMPlatterIcon(0);
  __chkstk_darwin(v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B05D0(v1, (uint64_t)v6);
  v7 = (char *)&loc_10038D2BC + dword_10038DADC[swift_getEnumCaseMultiPayload(v6, v4)];
  __asm { BR              X10 }
}

uint64_t sub_10038D2CC()
{
  uint64_t v0;

  if (qword_1005D1FF0 != -1)
    swift_once(&qword_1005D1FF0, sub_10038D0DC);
  v0 = qword_1005E2098;
  swift_bridgeObjectRetain(qword_1005E2098);
  return v0;
}

uint64_t sub_10038DB5C(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = a1;
  if ((a1 & 0x8000000000000000) != 0 || (a1 & 0x4000000000000000) != 0)
    goto LABEL_39;
  v2 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a1);
  v21 = v1 & 0xFFFFFFFFFFFFFF8;
LABEL_4:
  if ((v2 & 0x4000000000000000) == 0)
  {
    v3 = *(_QWORD *)(v2 + 16);
    swift_bridgeObjectRelease(v1);
    v4 = (unint64_t)v3 >> 1;
    goto LABEL_6;
  }
  while (1)
  {
    v19 = swift_retain(v2);
    v3 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(v1);
    swift_release(v2);
    v20 = v3 >= 0 ? v3 : v3 + 1;
    if (v3 < -1)
      __break(1u);
    v4 = v20 >> 1;
LABEL_6:
    if ((unint64_t)(v3 + 1) < 3)
      return v2;
    v5 = 0;
    while (1)
    {
      v8 = v5 + 1;
      v1 = v3 - (v5 + 1);
      if (__OFSUB__(v3, v5 + 1))
        break;
      if (v5 != v1)
      {
        v9 = v21;
        if ((v21 & 0xC000000000000001) != 0)
        {
          v12 = specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v21);
          v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - (v5 + 1), v21);
        }
        else
        {
          if ((v5 & 0x8000000000000000) != 0)
            goto LABEL_33;
          v10 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v5 >= v10)
            goto LABEL_34;
          v11 = *(id *)(v21 + 8 * v5 + 32);
          if ((v1 & 0x8000000000000000) != 0)
            goto LABEL_35;
          if (v1 >= v10)
            goto LABEL_37;
          v12 = (uint64_t)v11;
          v13 = *(id *)(v21 + 32 + 8 * v1);
        }
        v14 = v13;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v21)
          || v21 < 0
          || (v21 & 0x4000000000000000) != 0)
        {
          v9 = sub_100200100(v21);
          v21 = v9;
        }
        v15 = (v9 & 0xFFFFFFFFFFFFFF8) + 8 * v5;

        *(_QWORD *)(v15 + 32) = v14;
        specialized Array._endMutation()(v16);
        v17 = v21;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject(v21)
          || v21 < 0
          || (v21 & 0x4000000000000000) != 0)
        {
          v17 = sub_100200100(v21);
          v21 = v17;
        }
        if ((v1 & 0x8000000000000000) != 0)
          goto LABEL_36;
        if (v1 >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_38;
        v6 = (v17 & 0xFFFFFFFFFFFFFF8) + 8 * v1;

        *(_QWORD *)(v6 + 32) = v12;
        specialized Array._endMutation()(v7);
      }
      v5 = v8;
      if (v4 == v8)
        return v21;
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    v2 = (uint64_t)sub_1003EF298(v1);
    v21 = v2;
    if ((v2 & 0x8000000000000000) == 0)
      goto LABEL_4;
  }
}

uint64_t sub_10038DD74()
{
  id v0;
  id v1;
  id v2;
  void *v3;
  char **v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v0 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  v1 = objc_msgSend(v0, "traitCollection");

  v2 = objc_msgSend(v1, "userInterfaceStyle");
  v3 = (void *)objc_opt_self(UIColor);
  v4 = &selRef_systemGray2Color;
  if (v2 != (id)2)
    v4 = &selRef_quaternaryLabelColor;
  v5 = objc_msgSend(v3, *v4);
  v6 = sub_100053F2C(&qword_1005D2F10);
  v7 = swift_allocObject(v6, 48, 7);
  *(_OWORD *)(v7 + 16) = xmmword_1004820B0;
  v8 = objc_msgSend((id)objc_opt_self(UIColor), "whiteColor");
  *(_QWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v7 + 40) = v5;
  specialized Array._endMutation()(v8);
  return v7;
}

id sub_10038DE84(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  void *v7;
  id v8;
  Class isa;
  id v10;
  id v11;
  NSString v12;
  id v13;
  NSString v14;
  id v15;

  v7 = (void *)objc_opt_self(UIImageSymbolConfiguration);
  v8 = objc_msgSend(v7, "configurationWithTextStyle:scale:", UIFontTextStyleTitle2, 3);
  sub_10038E22C();
  swift_bridgeObjectRetain(a3);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v10 = objc_msgSend(v7, "configurationWithPaletteColors:", isa, swift_bridgeObjectRelease(a3).n128_f64[0]);

  v11 = objc_msgSend(v8, "configurationByApplyingConfiguration:", v10);
  if ((a4 & 1) != 0)
  {
    v12 = objc_msgSend(v7, "configurationWithWeight:", 7);
    v13 = objc_msgSend(v11, "configurationByApplyingConfiguration:", v12);
    swift_bridgeObjectRetain(a2);
    v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
    v15 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:withConfiguration:", v14, v13);

  }
  else
  {
    swift_bridgeObjectRetain(a2);
    v14 = v11;
    v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a2);
    v15 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:withConfiguration:", v12, v14);
    v11 = v10;
    v13 = v14;
  }

  return v15;
}

id sub_10038E074(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  char v21;
  uint64_t v23;
  uint64_t v24;

  v4 = type metadata accessor for FMPlatterIcon(0);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (id *)((char *)&v24 - v8);
  sub_1000B05D0(a1, (uint64_t)&v24 - v8);
  if (swift_getEnumCaseMultiPayload(v9, v4))
  {
    sub_1000B0660((uint64_t)v9);
    sub_10038CC88();
    v11 = v10;
    v13 = v12;
    if (a2)
    {
      if (a2 == 1)
      {
        sub_10038D1EC();
        v15 = sub_10038DB5C(v14);
      }
      else
      {
        v15 = sub_10038DD74();
      }
    }
    else
    {
      sub_10038D1EC();
    }
    v19 = v15;
    sub_1000B05D0(a1, (uint64_t)v7);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7, v4);
    if ((EnumCaseMultiPayload - 2) >= 0x1E)
    {
      if (EnumCaseMultiPayload)
      {
        v23 = type metadata accessor for FMFindingTechnology(0);
        (*(void (**)(char *, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v7, v23);
        v21 = 1;
        goto LABEL_13;
      }
      sub_1000B0660((uint64_t)v7);
    }
    v21 = 0;
LABEL_13:
    v16 = sub_10038DE84(v11, v13, v19, v21);
    swift_bridgeObjectRelease(v13);
    swift_bridgeObjectRelease(v19);
    return v16;
  }
  v16 = *v9;
  v17 = v9[1];
  v18 = v9[2];
  if (a2)
  {
    if (a2 == 1)
    {

      if (v17)
      {

        return v17;
      }
    }
    else
    {

      if (v18)
      {

        return v18;
      }
    }
  }
  else
  {

  }
  return v16;
}

unint64_t sub_10038E22C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005DB750;
  if (!qword_1005DB750)
  {
    v1 = objc_opt_self(UIColor);
    result = swift_getObjCClassMetadata(v1);
    atomic_store(result, (unint64_t *)&qword_1005DB750);
  }
  return result;
}

id sub_10038E268(double a1, double a2)
{
  double v4;
  double v5;
  id v6;
  double v7;
  double v8;
  double v10;
  double v11;

  v4 = a2 / 6.0;
  v11 = a1 * 0.448;
  v10 = a1 * 0.385;
  v5 = a2 / 3.0;
  v6 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
  objc_msgSend(v6, "moveToPoint:", a1 + a1, a1);
  v7 = a2 * 0.5;
  objc_msgSend(v6, "addCurveToPoint:controlPoint1:controlPoint2:", v5 + a2 * 0.5 + a1, a1 + a1, a1 + a1);
  v8 = a1 + a1 + a2;
  objc_msgSend(v6, "addCurveToPoint:controlPoint1:controlPoint2:", a1, v8, v5 + a1, a1 + a1 + v5, v4 + a1, v8);
  objc_msgSend(v6, "addCurveToPoint:controlPoint1:controlPoint2:", a1 - (v7 + v5), a1 + a1, a1 - v4, v8, a1 - v5, a1 + a1 + v5);
  objc_msgSend(v6, "addCurveToPoint:controlPoint1:controlPoint2:", 0.0, a1, v10, a1 + a1 - v5, 0.0, a1 * 1.5);
  objc_msgSend(v6, "addCurveToPoint:controlPoint1:controlPoint2:", a1, 0.0, 0.0, v11, v11, 0.0);
  objc_msgSend(v6, "addCurveToPoint:controlPoint1:controlPoint2:", a1 + a1, a1, a1 + a1 - v11, 0.0, a1 + a1, v11);
  objc_msgSend(v6, "closePath");
  return v6;
}

id sub_10038E428(double a1, double a2, double a3)
{
  double v7;
  double v8;
  double v9;
  id v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;

  if (a3 == 0.0)
    return sub_10038E268(a1, a2);
  v14 = a2 / 6.0;
  v7 = a1 + a1;
  v18 = a1 * 0.448;
  v16 = a1 * 0.385;
  v8 = a3 * 0.5;
  v9 = a2 / 3.0;
  v10 = objc_msgSend(objc_allocWithZone((Class)UIBezierPath), "init");
  objc_msgSend(v10, "moveToPoint:", v7 + a3, a1);
  v17 = a1 + a3;
  v15 = v7 + a3;
  objc_msgSend(v10, "addCurveToPoint:controlPoint1:controlPoint2:");
  v11 = v8 + a1;
  v12 = a2 * 0.5;
  objc_msgSend(v10, "addLineToPoint:", v9 + a2 * 0.5 + v8 + a1, a1 + a1);
  v13 = v7 + a2;
  objc_msgSend(v10, "addCurveToPoint:controlPoint1:controlPoint2:", v11, v13, v9 + v11, v7 + v9, v14 + v11, v13);
  objc_msgSend(v10, "addCurveToPoint:controlPoint1:controlPoint2:", v11 - (v12 + v9), a1 + a1, v11 - v14, v13, v11 - v9, v7 + v9);
  objc_msgSend(v10, "addLineToPoint:", a1, a1 + a1);
  objc_msgSend(v10, "addCurveToPoint:controlPoint1:controlPoint2:", 0.0, a1, v16, v7 - v9, 0.0, a1 * 1.5);
  objc_msgSend(v10, "addCurveToPoint:controlPoint1:controlPoint2:", a1, 0.0, 0.0, v18, v18, 0.0);
  objc_msgSend(v10, "addLineToPoint:", v9 + v12 + v17, 0.0);
  objc_msgSend(v10, "addCurveToPoint:controlPoint1:controlPoint2:", v15, a1, v15 - v18, 0.0, v15, v18);
  objc_msgSend(v10, "closePath");
  return v10;
}

_QWORD *sub_10038E68C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;

  v16 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    v15 = v1;
    v17 = _swiftEmptyArrayStorage;
    sub_100112050(0, v6, 0);
    v7 = v17;
    v8 = type metadata accessor for FMIPBeaconShare(0);
    v9 = *(_QWORD *)(v8 - 8);
    v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    do
    {
      FMIPBeaconShare.identifier.getter(v8);
      v17 = v7;
      v13 = v7[2];
      v12 = v7[3];
      if (v13 >= v12 >> 1)
      {
        sub_100112050(v12 > 1, v13 + 1, 1);
        v7 = v17;
      }
      v7[2] = v13 + 1;
      v8 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))((unint64_t)v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v13, v5, v16);
      v10 += v11;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_10038E7E4(unsigned __int8 *a1)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10038E808 + 4 * byte_10048E6A0[*a1]))(1);
}

uint64_t sub_10038E808@<X0>(char a1@<W8>)
{
  return (0xCu >> (a1 & 0xF)) & 1;
}

BOOL sub_10038E81C@<W0>(int a1@<W8>)
{
  return a1 == 3;
}

uint64_t sub_10038E828()
{
  return 0;
}

uint64_t sub_10038E830(uint64_t a1, unsigned __int8 *a2)
{
  return ((uint64_t (*)(_QWORD))((char *)sub_10038E858 + 4 * byte_10048E6A4[*a2]))(0);
}

uint64_t sub_10038E858@<X0>(char a1@<W8>)
{
  return (3u >> (a1 & 0xF)) & 1;
}

BOOL sub_10038E86C@<W0>(int a1@<W8>)
{
  return a1 != 3;
}

uint64_t sub_10038E878()
{
  return 1;
}

uint64_t sub_10038E880(unsigned __int8 *a1)
{
  return ((uint64_t (*)(_QWORD))((char *)sub_10038E8A8 + 4 * byte_10048E6A8[*a1]))(0);
}

uint64_t sub_10038E8A8@<X0>(char a1@<W8>)
{
  return (3u >> (a1 & 0xF)) & 1;
}

BOOL sub_10038E8BC@<W0>(int a1@<W8>)
{
  return a1 != 3;
}

uint64_t sub_10038E8C8()
{
  return 1;
}

uint64_t sub_10038E8D0(uint64_t a1, unsigned __int8 *a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_10038E8F4 + 4 * byte_10048E6AC[*a2]))(1);
}

uint64_t sub_10038E8F4@<X0>(char a1@<W8>)
{
  return (0xCu >> (a1 & 0xF)) & 1;
}

BOOL sub_10038E908@<W0>(int a1@<W8>)
{
  return a1 == 3;
}

uint64_t sub_10038E914()
{
  return 0;
}

uint64_t sub_10038E91C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2)
    return sub_1001F463C(*((_QWORD *)a1 + 1), *((_QWORD *)a2 + 1));
  else
    return 0;
}

BOOL sub_10038E940()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _BYTE v10[24];

  v1 = type metadata accessor for FMSelectedSection(0);
  __chkstk_darwin(v1);
  v3 = (uint64_t *)&v10[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator) + 56)
     + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v4, v10, 0, 0);
  sub_10004FC74(v4, (uint64_t)v3, type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload(v3, v1) == 5)
  {
    v5 = *v3;
    v6 = v3[1];
    v7 = v3[2];
    swift_bridgeObjectRelease(v5);
    if (v7 >= 4)
    {
      sub_1000758D8(v6, v7);
      return 0;
    }
    else
    {
      return (v7 & 0xF) == 0;
    }
  }
  else
  {
    sub_10004FCB8((uint64_t)v3, type metadata accessor for FMSelectedSection);
    return 1;
  }
}

void sub_10038EA48(char a1)
{
  void *v1;
  uint64_t v3;
  char *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60[3];

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v3 = type metadata accessor for Logger(0);
  sub_100056D88(v3, (uint64_t)qword_1005F5748);
  v4 = v1;
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    *(_DWORD *)v7 = 136315138;
    v60[0] = v8;
    if (v4[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_updatesEnabled])
      v9 = 1702195828;
    else
      v9 = 0x65736C6166;
    if (v4[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_updatesEnabled])
      v10 = 0xE400000000000000;
    else
      v10 = 0xE500000000000000;
    v58 = sub_100056DA0(v9, v10, v60);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59);
    swift_bridgeObjectRelease(v10);

    _os_log_impl((void *)&_mh_execute_header, v5, v6, "FMItemsListDataSource: updatesEnabled: %s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);
  }
  else
  {

  }
  v11 = OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_updatesEnabled;
  if (v4[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_updatesEnabled] != 1)
  {
    v45 = 0;
    v46 = *(_QWORD *)&v4[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_deviceSubscription];
    if (!v46)
      goto LABEL_22;
    v47 = *(_QWORD *)(*(_QWORD *)&v4[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator] + 24);
    swift_beginAccess(v47 + 16, v60, 33, 0);
    swift_retain(v46);
    swift_retain(v47);
    v48 = sub_1001138E0((uint64_t *)(v47 + 16), v46);
    v49 = v48;
    v50 = *(_QWORD *)(v47 + 16);
    if ((unint64_t)v50 >> 62)
    {
      if (v50 < 0)
        v56 = *(_QWORD *)(v47 + 16);
      else
        v56 = v50 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(v47 + 16));
      v51 = _CocoaArrayWrapper.endIndex.getter(v56);
      swift_bridgeObjectRelease(v50);
      if (v51 >= v49)
        goto LABEL_21;
    }
    else
    {
      v51 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v51 >= v48)
      {
LABEL_21:
        sub_1002006EC(v49, v51);
        swift_endAccess(v60);
        swift_release(v47);
        swift_release(v46);
LABEL_22:
        v46 = *(_QWORD *)&v4[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_locationSubscription];
        if (!v46)
          return;
        v52 = *(char **)(*(_QWORD *)&v4[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator] + 40);
        v53 = (uint64_t *)&v52[OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions];
        swift_beginAccess(&v52[OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions], v60, 33, 0);
        swift_retain(v46);
        v4 = v52;
        v54 = sub_10033579C(v53, v46);
        v45 = v54;
        v49 = *v53;
        if (!((unint64_t)*v53 >> 62))
        {
          v55 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v55 >= v54)
          {
LABEL_25:
            sub_1002006F8(v45, v55);
            swift_endAccess(v60);

            swift_release(v46);
            return;
          }
LABEL_36:
          __break(1u);
          return;
        }
LABEL_32:
        if (v49 < 0)
          v57 = v49;
        else
          v57 = v49 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v49);
        v55 = _CocoaArrayWrapper.endIndex.getter(v57);
        swift_bridgeObjectRelease(v49);
        if (v55 >= v45)
          goto LABEL_25;
        goto LABEL_36;
      }
    }
    __break(1u);
    goto LABEL_32;
  }
  v12 = *(_QWORD *)&v4[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator];
  v13 = *(_QWORD *)(v12 + 24);
  v14 = type metadata accessor for FMDevicesSubscription(0);
  v15 = swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
  v16 = v15 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
  *(_QWORD *)(v16 + 8) = 0;
  swift_unknownObjectWeakInit(v16);
  v17 = v4;
  v18 = swift_retain(v13);
  UUID.init()(v18);
  v19 = v15 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
  *(_QWORD *)(v19 + 8) = &off_10055F178;
  swift_unknownObjectWeakAssign(v19, v17);

  swift_beginAccess(v13 + 16, v60, 33, 0);
  v20 = swift_retain(v15);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
  v22 = *(_QWORD *)((*(_QWORD *)(v13 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v21 = *(_QWORD *)((*(_QWORD *)(v13 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v22 >= v21 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
  v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v15);
  specialized Array._endMutation()(v23);
  swift_endAccess(v60);
  swift_release(v13);
  v24 = *(_QWORD *)&v17[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_deviceSubscription];
  *(_QWORD *)&v17[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_deviceSubscription] = v15;
  swift_release(v24);
  v25 = *(void **)(v12 + 40);
  v26 = type metadata accessor for FMLocationSubscription(0);
  v27 = swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
  v28 = v27 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber;
  *(_QWORD *)(v28 + 8) = 0;
  swift_unknownObjectWeakInit(v28);
  v29 = v17;
  v30 = v25;
  UUID.init()(v30);
  v31 = v27 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber;
  *(_QWORD *)(v31 + 8) = &off_10055F148;
  swift_unknownObjectWeakAssign(v31, v29);

  v32 = &v30[OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions];
  swift_beginAccess(&v30[OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions], v60, 33, 0);
  v33 = swift_retain(v27);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v33);
  v35 = *(_QWORD *)((*(_QWORD *)v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v34 = *(_QWORD *)((*(_QWORD *)v32 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v35 >= v34 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1);
  v36 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v27);
  specialized Array._endMutation()(v36);
  swift_endAccess(v60);

  v37 = *(_QWORD *)&v29[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_locationSubscription];
  *(_QWORD *)&v29[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_locationSubscription] = v27;
  swift_release(v37);
  v38 = v4[v11] ^ a1;
  v39 = *(_QWORD *)(v12 + 24);
  v40 = swift_retain(v39);
  v41 = FMIPManager.items.getter(v40);
  swift_release(v39);
  v42 = *(void **)(*(_QWORD *)(v12 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
  v43 = *(_QWORD *)(*(_QWORD *)(v12 + 24) + 64);
  v44 = v42;
  swift_bridgeObjectRetain(v43);
  sub_100390D80(v41, v43, v42, v38 & 1);
  swift_bridgeObjectRelease(v43);

  swift_bridgeObjectRelease(v41);
}

char *sub_10038F064(uint64_t a1, void *a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  void *v27;
  uint64_t v28;
  id v29;
  objc_class *v30;
  id v31;
  id v32;
  char *v33;
  NSString v34;
  uint64_t v35;
  uint64_t ObjCClassFromMetadata;
  NSString v37;
  uint64_t v38;
  uint64_t v39;
  NSString v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  id v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  objc_super v55;
  _QWORD *v56;

  v53 = a2;
  v54 = a1;
  v3 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v51 = *(_QWORD *)(v3 - 8);
  v52 = v3;
  __chkstk_darwin(v3);
  v5 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = &v2[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_delegate];
  *((_QWORD *)v12 + 1) = 0;
  swift_unknownObjectWeakInit(v12);
  *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_deviceSubscription] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_locationSubscription] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_cellsViewModel] = _swiftEmptyArrayStorage;
  v13 = OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_itemAger;
  v14 = type metadata accessor for FMItemAger();
  swift_allocObject(v14, 40, 7);
  v15 = v2;
  *(_QWORD *)&v2[v13] = sub_1000465C0();
  v16 = OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_updateQueue;
  sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  static DispatchQoS.utility.getter();
  v56 = _swiftEmptyArrayStorage;
  v17 = sub_100008000((unint64_t *)&unk_1005D3970, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v18 = sub_100053F2C((uint64_t *)&unk_1005D20F0);
  v19 = sub_10003F734((unint64_t *)&unk_1005D3980, (uint64_t *)&unk_1005D20F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v56, v18, v19, v6, v17);
  (*(void (**)(char *, _QWORD, uint64_t))(v51 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v52);
  *(_QWORD *)&v15[v16] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000024, 0x80000001004C3D10, v11, v8, v5, 0);
  *(_QWORD *)&v15[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_delayedUpdateWorkItem] = 0;
  v15[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_isRemovingCell] = 0;
  v20 = OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_tableViewFooter;
  *(_QWORD *)&v15[v20] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMListFooterActionsView()), "init");
  v21 = &v15[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource__listTitle];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0xE000000000000000;
  v15[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_updatesEnabled] = 0;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v22 = type metadata accessor for Logger(0);
  v23 = sub_100056D88(v22, (uint64_t)qword_1005F5748);
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.default.getter(v24);
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v26 = 0;
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "FMItemsListDataSource: initialized", v26, 2u);
    swift_slowDealloc(v26, -1, -1);
  }

  v27 = v53;
  v28 = v54;
  *(_QWORD *)&v15[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator] = v54;
  *(_QWORD *)&v15[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_tableView] = v27;
  swift_retain(v28);
  v29 = v27;

  v30 = (objc_class *)type metadata accessor for FMItemsListDataSource();
  v55.receiver = v15;
  v55.super_class = v30;
  v31 = objc_msgSendSuper2(&v55, "init");
  v32 = v29;
  v33 = (char *)v31;
  v34 = String._bridgeToObjectiveC()();
  objc_msgSend(v32, "setAccessibilityIdentifier:", v34);

  v35 = sub_100053F2C(&qword_1005E2200);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v35);
  v37 = String._bridgeToObjectiveC()();
  objc_msgSend(v32, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v37);

  v38 = sub_100053F2C(&qword_1005E2208);
  v39 = swift_getObjCClassFromMetadata(v38);
  v40 = String._bridgeToObjectiveC()();
  objc_msgSend(v32, "registerClass:forCellReuseIdentifier:", v39, v40);

  v41 = *(_QWORD *)&v33[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_itemAger];
  *(_QWORD *)(v41 + 24) = &off_10055F138;
  swift_unknownObjectWeakAssign(v41 + 16, v33);
  sub_100393A88();
  sub_100391BD8();
  v42 = *(_QWORD *)&v33[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator];
  v43 = *(_QWORD *)(v42 + 24);
  v44 = swift_retain(v43);
  v45 = FMIPManager.items.getter(v44);
  swift_release(v43);
  v46 = *(void **)(*(_QWORD *)(v42 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
  v47 = *(_QWORD *)(*(_QWORD *)(v42 + 24) + 64);
  v48 = v46;
  swift_bridgeObjectRetain(v47);
  sub_100390D80(v45, v47, v46, 0);
  swift_bridgeObjectRelease(v47);

  swift_bridgeObjectRelease(v45);
  swift_release(v28);

  return v33;
}

unint64_t sub_10038F5B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  _BOOL4 v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  __n128 v25;
  uint8_t *v26;
  uint64_t v27;
  unint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50[2];

  v3 = v2;
  v6 = type metadata accessor for FMItemCellViewModel(0);
  v46 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for IndexPath(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v13 = type metadata accessor for Logger(0);
  sub_100056D88(v13, (uint64_t)qword_1005F5748);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v48 = a1;
  v15 = v14(v12, a1, v9);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter(v16);
  v18 = os_log_type_enabled(v16, v17);
  v47 = a2;
  if (v18)
  {
    v19 = swift_slowAlloc(12, -1);
    v44 = v2;
    v20 = (uint8_t *)v19;
    v21 = swift_slowAlloc(32, -1);
    v50[0] = v21;
    v45 = v8;
    *(_DWORD *)v20 = 136315138;
    v22 = IndexPath.debugDescription.getter();
    v24 = v23;
    v49 = sub_100056DA0(v22, v23, v50);
    v8 = v45;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v49, v50);
    v25 = swift_bridgeObjectRelease(v24);
    (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v25);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "FMItemsListDataSource: item for indexPath %s", v20, 0xCu);
    swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v21, -1, -1);
    v26 = v20;
    v3 = v44;
    swift_slowDealloc(v26, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }

  result = IndexPath.section.getter(v27);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  v29 = OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_cellsViewModel;
  if (result >= *(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_cellsViewModel) + 16))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  result = IndexPath.section.getter(result);
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v30 = *(_QWORD *)(v3 + v29);
  if (result >= *(_QWORD *)(v30 + 16))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v31 = *(_QWORD *)(v30 + 16 * result + 40);
  swift_bridgeObjectRetain(v31);
  result = IndexPath.row.getter(v32);
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (result >= *(_QWORD *)(v31 + 16))
  {
LABEL_21:
    __break(1u);
    return result;
  }
  sub_10004FC74(v31+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(_QWORD *)(v46 + 72) * result, (uint64_t)v8, type metadata accessor for FMItemCellViewModel);
  swift_bridgeObjectRelease(v31);
  v33 = *(_QWORD *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator) + 24);
  v34 = *((_QWORD *)v8 + 2);
  v35 = *((_QWORD *)v8 + 3);
  v36 = swift_retain(v33);
  v37 = FMIPManager.items.getter(v36);
  swift_bridgeObjectRetain(v35);
  v38 = sub_100114030(v37, v34, v35);
  swift_bridgeObjectRelease(v37);
  swift_bridgeObjectRelease(v35);
  v39 = v38[2];
  v40 = type metadata accessor for FMIPItem(0);
  v41 = *(_QWORD *)(v40 - 8);
  if (v39)
  {
    v42 = v47;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v41 + 16))(v47, (unint64_t)v38+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80)), v40);
    v43 = 0;
  }
  else
  {
    v43 = 1;
    v42 = v47;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56))(v42, v43, 1, v40);
  swift_release(v33);
  swift_bridgeObjectRelease(v38);
  return sub_10004FCB8((uint64_t)v8, type metadata accessor for FMItemCellViewModel);
}

double sub_10038F97C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  double result;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator);
  v2 = *(_QWORD *)(v1 + 24);
  v3 = swift_retain(v2);
  v4 = FMIPManager.items.getter(v3);
  swift_release(v2);
  v5 = *(void **)(*(_QWORD *)(v1 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
  v6 = *(_QWORD *)(*(_QWORD *)(v1 + 24) + 64);
  v7 = v5;
  swift_bridgeObjectRetain(v6);
  sub_100390D80(v4, v6, v5, 0);
  swift_bridgeObjectRelease(v6);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

void sub_10038FA8C(id a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, id);
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  __n128 v27;
  uint8_t *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  NSString v36;
  Class isa;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  id v48;
  double v49;
  id v50;
  double v51;
  double v52;
  uint64_t v53;
  void *v54;
  double v55;
  id v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  id v62;
  double v63;
  id v64;
  double v65;
  double v66;
  double v67;
  id v68;
  uint64_t v69;
  BOOL v70;
  unsigned int v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)();
  uint64_t v97;
  char *v98;
  id v99;
  void (*v100)(char *, uint64_t, id);
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t aBlock[5];
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;

  v5 = type metadata accessor for FMItemCellViewModel(0);
  v106 = *(_QWORD *)(v5 - 8);
  v107 = v5;
  v6 = __chkstk_darwin(v5);
  v103 = v7;
  v104 = (uint64_t)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v9 = (char *)&v98 - v8;
  v10 = (_QWORD *)type metadata accessor for IndexPath(0);
  v11 = *(v10 - 1);
  v12 = __chkstk_darwin(v10);
  v102 = (char *)&v98 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = v13;
  __chkstk_darwin(v12);
  v15 = (char *)&v98 - v14;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v16 = type metadata accessor for Logger(0);
  sub_100056D88(v16, (uint64_t)qword_1005F5748);
  v17 = *(void (**)(char *, uint64_t, id))(v11 + 16);
  v109 = a2;
  v100 = v17;
  v18 = ((uint64_t (*)(char *, uint64_t, _QWORD *))v17)(v15, a2, v10);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  v21 = v20;
  if (os_log_type_enabled(v19, v20))
  {
    v22 = swift_slowAlloc(12, -1);
    v99 = a1;
    v23 = (uint8_t *)v22;
    a2 = swift_slowAlloc(32, -1);
    aBlock[0] = a2;
    *(_DWORD *)v23 = 136315138;
    v2 = (uint64_t)(v23 + 12);
    v105 = v11;
    v24 = IndexPath.debugDescription.getter();
    v26 = v25;
    v112 = sub_100056DA0(v24, v25, aBlock);
    v11 = v105;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v112, &v113);
    v27 = swift_bridgeObjectRelease(v26);
    (*(void (**)(char *, _QWORD *, __n128))(v11 + 8))(v15, v10, v27);
    _os_log_impl((void *)&_mh_execute_header, v19, (os_log_type_t)v21, "FMItemsListDataSource: cellForRowAt %s", v23, 0xCu);
    swift_arrayDestroy(a2, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(a2, -1, -1);
    v28 = v23;
    a1 = v99;
    swift_slowDealloc(v28, -1, -1);
  }
  else
  {
    (*(void (**)(char *, _QWORD *))(v11 + 8))(v15, v10);
  }

  v30 = IndexPath.section.getter(v29);
  v31 = v108;
  if ((v30 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_36;
  }
  v2 = OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_cellsViewModel;
  v32 = *(_QWORD *)(v108 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_cellsViewModel);
  if (v30 >= *(_QWORD *)(v32 + 16))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  a2 = *(_QWORD *)(v32 + 16 * v30 + 40);
  swift_bridgeObjectRetain(a2);
  v34 = IndexPath.row.getter(v33);
  if ((v34 & 0x8000000000000000) != 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if (v34 >= *(_QWORD *)(a2 + 16))
  {
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v99 = v10;
  v21 = *(unsigned __int8 *)(v106 + 80);
  sub_10004FC74(a2 + ((v21 + 32) & ~v21) + *(_QWORD *)(v106 + 72) * v34, (uint64_t)v9, type metadata accessor for FMItemCellViewModel);
  swift_bridgeObjectRelease(a2);
  if (v9[*(int *)(v107 + 92)])
    v35 = 0x80000001004B3790;
  else
    v35 = 0x80000001004B37B0;
  v36 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v35);
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  a1 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v36, isa);

  v38 = sub_100053F2C(&qword_1005E2200);
  v39 = swift_dynamicCastClass(a1, v38);
  if (!v39)
    goto LABEL_33;
  v10 = (_QWORD *)v39;
  a2 = IndexPath.row.getter(v39);
  v40 = IndexPath.section.getter(a2);
  if ((v40 & 0x8000000000000000) != 0)
    goto LABEL_39;
  v41 = *(_QWORD *)(v31 + v2);
  if (v40 >= *(_QWORD *)(v41 + 16))
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (a2 >= *(_QWORD *)(*(_QWORD *)(v41 + 16 * v40 + 40) + 16))
  {
LABEL_33:

    objc_msgSend(objc_allocWithZone((Class)UITableViewCell), "init");
    v96 = 0;
    v77 = 0;
LABEL_34:
    sub_10004FCB8((uint64_t)v9, type metadata accessor for FMItemCellViewModel);
    sub_1000327F0((uint64_t)v96, v77);
    return;
  }
  v42 = IndexPath.section.getter(v40);
  if ((v42 & 0x8000000000000000) != 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v43 = *(_QWORD *)(v31 + v2);
  if (v42 >= *(_QWORD *)(v43 + 16))
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v106 = *(_QWORD *)(v43 + 16);
  v107 = ~v21;
  v2 = *(_QWORD *)(*(_QWORD *)(v43 + 16 * v42 + 40) + 16);
  v44 = (uint64_t *)(*(_QWORD *)(v31 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_tableViewFooter)
                  + OBJC_IVAR____TtC6FindMy23FMListFooterActionsView_actions);
  swift_beginAccess(v44, &v112, 0, 0);
  a2 = *v44;
  v98 = v9;
  v105 = v11;
  if (!((unint64_t)a2 >> 62))
  {
    v45 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_21;
  }
LABEL_43:
  if (a2 < 0)
    v97 = a2;
  else
    v97 = a2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a2);
  v45 = _CocoaArrayWrapper.endIndex.getter(v97);
  swift_bridgeObjectRelease(a2);
LABEL_21:
  v46 = qword_1005DA290;
  *((_BYTE *)v10 + qword_1005DA290) = v45 != 0;
  v47 = (void *)objc_opt_self(UIScreen);
  v48 = objc_msgSend(v47, "mainScreen");
  v49 = UIRoundToScreenScale(0.3);

  v50 = objc_msgSend(v10, "containerView");
  objc_msgSend(v50, "bounds");
  v52 = v51;

  v53 = qword_1005DA280;
  v54 = *(void **)((char *)v10 + qword_1005DA280);
  v55 = sub_100462EB0();
  v56 = objc_msgSend(v54, "setFrame:", v55, v52 - v49, sub_100462EBC(), v49);
  v57 = v109;
  v58 = IndexPath.row.getter(v56) == v2 - 1;
  v59 = qword_1005DA298;
  *((_BYTE *)v10 + qword_1005DA298) = v58;
  objc_msgSend(v54, "setHidden:");
  v60 = v47;
  v61 = v57;
  v62 = objc_msgSend(v60, "mainScreen");
  v63 = UIRoundToScreenScale(0.3);

  v64 = objc_msgSend(v10, "containerView");
  objc_msgSend(v64, "bounds");
  v66 = v65;

  v67 = sub_100462EB0();
  v68 = objc_msgSend(v54, "setFrame:", v67, v66 - v63, sub_100462EBC(), v63);
  v69 = IndexPath.section.getter(v68);
  v70 = v69 == v106 - 1;
  *((_BYTE *)v10 + qword_1005DA2A8) = v70;
  v71 = *((unsigned __int8 *)v10 + v59);
  if (v70)
    v72 = *((unsigned __int8 *)v10 + v59);
  else
    v72 = 0;
  if (v70)
    v71 = 0;
  if (*((_BYTE *)v10 + v46))
    v73 = v71;
  else
    v73 = v72;
  objc_msgSend(*(id *)((char *)v10 + v53), "setHidden:", v73, v98);
  v74 = objc_opt_self(UIView);
  v9 = v98;
  v75 = v104;
  sub_10004FC74((uint64_t)v98, v104, type metadata accessor for FMItemCellViewModel);
  v76 = (v21 + 24) & v107;
  v77 = swift_allocObject(&unk_10055F778, v76 + v103, v21 | 7);
  *(_QWORD *)(v77 + 16) = v10;
  sub_10015B2C8(v75, v77 + v76);
  v78 = swift_allocObject(&unk_10055F7A0, 32, 7);
  *(_QWORD *)(v78 + 16) = sub_10039B7C0;
  *(_QWORD *)(v78 + 24) = v77;
  aBlock[4] = (uint64_t)sub_100021E78;
  v111 = v78;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100021E38;
  aBlock[3] = (uint64_t)&unk_10055F7B8;
  v79 = _Block_copy(aBlock);
  v80 = v111;
  v81 = a1;
  swift_retain(v78);
  objc_msgSend((id)v74, "performWithoutAnimation:", v79, swift_release(v80).n128_f64[0]);
  _Block_release(v79);
  LOBYTE(v74) = swift_isEscapingClosureAtFileLocation(v78, "", 105, 251, 44, 1);
  swift_release(v78);
  if ((v74 & 1) == 0)
  {
    v82 = sub_100053F2C(&qword_1005E2208);
    v83 = swift_dynamicCastClass(v10, v82);
    if (v83)
    {
      v84 = (_QWORD *)v83;
      v85 = swift_allocObject(&unk_10055F7F0, 24, 7);
      swift_unknownObjectUnownedInit(v85 + 16, v108);
      v86 = v61;
      v87 = v102;
      v88 = v99;
      v100(v102, v86, v99);
      v89 = v105;
      v90 = *(unsigned __int8 *)(v105 + 80);
      v91 = (v90 + 24) & ~v90;
      v92 = swift_allocObject(&unk_10055F818, v91 + v101, v90 | 7);
      *(_QWORD *)(v92 + 16) = v85;
      (*(void (**)(uint64_t, char *, id))(v89 + 32))(v92 + v91, v87, v88);
      v93 = (_QWORD *)((char *)v84 + *(_QWORD *)((swift_isaMask & *v84) + 0x188));
      v94 = *v93;
      v95 = v93[1];
      *v93 = (uint64_t)sub_10039B8C0;
      v93[1] = v92;
      sub_1000327F0(v94, v95);
    }
    v96 = sub_10039B7C0;
    goto LABEL_34;
  }
  __break(1u);
}

void sub_1003903C8(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  void *Strong;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v43 = a4;
  v42 = a1;
  v6 = type metadata accessor for IndexPath(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100053F2C(&qword_1005D81A0);
  __chkstk_darwin(v10);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FMItemCellViewModel(0);
  __chkstk_darwin(v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a3 + 16;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v17 = type metadata accessor for Logger(0);
  sub_100056D88(v17, (uint64_t)qword_1005F5748);
  v18 = sub_10004FC74(a2, (uint64_t)v15, type metadata accessor for FMItemCellViewModel);
  v19 = Logger.logObject.getter(v18);
  v20 = static os_log_type_t.default.getter(v19);
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc(18, -1);
    v40 = v12;
    v22 = v21;
    v38 = swift_slowAlloc(32, -1);
    v45 = v38;
    *(_DWORD *)v22 = 136315394;
    v23 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    v41 = v8;
    v39 = v16;
    v24 = *((_QWORD *)v15 + 13);
    v25 = *((_QWORD *)v15 + 14);
    swift_bridgeObjectRetain(v25);
    v44 = sub_100056DA0(v24, v25, &v45);
    v9 = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, &v45);
    v26 = v25;
    v16 = v39;
    swift_bridgeObjectRelease(v26);
    sub_10004FCB8((uint64_t)v15, type metadata accessor for FMItemCellViewModel);
    *(_WORD *)(v22 + 12) = 1024;
    v27 = v42;
    LODWORD(v44) = v42 & 1;
    v8 = v41;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, (char *)&v44 + 4);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "FMItemsListDataSource: accept action for %s: %{BOOL}d", (uint8_t *)v22, 0x12u);
    v28 = v38;
    swift_arrayDestroy(v38, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v28, -1, -1);
    v29 = v22;
    v12 = v40;
    swift_slowDealloc(v29, -1, -1);

  }
  else
  {
    sub_10004FCB8((uint64_t)v15, type metadata accessor for FMItemCellViewModel);

    v27 = v42;
  }
  Strong = (void *)swift_unknownObjectUnownedLoadStrong(v16);
  if ((v27 & 1) != 0)
  {
    v31 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v12, 1, 1, v31);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v43, v6);
    type metadata accessor for MainActor(0);
    v32 = Strong;
    v33 = static MainActor.shared.getter(v32);
    v34 = *(unsigned __int8 *)(v7 + 80);
    v35 = (v34 + 40) & ~v34;
    v36 = (char *)swift_allocObject(&unk_10055F840, v35 + v8, v34 | 7);
    *((_QWORD *)v36 + 2) = v33;
    *((_QWORD *)v36 + 3) = &protocol witness table for MainActor;
    *((_QWORD *)v36 + 4) = v32;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v36[v35], v9, v6);
    v37 = sub_100138D6C((uint64_t)v12, (uint64_t)&unk_1005E2290, (uint64_t)v36);
    swift_release(v37);
  }
  else
  {
    sub_100395D60();
  }

}

double sub_1003908A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  double result;

  v1 = *(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator);
  v2 = *(_QWORD *)(v1 + 24);
  v3 = swift_retain(v2);
  v4 = FMIPManager.items.getter(v3);
  swift_release(v2);
  v5 = *(void **)(*(_QWORD *)(v1 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
  v6 = *(_QWORD *)(*(_QWORD *)(v1 + 24) + 64);
  v7 = v5;
  swift_bridgeObjectRetain(v6);
  sub_100390D80(v4, v6, v5, 1);
  swift_bridgeObjectRelease(v6);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

uint64_t sub_10039094C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char *v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  __n128 v25;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD aBlock[5];
  uint64_t v32;

  v29 = type metadata accessor for DispatchWallTime(0);
  v27 = *(_QWORD *)(v29 - 8);
  v2 = __chkstk_darwin(v29);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v28 = (char *)&v27 - v5;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_delayedUpdateWorkItem;
  v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_delayedUpdateWorkItem);
  if (v10)
  {
    v11 = swift_retain(*(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_delayedUpdateWorkItem));
    dispatch thunk of DispatchWorkItem.cancel()(v11);
    swift_release(v10);
  }
  v12 = swift_allocObject(&unk_10055F2C8, 24, 7);
  swift_unknownObjectWeakInit(v12 + 16);
  aBlock[4] = sub_10039A5BC;
  v32 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_10055F2E0;
  v13 = _Block_copy(aBlock);
  v30 = _swiftEmptyArrayStorage;
  v14 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  swift_retain(v12);
  v15 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v16 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v30, v15, v16, v6, v14);
  v17 = type metadata accessor for DispatchWorkItem(0);
  swift_allocObject(v17, *(unsigned int *)(v17 + 48), *(unsigned __int16 *)(v17 + 52));
  v18 = DispatchWorkItem.init(flags:block:)(v8, v13);
  swift_release(v32);
  swift_release(v12);
  v19 = *(_QWORD *)(a1 + v9);
  *(_QWORD *)(a1 + v9) = v18;
  swift_retain(v18);
  swift_release(v19);
  v20 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v21 = (void *)static OS_dispatch_queue.main.getter(v20);
  static DispatchWallTime.now()();
  v22 = v28;
  + infix(_:_:)(v4, 0.5);
  v23 = *(void (**)(char *, uint64_t))(v27 + 8);
  v24 = v29;
  v23(v4, v29);
  OS_dispatch_queue.asyncAfter(wallDeadline:execute:)(v22, v18);

  v25 = swift_release(v18);
  return ((uint64_t (*)(char *, uint64_t, __n128))v23)(v22, v24, v25);
}

void sub_100390BF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  _BYTE v11[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v11, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = *(_QWORD *)(Strong + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator);
    v5 = *(_QWORD *)(v4 + 24);
    v6 = swift_retain(v5);
    v7 = FMIPManager.items.getter(v6);
    swift_release(v5);
    v8 = *(void **)(*(_QWORD *)(v4 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
    v9 = *(_QWORD *)(*(_QWORD *)(v4 + 24) + 64);
    v10 = v8;
    swift_bridgeObjectRetain(v9);
    sub_100390D80(v7, v9, v8, 0);
    swift_bridgeObjectRelease(v9);

    swift_bridgeObjectRelease(v7);
  }
}

double sub_100390CD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  double result;

  v1 = *(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator);
  v2 = *(_QWORD *)(v1 + 24);
  v3 = swift_retain(v2);
  v4 = FMIPManager.items.getter(v3);
  swift_release(v2);
  v5 = *(void **)(*(_QWORD *)(v1 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
  v6 = *(_QWORD *)(*(_QWORD *)(v1 + 24) + 64);
  v7 = v5;
  swift_bridgeObjectRetain(v6);
  sub_100390D80(v4, v6, v5, 0);
  swift_bridgeObjectRelease(v6);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

double sub_100390D80(uint64_t a1, uint64_t a2, void *a3, int a4)
{
  _BYTE *v4;
  _BYTE *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  void *v18;
  NSObject *v19;
  os_log_type_t v20;
  _BOOL4 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  double result;
  id v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  const char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  _BYTE *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  const void *v56;
  id v57;
  uint64_t v58;
  char *v59;
  _BYTE *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t aBlock[5];
  uint64_t v71;

  v5 = v4;
  LODWORD(v68) = a4;
  v66 = a2;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DispatchQoS(0);
  v63 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v62 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v14 = type metadata accessor for Logger(0);
  v15 = sub_100056D88(v14, (uint64_t)qword_1005F5748);
  v16 = a3;
  swift_bridgeObjectRetain(a1);
  v67 = (void *)v15;
  v18 = a3;
  v19 = Logger.logObject.getter(v17);
  v20 = static os_log_type_t.default.getter(v19);
  v21 = os_log_type_enabled(v19, v20);
  v64 = a1;
  v65 = v18;
  if (v21)
  {
    v22 = swift_slowAlloc(28, -1);
    v60 = v5;
    v23 = v22;
    v24 = swift_slowAlloc(32, -1);
    v61 = v12;
    v25 = v24;
    *(_DWORD *)v23 = 134218498;
    v69 = *(_QWORD **)(a1 + 16);
    aBlock[0] = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, aBlock);
    swift_bridgeObjectRelease(a1);
    *(_WORD *)(v23 + 12) = 2080;
    v69 = v18;
    v26 = sub_100053F2C(&qword_1005E2288);
    v27 = Optional.debugDescription.getter(v26);
    v29 = v28;
    v69 = (_QWORD *)sub_100056DA0(v27, v28, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, aBlock);
    swift_bridgeObjectRelease(v29);

    *(_WORD *)(v23 + 22) = 1024;
    LODWORD(v69) = v68 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, (char *)&v69 + 4);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "FMItemsListDataSource: update items %ld, location: %s, forceUpdate: %{BOOL}d", (uint8_t *)v23, 0x1Cu);
    swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
    v30 = v25;
    v12 = v61;
    swift_slowDealloc(v30, -1, -1);
    v31 = v23;
    v5 = v60;
    swift_slowDealloc(v31, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease(a1);

  }
  v32 = *(_QWORD *)(*(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator] + 24);
  v33 = swift_retain(v32);
  v34 = FMIPManager.isInitialized.getter(v33);
  *(_QWORD *)&result = swift_release(v32).n128_u64[0];
  if ((v34 & 1) == 0)
  {
    v38 = Logger.logObject.getter(v35);
    v39 = static os_log_type_t.error.getter(v38);
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v40 = 0;
      v41 = "FMItemsListDataSource: devicesProvider is not initialized, hiding items";
      goto LABEL_13;
    }
LABEL_14:

    return result;
  }
  if (v5[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_updatesEnabled] != 1)
    return result;
  v37 = objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_tableView], "isEditing", result);
  if ((v37 & 1) != 0)
  {
    v38 = Logger.logObject.getter(v37);
    v39 = static os_log_type_t.default.getter(v38);
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v40 = 0;
      v41 = "FMItemsListDataSource: Ignoring data source update due to editing mode";
LABEL_13:
      _os_log_impl((void *)&_mh_execute_header, v38, v39, v41, v40, 2u);
      swift_slowDealloc(v40, -1, -1);
      goto LABEL_14;
    }
    goto LABEL_14;
  }
  v42 = *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_cellsViewModel];
  v43 = swift_allocObject(&unk_10055F688, 57, 7);
  v44 = v64;
  *(_QWORD *)(v43 + 16) = v5;
  *(_QWORD *)(v43 + 24) = v44;
  v45 = v65;
  *(_QWORD *)(v43 + 32) = v66;
  *(_QWORD *)(v43 + 40) = v45;
  *(_QWORD *)(v43 + 48) = v42;
  v46 = v68;
  v47 = v68 & 1;
  *(_BYTE *)(v43 + 56) = v68 & 1;
  v48 = v44;
  if (*(_QWORD *)(v44 + 16) < 0xBuLL || (v46 & 1) != 0)
  {
    swift_bridgeObjectRetain_n(v42, 2);
    v57 = v16;
    swift_bridgeObjectRetain(v48);
    v58 = v66;
    swift_bridgeObjectRetain(v66);
    v59 = v5;
    sub_100391388(v59, v48, v58, v65, v42, v47);
    swift_release(v43);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v42).n128_u64[0];
  }
  else
  {
    v68 = *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_updateQueue];
    v49 = swift_allocObject(&unk_10055F6B0, 32, 7);
    *(_QWORD *)(v49 + 16) = sub_10039B5CC;
    *(_QWORD *)(v49 + 24) = v43;
    aBlock[4] = (uint64_t)sub_100021E58;
    v71 = v49;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100037DF8;
    aBlock[3] = (uint64_t)&unk_10055F6C8;
    v67 = _Block_copy(aBlock);
    swift_retain_n(v43, 2);
    v50 = v16;
    swift_bridgeObjectRetain(v48);
    swift_bridgeObjectRetain(v42);
    swift_bridgeObjectRetain(v66);
    v51 = v5;
    v52 = v62;
    static DispatchQoS.unspecified.getter(v51);
    v69 = _swiftEmptyArrayStorage;
    v53 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
    v54 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
    v55 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
    dispatch thunk of SetAlgebra.init<A>(_:)(&v69, v54, v55, v8, v53);
    v56 = v67;
    OS_dispatch_queue.async(group:qos:flags:execute:)(0, v52, v11, v67);
    _Block_release(v56);
    swift_release_n(v43, 2);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v52, v12);
    *(_QWORD *)&result = swift_release(v71).n128_u64[0];
  }
  return result;
}

double sub_100391388(char *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, char a6)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  uint64_t v19;
  void **v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  double result;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  char *v34;
  id v35;
  unsigned int v36;
  uint64_t v37;
  void *v38;
  _QWORD *v39;
  void *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  void **aBlock;
  _QWORD v52[4];
  _QWORD *v53;

  v12 = type metadata accessor for DispatchWorkItemFlags(0);
  v49 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchQoS(0);
  v47 = *(_QWORD *)(v15 - 8);
  v48 = v15;
  __chkstk_darwin(v15);
  v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_10039201C(a2, a3, a4);
  v19 = (uint64_t)v18;
  v20 = (void **)_swiftEmptyArrayStorage;
  aBlock = (void **)_swiftEmptyArrayStorage;
  v21 = v18[2];
  if (v21)
  {
    swift_bridgeObjectRetain(v18);
    v22 = 40;
    do
    {
      swift_bridgeObjectRetain(*(_QWORD *)(v19 + v22));
      sub_1003E55DC(v23);
      v22 += 16;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease(v19);
    v20 = aBlock;
  }
  v24 = *(_QWORD *)&a1[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_itemAger];
  swift_retain(v24);
  v25 = sub_10046248C((uint64_t)v20);
  swift_bridgeObjectRelease(v20);
  sub_100054D40((uint64_t)v25);
  swift_bridgeObjectRelease(v25);
  swift_release(v24);
  if ((sub_1001F4D9C(v19, a5) & 1) == 0 || (a6 & 1) != 0)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v27 = type metadata accessor for Logger(0);
    sub_100056D88(v27, (uint64_t)qword_1005F5748);
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRetain(a5);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.default.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc(22, -1);
      *(_DWORD *)v31 = 134218240;
      aBlock = *(void ***)(v19 + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v52);
      swift_bridgeObjectRelease(v19);
      *(_WORD *)(v31 + 12) = 2048;
      aBlock = *(void ***)(a5 + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v52);
      swift_bridgeObjectRelease(a5);
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "FMItemsListDataSource: reloading table view new: %ld, old: %ld", (uint8_t *)v31, 0x16u);
      swift_slowDealloc(v31, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease(v19);
      swift_bridgeObjectRelease(a5);
    }

    v32 = swift_allocObject(&unk_10055F700, 32, 7);
    *(_QWORD *)(v32 + 16) = v19;
    *(_QWORD *)(v32 + 24) = a1;
    v33 = (void *)objc_opt_self(NSThread);
    swift_bridgeObjectRetain(v19);
    v34 = a1;
    v35 = objc_msgSend(v33, "currentThread");
    v36 = objc_msgSend(v35, "isMainThread");

    if (v36)
    {
      sub_100391864(v19, (uint64_t)v34);
      swift_bridgeObjectRelease(v19);
      sub_100393A88();
      v37 = v32;
    }
    else
    {
      swift_bridgeObjectRelease(v19);
      sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
      v38 = (void *)static OS_dispatch_queue.main.getter();
      v39 = (_QWORD *)swift_allocObject(&unk_10055F728, 40, 7);
      v39[2] = sub_10039B60C;
      v39[3] = v32;
      v39[4] = v34;
      v52[3] = sub_10039B640;
      v53 = v39;
      aBlock = _NSConcreteStackBlock;
      v52[0] = 1107296256;
      v52[1] = sub_100037DF8;
      v52[2] = &unk_10055F740;
      v40 = _Block_copy(&aBlock);
      v41 = v34;
      v42 = swift_retain(v32);
      static DispatchQoS.unspecified.getter(v42);
      v50 = _swiftEmptyArrayStorage;
      v43 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v44 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
      v45 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
      dispatch thunk of SetAlgebra.init<A>(_:)(&v50, v44, v45, v12, v43);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v17, v14, v40);
      _Block_release(v40);

      v46 = swift_release(v32);
      (*(void (**)(char *, uint64_t, __n128))(v49 + 8))(v14, v12, v46);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v17, v48);
      v37 = (uint64_t)v53;
    }
    *(_QWORD *)&result = swift_release(v37).n128_u64[0];
  }
  else
  {
    *(_QWORD *)&result = swift_bridgeObjectRelease(v19).n128_u64[0];
  }
  return result;
}

void sub_100391864(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t ObjectType;
  uint64_t v19;
  uint64_t v20;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v4 = type metadata accessor for Logger(0);
  sub_100056D88(v4, (uint64_t)qword_1005F5748);
  v5 = swift_bridgeObjectRetain_n(a1, 2);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v20 = v9;
    *(_DWORD *)v8 = 136315138;
    v10 = Array.debugDescription.getter(a1, &type metadata for FMItemsListSectionViewModel);
    v12 = v11;
    v19 = sub_100056DA0(v10, v11, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v19, &v20);
    swift_bridgeObjectRelease(v12);
    swift_bridgeObjectRelease_n(a1, 2);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMItemsListDataSource: model update with %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n(a1, 2);
  }

  v13 = *(_QWORD *)(a2 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_cellsViewModel);
  *(_QWORD *)(a2 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_cellsViewModel) = a1;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRelease(v13);
  sub_100035CEC();
  v14 = a2 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_delegate);
  if (Strong)
  {
    v16 = Strong;
    v17 = *(_QWORD *)(v14 + 8);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v17 + 8))(a2, &off_10055F098, ObjectType, v17);
    swift_unknownObjectRelease(v16);
  }
  sub_100391A90();
}

void sub_100391A90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _BYTE v9[24];

  v1 = type metadata accessor for FMSelectedSection(0);
  __chkstk_darwin(v1);
  v3 = (uint64_t *)&v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (!*(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_cellsViewModel) + 16))
    goto LABEL_4;
  v4 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator) + 56)
     + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v4, v9, 0, 0);
  sub_10004FC74(v4, (uint64_t)v3, type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload(v3, v1) == 5)
  {
    v5 = *v3;
    v6 = v3[1];
    v7 = v3[2];
    swift_bridgeObjectRelease(v5);
    sub_1000758D8(v6, v7);
LABEL_4:
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_tableView), "setTableFooterView:", 0);
    return;
  }
  sub_10004FCB8((uint64_t)v3, type metadata accessor for FMSelectedSection);
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_tableView), "setTableFooterView:", *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_tableViewFooter));
  sub_100035B8C();
}

void sub_100391BD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  Swift::String v20;
  Swift::String v21;
  uint64_t v22;
  id v23;
  Swift::String_optional v24;
  Swift::String v25;
  Swift::String v26;
  Swift::String v27;
  uint64_t v28;
  unint64_t v29;
  _BYTE v31[24];
  Swift::String v32;

  v1 = v0;
  v2 = type metadata accessor for FMSelectedSection(0);
  __chkstk_darwin(v2);
  v4 = &v31[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v5 = type metadata accessor for Logger(0);
  v6 = sub_100056D88(v5, (uint64_t)qword_1005F5748);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "FMItemsListDataSource: updateListTitle", v9, 2u);
    swift_slowDealloc(v9, -1, -1);
  }

  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator);
  if ((*(_BYTE *)(*(_QWORD *)(v10 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_limitedPrecision) & 1) == 0)
  {
    v11 = *(_QWORD *)(v10 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
    swift_beginAccess(v11, v31, 0, 0);
    sub_10004FC74(v11, (uint64_t)v4, type metadata accessor for FMSelectedSection);
    if (swift_getEnumCaseMultiPayload(v4, v2) == 5)
    {
      v12 = v4[1];
      v13 = v4[2];
      swift_bridgeObjectRelease(*v4);
      switch(v13)
      {
        case 0uLL:
          goto LABEL_9;
        case 1uLL:
          v14 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
          v17 = 0xD000000000000012;
          v15 = 0xD000000000000018;
          v29 = 0x80000001004A5660;
          v18 = 0x80000001004C3DA0;
          v16 = 0x80000001004A5640;
          goto LABEL_10;
        case 2uLL:
          v14 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
          v15 = 0xD000000000000018;
          v29 = 0x80000001004A5660;
          v18 = 0x80000001004C3D80;
          v16 = 0x80000001004A5640;
          v17 = 0xD000000000000013;
          goto LABEL_10;
        case 3uLL:
          return;
        default:
          v23 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
          v32._countAndFlagsBits = 0xD000000000000018;
          v32._object = (void *)0x80000001004A5660;
          v24.value._object = (void *)0x80000001004A5640;
          v25._countAndFlagsBits = 0x41545F534D455449;
          v25._object = (void *)0xEE00454D4F485F42;
          v24.value._countAndFlagsBits = 0xD000000000000013;
          v26._countAndFlagsBits = 0;
          v26._object = (void *)0xE000000000000000;
          v27 = NSLocalizedString(_:tableName:bundle:value:comment:)(v25, v24, (NSBundle)v23, v26, v32);

          v28 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource__listTitle + 8);
          *(Swift::String *)(v1 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource__listTitle) = v27;
          swift_bridgeObjectRelease(v28);
          sub_1000758D8(v12, v13);
          break;
      }
      return;
    }
    sub_10004FCB8((uint64_t)v4, type metadata accessor for FMSelectedSection);
  }
LABEL_9:
  v14 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v15 = 0xD000000000000018;
  v29 = 0x80000001004A5660;
  v16 = 0x80000001004A5640;
  v17 = 0x41545F534D455449;
  v18 = 0xE900000000000042;
LABEL_10:
  v19 = 0xD000000000000013;
  v20._countAndFlagsBits = 0;
  v20._object = (void *)0xE000000000000000;
  v21 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v17, *(Swift::String_optional *)(&v16 - 1), (NSBundle)v14, v20, *(Swift::String *)&v15);

  v22 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource__listTitle + 8);
  *(Swift::String *)(v1 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource__listTitle) = v21;
  swift_bridgeObjectRelease(v22);
}

_QWORD *sub_10039201C(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t i;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __n128 v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  void (*v44)(char *, uint64_t);
  char *v45;
  char *v46;
  void (*v47)(char *, char *, uint64_t, __n128);
  _QWORD *v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(char *, unint64_t, uint64_t);
  uint64_t v65;
  __n128 v66;
  uint64_t v67;
  uint64_t (*v68)(char *, unint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  unint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  _QWORD *v89;
  int64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  char v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  _QWORD *v97;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  unsigned int v106;
  uint64_t v107;
  _QWORD *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char *v127;
  uint64_t (*v128)(char *, unint64_t, uint64_t);
  uint64_t v129;
  char v130[8];
  char v131[8];
  _QWORD *v132;

  v116 = a2;
  v114 = type metadata accessor for FMIPItemState(0);
  v113 = *(_QWORD *)(v114 - 8);
  v6 = __chkstk_darwin(v114);
  v112 = (char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v111 = (char *)&v99 - v8;
  v9 = sub_100053F2C((uint64_t *)&unk_1005E2270);
  __chkstk_darwin(v9);
  v110 = (uint64_t)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100053F2C((uint64_t *)&unk_1005D6700);
  __chkstk_darwin(v11);
  v109 = (char *)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FMIPSafeLocationType(0);
  v119 = *(_QWORD *)(v13 - 8);
  v120 = v13;
  __chkstk_darwin(v13);
  v118 = (char *)&v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = type metadata accessor for FMSelectedSection(0);
  v15 = __chkstk_darwin(v124);
  v108 = (uint64_t *)((char *)&v99 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  v18 = (uint64_t *)((char *)&v99 - v17);
  v19 = type metadata accessor for FMIPItem(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = __chkstk_darwin(v19);
  v127 = (char *)&v99 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v24 = (char *)&v99 - v23;
  v132 = _swiftEmptyArrayStorage;
  v25 = *(_QWORD *)(a1 + 16);
  v122 = OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator;
  swift_bridgeObjectRetain(a1);
  v123 = v3;
  v115 = v3;
  if (v25)
  {
    v104 = a3;
    v26 = 0;
    v27 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    v28 = *(_QWORD *)(v20 + 72);
    v103 = a1;
    v121 = v27;
    v29 = a1 + v27;
    v128 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v20 + 16);
    v106 = enum case for FMIPSafeLocationType.home(_:);
    v117 = v20;
    v125 = a1 + v27;
    v126 = v25;
    v105 = v28;
    for (i = v128(v24, a1 + v27, v19); ; i = v128(v24, v29 + v28 * v26, v19))
    {
      FMIPItem.groupIdentifier.getter(i);
      v33 = v32;
      swift_bridgeObjectRelease(v32);
      if (v33)
      {
LABEL_5:
        (*(void (**)(char *, uint64_t))(v20 + 8))(v24, v19);
      }
      else
      {
        v34 = *(_QWORD *)&v123[v122];
        v35 = *(_QWORD *)(v34 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
        swift_beginAccess(v35, v131, 0, 0);
        sub_10004FC74(v35, (uint64_t)v18, type metadata accessor for FMSelectedSection);
        if (swift_getEnumCaseMultiPayload(v18, v124) == 5)
        {
          v37 = swift_bridgeObjectRelease(*v18);
          v29 = v125;
          v25 = v126;
          switch(v126)
          {
            case 0uLL:
              goto LABEL_14;
            case 1uLL:
              v38 = v111;
              v39 = FMIPItem.state.getter(v36);
              v40 = v112;
              static FMIPItemState.isBTConnected.getter(v39);
              v41 = sub_100008000((unint64_t *)&qword_1005E2280, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItemState, (uint64_t)&protocol conformance descriptor for FMIPItemState);
              v42 = v114;
              v43 = dispatch thunk of SetAlgebra.isSuperset(of:)(v40, v114, v41);
              v44 = *(void (**)(char *, uint64_t))(v113 + 8);
              v45 = v40;
              v29 = v125;
              v44(v45, v42);
              v46 = v38;
              v20 = v117;
              v44(v46, v42);
              v25 = v126;
              if ((v43 & 1) != 0)
                goto LABEL_14;
              goto LABEL_5;
            case 2uLL:
              v51 = *(_QWORD *)(v34 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
              swift_beginAccess(v51, v130, 0, 0);
              v52 = v51;
              v53 = v108;
              sub_10004FC74(v52, (uint64_t)v108, type metadata accessor for FMSelectedSection);
              if (swift_getEnumCaseMultiPayload(v53, v124) != 5)
              {
                sub_10004FCB8((uint64_t)v53, type metadata accessor for FMSelectedSection);
                goto LABEL_5;
              }
              v54 = (_QWORD *)*v53;
              v55 = sub_1000758D8(v53[1], v53[2]);
              v56 = FMIPItem.identifier.getter(v55);
              v57 = v54;
              v59 = v58;
              v107 = v57[2];
              if (!v107)
                goto LABEL_28;
              v60 = v56;
              v61 = v57[4];
              v62 = v57[5];
              if (v61 == v60 && v62 == v59
                || (v102 = v60, (_stringCompareWithSmolCheck(_:_:expecting:)(v61, v62, v60, v59, 0) & 1) != 0))
              {
                swift_bridgeObjectRelease(v57);
                v37 = swift_bridgeObjectRelease(v59);
                goto LABEL_14;
              }
              if (v107 == 1)
              {
LABEL_28:
                swift_bridgeObjectRelease(v57);
                swift_bridgeObjectRelease(v59);
                goto LABEL_5;
              }
              v101 = v59;
              v72 = v57 + 7;
              v73 = 1;
              v100 = v57;
              break;
            case 3uLL:
              goto LABEL_5;
            default:
              v107 = *(_QWORD *)(v34 + 24);
              v63 = v107;
              v64 = (uint64_t (*)(char *, unint64_t, uint64_t))v118;
              (*(void (**)(char *, _QWORD, uint64_t, __n128))(v119 + 104))(v118, v106, v120, v37);
              swift_retain(v63);
              v65 = (uint64_t)v109;
              FMIPItem.location.getter(v66);
              v67 = v110;
              v68 = v64;
              v69 = v107;
              sub_1000BD948(v68, v65, v110);
              v70 = type metadata accessor for FMIPSafeLocation(0);
              LODWORD(v63) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 48))(v67, 1, v70);
              sub_1000051EC(v67, (uint64_t *)&unk_1005E2270);
              swift_release(v69);
              sub_1000758D8(v29, v25);
              v71 = v65;
              v28 = v105;
              v20 = v117;
              sub_1000051EC(v71, (uint64_t *)&unk_1005D6700);
              (*(void (**)(char *, uint64_t))(v119 + 8))(v118, v120);
              v29 = v125;
              v25 = v126;
              if ((_DWORD)v63 != 1)
                goto LABEL_14;
              goto LABEL_5;
          }
          while (1)
          {
            v74 = v73 + 1;
            if (__OFADD__(v73, 1))
            {
              __break(1u);
              swift_release(v73 + 1);
              swift_bridgeObjectRelease(v132);
              __break(1u);
              swift_release(v132);
              __break(1u);
              JUMPOUT(0x1003929A4);
            }
            v75 = *(v72 - 1);
            v76 = *v72;
            v77 = v101;
            if (v75 == v102 && v76 == v101)
            {
              swift_bridgeObjectRelease(v100);
              v37 = swift_bridgeObjectRelease(v77);
              goto LABEL_14;
            }
            if ((_stringCompareWithSmolCheck(_:_:expecting:)(v75, v76, v102, v101, 0) & 1) != 0)
              break;
            v72 += 2;
            ++v73;
            if (v74 == v107)
            {
              swift_bridgeObjectRelease(v100);
              swift_bridgeObjectRelease(v101);
              v29 = v125;
              v25 = v126;
              goto LABEL_5;
            }
          }
          swift_bridgeObjectRelease(v100);
          v37 = swift_bridgeObjectRelease(v101);
        }
        else
        {
          sub_10004FCB8((uint64_t)v18, type metadata accessor for FMSelectedSection);
        }
LABEL_14:
        v47 = *(void (**)(char *, char *, uint64_t, __n128))(v20 + 32);
        v47(v127, v24, v19, v37);
        v48 = v132;
        if ((swift_isUniquelyReferenced_nonNull_native(v132) & 1) == 0)
        {
          sub_100111D4C(0, v48[2] + 1, 1);
          v48 = v132;
        }
        v50 = v48[2];
        v49 = v48[3];
        if (v50 >= v49 >> 1)
        {
          sub_100111D4C(v49 > 1, v50 + 1, 1);
          v48 = v132;
        }
        v48[2] = v50 + 1;
        ((void (*)(char *, char *, uint64_t))v47)((char *)v48 + v121 + v50 * v28, v127, v19);
        v132 = v48;
        v29 = v125;
        v25 = v126;
      }
      if (++v26 == v25)
        break;
    }
    v31 = v132;
    a3 = v104;
    a1 = v103;
  }
  else
  {
    v31 = _swiftEmptyArrayStorage;
  }
  v79 = (uint64_t)v115;

  swift_bridgeObjectRelease(a1);
  v132 = _swiftEmptyArrayStorage;
  v80 = v31[2];
  v81 = v116;
  if (v80)
  {
    v82 = (char *)v31 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    v83 = *(_QWORD *)(v20 + 72);
    swift_retain(v31);
    do
    {
      sub_1003929B4(v82, v79, v81, a3, &v129);
      sub_1003E55DC(v129);
      v82 += v83;
      --v80;
    }
    while (v80);
    swift_release_n(v31, 2);
    v84 = v132;
  }
  else
  {
    swift_release(v31);
    v84 = _swiftEmptyArrayStorage;
  }
  v132 = v84;
  swift_bridgeObjectRetain(v84);
  sub_10039735C(&v132);
  swift_bridgeObjectRelease(v84);
  v85 = v132;
  v86 = sub_10016CEA0((uint64_t)v132);
  swift_release(v85);
  swift_bridgeObjectRetain(v86);
  v88 = sub_1003EF3E8(v87);
  swift_bridgeObjectRelease(v86);
  v132 = v88;
  sub_1003972F4(&v132);
  swift_bridgeObjectRelease(v86);
  v89 = v132;
  v90 = v132[2];
  if (v90)
  {
    v132 = _swiftEmptyArrayStorage;
    sub_100111E70(0, v90, 0);
    v91 = v132;
    v92 = v89 + 5;
    do
    {
      v93 = *((_BYTE *)v92 - 8);
      v94 = *v92;
      v132 = v91;
      v95 = v91[2];
      v96 = v91[3];
      swift_bridgeObjectRetain(v94);
      if (v95 >= v96 >> 1)
      {
        sub_100111E70(v96 > 1, v95 + 1, 1);
        v91 = v132;
      }
      v91[2] = v95 + 1;
      v97 = &v91[2 * v95];
      *((_BYTE *)v97 + 32) = v93;
      v97[5] = v94;
      v92 += 2;
      --v90;
    }
    while (v90);
    swift_release(v89);
  }
  else
  {
    swift_release(v132);
    return _swiftEmptyArrayStorage;
  }
  return v91;
}

void sub_1003929B4(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, unint64_t, uint64_t);
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t (*v31)(char *, unint64_t, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void (**v35)(_QWORD, _QWORD, _QWORD);
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  id v40;
  char *v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *i;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char v58;
  char *v59;
  char *v60;
  __n128 v61;
  unint64_t v62;
  char *v63;
  uint64_t *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t *, char *);
  char *v69;
  unint64_t v70;
  unint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  id v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(char *, uint64_t, uint64_t, char *);
  uint64_t v91;
  id v92;
  char *v93;
  NSString *v94;
  char *v95;
  char *v96;
  id v97;
  id v98;
  uint64_t *v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t *v107;
  uint64_t v108;
  void (*v109)(char *, uint64_t, uint64_t, char *);
  uint64_t v110;
  void (**v111)(_QWORD, _QWORD, _QWORD);
  NSString *v112;
  char *v113;
  id v114;
  id v115;
  NSString *v116;
  id v117;
  uint64_t v118;
  char v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  id v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  char *v134;
  int v135;
  uint64_t v136;
  char *v137;
  uint64_t *v138;
  char *v139;
  char *v140;
  char *v141;
  char *v142;

  v129 = a3;
  v127 = a4;
  v128 = a5;
  v7 = sub_100053F2C(&qword_1005DF110);
  __chkstk_darwin(v7);
  v126 = (char *)&v122 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FMIPItem(0);
  v123 = *(_QWORD *)(v9 - 8);
  v124 = v9;
  __chkstk_darwin(v9);
  v125 = (char *)&v122 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = (char *)type metadata accessor for FMIPBeaconShare(0);
  v11 = (char *)*((_QWORD *)v140 - 1);
  v12 = __chkstk_darwin(v140);
  v141 = (char *)&v122 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v138 = (uint64_t *)((char *)&v122 - v14);
  v139 = (char *)type metadata accessor for FMIPItemImageCacheRequest(0);
  v137 = (char *)*((_QWORD *)v139 - 1);
  __chkstk_darwin(v139);
  v134 = (char *)&v122 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FMIPItemImageSize(0);
  v132 = *(char **)(v16 - 8);
  v133 = v16;
  __chkstk_darwin(v16);
  v131 = (char *)&v122 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100053F2C((uint64_t *)&unk_1005E2270);
  __chkstk_darwin(v18);
  v20 = (char *)&v122 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_100053F2C((uint64_t *)&unk_1005D6700);
  __chkstk_darwin(v21);
  v23 = (char *)&v122 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for FMIPSafeLocationType(0);
  v25 = *(_QWORD *)(v24 - 8);
  __chkstk_darwin(v24);
  v27 = (uint64_t (*)(char *, unint64_t, uint64_t))((char *)&v122 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v122 = a2;
  v136 = *(_QWORD *)(a2 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator);
  v28 = *(_QWORD *)(v136 + 24);
  (*(void (**)(uint64_t (*)(char *, unint64_t, uint64_t), _QWORD, uint64_t))(v25 + 104))(v27, enum case for FMIPSafeLocationType.home(_:), v24);
  swift_retain(v28);
  FMIPItem.location.getter(v29);
  sub_1000BD948(v27, (uint64_t)v23, (uint64_t)v20);
  v30 = type metadata accessor for FMIPSafeLocation(0);
  v135 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v20, 1, v30);
  sub_1000051EC((uint64_t)v20, (uint64_t *)&unk_1005E2270);
  swift_release(v28);
  sub_1000051EC((uint64_t)v23, (uint64_t *)&unk_1005D6700);
  v31 = v27;
  v32 = a1;
  (*(void (**)(uint64_t (*)(char *, unint64_t, uint64_t), uint64_t))(v25 + 8))(v31, v24);
  v33 = v136;
  v34 = *(_QWORD *)(*(_QWORD *)(v136 + 24) + 40);
  v36 = (uint64_t)v131;
  v35 = (void (**)(_QWORD, _QWORD, _QWORD))v132;
  v37 = v133;
  (*((void (**)(char *, _QWORD, uint64_t))v132 + 13))(v131, enum case for FMIPItemImageSize.list(_:), v133);
  v38 = (void *)objc_opt_self(UITraitCollection);
  swift_retain(v34);
  v39 = objc_msgSend(v38, "currentTraitCollection");
  v40 = objc_msgSend(v39, "userInterfaceStyle");

  v41 = v134;
  sub_100188734(v36, v40 == (id)2, (uint64_t)v134);
  dispatch thunk of FMImageCache.cachedImage(for:completion:)(&v142, v41, 0, 0);
  (*((void (**)(char *, char *))v137 + 1))(v41, v139);
  v42 = swift_release(v34);
  v134 = v142;
  ((void (*)(uint64_t, uint64_t, __n128))v35[1])(v36, v37, v42);
  v43 = *(_QWORD *)(v33 + 48);
  v44 = swift_retain(v43);
  v45 = dispatch thunk of FMFManager.contactsController.getter(v44);
  swift_release(v43);
  v47 = FMIPItem.owner.getter(v46);
  v49 = v48;
  v50 = dispatch thunk of FMFContactsDataController.searchInStore(handle:keysToFetch:)(v47, v48, 0);
  swift_release(v45);
  swift_bridgeObjectRelease(v49);
  if (!v50)
    goto LABEL_13;
  if (!((unint64_t)v50 >> 62))
  {
    if (*(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
    goto LABEL_12;
  }
  if (v50 >= 0)
    v53 = v50 & 0xFFFFFFFFFFFFFF8;
  else
    v53 = v50;
  swift_bridgeObjectRetain(v50);
  v54 = _CocoaArrayWrapper.endIndex.getter(v53);
  swift_bridgeObjectRelease(v50);
  if (!v54)
  {
LABEL_12:
    swift_bridgeObjectRelease(v50);
LABEL_13:
    v132 = 0;
    goto LABEL_14;
  }
LABEL_4:
  if ((v50 & 0xC000000000000001) != 0)
    goto LABEL_39;
  if (*(_QWORD *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    for (i = (char *)*(id *)(v50 + 32);
          ;
          i = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v50))
    {
      v132 = i;
      swift_bridgeObjectRelease(v50);
LABEL_14:
      __chkstk_darwin(v51);
      *(&v122 - 2) = (uint64_t)v32;
      v55 = v129;
      swift_bridgeObjectRetain(v129);
      v56 = v130;
      v57 = (char *)sub_1003DBDB4((uint64_t (*)(_QWORD))sub_100195EA8, (uint64_t)(&v122 - 4), v55);
      v133 = v56;
      v58 = *(_BYTE *)(*(_QWORD *)(v136 + 16) + OBJC_IVAR____TtC6FindMy19FMConditionProvider_isUnderAgeUser);
      v59 = (char *)_swiftEmptyArrayStorage;
      v139 = v57;
      if ((v58 & 1) != 0)
        break;
      v60 = v57;
      v131 = v32;
      v142 = (char *)_swiftEmptyArrayStorage;
      v50 = *((_QWORD *)v57 + 2);
      v61 = swift_bridgeObjectRetain(v57);
      if (!v50)
      {
LABEL_27:
        swift_bridgeObjectRelease(v60);
        v32 = v131;
        break;
      }
      v62 = 0;
      v63 = v140;
      v64 = v138;
      v137 = (char *)v50;
      while (v62 < *((_QWORD *)v60 + 2))
      {
        v65 = (v11[80] + 32) & ~(unint64_t)v11[80];
        v66 = *((_QWORD *)v11 + 9);
        v67 = (*((uint64_t (**)(uint64_t *, char *, char *, __n128))v11 + 2))(v64, &v60[v65 + v66 * v62], v63, v61);
        if ((FMIPBeaconShare.requiresResponse.getter(v67) & 1) != 0)
        {
          v32 = v11;
          v68 = (void (*)(char *, uint64_t *, char *))*((_QWORD *)v11 + 4);
          v68(v141, v64, v63);
          v69 = v142;
          if ((swift_isUniquelyReferenced_nonNull_native(v142) & 1) == 0)
          {
            sub_100111DFC(0, *((_QWORD *)v69 + 2) + 1, 1);
            v69 = v142;
          }
          v71 = *((_QWORD *)v69 + 2);
          v70 = *((_QWORD *)v69 + 3);
          if (v71 >= v70 >> 1)
          {
            sub_100111DFC(v70 > 1, v71 + 1, 1);
            v69 = v142;
          }
          *((_QWORD *)v69 + 2) = v71 + 1;
          v63 = v140;
          v68(&v69[v65 + v71 * v66], (uint64_t *)v141, v140);
          v142 = v69;
          v11 = v32;
          v64 = v138;
          v60 = v139;
          v50 = (uint64_t)v137;
        }
        else
        {
          (*((void (**)(uint64_t *, char *))v11 + 1))(v64, v63);
        }
        if (v50 == ++v62)
        {
          v59 = v142;
          goto LABEL_27;
        }
      }
      __break(1u);
LABEL_39:
      ;
    }
    v72 = v11;
    if (!*((_QWORD *)v59 + 2))
    {
      LODWORD(v141) = v135 != 1;
      swift_bridgeObjectRelease(v59);
      v83 = sub_100053F2C((uint64_t *)&unk_1005D2B90);
      v84 = *(_QWORD *)(type metadata accessor for FMItemCellViewModel(0) - 8);
      v85 = *(_QWORD *)(v84 + 72);
      v86 = *(unsigned __int8 *)(v84 + 80);
      v87 = (v86 + 32) & ~v86;
      v88 = swift_allocObject(v83, v87 + v85, v86 | 7);
      *(_OWORD *)(v88 + 16) = xmmword_100481740;
      v138 = (uint64_t *)(v88 + v87);
      v89 = (uint64_t)v125;
      (*(void (**)(char *, char *, uint64_t))(v123 + 16))(v125, v32, v124);
      v90 = (void (*)(char *, uint64_t, uint64_t, char *))*((_QWORD *)v72 + 7);
      v91 = (uint64_t)v126;
      v90(v126, 1, 1, v140);
      v92 = v132;
      v93 = v132;
      v94 = (NSString *)v136;
      swift_retain(v136);
      v95 = v134;
      v96 = v134;
      v97 = v127;
      v98 = v127;
      sub_1002D7990(v94, v89, v91, v139, v95, v97, v92, (int)v141, v138);

      v99 = v128;
LABEL_37:
      *v99 = v88;
      return;
    }
    v73 = v32;
    v74 = FMIPItem.owner.getter(v57);
    v76 = v75;
    v77 = objc_msgSend((id)objc_opt_self(SPBeacon), "SPOwner");
    v78 = objc_msgSend(v77, "destination");

    v79 = static String._unconditionallyBridgeFromObjectiveC(_:)(v78);
    v81 = v80;

    if (v74 == v79 && v76 == v81)
    {
      swift_bridgeObjectRelease_n(v76, 2);
      v82 = v135;
    }
    else
    {
      v100 = _stringCompareWithSmolCheck(_:_:expecting:)(v74, v76, v79, v81, 0);
      swift_bridgeObjectRelease(v76);
      swift_bridgeObjectRelease(v81);
      v82 = v135;
      if ((v100 & 1) == 0)
      {
        swift_bridgeObjectRelease(v139);
        v106 = _swiftEmptyArrayStorage;
        v117 = v132;
        v113 = v134;
        v140 = v134;
        v141 = v132;
        v114 = v127;
        v99 = v128;
        goto LABEL_36;
      }
    }
    LODWORD(v138) = v82 != 1;
    v101 = sub_100053F2C((uint64_t *)&unk_1005D2B90);
    v102 = *(_QWORD *)(type metadata accessor for FMItemCellViewModel(0) - 8);
    v103 = *(_QWORD *)(v102 + 72);
    v104 = *(unsigned __int8 *)(v102 + 80);
    v105 = (v104 + 32) & ~v104;
    v106 = (_QWORD *)swift_allocObject(v101, v105 + v103, v104 | 7);
    *((_OWORD *)v106 + 1) = xmmword_100481740;
    v107 = (_QWORD *)((char *)v106 + v105);
    v108 = (uint64_t)v125;
    (*(void (**)(char *, char *, uint64_t))(v123 + 16))(v125, v73, v124);
    v109 = (void (*)(char *, uint64_t, uint64_t, char *))*((_QWORD *)v72 + 7);
    v110 = (uint64_t)v126;
    v109(v126, 1, 1, v140);
    v137 = v59;
    v111 = (void (**)(_QWORD, _QWORD, _QWORD))v132;
    v141 = v132;
    v112 = (NSString *)v136;
    swift_retain(v136);
    v113 = v134;
    v140 = v134;
    v114 = v127;
    v115 = v127;
    v116 = v112;
    v117 = v111;
    v59 = v137;
    sub_1002D7990(v116, v108, v110, v139, v113, v114, v117, (int)v138, v107);
    v99 = v128;
LABEL_36:
    __chkstk_darwin(v118);
    *(&v122 - 6) = v122;
    *(&v122 - 5) = (uint64_t)v73;
    *(&v122 - 4) = (uint64_t)v113;
    *(&v122 - 3) = (uint64_t)v114;
    *(&v122 - 2) = (uint64_t)v117;
    *((_BYTE *)&v122 - 8) = v119;
    v120 = sub_100153D70((void (*)(uint64_t))sub_10039B560, (uint64_t)(&v122 - 8), (uint64_t)v59);
    swift_bridgeObjectRelease(v59);
    v142 = (char *)v106;
    swift_bridgeObjectRetain(v106);
    swift_bridgeObjectRetain(v120);
    sub_1003E55DC(v121);
    swift_bridgeObjectRelease(v120);
    swift_bridgeObjectRelease(v106);

    v88 = (uint64_t)v142;
    goto LABEL_37;
  }
  __break(1u);
}

void sub_1003933B4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, void *a5@<X4>, void *a6@<X5>, int a7@<W6>, uint64_t *a8@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  NSString *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  uint64_t *v27;
  int v28;

  v28 = a7;
  v27 = a8;
  v14 = sub_100053F2C(&qword_1005DF110);
  __chkstk_darwin(v14);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for FMIPItem(0);
  __chkstk_darwin(v17);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(NSString **)(a2 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v19, a3);
  v22 = type metadata accessor for FMIPBeaconShare(0);
  v23 = *(_QWORD *)(v22 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v16, a1, v22);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v16, 0, 1, v22);
  v24 = a6;
  swift_retain(v20);
  v25 = a4;
  v26 = a5;
  sub_1002D7990(v20, (uint64_t)v19, (uint64_t)v16, _swiftEmptyArrayStorage, a4, a5, a6, v28, v27);
}

void sub_100393524(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60[3];

  v52 = type metadata accessor for FMSelectedSection(0);
  v3 = __chkstk_darwin(v52);
  v55 = (uint64_t)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v6 = (char *)&v52 - v5;
  v7 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  __chkstk_darwin(v7);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FMIPItem(0);
  v11 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v53 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for IndexPath(0);
  v56 = *(_QWORD *)(v13 - 8);
  v57 = v13;
  v14 = *(_QWORD *)(v56 + 64);
  v15 = __chkstk_darwin(v13);
  v54 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v17 = (char *)&v52 - v16;
  v18 = sub_100053F2C(&qword_1005D81A0);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = IndexPath.section.getter(v19);
  if ((v22 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  v23 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_cellsViewModel];
  if (v22 >= *(_QWORD *)(v23 + 16))
  {
LABEL_13:
    __break(1u);
LABEL_14:
    swift_once(&qword_1005D1DE8, sub_100005ADC);
    goto LABEL_6;
  }
  if (!*(_BYTE *)(v23 + 16 * v22 + 32))
  {
    v38 = type metadata accessor for TaskPriority(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v21, 1, 1, v38);
    v40 = v56;
    v39 = v57;
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v17, a1, v57);
    type metadata accessor for MainActor(0);
    v41 = v1;
    v42 = static MainActor.shared.getter(v41);
    v43 = *(unsigned __int8 *)(v40 + 80);
    v44 = (v43 + 40) & ~v43;
    v45 = (char *)swift_allocObject(&unk_10055F548, v44 + v14, v43 | 7);
    *((_QWORD *)v45 + 2) = v42;
    *((_QWORD *)v45 + 3) = &protocol witness table for MainActor;
    *((_QWORD *)v45 + 4) = v41;
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(&v45[v44], v17, v39);
    v46 = sub_100138D6C((uint64_t)v21, (uint64_t)&unk_1005E2238, (uint64_t)v45);
    swift_release(v46);
    return;
  }
  sub_10038F5B8(a1, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
  {
    v47 = v53;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v53, v9, v10);
    v48 = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator] + 56);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v6, v47, v10);
    swift_storeEnumTagMultiPayload(v6, v52, 3);
    v49 = v48 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
    swift_beginAccess(v48 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, v60, 0, 0);
    v50 = v55;
    sub_10004FC74(v49, v55, type metadata accessor for FMSelectedSection);
    swift_beginAccess(v49, &v58, 33, 0);
    swift_retain(v48);
    sub_100009DF8((uint64_t)v6, v49);
    swift_endAccess(&v58);
    sub_10004C8A4(v50);
    sub_10004FCB8((uint64_t)v6, type metadata accessor for FMSelectedSection);
    sub_10004FCB8(v50, type metadata accessor for FMSelectedSection);
    v51 = swift_release(v48);
    (*(void (**)(char *, uint64_t, __n128))(v11 + 8))(v47, v10, v51);
    return;
  }
  sub_1000051EC((uint64_t)v9, (uint64_t *)&unk_1005D3AA0);
  if (qword_1005D1DE8 != -1)
    goto LABEL_14;
LABEL_6:
  v24 = type metadata accessor for Logger(0);
  sub_100056D88(v24, (uint64_t)qword_1005F5748);
  v26 = v56;
  v25 = v57;
  v27 = v54;
  v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 16))(v54, a1, v57);
  v29 = Logger.logObject.getter(v28);
  v30 = static os_log_type_t.error.getter(v29);
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc(12, -1);
    v32 = swift_slowAlloc(32, -1);
    v60[0] = v32;
    *(_DWORD *)v31 = 136315138;
    v33 = sub_100008000(&qword_1005DA770, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    v34 = dispatch thunk of CustomStringConvertible.description.getter(v25, v33);
    v36 = v35;
    v58 = sub_100056DA0(v34, v35, v60);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, &v59);
    v37 = swift_bridgeObjectRelease(v36);
    (*(void (**)(char *, uint64_t, __n128))(v26 + 8))(v27, v25, v37);
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "FMItemsListDataSource: cannnot select device at indexPath: %s", v31, 0xCu);
    swift_arrayDestroy(v32, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1, -1);
    swift_slowDealloc(v31, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v25);
  }

}

void sub_100393A88()
{
  uint64_t v0;
  void *v1;
  id v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  Swift::String v6;
  NSString v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  Swift::String v12;
  Swift::String_optional v13;
  Swift::String v14;
  Swift::String v15;
  NSString v16;
  uint64_t v17;
  void *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  unint64_t v23;
  char v24;
  id v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  unint64_t v34;
  char v35;
  id v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _BYTE v40[32];
  _BYTE v41[24];
  Swift::String v42;
  Swift::String v43;

  sub_100006C5C(0, (unint64_t *)&unk_1005E4BB0, UIAction_ptr);
  v1 = (void *)objc_opt_self(NSBundle);
  v2 = objc_msgSend(v1, "mainBundle");
  v3._countAndFlagsBits = 0xD00000000000001DLL;
  v42._object = (void *)0x80000001004A5660;
  v3._object = (void *)0x80000001004AFDD0;
  v4.value._countAndFlagsBits = 0xD000000000000013;
  v4.value._object = (void *)0x80000001004A5640;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v42._countAndFlagsBits = 0xD000000000000018;
  v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v42);

  v7 = String._bridgeToObjectiveC()();
  v8 = swift_allocObject(&unk_10055F2C8, 24, 7);
  v9 = v0;
  swift_unknownObjectWeakInit(v8 + 16);
  v10 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v6._countAndFlagsBits, v6._object, 0, 0, 0, 0, v7, 0, 0, 0, 0, sub_10039B280, v8);
  v11 = objc_msgSend(v1, "mainBundle");
  v12._countAndFlagsBits = 0xD000000000000019;
  v43._object = (void *)0x80000001004A5660;
  v12._object = (void *)0x80000001004AFD90;
  v13.value._countAndFlagsBits = 0xD000000000000013;
  v13.value._object = (void *)0x80000001004A5640;
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v43._countAndFlagsBits = 0xD000000000000018;
  v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v43);

  v16 = String._bridgeToObjectiveC()();
  v17 = swift_allocObject(&unk_10055F2C8, 24, 7);
  swift_unknownObjectWeakInit(v17 + 16);
  v18 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)(v15._countAndFlagsBits, v15._object, 0, 0, 0, 0, v16, 0, 0, 0, 0, sub_10039B2A0, v17);
  v19 = (uint64_t *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_tableViewFooter)
                  + OBJC_IVAR____TtC6FindMy23FMListFooterActionsView_actions);
  swift_beginAccess(v19, v41, 1, 0);
  v20 = *v19;
  *v19 = (uint64_t)_swiftEmptyArrayStorage;
  swift_bridgeObjectRelease(v20);
  v21 = *v19;
  v22 = v10;
  swift_bridgeObjectRetain(v21);
  v24 = sub_100399518(v23, v22);

  swift_bridgeObjectRelease(v21);
  if ((v24 & 1) == 0)
  {
    swift_beginAccess(v19, v40, 33, 0);
    v25 = v22;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v25);
    v27 = *(_QWORD *)((*v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v26 = *(_QWORD *)((*v19 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v27 >= v26 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v26 > 1, v27 + 1, 1);
    v28 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v27, v25);
    specialized Array._endMutation()(v28);
    swift_endAccess(v40);
    sub_100370E2C();
  }
  v29 = *(_QWORD *)(*(_QWORD *)(v9 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator) + 24);
  swift_retain(v29);
  v30 = sub_1000BD1E4();
  swift_release(v29);
  v31 = *(_QWORD *)(v30 + 16);
  swift_bridgeObjectRelease(v30);
  if (v31)
  {
    v32 = *v19;
    v33 = v18;
    swift_bridgeObjectRetain(v32);
    v35 = sub_100399518(v34, v33);

    swift_bridgeObjectRelease(v32);
    if ((v35 & 1) == 0)
    {
      swift_beginAccess(v19, v40, 33, 0);
      v36 = v33;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v36);
      v38 = *(_QWORD *)((*v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v37 = *(_QWORD *)((*v19 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v38 >= v37 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v37 > 1, v38 + 1, 1);
      v39 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v38, v36);
      specialized Array._endMutation()(v39);
      swift_endAccess(v40);
      sub_100370E2C();
    }
  }

}

void sub_100393EC4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  _BYTE v7[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    a3();

  }
}

double sub_100393F18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  _BYTE v11[24];
  _BYTE v12[24];

  v1 = type metadata accessor for FMSelectedSection(0);
  v2 = __chkstk_darwin(v1);
  v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  v6 = &v11[-v5];
  v7 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator) + 56);
  swift_storeEnumTagMultiPayload(&v11[-v5], v8, 17);
  v9 = v7 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v7 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, v12, 0, 0);
  sub_10004FC74(v9, (uint64_t)v4, type metadata accessor for FMSelectedSection);
  swift_beginAccess(v9, v11, 33, 0);
  swift_retain(v7);
  sub_100009DF8((uint64_t)v6, v9);
  swift_endAccess(v11);
  sub_10004C8A4((uint64_t)v4);
  sub_10004FCB8((uint64_t)v6, type metadata accessor for FMSelectedSection);
  sub_10004FCB8((uint64_t)v4, type metadata accessor for FMSelectedSection);
  *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  return result;
}

double sub_100394080()
{
  return sub_1003940C4(1);
}

double sub_1003940BC()
{
  return sub_1003940C4(0);
}

double sub_1003940C4(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  _BYTE v13[24];
  _BYTE v14[24];

  v3 = type metadata accessor for FMSelectedSection(0);
  v4 = __chkstk_darwin(v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  v8 = &v13[-v7];
  v9 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator) + 56);
  v13[-v7] = a1;
  swift_storeEnumTagMultiPayload(&v13[-v7], v10, 9);
  v11 = v9 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v9 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, v14, 0, 0);
  sub_10004FC74(v11, (uint64_t)v6, type metadata accessor for FMSelectedSection);
  swift_beginAccess(v11, v13, 33, 0);
  swift_retain(v9);
  sub_100009DF8((uint64_t)v8, v11);
  swift_endAccess(v13);
  sub_10004C8A4((uint64_t)v6);
  sub_10004FCB8((uint64_t)v8, type metadata accessor for FMSelectedSection);
  sub_10004FCB8((uint64_t)v6, type metadata accessor for FMSelectedSection);
  *(_QWORD *)&result = swift_release(v9).n128_u64[0];
  return result;
}

uint64_t sub_100394234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5[2] = a4;
  v5[3] = a5;
  v6 = sub_100053F2C(&qword_1005E2240);
  v5[4] = v6;
  v5[5] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FMIPBeaconShareState(0);
  v5[6] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[7] = v8;
  v5[8] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FMIPBeaconShare(0);
  v5[9] = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v5[10] = v10;
  v5[11] = swift_task_alloc((*(_QWORD *)(v10 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (*(_QWORD *)(*(_QWORD *)(sub_100053F2C(&qword_1005E2248) - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[12] = swift_task_alloc(v11);
  v5[13] = swift_task_alloc(v11);
  v5[14] = swift_task_alloc(v11);
  v12 = *(_QWORD *)(type metadata accessor for FMItemCellViewModel(0) - 8);
  v5[15] = v12;
  v5[16] = swift_task_alloc((*(_QWORD *)(v12 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  v5[17] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v13 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FMIPItem(0);
  v5[18] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v5[19] = v15;
  v16 = (*(_QWORD *)(v15 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v5[20] = swift_task_alloc(v16);
  v5[21] = swift_task_alloc(v16);
  v17 = type metadata accessor for MainActor(0);
  v5[22] = static MainActor.shared.getter(v17);
  v18 = dispatch thunk of Actor.unownedExecutor.getter(v17, &protocol witness table for MainActor);
  return swift_task_switch(sub_1003943D8, v18, v19);
}

unint64_t sub_1003943D8()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t);
  int v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  void (*v61)(uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  id v64;
  char *v65;
  uint64_t v66;
  void (*v67)();
  void (**v68)();
  uint64_t v69;
  uint64_t v70;
  id v71;
  char *v72;
  uint64_t v73;
  void (*v74)();
  void (**v75)();
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  void (**v80)();
  uint64_t v81;
  uint64_t v82;
  id v83;
  char *v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release(*(_QWORD *)(v0 + 176));
  v2 = *(id *)(v1 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_tableView);
  do
  {
    v3 = v2;
    v2 = objc_msgSend(v2, "nextResponder");

    if (!v2)
    {
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v11 = type metadata accessor for Logger(0);
      v12 = sub_100056D88(v11, (uint64_t)qword_1005F5748);
      v13 = Logger.logObject.getter(v12);
      v14 = static os_log_type_t.default.getter(v13);
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v15 = 0;
        _os_log_impl((void *)&_mh_execute_header, v13, v14, "FMDevicesListDataSource: Cannot remove device without a view controller", v15, 2u);
        swift_slowDealloc(v15, -1, -1);
      }

      goto LABEL_28;
    }
    v4 = objc_opt_self(UIViewController);
    v5 = swift_dynamicCastObjCClass(v2, v4);
  }
  while (!v5);
  v6 = (void *)v5;
  v7 = *(_QWORD *)(v0 + 144);
  v8 = *(_QWORD *)(v0 + 152);
  v9 = *(_QWORD *)(v0 + 136);
  sub_10038F5B8(*(_QWORD *)(v0 + 24), v9);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v9, 1, v7) == 1)
  {
    v10 = *(_QWORD *)(v0 + 136);

    sub_1000051EC(v10, (uint64_t *)&unk_1005D3AA0);
LABEL_28:
    v86 = *(_QWORD *)(v0 + 160);
    v88 = *(_QWORD *)(v0 + 128);
    v87 = *(_QWORD *)(v0 + 136);
    v90 = *(_QWORD *)(v0 + 104);
    v89 = *(_QWORD *)(v0 + 112);
    v92 = *(_QWORD *)(v0 + 88);
    v91 = *(_QWORD *)(v0 + 96);
    v93 = *(_QWORD *)(v0 + 64);
    v94 = *(_QWORD *)(v0 + 40);
    swift_task_dealloc(*(_QWORD *)(v0 + 168));
    swift_task_dealloc(v86);
    swift_task_dealloc(v87);
    swift_task_dealloc(v88);
    swift_task_dealloc(v89);
    swift_task_dealloc(v90);
    swift_task_dealloc(v91);
    swift_task_dealloc(v92);
    swift_task_dealloc(v93);
    swift_task_dealloc(v94);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v16 = *(_QWORD *)(v0 + 16);
  v17 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 32))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144));
  result = IndexPath.section.getter(v17);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_30;
  }
  v19 = *(_QWORD *)(v16 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_cellsViewModel);
  if (result >= *(_QWORD *)(v19 + 16))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v20 = *(_QWORD *)(v19 + 16 * result + 40);
  swift_bridgeObjectRetain(v20);
  result = IndexPath.row.getter(v21);
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (result < *(_QWORD *)(v20 + 16))
  {
    v22 = *(_QWORD *)(v0 + 128);
    v23 = *(_QWORD *)(v0 + 16);
    sub_10004FC74(v20+ ((*(unsigned __int8 *)(*(_QWORD *)(v0 + 120) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v0 + 120) + 80))+ *(_QWORD *)(*(_QWORD *)(v0 + 120) + 72) * result, v22, type metadata accessor for FMItemCellViewModel);
    swift_bridgeObjectRelease(v20);
    v99 = *(_QWORD *)(v23 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator);
    v24 = *(_QWORD *)(*(_QWORD *)(v99 + 24) + 64);
    v25 = swift_task_alloc(32);
    *(_QWORD *)(v25 + 16) = v22;
    swift_bridgeObjectRetain(v24);
    v26 = sub_1003DBDB4(sub_10039B358, v25, v24);
    swift_task_dealloc(v25);
    v27 = *(_QWORD *)(v0 + 112);
    v100 = v26;
    if (*(_QWORD *)(v26 + 16))
    {
      v28 = v26;
      v30 = *(_QWORD *)(v0 + 80);
      v29 = *(_QWORD *)(v0 + 88);
      v32 = *(_QWORD *)(v0 + 64);
      v31 = *(_QWORD *)(v0 + 72);
      v34 = *(_QWORD *)(v0 + 48);
      v33 = *(_QWORD *)(v0 + 56);
      v35 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v30 + 16))(v29, v28 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80)), v31);
      FMIPBeaconShare.state.getter(v35);
      v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
      FMIPBeaconShareState.baseState.getter(v36);
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
      v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56);
      v37(v27, 0, 1, v34);
    }
    else
    {
      v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 56) + 56);
      v37(v27, 1, 1, *(_QWORD *)(v0 + 48));
    }
    v39 = *(_QWORD *)(v0 + 104);
    v38 = *(_QWORD *)(v0 + 112);
    v41 = *(_QWORD *)(v0 + 48);
    v40 = *(_QWORD *)(v0 + 56);
    v42 = *(_QWORD *)(v0 + 32);
    v43 = *(_QWORD *)(v0 + 40);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v40 + 104))(v39, enum case for FMIPBeaconShareState.invitationReceived(_:), v41);
    v37(v39, 0, 1, v41);
    v44 = v43 + *(int *)(v42 + 48);
    sub_100007464(v38, v43, &qword_1005E2248);
    sub_100007464(v39, v44, &qword_1005E2248);
    v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 48);
    v46 = v45(v43, 1, v41);
    v47 = *(_QWORD *)(v0 + 48);
    if (v46 == 1)
    {
      v48 = *(_QWORD *)(v0 + 112);
      sub_1000051EC(*(_QWORD *)(v0 + 104), &qword_1005E2248);
      sub_1000051EC(v48, &qword_1005E2248);
      if (v45(v44, 1, v47) == 1)
      {
        sub_1000051EC(*(_QWORD *)(v0 + 40), &qword_1005E2248);
LABEL_26:
        v55 = 2;
        goto LABEL_27;
      }
    }
    else
    {
      sub_100007464(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 96), &qword_1005E2248);
      v49 = v45(v44, 1, v47);
      v51 = *(_QWORD *)(v0 + 104);
      v50 = *(_QWORD *)(v0 + 112);
      v52 = *(_QWORD *)(v0 + 96);
      if (v49 != 1)
      {
        v57 = *(_QWORD *)(v0 + 56);
        v56 = *(_QWORD *)(v0 + 64);
        v58 = *(_QWORD *)(v0 + 48);
        v97 = *(_QWORD *)(v0 + 40);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 32))(v56, v44, v58);
        v59 = sub_100008000(&qword_1005E2250, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPBeaconShareState, (uint64_t)&protocol conformance descriptor for FMIPBeaconShareState);
        v60 = dispatch thunk of static Equatable.== infix(_:_:)(v52, v56, v58, v59);
        v61 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
        v61(v56, v58);
        sub_1000051EC(v51, &qword_1005E2248);
        sub_1000051EC(v50, &qword_1005E2248);
        v61(v52, v58);
        sub_1000051EC(v97, &qword_1005E2248);
        if ((v60 & 1) != 0)
          goto LABEL_26;
LABEL_24:
        v55 = 3;
LABEL_27:
        v62 = *(_QWORD *)(v0 + 160);
        v63 = *(_QWORD *)(v0 + 144);
        v95 = *(_QWORD *)(v0 + 168);
        v96 = *(_QWORD *)(v0 + 152);
        v98 = *(_QWORD *)(v0 + 128);
        (*(void (**)(uint64_t))(v96 + 16))(v62);
        v64 = objc_allocWithZone((Class)type metadata accessor for FMItemSharingLandingViewController(0));
        swift_retain(v99);
        v65 = (char *)sub_1003317B4(v62, v99, 0, v55);
        swift_release(v99);
        v66 = swift_allocObject(&unk_10055F2C8, 24, 7);
        swift_unknownObjectWeakInit(v66 + 16);
        v67 = (void (*)())swift_allocObject(&unk_10055F570, 48, 7);
        *((_QWORD *)v67 + 2) = v66;
        *((_QWORD *)v67 + 3) = v100;
        *((_QWORD *)v67 + 4) = v6;
        *((_QWORD *)v67 + 5) = v65;
        v68 = (void (**)())&v65[qword_1005F5AE0];
        v69 = *(_QWORD *)&v65[qword_1005F5AE0];
        v70 = *(_QWORD *)&v65[qword_1005F5AE0 + 8];
        *v68 = sub_10039B3B0;
        v68[1] = v67;
        swift_bridgeObjectRetain(v100);
        v71 = v2;
        v72 = v65;
        sub_1000327F0(v69, v70);
        v73 = swift_allocObject(&unk_10055F2C8, 24, 7);
        swift_unknownObjectWeakInit(v73 + 16);
        v74 = (void (*)())swift_allocObject(&unk_10055F598, 40, 7);
        *((_QWORD *)v74 + 2) = v73;
        *((_QWORD *)v74 + 3) = v100;
        *((_QWORD *)v74 + 4) = v72;
        v75 = (void (**)())&v72[qword_1005F5AE8];
        v76 = *(_QWORD *)&v72[qword_1005F5AE8];
        v77 = *(_QWORD *)&v72[qword_1005F5AE8 + 8];
        *v75 = sub_10039B3F0;
        v75[1] = v74;
        v78 = v72;
        sub_1000327F0(v76, v77);
        v79 = swift_allocObject(&unk_10055F2C8, 24, 7);
        swift_unknownObjectWeakInit(v79 + 16);
        v80 = (void (**)())&v78[qword_1005F5AF0];
        v81 = *(_QWORD *)&v78[qword_1005F5AF0];
        v82 = *(_QWORD *)&v78[qword_1005F5AF0 + 8];
        *v80 = sub_10039B3FC;
        v80[1] = (void (*)())v79;
        sub_1000327F0(v81, v82);
        v83 = objc_allocWithZone((Class)type metadata accessor for FMActivityIndicatingNavigationController());
        v84 = v78;
        v85 = sub_1000A750C(v84, 2);
        objc_msgSend(v6, "presentViewController:animated:completion:", v85, 1, 0);

        (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v95, v63);
        sub_10004FCB8(v98, type metadata accessor for FMItemCellViewModel);
        goto LABEL_28;
      }
      v53 = *(_QWORD *)(v0 + 48);
      v54 = *(_QWORD *)(v0 + 56);
      sub_1000051EC(*(_QWORD *)(v0 + 104), &qword_1005E2248);
      sub_1000051EC(v50, &qword_1005E2248);
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v52, v53);
    }
    sub_1000051EC(*(_QWORD *)(v0 + 40), &qword_1005E2240);
    goto LABEL_24;
  }
LABEL_32:
  __break(1u);
  return result;
}

void sub_100394B94(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *Strong;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  char *v57;
  __n128 v58;
  void *v59;
  _QWORD *v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  char v67[24];

  v8 = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v56 - v13;
  a1 += 16;
  swift_beginAccess(a1, v67, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v62 = Strong;
    v56 = a4;
    v16 = sub_10038E68C(a2);
    v17 = v16;
    v18 = v16[2];
    v59 = a3;
    if (v18)
    {
      v66 = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)(v18);
      v19 = (char *)v17 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
      v20 = *(_QWORD *)(v9 + 72);
      v63 = (uint64_t)v17;
      v64 = v20;
      v21 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
      do
      {
        v21(v14, v19, v8);
        v21(v12, v14, v8);
        v22 = type metadata accessor for FMIPAcceptShareAction(0);
        swift_allocObject(v22, *(unsigned int *)(v22 + 48), *(unsigned __int16 *)(v22 + 52));
        v23 = FMIPAcceptShareAction.init(shareIdentifier:)(v12);
        v24 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v24);
        v25 = v66[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v25);
        v26 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v25, v23);
        specialized ContiguousArray._endMutation()(v26);
        v19 += v64;
        --v18;
      }
      while (v18);
      v27 = (uint64_t)v66;
      swift_bridgeObjectRelease(v63);
      a3 = v59;
      if (!((unint64_t)v27 >> 62))
      {
LABEL_6:
        v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
        v29 = swift_bridgeObjectRetain(v27);
        if (v28)
        {
LABEL_7:
          if (v28 < 1)
          {
            __break(1u);
            return;
          }
          v30 = 0;
          v31 = OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator;
          v61 = v27 & 0xC000000000000001;
          v29.n128_u64[0] = 136315138;
          v58 = v29;
          v57 = (char *)&type metadata for Any + 8;
          do
          {
            if (v61)
            {
              v35 = specialized _ArrayBuffer._getElementSlowPath(_:)(v30, v27);
            }
            else
            {
              v35 = *(_QWORD *)(v27 + 8 * v30 + 32);
              swift_retain(v35);
            }
            v36 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&v62[v31] + 24) + 32);
            v63 = swift_allocObject(&unk_10055F5E8, 24, 7);
            v64 = v36;
            *(_QWORD *)(v63 + 16) = a3;
            v37 = qword_1005D1DE8;
            swift_retain(v36);
            v38 = a3;
            if (v37 != -1)
              swift_once(&qword_1005D1DE8, sub_100005ADC);
            v39 = type metadata accessor for Logger(0);
            sub_100056D88(v39, (uint64_t)qword_1005F5748);
            v40 = swift_retain_n(v35, 2);
            v41 = Logger.logObject.getter(v40);
            v42 = static os_log_type_t.default.getter(v41);
            if (os_log_type_enabled(v41, v42))
            {
              v43 = swift_slowAlloc(12, -1);
              v60 = (_QWORD *)swift_slowAlloc(32, -1);
              v65 = v35;
              v66 = v60;
              *(_DWORD *)v43 = v58.n128_u32[0];
              v44 = v31;
              v45 = v28;
              v46 = v27;
              v47 = type metadata accessor for FMIPItemSharingAction(0);
              v48 = sub_100008000(&qword_1005D4188, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItemSharingAction, (uint64_t)&protocol conformance descriptor for FMIPItemSharingAction);
              v49 = v47;
              v27 = v46;
              v28 = v45;
              v31 = v44;
              v50 = dispatch thunk of CustomStringConvertible.description.getter(v49, v48);
              v52 = v51;
              *(_QWORD *)(v43 + 4) = sub_100056DA0(v50, v51, (uint64_t *)&v66);
              swift_release_n(v35, 2);
              swift_bridgeObjectRelease(v52);
              _os_log_impl((void *)&_mh_execute_header, v41, v42, "FMDevicesActionController: perform item share action %s", (uint8_t *)v43, 0xCu);
              v53 = v60;
              swift_arrayDestroy(v60, 1, v57);
              swift_slowDealloc(v53, -1, -1);
              v54 = v43;
              a3 = v59;
              swift_slowDealloc(v54, -1, -1);

            }
            else
            {

              swift_release_n(v35, 2);
            }
            ++v30;
            v32 = v64;
            v33 = swift_allocObject(&unk_10055F610, 32, 7);
            v34 = v63;
            *(_QWORD *)(v33 + 16) = sub_10039B404;
            *(_QWORD *)(v33 + 24) = v34;
            swift_retain(v34);
            FMIPManager.perform(action:completion:)(v35, sub_10039BBB8, v33);
            swift_release(v35);
            swift_release(v32);
            swift_release(v34);
            swift_release(v33);
          }
          while (v28 != v30);
        }
LABEL_23:
        swift_bridgeObjectRelease_n(v27, 2);
        objc_msgSend(v56, "dismissViewControllerAnimated:completion:", 1, 0);

        return;
      }
    }
    else
    {
      swift_bridgeObjectRelease(v16);
      v27 = (uint64_t)_swiftEmptyArrayStorage;
      if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
        goto LABEL_6;
    }
    if (v27 < 0)
      v55 = v27;
    else
      v55 = v27 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v27);
    v28 = _CocoaArrayWrapper.endIndex.getter(v55);
    if (v28)
      goto LABEL_7;
    goto LABEL_23;
  }
}

double sub_100395074(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double result;
  uint64_t v23;
  uint64_t v24;

  v24 = a2;
  v6 = type metadata accessor for FMIPItemActionStatus(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  __chkstk_darwin(v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100053F2C(&qword_1005D81A0);
  __chkstk_darwin(v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for TaskPriority(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  type metadata accessor for MainActor(0);
  swift_errorRetain(a2);
  v14 = a3;
  v15 = static MainActor.shared.getter(v14);
  v16 = *(unsigned __int8 *)(v7 + 80);
  v17 = (v16 + 32) & ~v16;
  v18 = (v8 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  v20 = swift_allocObject(&unk_10055F638, v19 + 8, v16 | 7);
  *(_QWORD *)(v20 + 16) = v15;
  *(_QWORD *)(v20 + 24) = &protocol witness table for MainActor;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v20 + v17, v9, v6);
  *(_QWORD *)(v20 + v18) = v24;
  *(_QWORD *)(v20 + v19) = v14;
  v21 = sub_100138D6C((uint64_t)v12, (uint64_t)&unk_1005E2260, v20);
  *(_QWORD *)&result = swift_release(v21).n128_u64[0];
  return result;
}

uint64_t sub_100395210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6[17] = a5;
  v6[18] = a6;
  v6[16] = a4;
  v7 = type metadata accessor for FMIPItemActionStatus(0);
  v6[19] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v6[20] = v8;
  v6[21] = swift_task_alloc((*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for MainActor(0);
  v6[22] = static MainActor.shared.getter(v9);
  v10 = dispatch thunk of Actor.unownedExecutor.getter(v9, &protocol witness table for MainActor);
  return swift_task_switch(sub_1003952A8, v10, v11);
}

uint64_t sub_1003952A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 v5;
  uint64_t v6;
  const void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  Swift::String v11;
  Swift::String v12;
  void *object;
  id v14;
  Swift::String v15;
  Swift::String v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  id v29;
  Swift::String v30;
  Swift::String_optional v31;
  Swift::String v32;
  id v33;
  Swift::String v34;
  Swift::String_optional v35;
  Swift::String v36;
  void *v37;
  NSString v38;
  NSString v39;
  id v40;
  id v41;
  Swift::String v42;
  Swift::String v43;
  void *v44;
  NSString v45;
  void *v46;
  id v47;
  Swift::String v49;
  Swift::String v50;
  Swift::String v51;
  Swift::String v52;
  Swift::String v53;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 128);
  v5 = swift_release(*(_QWORD *)(v0 + 176));
  (*(void (**)(uint64_t, _QWORD, uint64_t, __n128))(v3 + 104))(v1, enum case for FMIPItemActionStatus.success(_:), v2, v5);
  v6 = sub_100008000(&qword_1005D4140, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItemActionStatus, (uint64_t)&protocol conformance descriptor for FMIPItemActionStatus);
  LOBYTE(v4) = dispatch thunk of static Equatable.== infix(_:_:)(v4, v1, v2, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  if ((v4 & 1) == 0)
  {
    v7 = (const void *)(v0 + 16);
    v8 = *(_QWORD *)(v0 + 136);
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(0xE000000000000000);
    v9 = (void *)objc_opt_self(NSBundle);
    v10 = objc_msgSend(v9, "mainBundle");
    v49._countAndFlagsBits = 0xD00000000000001FLL;
    v49._object = (void *)0x80000001004B5B60;
    v11._countAndFlagsBits = 0x5F4552554C494146;
    v11._object = (void *)0xED0000454C544954;
    v12._countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v49)._object;

    _StringGuts.grow(_:)(20);
    v14 = objc_msgSend(v9, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
    v50._countAndFlagsBits = 0xD000000000000021;
    v50._object = (void *)0x80000001004A8FE0;
    v15._countAndFlagsBits = 0x5F4552554C494146;
    v15._object = (void *)0xEF4547415353454DLL;
    v16._countAndFlagsBits = 0;
    v16._object = (void *)0xE000000000000000;
    v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v50)._object;

    if (!v8)
    {
LABEL_11:
      v37 = *(void **)(v0 + 144);
      v38 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(object);
      v39 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v17);
      v40 = objc_msgSend((id)objc_opt_self(UIAlertController), "alertControllerWithTitle:message:preferredStyle:", v38, v39, 1);

      _StringGuts.grow(_:)(20);
      v41 = objc_msgSend(v9, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
      v53._object = (void *)0x80000001004A5EE0;
      v42._countAndFlagsBits = 0x4F545455425F4B4FLL;
      v42._object = (void *)0xEF454C5449545F4ELL;
      v43._countAndFlagsBits = 0;
      v43._object = (void *)0xE000000000000000;
      v53._countAndFlagsBits = 0xD000000000000021;
      v44 = NSLocalizedString(_:tableName:bundle:value:comment:)(v42, (Swift::String_optional)0, (NSBundle)v41, v43, v53)._object;

      v45 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v44);
      *(_QWORD *)(v0 + 48) = State.rawValue.getter;
      *(_QWORD *)(v0 + 56) = 0;
      *(_QWORD *)(v0 + 16) = _NSConcreteStackBlock;
      *(_QWORD *)(v0 + 24) = 1107296256;
      *(_QWORD *)(v0 + 32) = sub_100008B40;
      *(_QWORD *)(v0 + 40) = &unk_10055F650;
      v46 = _Block_copy(v7);
      swift_release(*(_QWORD *)(v0 + 56));
      v47 = objc_msgSend((id)objc_opt_self(UIAlertAction), "actionWithTitle:style:handler:", v45, 0, v46);
      _Block_release(v46);

      objc_msgSend(v40, "addAction:", v47);
      objc_msgSend(v37, "presentViewController:animated:completion:", v40, 1, 0);

      goto LABEL_12;
    }
    v18 = *(_QWORD *)(v0 + 136);
    swift_getErrorValue(v18, v0 + 112, v0 + 64);
    v19 = *(_QWORD *)(v0 + 72);
    v20 = *(_QWORD *)(v0 + 80);
    swift_errorRetain(v18);
    v21 = sub_10021EF24(v19, v20);
    v23 = v22;
    v25 = static String._unconditionallyBridgeFromObjectiveC(_:)(SPBeaconSharingErrorDomain);
    v26 = v24;
    if (v21 == v25 && v23 == v24)
    {
      swift_bridgeObjectRelease_n(v23, 2);
      v7 = (const void *)(v0 + 16);
    }
    else
    {
      v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v23, v25, v24, 0);
      swift_bridgeObjectRelease(v26);
      swift_bridgeObjectRelease(v23);
      v7 = (const void *)(v0 + 16);
      if ((v27 & 1) == 0)
      {
LABEL_10:
        swift_errorRelease(v18);
        goto LABEL_11;
      }
    }
    swift_getErrorValue(v18, v0 + 120, v0 + 88);
    v28 = (unint64_t)sub_10021EE24(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
    if (v28 <= 0xD && ((1 << v28) & 0x3080) != 0)
    {
      swift_bridgeObjectRelease(v17);
      v29 = objc_msgSend(v9, "mainBundle", swift_bridgeObjectRelease(object).n128_f64[0]);
      v30._countAndFlagsBits = 0xD00000000000002BLL;
      v51._object = (void *)0x80000001004A8F80;
      v30._object = (void *)0x80000001004ACEC0;
      v31.value._countAndFlagsBits = 0xD000000000000013;
      v31.value._object = (void *)0x80000001004A8F60;
      v32._countAndFlagsBits = 0;
      v32._object = (void *)0xE000000000000000;
      v51._countAndFlagsBits = 0xD000000000000018;
      object = NSLocalizedString(_:tableName:bundle:value:comment:)(v30, v31, (NSBundle)v29, v32, v51)._object;

      v33 = objc_msgSend(v9, "mainBundle");
      v34._countAndFlagsBits = 0xD00000000000002DLL;
      v52._object = (void *)0x80000001004A8F80;
      v34._object = (void *)0x80000001004ACEF0;
      v35.value._countAndFlagsBits = 0xD000000000000013;
      v35.value._object = (void *)0x80000001004A8F60;
      v7 = (const void *)(v0 + 16);
      v36._countAndFlagsBits = 0;
      v36._object = (void *)0xE000000000000000;
      v52._countAndFlagsBits = 0xD000000000000018;
      v17 = NSLocalizedString(_:tableName:bundle:value:comment:)(v34, v35, (NSBundle)v33, v36, v52)._object;

    }
    goto LABEL_10;
  }
LABEL_12:
  swift_task_dealloc(*(_QWORD *)(v0 + 168));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_100395870(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  id v48;
  char *v49;
  __n128 v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char *Strong;
  uint64_t v55;
  _QWORD *v56;
  char v57[24];

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v48 - v11;
  a1 += 16;
  swift_beginAccess(a1, v57, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v48 = a3;
    v13 = sub_10038E68C(a2);
    v14 = v13;
    v15 = v13[2];
    if (v15)
    {
      v56 = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)(v15);
      v16 = (char *)v14 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
      v17 = *(_QWORD *)(v7 + 72);
      v52 = (uint64_t)v14;
      v53 = v17;
      v18 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      do
      {
        v18(v12, v16, v6);
        v18(v10, v12, v6);
        v19 = type metadata accessor for FMIPDeclineShareAction(0);
        swift_allocObject(v19, *(unsigned int *)(v19 + 48), *(unsigned __int16 *)(v19 + 52));
        v20 = FMIPDeclineShareAction.init(shareIdentifier:)(v10);
        v21 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v21);
        v22 = v56[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v22);
        v23 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v20);
        specialized ContiguousArray._endMutation()(v23);
        v16 += v53;
        --v15;
      }
      while (v15);
      v24 = (uint64_t)v56;
      swift_bridgeObjectRelease(v52);
      if (!((unint64_t)v24 >> 62))
      {
LABEL_6:
        v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
        v26 = swift_bridgeObjectRetain(v24);
        if (v25)
        {
LABEL_7:
          if (v25 < 1)
          {
            __break(1u);
            return;
          }
          v27 = 0;
          v28 = OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator;
          v53 = v24 & 0xC000000000000001;
          v26.n128_u64[0] = 136315138;
          v50 = v26;
          v49 = (char *)&type metadata for Any + 8;
          v51 = v25;
          v52 = v24;
          do
          {
            if (v53)
            {
              v30 = specialized _ArrayBuffer._getElementSlowPath(_:)(v27, v24);
            }
            else
            {
              v30 = *(_QWORD *)(v24 + 8 * v27 + 32);
              swift_retain(v30);
            }
            v31 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)&Strong[v28] + 24) + 32);
            v32 = qword_1005D1DE8;
            swift_retain(v31);
            if (v32 != -1)
              swift_once(&qword_1005D1DE8, sub_100005ADC);
            v33 = type metadata accessor for Logger(0);
            sub_100056D88(v33, (uint64_t)qword_1005F5748);
            v34 = swift_retain_n(v30, 2);
            v35 = Logger.logObject.getter(v34);
            v36 = static os_log_type_t.default.getter(v35);
            if (os_log_type_enabled(v35, v36))
            {
              v37 = swift_slowAlloc(12, -1);
              v38 = (_QWORD *)swift_slowAlloc(32, -1);
              v55 = v30;
              v56 = v38;
              *(_DWORD *)v37 = v50.n128_u32[0];
              v39 = v28;
              v40 = type metadata accessor for FMIPItemSharingAction(0);
              v41 = sub_100008000(&qword_1005D4188, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItemSharingAction, (uint64_t)&protocol conformance descriptor for FMIPItemSharingAction);
              v42 = v40;
              v28 = v39;
              v43 = dispatch thunk of CustomStringConvertible.description.getter(v42, v41);
              v45 = v44;
              *(_QWORD *)(v37 + 4) = sub_100056DA0(v43, v44, (uint64_t *)&v56);
              swift_release_n(v30, 2);
              swift_bridgeObjectRelease(v45);
              _os_log_impl((void *)&_mh_execute_header, v35, v36, "FMDevicesActionController: perform item share action %s", (uint8_t *)v37, 0xCu);
              swift_arrayDestroy(v38, 1, v49);
              v46 = v38;
              v25 = v51;
              v24 = v52;
              swift_slowDealloc(v46, -1, -1);
              swift_slowDealloc(v37, -1, -1);

            }
            else
            {

              swift_release_n(v30, 2);
            }
            ++v27;
            v29 = swift_allocObject(&unk_10055F5C0, 32, 7);
            *(_QWORD *)(v29 + 16) = State.rawValue.getter;
            *(_QWORD *)(v29 + 24) = 0;
            FMIPManager.perform(action:completion:)(v30, sub_10039BBB8, v29);
            swift_release(v30);
            swift_release(v31);
            swift_release(v29);
          }
          while (v25 != v27);
        }
LABEL_23:
        swift_bridgeObjectRelease_n(v24, 2);
        objc_msgSend(v48, "dismissViewControllerAnimated:completion:", 1, 0);

        return;
      }
    }
    else
    {
      swift_bridgeObjectRelease(v13);
      v24 = (uint64_t)_swiftEmptyArrayStorage;
      if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
        goto LABEL_6;
    }
    if (v24 < 0)
      v47 = v24;
    else
      v47 = v24 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v24);
    v25 = _CocoaArrayWrapper.endIndex.getter(v47);
    if (v25)
      goto LABEL_7;
    goto LABEL_23;
  }
}

void sub_100395CFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  _BYTE v4[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v4, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_tableView), "reloadData");

  }
}

void sub_100395D60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  __n128 v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v58 - v6;
  v8 = type metadata accessor for FMItemCellViewModel(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = IndexPath.section.getter(v10);
  if ((v13 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_28;
  }
  v14 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_cellsViewModel);
  if (v13 >= *(_QWORD *)(v14 + 16))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v15 = *(_QWORD *)(v14 + 16 * v13 + 40);
  swift_bridgeObjectRetain(v15);
  v17 = IndexPath.row.getter(v16);
  if ((v17 & 0x8000000000000000) != 0)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v17 >= *(_QWORD *)(v15 + 16))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  sub_10004FC74(v15+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v17, (uint64_t)v12, type metadata accessor for FMItemCellViewModel);
  swift_bridgeObjectRelease(v15);
  v63 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator);
  v18 = *(_QWORD *)(*(_QWORD *)(v63 + 24) + 64);
  __chkstk_darwin(v19);
  v58 = v12;
  *(&v58 - 2) = v12;
  swift_bridgeObjectRetain(v18);
  v20 = sub_1003DBDB4(sub_10039BB38, (uint64_t)(&v58 - 4), v18);
  v21 = sub_10038E68C(v20);
  swift_bridgeObjectRelease(v20);
  v22 = v21[2];
  if (v22)
  {
    v65 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)(v22);
    v23 = (char *)v21 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v24 = *(_QWORD *)(v2 + 72);
    v61 = (unint64_t)v21;
    v62 = v24;
    v25 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
    do
    {
      v25(v7, v23, v1);
      v25(v5, v7, v1);
      v26 = type metadata accessor for FMIPDeclineShareAction(0);
      swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
      v27 = FMIPDeclineShareAction.init(shareIdentifier:)(v5);
      v28 = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v7, v1);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v28);
      v29 = v5;
      v30 = v2;
      v31 = v65[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v31);
      v32 = v31;
      v2 = v30;
      v5 = v29;
      v33 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v32, v27);
      specialized ContiguousArray._endMutation()(v33);
      v23 += v62;
      --v22;
    }
    while (v22);
    v34 = (uint64_t)v65;
    swift_bridgeObjectRelease(v61);
    if (!((unint64_t)v34 >> 62))
    {
LABEL_9:
      v35 = *(_QWORD *)((v34 & 0xFFFFFFFFFFFFF8) + 0x10);
      v36 = swift_bridgeObjectRetain(v34);
      if (v35)
        goto LABEL_10;
LABEL_26:
      swift_bridgeObjectRelease_n(v34, 2);
      sub_10004FCB8((uint64_t)v58, type metadata accessor for FMItemCellViewModel);
      return;
    }
  }
  else
  {
    swift_bridgeObjectRelease(v21);
    v34 = (uint64_t)_swiftEmptyArrayStorage;
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
      goto LABEL_9;
  }
  if (v34 < 0)
    v57 = v34;
  else
    v57 = v34 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v34);
  v35 = _CocoaArrayWrapper.endIndex.getter(v57);
  if (!v35)
    goto LABEL_26;
LABEL_10:
  if (v35 >= 1)
  {
    v37 = 0;
    v38 = v34 & 0xC000000000000001;
    v36.n128_u64[0] = 136315138;
    v60 = v36;
    v59 = (char *)&type metadata for Any + 8;
    v61 = v34 & 0xC000000000000001;
    v62 = v34;
    do
    {
      if (v38)
      {
        v40 = specialized _ArrayBuffer._getElementSlowPath(_:)(v37, v34);
      }
      else
      {
        v40 = *(_QWORD *)(v34 + 8 * v37 + 32);
        swift_retain(v40);
      }
      v41 = *(_QWORD *)(*(_QWORD *)(v63 + 24) + 32);
      v42 = qword_1005D1DE8;
      swift_retain(v41);
      if (v42 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v43 = type metadata accessor for Logger(0);
      sub_100056D88(v43, (uint64_t)qword_1005F5748);
      v44 = swift_retain_n(v40, 2);
      v45 = Logger.logObject.getter(v44);
      v46 = static os_log_type_t.default.getter(v45);
      if (os_log_type_enabled(v45, v46))
      {
        v47 = swift_slowAlloc(12, -1);
        v48 = v35;
        v49 = (_QWORD *)swift_slowAlloc(32, -1);
        v64 = v40;
        v65 = v49;
        *(_DWORD *)v47 = v60.n128_u32[0];
        v50 = type metadata accessor for FMIPItemSharingAction(0);
        v51 = sub_100008000(&qword_1005D4188, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItemSharingAction, (uint64_t)&protocol conformance descriptor for FMIPItemSharingAction);
        v52 = dispatch thunk of CustomStringConvertible.description.getter(v50, v51);
        v54 = v53;
        *(_QWORD *)(v47 + 4) = sub_100056DA0(v52, v53, (uint64_t *)&v65);
        swift_release_n(v40, 2);
        swift_bridgeObjectRelease(v54);
        _os_log_impl((void *)&_mh_execute_header, v45, v46, "FMDevicesActionController: perform item share action %s", (uint8_t *)v47, 0xCu);
        swift_arrayDestroy(v49, 1, v59);
        v55 = v49;
        v35 = v48;
        v34 = v62;
        swift_slowDealloc(v55, -1, -1);
        v56 = v47;
        v38 = v61;
        swift_slowDealloc(v56, -1, -1);

      }
      else
      {

        swift_release_n(v40, 2);
      }
      ++v37;
      v39 = swift_allocObject(&unk_10055F520, 32, 7);
      *(_QWORD *)(v39 + 16) = FMItemViewModelCapabilities.init(rawValue:);
      *(_QWORD *)(v39 + 24) = 0;
      FMIPManager.perform(action:completion:)(v40, sub_10039B278, v39);
      swift_release(v40);
      swift_release(v41);
      swift_release(v39);
    }
    while (v35 != v37);
    goto LABEL_26;
  }
LABEL_31:
  __break(1u);
}

uint64_t sub_1003962CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t);
  int v21;
  uint64_t *v22;
  char v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  char *v28;
  uint64_t v29;

  v29 = a2;
  v2 = type metadata accessor for UUID(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v28 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100053F2C((uint64_t *)&unk_1005E2210);
  __chkstk_darwin(v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100053F2C((uint64_t *)&unk_1005D53A0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v28 - v13;
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v28 - v16;
  FMIPBeaconShare.identifier.getter(v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v17, 0, 1, v2);
  v18 = type metadata accessor for FMItemCellViewModel(0);
  sub_100007464(v29 + *(int *)(v18 + 76), (uint64_t)v14, (uint64_t *)&unk_1005D53A0);
  v19 = (uint64_t)&v7[*(int *)(v5 + 48)];
  sub_100007464((uint64_t)v17, (uint64_t)v7, (uint64_t *)&unk_1005D53A0);
  sub_100007464((uint64_t)v14, v19, (uint64_t *)&unk_1005D53A0);
  v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v20((uint64_t)v7, 1, v2) == 1)
  {
    sub_1000051EC((uint64_t)v14, (uint64_t *)&unk_1005D53A0);
    sub_1000051EC((uint64_t)v17, (uint64_t *)&unk_1005D53A0);
    v21 = v20(v19, 1, v2);
    if (v21 == 1)
      v22 = (uint64_t *)&unk_1005D53A0;
    else
      v22 = (uint64_t *)&unk_1005E2210;
    if (v21 == 1)
      v23 = -1;
    else
      v23 = 0;
  }
  else
  {
    sub_100007464((uint64_t)v7, (uint64_t)v11, (uint64_t *)&unk_1005D53A0);
    if (v20(v19, 1, v2) == 1)
    {
      sub_1000051EC((uint64_t)v14, (uint64_t *)&unk_1005D53A0);
      sub_1000051EC((uint64_t)v17, (uint64_t *)&unk_1005D53A0);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v11, v2);
      v23 = 0;
      v22 = (uint64_t *)&unk_1005E2210;
    }
    else
    {
      v24 = v28;
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v28, v19, v2);
      v25 = sub_100008000((unint64_t *)&unk_1005E2220, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v23 = dispatch thunk of static Equatable.== infix(_:_:)(v11, v24, v2, v25);
      v26 = *(void (**)(char *, uint64_t))(v3 + 8);
      v26(v24, v2);
      v22 = (uint64_t *)&unk_1005D53A0;
      sub_1000051EC((uint64_t)v14, (uint64_t *)&unk_1005D53A0);
      sub_1000051EC((uint64_t)v17, (uint64_t *)&unk_1005D53A0);
      v26(v11, v2);
    }
  }
  sub_1000051EC((uint64_t)v7, v22);
  return v23 & 1;
}

_QWORD *sub_1003965CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD *, uint64_t, uint64_t);
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  void *v37;
  uint64_t v38;
  unint64_t v39;
  int v40;
  void (*v42)(char *, unint64_t, uint64_t);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  void *v49;
  id v50;
  id v51;
  NSString v52;
  id v53;
  id v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t aBlock[5];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v2 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  __chkstk_darwin(v2);
  v65 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FMIPItem(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v60 = v7;
  v61 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v9 = (char *)&v56 - v8;
  v10 = type metadata accessor for FMItemCellViewModel(0);
  v62 = *(_QWORD *)(v10 - 8);
  v63 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for IndexPath(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char **)((char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v17 = type metadata accessor for Logger(0);
  sub_100056D88(v17, (uint64_t)qword_1005F5748);
  v18 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v14 + 16);
  v64 = a1;
  v19 = v18(v16, a1, v13);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.default.getter(v20);
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc(12, -1);
    v58 = v5;
    v23 = (uint8_t *)v22;
    v24 = swift_slowAlloc(32, -1);
    v56 = v12;
    v25 = v24;
    aBlock[0] = v24;
    v59 = v4;
    *(_DWORD *)v23 = 136315138;
    v57 = v9;
    v26 = IndexPath.debugDescription.getter();
    v28 = v27;
    v69 = sub_100056DA0(v26, v27, aBlock);
    v9 = v57;
    v4 = v59;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &v70);
    v29 = swift_bridgeObjectRelease(v28);
    (*(void (**)(_QWORD *, uint64_t, __n128))(v14 + 8))(v16, v13, v29);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "FMItemsListDataSource: trailingSwipeActions for index path %s", v23, 0xCu);
    swift_arrayDestroy(v25, 1, (char *)&type metadata for Any + 8);
    v30 = v25;
    v12 = v56;
    swift_slowDealloc(v30, -1, -1);
    v31 = v23;
    v5 = v58;
    swift_slowDealloc(v31, -1, -1);
  }
  else
  {
    (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
  }

  v69 = (uint64_t)_swiftEmptyArrayStorage;
  v32 = v64;
  v34 = IndexPath.section.getter(v33);
  v36 = (unint64_t)v65;
  v37 = v66;
  if ((v34 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  v35 = *(_QWORD *)&v66[OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_cellsViewModel];
  if (v34 >= *(_QWORD *)(v35 + 16))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v16 = *(_QWORD **)(v35 + 16 * v34 + 40);
  swift_bridgeObjectRetain(v16);
  v39 = IndexPath.row.getter(v38);
  if ((v39 & 0x8000000000000000) != 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v35 = v16[2];
  if (v39 >= v35)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  sub_10004FC74((uint64_t)v16+ ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))+ *(_QWORD *)(v62 + 72) * v39, (uint64_t)v12, type metadata accessor for FMItemCellViewModel);
  swift_bridgeObjectRelease(v16);
  v40 = v12[*(int *)(v63 + 88)];
  sub_10038F5B8(v32, v36);
  if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v36, 1, v4) == 1)
  {
    sub_10004FCB8((uint64_t)v12, type metadata accessor for FMItemCellViewModel);
    sub_1000051EC(v36, (uint64_t *)&unk_1005D3AA0);
    return _swiftEmptyArrayStorage;
  }
  v42 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 32);
  v42(v9, v36, v4);
  if (v40)
  {
    v43 = v61;
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v61, v9, v4);
    v44 = *(unsigned __int8 *)(v5 + 80);
    v45 = (v44 + 24) & ~v44;
    v46 = swift_allocObject(&unk_10055F4A8, v45 + v60, v44 | 7);
    *(_QWORD *)(v46 + 16) = v37;
    v42((char *)(v46 + v45), (unint64_t)v43, v4);
    v47 = swift_allocObject(&unk_10055F4D0, 32, 7);
    *(_QWORD *)(v47 + 16) = sub_10039B1E4;
    *(_QWORD *)(v47 + 24) = v46;
    aBlock[4] = (uint64_t)sub_10039B270;
    v68 = v47;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1004638C0;
    aBlock[3] = (uint64_t)&unk_10055F4E8;
    v48 = _Block_copy(aBlock);
    v49 = (void *)objc_opt_self(UIContextualAction);
    v50 = v37;
    v51 = objc_msgSend(v49, "contextualActionWithStyle:title:handler:", 1, 0, v48);
    _Block_release(v48);
    swift_release(v68);
    v52 = String._bridgeToObjectiveC()();
    v53 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:", v52);

    objc_msgSend(v51, "setImage:", v53);
    v54 = objc_msgSend((id)objc_opt_self(UIColor), "systemRedColor");
    objc_msgSend(v51, "setBackgroundColor:", v54);

    v16 = v51;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16);
    v36 = *(_QWORD *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v35 = *(_QWORD *)((v69 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v36 < v35 >> 1)
    {
LABEL_14:
      v55 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v36, v16);
      specialized Array._endMutation()(v55);

      goto LABEL_15;
    }
LABEL_20:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v35 > 1, v36 + 1, 1);
    goto LABEL_14;
  }
LABEL_15:
  (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
  sub_10004FCB8((uint64_t)v12, type metadata accessor for FMItemCellViewModel);
  return (_QWORD *)v69;
}

void sub_100396BD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  NSObject *v9;
  NSObject *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  uint64_t v23;
  uint64_t v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  NSObject *oslog;

  v2 = v1;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100056D88(v4, (uint64_t)qword_1005F5748);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMItemsListDataSource: Remove button pressed", v8, 2u);
    swift_slowDealloc(v8, -1, -1);
  }

  v9 = *(id *)(v1 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_tableView);
  while (1)
  {
    v10 = v9;
    oslog = -[NSObject nextResponder](v9, "nextResponder");

    if (!oslog)
      break;
    v11 = objc_opt_self(UIViewController);
    v12 = (void *)swift_dynamicCastObjCClass(oslog, v11);
    v9 = oslog;
    if (v12)
    {
      v13 = FMIPItem.owner.getter(oslog);
      v15 = v14;
      v16 = objc_msgSend((id)objc_opt_self(SPBeacon), "SPOwner");
      v17 = objc_msgSend(v16, "destination");

      v18 = static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
      v20 = v19;

      if (v13 == v18 && v15 == v20)
      {
        swift_bridgeObjectRelease_n(v15, 2);
      }
      else
      {
        v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v13, v15, v18, v20, 0);
        swift_bridgeObjectRelease(v15);
        swift_bridgeObjectRelease(v20);
        if ((v22 & 1) == 0)
        {
          v23 = *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator);
          v24 = *(_QWORD *)(*(_QWORD *)(v23 + 24) + 32);
          swift_retain(v24);
          sub_1000B828C(a1, v23, v12);
LABEL_18:
          swift_release(v24);
          goto LABEL_19;
        }
      }
      v27 = *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator);
      v24 = *(_QWORD *)(*(_QWORD *)(v27 + 24) + 32);
      swift_retain(v24);
      sub_1000BB218(a1, v27, v12);
      goto LABEL_18;
    }
  }
  oslog = Logger.logObject.getter(0);
  v25 = static os_log_type_t.default.getter(oslog);
  if (os_log_type_enabled(oslog, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v26 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v25, "FMDevicesListDataSource: Cannot remove device without a view controller", v26, 2u);
    swift_slowDealloc(v26, -1, -1);
  }
LABEL_19:

}

id sub_100396ED0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMItemsListDataSource();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMItemsListDataSource()
{
  return objc_opt_self(_TtC6FindMy21FMItemsListDataSource);
}

uint64_t initializeBufferWithCopyOfBuffer for FMItemsListSectionViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  swift_bridgeObjectRetain(v3);
  return a1;
}

uint64_t assignWithCopy for FMItemsListSectionViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRelease(v4);
  return a1;
}

uint64_t assignWithTake for FMItemsListSectionViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for FMItemsListSectionViewModel(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FMItemsListSectionViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FMItemsListSectionViewModel()
{
  return &type metadata for FMItemsListSectionViewModel;
}

uint64_t sub_100397130(uint64_t a1, uint64_t a2)
{
  return sub_100399B70(a2, "FMItemsListDataSource: didUpdate %ld unknown items", (uint64_t)&unk_10055F368, (uint64_t)sub_10039A5C4, (uint64_t)&unk_10055F380);
}

uint64_t sub_100397168(uint64_t a1, uint64_t a2)
{
  return sub_100399B70(a2, "FMItemsListDataSource: didUpdate %ld items", (uint64_t)&unk_10055F318, (uint64_t)sub_10039BB9C, (uint64_t)&unk_10055F330);
}

void sub_1003971A0(uint64_t a1, uint64_t a2)
{
  sub_100399984(a2);
}

uint64_t sub_1003971A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10039A1C4(a3);
}

uint64_t sub_1003971B0(uint64_t a1, uint64_t a2)
{
  return sub_100399E88(a2);
}

uint64_t sub_1003971B8(uint64_t a1, uint64_t a2)
{
  return sub_10039A7EC(a2);
}

double sub_1003971C4(uint64_t a1, uint64_t a2)
{
  return sub_10039A5EC(a2);
}

uint64_t sub_1003971CC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource__listTitle);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource__listTitle + 8));
  return v1;
}

void sub_100397204(char a1)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_updatesEnabled);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_updatesEnabled) = a1;
  sub_10038EA48(v2);
}

uint64_t sub_10039721C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_mediator) + 24);
  v2 = swift_retain(v1);
  v3 = FMIPManager.isInitialized.getter(v2);
  swift_release(v1);
  return v3 & 1;
}

uint64_t sub_100397268(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_delegate + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease(a1);
}

char *sub_1003972A0(uint64_t a1, void *a2)
{
  id v4;

  v4 = objc_allocWithZone((Class)type metadata accessor for FMItemsListDataSource());
  return sub_10038F064(a1, a2);
}

BOOL sub_1003972E8(uint64_t a1, unint64_t a2)
{
  return sub_10039A794(a2);
}

void sub_1003972F4(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4[2];

  v2 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = (_QWORD *)sub_10020CEAC(v2);
  v3 = v2[2];
  v4[0] = (uint64_t)(v2 + 4);
  v4[1] = v3;
  sub_1003973DC(v4);
  *a1 = v2;
}

void sub_10039735C(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *(_QWORD *)(type metadata accessor for FMItemCellViewModel(0) - 8);
  v3 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v3 = (_QWORD *)sub_10020CEC0(v3);
  v4 = v3[2];
  v5[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_100397B8C(v5);
  *a1 = v3;
}

void sub_1003973DC(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  Swift::Int v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  Swift::Int v13;
  unint64_t v14;
  unint64_t v15;
  char *v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  char v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  unint64_t v71;
  uint64_t *v72;
  _QWORD *v73;
  Swift::Int v74;
  uint64_t v75;
  char *__dst;

  v3 = a1[1];
  if (_minimumMergeRunLength(_:)(v3) >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_100398858(0, v3, 1, a1);
      return;
    }
LABEL_103:
    __break(1u);
    JUMPOUT(0x100397AD8);
  }
  if (v3 >= 0)
    v4 = v3;
  else
    v4 = v3 + 1;
  if (v3 < -1)
    goto LABEL_106;
  v72 = a1;
  if (v3 < 2)
  {
    v8 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      v12 = _swiftEmptyArrayStorage[2];
      v11 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_70;
    }
    v73 = _swiftEmptyArrayStorage;
  }
  else
  {
    v5 = v4 >> 1;
    v6 = sub_100053F2C((uint64_t *)&unk_1005D67D0);
    v7 = static Array._allocateBufferUninitialized(minimumCapacity:)(v5, v6);
    *(_QWORD *)(v7 + 16) = v5;
    v73 = (_QWORD *)v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v11 = (char *)_swiftEmptyArrayStorage;
  v74 = v3;
  v75 = v10;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
      __asm { BR              X13 }
    if (v9 < v13)
    {
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
LABEL_101:
      __break(1u);
LABEL_102:
      __break(1u);
      __break(1u);
      goto LABEL_103;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v11) & 1) == 0)
      v11 = sub_10020C830(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v15 = *((_QWORD *)v11 + 2);
    v14 = *((_QWORD *)v11 + 3);
    v12 = v15 + 1;
    v10 = v75;
    if (v15 >= v14 >> 1)
    {
      v63 = sub_10020C830((char *)(v14 > 1), v15 + 1, 1, v11);
      v10 = v75;
      v11 = v63;
    }
    *((_QWORD *)v11 + 2) = v12;
    v16 = v11 + 32;
    v17 = &v11[16 * v15 + 32];
    *(_QWORD *)v17 = v13;
    *((_QWORD *)v17 + 1) = v9;
    if (v15)
      break;
    v12 = 1;
LABEL_15:
    v3 = v74;
    if (v9 >= v74)
    {
      v8 = v73;
LABEL_70:
      v65 = v11;
      v73 = v8;
      if (v12 < 2)
        goto LABEL_67;
      v66 = *v72;
      while (1)
      {
        v67 = v12 - 2;
        if (v12 < 2)
          goto LABEL_99;
        if (!v66)
          break;
        v64 = v65;
        v68 = *(_QWORD *)&v65[16 * v67 + 32];
        v69 = *(_QWORD *)&v65[16 * v12 + 24];
        sub_100398BFC((char *)(v66 + 16 * v68), (char *)(v66 + 16 * *(_QWORD *)&v65[16 * v12 + 16]), v66 + 16 * v69, __dst);
        if (v1)
          goto LABEL_66;
        if (v69 < v68)
          goto LABEL_100;
        if ((swift_isUniquelyReferenced_nonNull_native(v64) & 1) == 0)
          v64 = sub_10020CE70((uint64_t)v64);
        if (v67 >= *((_QWORD *)v64 + 2))
          goto LABEL_101;
        v70 = &v64[16 * v67 + 32];
        *(_QWORD *)v70 = v68;
        *((_QWORD *)v70 + 1) = v69;
        v71 = *((_QWORD *)v64 + 2);
        if (v12 > v71)
          goto LABEL_102;
        memmove(&v64[16 * v12 + 16], &v64[16 * v12 + 32], 16 * (v71 - v12));
        v65 = v64;
        *((_QWORD *)v64 + 2) = v71 - 1;
        v12 = v71 - 1;
        if (v71 <= 2)
          goto LABEL_67;
      }
      __break(1u);
LABEL_106:
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
      __break(1u);
      JUMPOUT(0x100397B3CLL);
    }
  }
  while (1)
  {
    v18 = v12 - 1;
    if (v12 >= 4)
    {
      v23 = &v16[16 * v12];
      v24 = *((_QWORD *)v23 - 8);
      v25 = *((_QWORD *)v23 - 7);
      v29 = __OFSUB__(v25, v24);
      v26 = v25 - v24;
      if (v29)
        goto LABEL_87;
      v28 = *((_QWORD *)v23 - 6);
      v27 = *((_QWORD *)v23 - 5);
      v29 = __OFSUB__(v27, v28);
      v21 = v27 - v28;
      v22 = v29;
      if (v29)
        goto LABEL_88;
      v30 = v12 - 2;
      v31 = &v16[16 * v12 - 32];
      v33 = *(_QWORD *)v31;
      v32 = *((_QWORD *)v31 + 1);
      v29 = __OFSUB__(v32, v33);
      v34 = v32 - v33;
      if (v29)
        goto LABEL_90;
      v29 = __OFADD__(v21, v34);
      v35 = v21 + v34;
      if (v29)
        goto LABEL_93;
      if (v35 >= v26)
      {
        v53 = &v16[16 * v18];
        v55 = *(_QWORD *)v53;
        v54 = *((_QWORD *)v53 + 1);
        v29 = __OFSUB__(v54, v55);
        v56 = v54 - v55;
        if (v29)
          goto LABEL_97;
        v46 = v21 < v56;
        goto LABEL_55;
      }
    }
    else
    {
      if (v12 != 3)
      {
        v47 = *((_QWORD *)v11 + 4);
        v48 = *((_QWORD *)v11 + 5);
        v29 = __OFSUB__(v48, v47);
        v40 = v48 - v47;
        v41 = v29;
        goto LABEL_49;
      }
      v20 = *((_QWORD *)v11 + 4);
      v19 = *((_QWORD *)v11 + 5);
      v29 = __OFSUB__(v19, v20);
      v21 = v19 - v20;
      v22 = v29;
    }
    if ((v22 & 1) != 0)
      goto LABEL_89;
    v30 = v12 - 2;
    v36 = &v16[16 * v12 - 32];
    v38 = *(_QWORD *)v36;
    v37 = *((_QWORD *)v36 + 1);
    v39 = __OFSUB__(v37, v38);
    v40 = v37 - v38;
    v41 = v39;
    if (v39)
      goto LABEL_92;
    v42 = &v16[16 * v18];
    v44 = *(_QWORD *)v42;
    v43 = *((_QWORD *)v42 + 1);
    v29 = __OFSUB__(v43, v44);
    v45 = v43 - v44;
    if (v29)
      goto LABEL_95;
    if (__OFADD__(v40, v45))
      goto LABEL_96;
    if (v40 + v45 >= v21)
    {
      v46 = v21 < v45;
LABEL_55:
      if (v46)
        v18 = v30;
      goto LABEL_57;
    }
LABEL_49:
    if ((v41 & 1) != 0)
      goto LABEL_91;
    v49 = &v16[16 * v18];
    v51 = *(_QWORD *)v49;
    v50 = *((_QWORD *)v49 + 1);
    v29 = __OFSUB__(v50, v51);
    v52 = v50 - v51;
    if (v29)
      goto LABEL_94;
    if (v52 < v40)
      goto LABEL_15;
LABEL_57:
    v57 = v18 - 1;
    if (v18 - 1 >= v12)
    {
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
LABEL_88:
      __break(1u);
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      __break(1u);
      goto LABEL_98;
    }
    if (!v10)
    {
      __break(1u);
      JUMPOUT(0x100397AECLL);
    }
    v58 = &v16[16 * v57];
    v59 = *(_QWORD *)v58;
    v60 = &v16[16 * v18];
    v61 = *((_QWORD *)v60 + 1);
    sub_100398BFC((char *)(v10 + 16 * *(_QWORD *)v58), (char *)(v10 + 16 * *(_QWORD *)v60), v10 + 16 * v61, __dst);
    if (v1)
      break;
    if (v61 < v59)
      goto LABEL_84;
    if (v18 > *((_QWORD *)v11 + 2))
      goto LABEL_85;
    *(_QWORD *)v58 = v59;
    *(_QWORD *)&v16[16 * v57 + 8] = v61;
    v62 = *((_QWORD *)v11 + 2);
    if (v18 >= v62)
      goto LABEL_86;
    v12 = v62 - 1;
    memmove(&v16[16 * v18], v60 + 16, 16 * (v62 - 1 - v18));
    *((_QWORD *)v11 + 2) = v62 - 1;
    v10 = v75;
    if (v62 <= 2)
      goto LABEL_15;
  }
  v64 = v11;
LABEL_66:
  v65 = v64;
LABEL_67:
  swift_bridgeObjectRelease(v65);
  v73[2] = 0;
  swift_bridgeObjectRelease(v73);
}

void sub_100397B8C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::Int v22;
  Swift::Int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  Swift::Int v29;
  char *v30;
  unint64_t v31;
  Swift::Int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  Swift::String v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  Swift::String v50;
  Swift::Int v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  _BOOL4 v57;
  Swift::Int v58;
  uint64_t v59;
  Swift::Int v60;
  uint64_t v61;
  uint64_t v62;
  double v63;
  double v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  Swift::String v68;
  Swift::Int v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  Swift::String v74;
  Swift::Int v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  Swift::Int v83;
  uint64_t v84;
  Swift::Int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  Swift::Int v90;
  uint64_t v91;
  uint64_t v92;
  double v93;
  double v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  Swift::String v98;
  uint64_t v99;
  Swift::Int v100;
  uint64_t v101;
  Swift::Int v102;
  uint64_t v103;
  void *v104;
  Swift::String v105;
  Swift::Int v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _BOOL4 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  char *v117;
  char *v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  BOOL v130;
  unint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  BOOL v140;
  uint64_t v141;
  char v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  BOOL v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  unint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  unint64_t v171;
  char *v172;
  _QWORD *v173;
  _QWORD *v174;
  Swift::Int v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  Swift::Int v184;
  Swift::Int v185;
  unint64_t v186;
  uint64_t v187;
  uint64_t v188;
  Swift::Int v189;
  char *v190;
  uint64_t v191;
  Swift::Int v192;
  uint64_t v193;
  uint64_t *v194;
  Swift::Int v195;
  uint64_t v196;
  Swift::Int v197;
  uint64_t v198;
  char *v199;

  v2 = v1;
  v4 = type metadata accessor for FMItemCellViewModel(0);
  v187 = *(_QWORD *)(v4 - 8);
  v188 = v4;
  v5 = __chkstk_darwin(v4);
  v181 = (uint64_t)&v174 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v191 = (uint64_t)&v174 - v8;
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v174 - v10;
  v12 = __chkstk_darwin(v9);
  v14 = (char *)&v174 - v13;
  v15 = __chkstk_darwin(v12);
  v183 = (uint64_t)&v174 - v16;
  v17 = __chkstk_darwin(v15);
  v182 = (uint64_t)&v174 - v18;
  v19 = __chkstk_darwin(v17);
  v178 = (uint64_t)&v174 - v20;
  __chkstk_darwin(v19);
  v177 = (uint64_t)&v174 - v21;
  v194 = a1;
  v22 = a1[1];
  v23 = _minimumMergeRunLength(_:)(v22);
  if (v23 >= v22)
  {
    if (v22 < 0)
      goto LABEL_157;
    if (v22)
      sub_100398908(0, v22, 1, v194);
    return;
  }
  if (v22 >= 0)
    v24 = v22;
  else
    v24 = v22 + 1;
  if (v22 < -1)
    goto LABEL_165;
  v190 = v14;
  v175 = v23;
  if (v22 < 2)
  {
    v28 = _swiftEmptyArrayStorage;
    v186 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v187 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v187 + 80));
    if (v22 != 1)
    {
      v31 = _swiftEmptyArrayStorage[2];
      v30 = (char *)_swiftEmptyArrayStorage;
LABEL_119:
      v174 = v28;
      if (v31 >= 2)
      {
        v165 = *v194;
        do
        {
          v166 = v31 - 2;
          if (v31 < 2)
            goto LABEL_152;
          if (!v165)
            goto LABEL_164;
          v159 = v30;
          v167 = v30 + 32;
          v168 = *(_QWORD *)&v30[16 * v166 + 32];
          v169 = *(_QWORD *)&v30[16 * v31 + 24];
          sub_100398EB4(v165 + *(_QWORD *)(v187 + 72) * v168, v165 + *(_QWORD *)(v187 + 72) * *(_QWORD *)&v167[16 * v31 - 16], v165 + *(_QWORD *)(v187 + 72) * v169, v186);
          if (v2)
            goto LABEL_131;
          if (v169 < v168)
            goto LABEL_153;
          if ((swift_isUniquelyReferenced_nonNull_native(v159) & 1) == 0)
            v159 = sub_10020CE70((uint64_t)v159);
          if (v166 >= *((_QWORD *)v159 + 2))
            goto LABEL_154;
          v170 = &v159[16 * v166 + 32];
          *(_QWORD *)v170 = v168;
          *((_QWORD *)v170 + 1) = v169;
          v171 = *((_QWORD *)v159 + 2);
          if (v31 > v171)
            goto LABEL_155;
          v30 = v159;
          memmove(&v159[16 * v31 + 16], &v159[16 * v31 + 32], 16 * (v171 - v31));
          *((_QWORD *)v159 + 2) = v171 - 1;
          v31 = v171 - 1;
        }
        while (v171 > 2);
      }
      v172 = v30;
LABEL_133:
      swift_bridgeObjectRelease(v172);
      v173 = v174;
      v174[2] = 0;
      swift_bridgeObjectRelease(v173);
      return;
    }
    v174 = _swiftEmptyArrayStorage;
  }
  else
  {
    v25 = v24 >> 1;
    v26 = static Array._allocateBufferUninitialized(minimumCapacity:)(v24 >> 1, v188);
    *(_QWORD *)(v26 + 16) = v25;
    v27 = *(unsigned __int8 *)(v187 + 80);
    v174 = (_QWORD *)v26;
    v186 = v26 + ((v27 + 32) & ~v27);
  }
  v29 = 0;
  v30 = (char *)_swiftEmptyArrayStorage;
  v199 = v11;
  while (1)
  {
    v32 = v29 + 1;
    v185 = v29;
    if (v29 + 1 >= v22)
    {
      v58 = v29 + 1;
      v39 = (uint64_t)v190;
      goto LABEL_49;
    }
    v189 = v22;
    v33 = *v194;
    v34 = *(_QWORD *)(v187 + 72);
    v35 = v177;
    sub_10004FC74(*v194 + v34 * v32, v177, type metadata accessor for FMItemCellViewModel);
    v179 = v33;
    v193 = v34;
    v36 = v33 + v34 * v29;
    v37 = v178;
    sub_10004FC74(v36, v178, type metadata accessor for FMItemCellViewModel);
    v38 = v35;
    v39 = (uint64_t)v190;
    v40 = *(double *)(v38 + 72);
    v41 = *(double *)(v37 + 72);
    if (v40 == v41)
    {
      v42 = *(_QWORD *)(v38 + 112);
      v43 = *(_QWORD *)(v38 + 16);
      v44 = *(void **)(v38 + 24);
      v197 = *(_QWORD *)(v38 + 104);
      v198 = v42;
      swift_bridgeObjectRetain(v42);
      v45._countAndFlagsBits = v43;
      v45._object = v44;
      String.append(_:)(v45);
      v46 = v198;
      v192 = v197;
      v47 = *(_QWORD *)(v37 + 112);
      v48 = *(_QWORD *)(v37 + 16);
      v49 = *(void **)(v37 + 24);
      v197 = *(_QWORD *)(v37 + 104);
      v198 = v47;
      swift_bridgeObjectRetain(v47);
      v50._countAndFlagsBits = v48;
      v50._object = v49;
      String.append(_:)(v50);
      v51 = v197;
      v52 = v198;
      v197 = v192;
      v198 = v46;
      v195 = v51;
      v196 = v52;
      v53 = sub_1000517B8();
      v54 = StringProtocol.caseInsensitiveCompare<A>(_:)(&v195, &type metadata for String, &type metadata for String, v53, v53);
      swift_bridgeObjectRelease(v46);
      v55 = v52;
      v11 = v199;
      swift_bridgeObjectRelease(v55);
      v56 = v54 == -1;
      v39 = (uint64_t)v190;
      v57 = v56;
    }
    else
    {
      v57 = v40 < v41;
    }
    LODWORD(v184) = v57;
    sub_10004FCB8(v37, type metadata accessor for FMItemCellViewModel);
    sub_10004FCB8(v38, type metadata accessor for FMItemCellViewModel);
    v58 = v29 + 2;
    v22 = v189;
    if (v29 + 2 >= v189)
    {
LABEL_34:
      if (!(_DWORD)v184)
        goto LABEL_49;
LABEL_35:
      if (v58 < v29)
        goto LABEL_158;
      if (v29 < v58)
      {
        v176 = v30;
        v81 = 0;
        v82 = v193 * (v58 - 1);
        v83 = v58;
        v84 = v58 * v193;
        v85 = v29;
        v86 = v29 * v193;
        v192 = v83;
        do
        {
          if (v85 != v83 + v81 - 1)
          {
            v87 = v2;
            v88 = v179;
            if (!v179)
              goto LABEL_163;
            v89 = v179 + v86;
            sub_10015B2C8(v179 + v86, v181);
            if (v86 < v82 || v89 >= v88 + v84)
            {
              swift_arrayInitWithTakeFrontToBack(v88 + v86, v88 + v82);
            }
            else if (v86 != v82)
            {
              swift_arrayInitWithTakeBackToFront(v88 + v86, v88 + v82);
            }
            sub_10015B2C8(v181, v88 + v82);
            v11 = v199;
            v39 = (uint64_t)v190;
            v2 = v87;
          }
          ++v85;
          --v81;
          v83 = v192;
          v82 -= v193;
          v84 -= v193;
          v86 += v193;
        }
        while (v85 < v192 + v81);
        v30 = v176;
        v58 = v192;
        v29 = v185;
        v22 = v189;
      }
      goto LABEL_49;
    }
    v176 = v30;
    v192 = v193 * v32;
    v59 = v179;
    v180 = v193 * v58;
    do
    {
      v60 = v58;
      v61 = v182;
      sub_10004FC74(v59 + v180, v182, type metadata accessor for FMItemCellViewModel);
      v62 = v183;
      sub_10004FC74(v59 + v192, v183, type metadata accessor for FMItemCellViewModel);
      v63 = *(double *)(v61 + 72);
      v64 = *(double *)(v62 + 72);
      if (v63 == v64)
      {
        v65 = *(_QWORD *)(v61 + 112);
        v66 = *(_QWORD *)(v61 + 16);
        v67 = *(void **)(v61 + 24);
        v197 = *(_QWORD *)(v61 + 104);
        v198 = v65;
        swift_bridgeObjectRetain(v65);
        v68._countAndFlagsBits = v66;
        v68._object = v67;
        String.append(_:)(v68);
        v69 = v197;
        v70 = v198;
        v71 = *(_QWORD *)(v62 + 112);
        v73 = *(_QWORD *)(v62 + 16);
        v72 = *(void **)(v62 + 24);
        v197 = *(_QWORD *)(v62 + 104);
        v198 = v71;
        swift_bridgeObjectRetain(v71);
        v74._countAndFlagsBits = v73;
        v74._object = v72;
        String.append(_:)(v74);
        v75 = v197;
        v76 = v198;
        v197 = v69;
        v198 = v70;
        v195 = v75;
        v196 = v76;
        v77 = sub_1000517B8();
        v78 = StringProtocol.caseInsensitiveCompare<A>(_:)(&v195, &type metadata for String, &type metadata for String, v77, v77);
        v79 = v70;
        v11 = v199;
        swift_bridgeObjectRelease(v79);
        swift_bridgeObjectRelease(v76);
        v56 = v78 == -1;
        v39 = (uint64_t)v190;
        v80 = v56;
      }
      else
      {
        v80 = v63 < v64;
      }
      sub_10004FCB8(v62, type metadata accessor for FMItemCellViewModel);
      sub_10004FCB8(v61, type metadata accessor for FMItemCellViewModel);
      if ((_DWORD)v184 != v80)
      {
        v30 = v176;
        v58 = v60;
        v29 = v185;
        v22 = v189;
        goto LABEL_34;
      }
      v58 = v60 + 1;
      v59 += v193;
      v22 = v189;
    }
    while (v189 != v60 + 1);
    v58 = v189;
    v30 = v176;
    v29 = v185;
    if ((_DWORD)v184)
      goto LABEL_35;
LABEL_49:
    if (v58 < v22)
    {
      if (__OFSUB__(v58, v29))
        goto LABEL_156;
      if (v58 - v29 < v175)
        break;
    }
LABEL_71:
    if (v58 < v29)
      goto LABEL_151;
    if ((swift_isUniquelyReferenced_nonNull_native(v30) & 1) == 0)
      v30 = sub_10020C830(0, *((_QWORD *)v30 + 2) + 1, 1, v30);
    v116 = *((_QWORD *)v30 + 2);
    v115 = *((_QWORD *)v30 + 3);
    v31 = v116 + 1;
    if (v116 >= v115 >> 1)
      v30 = sub_10020C830((char *)(v115 > 1), v116 + 1, 1, v30);
    *((_QWORD *)v30 + 2) = v31;
    v117 = v30 + 32;
    v118 = &v30[16 * v116 + 32];
    *(_QWORD *)v118 = v29;
    *((_QWORD *)v118 + 1) = v58;
    v192 = v58;
    if (v116)
    {
      while (1)
      {
        v119 = v31 - 1;
        if (v31 >= 4)
        {
          v124 = &v117[16 * v31];
          v125 = *((_QWORD *)v124 - 8);
          v126 = *((_QWORD *)v124 - 7);
          v130 = __OFSUB__(v126, v125);
          v127 = v126 - v125;
          if (v130)
            goto LABEL_140;
          v129 = *((_QWORD *)v124 - 6);
          v128 = *((_QWORD *)v124 - 5);
          v130 = __OFSUB__(v128, v129);
          v122 = v128 - v129;
          v123 = v130;
          if (v130)
            goto LABEL_141;
          v131 = v31 - 2;
          v132 = &v117[16 * v31 - 32];
          v134 = *(_QWORD *)v132;
          v133 = *((_QWORD *)v132 + 1);
          v130 = __OFSUB__(v133, v134);
          v135 = v133 - v134;
          if (v130)
            goto LABEL_143;
          v130 = __OFADD__(v122, v135);
          v136 = v122 + v135;
          if (v130)
            goto LABEL_146;
          if (v136 >= v127)
          {
            v154 = &v117[16 * v119];
            v156 = *(_QWORD *)v154;
            v155 = *((_QWORD *)v154 + 1);
            v130 = __OFSUB__(v155, v156);
            v157 = v155 - v156;
            if (v130)
              goto LABEL_150;
            v147 = v122 < v157;
            goto LABEL_108;
          }
        }
        else
        {
          if (v31 != 3)
          {
            v148 = *((_QWORD *)v30 + 4);
            v149 = *((_QWORD *)v30 + 5);
            v130 = __OFSUB__(v149, v148);
            v141 = v149 - v148;
            v142 = v130;
            goto LABEL_102;
          }
          v121 = *((_QWORD *)v30 + 4);
          v120 = *((_QWORD *)v30 + 5);
          v130 = __OFSUB__(v120, v121);
          v122 = v120 - v121;
          v123 = v130;
        }
        if ((v123 & 1) != 0)
          goto LABEL_142;
        v131 = v31 - 2;
        v137 = &v117[16 * v31 - 32];
        v139 = *(_QWORD *)v137;
        v138 = *((_QWORD *)v137 + 1);
        v140 = __OFSUB__(v138, v139);
        v141 = v138 - v139;
        v142 = v140;
        if (v140)
          goto LABEL_145;
        v143 = &v117[16 * v119];
        v145 = *(_QWORD *)v143;
        v144 = *((_QWORD *)v143 + 1);
        v130 = __OFSUB__(v144, v145);
        v146 = v144 - v145;
        if (v130)
          goto LABEL_148;
        if (__OFADD__(v141, v146))
          goto LABEL_149;
        if (v141 + v146 >= v122)
        {
          v147 = v122 < v146;
LABEL_108:
          if (v147)
            v119 = v131;
          goto LABEL_110;
        }
LABEL_102:
        if ((v142 & 1) != 0)
          goto LABEL_144;
        v150 = &v117[16 * v119];
        v152 = *(_QWORD *)v150;
        v151 = *((_QWORD *)v150 + 1);
        v130 = __OFSUB__(v151, v152);
        v153 = v151 - v152;
        if (v130)
          goto LABEL_147;
        if (v153 < v141)
          goto LABEL_15;
LABEL_110:
        v158 = v119 - 1;
        if (v119 - 1 >= v31)
        {
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
          goto LABEL_160;
        }
        if (!*v194)
          goto LABEL_162;
        v159 = v30;
        v160 = &v117[16 * v158];
        v161 = *(_QWORD *)v160;
        v162 = &v117[16 * v119];
        v163 = *((_QWORD *)v162 + 1);
        sub_100398EB4(*v194 + *(_QWORD *)(v187 + 72) * *(_QWORD *)v160, *v194 + *(_QWORD *)(v187 + 72) * *(_QWORD *)v162, *v194 + *(_QWORD *)(v187 + 72) * v163, v186);
        if (v2)
        {
LABEL_131:
          v172 = v159;
          goto LABEL_133;
        }
        if (v163 < v161)
          goto LABEL_137;
        if (v119 > *((_QWORD *)v159 + 2))
          goto LABEL_138;
        *(_QWORD *)v160 = v161;
        *(_QWORD *)&v117[16 * v158 + 8] = v163;
        v164 = *((_QWORD *)v159 + 2);
        if (v119 >= v164)
          goto LABEL_139;
        v30 = v159;
        v31 = v164 - 1;
        memmove(&v117[16 * v119], v162 + 16, 16 * (v164 - 1 - v119));
        *((_QWORD *)v159 + 2) = v164 - 1;
        v11 = v199;
        if (v164 <= 2)
          goto LABEL_15;
      }
    }
    v31 = 1;
LABEL_15:
    v22 = v194[1];
    v29 = v192;
    if (v192 >= v22)
    {
      v28 = v174;
      goto LABEL_119;
    }
  }
  if (__OFADD__(v29, v175))
    goto LABEL_159;
  if (v29 + v175 >= v22)
    v90 = v22;
  else
    v90 = v29 + v175;
  if (v90 >= v29)
  {
    if (v58 != v90)
    {
      v176 = v30;
      v180 = v2;
      v189 = *(_QWORD *)(v187 + 72);
      v192 = v58 * v189;
      v193 = v189 * (v58 - 1);
      v184 = v90;
      do
      {
        v91 = 0;
        do
        {
          v92 = *v194;
          sub_10004FC74(v192 + v91 + *v194, v39, type metadata accessor for FMItemCellViewModel);
          sub_10004FC74(v193 + v91 + v92, (uint64_t)v11, type metadata accessor for FMItemCellViewModel);
          v93 = *(double *)(v39 + 72);
          v94 = *((double *)v11 + 9);
          if (v93 == v94)
          {
            v95 = *(_QWORD *)(v39 + 112);
            v97 = *(_QWORD *)(v39 + 16);
            v96 = *(void **)(v39 + 24);
            v197 = *(_QWORD *)(v39 + 104);
            v198 = v95;
            swift_bridgeObjectRetain(v95);
            v98._countAndFlagsBits = v97;
            v98._object = v96;
            String.append(_:)(v98);
            v100 = v197;
            v99 = v198;
            v102 = *((_QWORD *)v11 + 13);
            v101 = *((_QWORD *)v11 + 14);
            v103 = *((_QWORD *)v11 + 2);
            v104 = (void *)*((_QWORD *)v199 + 3);
            v197 = v102;
            v198 = v101;
            swift_bridgeObjectRetain(v101);
            v105._countAndFlagsBits = v103;
            v105._object = v104;
            String.append(_:)(v105);
            v106 = v197;
            v107 = v198;
            v197 = v100;
            v198 = v99;
            v195 = v106;
            v196 = v107;
            v108 = sub_1000517B8();
            v109 = StringProtocol.caseInsensitiveCompare<A>(_:)(&v195, &type metadata for String, &type metadata for String, v108, v108);
            swift_bridgeObjectRelease(v99);
            v110 = v107;
            v11 = v199;
            swift_bridgeObjectRelease(v110);
            v56 = v109 == -1;
            v39 = (uint64_t)v190;
            v111 = v56;
          }
          else
          {
            v111 = v93 < v94;
          }
          sub_10004FCB8((uint64_t)v11, type metadata accessor for FMItemCellViewModel);
          sub_10004FCB8(v39, type metadata accessor for FMItemCellViewModel);
          if (!v111)
            break;
          v112 = *v194;
          if (!*v194)
            goto LABEL_161;
          v113 = v112 + v192 + v91;
          v114 = v112 + v193 + v91;
          sub_10015B2C8(v113, v191);
          swift_arrayInitWithTakeFrontToBack(v113, v114);
          sub_10015B2C8(v191, v114);
          v39 = (uint64_t)v190;
          v91 -= v189;
          ++v29;
          v11 = v199;
        }
        while (v58 != v29);
        ++v58;
        v193 += v189;
        v192 += v189;
        v29 = v185;
      }
      while (v58 != v184);
      v58 = v184;
      v2 = v180;
      v30 = v176;
    }
    goto LABEL_71;
  }
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

uint64_t sub_100398858(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t result;

  if (a3 != a2)
    return ((uint64_t (*)(void))((char *)&loc_1003988A4 + *((int *)qword_1003988F8 + *(unsigned __int8 *)(*a4 + 16 * a3))))();
  return result;
}

uint64_t sub_100398908(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  Swift::String v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BOOL4 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[2];
  uint64_t v54;
  uint64_t v55;
  char *v56;

  v45 = a1;
  v46 = type metadata accessor for FMItemCellViewModel(0);
  v7 = __chkstk_darwin(v46);
  v50 = (uint64_t)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v43 - v10;
  result = __chkstk_darwin(v9);
  v15 = (char *)&v43 - v14;
  v49 = a3;
  v44 = a2;
  if (a3 != a2)
  {
    v16 = *(_QWORD *)(v13 + 72);
    v47 = a4;
    v48 = v16;
    v51 = v16 * v49;
    v52 = v16 * (v49 - 1);
    v56 = (char *)&v43 - v14;
LABEL_5:
    v17 = 0;
    v18 = v45;
    while (1)
    {
      v19 = *a4;
      sub_10004FC74(v51 + v17 + *a4, (uint64_t)v15, type metadata accessor for FMItemCellViewModel);
      sub_10004FC74(v52 + v17 + v19, (uint64_t)v11, type metadata accessor for FMItemCellViewModel);
      v20 = *((double *)v15 + 9);
      v21 = *((double *)v11 + 9);
      if (v20 == v21)
      {
        v23 = *((_QWORD *)v15 + 13);
        v22 = *((_QWORD *)v15 + 14);
        v24 = *((_QWORD *)v15 + 2);
        v25 = (void *)*((_QWORD *)v56 + 3);
        v54 = v23;
        v55 = v22;
        swift_bridgeObjectRetain(v22);
        v26._countAndFlagsBits = v24;
        v26._object = v25;
        String.append(_:)(v26);
        v28 = v54;
        v27 = v55;
        v29 = *((_QWORD *)v11 + 14);
        v30 = *((_QWORD *)v11 + 2);
        v31 = (void *)*((_QWORD *)v11 + 3);
        v54 = *((_QWORD *)v11 + 13);
        v55 = v29;
        swift_bridgeObjectRetain(v29);
        v32._countAndFlagsBits = v30;
        v32._object = v31;
        String.append(_:)(v32);
        v33 = v54;
        v34 = v55;
        v54 = v28;
        v55 = v27;
        v53[0] = v33;
        v53[1] = v34;
        v35 = sub_1000517B8();
        v36 = StringProtocol.caseInsensitiveCompare<A>(_:)(v53, &type metadata for String, &type metadata for String, v35, v35);
        v37 = v27;
        v15 = v56;
        swift_bridgeObjectRelease(v37);
        v38 = v34;
        a4 = v47;
        swift_bridgeObjectRelease(v38);
        v39 = v36 == -1;
      }
      else
      {
        v39 = v20 < v21;
      }
      sub_10004FCB8((uint64_t)v11, type metadata accessor for FMItemCellViewModel);
      result = sub_10004FCB8((uint64_t)v15, type metadata accessor for FMItemCellViewModel);
      if (!v39)
      {
LABEL_4:
        v52 += v48;
        v51 += v48;
        if (++v49 == v44)
          return result;
        goto LABEL_5;
      }
      v40 = *a4;
      if (!*a4)
        break;
      v41 = v40 + v51 + v17;
      v42 = v40 + v52 + v17;
      sub_10015B2C8(v41, v50);
      swift_arrayInitWithTakeFrontToBack(v41, v42);
      result = sub_10015B2C8(v50, v42);
      v17 -= v48;
      ++v18;
      v15 = v56;
      if (v49 == v18)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100398BFC(char *__src, char *a2, unint64_t a3, char *__dst)
{
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  char v15;
  char *v16;
  const void *v17;
  char *v18;

  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v18 = __src;
  v17 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v16 = &__dst[16 * v13];
      v18 = a2;
      if (__src < a2 && v11 >= 16)
        __asm { BR              X16 }
      goto LABEL_20;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v16 = &__dst[16 * v10];
    if ((unint64_t)a2 < a3 && v8 >= 16)
      __asm { BR              X12 }
LABEL_20:
    sub_10020C934((void **)&v18, &v17, &v16);
    return 1;
  }
  v15 = 2;
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, v15, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100398EB4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  Swift::String v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  Swift::String v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _BOOL4 v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  BOOL v47;
  unint64_t v48;
  uint64_t result;
  uint64_t v51;
  double v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  Swift::String v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  Swift::String v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  _BOOL4 v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;

  v78 = type metadata accessor for FMItemCellViewModel(0);
  v8 = __chkstk_darwin(v78);
  v10 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v8);
  v13 = (char *)&v75 - v12;
  v14 = __chkstk_darwin(v11);
  v16 = (char *)&v75 - v15;
  __chkstk_darwin(v14);
  v18 = (char *)&v75 - v17;
  v79 = *(_QWORD *)(v19 + 72);
  if (!v79)
  {
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  if (a2 - a1 == 0x8000000000000000 && v79 == -1)
    goto LABEL_71;
  v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v79 == -1)
    goto LABEL_72;
  v21 = (uint64_t)(a2 - a1) / v79;
  v87 = a1;
  v86 = a4;
  v22 = v20 / v79;
  v80 = a4;
  if (v21 >= v20 / v79)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      v24 = v22 * v79;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4, a2);
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4, a2);
      }
      v48 = a4 + v24;
      v85 = a4 + v24;
      v87 = a2;
      v77 = a1;
      if (v24 >= 1 && a1 < a2)
      {
        v51 = -v79;
        v76 = -v79;
        do
        {
          sub_10004FC74(v48 + v51, (uint64_t)v13, type metadata accessor for FMItemCellViewModel);
          sub_10004FC74(a2 + v51, (uint64_t)v10, type metadata accessor for FMItemCellViewModel);
          v79 = a2 + v51;
          v52 = *((double *)v13 + 9);
          v53 = *((double *)v10 + 9);
          if (v52 == v53)
          {
            v54 = *((_QWORD *)v13 + 14);
            v55 = *((_QWORD *)v13 + 2);
            v56 = (void *)*((_QWORD *)v13 + 3);
            v83 = *((_QWORD *)v13 + 13);
            v84 = v54;
            swift_bridgeObjectRetain(v54);
            v57._countAndFlagsBits = v55;
            v57._object = v56;
            String.append(_:)(v57);
            v58 = a3;
            v60 = v83;
            v59 = v84;
            v61 = *((_QWORD *)v10 + 14);
            v63 = *((_QWORD *)v10 + 2);
            v62 = (void *)*((_QWORD *)v10 + 3);
            v83 = *((_QWORD *)v10 + 13);
            v84 = v61;
            swift_bridgeObjectRetain(v61);
            v64._countAndFlagsBits = v63;
            v64._object = v62;
            String.append(_:)(v64);
            v65 = v83;
            v66 = v84;
            v83 = v60;
            v84 = v59;
            a3 = v58;
            v51 = v76;
            v81 = v65;
            v82 = v66;
            v67 = sub_1000517B8();
            v68 = StringProtocol.caseInsensitiveCompare<A>(_:)(&v81, &type metadata for String, &type metadata for String, v67, v67);
            swift_bridgeObjectRelease(v59);
            swift_bridgeObjectRelease(v66);
            v69 = v68 == -1;
          }
          else
          {
            v69 = v52 < v53;
          }
          v70 = v80;
          v71 = a3 + v51;
          sub_10004FCB8((uint64_t)v10, type metadata accessor for FMItemCellViewModel);
          sub_10004FCB8((uint64_t)v13, type metadata accessor for FMItemCellViewModel);
          if (v69)
          {
            if (a3 < a2 || v71 >= a2)
            {
              v72 = v79;
              swift_arrayInitWithTakeFrontToBack(a3 + v51, v79);
            }
            else
            {
              v72 = v79;
              if (a3 != a2)
                swift_arrayInitWithTakeBackToFront(a3 + v51, v79);
            }
            v87 += v51;
          }
          else
          {
            v73 = v85;
            v74 = v85 + v51;
            v85 += v51;
            if (a3 < v73 || v71 >= v73)
            {
              swift_arrayInitWithTakeFrontToBack(a3 + v51, v74);
            }
            else if (a3 != v73)
            {
              swift_arrayInitWithTakeBackToFront(a3 + v51, v74);
            }
            v72 = a2;
          }
          v48 = v85;
          if (v85 <= v70)
            break;
          a2 = v72;
          a3 += v51;
        }
        while (v72 > v77);
      }
      goto LABEL_50;
    }
  }
  else if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21 * v79;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4, a1);
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront(a4, a1);
    }
    v77 = a4 + v23;
    v85 = a4 + v23;
    if (v23 >= 1 && a2 < a3)
    {
      do
      {
        sub_10004FC74(a2, (uint64_t)v18, type metadata accessor for FMItemCellViewModel);
        sub_10004FC74(v80, (uint64_t)v16, type metadata accessor for FMItemCellViewModel);
        v26 = a3;
        v27 = *((double *)v18 + 9);
        v28 = *((double *)v16 + 9);
        if (v27 == v28)
        {
          v29 = *((_QWORD *)v18 + 14);
          v30 = *((_QWORD *)v18 + 2);
          v31 = (void *)*((_QWORD *)v18 + 3);
          v83 = *((_QWORD *)v18 + 13);
          v84 = v29;
          swift_bridgeObjectRetain(v29);
          v32._countAndFlagsBits = v30;
          v32._object = v31;
          String.append(_:)(v32);
          v33 = v83;
          v34 = v84;
          v35 = *((_QWORD *)v16 + 14);
          v36 = *((_QWORD *)v16 + 2);
          v37 = (void *)*((_QWORD *)v16 + 3);
          v83 = *((_QWORD *)v16 + 13);
          v84 = v35;
          swift_bridgeObjectRetain(v35);
          v38._countAndFlagsBits = v36;
          v38._object = v37;
          String.append(_:)(v38);
          v39 = v83;
          v40 = v84;
          v83 = v33;
          v84 = v34;
          v81 = v39;
          v82 = v40;
          v41 = sub_1000517B8();
          v42 = StringProtocol.caseInsensitiveCompare<A>(_:)(&v81, &type metadata for String, &type metadata for String, v41, v41);
          swift_bridgeObjectRelease(v34);
          swift_bridgeObjectRelease(v40);
          v43 = v42 == -1;
        }
        else
        {
          v43 = v27 < v28;
        }
        sub_10004FCB8((uint64_t)v16, type metadata accessor for FMItemCellViewModel);
        sub_10004FCB8((uint64_t)v18, type metadata accessor for FMItemCellViewModel);
        if (v43)
        {
          v44 = v87;
          v45 = a2 + v79;
          a3 = v26;
          if (v87 < a2 || v87 >= v45)
          {
            swift_arrayInitWithTakeFrontToBack(v87, a2);
          }
          else if (v87 == a2)
          {
            v44 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront(v87, a2);
          }
        }
        else
        {
          v44 = v87;
          v46 = v86 + v79;
          v47 = v87 < v86 || v87 >= v46;
          a3 = v26;
          if (v47)
          {
            swift_arrayInitWithTakeFrontToBack(v87, v86);
          }
          else if (v87 != v86)
          {
            swift_arrayInitWithTakeBackToFront(v87, v86);
          }
          v86 = v46;
          v45 = a2;
        }
        v87 = v44 + v79;
        v80 = v86;
        if (v86 >= v77)
          break;
        a2 = v45;
      }
      while (v45 < a3);
    }
LABEL_50:
    sub_10020C9DC(&v87, &v86, (uint64_t *)&v85);
    return 1;
  }
LABEL_73:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_100399518(unint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v22;
  unint64_t v23;

  v2 = a1;
  if (a1 >> 62)
    goto LABEL_20;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  while (v3)
  {
    v22 = v2;
    v23 = v2 & 0xC000000000000001;
    v4 = 4;
    while (1)
    {
      v5 = v4 - 4;
      if (!v23)
        break;
      v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4 - 4, v2);
      v7 = v4 - 3;
      if (__OFADD__(v5, 1))
        goto LABEL_19;
LABEL_9:
      v8 = v3;
      v9 = v6;
      v10 = objc_msgSend(v6, "identifier");
      v11 = objc_msgSend(a2, "identifier");
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
      v14 = v13;
      v15 = static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
      v17 = v12 == v15 && v14 == v16;
      if (v17)
      {

        swift_bridgeObjectRelease_n(v14, 2);
        v19 = 1;
LABEL_18:
        v2 = v22;
        goto LABEL_25;
      }
      v18 = v16;
      v19 = _stringCompareWithSmolCheck(_:_:expecting:)(v12, v14, v15, v16, 0);

      swift_bridgeObjectRelease(v14);
      swift_bridgeObjectRelease(v18);
      if ((v19 & 1) != 0)
        goto LABEL_18;
      ++v4;
      v3 = v8;
      v17 = v7 == v8;
      v2 = v22;
      if (v17)
        goto LABEL_25;
    }
    v6 = *(id *)(v2 + 8 * v4);
    v7 = v4 - 3;
    if (!__OFADD__(v5, 1))
      goto LABEL_9;
LABEL_19:
    __break(1u);
LABEL_20:
    if (v2 < 0)
      v20 = v2;
    else
      v20 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v3 = _CocoaArrayWrapper.endIndex.getter(v20);
  }
  v19 = 0;
LABEL_25:
  swift_bridgeObjectRelease(v2);
  return v19 & 1;
}

uint64_t sub_1003996D0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[5];
  uint64_t v28;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v26 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v9 = type metadata accessor for Logger(0);
  v10 = sub_100056D88(v9, (uint64_t)qword_1005F5748);
  v11 = Logger.logObject.getter(v10);
  v12 = static os_log_type_t.default.getter(v11);
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "FMItemsListDataSource: provider didInitialize", v13, 2u);
    swift_slowDealloc(v13, -1, -1);
  }

  v14 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v15 = (void *)static OS_dispatch_queue.main.getter(v14);
  v16 = swift_allocObject(&unk_10055F3B8, 24, 7);
  *(_QWORD *)(v16 + 16) = v1;
  aBlock[4] = sub_10039A5E4;
  v28 = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_10055F3D0;
  v17 = _Block_copy(aBlock);
  v18 = v28;
  v19 = v1;
  swift_release(v18);
  static DispatchQoS.unspecified.getter(v20);
  aBlock[0] = _swiftEmptyArrayStorage;
  v21 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v22 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v23 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v22, v23, v2, v21);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_100399984(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;

  v2 = type metadata accessor for FMIPItem(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v6 = type metadata accessor for Logger(0);
  sub_100056D88(v6, (uint64_t)qword_1005F5748);
  v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v17 = v11;
    *(_DWORD *)v10 = 136315138;
    v12 = FMIPItem.debugDescription.getter(v11);
    v14 = v13;
    v16 = sub_100056DA0(v12, v13, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v16, &v17);
    v15 = swift_bridgeObjectRelease(v14);
    (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v15);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "FMItemsListDataSource: didUpdate single item %s", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }

}

uint64_t sub_100399B70(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  void *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint8_t *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  const char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void **aBlock;
  _QWORD v44[4];
  uint64_t v45;

  v40 = a3;
  v41 = a4;
  v39 = a2;
  v7 = v5;
  v9 = type metadata accessor for DispatchWorkItemFlags(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v42 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v16 = type metadata accessor for Logger(0);
  sub_100056D88(v16, (uint64_t)qword_1005F5748);
  swift_bridgeObjectRetain(a1);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(12, -1);
    v38 = a5;
    v21 = v7;
    v22 = v13;
    v23 = v10;
    v24 = v20;
    *(_DWORD *)v20 = 134217984;
    aBlock = *(void ***)(a1 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v44);
    swift_bridgeObjectRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, v39, v24, 0xCu);
    v25 = v24;
    v10 = v23;
    v13 = v22;
    v7 = v21;
    a5 = v38;
    swift_slowDealloc(v25, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease(a1);
  }

  v26 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v27 = (void *)static OS_dispatch_queue.main.getter(v26);
  v28 = swift_allocObject(v40, 24, 7);
  *(_QWORD *)(v28 + 16) = v7;
  v44[3] = v41;
  v45 = v28;
  aBlock = _NSConcreteStackBlock;
  v44[0] = 1107296256;
  v44[1] = sub_100037DF8;
  v44[2] = a5;
  v29 = _Block_copy(&aBlock);
  v30 = v45;
  v31 = v7;
  swift_release(v30);
  static DispatchQoS.unspecified.getter(v32);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v33 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v34 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v35 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v34, v35, v9, v33);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v12, v29);
  _Block_release(v29);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v15, v13);
}

uint64_t sub_100399E88(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  void **aBlock;
  _QWORD v30[4];
  uint64_t v31;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v28 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D2060 != -1)
    swift_once(&qword_1005D2060, sub_1003CB84C);
  v11 = type metadata accessor for Logger(0);
  sub_100056D88(v11, (uint64_t)qword_1005F5FE0);
  swift_bridgeObjectRetain(a1);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v15 = 134217984;
    aBlock = *(void ***)(a1 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v30);
    swift_bridgeObjectRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "FMItemsListDataSource: didUpdate %ld shares", v15, 0xCu);
    swift_slowDealloc(v15, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease(a1);
  }

  v16 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v17 = (void *)static OS_dispatch_queue.main.getter(v16);
  v18 = swift_allocObject(&unk_10055F228, 24, 7);
  *(_QWORD *)(v18 + 16) = v2;
  v30[3] = sub_10039A1AC;
  v31 = v18;
  aBlock = _NSConcreteStackBlock;
  v30[0] = 1107296256;
  v30[1] = sub_100037DF8;
  v30[2] = &unk_10055F240;
  v19 = _Block_copy(&aBlock);
  v20 = v31;
  v21 = v2;
  swift_release(v20);
  static DispatchQoS.unspecified.getter(v22);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v23 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v24 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v25 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v24, v25, v4, v23);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v10, v8);
}

uint64_t sub_10039A188()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_10039A1AC()
{
  uint64_t v0;

  return sub_100390CD4(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10039A1C4(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  id v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t aBlock[5];
  uint64_t v47;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v44 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v42 = *(_QWORD *)(v7 - 8);
  v43 = v7;
  __chkstk_darwin(v7);
  v41 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FMIPItem(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v13 = type metadata accessor for Logger(0);
  sub_100056D88(v13, (uint64_t)qword_1005F5748);
  v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  v15 = Logger.logObject.getter(v14);
  v16 = static os_log_type_t.default.getter(v15);
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc(12, -1);
    v18 = swift_slowAlloc(32, -1);
    v40 = v4;
    v19 = v18;
    aBlock[0] = v18;
    v38 = v2;
    v39 = v5;
    *(_DWORD *)v17 = 136315138;
    v20 = FMIPItem.debugDescription.getter(v18);
    v22 = v21;
    v45 = sub_100056DA0(v20, v21, aBlock);
    v2 = v38;
    v5 = v39;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v45, aBlock);
    v23 = swift_bridgeObjectRelease(v22);
    (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v23);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "FMItemsListDataSource: didUpdate image for item %s", v17, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    v24 = v19;
    v4 = v40;
    swift_slowDealloc(v24, -1, -1);
    swift_slowDealloc(v17, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }

  v25 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v26 = (void *)static OS_dispatch_queue.main.getter(v25);
  v27 = swift_allocObject(&unk_10055F278, 24, 7);
  *(_QWORD *)(v27 + 16) = v2;
  aBlock[4] = (uint64_t)sub_10039A590;
  v47 = v27;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100037DF8;
  aBlock[3] = (uint64_t)&unk_10055F290;
  v28 = _Block_copy(aBlock);
  v29 = v47;
  v30 = v2;
  swift_release(v29);
  v31 = v41;
  static DispatchQoS.unspecified.getter(v32);
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  v33 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v34 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v35 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  v36 = v44;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v34, v35, v4, v33);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v31, v36, v28);
  _Block_release(v28);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v36, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v31, v43);
}

uint64_t sub_10039A590()
{
  uint64_t v0;

  return sub_10039094C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_10039A598()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_10039A5BC()
{
  uint64_t v0;

  sub_100390BF4(v0);
}

void sub_10039A5C4()
{
  sub_100393A88();
}

double sub_10039A5E4()
{
  uint64_t v0;

  return sub_1003908A0(*(_QWORD *)(v0 + 16));
}

double sub_10039A5EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  Class *v7;
  Class isa;
  uint64_t v9;
  double result;
  Class v11;
  uint64_t v12;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v2 = type metadata accessor for Logger(0);
  sub_100056D88(v2, (uint64_t)qword_1005F5748);
  swift_bridgeObjectRetain(a1);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(12, -1);
    v7 = (Class *)swift_slowAlloc(8, -1);
    *(_DWORD *)v6 = 138412290;
    sub_100053F2C((uint64_t *)&unk_1005D6750);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v11 = isa;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v11, &v12);
    *v7 = isa;
    swift_bridgeObjectRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMItemsListDataSource: itemAger itemsDidAge %@", v6, 0xCu);
    v9 = sub_100053F2C((uint64_t *)&unk_1005D9680);
    swift_arrayDestroy(v7, 1, v9);
    swift_slowDealloc(v7, -1, -1);
    swift_slowDealloc(v6, -1, -1);

  }
  else
  {

    *(_QWORD *)&result = swift_bridgeObjectRelease(a1).n128_u64[0];
  }
  return result;
}

BOOL sub_10039A794(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  int v4;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_cellsViewModel);
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3 || (v4 = *(unsigned __int8 *)(v2 + 32), v3 <= a1))
  {
    __break(1u);
    return 0;
  }
  if (!*(_BYTE *)(v2 + 16 * a1 + 32))
    return 0;
  return v3 != 1 || v4 == 4 || v4 != 1;
}

uint64_t sub_10039A7EC(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  _QWORD *v17;
  Class isa;
  uint64_t v19;
  _QWORD *v20;
  uint8_t *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void **aBlock;
  _QWORD v41[4];
  uint64_t v42;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v39 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v38 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v10 = type metadata accessor for Logger(0);
  sub_100056D88(v10, (uint64_t)qword_1005F5748);
  swift_bridgeObjectRetain(a1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc(12, -1);
    v35 = v2;
    v15 = (uint8_t *)v14;
    v16 = swift_slowAlloc(8, -1);
    v36 = v8;
    v17 = (_QWORD *)v16;
    *(_DWORD *)v15 = 138412290;
    v37 = v7;
    sub_100006C5C(0, (unint64_t *)&unk_1005DF4B0, CLLocation_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    aBlock = (void **)isa;
    v7 = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v41);
    *v17 = isa;
    swift_bridgeObjectRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "FMItemsListDataSource: locationProvider didUpdate locations %@", v15, 0xCu);
    v19 = sub_100053F2C((uint64_t *)&unk_1005D9680);
    swift_arrayDestroy(v17, 1, v19);
    v20 = v17;
    v8 = v36;
    swift_slowDealloc(v20, -1, -1);
    v21 = v15;
    v2 = v35;
    swift_slowDealloc(v21, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease(a1);
  }

  v22 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v23 = (void *)static OS_dispatch_queue.main.getter(v22);
  v24 = swift_allocObject(&unk_10055F458, 24, 7);
  *(_QWORD *)(v24 + 16) = v2;
  v41[3] = sub_10039BB9C;
  v42 = v24;
  aBlock = _NSConcreteStackBlock;
  v41[0] = 1107296256;
  v41[1] = sub_100037DF8;
  v41[2] = &unk_10055F470;
  v25 = _Block_copy(&aBlock);
  v26 = v42;
  v27 = v2;
  swift_release(v26);
  v28 = v38;
  static DispatchQoS.unspecified.getter(v29);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v30 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v31 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v32 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v31, v32, v4, v30);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v28, v7, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v28, v8);
}

void sub_10039AB88(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  unint64_t v9;
  uint64_t v10;

  v2 = v1;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100056D88(v4, (uint64_t)qword_1005F5748);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v8 = 134217984;
    v9 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v9, &v10);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMItemsListDataSource: numberOfRowsInSection %ld", v8, 0xCu);
    swift_slowDealloc(v8, -1, -1);
  }

  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (*(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_cellsViewModel) + 16) <= a1)
LABEL_9:
    __break(1u);
}

void sub_10039ACC4(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v2 = v1;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v4 = type metadata accessor for Logger(0);
  v5 = sub_100056D88(v4, (uint64_t)qword_1005F5748);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v8 = 134217984;
    v10 = a1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v10, &v11);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMItemsListDataSource: titleForHeaderInSection %ld", v8, 0xCu);
    swift_slowDealloc(v8, -1, -1);
  }

  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_cellsViewModel);
    if (*(_QWORD *)(v9 + 16) > a1)
      __asm { BR              X9 }
  }
  __break(1u);
  JUMPOUT(0x10039AF54);
}

uint64_t sub_10039AF64()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v21 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v10 = (void *)static OS_dispatch_queue.main.getter(v9);
  v11 = swift_allocObject(&unk_10055F408, 24, 7);
  *(_QWORD *)(v11 + 16) = v0;
  aBlock[4] = sub_10039BB9C;
  v23 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_10055F420;
  v12 = _Block_copy(aBlock);
  v13 = v23;
  v14 = v1;
  swift_release(v13);
  static DispatchQoS.unspecified.getter(v15);
  aBlock[0] = _swiftEmptyArrayStorage;
  v16 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v17 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v18 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v17, v18, v2, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10039B170()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for FMIPItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_10039B1E4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMIPItem(0) - 8) + 80);
  v6 = v3 + ((v5 + 24) & ~v5);
  a3(1);
  sub_100396BD8(v6);
}

uint64_t sub_10039B24C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10039B270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_100464144(a1, a2, a3, a4, *(uint64_t (**)(void))(v4 + 16));
}

double sub_10039B278(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_1000B36F0(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

void sub_10039B280(uint64_t a1)
{
  uint64_t v1;

  sub_100393EC4(a1, v1, (void (*)(void))sub_100394080);
}

void sub_10039B2A0(uint64_t a1)
{
  uint64_t v1;

  sub_100393EC4(a1, v1, (void (*)(void))sub_1003940BC);
}

uint64_t sub_10039B2C4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1005E2234);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1000C7978;
  return sub_100394234(a1, v5, v6, v7, v8);
}

uint64_t sub_10039B358(uint64_t a1)
{
  uint64_t v1;

  return sub_1003962CC(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_10039B374()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 48, 7);
}

void sub_10039B3B0()
{
  uint64_t v0;

  sub_100394B94(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_10039B3BC()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

void sub_10039B3F0()
{
  uint64_t v0;

  sub_100395870(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

void sub_10039B3FC()
{
  uint64_t v0;

  sub_100395CFC(v0);
}

double sub_10039B404(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_100395074(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_10039B40C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for FMIPItemActionStatus(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_errorRelease(*(_QWORD *)(v0 + v6));

  return swift_deallocObject(v0, v7 + 8, v5);
}

uint64_t sub_10039B4AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(type metadata accessor for FMIPItemActionStatus(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(_QWORD *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  v9 = v1 + v5;
  v10 = *(_QWORD *)(v1 + v6);
  v11 = *(_QWORD *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFF8));
  v12 = (_QWORD *)swift_task_alloc(dword_1005E225C);
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_1000C7978;
  return sub_100395210(a1, v7, v8, v9, v10, v11);
}

void sub_10039B560(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  sub_1003933B4(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32), *(void **)(v2 + 40), *(void **)(v2 + 48), *(unsigned __int8 *)(v2 + 56), a2);
}

uint64_t sub_10039B588()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 57, 7);
}

double sub_10039B5CC()
{
  uint64_t v0;

  return sub_100391388(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
}

uint64_t sub_10039B5E0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

void sub_10039B60C()
{
  uint64_t v0;

  sub_100391864(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_10039B614()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

void sub_10039B640()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 16))();
  sub_100393A88();
}

uint64_t sub_10039B670()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = (int *)type metadata accessor for FMItemCellViewModel(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = *(_QWORD *)(v2 + 64);

  v6 = v0 + v4;
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 24));

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 96));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + 112));
  v7 = v0 + v4 + v1[16];
  v8 = type metadata accessor for Date(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v4 + v1[17] + 8));
  v9 = v0 + v4 + v1[19];
  v10 = type metadata accessor for UUID(0);
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[20]));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[26] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(v6 + v1[27] + 8));
  return swift_deallocObject(v0, v4 + v5, v3 | 7);
}

uint64_t sub_10039B7C0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMItemCellViewModel(0) - 8) + 80);
  return (*(uint64_t (**)(uint64_t))((swift_isaMask & **(_QWORD **)(v0 + 16)) + 0x158))(v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_10039B818()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10039B828()
{
  uint64_t v0;

  swift_unknownObjectUnownedDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10039B84C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_10039B8C0(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  sub_1003903C8(a1, a2, *(_QWORD *)(v2 + 16), v2 + ((v5 + 24) & ~v5));
}

uint64_t sub_10039B914()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for IndexPath(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 40) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  swift_unknownObjectRelease(*(_QWORD *)(v0 + 16));

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10039B990(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for IndexPath(0) - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc(dword_1005E2234);
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_1000BBF58;
  return sub_100394234(a1, v5, v6, v7, v8);
}

uint64_t storeEnumTagSinglePayload for FMItemsListSection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_10039BA70 + 4 * byte_10048E6BD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_10039BAA4 + 4 * byte_10048E6B8[v4]))();
}

uint64_t sub_10039BAA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_10039BAAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x10039BAB4);
  return result;
}

uint64_t sub_10039BAC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x10039BAC8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_10039BACC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_10039BAD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMItemsListSection()
{
  return &type metadata for FMItemsListSection;
}

unint64_t sub_10039BAF4()
{
  unint64_t result;

  result = qword_1005E2298;
  if (!qword_1005E2298)
  {
    result = swift_getWitnessTable(&unk_10048E82C, &type metadata for FMItemsListSection);
    atomic_store(result, (unint64_t *)&qword_1005E2298);
  }
  return result;
}

uint64_t sub_10039BB38(uint64_t a1)
{
  return sub_10039B358(a1) & 1;
}

char *sub_10039BBC0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  double v7;
  id v8;
  char *v9;
  char *v10;
  id v11;
  Swift::String v12;
  Swift::String_optional v13;
  Swift::String v14;
  Swift::String v15;
  uint64_t v16;
  uint64_t v18;
  Swift::String v19;

  v1 = sub_100053F2C((uint64_t *)&unk_1005E4430);
  __chkstk_darwin(v1);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = OBJC_IVAR____TtC6FindMy30FMDeviceShowContactDetailsView_showContactDetailsSwitch;
  v5 = qword_1005D20B8;
  v6 = v0;
  if (v5 != -1)
    swift_once(&qword_1005D20B8, sub_10005E610);
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v7 = *(double *)&qword_1005F5978;
  v8 = objc_allocWithZone((Class)type metadata accessor for FMSettingRowView());
  *(_QWORD *)&v6[v4] = sub_10044402C(1, v7);
  v9 = &v6[OBJC_IVAR____TtC6FindMy30FMDeviceShowContactDetailsView_delegate];
  *((_QWORD *)v9 + 1) = 0;
  swift_unknownObjectWeakInit(v9);
  v10 = &v6[OBJC_IVAR____TtC6FindMy30FMDeviceShowContactDetailsView_phoneNumber];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0xE000000000000000;

  v11 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v12._countAndFlagsBits = 0xD000000000000022;
  v19._object = (void *)0x80000001004B30E0;
  v12._object = (void *)0x80000001004C3EA0;
  v13.value._countAndFlagsBits = 0x617A696C61636F4CLL;
  v13.value._object = (void *)0xEC00000031656C62;
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v19._countAndFlagsBits = 0xD000000000000017;
  v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v19);

  v16 = type metadata accessor for FMPlatterIcon(0);
  swift_storeEnumTagMultiPayload(v3, v16, 11);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v3, 0, 1, v16);
  return sub_1003A4038(v15._countAndFlagsBits, (uint64_t)v15._object, 0, 0, (uint64_t)v3, 0, 0, 0, 0, 0, 0);
}

id sub_10039BEEC()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  double v8;
  NSString v9;
  NSString v10;

  sub_1003A46A4();
  v1 = *(char **)(v0 + OBJC_IVAR____TtC6FindMy30FMDeviceShowContactDetailsView_showContactDetailsSwitch);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy30FMDeviceShowContactDetailsView_phoneNumber + 8);
  v3 = &v1[OBJC_IVAR____TtC6FindMy16FMSettingRowView_title];
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy16FMSettingRowView_title + 8];
  *(_QWORD *)v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy30FMDeviceShowContactDetailsView_phoneNumber);
  *((_QWORD *)v3 + 1) = v2;
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRelease(v4);
  v5 = *(void **)&v1[OBJC_IVAR____TtC6FindMy16FMSettingRowView_titleLabel];
  v6 = *((_QWORD *)v3 + 1);
  v7 = v5;
  if (v6)
  {
    swift_bridgeObjectRetain(v6);
    v9 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v8 = swift_bridgeObjectRelease(v6).n128_u64[0];
  }
  else
  {
    v9 = 0;
  }
  objc_msgSend(v5, "setText:", v9, v8);

  v10 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setAccessibilityIdentifier:", v10);

  v1[OBJC_IVAR____TtC6FindMy16FMSettingRowView_separated] = 0;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy16FMSettingRowView_separator], "setHidden:", 1);
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_contentStackView), "addArrangedSubview:", v1);
}

void sub_10039C078()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "showContactDetailsRowTap");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy30FMDeviceShowContactDetailsView_showContactDetailsSwitch), "addGestureRecognizer:", v1);

}

void sub_10039C0E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  double v15;
  NSString v16;

  v3 = sub_1000F2BA4(a1, a2);
  v4 = (uint64_t *)(v2 + OBJC_IVAR____TtC6FindMy30FMDeviceShowContactDetailsView_phoneNumber);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy30FMDeviceShowContactDetailsView_phoneNumber + 8);
  *v4 = v3;
  v4[1] = v6;
  swift_bridgeObjectRelease(v5);
  v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy30FMDeviceShowContactDetailsView_showContactDetailsSwitch);
  v9 = *v4;
  v8 = v4[1];
  v10 = (uint64_t *)(v7 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_title);
  v11 = *(_QWORD *)(v7 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_title + 8);
  *v10 = v9;
  v10[1] = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v11);
  v12 = *(void **)(v7 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_titleLabel);
  v13 = v10[1];
  v14 = v12;
  if (v13)
  {
    swift_bridgeObjectRetain(v13);
    v16 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v15 = swift_bridgeObjectRelease(v13).n128_u64[0];
  }
  else
  {
    v16 = 0;
  }
  objc_msgSend(v12, "setText:", v16, v15);

}

void sub_10039C1C8()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  char *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  uint8_t *v8;
  NSObject *oslog;

  if (*(_BYTE *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy30FMDeviceShowContactDetailsView_showContactDetailsSwitch)
                + OBJC_IVAR____TtC6FindMy16FMSettingRowView_enabled) == 1)
  {
    Strong = swift_unknownObjectWeakLoadStrong(v0 + OBJC_IVAR____TtC6FindMy30FMDeviceShowContactDetailsView_delegate);
    if (Strong)
    {
      v2 = Strong;
      v3 = sub_1001C1A2C();
      v4 = *(void **)(v2
                    + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showContactDetailsWelcomeScreenViewController);
      *(_QWORD *)(v2
                + OBJC_IVAR____TtC6FindMy35FMDeviceDetailContentViewController_showContactDetailsWelcomeScreenViewController) = v3;
      swift_unknownObjectRelease(v2);

    }
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v5 = type metadata accessor for Logger(0);
    v6 = sub_100056D88(v5, (uint64_t)qword_1005F5748);
    oslog = Logger.logObject.getter(v6);
    v7 = static os_log_type_t.default.getter(oslog);
    if (os_log_type_enabled(oslog, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v7, "FMDeviceShowContactDetailsView: User selected showContactDetails detail label.", v8, 2u);
      swift_slowDealloc(v8, -1, -1);
    }

  }
}

double sub_10039C334()
{
  uint64_t v0;
  double result;

  sub_10005E190(v0 + OBJC_IVAR____TtC6FindMy30FMDeviceShowContactDetailsView_delegate);
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0
                                                           + OBJC_IVAR____TtC6FindMy30FMDeviceShowContactDetailsView_phoneNumber
                                                           + 8)).n128_u64[0];
  return result;
}

id sub_10039C374()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMDeviceShowContactDetailsView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMDeviceShowContactDetailsView()
{
  return objc_opt_self(_TtC6FindMy30FMDeviceShowContactDetailsView);
}

void sub_10039C410(char a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  Swift::String v7;
  Swift::String v8;
  Swift::String *v9;
  uint64_t v10;
  void *v11;
  void *object;
  id v13;
  unint64_t v14;
  NSString v15;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy30FMDeviceShowContactDetailsView_showContactDetailsSwitch);
  if ((a1 & 1) != 0)
  {
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(0xE000000000000000);
    v3 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v4 = 0xD00000000000002FLL;
    v14 = 0x80000001004B4110;
    v5 = 0x80000001004B40F0;
    v6 = 0xD00000000000001DLL;
  }
  else
  {
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(0xE000000000000000);
    v3 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v6 = 0xD00000000000001ELL;
    v4 = 0xD000000000000030;
    v14 = 0x80000001004B40B0;
    v5 = 0x80000001004B4090;
  }
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v6, (Swift::String_optional)0, (NSBundle)v3, v7, *(Swift::String *)&v4);

  v9 = (Swift::String *)(v2 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_subtitle);
  v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_subtitle + 8);
  *v9 = v8;
  swift_bridgeObjectRelease(v10);
  v11 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy16FMSettingRowView_secondaryLabel);
  object = v9->_object;
  v13 = v11;
  if (object)
  {
    swift_bridgeObjectRetain(object);
    v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(object);
  }
  else
  {
    v15 = 0;
  }
  objc_msgSend(v11, "setText:", v15);

}

id sub_10039C5E4(double a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  void *v8;
  id v9;
  id v10;
  double v11;
  id v12;
  id v13;
  NSString v14;
  id v15;
  id v16;
  id v17;

  v7 = objc_msgSend((id)objc_opt_self(UIFontMetrics), "defaultMetrics");
  v8 = (void *)objc_opt_self(UIFont);
  v9 = objc_msgSend(v8, "systemFontOfSize:", a1);
  v10 = objc_msgSend(v7, "scaledFontForFont:", v9);

  objc_msgSend(v10, "pointSize");
  if (v11 < a1)
  {
    v12 = objc_msgSend(v8, "systemFontOfSize:", a1);

    v10 = v12;
  }
  v13 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithFont:", v10);
  swift_bridgeObjectRetain(a3);
  v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(a3);
  v15 = objc_msgSend((id)objc_opt_self(UIImage), "_systemImageNamed:withConfiguration:", v14, v13);

  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend(v16, "imageWithTintColor:renderingMode:", a4, 1);

  }
  else
  {

    return 0;
  }
  return v17;
}

double sub_10039C7B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  double result;
  _BYTE v16[24];
  _BYTE v17[24];

  v1 = v0;
  v2 = type metadata accessor for FMSelectedSection(0);
  v3 = __chkstk_darwin(v2);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  v7 = &v16[-v6];
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v8 = type metadata accessor for Logger(0);
  v9 = sub_100056D88(v8, (uint64_t)qword_1005F5748);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "FMNoPersonView: action tapped", v12, 2u);
    swift_slowDealloc(v12, -1, -1);
  }

  v13 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_mediator) + 56);
  swift_storeEnumTagMultiPayload(v7, v2, 10);
  v14 = v13 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v13 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, v17, 0, 0);
  sub_100024F3C(v14, (uint64_t)v5);
  swift_beginAccess(v14, v16, 33, 0);
  swift_retain(v13);
  sub_100009DF8((uint64_t)v7, v14);
  swift_endAccess(v16);
  sub_10004C8A4((uint64_t)v5);
  sub_100024F00((uint64_t)v7);
  sub_100024F00((uint64_t)v5);
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

id sub_10039CA08()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMNoPersonView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_10039CA38(char a1)
{
  void *v1;
  uint64_t v3;
  char *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58[3];

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v3 = type metadata accessor for Logger(0);
  sub_100056D88(v3, (uint64_t)qword_1005F5748);
  v4 = v1;
  v5 = Logger.logObject.getter(v4);
  v6 = static os_log_type_t.default.getter(v5);
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc(12, -1);
    v8 = swift_slowAlloc(32, -1);
    *(_DWORD *)v7 = 136315138;
    v58[0] = v8;
    if (v4[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_updatesEnabled])
      v9 = 1702195828;
    else
      v9 = 0x65736C6166;
    if (v4[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_updatesEnabled])
      v10 = 0xE400000000000000;
    else
      v10 = 0xE500000000000000;
    v56 = sub_100056DA0(v9, v10, v58);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, &v57);

    swift_bridgeObjectRelease(v10);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "FMMultipartEntityListDataSource: updatesEnabled: %s", v7, 0xCu);
    swift_arrayDestroy(v8, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v8, -1, -1);
    swift_slowDealloc(v7, -1, -1);

  }
  else
  {

  }
  v11 = OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_updatesEnabled;
  if (v4[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_updatesEnabled] == 1)
  {
    v12 = *(_QWORD *)&v4[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_mediator];
    v13 = *(_QWORD *)(v12 + 24);
    v14 = type metadata accessor for FMDevicesSubscription(0);
    v15 = swift_allocObject(v14, *(unsigned int *)(v14 + 48), *(unsigned __int16 *)(v14 + 52));
    v16 = v15 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
    *(_QWORD *)(v16 + 8) = 0;
    swift_unknownObjectWeakInit(v16);
    v17 = v4;
    v18 = swift_retain(v13);
    UUID.init()(v18);
    v19 = v15 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
    *(_QWORD *)(v19 + 8) = &off_10055FAB0;
    swift_unknownObjectWeakAssign(v19, v17);

    swift_beginAccess(v13 + 16, v58, 33, 0);
    v20 = swift_retain(v15);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v20);
    v22 = *(_QWORD *)((*(_QWORD *)(v13 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
    v21 = *(_QWORD *)((*(_QWORD *)(v13 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v22 >= v21 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v21 > 1, v22 + 1, 1);
    v23 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v22, v15);
    specialized Array._endMutation()(v23);
    swift_endAccess(v58);
    swift_release(v13);
    v24 = *(_QWORD *)&v17[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_deviceSubscription];
    *(_QWORD *)&v17[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_deviceSubscription] = v15;
    swift_release(v24);
    v25 = *(void **)(v12 + 40);
    v26 = type metadata accessor for FMLocationSubscription(0);
    v27 = swift_allocObject(v26, *(unsigned int *)(v26 + 48), *(unsigned __int16 *)(v26 + 52));
    v28 = v27 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber;
    *(_QWORD *)(v28 + 8) = 0;
    swift_unknownObjectWeakInit(v28);
    v29 = v17;
    v30 = v25;
    UUID.init()(v30);
    v31 = v27 + OBJC_IVAR____TtC6FindMy22FMLocationSubscription_subscriber;
    *(_QWORD *)(v31 + 8) = &off_10055FA80;
    swift_unknownObjectWeakAssign(v31, v29);

    v32 = &v30[OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions];
    swift_beginAccess(&v30[OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions], v58, 33, 0);
    v33 = swift_retain(v27);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v33);
    v35 = *(_QWORD *)((*(_QWORD *)v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v34 = *(_QWORD *)((*(_QWORD *)v32 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v35 >= v34 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v34 > 1, v35 + 1, 1);
    v36 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v35, v27);
    specialized Array._endMutation()(v36);
    swift_endAccess(v58);

    v37 = *(_QWORD *)&v29[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_locationSubscription];
    *(_QWORD *)&v29[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_locationSubscription] = v27;
    swift_release(v37);
    v38 = v4[v11] ^ a1;
    v39 = *(_QWORD *)(v12 + 24);
    v40 = swift_retain(v39);
    v41 = FMIPManager.devices.getter(v40);
    swift_release(v39);
    v42 = *(void **)(*(_QWORD *)(v12 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
    v4 = v42;
    sub_10039E3BC(v41, v42, v38 & 1);
    swift_bridgeObjectRelease(v41);
    goto LABEL_26;
  }
  v43 = 0;
  v44 = *(_QWORD *)&v4[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_deviceSubscription];
  if (v44)
  {
    v45 = *(_QWORD *)(*(_QWORD *)&v4[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_mediator] + 24);
    swift_beginAccess(v45 + 16, v58, 33, 0);
    swift_retain(v44);
    swift_retain(v45);
    v46 = sub_1001138E0((uint64_t *)(v45 + 16), v44);
    v47 = v46;
    v48 = *(_QWORD *)(v45 + 16);
    if ((unint64_t)v48 >> 62)
    {
      if (v48 < 0)
        v54 = *(_QWORD *)(v45 + 16);
      else
        v54 = v48 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(v45 + 16));
      v49 = _CocoaArrayWrapper.endIndex.getter(v54);
      swift_bridgeObjectRelease(v48);
      if (v49 >= v47)
        goto LABEL_21;
    }
    else
    {
      v49 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v49 >= v46)
      {
LABEL_21:
        sub_1002006EC(v47, v49);
        swift_endAccess(v58);
        swift_release(v44);
        swift_release(v45);
        goto LABEL_22;
      }
    }
    __break(1u);
    goto LABEL_33;
  }
LABEL_22:
  v44 = *(_QWORD *)&v4[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_locationSubscription];
  if (!v44)
    return;
  v50 = *(char **)(*(_QWORD *)&v4[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_mediator] + 40);
  v51 = (uint64_t *)&v50[OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions];
  swift_beginAccess(&v50[OBJC_IVAR____TtC6FindMy18FMLocationProvider_subscriptions], v58, 33, 0);
  swift_retain(v44);
  v4 = v50;
  v52 = sub_10033579C(v51, v44);
  v43 = v52;
  v47 = *v51;
  if ((unint64_t)*v51 >> 62)
  {
LABEL_33:
    if (v47 < 0)
      v55 = v47;
    else
      v55 = v47 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v47);
    v53 = _CocoaArrayWrapper.endIndex.getter(v55);
    swift_bridgeObjectRelease(v47);
    if (v53 >= v43)
      goto LABEL_25;
LABEL_37:
    __break(1u);
    return;
  }
  v53 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v53 < v52)
    goto LABEL_37;
LABEL_25:
  sub_1002006F8(v43, v53);
  swift_endAccess(v58);
  swift_release(v44);
LABEL_26:

}

unint64_t sub_10039D038@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  char *v17;
  NSObject *v18;
  int v19;
  void **p_vtable;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  __n128 v25;
  void (*v26)(char *, uint64_t, __n128);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t result;
  uint64_t v31;
  uint64_t v32;
  os_log_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  os_log_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(char *);
  char *v61;
  uint64_t v62;
  uint64_t v63;

  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v61 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v54 - v10;
  __chkstk_darwin(v9);
  v13 = (char *)&v54 - v12;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v14 = type metadata accessor for Logger(0);
  v15 = sub_100056D88(v14, (uint64_t)qword_1005F5748);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v16(v13, a1, v5);
  v60 = (uint64_t (*)(char *))v16;
  v16(v11, a1, v5);
  v17 = v2;
  v59 = v15;
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  p_vtable = _TtC6FindMy22FMLocationSubscription.vtable;
  if (os_log_type_enabled(v18, (os_log_type_t)v19))
  {
    v55 = v19;
    v56 = v18;
    v57 = a1;
    v58 = a2;
    v21 = swift_slowAlloc(32, -1);
    v54 = swift_slowAlloc(32, -1);
    v63 = v54;
    *(_DWORD *)v21 = 136315650;
    v22 = IndexPath.debugDescription.getter();
    v24 = v23;
    v62 = sub_100056DA0(v22, v23, &v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63);
    v25 = swift_bridgeObjectRelease(v24);
    v26 = *(void (**)(char *, uint64_t, __n128))(v6 + 8);
    v26(v13, v5, v25);
    *(_WORD *)(v21 + 12) = 2048;
    v27 = OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_cellsViewModel;
    v28 = *(_QWORD *)(*(_QWORD *)&v17[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_cellsViewModel] + 16);

    v62 = v28;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63);

    *(_WORD *)(v21 + 22) = 2048;
    result = IndexPath.section.getter(v29);
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v31 = *(_QWORD *)&v17[v27];
      if (result < *(_QWORD *)(v31 + 16))
      {
        v32 = *(_QWORD *)(*(_QWORD *)(v31 + 8 * result + 32) + 16);

        ((void (*)(char *, uint64_t))v26)(v11, v5);
        v62 = v32;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v62, &v63);

        v33 = v56;
        _os_log_impl((void *)&_mh_execute_header, v56, (os_log_type_t)v55, "FMMultipartEntityListDataSource: device for index path: %s, section: %ld row: %ld", (uint8_t *)v21, 0x20u);
        v34 = v54;
        swift_arrayDestroy(v54, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v34, -1, -1);
        swift_slowDealloc(v21, -1, -1);

        a2 = v58;
        p_vtable = (void **)(_TtC6FindMy22FMLocationSubscription + 24);
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }

  v26 = *(void (**)(char *, uint64_t, __n128))(v6 + 8);
  ((void (*)(char *, uint64_t))v26)(v11, v5);

  ((void (*)(char *, uint64_t))v26)(v13, v5);
LABEL_8:
  v36 = IndexPath.section.getter(v35);
  v37 = (char *)p_vtable[101];
  v38 = *(_QWORD *)(*(_QWORD *)&v37[(_QWORD)v17] + 16);
  v39 = v61;
  v40 = v60(v61);
  if (v36 >= v38)
  {
    v44 = ((uint64_t (*)(char *, uint64_t))v26)(v39, v5);
    goto LABEL_18;
  }
  v41 = IndexPath.row.getter(v40);
  result = IndexPath.section.getter(v41);
  if ((result & 0x8000000000000000) != 0)
    goto LABEL_23;
  v42 = *(_QWORD *)&v37[(_QWORD)v17];
  if (result >= *(_QWORD *)(v42 + 16))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v43 = *(_QWORD *)(*(_QWORD *)(v42 + 8 * result + 32) + 16);
  v44 = ((uint64_t (*)(char *, uint64_t))v26)(v39, v5);
  if (v41 < v43)
  {
    v45 = IndexPath.section.getter(v44);
    result = IndexPath.row.getter(v45);
    if ((v45 & 0x8000000000000000) == 0)
    {
      v46 = *(_QWORD *)&v37[(_QWORD)v17];
      if (v45 < *(_QWORD *)(v46 + 16))
      {
        v47 = result;
        if ((result & 0x8000000000000000) == 0)
        {
          v48 = *(_QWORD *)(v46 + 8 * v45 + 32);
          if (result < *(_QWORD *)(v48 + 16))
          {
            v49 = type metadata accessor for FMDeviceCellViewModel(0);
            return sub_1000E5B2C(v48+ ((*(unsigned __int8 *)(*(_QWORD *)(v49 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v49 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v49 - 8) + 72) * v47+ *(int *)(v49 + 24), a2);
          }
          goto LABEL_28;
        }
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
        return result;
      }
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
LABEL_18:
  v50 = Logger.logObject.getter(v44);
  v51 = static os_log_type_t.default.getter(v50);
  if (os_log_type_enabled(v50, v51))
  {
    v52 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v52 = 0;
    _os_log_impl((void *)&_mh_execute_header, v50, v51, "FMMultipartEntityListDataSource: Not returning any device... out of bound", v52, 2u);
    swift_slowDealloc(v52, -1, -1);
  }

  v53 = type metadata accessor for FMIPItem(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(a2, 1, 1, v53);
}

void sub_10039D520()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_mediator);
  v2 = *(_QWORD *)(v1 + 24);
  v3 = swift_retain(v2);
  v4 = FMIPManager.devices.getter(v3);
  swift_release(v2);
  v5 = *(void **)(*(_QWORD *)(v1 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
  v6 = v5;
  sub_10039E3BC(v4, v5, 0);
  swift_bridgeObjectRelease(v4);

}

unint64_t sub_10039D604(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  NSString v7;
  Class isa;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t result;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  void *v24;
  id v25;
  double v26;
  id v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;

  v3 = type metadata accessor for FMDeviceCellViewModel(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v9 = objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v7, isa);

  v10 = sub_100053F2C(&qword_1005E2380);
  v11 = swift_dynamicCastClass(v9, v10);
  if (!v11)
    goto LABEL_12;
  v12 = (_QWORD *)v11;
  v13 = IndexPath.row.getter(v11);
  result = IndexPath.section.getter(v13);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  v15 = OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_cellsViewModel;
  v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_cellsViewModel);
  if (result >= *(_QWORD *)(v16 + 16))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v13 >= *(_QWORD *)(*(_QWORD *)(v16 + 8 * result + 32) + 16))
  {
LABEL_12:

    return (unint64_t)objc_msgSend(objc_allocWithZone((Class)UITableViewCell), "init");
  }
  v17 = IndexPath.section.getter(result);
  result = IndexPath.row.getter(v17);
  if ((v17 & 0x8000000000000000) != 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v18 = *(_QWORD *)(v1 + v15);
  if (v17 >= *(_QWORD *)(v18 + 16))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v19 = *(_QWORD *)(v18 + 8 * v17 + 32);
  if (result >= *(_QWORD *)(v19 + 16))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v20 = sub_10004FC74(v19+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * result, (uint64_t)v6, type metadata accessor for FMDeviceCellViewModel);
  result = IndexPath.section.getter(v20);
  if ((result & 0x8000000000000000) == 0)
  {
    v21 = *(_QWORD *)(v1 + v15);
    if (result < *(_QWORD *)(v21 + 16))
    {
      v22 = *(_QWORD *)(*(_QWORD *)(v21 + 8 * result + 32) + 16);
      v23 = IndexPath.row.getter(result) == v22 - 1;
      *((_BYTE *)v12 + qword_1005DA298) = v23;
      v24 = *(void **)((char *)v12 + qword_1005DA280);
      objc_msgSend(v24, "setHidden:");
      v25 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
      v26 = UIRoundToScreenScale(0.3);

      v27 = objc_msgSend(v12, "containerView");
      objc_msgSend(v27, "bounds");
      v29 = v28;

      v30 = sub_100462EB0();
      objc_msgSend(v24, "setFrame:", v30, v29 - v26, sub_100462EBC(), v26);
      (*(void (**)(char *))((swift_isaMask & *v12) + 0x158))(v6);
      sub_10004FCB8((uint64_t)v6, type metadata accessor for FMDeviceCellViewModel);
      return (unint64_t)v12;
    }
    goto LABEL_20;
  }
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

void sub_10039D9E8(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_mediator) + 40)
                + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
  v4 = v3;
  sub_10039E3BC(a2, v3, 0);

}

uint64_t sub_10039DA54(uint64_t a1, void *a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  id v22;
  id v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  __n128 v30;
  os_log_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  id v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  _QWORD *v47;
  os_log_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t aBlock[5];
  uint64_t v60;

  v4 = v3;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v57 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v56 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v54 = *(_QWORD *)(v10 - 8);
  v55 = v10;
  __chkstk_darwin(v10);
  v53 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FMIPDevice(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v16 = type metadata accessor for Logger(0);
  sub_100056D88(v16, (uint64_t)qword_1005F5748);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a3, v12);
  v17 = a2;
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  v20 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    v21 = swift_slowAlloc(22, -1);
    v47 = (_QWORD *)swift_slowAlloc(8, -1);
    v51 = swift_slowAlloc(32, -1);
    v58 = (uint64_t)v17;
    aBlock[0] = v51;
    *(_DWORD *)v21 = 138412546;
    v50 = v20;
    v49 = v12;
    v52 = v8;
    v22 = v17;
    v48 = v18;
    v23 = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, aBlock);
    v24 = v47;
    *v47 = v17;

    *(_WORD *)(v21 + 12) = 2080;
    v27 = FMIPDevice.debugDescription.getter(v25, v26);
    v29 = v28;
    v58 = sub_100056DA0(v27, v28, aBlock);
    v8 = v52;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v58, aBlock);
    v30 = swift_bridgeObjectRelease(v29);
    (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v49, v30);
    v31 = v48;
    _os_log_impl((void *)&_mh_execute_header, v48, (os_log_type_t)v50, "FMMultipartEntityListDataSource: didUpdate image %@ device %s", (uint8_t *)v21, 0x16u);
    v32 = sub_100053F2C((uint64_t *)&unk_1005D9680);
    swift_arrayDestroy(v24, 1, v32);
    swift_slowDealloc(v24, -1, -1);
    v33 = v51;
    swift_arrayDestroy(v51, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1, -1);
    swift_slowDealloc(v21, -1, -1);

  }
  else
  {

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  v34 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v35 = (void *)static OS_dispatch_queue.main.getter(v34);
  v36 = swift_allocObject(&unk_10055FCF0, 32, 7);
  *(_QWORD *)(v36 + 16) = v4;
  *(_QWORD *)(v36 + 24) = a1;
  aBlock[4] = (uint64_t)sub_1003A3FBC;
  v60 = v36;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100037DF8;
  aBlock[3] = (uint64_t)&unk_10055FD08;
  v37 = _Block_copy(aBlock);
  v38 = v60;
  v39 = v4;
  swift_retain(a1);
  swift_release(v38);
  v40 = v53;
  static DispatchQoS.unspecified.getter(v41);
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  v42 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v43 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v44 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  v45 = v56;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v43, v44, v8, v42);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v40, v45, v37);
  _Block_release(v37);

  (*(void (**)(char *, uint64_t))(v57 + 8))(v45, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v40, v55);
}

uint64_t sub_10039DEE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  char *v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD aBlock[5];
  uint64_t v36;

  v33 = type metadata accessor for DispatchWallTime(0);
  v31 = *(_QWORD *)(v33 - 8);
  v4 = __chkstk_darwin(v33);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v32 = (char *)&v31 - v7;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_delayedUpdateWorkItem;
  v12 = *(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_delayedUpdateWorkItem);
  if (v12)
  {
    v13 = swift_retain(*(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_delayedUpdateWorkItem));
    dispatch thunk of DispatchWorkItem.cancel()(v13);
    swift_release(v12);
  }
  v14 = swift_allocObject(&unk_10055FD40, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16);
  v15 = swift_allocObject(&unk_10055FD68, 32, 7);
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = a2;
  aBlock[4] = sub_1003A4014;
  v36 = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_10055FD80;
  v16 = _Block_copy(aBlock);
  v34 = _swiftEmptyArrayStorage;
  v17 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  swift_retain(v14);
  swift_retain(a2);
  v18 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v19 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v34, v18, v19, v8, v17);
  v20 = type metadata accessor for DispatchWorkItem(0);
  swift_allocObject(v20, *(unsigned int *)(v20 + 48), *(unsigned __int16 *)(v20 + 52));
  v21 = DispatchWorkItem.init(flags:block:)(v10, v16);
  v22 = v36;
  swift_release(v14);
  swift_release(v22);
  v23 = *(_QWORD *)(a1 + v11);
  *(_QWORD *)(a1 + v11) = v21;
  swift_retain(v21);
  swift_release(v23);
  v24 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v25 = (void *)static OS_dispatch_queue.main.getter(v24);
  static DispatchWallTime.now()();
  v26 = v32;
  + infix(_:_:)(v6, 0.5);
  v27 = *(void (**)(char *, uint64_t))(v31 + 8);
  v28 = v6;
  v29 = v33;
  v27(v28, v33);
  OS_dispatch_queue.asyncAfter(wallDeadline:execute:)(v26, v21);
  swift_release(v21);

  return ((uint64_t (*)(char *, uint64_t))v27)(v26, v29);
}

void sub_10039E1B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  uint64_t v11;
  _BYTE v12[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v12, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (void *)Strong;
    v4 = FMIPManager.devices.getter(Strong);
    swift_beginAccess(v1, &v11, 0, 0);
    v5 = swift_unknownObjectWeakLoadStrong(v1);
    if (v5)
    {
      v6 = (void *)v5;
      v7 = *(_QWORD *)(v5 + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_mediator);
      swift_retain(v7);

      v8 = (char *)*(id *)(v7 + 40);
      swift_release(v7);
      v9 = *(void **)&v8[OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation];
      v10 = v9;

    }
    else
    {
      v9 = 0;
    }
    sub_10039E3BC(v4, v9, 0);

    swift_bridgeObjectRelease(v4);
  }
}

void sub_10039E2A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;

  v3 = *(_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_mediator) + 24);
  v4 = swift_retain(v3);
  v5 = FMIPManager.devices.getter(v4);
  swift_release(v3);
  if (!((unint64_t)a2 >> 62))
  {
    v6 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a2);
    if (v6)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease(a2);
    v8 = 0;
    goto LABEL_12;
  }
  if (a2 < 0)
    v9 = a2;
  else
    v9 = a2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(a2);
  if (!_CocoaArrayWrapper.endIndex.getter(v9))
    goto LABEL_11;
LABEL_3:
  if ((a2 & 0xC000000000000001) != 0)
  {
    v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a2);
    goto LABEL_6;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v7 = *(id *)(a2 + 32);
LABEL_6:
    v10 = v7;
    swift_bridgeObjectRelease(a2);
    v8 = v10;
LABEL_12:
    v11 = v8;
    sub_10039E3BC(v5, v8, 0);
    swift_bridgeObjectRelease(v5);

    return;
  }
  __break(1u);
}

void sub_10039E3BC(uint64_t a1, void *a2, int a3)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(char *, char *, uint64_t);
  __n128 v34;
  char *v35;
  uint64_t (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  char v46;
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  void (*v65)(uint64_t, char *, uint64_t);
  char *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  void *v72;
  unint64_t v73;
  char v74;
  char v75;
  void (*v76)(uint64_t, uint64_t);
  id v77;
  char *v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  __n128 v89;
  id v90;
  char *v91;
  uint64_t v92;
  __n128 v93;
  void (*v94)(uint64_t, uint64_t, __n128);
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  int v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  char *v111;
  uint64_t v112;
  uint64_t (*v113)(char *, char *, uint64_t);
  char *v114;
  uint64_t v115;
  char *v116;
  _QWORD *v117;
  _QWORD aBlock[5];
  uint64_t v119;

  v110 = a2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v108 = *(_QWORD *)(v6 - 8);
  v109 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v13);
  v111 = (char *)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FMIPDevice(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v18 = __chkstk_darwin(v17);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v95 - v20;
  v22 = __chkstk_darwin(v19);
  v116 = (char *)&v95 - v23;
  __chkstk_darwin(v22);
  if (v3[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_updatesEnabled] == 1)
  {
    v98 = v27;
    v99 = v26;
    v101 = v25;
    v28 = *(_QWORD *)(a1 + 16);
    v29 = a1;
    v30 = v28;
    v106 = v3;
    v107 = (char *)&v95 - v24;
    v100 = a3;
    if (v28)
    {
      v102 = v12;
      v103 = v10;
      v104 = v9;
      v105 = v8;
      v31 = v28;
      v32 = v29 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
      v114 = &v3[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_selectedDevice];
      v115 = v16;
      v33 = *(uint64_t (**)(char *, char *, uint64_t))(v16 + 16);
      v112 = *(_QWORD *)(v16 + 72);
      v113 = v33;
      v97 = v29;
      v34 = swift_bridgeObjectRetain(v29);
      v96 = v31;
      v35 = v116;
      while (1)
      {
        v36 = v113;
        v37 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v113)(v35, v32, v15, v34);
        v38 = FMIPDevice.identifier.getter(v37);
        v40 = v39;
        v41 = v36(v21, v114, v15);
        v42 = FMIPDevice.identifier.getter(v41);
        v44 = v43;
        v45 = *(void (**)(char *, uint64_t))(v115 + 8);
        v45(v21, v15);
        if (v38 == v42 && v40 == v44)
          break;
        v46 = _stringCompareWithSmolCheck(_:_:expecting:)(v38, v40, v42, v44, 0);
        swift_bridgeObjectRelease(v44);
        v47 = swift_bridgeObjectRelease(v40);
        if ((v46 & 1) != 0)
          goto LABEL_12;
        v35 = v116;
        ((void (*)(char *, uint64_t, __n128))v45)(v116, v15, v47);
        v32 += v112;
        if (!--v31)
        {
          v48 = 1;
          v9 = v104;
          v8 = v105;
          v10 = v103;
          v12 = v102;
          v16 = v115;
          v49 = v97;
          v30 = v96;
          goto LABEL_10;
        }
      }
      swift_bridgeObjectRelease_n(v40, 2);
LABEL_12:
      v16 = v115;
      v50 = (uint64_t)v111;
      (*(void (**)(char *, char *, uint64_t, __n128))(v115 + 32))(v111, v116, v15, v47);
      v48 = 0;
      v9 = v104;
      v8 = v105;
      v10 = v103;
      v12 = v102;
      v49 = v97;
      v30 = v96;
    }
    else
    {
      v49 = v29;
      swift_bridgeObjectRetain(v29);
      v48 = 1;
LABEL_10:
      v50 = (uint64_t)v111;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v50, v48, 1, v15);
    v51 = swift_bridgeObjectRelease(v49);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v16 + 48))(v50, 1, v15, v51) == 1)
    {
      sub_1000051EC(v50, &qword_1005D6710);
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v52 = type metadata accessor for Logger(0);
      v53 = sub_100056D88(v52, (uint64_t)qword_1005F5748);
      v54 = Logger.logObject.getter(v53);
      v55 = static os_log_type_t.default.getter(v54);
      if (os_log_type_enabled(v54, v55))
      {
        v56 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v56 = 0;
        _os_log_impl((void *)&_mh_execute_header, v54, v55, "FMMultipartEntityListDataSource: Did not update selected device", v56, 2u);
        swift_slowDealloc(v56, -1, -1);
      }

    }
    else
    {
      v57 = v107;
      v116 = *(char **)(v16 + 32);
      ((void (*)(char *, uint64_t, uint64_t))v116)(v107, v50, v15);
      v58 = v106;
      if ((objc_msgSend(*(id *)&v106[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_tableView], "isEditing") & 1) != 0)
      {
        if (qword_1005D1DE8 != -1)
          swift_once(&qword_1005D1DE8, sub_100005ADC);
        v59 = type metadata accessor for Logger(0);
        v60 = sub_100056D88(v59, (uint64_t)qword_1005F5748);
        v61 = Logger.logObject.getter(v60);
        v62 = static os_log_type_t.default.getter(v61);
        if (os_log_type_enabled(v61, v62))
        {
          v63 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v63 = 0;
          _os_log_impl((void *)&_mh_execute_header, v61, v62, "FMMultipartEntityListDataSource: Ignoring data source update due to editing mode", v63, 2u);
          swift_slowDealloc(v63, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v16 + 8))(v107, v15);
      }
      else
      {
        v102 = v12;
        v103 = v10;
        v104 = v9;
        v105 = v8;
        v64 = *(_QWORD *)&v58[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_cellsViewModel];
        v65 = *(void (**)(uint64_t, char *, uint64_t))(v16 + 16);
        v66 = v99;
        v65((uint64_t)v99, v57, v15);
        v65(v101, v66, v15);
        v115 = v16;
        v67 = *(unsigned __int8 *)(v16 + 80);
        v68 = (v67 + 24) & ~v67;
        v69 = (v98 + v68 + 7) & 0xFFFFFFFFFFFFFFF8;
        v70 = (v69 + 15) & 0xFFFFFFFFFFFFFFF8;
        v71 = swift_allocObject(&unk_10055FC00, v70 + 9, v67 | 7);
        *(_QWORD *)(v71 + 16) = v58;
        ((void (*)(uint64_t, char *, uint64_t))v116)(v71 + v68, v66, v15);
        v72 = v110;
        *(_QWORD *)(v71 + v69) = v110;
        v73 = v71 + v70;
        *(_QWORD *)v73 = v64;
        v74 = v100;
        v75 = v100 & 1;
        *(_BYTE *)(v73 + 8) = v100 & 1;
        if (v30 < 0xB || (v74 & 1) != 0)
        {
          v90 = v72;
          v91 = v106;
          swift_bridgeObjectRetain_n(v64, 2);
          v92 = v101;
          sub_10039EC1C(v91, v101, v72, v64, v75);
          swift_bridgeObjectRelease(v64);
          v93 = swift_release(v71);
          v94 = *(void (**)(uint64_t, uint64_t, __n128))(v115 + 8);
          v94(v92, v15, v93);
          ((void (*)(char *, uint64_t))v94)(v107, v15);
        }
        else
        {
          v76 = *(void (**)(uint64_t, uint64_t))(v115 + 8);
          swift_bridgeObjectRetain(v64);
          v77 = v72;
          v78 = v106;
          v76(v101, v15);
          v116 = *(char **)&v78[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_updateQueue];
          v79 = swift_allocObject(&unk_10055FC28, 32, 7);
          *(_QWORD *)(v79 + 16) = sub_1003A3F00;
          *(_QWORD *)(v79 + 24) = v71;
          aBlock[4] = sub_100021E58;
          v119 = v79;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_100037DF8;
          aBlock[3] = &unk_10055FC40;
          v80 = _Block_copy(aBlock);
          v81 = swift_retain(v71);
          v82 = v102;
          static DispatchQoS.unspecified.getter(v81);
          v117 = _swiftEmptyArrayStorage;
          v83 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
          v84 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
          v85 = v109;
          v86 = v84;
          v87 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
          v88 = v105;
          dispatch thunk of SetAlgebra.init<A>(_:)(&v117, v86, v87, v85, v83);
          OS_dispatch_queue.async(group:qos:flags:execute:)(0, v82, v88, v80);
          _Block_release(v80);
          v89 = swift_release(v71);
          (*(void (**)(char *, uint64_t, __n128))(v108 + 8))(v88, v85, v89);
          (*(void (**)(char *, uint64_t))(v103 + 8))(v82, v104);
          v76((uint64_t)v107, v15);
          swift_release(v119);
        }
      }
    }
  }
}

void sub_10039EC1C(char *a1, uint64_t a2, void *a3, uint64_t a4, char a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  char *v30;
  id v31;
  unsigned int v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void **aBlock;
  _QWORD v47[4];
  uint64_t v48;

  v10 = type metadata accessor for DispatchWorkItemFlags(0);
  v45 = *(_QWORD *)(v10 - 8);
  __chkstk_darwin(v10);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DispatchQoS(0);
  v43 = *(_QWORD *)(v13 - 8);
  v44 = v13;
  __chkstk_darwin(v13);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10039F2E8(a2, a3);
  v17 = v16;
  v18 = *(_QWORD *)&a1[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_itemAger];
  swift_retain(v18);
  swift_bridgeObjectRetain(v17);
  sub_1002DC948(v19);
  v21 = v20;
  swift_bridgeObjectRelease(v17);
  v22 = sub_1004624A0(v21);
  swift_release(v21);
  sub_100054D40((uint64_t)v22);
  swift_release(v18);
  swift_bridgeObjectRelease(v22);
  if ((sub_1001F4FB4(v17, a4) & 1) == 0 || (a5 & 1) != 0)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v23 = type metadata accessor for Logger(0);
    sub_100056D88(v23, (uint64_t)qword_1005F5748);
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(a4);
    v25 = Logger.logObject.getter(v24);
    v26 = static os_log_type_t.default.getter(v25);
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc(22, -1);
      *(_DWORD *)v27 = 134218240;
      aBlock = *(void ***)(v17 + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v47);
      swift_bridgeObjectRelease(v17);
      *(_WORD *)(v27 + 12) = 2048;
      aBlock = *(void ***)(a4 + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v47);
      swift_bridgeObjectRelease(a4);
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "FMMultipartEntityListDataSource: reloading table view new: %ld, old: %ld", (uint8_t *)v27, 0x16u);
      swift_slowDealloc(v27, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease(a4);
      swift_bridgeObjectRelease(v17);
    }
    v28 = swift_allocObject(&unk_10055FC78, 32, 7);
    *(_QWORD *)(v28 + 16) = v17;
    *(_QWORD *)(v28 + 24) = a1;
    v29 = (void *)objc_opt_self(NSThread);
    swift_bridgeObjectRetain(v17);
    v30 = a1;
    v31 = objc_msgSend(v29, "currentThread");
    v32 = objc_msgSend(v31, "isMainThread");

    if (v32)
    {
      sub_10039F0B8(v17, (uint64_t)v30);
      swift_bridgeObjectRelease(v17);
      swift_release(v28);
    }
    else
    {
      swift_bridgeObjectRelease(v17);
      v33 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
      v34 = (void *)static OS_dispatch_queue.main.getter(v33);
      v35 = swift_allocObject(&unk_10055FCA0, 32, 7);
      *(_QWORD *)(v35 + 16) = sub_1003A3FA8;
      *(_QWORD *)(v35 + 24) = v28;
      v47[3] = sub_10003FFE0;
      v48 = v35;
      aBlock = _NSConcreteStackBlock;
      v47[0] = 1107296256;
      v47[1] = sub_100037DF8;
      v47[2] = &unk_10055FCB8;
      v36 = _Block_copy(&aBlock);
      v37 = v48;
      swift_retain(v28);
      swift_release(v37);
      static DispatchQoS.unspecified.getter(v38);
      aBlock = (void **)_swiftEmptyArrayStorage;
      v39 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v40 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
      v41 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v40, v41, v10, v39);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v15, v12, v36);
      _Block_release(v36);
      swift_release(v28);

      (*(void (**)(char *, uint64_t))(v45 + 8))(v12, v10);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v15, v44);
    }
  }
  else
  {
    swift_bridgeObjectRelease(v17);
  }
}

double sub_10039F0B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t Strong;
  double result;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  uint64_t v21;
  uint64_t v22;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v4 = type metadata accessor for Logger(0);
  sub_100056D88(v4, (uint64_t)qword_1005F5748);
  v5 = swift_bridgeObjectRetain_n(a1, 2);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = swift_slowAlloc(32, -1);
    v22 = v9;
    *(_DWORD *)v8 = 136315138;
    v10 = sub_100053F2C(&qword_1005D2B80);
    v11 = Array.debugDescription.getter(a1, v10);
    v13 = v12;
    v21 = sub_100056DA0(v11, v12, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22);
    swift_bridgeObjectRelease_n(a1, 2);
    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMMultipartEntityListDataSource: model update with %s", v8, 0xCu);
    swift_arrayDestroy(v9, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a1, 2);
  }
  v14 = *(_QWORD *)(a2 + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_cellsViewModel);
  *(_QWORD *)(a2 + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_cellsViewModel) = a1;
  swift_bridgeObjectRetain(a1);
  swift_bridgeObjectRelease(v14);
  sub_100035CEC();
  v15 = a2 + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(a2 + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_delegate);
  if (Strong)
  {
    v18 = Strong;
    v19 = *(_QWORD *)(v15 + 8);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v19 + 8))(a2, &off_10055F9D0, ObjectType, v19);
    *(_QWORD *)&result = swift_unknownObjectRelease(v18).n128_u64[0];
  }
  return result;
}

void sub_10039F2E8(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  int64_t v43;
  unint64_t v44;
  int64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __n128 v69;
  uint64_t v70;
  uint64_t v71;
  __n128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(char *, unint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  id v84;
  id v85;
  _QWORD *v86;
  _BOOL4 v87;
  _QWORD *v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t *v94;
  void (*v95)(_QWORD *);
  unint64_t *v96;
  id v97;
  unint64_t v98;
  char v99;
  unint64_t v100;
  unint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  unint64_t i;
  unint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  _QWORD *v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  _QWORD *v118;
  id v119;
  id v120;
  uint64_t v121;
  _QWORD *v122;
  _QWORD *v123;
  char v125;
  _QWORD *v126;
  unint64_t v127;
  unint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v132;
  unsigned int v133;
  unsigned int v134;
  uint64_t v135;
  _QWORD *v136;
  char *v137;
  char *v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t (*v143)(char *, unint64_t, uint64_t);
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  _QWORD *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  id v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  int64_t v157;
  uint64_t v158;
  uint64_t v159;
  id v160;
  _BOOL4 v161;
  id v162;
  uint64_t v163;
  _QWORD *v164;
  char *v165;
  char *v166;
  uint64_t v167;
  _QWORD *v168;
  _QWORD *v169;
  _QWORD *v170;

  v153 = a2;
  v151 = type metadata accessor for FMIPDevice(0);
  v150 = *(_QWORD *)(v151 - 8);
  __chkstk_darwin(v151);
  v149 = (char *)&v131 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FMDeviceCellViewModel(0);
  v132 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v155 = (uint64_t)&v131 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v8 = (uint64_t *)((char *)&v131 - v7);
  v9 = sub_100053F2C((uint64_t *)&unk_1005E2270);
  __chkstk_darwin(v9);
  v147 = (uint64_t)&v131 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100053F2C((uint64_t *)&unk_1005D6700);
  __chkstk_darwin(v11);
  v146 = (char *)&v131 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v145 = type metadata accessor for FMIPSafeLocationType(0);
  v144 = *(_QWORD *)(v145 - 8);
  __chkstk_darwin(v145);
  v143 = (uint64_t (*)(char *, unint64_t, uint64_t))((char *)&v131 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v142 = type metadata accessor for FMIPDeviceImageSize(0);
  v141 = *(_QWORD *)(v142 - 8);
  __chkstk_darwin(v142);
  v140 = (char *)&v131 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FMIPItem(0);
  v16 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v166 = (char *)&v131 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  v19 = __chkstk_darwin(v18);
  v139 = (char *)&v131 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v19);
  v23 = (char *)&v131 - v22;
  __chkstk_darwin(v21);
  v25 = (char *)&v131 - v24;
  v26 = sub_100053F2C(&qword_1005D72D0);
  v27 = __chkstk_darwin(v26);
  v29 = (char *)&v131 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = _swiftEmptyArrayStorage;
  v169 = &_swiftEmptyDictionarySingleton;
  v152 = a1;
  FMIPDevice.itemGroup.getter(v27);
  v167 = 0;
  v30 = type metadata accessor for FMIPItemGroup(0);
  v31 = *(_QWORD *)(v30 - 8);
  v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30);
  if ((_DWORD)v32 == 1)
  {
    sub_1000051EC((uint64_t)v29, &qword_1005D72D0);
    v33 = &_swiftEmptySetSingleton;
  }
  else
  {
    v33 = (_QWORD *)FMIPItemGroup.groupedItems.getter(v32);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v29, v30);
  }
  v34 = 0;
  v35 = v33[7];
  v156 = (char *)(v33 + 7);
  v36 = 1 << *((_BYTE *)v33 + 32);
  v37 = -1;
  if (v36 < 64)
    v37 = ~(-1 << v36);
  v135 = OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_mediator;
  v157 = (unint64_t)(v36 + 63) >> 6;
  v134 = enum case for FMIPDeviceImageSize.list(_:);
  v133 = enum case for FMIPSafeLocationType.home(_:);
  v148 = v8;
  v38 = v37 & v35;
  v158 = v16;
  v159 = v15;
  v39 = v166;
  v138 = v23;
  v137 = v25;
  v136 = v33;
  while (1)
  {
    if (v38)
    {
      v41 = __clz(__rbit64(v38));
      v38 &= v38 - 1;
      v42 = v41 | (v34 << 6);
      goto LABEL_25;
    }
    v43 = v34 + 1;
    if (__OFADD__(v34, 1))
    {
      __break(1u);
LABEL_75:
      __break(1u);
      goto LABEL_76;
    }
    if (v43 >= v157)
      goto LABEL_38;
    v44 = *(_QWORD *)&v156[8 * v43];
    ++v34;
    if (!v44)
    {
      v34 = v43 + 1;
      if (v43 + 1 >= v157)
        goto LABEL_38;
      v44 = *(_QWORD *)&v156[8 * v34];
      if (!v44)
      {
        v34 = v43 + 2;
        if (v43 + 2 >= v157)
          goto LABEL_38;
        v44 = *(_QWORD *)&v156[8 * v34];
        if (!v44)
          break;
      }
    }
LABEL_24:
    v38 = (v44 - 1) & v44;
    v42 = __clz(__rbit64(v44)) + (v34 << 6);
LABEL_25:
    v46 = *(char **)(v33[6] + 8 * v42);
    swift_bridgeObjectRetain(v46);
    static FMIPItemGroup.primaryPart(group:)(v47);
    sub_1000E5B2C((uint64_t)v25, (uint64_t)v23);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v23, 1, v15) == 1)
    {
      sub_1000051EC((uint64_t)v25, (uint64_t *)&unk_1005D3AA0);
      swift_bridgeObjectRelease(v46);
      v40 = (uint64_t)v23;
      goto LABEL_8;
    }
    v165 = (char *)v34;
    v48 = (*(uint64_t (**)(char *, char *, uint64_t))(v16 + 32))(v39, v23, v15);
    v49 = FMIPItem.owner.getter(v48);
    v51 = v50;
    v52 = v169[2];
    v164 = (_QWORD *)v38;
    if (!v52)
    {
      swift_bridgeObjectRelease(v50);
LABEL_30:
      v57 = FMIPItem.owner.getter(v55);
      v59 = v58;
      v60 = v169;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v169);
      v168 = v60;
      v169 = (_QWORD *)0x8000000000000000;
      sub_100179308((uint64_t)_swiftEmptyArrayStorage, v57, v59, isUniquelyReferenced_nonNull_native);
      v62 = v169;
      v169 = v168;
      swift_bridgeObjectRelease(v59);
      v56 = swift_bridgeObjectRelease(v62);
      goto LABEL_31;
    }
    sub_10004C348(v49, v50);
    v54 = v53;
    v56 = swift_bridgeObjectRelease(v51);
    if ((v54 & 1) == 0)
      goto LABEL_30;
LABEL_31:
    v63 = *(_QWORD *)(v154 + v135);
    v64 = *(_QWORD *)(*(_QWORD *)(v63 + 24) + 24);
    v65 = v141;
    v66 = (uint64_t)v140;
    v67 = v142;
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v141 + 104))(v140, v134, v142, v56);
    swift_retain(v64);
    v68 = v152;
    v162 = (id)sub_100182A4C(v46, v152, v66, 0, 0);
    v69 = swift_release(v64);
    (*(void (**)(uint64_t, uint64_t, __n128))(v65 + 8))(v66, v67, v69);
    v70 = *(_QWORD *)(v63 + 24);
    v71 = swift_retain(v70);
    v163 = FMIPManager.familyMembers.getter(v71);
    v72 = swift_release(v70);
    v73 = *(_QWORD *)(v63 + 24);
    v74 = v144;
    v75 = v143;
    v76 = v145;
    (*(void (**)(uint64_t (*)(char *, unint64_t, uint64_t), _QWORD, uint64_t, __n128))(v144 + 104))(v143, v133, v145, v72);
    swift_retain(v73);
    v77 = (uint64_t)v146;
    FMIPItem.location.getter(v78);
    v79 = v147;
    sub_1000BD948(v75, v77, v147);
    v80 = type metadata accessor for FMIPSafeLocation(0);
    v161 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 48))(v79, 1, v80) != 1;
    sub_1000051EC(v79, (uint64_t *)&unk_1005E2270);
    swift_release(v73);
    sub_1000051EC(v77, (uint64_t *)&unk_1005D6700);
    (*(void (**)(uint64_t (*)(char *, unint64_t, uint64_t), uint64_t))(v74 + 8))(v75, v76);
    v81 = (uint64_t)v149;
    (*(void (**)(char *, uint64_t, uint64_t))(v150 + 16))(v149, v68, v151);
    v16 = v158;
    v15 = v159;
    v82 = (uint64_t)v139;
    (*(void (**)(char *, char *, uint64_t))(v158 + 16))(v139, v166, v159);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(v82, 0, 1, v15);
    LOBYTE(v79) = *(_BYTE *)(*(_QWORD *)(v63 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_limitedPrecision);
    v83 = v162;
    v160 = v162;
    v84 = v153;
    v85 = v153;
    swift_retain(v63);
    v86 = sub_1003EF2A4((uint64_t)v46);
    swift_bridgeObjectRelease(v46);
    v87 = (v79 & 1) == 0;
    v88 = v148;
    v89 = v84;
    v39 = v166;
    sub_1002AA084((NSString *)v63, v81, v82, v83, v89, v87, v163, v161, v148, (uint64_t)v86, 1);
    v91 = FMIPItem.owner.getter(v90);
    v93 = v92;
    v95 = sub_1003FEC6C(&v168, v91, v92);
    if (*v94)
    {
      v96 = v94;
      v97 = v160;
      sub_10004FC74((uint64_t)v88, v155, type metadata accessor for FMDeviceCellViewModel);
      v98 = *v96;
      v99 = swift_isUniquelyReferenced_nonNull_native(*v96);
      *v96 = v98;
      v38 = (unint64_t)v164;
      if ((v99 & 1) == 0)
      {
        v98 = sub_1000702FC(0, *(_QWORD *)(v98 + 16) + 1, 1, v98);
        *v96 = v98;
      }
      v101 = *(_QWORD *)(v98 + 16);
      v100 = *(_QWORD *)(v98 + 24);
      if (v101 >= v100 >> 1)
      {
        v98 = sub_1000702FC(v100 > 1, v101 + 1, 1, v98);
        *v96 = v98;
      }
      v34 = (int64_t)v165;
      *(_QWORD *)(v98 + 16) = v101 + 1;
      sub_1002C08A8(v155, v98+ ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80))+ *(_QWORD *)(v132 + 72) * v101);
      ((void (*)(_QWORD **, _QWORD))v95)(&v168, 0);
      swift_bridgeObjectRelease(v93);

      sub_10004FCB8((uint64_t)v88, type metadata accessor for FMDeviceCellViewModel);
      v16 = v158;
      v15 = v159;
      (*(void (**)(char *, uint64_t))(v158 + 8))(v39, v159);
      v25 = v137;
      v40 = (uint64_t)v137;
      v23 = v138;
      v33 = v136;
    }
    else
    {
      ((void (*)(_QWORD **, _QWORD))v95)(&v168, 0);
      swift_bridgeObjectRelease(v93);

      sub_10004FCB8((uint64_t)v88, type metadata accessor for FMDeviceCellViewModel);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v39, v15);
      v25 = v137;
      v40 = (uint64_t)v137;
      v23 = v138;
      v33 = v136;
      v38 = (unint64_t)v164;
      v34 = (int64_t)v165;
    }
LABEL_8:
    sub_1000051EC(v40, (uint64_t *)&unk_1005D3AA0);
  }
  v45 = v43 + 3;
  if (v45 >= v157)
  {
LABEL_38:
    swift_release(v33);
    v102 = v169;
    v103 = v169[8];
    v165 = (char *)(v169 + 8);
    v104 = 1 << *((_BYTE *)v169 + 32);
    v105 = -1;
    if (v104 < 64)
      v105 = ~(-1 << v104);
    v106 = v105 & v103;
    v166 = (char *)((unint64_t)(v104 + 63) >> 6);
    swift_bridgeObjectRetain(v169);
    v107 = 0;
    v164 = _swiftEmptyArrayStorage;
    if (!v106)
      goto LABEL_44;
LABEL_41:
    v108 = __clz(__rbit64(v106));
    v106 &= v106 - 1;
    for (i = v108 | (v107 << 6); ; i = __clz(__rbit64(v111)) + (v107 << 6))
    {
      v113 = (uint64_t *)(v102[6] + 16 * i);
      v115 = *v113;
      v114 = (_QWORD *)v113[1];
      v116 = *(_QWORD **)(v102[7] + 8 * i);
      v168 = v116;
      swift_bridgeObjectRetain_n(v116, 2);
      swift_bridgeObjectRetain(v114);
      v117 = v167;
      sub_1003A0C0C(&v168);
      v167 = v117;
      if (v117)
        goto LABEL_78;
      swift_bridgeObjectRelease(v116);
      v118 = v168;
      v119 = objc_msgSend((id)objc_opt_self(SPBeacon), "SPOwner");
      v120 = objc_msgSend(v119, "destination");

      v121 = static String._unconditionallyBridgeFromObjectiveC(_:)(v120);
      v123 = v122;

      if (v115 == v121 && v114 == v123)
        break;
      v125 = _stringCompareWithSmolCheck(_:_:expecting:)(v115, v114, v121, v123, 0);
      swift_bridgeObjectRelease(v123);
      swift_bridgeObjectRelease(v114);
      if ((v125 & 1) != 0)
      {
        v114 = v164;
LABEL_43:
        swift_bridgeObjectRelease(v114);
        v164 = v118;
        if (v106)
          goto LABEL_41;
        goto LABEL_44;
      }
      v126 = v170;
      if ((swift_isUniquelyReferenced_nonNull_native(v170) & 1) == 0)
        v126 = sub_1000702E8(0, v126[2] + 1, 1, v126);
      v128 = v126[2];
      v127 = v126[3];
      if (v128 >= v127 >> 1)
        v126 = sub_1000702E8((_QWORD *)(v127 > 1), v128 + 1, 1, v126);
      v126[2] = v128 + 1;
      v126[v128 + 4] = v118;
      v170 = v126;
      if (v106)
        goto LABEL_41;
LABEL_44:
      if (__OFADD__(v107++, 1))
        goto LABEL_75;
      if (v107 >= (uint64_t)v166)
      {
LABEL_72:
        v129 = v167;
        swift_release(v102);
        v130 = v170;
        v168 = v170;
        swift_bridgeObjectRetain_n(v170, 2);
        sub_1002BC6EC(&v168);
        if (v129)
          goto LABEL_78;
        swift_bridgeObjectRelease_n(v130, 2);
        v170 = v168;
        sub_1001FFF7C(0, 0, (uint64_t)v164);
        swift_bridgeObjectRelease(v169);
        return;
      }
      v111 = *(_QWORD *)&v165[8 * v107];
      if (!v111)
      {
        v112 = v107 + 1;
        if (v107 + 1 >= (uint64_t)v166)
          goto LABEL_72;
        v111 = *(_QWORD *)&v165[8 * v112];
        if (!v111)
        {
          v112 = v107 + 2;
          if (v107 + 2 >= (uint64_t)v166)
            goto LABEL_72;
          v111 = *(_QWORD *)&v165[8 * v112];
          if (!v111)
          {
            v112 = v107 + 3;
            if (v107 + 3 >= (uint64_t)v166)
              goto LABEL_72;
            v111 = *(_QWORD *)&v165[8 * v112];
            if (!v111)
            {
              while (1)
              {
                v107 = v112 + 1;
                if (__OFADD__(v112, 1))
                  goto LABEL_77;
                if (v107 >= (uint64_t)v166)
                  goto LABEL_72;
                v111 = *(_QWORD *)&v165[8 * v107];
                ++v112;
                if (v111)
                  goto LABEL_54;
              }
            }
          }
        }
        v107 = v112;
      }
LABEL_54:
      v106 = (v111 - 1) & v111;
    }
    swift_bridgeObjectRelease(v164);
    swift_bridgeObjectRelease(v114);
    goto LABEL_43;
  }
  v44 = *(_QWORD *)&v156[8 * v45];
  if (v44)
  {
    v34 = v45;
    goto LABEL_24;
  }
  while (1)
  {
    v34 = v45 + 1;
    if (__OFADD__(v45, 1))
      break;
    if (v34 >= v157)
      goto LABEL_38;
    v44 = *(_QWORD *)&v156[8 * v34];
    ++v45;
    if (v44)
      goto LABEL_24;
  }
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  swift_release(v168);
  __break(1u);
}

BOOL sub_1003A0050(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  BOOL v26;
  int *v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  double v33;
  double v34;
  uint64_t *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  Swift::String v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  Swift::String v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  char *v59;
  char *v60;
  uint64_t v61;
  char v62;
  char *v63;
  void (*v64)(char *, uint64_t);
  void (*v65)(char *, uint64_t);
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  int v69;
  char *v70;
  void (*v71)(char *, uint64_t);
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  _QWORD v77[2];
  uint64_t v78;
  uint64_t v79;

  v73 = type metadata accessor for FMIPItemState(0);
  v71 = *(void (**)(char *, uint64_t))(v73 - 8);
  v4 = __chkstk_darwin(v73);
  v72 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v7 = (char *)&v67 - v6;
  v8 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v67 - v12;
  v14 = type metadata accessor for FMIPItem(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = __chkstk_darwin(v14);
  v74 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __chkstk_darwin(v16);
  v75 = (char *)&v67 - v19;
  __chkstk_darwin(v18);
  v21 = (char *)&v67 - v20;
  v22 = type metadata accessor for FMDeviceCellViewModel(0);
  v23 = *(int *)(v22 + 60);
  v24 = *(double *)(a1 + v23);
  v25 = *(double *)(a2 + v23);
  v26 = v24 < v25;
  if (v24 != v25)
    return v26;
  v27 = (int *)v22;
  v76 = a2;
  sub_1000E5B2C(a1 + *(int *)(v22 + 24), (uint64_t)v13);
  v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v28(v13, 1, v14) == 1)
  {
    v29 = (uint64_t)v13;
LABEL_6:
    sub_1000051EC(v29, (uint64_t *)&unk_1005D3AA0);
    v31 = v76;
    goto LABEL_7;
  }
  v70 = v7;
  v30 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v30(v21, v13, v14);
  sub_1000E5B2C(v76 + v27[6], (uint64_t)v11);
  if (v28(v11, 1, v14) == 1)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v21, v14);
    v29 = (uint64_t)v11;
    goto LABEL_6;
  }
  v52 = ((uint64_t (*)(char *, char *, uint64_t))v30)(v75, v11, v14);
  v53 = v70;
  v54 = FMIPItem.state.getter(v52);
  v55 = v72;
  static FMIPItemState.isBTConnected.getter(v54);
  v56 = sub_100008000((unint64_t *)&qword_1005E2280, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItemState, (uint64_t)&protocol conformance descriptor for FMIPItemState);
  v57 = v73;
  v68 = v56;
  v69 = dispatch thunk of SetAlgebra.isSuperset(of:)(v55, v73, v56);
  v58 = (void (*)(char *, uint64_t))*((_QWORD *)v71 + 1);
  v58(v55, v57);
  v71 = v58;
  v58(v53, v57);
  v59 = v74;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v74, v75, v14);
  v60 = v59;
  v31 = v76;
  if ((v69 & 1) != 0)
  {
    v61 = FMIPItem.state.getter(v60);
    static FMIPItemState.isBTConnected.getter(v61);
    v62 = dispatch thunk of SetAlgebra.isSuperset(of:)(v55, v57, v68);
    v63 = v55;
    v64 = v71;
    v71(v63, v57);
    v64(v70, v57);
    v65 = *(void (**)(char *, uint64_t))(v15 + 8);
    v65(v74, v14);
    v65(v75, v14);
    v65(v21, v14);
    if ((v62 & 1) != 0)
      goto LABEL_8;
  }
  else
  {
    v66 = *(void (**)(char *, uint64_t))(v15 + 8);
    v66(v60, v14);
    v66(v75, v14);
    v66(v21, v14);
  }
LABEL_7:
  v32 = v27[14];
  v33 = *(double *)(a1 + v32);
  v34 = *(double *)(v31 + v32);
  v26 = v33 < v34;
  if (v33 == v34)
  {
LABEL_8:
    v35 = (uint64_t *)(a1 + v27[17]);
    v36 = v35[1];
    v38 = *(_QWORD *)(a1 + 16);
    v37 = *(void **)(a1 + 24);
    v78 = *v35;
    v79 = v36;
    swift_bridgeObjectRetain(v36);
    v39._countAndFlagsBits = v38;
    v39._object = v37;
    String.append(_:)(v39);
    v41 = v78;
    v40 = v79;
    v42 = (uint64_t *)(v31 + v27[17]);
    v43 = v42[1];
    v44 = *(_QWORD *)(v31 + 16);
    v45 = *(void **)(v31 + 24);
    v78 = *v42;
    v79 = v43;
    swift_bridgeObjectRetain(v43);
    v46._countAndFlagsBits = v44;
    v46._object = v45;
    String.append(_:)(v46);
    v47 = v78;
    v48 = v79;
    v78 = v41;
    v79 = v40;
    v77[0] = v47;
    v77[1] = v48;
    v49 = sub_1000517B8();
    v50 = StringProtocol.caseInsensitiveCompare<A>(_:)(v77, &type metadata for String, &type metadata for String, v49, v49);
    swift_bridgeObjectRelease(v40);
    swift_bridgeObjectRelease(v48);
    return v50 == -1;
  }
  return v26;
}

uint64_t sub_1003A0494(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[3];

  v3 = type metadata accessor for FMSelectedSection(0);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v38 - v7;
  v9 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v38 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)&v38 - v16;
  v41 = v1;
  sub_10039D038(a1, (uint64_t)&v38 - v16);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v18 = type metadata accessor for Logger(0);
  sub_100056D88(v18, (uint64_t)qword_1005F5748);
  v19 = sub_1000E5B2C((uint64_t)v17, (uint64_t)v15);
  v20 = Logger.logObject.getter(v19);
  v21 = static os_log_type_t.default.getter(v20);
  if (os_log_type_enabled(v20, v21))
  {
    v40 = v6;
    v22 = (uint8_t *)swift_slowAlloc(12, -1);
    v23 = swift_slowAlloc(32, -1);
    v38 = v17;
    v24 = v23;
    v44[0] = v23;
    v39 = v3;
    *(_DWORD *)v22 = 136315138;
    sub_1000E5B2C((uint64_t)v15, (uint64_t)v12);
    v25 = String.init<A>(describing:)(v12, v9);
    v27 = v26;
    v42 = sub_100056DA0(v25, v26, v44);
    v3 = v39;
    v6 = v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v42, &v43);
    swift_bridgeObjectRelease(v27);
    sub_1000051EC((uint64_t)v15, (uint64_t *)&unk_1005D3AA0);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "FMMultipartEntityListDataSource: select at indexPath, selectedPart?: %s", v22, 0xCu);
    swift_arrayDestroy(v24, 1, (char *)&type metadata for Any + 8);
    v28 = v24;
    v17 = v38;
    swift_slowDealloc(v28, -1, -1);
    swift_slowDealloc(v22, -1, -1);
  }
  else
  {
    sub_1000051EC((uint64_t)v15, (uint64_t *)&unk_1005D3AA0);
  }

  v29 = v41;
  v30 = *(_QWORD *)(v41 + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_mediator);
  v31 = *(_QWORD *)(v30 + 56);
  v32 = (uint64_t)&v8[*(int *)(sub_100053F2C(&qword_1005DE9B0) + 48)];
  v33 = v29 + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_selectedDevice;
  v34 = type metadata accessor for FMIPDevice(0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v8, v33, v34);
  sub_1000E5B2C((uint64_t)v17, v32);
  swift_storeEnumTagMultiPayload(v8, v3, 0);
  v35 = v31 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v31 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, v44, 0, 0);
  sub_10004FC74(v35, (uint64_t)v6, type metadata accessor for FMSelectedSection);
  swift_beginAccess(v35, &v42, 33, 0);
  swift_retain(v31);
  sub_100009DF8((uint64_t)v8, v35);
  swift_endAccess(&v42);
  sub_10004C8A4((uint64_t)v6);
  sub_10004FCB8((uint64_t)v8, type metadata accessor for FMSelectedSection);
  sub_10004FCB8((uint64_t)v6, type metadata accessor for FMSelectedSection);
  swift_release(v31);
  v36 = *(_QWORD *)(v30 + 24);
  swift_retain(v36);
  FMIPManager.updateLastActiveTimestamp()();
  swift_release(v36);
  return sub_1000051EC((uint64_t)v17, (uint64_t *)&unk_1005D3AA0);
}

id sub_1003A0894()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMMultipartEntityListDataSource(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1003A09AC()
{
  return type metadata accessor for FMMultipartEntityListDataSource(0);
}

uint64_t type metadata accessor for FMMultipartEntityListDataSource(uint64_t a1)
{
  uint64_t result;

  result = qword_1005E2370;
  if (!qword_1005E2370)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMMultipartEntityListDataSource);
  return result;
}

uint64_t sub_1003A09F0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[12];

  v4[0] = &unk_10048E940;
  result = type metadata accessor for FMIPDevice(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[4] = &unk_10048E958;
    v4[5] = &unk_10048E958;
    v4[6] = (char *)&value witness table for Builtin.BridgeObject + 64;
    v4[7] = (char *)&value witness table for Builtin.NativeObject + 64;
    v4[8] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[9] = &unk_10048E958;
    v4[10] = &unk_10048E970;
    v4[11] = &unk_10048E988;
    result = swift_updateClassMetadata2(a1, 256, 12, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1003A0AB8(uint64_t a1, uint64_t a2)
{
  return sub_1003A2CC0(a2);
}

void sub_1003A0AC0(uint64_t a1, uint64_t a2)
{
  sub_1003A2FCC(a2);
}

uint64_t sub_1003A0ACC(uint64_t a1, uint64_t a2)
{
  return sub_1003A3AA4(a2);
}

void sub_1003A0AD4(uint64_t a1, uint64_t a2)
{
  sub_1003A31CC(a2);
}

uint64_t sub_1003A0ADC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource__listTitle);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource__listTitle + 8));
  return v1;
}

void sub_1003A0B14(char a1)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_updatesEnabled);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_updatesEnabled) = a1;
  sub_10039CA38(v2);
}

uint64_t sub_1003A0B2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_mediator) + 24);
  v2 = swift_retain(v1);
  v3 = FMIPManager.isInitialized.getter(v2);
  swift_release(v1);
  return v3 & 1;
}

uint64_t sub_1003A0B74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_delegate + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease(a1);
}

uint64_t sub_1003A0BAC(uint64_t a1, void *a2)
{
  id v4;
  uint64_t v5;

  v4 = objc_allocWithZone((Class)type metadata accessor for FMMultipartEntityListDataSource(0));
  v5 = sub_1003A33D4(a1, a2);
  swift_release(a1);

  return v5;
}

void sub_1003A0C0C(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *(_QWORD *)(type metadata accessor for FMDeviceCellViewModel(0) - 8);
  v3 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v3 = (_QWORD *)sub_10020CF10(v3);
  v4 = v3[2];
  v5[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1003A0C8C(v5);
  *a1 = v3;
}

void sub_1003A0C8C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  Swift::Int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int *v70;
  uint64_t v71;
  double v72;
  double v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int (*v76)(uint64_t, uint64_t, uint64_t);
  uint64_t v77;
  _BOOL4 v78;
  void (*v79)(char *, uint64_t, uint64_t);
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  void (*v87)(char *, uint64_t);
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  void (*v92)(char *, uint64_t);
  void (*v93)(char *, uint64_t);
  uint64_t v94;
  double v95;
  double v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  Swift::String v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  Swift::String v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  BOOL v115;
  Swift::Int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  int *v135;
  uint64_t v136;
  double v137;
  double v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  unsigned int (*v142)(uint64_t, uint64_t, uint64_t);
  uint64_t v143;
  BOOL v144;
  uint64_t v145;
  void (*v146)(char *, uint64_t, uint64_t);
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  char v156;
  void (*v157)(char *, uint64_t);
  uint64_t (*v158)(void);
  char *v159;
  uint64_t v160;
  uint64_t v161;
  char v162;
  void (*v163)(char *, uint64_t);
  void (*v164)(char *, uint64_t);
  uint64_t v165;
  double v166;
  double v167;
  uint64_t *v168;
  uint64_t v169;
  uint64_t v170;
  void *v171;
  Swift::String v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  void *v179;
  Swift::String v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  unint64_t v190;
  unint64_t v191;
  char *v192;
  char *v193;
  unint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  BOOL v205;
  unint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  BOOL v215;
  uint64_t v216;
  char v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  BOOL v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  unint64_t v233;
  char *v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  unint64_t v239;
  uint64_t v240;
  uint64_t v241;
  unint64_t v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  unint64_t v246;
  _QWORD *v247;
  uint64_t v248;
  _QWORD *v249;
  char *v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  Swift::Int v255;
  char *v256;
  uint64_t v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  char *v261;
  uint64_t v262;
  char *v263;
  unint64_t v264;
  char *v265;
  uint64_t v266;
  char *v267;
  uint64_t v268;
  uint64_t v269;
  char *v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  char *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  char *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  char *v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  char *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t *v293;

  v2 = type metadata accessor for FMIPItemState(0);
  v269 = *(_QWORD *)(v2 - 8);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v248 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v270 = (char *)&v248 - v6;
  v7 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  v8 = __chkstk_darwin(v7);
  v273 = (uint64_t)&v248 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v275 = (uint64_t)&v248 - v11;
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v248 - v13;
  __chkstk_darwin(v12);
  v257 = (uint64_t)&v248 - v15;
  v276 = type metadata accessor for FMIPItem(0);
  v279 = *(_QWORD *)(v276 - 8);
  v16 = __chkstk_darwin(v276);
  v18 = (char *)&v248 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v16);
  v21 = (char *)&v248 - v20;
  v22 = __chkstk_darwin(v19);
  v278 = (char *)&v248 - v23;
  v24 = __chkstk_darwin(v22);
  v254 = (char *)&v248 - v25;
  v26 = __chkstk_darwin(v24);
  v256 = (char *)&v248 - v27;
  __chkstk_darwin(v26);
  v258 = (char *)&v248 - v28;
  v284 = type metadata accessor for FMDeviceCellViewModel(0);
  v266 = *(_QWORD *)(v284 - 8);
  v29 = __chkstk_darwin(v284);
  v260 = (uint64_t)&v248 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __chkstk_darwin(v29);
  v285 = (uint64_t)&v248 - v32;
  v33 = __chkstk_darwin(v31);
  v35 = (char *)&v248 - v34;
  v36 = __chkstk_darwin(v33);
  v274 = (char *)&v248 - v37;
  v38 = __chkstk_darwin(v36);
  v40 = (char *)&v248 - v39;
  v41 = __chkstk_darwin(v38);
  v261 = (char *)&v248 - v42;
  v43 = __chkstk_darwin(v41);
  v253 = (uint64_t)&v248 - v44;
  __chkstk_darwin(v43);
  v252 = (uint64_t)&v248 - v45;
  v293 = a1;
  v46 = a1[1];
  v255 = _minimumMergeRunLength(_:)(v46);
  if (v255 >= v46)
  {
    if (v46 < 0)
      goto LABEL_175;
    if (v46)
      sub_1003A207C(0, v46, 1, v293);
    return;
  }
  if (v46 >= 0)
    v47 = v46;
  else
    v47 = v46 + 1;
  if (v46 < -1)
    goto LABEL_183;
  v268 = v2;
  v267 = v5;
  v263 = v40;
  if (v46 < 2)
  {
    v52 = _swiftEmptyArrayStorage;
    v264 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v266 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v266 + 80));
    if (v46 != 1)
    {
      v191 = _swiftEmptyArrayStorage[2];
      v54 = (char *)_swiftEmptyArrayStorage;
      goto LABEL_140;
    }
    v48 = 1;
    v249 = _swiftEmptyArrayStorage;
  }
  else
  {
    v48 = v46;
    v49 = v47 >> 1;
    v50 = static Array._allocateBufferUninitialized(minimumCapacity:)(v47 >> 1, v284);
    *(_QWORD *)(v50 + 16) = v49;
    v51 = *(unsigned __int8 *)(v266 + 80);
    v249 = (_QWORD *)v50;
    v264 = v50 + ((v51 + 32) & ~v51);
  }
  v53 = 0;
  v54 = (char *)_swiftEmptyArrayStorage;
  v251 = v14;
  v265 = v18;
  v283 = v21;
  v287 = v35;
  v55 = v48;
  do
  {
    v56 = v53;
    v57 = v53 + 1;
    v262 = v53;
    if (v53 + 1 >= v55)
    {
      v66 = v53 + 1;
      v116 = v255;
      v117 = v53;
      goto LABEL_56;
    }
    v280 = v55;
    v58 = *v293;
    v59 = *(_QWORD *)(v266 + 72);
    v60 = v252;
    sub_10004FC74(*v293 + v59 * v57, v252, type metadata accessor for FMDeviceCellViewModel);
    v277 = v58;
    v288 = v59;
    v61 = v58 + v59 * v56;
    v62 = v253;
    sub_10004FC74(v61, v253, type metadata accessor for FMDeviceCellViewModel);
    v63 = v272;
    LODWORD(v286) = sub_1003A0050(v60, v62);
    v64 = (uint64_t)v261;
    v272 = v63;
    if (v63)
    {
      sub_10004FCB8(v62, type metadata accessor for FMDeviceCellViewModel);
      sub_10004FCB8(v60, type metadata accessor for FMDeviceCellViewModel);
      goto LABEL_153;
    }
    sub_10004FCB8(v62, type metadata accessor for FMDeviceCellViewModel);
    sub_10004FCB8(v60, type metadata accessor for FMDeviceCellViewModel);
    v55 = v280;
    if (v56 + 2 >= v280)
    {
      v66 = v56 + 2;
      goto LABEL_42;
    }
    v250 = v54;
    v65 = v277;
    v66 = v56 + 2;
    v281 = v288 * (v56 + 2);
    v282 = v288 * v57;
    v67 = (uint64_t)v263;
    v68 = (uint64_t)v251;
    do
    {
      sub_10004FC74(v65 + v281, v64, type metadata accessor for FMDeviceCellViewModel);
      sub_10004FC74(v65 + v282, v67, type metadata accessor for FMDeviceCellViewModel);
      v69 = v67;
      v70 = (int *)v284;
      v71 = *(int *)(v284 + 60);
      v72 = *(double *)(v64 + v71);
      v73 = *(double *)(v69 + v71);
      if (v72 != v73)
      {
        v78 = v72 < v73;
        v67 = (uint64_t)v263;
        goto LABEL_36;
      }
      v74 = v257;
      sub_1000E5B2C(v64 + *(int *)(v284 + 24), v257);
      v75 = v279;
      v76 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v279 + 48);
      v77 = v276;
      if (v76(v74, 1, v276) == 1)
      {
        sub_1000051EC(v74, (uint64_t *)&unk_1005D3AA0);
        goto LABEL_29;
      }
      v79 = *(void (**)(char *, uint64_t, uint64_t))(v75 + 32);
      v79(v258, v74, v77);
      sub_1000E5B2C((uint64_t)&v263[v70[6]], v68);
      if (v76(v68, 1, v77) == 1)
      {
        (*(void (**)(char *, uint64_t))(v75 + 8))(v258, v77);
        sub_1000051EC(v68, (uint64_t *)&unk_1005D3AA0);
LABEL_28:
        v70 = (int *)v284;
        goto LABEL_29;
      }
      v80 = ((uint64_t (*)(char *, uint64_t, uint64_t))v79)(v256, v68, v77);
      v81 = v270;
      v82 = FMIPItem.state.getter(v80);
      v83 = v267;
      static FMIPItemState.isBTConnected.getter(v82);
      v84 = sub_100008000((unint64_t *)&qword_1005E2280, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItemState, (uint64_t)&protocol conformance descriptor for FMIPItemState);
      v85 = v268;
      v271 = v84;
      v86 = dispatch thunk of SetAlgebra.isSuperset(of:)(v83, v268, v84);
      v87 = *(void (**)(char *, uint64_t))(v269 + 8);
      v87(v83, v85);
      v87(v81, v85);
      v88 = v254;
      v89 = (*(uint64_t (**)(char *, char *, uint64_t))(v75 + 16))(v254, v256, v77);
      if ((v86 & 1) == 0)
      {
        v93 = *(void (**)(char *, uint64_t))(v75 + 8);
        v93(v88, v77);
        v93(v256, v77);
        v93(v258, v77);
        v68 = (uint64_t)v251;
        goto LABEL_28;
      }
      v90 = FMIPItem.state.getter(v89);
      static FMIPItemState.isBTConnected.getter(v90);
      v91 = dispatch thunk of SetAlgebra.isSuperset(of:)(v83, v85, v271);
      v87(v83, v85);
      v87(v270, v85);
      v92 = *(void (**)(char *, uint64_t))(v75 + 8);
      v92(v88, v77);
      v92(v256, v77);
      v92(v258, v77);
      v68 = (uint64_t)v251;
      v70 = (int *)v284;
      if ((v91 & 1) != 0)
        goto LABEL_30;
LABEL_29:
      v94 = v70[14];
      v95 = *(double *)&v261[v94];
      v96 = *(double *)&v263[v94];
      if (v95 == v96)
      {
LABEL_30:
        v97 = v261;
        v98 = &v261[v70[17]];
        v99 = *((_QWORD *)v98 + 1);
        v100 = *((_QWORD *)v261 + 2);
        v101 = (void *)*((_QWORD *)v261 + 3);
        v291 = *(_QWORD *)v98;
        v292 = v99;
        swift_bridgeObjectRetain(v99);
        v102._countAndFlagsBits = v100;
        v102._object = v101;
        String.append(_:)(v102);
        v103 = v291;
        v104 = v292;
        v105 = v70[17];
        v67 = (uint64_t)v263;
        v106 = &v263[v105];
        v107 = *((_QWORD *)v106 + 1);
        v108 = *((_QWORD *)v263 + 2);
        v109 = (void *)*((_QWORD *)v263 + 3);
        v291 = *(_QWORD *)v106;
        v292 = v107;
        swift_bridgeObjectRetain(v107);
        v110._countAndFlagsBits = v108;
        v110._object = v109;
        String.append(_:)(v110);
        v111 = v291;
        v112 = v292;
        v291 = v103;
        v292 = v104;
        v289 = v111;
        v290 = v112;
        v113 = sub_1000517B8();
        v114 = StringProtocol.caseInsensitiveCompare<A>(_:)(&v289, &type metadata for String, &type metadata for String, v113, v113);
        swift_bridgeObjectRelease(v104);
        swift_bridgeObjectRelease(v112);
        v115 = v114 == -1;
        v64 = (uint64_t)v97;
        v78 = v115;
        v21 = v283;
        goto LABEL_35;
      }
      v78 = v95 < v96;
      v21 = v283;
      v67 = (uint64_t)v263;
      v64 = (uint64_t)v261;
LABEL_35:
      v55 = v280;
LABEL_36:
      sub_10004FCB8(v67, type metadata accessor for FMDeviceCellViewModel);
      sub_10004FCB8(v64, type metadata accessor for FMDeviceCellViewModel);
      if (((v286 ^ v78) & 1) != 0)
        goto LABEL_39;
      v65 += v288;
      ++v66;
    }
    while (v55 != v66);
    v66 = v55;
LABEL_39:
    v54 = v250;
    v35 = v287;
LABEL_42:
    v116 = v255;
    v117 = v262;
    if ((v286 & 1) != 0)
    {
      if (v66 >= v262)
      {
        if (v262 < v66)
        {
          v250 = v54;
          v118 = 0;
          v119 = v288 * (v66 - 1);
          v120 = v66 * v288;
          v121 = v262;
          v122 = v262 * v288;
          do
          {
            if (v121 != v66 + v118 - 1)
            {
              v125 = v277;
              if (!v277)
                goto LABEL_181;
              v126 = v277 + v122;
              v286 = v277 + v119;
              sub_1002C08A8(v277 + v122, v260);
              if (v122 < v119 || v126 >= v125 + v120)
              {
                v123 = v125 + v122;
                v124 = v286;
                swift_arrayInitWithTakeFrontToBack(v123, v286);
              }
              else
              {
                v124 = v286;
                if (v122 != v119)
                  swift_arrayInitWithTakeBackToFront(v126, v286);
              }
              sub_1002C08A8(v260, v124);
              v21 = v283;
            }
            ++v121;
            --v118;
            v119 -= v288;
            v120 -= v288;
            v122 += v288;
          }
          while (v121 < v66 + v118);
          v54 = v250;
          v35 = v287;
          v116 = v255;
          v117 = v262;
        }
        goto LABEL_56;
      }
LABEL_178:
      __break(1u);
LABEL_179:
      __break(1u);
LABEL_180:
      __break(1u);
LABEL_181:
      __break(1u);
LABEL_182:
      __break(1u);
LABEL_183:
      _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
      __break(1u);
      return;
    }
LABEL_56:
    if (v66 >= v55)
      goto LABEL_88;
    if (__OFSUB__(v66, v117))
      goto LABEL_174;
    if (v66 - v117 >= v116)
      goto LABEL_88;
    if (__OFADD__(v117, v116))
      goto LABEL_176;
    if (v117 + v116 >= v55)
      v127 = v55;
    else
      v127 = v117 + v116;
    if (v127 < v117)
    {
LABEL_177:
      __break(1u);
      goto LABEL_178;
    }
    if (v66 == v127)
      goto LABEL_88;
    v250 = v54;
    v128 = *(_QWORD *)(v266 + 72);
    v129 = v128 * (v66 - 1);
    v280 = v128;
    v288 = v66 * v128;
    v130 = (uint64_t)v274;
    v259 = v127;
    while (2)
    {
      v132 = 0;
      v281 = v66;
      v277 = v129;
      while (2)
      {
        v133 = *v293;
        v286 = v288 + v132;
        sub_10004FC74(v288 + v132 + v133, v130, type metadata accessor for FMDeviceCellViewModel);
        sub_10004FC74(v129 + v132 + v133, (uint64_t)v35, type metadata accessor for FMDeviceCellViewModel);
        v134 = v35;
        v135 = (int *)v284;
        v136 = *(int *)(v284 + 60);
        v137 = *(double *)(v130 + v136);
        v138 = *(double *)&v134[v136];
        if (v137 == v138)
        {
          v282 = v129 + v132;
          v139 = v21;
          v140 = v275;
          sub_1000E5B2C(v130 + *(int *)(v284 + 24), v275);
          v141 = v279;
          v142 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v279 + 48);
          v143 = v276;
          if (v142(v140, 1, v276) == 1)
          {
            sub_1000051EC(v140, (uint64_t *)&unk_1005D3AA0);
            goto LABEL_80;
          }
          v145 = v140;
          v146 = *(void (**)(char *, uint64_t, uint64_t))(v141 + 32);
          v146(v278, v145, v143);
          v147 = (uint64_t)&v287[v135[6]];
          v148 = v273;
          sub_1000E5B2C(v147, v273);
          if (v142(v148, 1, v143) == 1)
          {
            (*(void (**)(char *, uint64_t))(v141 + 8))(v278, v143);
            sub_1000051EC(v148, (uint64_t *)&unk_1005D3AA0);
            v135 = (int *)v284;
            goto LABEL_80;
          }
          v149 = ((uint64_t (*)(char *, uint64_t, uint64_t))v146)(v139, v148, v143);
          v150 = v141;
          v151 = v270;
          v152 = FMIPItem.state.getter(v149);
          v153 = v267;
          static FMIPItemState.isBTConnected.getter(v152);
          v154 = sub_100008000((unint64_t *)&qword_1005E2280, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItemState, (uint64_t)&protocol conformance descriptor for FMIPItemState);
          v155 = v268;
          v271 = v154;
          v156 = dispatch thunk of SetAlgebra.isSuperset(of:)(v153, v268, v154);
          v157 = *(void (**)(char *, uint64_t))(v269 + 8);
          v157(v153, v155);
          v157(v151, v155);
          v158 = *(uint64_t (**)(void))(v150 + 16);
          v159 = v265;
          v160 = v158();
          if ((v156 & 1) != 0)
          {
            v161 = FMIPItem.state.getter(v160);
            static FMIPItemState.isBTConnected.getter(v161);
            v162 = dispatch thunk of SetAlgebra.isSuperset(of:)(v153, v155, v271);
            v157(v153, v155);
            v157(v151, v155);
            v163 = *(void (**)(char *, uint64_t))(v279 + 8);
            v163(v159, v143);
            v163(v283, v143);
            v163(v278, v143);
            v135 = (int *)v284;
            v130 = (uint64_t)v274;
            if ((v162 & 1) != 0)
            {
LABEL_81:
              v168 = (uint64_t *)(v130 + v135[17]);
              v169 = v168[1];
              v170 = *(_QWORD *)(v130 + 16);
              v171 = *(void **)(v130 + 24);
              v291 = *v168;
              v292 = v169;
              swift_bridgeObjectRetain(v169);
              v172._countAndFlagsBits = v170;
              v172._object = v171;
              String.append(_:)(v172);
              v173 = v291;
              v174 = v292;
              v175 = v135[17];
              v35 = v287;
              v176 = &v287[v175];
              v177 = *((_QWORD *)v176 + 1);
              v178 = *((_QWORD *)v287 + 2);
              v179 = (void *)*((_QWORD *)v287 + 3);
              v291 = *(_QWORD *)v176;
              v292 = v177;
              swift_bridgeObjectRetain(v177);
              v180._countAndFlagsBits = v178;
              v180._object = v179;
              String.append(_:)(v180);
              v181 = v291;
              v182 = v292;
              v291 = v173;
              v292 = v174;
              v130 = (uint64_t)v274;
              v289 = v181;
              v290 = v182;
              v183 = sub_1000517B8();
              v184 = StringProtocol.caseInsensitiveCompare<A>(_:)(&v289, &type metadata for String, &type metadata for String, v183, v183);
              swift_bridgeObjectRelease(v174);
              swift_bridgeObjectRelease(v182);
              v144 = v184 == -1;
              goto LABEL_83;
            }
          }
          else
          {
            v164 = *(void (**)(char *, uint64_t))(v279 + 8);
            v164(v159, v143);
            v164(v283, v143);
            v164(v278, v143);
            v135 = (int *)v284;
            v130 = (uint64_t)v274;
          }
LABEL_80:
          v165 = v135[14];
          v166 = *(double *)(v130 + v165);
          v167 = *(double *)&v287[v165];
          if (v166 == v167)
            goto LABEL_81;
          v144 = v166 < v167;
          v35 = v287;
LABEL_83:
          v129 = v277;
        }
        else
        {
          v144 = v137 < v138;
          v35 = v287;
        }
        sub_10004FCB8((uint64_t)v35, type metadata accessor for FMDeviceCellViewModel);
        sub_10004FCB8(v130, type metadata accessor for FMDeviceCellViewModel);
        if (v144)
        {
          v185 = *v293;
          if (!*v293)
            goto LABEL_179;
          v186 = v185 + v288 + v132;
          v187 = v185 + v129 + v132;
          sub_1002C08A8(v186, v285);
          swift_arrayInitWithTakeFrontToBack(v186, v187);
          sub_1002C08A8(v285, v187);
          v131 = v281;
          v132 -= v280;
          ++v117;
          v21 = v283;
          if (v281 == v117)
            goto LABEL_67;
          continue;
        }
        break;
      }
      v21 = v283;
      v131 = v281;
LABEL_67:
      v66 = v131 + 1;
      v129 += v280;
      v288 += v280;
      v117 = v262;
      if (v66 != v259)
        continue;
      break;
    }
    v66 = v259;
    v54 = v250;
LABEL_88:
    if (v66 < v117)
      goto LABEL_170;
    v188 = v66;
    if ((swift_isUniquelyReferenced_nonNull_native(v54) & 1) == 0)
      v54 = sub_10020C830(0, *((_QWORD *)v54 + 2) + 1, 1, v54);
    v190 = *((_QWORD *)v54 + 2);
    v189 = *((_QWORD *)v54 + 3);
    v191 = v190 + 1;
    if (v190 >= v189 >> 1)
      v54 = sub_10020C830((char *)(v189 > 1), v190 + 1, 1, v54);
    *((_QWORD *)v54 + 2) = v191;
    v192 = v54 + 32;
    v193 = &v54[16 * v190 + 32];
    *(_QWORD *)v193 = v262;
    *((_QWORD *)v193 + 1) = v188;
    if (v190)
    {
      while (2)
      {
        v194 = v191 - 1;
        if (v191 >= 4)
        {
          v199 = &v192[16 * v191];
          v200 = *((_QWORD *)v199 - 8);
          v201 = *((_QWORD *)v199 - 7);
          v205 = __OFSUB__(v201, v200);
          v202 = v201 - v200;
          if (v205)
            goto LABEL_158;
          v204 = *((_QWORD *)v199 - 6);
          v203 = *((_QWORD *)v199 - 5);
          v205 = __OFSUB__(v203, v204);
          v197 = v203 - v204;
          v198 = v205;
          if (v205)
            goto LABEL_159;
          v206 = v191 - 2;
          v207 = &v192[16 * v191 - 32];
          v209 = *(_QWORD *)v207;
          v208 = *((_QWORD *)v207 + 1);
          v205 = __OFSUB__(v208, v209);
          v210 = v208 - v209;
          if (v205)
            goto LABEL_161;
          v205 = __OFADD__(v197, v210);
          v211 = v197 + v210;
          if (v205)
            goto LABEL_164;
          if (v211 >= v202)
          {
            v229 = &v192[16 * v194];
            v231 = *(_QWORD *)v229;
            v230 = *((_QWORD *)v229 + 1);
            v205 = __OFSUB__(v230, v231);
            v232 = v230 - v231;
            if (v205)
              goto LABEL_168;
            v222 = v197 < v232;
          }
          else
          {
LABEL_107:
            if ((v198 & 1) != 0)
              goto LABEL_160;
            v206 = v191 - 2;
            v212 = &v192[16 * v191 - 32];
            v214 = *(_QWORD *)v212;
            v213 = *((_QWORD *)v212 + 1);
            v215 = __OFSUB__(v213, v214);
            v216 = v213 - v214;
            v217 = v215;
            if (v215)
              goto LABEL_163;
            v218 = &v192[16 * v194];
            v220 = *(_QWORD *)v218;
            v219 = *((_QWORD *)v218 + 1);
            v205 = __OFSUB__(v219, v220);
            v221 = v219 - v220;
            if (v205)
              goto LABEL_166;
            if (__OFADD__(v216, v221))
              goto LABEL_167;
            if (v216 + v221 < v197)
              goto LABEL_119;
            v222 = v197 < v221;
          }
          if (v222)
            v194 = v206;
        }
        else
        {
          if (v191 == 3)
          {
            v196 = *((_QWORD *)v54 + 4);
            v195 = *((_QWORD *)v54 + 5);
            v205 = __OFSUB__(v195, v196);
            v197 = v195 - v196;
            v198 = v205;
            goto LABEL_107;
          }
          v223 = *((_QWORD *)v54 + 4);
          v224 = *((_QWORD *)v54 + 5);
          v205 = __OFSUB__(v224, v223);
          v216 = v224 - v223;
          v217 = v205;
LABEL_119:
          if ((v217 & 1) != 0)
            goto LABEL_162;
          v225 = &v192[16 * v194];
          v227 = *(_QWORD *)v225;
          v226 = *((_QWORD *)v225 + 1);
          v205 = __OFSUB__(v226, v227);
          v228 = v226 - v227;
          if (v205)
            goto LABEL_165;
          if (v228 < v216)
            goto LABEL_136;
        }
        v233 = v194 - 1;
        if (v194 - 1 >= v191)
        {
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
          goto LABEL_177;
        }
        if (!*v293)
          goto LABEL_180;
        v234 = &v192[16 * v233];
        v235 = *(_QWORD *)v234;
        v236 = &v192[16 * v194];
        v237 = *((_QWORD *)v236 + 1);
        v238 = v272;
        sub_1003A2744(*v293 + *(_QWORD *)(v266 + 72) * *(_QWORD *)v234, *v293 + *(_QWORD *)(v266 + 72) * *(_QWORD *)v236, *v293 + *(_QWORD *)(v266 + 72) * v237, v264);
        v272 = v238;
        if (v238)
          goto LABEL_153;
        if (v237 < v235)
          goto LABEL_155;
        if (v194 > *((_QWORD *)v54 + 2))
          goto LABEL_156;
        *(_QWORD *)v234 = v235;
        *(_QWORD *)&v192[16 * v233 + 8] = v237;
        v239 = *((_QWORD *)v54 + 2);
        if (v194 >= v239)
          goto LABEL_157;
        v191 = v239 - 1;
        memmove(&v192[16 * v194], v236 + 16, 16 * (v239 - 1 - v194));
        *((_QWORD *)v54 + 2) = v239 - 1;
        v21 = v283;
        v35 = v287;
        if (v239 <= 2)
          goto LABEL_136;
        continue;
      }
    }
    v191 = 1;
LABEL_136:
    v53 = v188;
    v55 = v293[1];
  }
  while (v53 < v55);
  v52 = v249;
LABEL_140:
  v249 = v52;
  v240 = v272;
  if (v191 >= 2)
  {
    v241 = *v293;
    do
    {
      v242 = v191 - 2;
      if (v191 < 2)
        goto LABEL_169;
      if (!v241)
        goto LABEL_182;
      v243 = *(_QWORD *)&v54[16 * v242 + 32];
      v244 = *(_QWORD *)&v54[16 * v191 + 24];
      sub_1003A2744(v241 + *(_QWORD *)(v266 + 72) * v243, v241 + *(_QWORD *)(v266 + 72) * *(_QWORD *)&v54[16 * v191 + 16], v241 + *(_QWORD *)(v266 + 72) * v244, v264);
      if (v240)
        break;
      if (v244 < v243)
        goto LABEL_171;
      if ((swift_isUniquelyReferenced_nonNull_native(v54) & 1) == 0)
        v54 = sub_10020CE70((uint64_t)v54);
      if (v242 >= *((_QWORD *)v54 + 2))
        goto LABEL_172;
      v245 = &v54[16 * v242 + 32];
      *(_QWORD *)v245 = v243;
      *((_QWORD *)v245 + 1) = v244;
      v246 = *((_QWORD *)v54 + 2);
      if (v191 > v246)
        goto LABEL_173;
      memmove(&v54[16 * v191 + 16], &v54[16 * v191 + 32], 16 * (v246 - v191));
      *((_QWORD *)v54 + 2) = v246 - 1;
      v191 = v246 - 1;
    }
    while (v246 > 2);
  }
LABEL_153:
  swift_bridgeObjectRelease(v54);
  v247 = v249;
  v249[2] = 0;
  swift_bridgeObjectRelease(v247);
}

uint64_t sub_1003A207C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(uint64_t, uint64_t, uint64_t);
  BOOL v41;
  void (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  int *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char v64;
  char *v65;
  void (*v66)(char *, uint64_t);
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  double v69;
  double v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  Swift::String v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  Swift::String v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  int *v101;
  char *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD v116[2];
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;

  v113 = a4;
  v93 = a1;
  v98 = type metadata accessor for FMIPItemState(0);
  v95 = *(_QWORD *)(v98 - 8);
  v6 = __chkstk_darwin(v98);
  v99 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v97 = (char *)&v91 - v8;
  v9 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  v10 = __chkstk_darwin(v9);
  v107 = (uint64_t)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v106 = (uint64_t)&v91 - v12;
  v13 = type metadata accessor for FMIPItem(0);
  v105 = *(_QWORD *)(v13 - 8);
  v14 = __chkstk_darwin(v13);
  v94 = (char *)&v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v102 = (char *)&v91 - v17;
  __chkstk_darwin(v16);
  v103 = (char *)&v91 - v18;
  v19 = (int *)type metadata accessor for FMDeviceCellViewModel(0);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v91 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v20);
  result = __chkstk_darwin(v23);
  v28 = (char *)&v91 - v26;
  v92 = a2;
  v110 = a3;
  if (a3 != a2)
  {
    v29 = v13;
    v30 = v27;
    v31 = *(_QWORD *)(v25 + 72);
    v108 = v29;
    v109 = v31;
    v114 = v31 * v110;
    v115 = v31 * (v110 - 1);
    v119 = v27;
    v100 = (char *)&v91 - v26;
    v101 = v19;
    v104 = v22;
LABEL_5:
    v32 = 0;
    v33 = v93;
    while (1)
    {
      v34 = *v113;
      v112 = v114 + v32;
      sub_10004FC74(v114 + v32 + v34, (uint64_t)v28, type metadata accessor for FMDeviceCellViewModel);
      v111 = v115 + v32;
      sub_10004FC74(v115 + v32 + v34, v30, type metadata accessor for FMDeviceCellViewModel);
      v35 = v19[15];
      v36 = *(double *)&v28[v35];
      v37 = *(double *)(v30 + v35);
      if (v36 != v37)
      {
        v41 = v36 < v37;
        goto LABEL_22;
      }
      v38 = v106;
      sub_1000E5B2C((uint64_t)&v28[v19[6]], v106);
      v39 = v105;
      v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v105 + 48);
      if (v40(v38, 1, v29) == 1)
      {
        sub_1000051EC(v38, (uint64_t *)&unk_1005D3AA0);
      }
      else
      {
        v42 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 32);
        v43 = v38;
        v44 = v19;
        v45 = v103;
        v42(v103, v43, v29);
        v46 = v30 + v44[6];
        v47 = v107;
        sub_1000E5B2C(v46, v107);
        if (v40(v47, 1, v29) == 1)
        {
          (*(void (**)(char *, uint64_t))(v39 + 8))(v45, v29);
          sub_1000051EC(v107, (uint64_t *)&unk_1005D3AA0);
        }
        else
        {
          v48 = v102;
          v49 = ((uint64_t (*)(char *, uint64_t, uint64_t))v42)(v102, v107, v29);
          v50 = v97;
          v51 = FMIPItem.state.getter(v49);
          v52 = v99;
          static FMIPItemState.isBTConnected.getter(v51);
          v53 = sub_100008000((unint64_t *)&qword_1005E2280, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItemState, (uint64_t)&protocol conformance descriptor for FMIPItemState);
          v54 = v98;
          v96 = v53;
          v55 = dispatch thunk of SetAlgebra.isSuperset(of:)(v52, v98, v53);
          v56 = *(void (**)(char *, uint64_t))(v95 + 8);
          v56(v52, v54);
          v57 = v54;
          v29 = v108;
          v56(v50, v57);
          v58 = v94;
          v59 = (*(uint64_t (**)(char *, char *, uint64_t))(v39 + 16))(v94, v48, v29);
          if ((v55 & 1) != 0)
          {
            v60 = v97;
            v61 = FMIPItem.state.getter(v59);
            v62 = v99;
            static FMIPItemState.isBTConnected.getter(v61);
            v63 = v98;
            v64 = dispatch thunk of SetAlgebra.isSuperset(of:)(v62, v98, v96);
            v65 = v62;
            v29 = v108;
            v56(v65, v63);
            v56(v60, v63);
            v66 = *(void (**)(char *, uint64_t))(v39 + 8);
            v66(v58, v29);
            v66(v102, v29);
            v66(v103, v29);
            v28 = v100;
            v19 = v101;
            v30 = v119;
            if ((v64 & 1) != 0)
              goto LABEL_19;
            goto LABEL_18;
          }
          v67 = *(void (**)(char *, uint64_t))(v39 + 8);
          v67(v58, v29);
          v67(v102, v29);
          v67(v103, v29);
        }
        v28 = v100;
        v19 = v101;
        v30 = v119;
      }
LABEL_18:
      v68 = v19[14];
      v69 = *(double *)&v28[v68];
      v70 = *(double *)(v30 + v68);
      if (v69 != v70)
      {
        v41 = v69 < v70;
        goto LABEL_21;
      }
LABEL_19:
      v71 = &v28[v19[17]];
      v72 = *((_QWORD *)v71 + 1);
      v73 = *((_QWORD *)v28 + 2);
      v74 = (void *)*((_QWORD *)v28 + 3);
      v117 = *(_QWORD *)v71;
      v118 = v72;
      swift_bridgeObjectRetain(v72);
      v75._countAndFlagsBits = v73;
      v75._object = v74;
      String.append(_:)(v75);
      v77 = v117;
      v76 = v118;
      v78 = (uint64_t *)(v119 + v19[17]);
      v79 = v78[1];
      v80 = *(_QWORD *)(v119 + 16);
      v81 = *(void **)(v119 + 24);
      v117 = *v78;
      v118 = v79;
      swift_bridgeObjectRetain(v79);
      v82._countAndFlagsBits = v80;
      v82._object = v81;
      String.append(_:)(v82);
      v83 = v117;
      v84 = v118;
      v117 = v77;
      v118 = v76;
      v116[0] = v83;
      v116[1] = v84;
      v85 = sub_1000517B8();
      v86 = StringProtocol.caseInsensitiveCompare<A>(_:)(v116, &type metadata for String, &type metadata for String, v85, v85);
      v87 = v76;
      v30 = v119;
      swift_bridgeObjectRelease(v87);
      v29 = v108;
      swift_bridgeObjectRelease(v84);
      v41 = v86 == -1;
LABEL_21:
      v22 = v104;
LABEL_22:
      sub_10004FCB8(v30, type metadata accessor for FMDeviceCellViewModel);
      result = sub_10004FCB8((uint64_t)v28, type metadata accessor for FMDeviceCellViewModel);
      if (!v41)
        goto LABEL_4;
      v88 = *v113;
      if (!*v113)
      {
        __break(1u);
        return result;
      }
      v89 = v88 + v114 + v32;
      v90 = v88 + v115 + v32;
      sub_1002C08A8(v89, (uint64_t)v22);
      swift_arrayInitWithTakeFrontToBack(v89, v90);
      result = sub_1002C08A8((uint64_t)v22, v90);
      v32 -= v109;
      ++v33;
      v30 = v119;
      if (v110 == v33)
      {
LABEL_4:
        v115 += v109;
        v114 += v109;
        if (++v110 == v92)
          return result;
        goto LABEL_5;
      }
    }
  }
  return result;
}

uint64_t sub_1003A2744(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  BOOL v26;
  BOOL v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t result;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;

  v5 = v4;
  v52 = type metadata accessor for FMDeviceCellViewModel(0);
  v10 = __chkstk_darwin(v52);
  v11 = __chkstk_darwin(v10);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v46 - v13;
  __chkstk_darwin(v12);
  v18 = (char *)&v46 - v17;
  v53 = *(_QWORD *)(v19 + 72);
  if (!v53)
  {
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (a2 - a1 == 0x8000000000000000 && v53 == -1)
    goto LABEL_68;
  v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v53 == -1)
    goto LABEL_69;
  v21 = (uint64_t)(a2 - a1) / v53;
  v56 = a1;
  v55 = a4;
  v22 = v20 / v53;
  if (v21 >= v20 / v53)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      v24 = v22 * v53;
      v18 = v16;
      v50 = (char *)v15;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4, a2);
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4, a2);
      }
      v31 = a4 + v24;
      v54 = a4 + v24;
      v56 = a2;
      if (v24 < 1 || a1 >= a2)
        goto LABEL_65;
      v47 = a1;
      v33 = -v53;
      v48 = -v53;
      v49 = a4;
      while (1)
      {
        sub_10004FC74(v31 + v33, (uint64_t)v18, type metadata accessor for FMDeviceCellViewModel);
        v34 = a2;
        v35 = a2 + v33;
        v36 = a2 + v33;
        v37 = v33;
        v14 = v50;
        sub_10004FC74(v36, (uint64_t)v50, type metadata accessor for FMDeviceCellViewModel);
        v38 = sub_1003A0050((uint64_t)v18, (uint64_t)v14);
        if (v5)
          goto LABEL_64;
        v39 = v38;
        v53 = 0;
        v51 = a3 + v37;
        sub_10004FCB8((uint64_t)v14, type metadata accessor for FMDeviceCellViewModel);
        sub_10004FCB8((uint64_t)v18, type metadata accessor for FMDeviceCellViewModel);
        if (v39)
        {
          v40 = a3;
          v25 = a3 >= v34;
          a3 = v51;
          if (v25 && v51 < v34)
          {
            v41 = v49;
            if (v40 != v34)
              swift_arrayInitWithTakeBackToFront(v51, v35);
          }
          else
          {
            swift_arrayInitWithTakeFrontToBack(v51, v35);
            v41 = v49;
          }
          v33 = v48;
          v56 += v48;
        }
        else
        {
          v42 = v54;
          v43 = v54 + v37;
          v54 += v37;
          v44 = a3;
          v25 = a3 >= v42;
          a3 = v51;
          if (v25 && v51 < v42)
          {
            v41 = v49;
            if (v44 != v42)
              swift_arrayInitWithTakeBackToFront(v51, v43);
            v35 = v34;
            v33 = v48;
          }
          else
          {
            swift_arrayInitWithTakeFrontToBack(v51, v43);
            v35 = v34;
            v33 = v48;
            v41 = v49;
          }
        }
        v31 = v54;
        if (v54 > v41)
        {
          a2 = v35;
          v5 = v53;
          if (v35 > v47)
            continue;
        }
        goto LABEL_65;
      }
    }
  }
  else if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21 * v53;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4, a1);
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront(a4, a1);
    }
    v51 = a4 + v23;
    v54 = a4 + v23;
    v25 = v23 < 1 || a2 >= a3;
    if (v25)
      goto LABEL_65;
    while (1)
    {
      sub_10004FC74(a2, (uint64_t)v18, type metadata accessor for FMDeviceCellViewModel);
      sub_10004FC74(a4, (uint64_t)v14, type metadata accessor for FMDeviceCellViewModel);
      v26 = sub_1003A0050((uint64_t)v18, (uint64_t)v14);
      if (v4)
        break;
      v27 = v26;
      sub_10004FCB8((uint64_t)v14, type metadata accessor for FMDeviceCellViewModel);
      sub_10004FCB8((uint64_t)v18, type metadata accessor for FMDeviceCellViewModel);
      v28 = v56;
      if (v27)
      {
        v29 = a2 + v53;
        if (v56 < a2 || v56 >= v29)
        {
          swift_arrayInitWithTakeFrontToBack(v56, a2);
        }
        else if (v56 == a2)
        {
          v28 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront(v56, a2);
        }
      }
      else
      {
        v30 = v55 + v53;
        if (v56 < v55 || v56 >= v30)
        {
          swift_arrayInitWithTakeFrontToBack(v56, v55);
        }
        else if (v56 != v55)
        {
          swift_arrayInitWithTakeBackToFront(v56, v55);
        }
        v55 = v30;
        v29 = a2;
      }
      v56 = v28 + v53;
      a4 = v55;
      if (v55 < v51)
      {
        a2 = v29;
        if (v29 < a3)
          continue;
      }
      goto LABEL_65;
    }
LABEL_64:
    sub_10004FCB8((uint64_t)v14, type metadata accessor for FMDeviceCellViewModel);
    sub_10004FCB8((uint64_t)v18, type metadata accessor for FMDeviceCellViewModel);
LABEL_65:
    sub_10020CB60(&v56, &v55, (uint64_t *)&v54);
    return 1;
  }
LABEL_70:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003A2CC0(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  void **aBlock;
  _QWORD v30[4];
  uint64_t v31;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v28 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v11 = type metadata accessor for Logger(0);
  sub_100056D88(v11, (uint64_t)qword_1005F5748);
  swift_bridgeObjectRetain(a1);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v15 = 134217984;
    aBlock = *(void ***)(a1 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v30);
    swift_bridgeObjectRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "FMMultipartEntityListDataSource: didUpdate %ld devices", v15, 0xCu);
    swift_slowDealloc(v15, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease(a1);
  }
  v16 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v17 = (void *)static OS_dispatch_queue.main.getter(v16);
  v18 = swift_allocObject(&unk_10055FB60, 32, 7);
  *(_QWORD *)(v18 + 16) = v2;
  *(_QWORD *)(v18 + 24) = a1;
  v30[3] = sub_1003A31C4;
  v31 = v18;
  aBlock = _NSConcreteStackBlock;
  v30[0] = 1107296256;
  v30[1] = sub_100037DF8;
  v30[2] = &unk_10055FB78;
  v19 = _Block_copy(&aBlock);
  v20 = v31;
  swift_bridgeObjectRetain(a1);
  v21 = v2;
  swift_release(v20);
  static DispatchQoS.unspecified.getter(v22);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v23 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v24 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v25 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v24, v25, v4, v23);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v10, v8);
}

void sub_1003A2FCC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;

  v2 = type metadata accessor for FMIPDevice(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v6 = type metadata accessor for Logger(0);
  sub_100056D88(v6, (uint64_t)qword_1005F5748);
  v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = swift_slowAlloc(32, -1);
    v18 = v11;
    *(_DWORD *)v10 = 136315138;
    v13 = FMIPDevice.debugDescription.getter(v11, v12);
    v15 = v14;
    v17 = sub_100056DA0(v13, v14, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18);
    v16 = swift_bridgeObjectRelease(v15);
    (*(void (**)(char *, uint64_t, __n128))(v3 + 8))(v5, v2, v16);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "FMMultipartEntityListDataSource: didUpdate single device %s", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }

}

uint64_t sub_1003A31B8()
{
  return sub_1000090C4((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

void sub_1003A31C4()
{
  uint64_t v0;

  sub_10039D9E8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1003A31CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  Class *v9;
  Class isa;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  Class v18;
  uint64_t v19;

  v2 = v1;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v4 = type metadata accessor for Logger(0);
  sub_100056D88(v4, (uint64_t)qword_1005F5748);
  swift_bridgeObjectRetain(a1);
  v6 = Logger.logObject.getter(v5);
  v7 = static os_log_type_t.default.getter(v6);
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc(12, -1);
    v9 = (Class *)swift_slowAlloc(8, -1);
    *(_DWORD *)v8 = 138412290;
    sub_100053F2C((uint64_t *)&unk_1005D6750);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v18 = isa;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v18, &v19);
    *v9 = isa;
    swift_bridgeObjectRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "FMMultipartEntityListDataSource: itemAger itemsDidAge %@", v8, 0xCu);
    v11 = sub_100053F2C((uint64_t *)&unk_1005D9680);
    swift_arrayDestroy(v9, 1, v11);
    swift_slowDealloc(v9, -1, -1);
    swift_slowDealloc(v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease(a1);
  }
  v12 = *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_mediator);
  v13 = *(_QWORD *)(v12 + 24);
  v14 = swift_retain(v13);
  v15 = FMIPManager.devices.getter(v14);
  swift_release(v13);
  v16 = *(void **)(*(_QWORD *)(v12 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
  v17 = v16;
  sub_10039E3BC(v15, v16, 0);
  swift_bridgeObjectRelease(v15);

}

uint64_t sub_1003A33D4(uint64_t a1, void *a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  void *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  id v44;
  objc_class *v45;
  id v46;
  uint64_t v47;
  uint64_t ObjCClassFromMetadata;
  char *v49;
  NSString v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  id v68;
  uint64_t result;
  id v70;
  Swift::String v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  objc_super v83;
  uint64_t v84;
  unint64_t v85;
  _QWORD v86[3];

  v76 = a1;
  v77 = a2;
  v3 = type metadata accessor for FMIPDevice(0);
  v79 = *(_QWORD *)(v3 - 8);
  v80 = v3;
  v4 = __chkstk_darwin(v3);
  v81 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v82 = (char *)&v72 - v6;
  v78 = type metadata accessor for FMSelectedSection(0);
  v7 = __chkstk_darwin(v78);
  v75 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v73 = (char *)&v72 - v9;
  v74 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v72 = *(_QWORD *)(v74 - 8);
  __chkstk_darwin(v74);
  v11 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v12);
  v14 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v15);
  v17 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = &v2[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_delegate];
  *((_QWORD *)v18 + 1) = 0;
  swift_unknownObjectWeakInit(v18);
  *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_deviceSubscription] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_locationSubscription] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_cellsViewModel] = _swiftEmptyArrayStorage;
  v19 = OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_itemAger;
  v20 = type metadata accessor for FMItemAger();
  swift_allocObject(v20, 40, 7);
  v21 = v2;
  *(_QWORD *)&v2[v19] = sub_1000465C0();
  v22 = OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_updateQueue;
  sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  static DispatchQoS.userInitiated.getter();
  v86[0] = _swiftEmptyArrayStorage;
  v23 = sub_100008000((unint64_t *)&unk_1005D3970, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v24 = sub_100053F2C((uint64_t *)&unk_1005D20F0);
  v25 = sub_10003F734((unint64_t *)&unk_1005D3980, (uint64_t *)&unk_1005D20F0);
  v26 = v24;
  v27 = (uint64_t)v73;
  v28 = v23;
  v29 = v76;
  dispatch thunk of SetAlgebra.init<A>(_:)(v86, v26, v25, v12, v28);
  (*(void (**)(char *, _QWORD, uint64_t))(v72 + 104))(v11, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v74);
  v30 = v14;
  v31 = (uint64_t)v75;
  v32 = v11;
  v33 = v77;
  *(_QWORD *)&v21[v22] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000030, 0x80000001004C4050, v17, v30, v32, 0);
  *(_QWORD *)&v21[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_delayedUpdateWorkItem] = 0;
  v34 = &v21[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource__listTitle];
  *(_QWORD *)v34 = 0;
  *((_QWORD *)v34 + 1) = 0xE000000000000000;
  v21[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_updatesEnabled] = 0;
  *(_QWORD *)&v21[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_mediator] = v29;
  *(_QWORD *)&v21[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_tableView] = v33;
  v35 = *(_QWORD *)(v29 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v35, v86, 0, 0);
  v36 = v35;
  v37 = v78;
  sub_10004FC74(v36, v27, type metadata accessor for FMSelectedSection);
  sub_10004FC74(v27, v31, type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload(v31, v37) == 7)
  {
    v38 = v79;
    v39 = v80;
    v40 = v82;
    (*(void (**)(char *, uint64_t, uint64_t))(v79 + 32))(v82, v31, v80);
    v41 = v38;
    v42 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
    v42(&v21[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_selectedDevice], v40, v39);
    v43 = v29;
    swift_retain(v29);
    v44 = v33;

    v45 = (objc_class *)type metadata accessor for FMMultipartEntityListDataSource(0);
    v83.receiver = v21;
    v83.super_class = v45;
    v46 = objc_msgSendSuper2(&v83, "init");
    v47 = sub_100053F2C(&qword_1005E2380);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v47);
    v49 = (char *)v46;
    v50 = String._bridgeToObjectiveC()();
    objc_msgSend(v44, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v50);

    v51 = *(_QWORD *)&v49[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_itemAger];
    *(_QWORD *)(v51 + 24) = &off_10055FA70;
    swift_unknownObjectWeakAssign(v51 + 16, v49);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v52 = type metadata accessor for Logger(0);
    v53 = sub_100056D88(v52, (uint64_t)qword_1005F5748);
    v54 = Logger.logObject.getter(v53);
    v55 = static os_log_type_t.default.getter(v54);
    if (os_log_type_enabled(v54, v55))
    {
      v56 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v56 = 0;
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "FMMultipartEntityListDataSource: updateListTitle", v56, 2u);
      swift_slowDealloc(v56, -1, -1);
    }

    v57 = v81;
    v58 = ((uint64_t (*)(char *, char *, uint64_t))v42)(v81, &v49[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource_selectedDevice], v39);
    v59 = FMIPDevice.name.getter(v58);
    v61 = v60;
    v62 = *(void (**)(char *, uint64_t))(v41 + 8);
    v62(v57, v39);
    v63 = (uint64_t *)&v49[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource__listTitle];
    v64 = *(_QWORD *)&v49[OBJC_IVAR____TtC6FindMy31FMMultipartEntityListDataSource__listTitle + 8];
    *v63 = v59;
    v63[1] = v61;
    swift_bridgeObjectRelease(v64);
    v66 = FMIPManager.devices.getter(v65);
    v67 = *(void **)(*(_QWORD *)(v43 + 40) + OBJC_IVAR____TtC6FindMy18FMLocationProvider_currentLocation);
    v68 = v67;
    sub_10039E3BC(v66, v67, 0);
    swift_bridgeObjectRelease(v66);

    v62(v82, v39);
    sub_10004FCB8(v27, type metadata accessor for FMSelectedSection);
    return (uint64_t)v49;
  }
  else
  {
    swift_retain(v29);
    v70 = v33;
    sub_10004FCB8(v31, type metadata accessor for FMSelectedSection);
    v84 = 0;
    v85 = 0xE000000000000000;
    _StringGuts.grow(_:)(95);
    v71._countAndFlagsBits = 0xD00000000000005DLL;
    v71._object = (void *)0x80000001004C40C0;
    String.append(_:)(v71);
    _print_unlocked<A, B>(_:_:)(v27, &v84, v37, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v84, v85, "FindMy/FMMulitpartEntityListDataSource.swift", 44, 2, 94, 0);
    __break(1u);
  }
  return result;
}

uint64_t sub_1003A3AA4(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  _QWORD *v17;
  Class isa;
  uint64_t v19;
  _QWORD *v20;
  uint8_t *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void **aBlock;
  _QWORD v41[4];
  uint64_t v42;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v39 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v38 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v10 = type metadata accessor for Logger(0);
  sub_100056D88(v10, (uint64_t)qword_1005F5748);
  swift_bridgeObjectRetain(a1);
  v12 = Logger.logObject.getter(v11);
  v13 = static os_log_type_t.default.getter(v12);
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc(12, -1);
    v35 = v2;
    v15 = (uint8_t *)v14;
    v16 = swift_slowAlloc(8, -1);
    v36 = v8;
    v17 = (_QWORD *)v16;
    *(_DWORD *)v15 = 138412290;
    v37 = v7;
    sub_100006C5C(0, (unint64_t *)&unk_1005DF4B0, CLLocation_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    aBlock = (void **)isa;
    v7 = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v41);
    *v17 = isa;
    swift_bridgeObjectRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "FMMultipartEntityListDataSource: locationProvider didUpdate locations %@", v15, 0xCu);
    v19 = sub_100053F2C((uint64_t *)&unk_1005D9680);
    swift_arrayDestroy(v17, 1, v19);
    v20 = v17;
    v8 = v36;
    swift_slowDealloc(v20, -1, -1);
    v21 = v15;
    v2 = v35;
    swift_slowDealloc(v21, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease(a1);
  }
  v22 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v23 = (void *)static OS_dispatch_queue.main.getter(v22);
  v24 = swift_allocObject(&unk_10055FBB0, 32, 7);
  *(_QWORD *)(v24 + 16) = v2;
  *(_QWORD *)(v24 + 24) = a1;
  v41[3] = sub_1003A3E58;
  v42 = v24;
  aBlock = _NSConcreteStackBlock;
  v41[0] = 1107296256;
  v41[1] = sub_100037DF8;
  v41[2] = &unk_10055FBC8;
  v25 = _Block_copy(&aBlock);
  v26 = v42;
  swift_bridgeObjectRetain(a1);
  v27 = v2;
  swift_release(v26);
  v28 = v38;
  static DispatchQoS.unspecified.getter(v29);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v30 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v31 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v32 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v31, v32, v4, v30);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v28, v7, v25);
  _Block_release(v25);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v28, v8);
}

uint64_t sub_1003A3E4C()
{
  return sub_1000090C4((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

void sub_1003A3E58()
{
  uint64_t v0;

  sub_10039E2A8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1003A3E60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = type metadata accessor for FMIPDevice(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v7));
  return swift_deallocObject(v0, v7 + 9, v5);
}

void sub_1003A3F00()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(type metadata accessor for FMIPDevice(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_10039EC1C(*(char **)(v0 + 16), v0 + v2, *(void **)(v0 + v3), *(_QWORD *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_BYTE *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1003A3F58()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003A3F7C()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 32, 7);
}

double sub_1003A3FA8()
{
  uint64_t v0;

  return sub_10039F0B8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1003A3FB0()
{
  return sub_1000090C4((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1003A3FBC()
{
  uint64_t v0;

  return sub_10039DEE4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1003A3FC4()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003A3FE8()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

void sub_1003A4014()
{
  uint64_t v0;

  sub_10039E1B4(*(_QWORD *)(v0 + 16));
}

char *sub_1003A4038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, unsigned __int8 a11)
{
  char *v11;
  char *v12;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  objc_class *v34;
  char *v35;
  uint64_t v36;
  void *v37;
  char *v38;
  id v39;
  NSString v40;
  void *v41;
  id v42;
  NSString v43;
  uint64_t v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  NSString v51;
  id v52;
  NSString v53;
  uint64_t v54;
  id v55;
  NSString v56;
  void *v57;
  id v58;
  NSString v59;
  uint64_t v60;
  id v61;
  NSString v62;
  id v63;
  NSString v64;
  char *v65;
  NSString v66;
  _QWORD v68[4];
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  objc_super v76;

  v12 = v11;
  v68[2] = a3;
  v68[3] = a8;
  v74 = a7;
  v75 = a4;
  v68[1] = a6;
  v71 = a1;
  v69 = a10;
  v70 = a11;
  v15 = sub_100053F2C((uint64_t *)&unk_1005E4430);
  __chkstk_darwin(v15);
  v17 = (char *)v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for FMPlatterIcon(0);
  v72 = *(_QWORD *)(v18 - 8);
  v73 = v18;
  __chkstk_darwin(v18);
  v20 = (char *)v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_titleLabel;
  v22 = objc_allocWithZone((Class)UILabel);
  v23 = v11;
  *(_QWORD *)&v12[v21] = objc_msgSend(v22, "init");
  v24 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitleLabel;
  *(_QWORD *)&v23[v24] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v25 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_contentStackView;
  *(_QWORD *)&v23[v25] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v26 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_actionButton;
  v27 = (void *)objc_opt_self(UIButton);
  *(_QWORD *)&v23[v26] = objc_msgSend(v27, "buttonWithType:", 1);
  v28 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_secondaryActionButton;
  v29 = a5;
  *(_QWORD *)&v23[v28] = objc_msgSend(v27, "buttonWithType:", 1);
  v30 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_topSeparator;
  *(_QWORD *)&v23[v30] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v31 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_buttonSeparator;
  *(_QWORD *)&v23[v31] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v32 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_iconView;
  *(_QWORD *)&v23[v32] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  *(_QWORD *)&v23[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_actionButtonOnlyShowingConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v23[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_secondaryActionButtonOnlyShowingConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v23[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_bothActionButtonsShowingConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v23[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_bothActionButtonHiddenConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v23[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitleShowingConstraints] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v23[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitleHiddenConstraints] = _swiftEmptyArrayStorage;
  v23[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isActionEnabled] = 1;
  v23[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isSecondaryActionEnabled] = 1;
  v23[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isActionButtonHidden] = 1;
  v23[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isSecondaryActionButtonHidden] = 1;
  v33 = &v23[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitle];
  *(_QWORD *)v33 = 0;
  *((_QWORD *)v33 + 1) = 0xE000000000000000;
  v23[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isTransparent] = v69;
  v23[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_fullWidthSeparator] = v70;

  v34 = (objc_class *)type metadata accessor for FMPlatterImageAndButtonGroupView();
  v76.receiver = v23;
  v76.super_class = v34;
  v35 = (char *)objc_msgSendSuper2(&v76, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v36 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_titleLabel;
  v37 = *(void **)&v35[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_titleLabel];
  v38 = v35;
  v39 = v37;
  v40 = String._bridgeToObjectiveC()();
  objc_msgSend(v39, "setText:", v40, swift_bridgeObjectRelease(a2).n128_f64[0]);

  v41 = *(void **)&v35[v36];
  objc_msgSend(v41, "setAdjustsFontForContentSizeCategory:", 1);
  v42 = v41;
  v43 = String._bridgeToObjectiveC()();
  objc_msgSend(v42, "setAccessibilityIdentifier:", v43);

  sub_1002593FC(a5, (uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v17, 1, v73) == 1)
  {
    v44 = sub_100259444((uint64_t)v17);
  }
  else
  {
    sub_100259484((uint64_t)v17, (uint64_t)v20);
    v45 = *(void **)&v38[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_iconView];
    v46 = sub_10038E074((uint64_t)v20, 0);
    objc_msgSend(v45, "setImage:", v46);

    v44 = sub_1000B0660((uint64_t)v20);
  }
  v47 = v74;
  v48 = v75;
  if (v74)
  {
    v49 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_actionButton;
    v50 = *(id *)&v38[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_actionButton];
    v51 = String._bridgeToObjectiveC()();
    objc_msgSend(v50, "setTitle:forState:", v51, 0, swift_bridgeObjectRelease(v47).n128_f64[0]);

    v52 = *(id *)&v38[v49];
    v53 = String._bridgeToObjectiveC()();
    objc_msgSend(v52, "setAccessibilityIdentifier:", v53);

  }
  if (v48)
  {
    v54 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitleLabel;
    v55 = *(id *)&v38[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitleLabel];
    v56 = String._bridgeToObjectiveC()();
    objc_msgSend(v55, "setText:", v56, swift_bridgeObjectRelease(v48).n128_f64[0]);

    v57 = *(void **)&v38[v54];
    objc_msgSend(v57, "setAdjustsFontForContentSizeCategory:", 1);
    v58 = v57;
    v59 = String._bridgeToObjectiveC()();
    objc_msgSend(v58, "setAccessibilityIdentifier:", v59);

  }
  if (a9)
  {
    v60 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_secondaryActionButton;
    v61 = *(id *)&v38[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_secondaryActionButton];
    v62 = String._bridgeToObjectiveC()();
    objc_msgSend(v61, "setTitle:forState:", v62, 0, swift_bridgeObjectRelease(a9).n128_f64[0]);

    v63 = *(id *)&v38[v60];
    v64 = String._bridgeToObjectiveC()();
    objc_msgSend(v63, "setAccessibilityIdentifier:", v64);

  }
  (*(void (**)(uint64_t))((swift_isaMask & *(_QWORD *)v38) + 0x208))(v44);
  sub_1003A4E74();
  (*(void (**)(void))((swift_isaMask & *(_QWORD *)v38) + 0x218))();
  v65 = v38;
  v66 = String._bridgeToObjectiveC()();
  objc_msgSend(v65, "setAccessibilityIdentifier:", v66);

  sub_100259444(v29);
  return v65;
}

void sub_1003A46A4()
{
  char *v0;
  char *v1;
  id v2;
  id v3;
  void *v4;
  char **v5;
  id v6;
  id v7;
  id v8;
  id v9;
  double v10;
  double v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  double v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  id v41;
  void *v42;
  id v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  void *v53;

  v1 = v0;
  if ((v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isTransparent] & 1) == 0)
  {
    if (qword_1005D1E80 != -1)
      swift_once(&qword_1005D1E80, sub_100008974);
    v2 = objc_msgSend(v0, "traitCollection");
    v3 = objc_msgSend(v2, "userInterfaceStyle");
    v4 = (void *)objc_opt_self(UIColor);
    v5 = &selRef_tertiarySystemFillColor;
    if (v3 != (id)2)
      v5 = &selRef_whiteColor;
    v6 = objc_msgSend(v4, *v5);

    objc_msgSend(v1, "setBackgroundColor:", v6);
    v7 = objc_msgSend(v1, "layer");
    objc_msgSend(v7, "setShouldRasterize:", 1);

    v8 = objc_msgSend(v1, "layer");
    v9 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
    objc_msgSend(v9, "scale");
    v11 = v10;

    objc_msgSend(v8, "setRasterizationScale:", v11);
    v12 = objc_msgSend(v1, "layer");
    objc_msgSend(v12, "setCornerRadius:", _UISheetCornerRadius);

    v13 = objc_msgSend(v1, "layer");
    objc_msgSend(v13, "setCornerCurve:", kCACornerCurveContinuous);

    v14 = objc_msgSend(v1, "layer");
    objc_msgSend(v14, "setMasksToBounds:", 1);

    v15 = objc_msgSend(v1, "layer");
    v16 = objc_msgSend((id)objc_opt_self(UIColor), "blackColor");
    v17 = objc_msgSend(v16, "CGColor");

    objc_msgSend(v15, "setShadowColor:", v17);
    v18 = objc_msgSend(v1, "layer");
    LODWORD(v19) = 1031127695;
    objc_msgSend(v18, "setShadowOpacity:", v19);

    v20 = objc_msgSend(v1, "layer");
    objc_msgSend(v20, "setShadowRadius:", 16.0);

    v21 = objc_msgSend(v1, "layer");
    objc_msgSend(v21, "setShadowOffset:", 0.0, 0.0);

  }
  v53 = *(void **)&v1[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_contentStackView];
  objc_msgSend(v53, "setAxis:", 1);
  v22 = *(void **)&v1[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_actionButton];
  v23 = objc_msgSend(v22, "titleLabel");
  if (v23)
  {
    v24 = v23;
    v25 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
    objc_msgSend(v24, "setFont:", v25);

  }
  v26 = objc_msgSend(v22, "titleLabel");
  if (v26)
  {
    v27 = v26;
    objc_msgSend(v26, "setAdjustsFontForContentSizeCategory:", 1);

  }
  objc_msgSend(v22, "setContentHorizontalAlignment:", 4);
  objc_msgSend(v22, "addTarget:action:forControlEvents:", v1, "handleAction", 64);
  v28 = *(void **)&v1[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_secondaryActionButton];
  v29 = objc_msgSend(v28, "titleLabel");
  if (v29)
  {
    v30 = v29;
    v31 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
    objc_msgSend(v30, "setFont:", v31);

  }
  v32 = objc_msgSend(v28, "titleLabel");
  if (v32)
  {
    v33 = v32;
    objc_msgSend(v32, "setAdjustsFontForContentSizeCategory:", 1);

  }
  objc_msgSend(v28, "setContentHorizontalAlignment:", 4);
  objc_msgSend(v28, "addTarget:action:forControlEvents:", v1, "handleSecondaryAction", 64);
  v34 = *(void **)&v1[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_titleLabel];
  v35 = (void *)objc_opt_self(UIFont);
  v36 = objc_msgSend(v35, "preferredFontForTextStyle:", UIFontTextStyleBody);
  v37 = (void *)sub_10003CEE8(0x8000);

  v38 = (void *)sub_10003CEE8(2);
  objc_msgSend(v34, "setFont:", v38);

  objc_msgSend(v34, "setNumberOfLines:", 0);
  v39 = *(void **)&v1[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_topSeparator];
  v40 = (void *)objc_opt_self(UIColor);
  v41 = objc_msgSend(v40, "quaternaryLabelColor");
  objc_msgSend(v39, "setBackgroundColor:", v41);

  v42 = *(void **)&v1[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_buttonSeparator];
  v43 = objc_msgSend(v40, "quaternaryLabelColor");
  objc_msgSend(v42, "setBackgroundColor:", v43);

  objc_msgSend(v1, "addSubview:", *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_iconView]);
  objc_msgSend(v1, "addSubview:", v34);
  v44 = *(void **)&v1[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitleLabel];
  v45 = objc_msgSend(v35, "preferredFontForTextStyle:", UIFontTextStyleSubheadline);
  objc_msgSend(v44, "setFont:", v45);

  v46 = objc_msgSend(v40, "secondaryLabelColor");
  objc_msgSend(v44, "setTextColor:", v46);

  objc_msgSend(v44, "setNumberOfLines:", 0);
  sub_1000B0A2C();
  objc_msgSend(v1, "addSubview:", v44);
  objc_msgSend(v1, "addSubview:", v39);
  objc_msgSend(v1, "addSubview:", v53);
  v47 = objc_msgSend(v22, "titleLabel");
  if (v47)
  {
    v48 = v47;
    v49 = objc_msgSend(v47, "text");

    if (v49)
    {

      objc_msgSend(v1, "addSubview:", v22);
    }
  }
  v50 = objc_msgSend(v28, "titleLabel");
  if (v50)
  {
    v51 = v50;
    v52 = objc_msgSend(v50, "text");

    if (v52)
    {

      objc_msgSend(v1, "addSubview:", v28);
    }
  }
}

void sub_1003A4E74()
{
  char *v0;
  double v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  Class isa;
  id v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  uint64_t v44;
  NSArray v45;
  char **v46;
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  id v59;
  void *v60;
  char **v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  void *v80;
  id v81;
  double v82;
  double v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  id v90;
  double v91;
  id v92;
  id v93;
  id v94;
  id v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  double v101;
  double v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  Class v113;
  uint64_t v114;
  Class v115;
  uint64_t v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  id v124;
  id v125;
  uint64_t v126;
  Class v127;
  uint64_t v128;
  id v129;
  id v130;
  id v131;
  id v132;
  id v133;
  id v134;
  id v135;
  id v136;
  id v137;
  id v138;
  id v139;
  id v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  id v144;
  id v145;
  id v146;
  id v147;
  id v148;
  id v149;
  id v150;
  id v151;
  id v152;
  id v153;
  id v154;
  id v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  id v159;
  id v160;
  id v161;
  id v162;
  id v163;
  id v164;
  id v165;
  id v166;
  id v167;
  id v168;
  id v169;
  id v170;
  id v171;
  id v172;
  id v173;
  id v174;
  id v175;
  id v176;
  id v177;
  id v178;
  double v179;
  double v180;
  id v181;
  id v182;
  id v183;
  id v184;
  id v185;
  id v186;
  id v187;
  id v188;
  id v189;
  id v190;
  id v191;
  id v192;
  id v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  id v197;
  id v198;
  id v199;
  uint64_t v200;
  uint64_t v201;
  id v202;
  void *v203;
  id v204;
  char v205;
  id v206;
  void *v207;
  id v208;
  char v209;
  id v210;
  id v211;
  id v212;
  id v213;
  id v214;
  void *v215;
  id v216;
  char *v217;
  id v218;
  id v219;
  id v220;
  id v221;
  id v222;

  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v1 = *(double *)&qword_1005F5978;
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_titleLabel];
  v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitleLabel];
  v4 = *(void **)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_topSeparator];
  v5 = *(void **)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_buttonSeparator];
  v6 = *(void **)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_actionButton];
  v7 = *(void **)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_secondaryActionButton];
  v220 = *(id *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_contentStackView];
  v8 = *(id *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_iconView];
  v217 = v0;
  v9 = v2;
  v10 = v3;
  v11 = v4;
  v12 = v5;
  v13 = v6;
  v14 = v7;
  v15 = v13;
  v16 = v14;
  v17 = v220;
  objc_msgSend(v8, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v9, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v10, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v11, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v12, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v13, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v16, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v17, "setTranslatesAutoresizingMaskIntoConstraints:", 0);

  v219 = v17;
  v218 = v16;

  v212 = v12;
  v211 = v11;

  v215 = v10;
  v213 = v9;

  v18 = v8;
  v19 = objc_msgSend(v8, "image");

  v20 = (void *)objc_opt_self(NSLayoutConstraint);
  v21 = sub_100053F2C(&qword_1005D2F10);
  v22 = swift_allocObject(v21, 56, 7);
  *(_OWORD *)(v22 + 16) = xmmword_1004820C0;
  v216 = v15;
  v221 = v20;
  if (v19)
  {
    v23 = objc_msgSend(v18, "topAnchor");
    v24 = objc_msgSend(v217, "topAnchor");
    v25 = objc_msgSend(v23, "constraintEqualToAnchor:constant:", v24, v1);

    *(_QWORD *)(v22 + 32) = v25;
    v26 = objc_msgSend(v18, "leadingAnchor");
    v27 = objc_msgSend(v217, "leadingAnchor");
    v28 = objc_msgSend(v26, "constraintEqualToAnchor:constant:", v27, v1);

    *(_QWORD *)(v22 + 40) = v28;
    v29 = objc_msgSend(v18, "trailingAnchor");
    v30 = objc_msgSend(v217, "trailingAnchor");
    v31 = objc_msgSend(v29, "constraintLessThanOrEqualToAnchor:constant:", v30, -v1);

    *(_QWORD *)(v22 + 48) = v31;
    specialized Array._endMutation()(v32);
    sub_100048C64();
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v20, "activateConstraints:", isa, swift_bridgeObjectRelease(v22).n128_f64[0]);

    v22 = swift_allocObject(v21, 56, 7);
    *(_OWORD *)(v22 + 16) = xmmword_1004820C0;
    v34 = objc_msgSend(v213, "topAnchor");
    v35 = objc_msgSend(v18, "bottomAnchor");
    v36 = v213;
    if (qword_1005D1BC8 != -1)
      swift_once(&qword_1005D1BC8, sub_1000ABDB8);
    v37 = objc_msgSend(v34, "constraintEqualToAnchor:constant:", v35, *(double *)&xmmword_1005F4D60);

    *(_QWORD *)(v22 + 32) = v37;
    v38 = objc_msgSend(v213, "leadingAnchor");
    v39 = objc_msgSend(v217, "leadingAnchor");
    v40 = objc_msgSend(v38, "constraintEqualToAnchor:constant:", v39, v1);

    *(_QWORD *)(v22 + 40) = v40;
    v41 = objc_msgSend(v213, "trailingAnchor");
    v42 = objc_msgSend(v217, "trailingAnchor");
    v43 = objc_msgSend(v41, "constraintEqualToAnchor:constant:", v42, -v1);

    *(_QWORD *)(v22 + 48) = v43;
    specialized Array._endMutation()(v44);
    v45.super.isa = Array._bridgeToObjectiveC()().super.isa;
    v46 = &selRef_viewWillAppear_;
  }
  else
  {
    v47 = objc_msgSend(v9, "topAnchor");
    v48 = objc_msgSend(v217, "topAnchor");
    v49 = objc_msgSend(v47, "constraintEqualToAnchor:constant:", v48, v1);

    *(_QWORD *)(v22 + 32) = v49;
    v50 = objc_msgSend(v9, "leadingAnchor");
    v51 = objc_msgSend(v217, "leadingAnchor");
    v52 = objc_msgSend(v50, "constraintEqualToAnchor:constant:", v51, v1);

    *(_QWORD *)(v22 + 40) = v52;
    v53 = objc_msgSend(v9, "trailingAnchor");
    v54 = objc_msgSend(v217, "trailingAnchor");
    v55 = objc_msgSend(v53, "constraintEqualToAnchor:constant:", v54, -v1);

    v46 = &selRef_viewWillAppear_;
    *(_QWORD *)(v22 + 48) = v55;
    specialized Array._endMutation()(v56);
    sub_100048C64();
    v45.super.isa = Array._bridgeToObjectiveC()().super.isa;
    v36 = v9;
  }
  objc_msgSend(v221, "activateConstraints:", v45.super.isa, swift_bridgeObjectRelease(v22).n128_f64[0]);

  v222 = (id)sub_100053F2C(&qword_1005D2F10);
  v57 = swift_allocObject(v222, 88, 7);
  *(_OWORD *)(v57 + 16) = xmmword_1004850C0;
  v58 = objc_msgSend(v10, v46[25]);
  v59 = objc_msgSend(v36, "bottomAnchor");
  v60 = v36;
  v61 = v46;
  v62 = v59;
  v63 = objc_msgSend(v58, "constraintEqualToAnchor:constant:", v59, 2.0);

  *(_QWORD *)(v57 + 32) = v63;
  v64 = objc_msgSend(v215, "leadingAnchor");
  v65 = objc_msgSend(v60, "leadingAnchor");
  v66 = objc_msgSend(v64, "constraintEqualToAnchor:", v65);

  *(_QWORD *)(v57 + 40) = v66;
  v67 = objc_msgSend(v215, "trailingAnchor");
  v68 = objc_msgSend(v60, "trailingAnchor");
  v69 = objc_msgSend(v67, "constraintEqualToAnchor:", v68);

  *(_QWORD *)(v57 + 48) = v69;
  v70 = objc_msgSend(v11, v61[25]);
  v71 = objc_msgSend(v215, "bottomAnchor");
  v72 = objc_msgSend(v70, "constraintEqualToAnchor:constant:", v71, v1);

  *(_QWORD *)(v57 + 56) = v72;
  v73 = objc_msgSend(v11, "leadingAnchor");
  v74 = objc_msgSend(v217, "leadingAnchor");
  v75 = objc_msgSend(v73, "constraintEqualToAnchor:constant:", v74, v1);

  *(_QWORD *)(v57 + 64) = v75;
  v76 = objc_msgSend(v11, "trailingAnchor");
  v77 = objc_msgSend(v217, "trailingAnchor");
  v78 = objc_msgSend(v76, "constraintEqualToAnchor:", v77);

  *(_QWORD *)(v57 + 72) = v78;
  v79 = objc_msgSend(v11, "heightAnchor");
  v80 = (void *)objc_opt_self(UIScreen);
  v81 = objc_msgSend(v80, "mainScreen");
  objc_msgSend(v81, "scale");
  v83 = v82;

  v84 = objc_msgSend(v79, "constraintEqualToConstant:", 1.0 / v83);
  *(_QWORD *)(v57 + 80) = v84;
  specialized Array._endMutation()(v85);
  v86 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitleShowingConstraints;
  v87 = *(_QWORD *)&v217[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitleShowingConstraints];
  *(_QWORD *)&v217[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitleShowingConstraints] = v57;
  swift_bridgeObjectRelease(v87);
  v88 = swift_allocObject(v222, 64, 7);
  *(_OWORD *)(v88 + 16) = xmmword_100481720;
  v89 = objc_msgSend(v211, "leadingAnchor");
  v90 = objc_msgSend(v217, "leadingAnchor");
  v91 = 0.0;
  if (!v217[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_fullWidthSeparator])
    v91 = v1;
  v92 = objc_msgSend(v89, "constraintEqualToAnchor:constant:", v90, v91);

  *(_QWORD *)(v88 + 32) = v92;
  v93 = objc_msgSend(v211, "trailingAnchor");
  v94 = objc_msgSend(v217, "trailingAnchor");
  v95 = objc_msgSend(v93, "constraintEqualToAnchor:constant:", v94, 0.0);

  *(_QWORD *)(v88 + 40) = v95;
  v96 = objc_msgSend(v211, "topAnchor");
  v97 = objc_msgSend(v213, "bottomAnchor");
  v98 = objc_msgSend(v96, "constraintEqualToAnchor:constant:", v97, v1);

  *(_QWORD *)(v88 + 48) = v98;
  v99 = objc_msgSend(v211, "heightAnchor");
  v214 = v80;
  v100 = objc_msgSend(v80, "mainScreen");
  objc_msgSend(v100, "scale");
  v102 = v101;

  v103 = objc_msgSend(v99, "constraintEqualToConstant:", 1.0 / v102);
  *(_QWORD *)(v88 + 56) = v103;
  specialized Array._endMutation()(v104);
  v105 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitleHiddenConstraints;
  v106 = *(_QWORD *)&v217[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitleHiddenConstraints];
  *(_QWORD *)&v217[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitleHiddenConstraints] = v88;
  swift_bridgeObjectRelease(v106);
  v107 = *(_QWORD *)&v217[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitle + 8];
  if ((v107 & 0x2000000000000000) != 0)
    v108 = HIBYTE(v107) & 0xF;
  else
    v108 = *(_QWORD *)&v217[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitle] & 0xFFFFFFFFFFFFLL;
  v109 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_100048C64();
  if (v108)
    v110 = v105;
  else
    v110 = v86;
  if (v108)
    v111 = v86;
  else
    v111 = v105;
  v112 = *(_QWORD *)&v217[v110];
  swift_bridgeObjectRetain(v112);
  v113 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v109, "deactivateConstraints:", v113, swift_bridgeObjectRelease(v112).n128_f64[0]);

  v114 = *(_QWORD *)&v217[v111];
  swift_bridgeObjectRetain(v114);
  v115 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v109, "activateConstraints:", v115, swift_bridgeObjectRelease(v114).n128_f64[0]);

  v210 = (id)objc_opt_self(NSLayoutConstraint);
  v116 = swift_allocObject(v222, 56, 7);
  *(_OWORD *)(v116 + 16) = xmmword_1004820C0;
  v117 = objc_msgSend(v219, "topAnchor");
  v118 = objc_msgSend(v211, "bottomAnchor");
  v119 = objc_msgSend(v117, "constraintEqualToAnchor:", v118);

  *(_QWORD *)(v116 + 32) = v119;
  v120 = objc_msgSend(v219, "leadingAnchor");
  v121 = objc_msgSend(v217, "leadingAnchor");
  v122 = objc_msgSend(v120, "constraintEqualToAnchor:constant:", v121, v1);

  *(_QWORD *)(v116 + 40) = v122;
  v123 = objc_msgSend(v219, "trailingAnchor");
  v124 = objc_msgSend(v217, "trailingAnchor");
  v125 = objc_msgSend(v123, "constraintEqualToAnchor:constant:", v124, -v1);

  *(_QWORD *)(v116 + 48) = v125;
  specialized Array._endMutation()(v126);
  v127 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v210, "activateConstraints:", v127, swift_bridgeObjectRelease(v116).n128_f64[0]);

  v128 = swift_allocObject(v222, 64, 7);
  *(_OWORD *)(v128 + 16) = xmmword_100481720;
  v129 = objc_msgSend(v216, "topAnchor");
  v130 = objc_msgSend(v219, "bottomAnchor");
  if (qword_1005D1BC8 != -1)
    swift_once(&qword_1005D1BC8, sub_1000ABDB8);
  v131 = objc_msgSend(v129, "constraintEqualToAnchor:constant:", v130, *(double *)&qword_1005F4D78);

  *(_QWORD *)(v128 + 32) = v131;
  v132 = objc_msgSend(v216, "leadingAnchor");
  v133 = objc_msgSend(v217, "leadingAnchor");
  v134 = objc_msgSend(v132, "constraintEqualToAnchor:constant:", v133, v1);

  *(_QWORD *)(v128 + 40) = v134;
  v135 = objc_msgSend(v216, "trailingAnchor");
  v136 = objc_msgSend(v217, "trailingAnchor");
  v137 = objc_msgSend(v135, "constraintEqualToAnchor:constant:", v136, -v1);

  *(_QWORD *)(v128 + 48) = v137;
  v138 = objc_msgSend(v216, "bottomAnchor");
  v139 = objc_msgSend(v217, "bottomAnchor");
  v140 = objc_msgSend(v138, "constraintEqualToAnchor:constant:", v139, -*(double *)&qword_1005F4D80);

  *(_QWORD *)(v128 + 56) = v140;
  specialized Array._endMutation()(v141);
  v142 = *(_QWORD *)&v217[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_actionButtonOnlyShowingConstraints];
  *(_QWORD *)&v217[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_actionButtonOnlyShowingConstraints] = v128;
  swift_bridgeObjectRelease(v142);
  v143 = swift_allocObject(v222, 64, 7);
  *(_OWORD *)(v143 + 16) = xmmword_100481720;
  v144 = objc_msgSend(v218, "topAnchor");
  v145 = objc_msgSend(v219, "bottomAnchor");
  v146 = objc_msgSend(v144, "constraintEqualToAnchor:constant:", v145, *(double *)&qword_1005F4D78);

  *(_QWORD *)(v143 + 32) = v146;
  v147 = objc_msgSend(v218, "leadingAnchor");
  v148 = objc_msgSend(v217, "leadingAnchor");
  v149 = objc_msgSend(v147, "constraintEqualToAnchor:constant:", v148, v1);

  *(_QWORD *)(v143 + 40) = v149;
  v150 = objc_msgSend(v218, "trailingAnchor");
  v151 = objc_msgSend(v217, "trailingAnchor");
  v152 = objc_msgSend(v150, "constraintEqualToAnchor:constant:", v151, -v1);

  *(_QWORD *)(v143 + 48) = v152;
  v153 = objc_msgSend(v218, "bottomAnchor");
  v154 = objc_msgSend(v217, "bottomAnchor");
  v155 = objc_msgSend(v153, "constraintEqualToAnchor:constant:", v154, -*(double *)&qword_1005F4D80);

  *(_QWORD *)(v143 + 56) = v155;
  specialized Array._endMutation()(v156);
  v157 = *(_QWORD *)&v217[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_secondaryActionButtonOnlyShowingConstraints];
  *(_QWORD *)&v217[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_secondaryActionButtonOnlyShowingConstraints] = v143;
  swift_bridgeObjectRelease(v157);
  v158 = swift_allocObject(v222, 120, 7);
  *(_OWORD *)(v158 + 16) = xmmword_10048C420;
  v159 = objc_msgSend(v216, "topAnchor");
  v160 = objc_msgSend(v219, "bottomAnchor");
  v161 = objc_msgSend(v159, "constraintEqualToAnchor:constant:", v160, *(double *)&qword_1005F4D78);

  *(_QWORD *)(v158 + 32) = v161;
  v162 = objc_msgSend(v216, "leadingAnchor");
  v163 = objc_msgSend(v217, "leadingAnchor");
  v164 = objc_msgSend(v162, "constraintEqualToAnchor:constant:", v163, v1);

  *(_QWORD *)(v158 + 40) = v164;
  v165 = objc_msgSend(v216, "trailingAnchor");
  v166 = objc_msgSend(v217, "trailingAnchor");
  v167 = objc_msgSend(v165, "constraintEqualToAnchor:constant:", v166, -v1);

  *(_QWORD *)(v158 + 48) = v167;
  v168 = objc_msgSend(v212, "topAnchor");
  v169 = objc_msgSend(v216, "bottomAnchor");
  v170 = objc_msgSend(v168, "constraintEqualToAnchor:constant:", v169, *(double *)&qword_1005F5970);

  *(_QWORD *)(v158 + 56) = v170;
  v171 = objc_msgSend(v212, "leadingAnchor");
  v172 = objc_msgSend(v217, "leadingAnchor");
  v173 = objc_msgSend(v171, "constraintEqualToAnchor:constant:", v172, v1);

  *(_QWORD *)(v158 + 64) = v173;
  v174 = objc_msgSend(v212, "trailingAnchor");
  v175 = objc_msgSend(v217, "trailingAnchor");
  v176 = objc_msgSend(v174, "constraintEqualToAnchor:", v175);

  *(_QWORD *)(v158 + 72) = v176;
  v177 = objc_msgSend(v212, "heightAnchor");
  v178 = objc_msgSend(v214, "mainScreen");
  objc_msgSend(v178, "scale");
  v180 = v179;

  v181 = objc_msgSend(v177, "constraintEqualToConstant:", 1.0 / v180);
  *(_QWORD *)(v158 + 80) = v181;
  v182 = objc_msgSend(v218, "topAnchor");
  v183 = objc_msgSend(v212, "bottomAnchor");
  v184 = objc_msgSend(v182, "constraintEqualToAnchor:constant:", v183, *(double *)&qword_1005F5970);

  *(_QWORD *)(v158 + 88) = v184;
  v185 = objc_msgSend(v218, "leadingAnchor");
  v186 = objc_msgSend(v217, "leadingAnchor");
  v187 = objc_msgSend(v185, "constraintEqualToAnchor:constant:", v186, v1);

  *(_QWORD *)(v158 + 96) = v187;
  v188 = objc_msgSend(v218, "trailingAnchor");
  v189 = objc_msgSend(v217, "trailingAnchor");
  v190 = objc_msgSend(v188, "constraintEqualToAnchor:constant:", v189, -v1);

  *(_QWORD *)(v158 + 104) = v190;
  v191 = objc_msgSend(v218, "bottomAnchor");
  v192 = objc_msgSend(v217, "bottomAnchor");
  v193 = objc_msgSend(v191, "constraintEqualToAnchor:constant:", v192, -*(double *)&qword_1005F4D80);

  *(_QWORD *)(v158 + 112) = v193;
  specialized Array._endMutation()(v194);
  v195 = *(_QWORD *)&v217[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_bothActionButtonsShowingConstraints];
  *(_QWORD *)&v217[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_bothActionButtonsShowingConstraints] = v158;
  swift_bridgeObjectRelease(v195);
  v196 = swift_allocObject(v222, 40, 7);
  *(_OWORD *)(v196 + 16) = xmmword_100481B00;
  v197 = objc_msgSend(v219, "bottomAnchor");
  v198 = objc_msgSend(v217, "bottomAnchor");
  if (qword_1005D2018 != -1)
    swift_once(&qword_1005D2018, sub_1003A66B0);
  v199 = objc_msgSend(v197, "constraintEqualToAnchor:constant:", v198, -*(double *)&qword_1005F5ED8);

  *(_QWORD *)(v196 + 32) = v199;
  specialized Array._endMutation()(v200);
  v201 = *(_QWORD *)&v217[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_bothActionButtonHiddenConstraints];
  *(_QWORD *)&v217[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_bothActionButtonHiddenConstraints] = v196;
  v202 = objc_msgSend(v216, "titleLabel", swift_bridgeObjectRelease(v201).n128_f64[0]);
  if (v202
    && (v203 = v202, v204 = objc_msgSend(v202, "text"), v203, v204))
  {

    v205 = 0;
  }
  else
  {
    v205 = 1;
  }
  v217[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isActionButtonHidden] = v205;
  sub_1003A66DC();
  v206 = objc_msgSend(v218, "titleLabel");
  if (v206
    && (v207 = v206, v208 = objc_msgSend(v206, "text"), v207, v208))
  {

    v209 = 0;
  }
  else
  {
    v209 = 1;
  }
  v217[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isSecondaryActionButtonHidden] = v209;
  sub_1003A6944();
}

void sub_1003A66B0()
{
  qword_1005F5ED8 = 0;
}

void sub_1003A66DC()
{
  unsigned __int8 *v0;
  int v1;
  int v2;
  void *v3;
  uint64_t *v4;
  BOOL v5;
  uint64_t v6;
  uint64_t *v7;
  Class isa;
  uint64_t v9;
  Class v10;
  uint64_t v11;
  Class v12;
  uint64_t v13;
  uint64_t v14;
  Class v15;
  uint64_t v16;
  Class v17;

  v1 = v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isActionButtonHidden];
  v2 = v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isSecondaryActionButtonHidden];
  v3 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_100048C64();
  if (v1 == 1)
  {
    v4 = &OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_actionButtonOnlyShowingConstraints;
    v5 = v2 == 0;
    if (!v2)
      v4 = &OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_bothActionButtonHiddenConstraints;
    v6 = *(_QWORD *)&v0[*v4];
    if (v5)
      v7 = &OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_secondaryActionButtonOnlyShowingConstraints;
    else
      v7 = &OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_bothActionButtonHiddenConstraints;
    swift_bridgeObjectRetain(v6);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v3, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v6).n128_f64[0]);

    v9 = *(_QWORD *)&v0[*v7];
    swift_bridgeObjectRetain(v9);
    v10 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v3, "activateConstraints:", v10, swift_bridgeObjectRelease(v9).n128_f64[0]);

    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_actionButton], "removeFromSuperview");
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_buttonSeparator], "removeFromSuperview");
  }
  else
  {
    if (v2)
    {
      v11 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_bothActionButtonHiddenConstraints];
      swift_bridgeObjectRetain(v11);
      v12 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v3, "deactivateConstraints:", v12, swift_bridgeObjectRelease(v11).n128_f64[0]);

      objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_actionButton]);
      v13 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_actionButtonOnlyShowingConstraints;
    }
    else
    {
      v14 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_secondaryActionButtonOnlyShowingConstraints];
      swift_bridgeObjectRetain(v14);
      v15 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v3, "deactivateConstraints:", v15, swift_bridgeObjectRelease(v14).n128_f64[0]);

      objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_actionButton]);
      objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_buttonSeparator]);
      v13 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_bothActionButtonsShowingConstraints;
    }
    v16 = *(_QWORD *)&v0[v13];
    swift_bridgeObjectRetain(v16);
    v17 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v3, "activateConstraints:", v17, swift_bridgeObjectRelease(v16).n128_f64[0]);

  }
}

void sub_1003A6944()
{
  unsigned __int8 *v0;
  int v1;
  int v2;
  void *v3;
  uint64_t *v4;
  BOOL v5;
  uint64_t v6;
  uint64_t *v7;
  Class isa;
  uint64_t v9;
  Class v10;
  uint64_t v11;
  Class v12;
  uint64_t v13;
  uint64_t v14;
  Class v15;
  uint64_t v16;
  Class v17;

  v1 = v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isSecondaryActionButtonHidden];
  v2 = v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isActionButtonHidden];
  v3 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_100048C64();
  if (v1 == 1)
  {
    v4 = &OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_secondaryActionButtonOnlyShowingConstraints;
    v5 = v2 == 0;
    if (!v2)
      v4 = &OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_bothActionButtonsShowingConstraints;
    v6 = *(_QWORD *)&v0[*v4];
    if (v5)
      v7 = &OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_actionButtonOnlyShowingConstraints;
    else
      v7 = &OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_bothActionButtonHiddenConstraints;
    swift_bridgeObjectRetain(v6);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v3, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v6).n128_f64[0]);

    v9 = *(_QWORD *)&v0[*v7];
    swift_bridgeObjectRetain(v9);
    v10 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v3, "activateConstraints:", v10, swift_bridgeObjectRelease(v9).n128_f64[0]);

    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_secondaryActionButton], "removeFromSuperview");
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_buttonSeparator], "removeFromSuperview");
  }
  else
  {
    if (v2)
    {
      v11 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_bothActionButtonHiddenConstraints];
      swift_bridgeObjectRetain(v11);
      v12 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v3, "deactivateConstraints:", v12, swift_bridgeObjectRelease(v11).n128_f64[0]);

      objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_secondaryActionButton]);
      v13 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_secondaryActionButtonOnlyShowingConstraints;
    }
    else
    {
      v14 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_actionButtonOnlyShowingConstraints];
      swift_bridgeObjectRetain(v14);
      v15 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v3, "deactivateConstraints:", v15, swift_bridgeObjectRelease(v14).n128_f64[0]);

      objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_secondaryActionButton]);
      objc_msgSend(v0, "addSubview:", *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_buttonSeparator]);
      v13 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_bothActionButtonsShowingConstraints;
    }
    v16 = *(_QWORD *)&v0[v13];
    swift_bridgeObjectRetain(v16);
    v17 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v3, "activateConstraints:", v17, swift_bridgeObjectRelease(v16).n128_f64[0]);

  }
}

void sub_1003A6BB4()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;
  uint64_t v3;
  NSString v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  BOOL v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  Class isa;
  uint64_t v14;
  Class v15;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitleLabel);
  v2 = (_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitle);
  v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitle + 8);
  swift_bridgeObjectRetain(v3);
  v4 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setText:", v4, swift_bridgeObjectRelease(v3).n128_f64[0]);

  v5 = v2[1];
  if ((v5 & 0x2000000000000000) != 0)
    v6 = HIBYTE(v5) & 0xF;
  else
    v6 = *v2 & 0xFFFFFFFFFFFFLL;
  v7 = (void *)objc_opt_self(NSLayoutConstraint);
  sub_100048C64();
  v8 = v6 == 0;
  if (v6)
    v9 = &OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitleHiddenConstraints;
  else
    v9 = &OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitleShowingConstraints;
  v10 = *v9;
  v11 = *(_QWORD *)(v0 + v10);
  if (v8)
    v12 = &OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitleHiddenConstraints;
  else
    v12 = &OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitleShowingConstraints;
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + v10));
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v7, "deactivateConstraints:", isa, swift_bridgeObjectRelease(v11).n128_f64[0]);

  v14 = *(_QWORD *)(v0 + *v12);
  swift_bridgeObjectRetain(v14);
  v15 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v7, "activateConstraints:", v15, swift_bridgeObjectRelease(v14).n128_f64[0]);

}

void sub_1003A6D5C(uint64_t a1)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  char **v6;
  id v7;
  objc_super v8;

  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for FMPlatterImageAndButtonGroupView();
  objc_msgSendSuper2(&v8, "traitCollectionDidChange:", a1);
  if ((*((_BYTE *)v1 + OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isTransparent) & 1) == 0)
  {
    if (qword_1005D1E80 != -1)
      swift_once(&qword_1005D1E80, sub_100008974);
    v3 = objc_msgSend(v1, "traitCollection");
    v4 = objc_msgSend(v3, "userInterfaceStyle");
    v5 = (void *)objc_opt_self(UIColor);
    v6 = &selRef_tertiarySystemFillColor;
    if (v4 != (id)2)
      v6 = &selRef_whiteColor;
    v7 = objc_msgSend(v5, *v6);

    objc_msgSend(v1, "setBackgroundColor:", v7);
  }
}

id sub_1003A6EE0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPlatterImageAndButtonGroupView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMPlatterImageAndButtonGroupView()
{
  return objc_opt_self(_TtC6FindMy32FMPlatterImageAndButtonGroupView);
}

void sub_1003A703C()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v1 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_titleLabel;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v2 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitleLabel;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v3 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_contentStackView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v4 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_actionButton;
  v5 = (void *)objc_opt_self(UIButton);
  *(_QWORD *)&v0[v4] = objc_msgSend(v5, "buttonWithType:", 1);
  v6 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_secondaryActionButton;
  *(_QWORD *)&v0[v6] = objc_msgSend(v5, "buttonWithType:", 1);
  v7 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_topSeparator;
  *(_QWORD *)&v0[v7] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v8 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_buttonSeparator;
  *(_QWORD *)&v0[v8] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v9 = OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_iconView;
  *(_QWORD *)&v0[v9] = objc_msgSend(objc_allocWithZone((Class)UIImageView), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_actionButtonOnlyShowingConstraints] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_secondaryActionButtonOnlyShowingConstraints] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_bothActionButtonsShowingConstraints] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_bothActionButtonHiddenConstraints] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitleShowingConstraints] = &_swiftEmptyArrayStorage;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitleHiddenConstraints] = &_swiftEmptyArrayStorage;
  v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isActionEnabled] = 1;
  v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isSecondaryActionEnabled] = 1;
  v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isActionButtonHidden] = 1;
  v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_isSecondaryActionButtonHidden] = 1;
  v10 = &v0[OBJC_IVAR____TtC6FindMy32FMPlatterImageAndButtonGroupView_subtitle];
  *v10 = 0;
  v10[1] = 0xE000000000000000;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMPlatterImageAndButtonGroupView.swift", 45, 2, 164, 0);
  __break(1u);
}

id sub_1003A72A0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMCardContainerView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t storeEnumTagSinglePayload for FMCardContainerAppearance(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1003A7364 + 4 * byte_10048EA35[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1003A7398 + 4 * asc_10048EA30[v4]))();
}

uint64_t sub_1003A7398(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003A73A0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003A73A8);
  return result;
}

uint64_t sub_1003A73B4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003A73BCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1003A73C0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003A73C8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMCardContainerAppearance()
{
  return &type metadata for FMCardContainerAppearance;
}

unint64_t sub_1003A73E8()
{
  unint64_t result;

  result = qword_1005E24A0;
  if (!qword_1005E24A0)
  {
    result = swift_getWitnessTable(&unk_10048EACC, &type metadata for FMCardContainerAppearance);
    atomic_store(result, (unint64_t *)&qword_1005E24A0);
  }
  return result;
}

void sub_1003A742C()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0[OBJC_IVAR____TtC6FindMy19FMCardContainerView_appearance] = 0;
  v1 = OBJC_IVAR____TtC6FindMy19FMCardContainerView_bluredBackground;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone((Class)UIVisualEffectView), "init");
  v2 = OBJC_IVAR____TtC6FindMy19FMCardContainerView_darkeningView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v3 = OBJC_IVAR____TtC6FindMy19FMCardContainerView_grabber;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)_UIGrabber), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMCardContainerView.swift", 32, 2, 47, 0);
  __break(1u);
}

uint64_t sub_1003A7508(uint64_t a1, unint64_t a2, Class isa)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t result;
  uint64_t v19;
  NSString v20;
  objc_class *v21;
  id v22;
  objc_class *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  objc_super v27;

  v4 = v3;
  v8 = type metadata accessor for Logger(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v12 = sub_100056D88(v8, (uint64_t)qword_1005F5748);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  v13 = swift_bridgeObjectRetain_n(a2, 2);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter(v14);
  if (!os_log_type_enabled(v14, v15))
  {

    swift_bridgeObjectRelease_n(a2, 2);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    if (!a2)
    {
      v20 = 0;
      if (!isa)
        goto LABEL_9;
      goto LABEL_8;
    }
LABEL_7:
    v20 = String._bridgeToObjectiveC()();
    if (!isa)
    {
LABEL_9:
      v21 = (objc_class *)type metadata accessor for FMApplication();
      v27.receiver = v4;
      v27.super_class = v21;
      v22 = objc_msgSendSuper2(&v27, "runTest:options:", v20, isa);

      return (uint64_t)v22;
    }
LABEL_8:
    isa = Dictionary._bridgeToObjectiveC()().super.isa;
    goto LABEL_9;
  }
  v23 = isa;
  v24 = v4;
  v16 = a1;
  v17 = (uint8_t *)swift_slowAlloc(12, -1);
  result = swift_slowAlloc(32, -1);
  v26 = result;
  *(_DWORD *)v17 = 136315138;
  if (a2)
  {
    v19 = result;
    swift_bridgeObjectRetain(a2);
    v25 = sub_100056DA0(v16, a2, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v25, &v26);
    swift_bridgeObjectRelease_n(a2, 3);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "FMApplication: runTest: %s ", v17, 0xCu);
    swift_arrayDestroy(v19, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v19, -1, -1);
    swift_slowDealloc(v17, -1, -1);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    isa = v23;
    v4 = v24;
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

id sub_1003A7854()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMApplication();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1003A794C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  Swift::String v5;
  Swift::String v6;
  void *object;
  NSString v8;
  uint64_t result;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  Swift::String v15;

  v2 = v1;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v4 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v15._countAndFlagsBits = 0xD000000000000028;
  v15._object = (void *)0x80000001004C4490;
  v5._object = (void *)0x80000001004C4470;
  v5._countAndFlagsBits = 0xD000000000000016;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v15)._object;

  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(a1, "setPlaceholder:", v8, swift_bridgeObjectRelease(object).n128_f64[0]);

  result = *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchResultsTableView);
  if (result)
  {
    objc_msgSend((id)result, "setHidden:", 0);
    v10 = objc_msgSend(a1, "text");
    if (v10)
    {
      v11 = v10;
      v12 = static String._unconditionallyBridgeFromObjectiveC(_:)(v10);
      v14 = v13;

      sub_1003B0D40(v12, v14);
      swift_bridgeObjectRelease(v14);
    }
    return 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1003A7B5C(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id result;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  __n128 v14;
  uint64_t v15;

  v3 = type metadata accessor for FMFLocationAlertAddressType(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, "resignFirstResponder");
  result = objc_msgSend(a1, "text");
  if (result)
  {
    v8 = result;
    v9 = static String._unconditionallyBridgeFromObjectiveC(_:)(result);
    v11 = v10;

    v12 = objc_msgSend(v1, "navigationItem");
    v13 = objc_msgSend(v12, "searchController");

    if (v13)
    {
      objc_msgSend(v13, "setActive:", 0);

    }
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for FMFLocationAlertAddressType.custom(_:), v3);
    sub_1003B8894(v9, v11, (uint64_t)v6, 0);
    v14 = swift_bridgeObjectRelease(v11);
    return (id)(*(uint64_t (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v3, v14);
  }
  return result;
}

void sub_1003A7CFC(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v3;
  double v4;
  void *v5;
  id v6;
  id v7;

  objc_msgSend(a1, "setText:", 0);
  v2 = &v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapLastSearchedQuery];
  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapLastSearchedQuery + 8];
  *(_QWORD *)v2 = 0;
  *((_QWORD *)v2 + 1) = 0;
  *(_QWORD *)&v4 = swift_bridgeObjectRelease(v3).n128_u64[0];
  v5 = *(void **)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchResultsTableView];
  if (v5)
  {
    objc_msgSend(v5, "setHidden:", 1, v4);
    sub_1003B0D40(0, 0xE000000000000000);
    v6 = objc_msgSend(v1, "navigationController");
    if (v6)
    {
      v7 = v6;
      objc_msgSend(v6, "setToolbarHidden:animated:", 0, 0);

    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1003A7E0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32[3];

  v2 = v1;
  v4 = sub_100053F2C((uint64_t *)&unk_1005D72C0);
  __chkstk_darwin(v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FindingMode(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v27 - v12;
  if (qword_1005D2068 != -1)
    swift_once(&qword_1005D2068, sub_1003CB878);
  v14 = type metadata accessor for Logger(0);
  sub_100056D88(v14, (uint64_t)qword_1005F5FF8);
  v15 = sub_1003A9F7C(a1, (uint64_t)v13);
  v16 = Logger.logObject.getter(v15);
  v17 = static os_log_type_t.default.getter(v16);
  if (os_log_type_enabled(v16, v17))
  {
    v29 = a1;
    v18 = swift_slowAlloc(12, -1);
    v30 = v2;
    v19 = (uint8_t *)v18;
    v20 = swift_slowAlloc(32, -1);
    v32[0] = v20;
    v28 = v8;
    *(_DWORD *)v19 = 136315138;
    sub_1003A9F7C((uint64_t)v13, (uint64_t)v11);
    v21 = String.init<A>(describing:)(v11, v7);
    v23 = v22;
    v31 = sub_100056DA0(v21, v22, v32);
    v8 = v28;
    a1 = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v31, v32);
    swift_bridgeObjectRelease(v23);
    sub_1003A9D98((uint64_t)v13);
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "🧭 FMFindingExperienceCoordinator: Did update finding experience mode: %s", v19, 0xCu);
    swift_arrayDestroy(v20, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v20, -1, -1);
    v24 = v19;
    v2 = v30;
    swift_slowDealloc(v24, -1, -1);
  }
  else
  {
    sub_1003A9D98((uint64_t)v13);
  }

  sub_1003A9F7C(a1, (uint64_t)v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  v25 = v2 + OBJC_IVAR____TtC6FindMy30FMFindingExperienceCoordinator_mode;
  swift_beginAccess(v25, v32, 33, 0);
  sub_1003A9FC0((uint64_t)v6, v25);
  return swift_endAccess(v32);
}

void sub_1003A80B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  _QWORD v16[5];
  uint64_t v17;

  v1 = v0;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100056D88(v2, (uint64_t)qword_1005F5748);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMFindingExperienceCoordinator: Creating spBTFindingSession", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = objc_msgSend(objc_allocWithZone((Class)SPBTFindingSessionConfig), "initWithOptInRawRSSIMeasurement:", 0);
  v8 = objc_msgSend(objc_allocWithZone((Class)SPBTFindingSession), "initWithConfig:", v7);

  v9 = OBJC_IVAR____TtC6FindMy30FMFindingExperienceCoordinator_spFindingSession;
  v10 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy30FMFindingExperienceCoordinator_spFindingSession);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy30FMFindingExperienceCoordinator_spFindingSession) = v8;

  v11 = *(void **)(v1 + v9);
  if (v11)
  {
    v12 = swift_allocObject(&unk_10055FEA8, 24, 7);
    swift_unknownObjectWeakInit(v12 + 16);
    v16[4] = sub_1003A9D48;
    v17 = v12;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 1107296256;
    v16[2] = sub_100037DF8;
    v16[3] = &unk_10055FEC0;
    v13 = _Block_copy(v16);
    v14 = v17;
    v15 = v11;
    objc_msgSend(v15, "setSessionInvalidatedCallback:", v13, swift_release(v14).n128_f64[0]);
    _Block_release(v13);

  }
}

uint64_t sub_1003A8284(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t result;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  NSObject *v33;
  os_log_type_t v34;
  _BOOL4 v35;
  void **p_vtable;
  uint8_t *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(_QWORD, _QWORD, _QWORD);
  int EnumCaseMultiPayload;
  uint64_t v50;
  void (*v51)(_QWORD, _QWORD, _QWORD);
  NSObject *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  __n128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  NSObject *v74;
  uint8_t *v75;
  NSObject *v76;
  NSObject *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  __n128 v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  __n128 v87;
  NSObject *v88;
  uint64_t v89;
  char *v90;
  __n128 v91;
  uint64_t v92;
  NSObject *v93;
  os_log_type_t v94;
  uint8_t *v95;
  uint8_t *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __n128 v103;
  NSObject *v104;
  os_log_type_t v105;
  uint8_t *v106;
  uint8_t *v107;
  __n128 v108;
  int v109;
  uint64_t v110;
  NSObject *v111;
  uint64_t v112;
  char *v113;
  __n128 v114;
  uint64_t v115;
  NSObject *v116;
  os_log_type_t v117;
  uint8_t *v118;
  uint8_t *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  NSObject *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  __n128 v132;
  NSObject *v133;
  os_log_type_t v134;
  _BOOL4 v135;
  uint64_t v136;
  uint64_t v137;
  uint8_t *v138;
  uint8_t *v139;
  _QWORD v140[2];
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  char *v150;
  char *v151;
  char *v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  _QWORD *v156;
  uint64_t v157;
  _BYTE v158[32];
  uint64_t v159[3];
  char v160[32];

  v2 = sub_100053F2C((uint64_t *)&unk_1005D53A0);
  __chkstk_darwin(v2);
  v152 = (char *)v140 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100053F2C(&qword_1005D6710);
  v5 = __chkstk_darwin(v4);
  v149 = (char *)v140 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v151 = (char *)v140 - v7;
  v8 = type metadata accessor for FMIPDevice(0);
  v153 = *(_QWORD *)(v8 - 8);
  v9 = __chkstk_darwin(v8);
  v148 = (char *)v140 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v150 = (char *)v140 - v11;
  v155 = type metadata accessor for UUID(0);
  v12 = *(_QWORD *)(v155 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  v14 = __chkstk_darwin(v155);
  v15 = (char *)v140 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __chkstk_darwin(v14);
  v18 = (char *)v140 - v17;
  __chkstk_darwin(v16);
  v154 = (char *)v140 - v19;
  v20 = sub_100053F2C((uint64_t *)&unk_1005D72C0);
  v21 = __chkstk_darwin(v20);
  v156 = (_QWORD *)((char *)v140 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = __chkstk_darwin(v21);
  v25 = (char *)v140 - v24;
  __chkstk_darwin(v23);
  v27 = (char *)v140 - v26;
  swift_beginAccess(a1 + 16, v160, 0, 0);
  result = swift_unknownObjectWeakLoadStrong(a1 + 16);
  if (result)
  {
    v29 = (void *)result;
    v142 = v13;
    v146 = v8;
    sub_1003A80B0();
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v30 = type metadata accessor for Logger(0);
    v31 = sub_100056D88(v30, (uint64_t)qword_1005F5748);
    v32 = v29;
    v147 = v31;
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.default.getter(v33);
    v35 = os_log_type_enabled(v33, v34);
    p_vtable = _TtC6FindMy22FMLocationSubscription.vtable;
    v143 = v18;
    v144 = v15;
    if (v35)
    {
      v37 = (uint8_t *)swift_slowAlloc(12, -1);
      v38 = swift_slowAlloc(32, -1);
      v145 = v12;
      v141 = v38;
      v159[0] = v38;
      *(_DWORD *)v37 = 136315138;
      v140[1] = v37 + 4;
      v39 = v25;
      v40 = (char *)v32 + OBJC_IVAR____TtC6FindMy30FMFindingExperienceCoordinator_mode;
      swift_beginAccess((char *)v32 + OBJC_IVAR____TtC6FindMy30FMFindingExperienceCoordinator_mode, v158, 0, 0);
      v41 = (uint64_t)v40;
      v25 = v39;
      sub_1003A9D50(v41, (uint64_t)v27);
      v42 = String.init<A>(describing:)(v27, v20);
      v44 = v43;
      v157 = sub_100056DA0(v42, v43, v159);
      p_vtable = (void **)(_TtC6FindMy22FMLocationSubscription + 24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v157, v158);

      swift_bridgeObjectRelease(v44);
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "FMFindingExperienceCoordinator: SPBTFindingSession invalidated, determining whether to re-set up for mode: %s", v37, 0xCu);
      v45 = v141;
      swift_arrayDestroy(v141, 1, (char *)&type metadata for Any + 8);
      v12 = v145;
      swift_slowDealloc(v45, -1, -1);
      swift_slowDealloc(v37, -1, -1);

    }
    else
    {

    }
    v46 = (uint64_t)p_vtable[192] + (_QWORD)v32;
    swift_beginAccess(v46, v159, 0, 0);
    sub_1003A9D50(v46, (uint64_t)v25);
    v47 = type metadata accessor for FindingMode(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 48))(v25, 1, v47) == 1)
    {

    }
    else
    {
      v48 = (void (*)(_QWORD, _QWORD, _QWORD))v156;
      sub_1003A9D50((uint64_t)v25, (uint64_t)v156);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v48, v47);
      if (EnumCaseMultiPayload == 1)
      {
        v65 = *v156;
        v66 = dispatch thunk of FMFindingSession.findingSessionIdentifier.getter();
        v68 = v67;
        v69 = (uint64_t)v152;
        UUID.init(uuidString:)(v66, v67, v70);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v69, 1, v155) == 1)
        {
          swift_bridgeObjectRelease(v68);
          v71 = sub_1000051EC(v69, (uint64_t *)&unk_1005D53A0);
          v72 = Logger.logObject.getter(v71);
          v73 = static os_log_type_t.default.getter(v72);
          if (os_log_type_enabled(v72, v73))
          {
            v74 = v32;
            v75 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v75 = 0;
            _os_log_impl((void *)&_mh_execute_header, v72, v73, "FMFindingExperienceCoordinator: Currently in proximity finding mode, no findable. Returning.", v75, 2u);
            swift_slowDealloc(v75, -1, -1);
            v76 = v74;
          }
          else
          {
            v76 = v72;
            v72 = v32;
          }

          swift_release(v65);
        }
        else
        {
          v145 = v12;
          v156 = *(_QWORD **)(v12 + 32);
          ((void (*)(char *, uint64_t, uint64_t))v156)(v144, v69, v155);
          v77 = v32;
          v78 = (*(_QWORD **)((char *)&v32->isa + OBJC_IVAR____TtC6FindMy30FMFindingExperienceCoordinator_mediator))[3];
          v79 = swift_retain(v78);
          v80 = FMIPManager.devices.getter(v79);
          swift_bridgeObjectRetain(v68);
          v81 = sub_1003F26FC(v80, v66, v68);
          swift_bridgeObjectRelease(v80);
          v82 = swift_bridgeObjectRelease(v68);
          if (v81[2])
          {
            v83 = v153;
            v84 = v149;
            v85 = v146;
            (*(void (**)(char *, unint64_t, uint64_t, __n128))(v153 + 16))(v149, (unint64_t)v81+ ((*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80)), v146, v82);
            v86 = 0;
          }
          else
          {
            v86 = 1;
            v85 = v146;
            v83 = v153;
            v84 = v149;
          }
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v83 + 56))(v84, v86, 1, v85);
          swift_release(v78);
          v108 = swift_bridgeObjectRelease(v81);
          v109 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v83 + 48))(v84, 1, v85, v108);
          v110 = (uint64_t)v84;
          v111 = v77;
          if (v109 == 1)
          {
            swift_bridgeObjectRelease(v68);
            v112 = sub_1000051EC(v110, &qword_1005D6710);
          }
          else
          {
            v113 = v148;
            v114.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(v83 + 32))(v148, v110, v85);
            v115 = FMIPDevice.isLocalFindable.getter(v114);
            if ((v115 & 1) != 0)
            {
              v116 = Logger.logObject.getter(v115);
              v117 = static os_log_type_t.default.getter(v116);
              if (os_log_type_enabled(v116, v117))
              {
                v118 = (uint8_t *)swift_slowAlloc(2, -1);
                *(_WORD *)v118 = 0;
                _os_log_impl((void *)&_mh_execute_header, v116, v117, "FMFindingExperienceCoordinator: Currently in proximity finding mode, re-running start finding", v118, 2u);
                v119 = v118;
                v111 = v77;
                swift_slowDealloc(v119, -1, -1);
              }

              v120 = swift_allocObject(&unk_10055FEA8, 24, 7);
              swift_unknownObjectWeakInit(v120 + 16);
              v121 = v145;
              v122 = v143;
              (*(void (**)(char *, char *, uint64_t))(v145 + 16))(v143, v144, v155);
              v123 = *(unsigned __int8 *)(v121 + 80);
              v124 = (v123 + 24) & ~v123;
              v125 = (v142 + v124 + 7) & 0xFFFFFFFFFFFFFFF8;
              v126 = v111;
              v127 = swift_allocObject(&unk_10055FEF8, v125 + 16, v123 | 7);
              *(_QWORD *)(v127 + 16) = v120;
              v128 = v122;
              v129 = v155;
              ((void (*)(uint64_t, char *, uint64_t))v156)(v127 + v124, v128, v155);
              v130 = (uint64_t *)(v127 + v125);
              *v130 = v66;
              v130[1] = v68;
              swift_retain(v120);
              v131 = (uint64_t)v144;
              sub_100163660((uint64_t)v144, (uint64_t)sub_1003A9E68, v127);

              swift_release(v65);
              v132 = swift_release(v127);
              (*(void (**)(char *, uint64_t, __n128))(v153 + 8))(v148, v146, v132);
              (*(void (**)(uint64_t, uint64_t))(v145 + 8))(v131, v129);
              swift_release(v120);
              return sub_1000051EC((uint64_t)v25, (uint64_t *)&unk_1005D72C0);
            }
            (*(void (**)(char *, uint64_t))(v83 + 8))(v113, v85);
            swift_bridgeObjectRelease(v68);
          }
          v133 = Logger.logObject.getter(v112);
          v134 = static os_log_type_t.default.getter(v133);
          v135 = os_log_type_enabled(v133, v134);
          v136 = v145;
          v137 = (uint64_t)v144;
          if (v135)
          {
            v138 = (uint8_t *)swift_slowAlloc(2, -1);
            *(_WORD *)v138 = 0;
            _os_log_impl((void *)&_mh_execute_header, v133, v134, "FMFindingExperienceCoordinator: Currently in proximity finding mode, but device isn't local findable. Returning.", v138, 2u);
            v139 = v138;
            v111 = v77;
            swift_slowDealloc(v139, -1, -1);
          }

          swift_release(v65);
          (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v137, v155);
        }
      }
      else if (EnumCaseMultiPayload)
      {

        sub_1003A9D98((uint64_t)v156);
      }
      else
      {
        v50 = v12;
        v51 = (void (*)(_QWORD, _QWORD, _QWORD))v156;
        v156 = *(_QWORD **)(v12 + 32);
        ((void (*)(char *, _QWORD, uint64_t))v156)(v154, v51, v155);
        v52 = v32;
        v53 = (*(_QWORD **)((char *)&v32->isa + OBJC_IVAR____TtC6FindMy30FMFindingExperienceCoordinator_mediator))[3];
        v54 = swift_retain(v53);
        v55 = UUID.uuidString.getter(v54);
        v57 = v56;
        v58 = FMIPManager.devices.getter(v55);
        swift_bridgeObjectRetain(v57);
        v59 = sub_1003F26FC(v58, v55, v57);
        swift_bridgeObjectRelease(v58);
        v60 = swift_bridgeObjectRelease(v57);
        if (v59[2])
        {
          v61 = v153;
          v62 = (uint64_t)v151;
          v63 = v146;
          (*(void (**)(char *, unint64_t, uint64_t, __n128))(v153 + 16))(v151, (unint64_t)v59+ ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80)), v146, v60);
          v64 = 0;
        }
        else
        {
          v64 = 1;
          v63 = v146;
          v61 = v153;
          v62 = (uint64_t)v151;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56))(v62, v64, 1, v63);
        swift_bridgeObjectRelease(v57);
        swift_bridgeObjectRelease(v59);
        v87 = swift_release(v53);
        v88 = v52;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v61 + 48))(v62, 1, v63, v87) == 1)
        {
          v89 = sub_1000051EC(v62, &qword_1005D6710);
        }
        else
        {
          v90 = v150;
          v91.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(v61 + 32))(v150, v62, v63);
          v92 = FMIPDevice.isLocalFindable.getter(v91);
          if ((v92 & 1) != 0)
          {
            v93 = Logger.logObject.getter(v92);
            v94 = static os_log_type_t.default.getter(v93);
            if (os_log_type_enabled(v93, v94))
            {
              v95 = (uint8_t *)swift_slowAlloc(2, -1);
              *(_WORD *)v95 = 0;
              _os_log_impl((void *)&_mh_execute_header, v93, v94, "FMFindingExperienceCoordinator: Currently in proximity discovery, re-running start finding", v95, 2u);
              v96 = v95;
              v88 = v52;
              swift_slowDealloc(v96, -1, -1);
            }

            v97 = v143;
            v99 = (uint64_t)v154;
            v98 = v155;
            (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v143, v154, v155);
            v100 = *(unsigned __int8 *)(v50 + 80);
            v101 = (v100 + 16) & ~v100;
            v102 = swift_allocObject(&unk_10055FF20, v101 + v142, v100 | 7);
            ((void (*)(uint64_t, char *, uint64_t))v156)(v102 + v101, v97, v98);
            sub_100163660(v99, (uint64_t)sub_1003A9F30, v102);

            v103 = swift_release(v102);
            (*(void (**)(char *, uint64_t, __n128))(v61 + 8))(v150, v63, v103);
            (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v99, v98);
            return sub_1000051EC((uint64_t)v25, (uint64_t *)&unk_1005D72C0);
          }
          v89 = (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v90, v63);
        }
        v104 = Logger.logObject.getter(v89);
        v105 = static os_log_type_t.default.getter(v104);
        if (os_log_type_enabled(v104, v105))
        {
          v106 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v106 = 0;
          _os_log_impl((void *)&_mh_execute_header, v104, v105, "FMFindingExperienceCoordinator: Currently in proximity finding mode, but device isn't local findable. Returning.", v106, 2u);
          v107 = v106;
          v88 = v52;
          swift_slowDealloc(v107, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v50 + 8))(v154, v155);
      }
    }
    return sub_1000051EC((uint64_t)v25, (uint64_t *)&unk_1005D72C0);
  }
  return result;
}

void sub_1003A8EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FMIPActionStatus(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, enum case for FMIPActionStatus.success(_:), v9);
  v13 = sub_100008000(&qword_1005D9928, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPActionStatus, (uint64_t)&protocol conformance descriptor for FMIPActionStatus);
  dispatch thunk of RawRepresentable.rawValue.getter(&v37, v9, v13);
  dispatch thunk of RawRepresentable.rawValue.getter(&v36, v9, v13);
  v15 = v36;
  v14 = v37;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (v14 == v15)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v16 = type metadata accessor for Logger(0);
    sub_100056D88(v16, (uint64_t)qword_1005F5748);
    v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a3, v5);
    v18 = Logger.logObject.getter(v17);
    v19 = static os_log_type_t.default.getter(v18);
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc(12, -1);
      v21 = swift_slowAlloc(32, -1);
      v37 = v21;
      *(_DWORD *)v20 = 136315138;
      v22 = sub_100008000((unint64_t *)&qword_1005DA7C0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
      v23 = dispatch thunk of CustomStringConvertible.description.getter(v5, v22);
      v25 = v24;
      v36 = sub_100056DA0(v23, v24, &v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v36, &v37);
      v26 = swift_bridgeObjectRelease(v25);
      (*(void (**)(char *, uint64_t, __n128))(v6 + 8))(v8, v5, v26);
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "FMFindingExperienceCoordinator: Finding action RESTART succeeded for identifier: %s", v20, 0xCu);
      swift_arrayDestroy(v21, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v21, -1, -1);
      swift_slowDealloc(v20, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }

  }
  else
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v27 = type metadata accessor for Logger(0);
    sub_100056D88(v27, (uint64_t)qword_1005F5748);
    swift_errorRetain(a2);
    v28 = swift_errorRetain(a2);
    v29 = Logger.logObject.getter(v28);
    v30 = static os_log_type_t.default.getter(v29);
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc(12, -1);
      v32 = (uint64_t *)swift_slowAlloc(8, -1);
      *(_DWORD *)v31 = 138412290;
      if (a2)
      {
        swift_errorRetain(a2);
        v33 = _swift_stdlib_bridgeErrorToNSError(a2);
        v37 = v33;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
      }
      else
      {
        v37 = 0;
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v37, &v38);
        v33 = 0;
      }
      *v32 = v33;
      swift_errorRelease(a2);
      swift_errorRelease(a2);
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "FMFindingExperienceCoordinator: Finding action RESTART failed with error %@", v31, 0xCu);
      v34 = sub_100053F2C((uint64_t *)&unk_1005D9680);
      swift_arrayDestroy(v32, 1, v34);
      swift_slowDealloc(v32, -1, -1);
      swift_slowDealloc(v31, -1, -1);
    }
    else
    {
      swift_errorRelease(a2);
      swift_errorRelease(a2);
    }

  }
}

double sub_1003A9374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *Strong;
  double result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __objc2_prot_list **p_base_prots;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  __n128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE v57[24];

  v53 = a5;
  v54 = a6;
  v9 = type metadata accessor for UUID(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FMIPActionStatus(0);
  v14 = *(_QWORD *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  a3 += 16;
  swift_beginAccess(a3, v57, 0, 0);
  Strong = (char *)swift_unknownObjectWeakLoadStrong(a3);
  if (Strong)
  {
    v52 = Strong;
    v19 = a4;
    (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, enum case for FMIPActionStatus.success(_:), v13);
    v20 = sub_100008000(&qword_1005D9928, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPActionStatus, (uint64_t)&protocol conformance descriptor for FMIPActionStatus);
    dispatch thunk of RawRepresentable.rawValue.getter(&v56, v13, v20);
    dispatch thunk of RawRepresentable.rawValue.getter(&v55, v13, v20);
    v22 = v55;
    v21 = v56;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    p_base_prots = &LocateIntent__classData.base_prots;
    if (v21 == v22)
    {
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v24 = type metadata accessor for Logger(0);
      sub_100056D88(v24, (uint64_t)qword_1005F5748);
      v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v19, v9);
      v26 = Logger.logObject.getter(v25);
      v27 = static os_log_type_t.default.getter(v26);
      if (os_log_type_enabled(v26, v27))
      {
        v28 = (uint8_t *)swift_slowAlloc(12, -1);
        v29 = swift_slowAlloc(32, -1);
        v56 = v29;
        *(_DWORD *)v28 = 136315138;
        v30 = sub_100008000((unint64_t *)&qword_1005DA7C0, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
        v31 = dispatch thunk of CustomStringConvertible.description.getter(v9, v30);
        v33 = v32;
        v55 = sub_100056DA0(v31, v32, &v56);
        UnsafeMutableRawBufferPointer.copyMemory(from:)(&v55, &v56);
        v34 = swift_bridgeObjectRelease(v33);
        (*(void (**)(char *, uint64_t, __n128))(v10 + 8))(v12, v9, v34);
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "FMFindingExperienceCoordinator: Finding action RESTART succeeded for identifier: %s", v28, 0xCu);
        swift_arrayDestroy(v29, 1, (char *)&type metadata for Any + 8);
        v35 = v29;
        p_base_prots = (__objc2_prot_list **)(&LocateIntent__classData + 40);
        swift_slowDealloc(v35, -1, -1);
        swift_slowDealloc(v28, -1, -1);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      }

    }
    else
    {
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v36 = type metadata accessor for Logger(0);
      sub_100056D88(v36, (uint64_t)qword_1005F5748);
      swift_errorRetain(a2);
      v37 = swift_errorRetain(a2);
      v38 = Logger.logObject.getter(v37);
      v39 = static os_log_type_t.default.getter(v38);
      if (os_log_type_enabled(v38, v39))
      {
        v40 = (uint8_t *)swift_slowAlloc(12, -1);
        v41 = (uint64_t *)swift_slowAlloc(8, -1);
        *(_DWORD *)v40 = 138412290;
        if (a2)
        {
          swift_errorRetain(a2);
          v42 = _swift_stdlib_bridgeErrorToNSError(a2);
          v56 = v42;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, v57);
        }
        else
        {
          v56 = 0;
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, v57);
          v42 = 0;
        }
        *v41 = v42;
        swift_errorRelease(a2);
        swift_errorRelease(a2);
        _os_log_impl((void *)&_mh_execute_header, v38, v39, "FMFindingExperienceCoordinator: Finding action RESTART failed with error %@", v40, 0xCu);
        v43 = sub_100053F2C((uint64_t *)&unk_1005D9680);
        swift_arrayDestroy(v41, 1, v43);
        swift_slowDealloc(v41, -1, -1);
        swift_slowDealloc(v40, -1, -1);

        p_base_prots = &LocateIntent__classData.base_prots;
      }
      else
      {
        swift_errorRelease(a2);
        swift_errorRelease(a2);

      }
    }
    if (p_base_prots[445] != (__objc2_prot_list *)-1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v44 = type metadata accessor for Logger(0);
    v45 = sub_100056D88(v44, (uint64_t)qword_1005F5748);
    v46 = Logger.logObject.getter(v45);
    v47 = static os_log_type_t.default.getter(v46);
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v48 = 0;
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "FMFindingExperienceCoordinator: Now re-running start fast advt", v48, 2u);
      swift_slowDealloc(v48, -1, -1);
    }

    v49 = v54;
    swift_bridgeObjectRetain(v54);
    v50 = v52;
    sub_100164818(v53, v49, 1, v52, v53, v49);

    *(_QWORD *)&result = swift_bridgeObjectRelease(v49).n128_u64[0];
  }
  return result;
}

void sub_1003A990C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  NSObject *oslog;
  uint64_t v17;
  uint64_t v18;

  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v7 = type metadata accessor for Logger(0);
  sub_100056D88(v7, (uint64_t)qword_1005F5748);
  swift_bridgeObjectRetain(a4);
  swift_errorRetain(a2);
  swift_bridgeObjectRetain(a4);
  v8 = swift_errorRetain(a2);
  oslog = Logger.logObject.getter(v8);
  v9 = static os_log_type_t.default.getter(oslog);
  if (os_log_type_enabled(oslog, v9))
  {
    v10 = swift_slowAlloc(22, -1);
    v11 = swift_slowAlloc(64, -1);
    v18 = v11;
    *(_DWORD *)v10 = 136315394;
    swift_bridgeObjectRetain(a4);
    v17 = sub_100056DA0(a3, a4, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18);
    swift_bridgeObjectRelease_n(a4, 3);
    *(_WORD *)(v10 + 12) = 2080;
    v17 = a2;
    swift_errorRetain(a2);
    v12 = sub_100053F2C(&qword_1005D7E40);
    v13 = String.init<A>(describing:)(&v17, v12);
    v15 = v14;
    v17 = sub_100056DA0(v13, v14, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v17, &v18);
    swift_bridgeObjectRelease(v15);
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    _os_log_impl((void *)&_mh_execute_header, oslog, v9, "FMFindingExperienceCoordinator: Fast advertisement RESTARTED for identifier: %s. With error?: %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy(v11, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n(a4, 2);
    swift_errorRelease(a2);
    swift_errorRelease(a2);

  }
}

id sub_1003A9B80()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMFindingExperienceCoordinator(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1003A9C08()
{
  return type metadata accessor for FMFindingExperienceCoordinator(0);
}

uint64_t type metadata accessor for FMFindingExperienceCoordinator(uint64_t a1)
{
  uint64_t result;

  result = qword_1005E2630;
  if (!qword_1005E2630)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMFindingExperienceCoordinator);
  return result;
}

void sub_1003A9C4C(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = "\b";
  v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
  sub_1003A9CD0(319);
  if (v3 <= 0x3F)
  {
    v4[2] = *(_QWORD *)(v2 - 8) + 64;
    swift_updateClassMetadata2(a1, 256, 3, v4, a1 + 80);
  }
}

void sub_1003A9CD0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1005D7208)
  {
    v2 = type metadata accessor for FindingMode(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1005D7208);
  }
}

uint64_t sub_1003A9D24()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003A9D48()
{
  uint64_t v0;

  return sub_1003A8284(v0);
}

uint64_t sub_1003A9D50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C((uint64_t *)&unk_1005D72C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003A9D98(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FindingMode(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003A9DD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (*(_QWORD *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + v6 + 8));
  return swift_deallocObject(v0, v6 + 16, v5);
}

double sub_1003A9E68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_1003A9374(a1, a2, *(_QWORD *)(v2 + 16), v2 + v6, *(_QWORD *)v7, *(_QWORD *)(v7 + 8));
}

uint64_t sub_1003A9ED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for UUID(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 16) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return swift_deallocObject(v0, v5, v6);
}

void sub_1003A9F30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for UUID(0) - 8) + 80);
  sub_1003A8EF8(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_1003A9F7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FindingMode(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003A9FC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C((uint64_t *)&unk_1005D72C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003AA008(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;

  v4 = *(void (**)(uint64_t))(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  swift_retain(v3);
  v5 = swift_unknownObjectRetain(a2);
  v4(v5);
  swift_release(v3);
  return swift_unknownObjectRelease(a2);
}

id sub_1003AA050()
{
  void *v0;
  id v1;
  id v2;
  id result;

  v0 = (void *)objc_opt_self(UIColor);
  v1 = objc_msgSend(v0, "systemBlueColor");
  v2 = objc_msgSend((id)objc_opt_self(MKPinAnnotationView), "redPinColor");
  result = objc_msgSend(v0, "systemRedColor");
  qword_1005F5EE0 = 0x4038000000000000;
  qword_1005F5EE8 = (uint64_t)v1;
  qword_1005F5EF0 = 0x3FB999999999999ALL;
  qword_1005F5EF8 = (uint64_t)v2;
  qword_1005F5F00 = (uint64_t)result;
  return result;
}

void sub_1003AA11C()
{
  char *v0;
  char *v1;
  id v2;
  Swift::String v3;
  Swift::String v4;
  void *object;
  NSString v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t ObjCClassFromMetadata;
  id v16;
  NSString v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  Swift::String v37;
  Swift::String v38;
  Swift::String v39;
  uint64_t v40;
  objc_class *v41;
  id v42;
  char *v43;
  id v44;
  void *v45;
  id v46;
  Swift::String v47;
  Swift::String v48;
  Swift::String v49;
  id v50;
  char *v51;
  id v52;
  uint64_t v53;
  void *v54;
  id v55;
  Swift::String v56;
  Swift::String v57;
  Swift::String v58;
  id v59;
  char *v60;
  id v61;
  id v62;
  uint64_t v63;
  void *v64;
  id v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  void *v70;
  void *v71;
  char *v72;
  id v73;
  id v74;
  id v75;
  id v76;
  Class isa;
  id v78;
  void *v79;
  id v80;
  id v81;
  void *v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  id v91;
  id v92;
  id v93;
  _BOOL8 v95;
  id v96;
  id v97;
  Swift::String v98;
  Swift::String v99;
  void *v100;
  NSString v101;
  id v102;
  id v103;
  id v104;
  id v105;
  void *v106;
  id v107;
  void *v108;
  id v109;
  uint64_t v110;
  void *v111;
  void *v112;
  void *v113;
  void *v114;
  void *v115;
  void *v116;
  id v117;
  void *v118;
  id v119;
  id v120;
  id v121;
  void *v122;
  id v123;
  id v124;
  void *v125;
  id v126;
  id v127;
  void *v128;
  void *v129;
  id v130;
  id v131;
  id v132;
  uint64_t v133;
  id comment;
  uint64_t comment_8;
  char *v136;
  id v137;
  id v138;
  id v139;
  char *v140;
  unint64_t v141;
  uint64_t v142;
  Swift::String v143;
  Swift::String v144;
  Swift::String v145;
  Swift::String v146;
  Swift::String v147;

  v1 = v0;
  v140 = 0;
  v141 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v137 = (id)objc_opt_self(NSBundle);
  v2 = objc_msgSend(v137, "mainBundle");
  v143._countAndFlagsBits = 0xD000000000000018;
  v143._object = (void *)0x80000001004C48F0;
  v3._countAndFlagsBits = 0x594649544F4ELL;
  v3._object = (void *)0xE600000000000000;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v143)._object;

  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setTitle:", v6, swift_bridgeObjectRelease(object).n128_f64[0]);

  v7 = objc_msgSend(objc_allocWithZone((Class)MKMapView), "init");
  v8 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView;
  v9 = *(void **)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView] = v7;

  v10 = *(void **)&v1[v8];
  if (!v10)
  {
    __break(1u);
    goto LABEL_48;
  }
  v11 = (void *)objc_opt_self(FMFAppMapUtilities);
  v12 = v10;
  objc_msgSend(v12, "setMapType:", objc_msgSend(v11, "storedMapType"));

  v13 = *(void **)&v1[v8];
  if (!v13)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v14 = sub_100006C5C(0, &qword_1005E1190, MKMarkerAnnotationView_ptr);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v14);
  v16 = v13;
  v17 = String._bridgeToObjectiveC()();
  objc_msgSend(v16, "registerClass:forAnnotationViewWithReuseIdentifier:", ObjCClassFromMetadata, v17);

  v18 = *(void **)&v1[v8];
  if (!v18)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  objc_msgSend(v18, "setDelegate:", v1);
  v19 = objc_msgSend(v1, "view");
  if (!v19)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  if (!*(_QWORD *)&v1[v8])
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v20 = v19;
  objc_msgSend(v19, "addSubview:");

  v21 = objc_msgSend(objc_allocWithZone((Class)FMMapDragRadiusView), "init");
  v22 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_dragView;
  v23 = *(void **)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_dragView];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_dragView] = v21;

  v24 = *(void **)&v1[v22];
  if (!v24)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  v25 = (void *)objc_opt_self(UIColor);
  v26 = v24;
  v139 = v25;
  v27 = objc_msgSend(v25, "clearColor");
  objc_msgSend(v26, "setBackgroundColor:", v27);

  v28 = *(void **)&v1[v22];
  if (!v28)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  objc_msgSend(v28, "setMapView:", *(_QWORD *)&v1[v8]);
  v29 = *(void **)&v1[v22];
  if (!v29)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  objc_msgSend(v29, "setDelegate:", v1);
  v30 = objc_msgSend(v1, "view");
  if (!v30)
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  if (!*(_QWORD *)&v1[v22])
  {
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  v31 = v30;
  objc_msgSend(v30, "addSubview:");

  v136 = v1;
  v32 = objc_msgSend(v1, "navigationController");
  if (v32)
  {
    v33 = v32;
    v34 = objc_msgSend(v32, "view");

    if (!v34)
    {
LABEL_69:
      __break(1u);
      goto LABEL_70;
    }
    v35 = objc_msgSend(v139, "secondarySystemBackgroundColor");
    objc_msgSend(v34, "setBackgroundColor:", v35);

  }
  v133 = v8;
  v141 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v36 = objc_msgSend(v137, "mainBundle", swift_bridgeObjectRelease(0xE000000000000000).n128_f64[0]);
  v144._countAndFlagsBits = 0xD000000000000024;
  v144._object = (void *)0x80000001004C4930;
  v37._object = (void *)0x80000001004C4910;
  v37._countAndFlagsBits = 0xD000000000000012;
  v38._countAndFlagsBits = 0;
  v38._object = (void *)0xE000000000000000;
  v39 = NSLocalizedString(_:tableName:bundle:value:comment:)(v37, (Swift::String_optional)0, (NSBundle)v36, v38, v144);

  v40 = type metadata accessor for FMFenceMapViewController(0);
  v142 = v40;
  v140 = v1;
  v41 = (objc_class *)type metadata accessor for FMStickyRoundedButton();
  v42 = objc_allocWithZone(v41);
  v43 = v1;
  v132 = sub_10018994C(v39._countAndFlagsBits, (uint64_t)v39._object, (uint64_t)&v140, (uint64_t)"chooseSmallRadiusActionWithSender:");
  v44 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v132);
  comment_8 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_smallRadiusBarButtonItem;
  v45 = *(void **)&v43[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_smallRadiusBarButtonItem];
  *(_QWORD *)&v43[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_smallRadiusBarButtonItem] = v44;

  v140 = 0;
  v141 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v46 = objc_msgSend(v137, "mainBundle", swift_bridgeObjectRelease(v141).n128_f64[0]);
  v47._countAndFlagsBits = 0xD000000000000013;
  v145._countAndFlagsBits = 0xD000000000000025;
  v145._object = (void *)0x80000001004C4980;
  v47._object = (void *)0x80000001004C4960;
  v48._countAndFlagsBits = 0;
  v48._object = (void *)0xE000000000000000;
  v49 = NSLocalizedString(_:tableName:bundle:value:comment:)(v47, (Swift::String_optional)0, (NSBundle)v46, v48, v145);

  v142 = v40;
  v140 = v43;
  v50 = objc_allocWithZone(v41);
  v51 = v43;
  v131 = sub_10018994C(v49._countAndFlagsBits, (uint64_t)v49._object, (uint64_t)&v140, (uint64_t)"chooseMediumRadiusActionWithSender:");
  v52 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v131);
  v53 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mediumRadiusBarButtonItem;
  v54 = *(void **)&v51[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mediumRadiusBarButtonItem];
  *(_QWORD *)&v51[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mediumRadiusBarButtonItem] = v52;

  v140 = 0;
  v141 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  v55 = objc_msgSend(v137, "mainBundle", swift_bridgeObjectRelease(v141).n128_f64[0]);
  v146._object = (void *)0x80000001004C49D0;
  v56._object = (void *)0x80000001004C49B0;
  v56._countAndFlagsBits = 0xD000000000000012;
  v57._countAndFlagsBits = 0;
  v57._object = (void *)0xE000000000000000;
  v146._countAndFlagsBits = 0xD000000000000024;
  v58 = NSLocalizedString(_:tableName:bundle:value:comment:)(v56, (Swift::String_optional)0, (NSBundle)v55, v57, v146);

  v142 = v40;
  v140 = v51;
  v59 = objc_allocWithZone(v41);
  v60 = v51;
  v61 = sub_10018994C(v58._countAndFlagsBits, (uint64_t)v58._object, (uint64_t)&v140, (uint64_t)"chooseLargeRadiusActionWithSender:");
  v62 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithCustomView:", v61);
  v63 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_largeRadiusBarButtonItem;
  v64 = *(void **)&v60[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_largeRadiusBarButtonItem];
  *(_QWORD *)&v60[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_largeRadiusBarButtonItem] = v62;

  v65 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 6, 0, 0);
  objc_msgSend(v65, "setWidth:", *(double *)&v60[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_style]);
  v66 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 5, 0, 0);
  v67 = sub_100053F2C(&qword_1005D2F10);
  v68 = swift_allocObject(v67, 88, 7);
  *(_OWORD *)(v68 + 16) = xmmword_1004850C0;
  *(_QWORD *)(v68 + 32) = v65;
  v69 = *(void **)&v43[comment_8];
  if (!v69)
    goto LABEL_57;
  *(_QWORD *)(v68 + 40) = v69;
  *(_QWORD *)(v68 + 48) = v66;
  v70 = *(void **)&v51[v53];
  if (!v70)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  *(_QWORD *)(v68 + 56) = v70;
  *(_QWORD *)(v68 + 64) = v66;
  v71 = *(void **)&v60[v63];
  if (!v71)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  *(_QWORD *)(v68 + 72) = v71;
  *(_QWORD *)(v68 + 80) = v65;
  v140 = (char *)v68;
  specialized Array._endMutation()(v68);
  v72 = v140;
  sub_100006C5C(0, &qword_1005D34A0, UIBarButtonItem_ptr);
  v73 = v65;
  comment = v66;
  v130 = v73;
  v74 = v69;
  v75 = v70;
  v76 = v71;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v60, "setToolbarItems:", isa, swift_bridgeObjectRelease(v72).n128_f64[0]);

  v78 = objc_msgSend(v60, "navigationController");
  if (v78)
  {
    v79 = v78;
    v80 = objc_msgSend(v78, "toolbar");

    if (!v80)
    {
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }
    objc_msgSend(v80, "setTranslucent:", 0);

  }
  v81 = objc_msgSend(v60, "navigationController");
  if (!v81)
  {
LABEL_23:
    if ((v60[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_isOtherUsage] & 1) == 0)
    {
      v85 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 1, v60, "cancelActionWithSender:");
      v86 = objc_msgSend(v60, "navigationItem");
      objc_msgSend(v86, "setLeftBarButtonItem:", v85);

    }
    v87 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 0, v60, "doneActionWithSender:");
    v88 = objc_msgSend(v60, "navigationItem");
    objc_msgSend(v88, "setRightBarButtonItem:", v87);

    v89 = objc_msgSend(objc_allocWithZone((Class)UISearchController), "initWithSearchResultsController:", 0);
    v90 = objc_msgSend(v60, "traitCollection");
    v91 = objc_msgSend(v90, "horizontalSizeClass");

    v92 = objc_msgSend(v60, "traitCollection");
    v93 = objc_msgSend(v92, "verticalSizeClass");

    v95 = v91 == (id)1 || v93 == (id)1;
    objc_msgSend(v89, "setHidesNavigationBarDuringPresentation:", v95);
    objc_msgSend(v89, "setObscuresBackgroundDuringPresentation:", 0);
    objc_msgSend(v89, "setSearchResultsUpdater:", v60);
    v96 = objc_msgSend(v89, "searchBar");
    v140 = 0;
    v141 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    v97 = objc_msgSend(v137, "mainBundle", swift_bridgeObjectRelease(v141).n128_f64[0]);
    v98._countAndFlagsBits = 0xD000000000000016;
    v147._countAndFlagsBits = 0xD000000000000028;
    v147._object = (void *)0x80000001004C4490;
    v98._object = (void *)0x80000001004C4470;
    v99._countAndFlagsBits = 0;
    v99._object = (void *)0xE000000000000000;
    v100 = NSLocalizedString(_:tableName:bundle:value:comment:)(v98, (Swift::String_optional)0, (NSBundle)v97, v99, v147)._object;

    v101 = String._bridgeToObjectiveC()();
    objc_msgSend(v96, "setPlaceholder:", v101, swift_bridgeObjectRelease(v100).n128_f64[0]);

    v102 = objc_msgSend(v89, "searchBar");
    objc_msgSend(v102, "setDelegate:", v60);

    v103 = objc_msgSend(v89, "searchBar");
    v104 = objc_msgSend(v139, "secondarySystemBackgroundColor");
    objc_msgSend(v103, "setBackgroundColor:", v104);

    v105 = objc_msgSend(v89, "navigationController");
    if (v105)
    {
      v106 = v105;
      v107 = objc_msgSend(v105, "navigationBar");

      objc_msgSend(v107, "setTranslucent:", 0);
    }
    v108 = *(void **)&v60[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchController];
    *(_QWORD *)&v60[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchController] = v89;
    v138 = v89;

    v109 = objc_msgSend(objc_allocWithZone((Class)UITableView), "initWithFrame:style:", 0, 0.0, 0.0, 0.0, 0.0);
    v110 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchResultsTableView;
    v111 = *(void **)&v60[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchResultsTableView];
    *(_QWORD *)&v60[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchResultsTableView] = v109;

    v112 = *(void **)&v60[v110];
    if (v112)
    {
      objc_msgSend(v112, "setDataSource:", v60);
      v113 = *(void **)&v60[v110];
      if (v113)
      {
        objc_msgSend(v113, "setDelegate:", v60);
        v114 = *(void **)&v60[v110];
        if (v114)
        {
          objc_msgSend(v114, "setKeyboardDismissMode:", 2);
          v115 = *(void **)&v60[v110];
          if (v115)
          {
            objc_msgSend(v115, "setHidden:", 1);
            v116 = *(void **)&v60[v110];
            if (v116)
            {
              objc_msgSend(v116, "setAutoresizingMask:", 0);
              v117 = objc_msgSend(v60, "view");
              if (v117)
              {
                if (*(_QWORD *)&v60[v110])
                {
                  v118 = v117;
                  objc_msgSend(v117, "addSubview:");

                  v119 = objc_msgSend(v60, "navigationItem");
                  objc_msgSend(v119, "setHidesSearchBarWhenScrolling:", 1);

                  v120 = objc_msgSend(v60, "navigationItem");
                  objc_msgSend(v120, "setSearchController:", v138);

                  v121 = objc_msgSend(v60, "navigationController");
                  if (v121)
                  {
                    v122 = v121;
                    v123 = objc_msgSend(v121, "navigationBar");

                    objc_msgSend(v123, "setTranslucent:", 0);
                  }
                  v124 = objc_msgSend(v60, "navigationController");
                  if (v124)
                  {
                    v125 = v124;
                    v126 = objc_msgSend(v124, "navigationBar");

                    v127 = objc_msgSend(v139, "secondarySystemBackgroundColor");
                    objc_msgSend(v126, "setBackgroundColor:", v127);

                  }
                  v128 = *(void **)&v136[v133];
                  if (v128)
                  {
                    objc_msgSend(v128, "setShowsUserLocation:", 1);
                    v129 = *(void **)&v136[v133];
                    if (v129)
                    {
                      objc_msgSend(v129, "setUserTrackingMode:animated:", 0, 1);

                      return;
                    }
                    goto LABEL_68;
                  }
LABEL_67:
                  __break(1u);
LABEL_68:
                  __break(1u);
                  goto LABEL_69;
                }
LABEL_66:
                __break(1u);
                goto LABEL_67;
              }
LABEL_65:
              __break(1u);
              goto LABEL_66;
            }
LABEL_64:
            __break(1u);
            goto LABEL_65;
          }
LABEL_63:
          __break(1u);
          goto LABEL_64;
        }
LABEL_62:
        __break(1u);
        goto LABEL_63;
      }
LABEL_61:
      __break(1u);
      goto LABEL_62;
    }
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  v82 = v81;
  v83 = objc_msgSend(v81, "toolbar");

  if (v83)
  {
    v84 = objc_msgSend(v139, "secondarySystemBackgroundColor");
    objc_msgSend(v83, "setBackgroundColor:", v84);

    goto LABEL_23;
  }
LABEL_71:
  __break(1u);
}

void sub_1003AAFE4()
{
  char *v0;
  uint64_t v1;
  void *v2;
  char *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  uint64_t v34;
  Class isa;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  void *v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  id v54;
  id v55;
  void *v56;
  id v57;
  id v58;
  id v59;
  void *v60;
  id v61;
  id v62;
  void *v63;
  id v64;
  id v65;
  id v66;
  uint64_t v67;
  Class v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  void *v72;
  id v73;
  id v74;
  void *v75;
  id v76;
  id v77;
  id v78;
  void *v79;
  id v80;
  id v81;
  void *v82;
  id v83;
  id v84;
  id v85;
  void *v86;
  id v87;
  id v88;
  void *v89;
  id v90;
  id v91;
  void *v92;
  id v93;
  id v94;
  void *v95;
  id v96;
  id v97;
  uint64_t v98;
  id v99;
  id v100;
  Class v101;

  v1 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView];
  if (!v2)
  {
    __break(1u);
    goto LABEL_30;
  }
  v3 = v0;
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v100 = (id)sub_100053F2C(&qword_1005D2F10);
  v4 = swift_allocObject(v100, 64, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100481720;
  v5 = *(void **)&v3[v1];
  if (!v5)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v6 = objc_msgSend(v5, "topAnchor");
  v7 = objc_msgSend(v3, "view");
  if (!v7)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v8 = v7;
  v9 = objc_msgSend(v7, "safeAreaLayoutGuide");

  v10 = objc_msgSend(v9, "topAnchor");
  v11 = objc_msgSend(v6, "constraintEqualToAnchor:", v10);

  *(_QWORD *)(v4 + 32) = v11;
  v12 = *(void **)&v3[v1];
  if (!v12)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v13 = objc_msgSend(v12, "bottomAnchor");
  v14 = objc_msgSend(v3, "view");
  if (!v14)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v15 = v14;
  v16 = objc_msgSend(v14, "safeAreaLayoutGuide");

  v17 = objc_msgSend(v16, "bottomAnchor");
  v18 = objc_msgSend(v13, "constraintEqualToAnchor:", v17);

  *(_QWORD *)(v4 + 40) = v18;
  v19 = *(void **)&v3[v1];
  if (!v19)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v20 = objc_msgSend(v19, "leadingAnchor");
  v21 = objc_msgSend(v3, "view");
  if (!v21)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v22 = v21;
  v23 = objc_msgSend(v21, "safeAreaLayoutGuide");

  v24 = objc_msgSend(v23, "leadingAnchor");
  v25 = objc_msgSend(v20, "constraintEqualToAnchor:", v24);

  *(_QWORD *)(v4 + 48) = v25;
  v26 = *(void **)&v3[v1];
  if (!v26)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v27 = objc_msgSend(v26, "trailingAnchor");
  v28 = objc_msgSend(v3, "view");
  if (!v28)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v29 = v28;
  v30 = (void *)objc_opt_self(NSLayoutConstraint);
  v31 = objc_msgSend(v29, "safeAreaLayoutGuide");

  v32 = objc_msgSend(v31, "trailingAnchor");
  v33 = objc_msgSend(v27, "constraintEqualToAnchor:", v32);

  *(_QWORD *)(v4 + 56) = v33;
  specialized Array._endMutation()(v34);
  sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v99 = v30;
  objc_msgSend(v30, "activateConstraints:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

  v36 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_dragView;
  v37 = *(void **)&v3[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_dragView];
  if (!v37)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  objc_msgSend(v37, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v38 = swift_allocObject(v100, 64, 7);
  *(_OWORD *)(v38 + 16) = xmmword_100481720;
  v39 = *(void **)&v3[v36];
  if (!v39)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v40 = objc_msgSend(v39, "topAnchor");
  v41 = objc_msgSend(v3, "view");
  if (!v41)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v42 = v41;
  v43 = objc_msgSend(v41, "safeAreaLayoutGuide");

  v44 = objc_msgSend(v43, "topAnchor");
  v45 = objc_msgSend(v40, "constraintEqualToAnchor:", v44);

  *(_QWORD *)(v38 + 32) = v45;
  v46 = *(void **)&v3[v36];
  if (!v46)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v47 = objc_msgSend(v46, "bottomAnchor");
  v48 = objc_msgSend(v3, "view");
  if (!v48)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  v49 = v48;
  v50 = objc_msgSend(v48, "safeAreaLayoutGuide");

  v51 = objc_msgSend(v50, "bottomAnchor");
  v52 = objc_msgSend(v47, "constraintEqualToAnchor:", v51);

  *(_QWORD *)(v38 + 40) = v52;
  v53 = *(void **)&v3[v36];
  if (!v53)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  v54 = objc_msgSend(v53, "leadingAnchor");
  v55 = objc_msgSend(v3, "view");
  if (!v55)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  v56 = v55;
  v57 = objc_msgSend(v55, "safeAreaLayoutGuide");

  v58 = objc_msgSend(v57, "leadingAnchor");
  v59 = objc_msgSend(v54, "constraintEqualToAnchor:", v58);

  *(_QWORD *)(v38 + 48) = v59;
  v60 = *(void **)&v3[v36];
  if (!v60)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v61 = objc_msgSend(v60, "trailingAnchor");
  v62 = objc_msgSend(v3, "view");
  if (!v62)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  v63 = v62;
  v64 = objc_msgSend(v62, "safeAreaLayoutGuide");

  v65 = objc_msgSend(v64, "trailingAnchor");
  v66 = objc_msgSend(v61, "constraintEqualToAnchor:", v65);

  *(_QWORD *)(v38 + 56) = v66;
  specialized Array._endMutation()(v67);
  v68 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v99, "activateConstraints:", v68, swift_bridgeObjectRelease(v38).n128_f64[0]);

  v69 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchResultsTableView;
  v70 = *(void **)&v3[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchResultsTableView];
  if (!v70)
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  objc_msgSend(v70, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v71 = swift_allocObject(v100, 64, 7);
  *(_OWORD *)(v71 + 16) = xmmword_100481720;
  v72 = *(void **)&v3[v69];
  if (!v72)
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v73 = objc_msgSend(v72, "topAnchor");
  v74 = objc_msgSend(v3, "view");
  if (!v74)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  v75 = v74;
  v76 = objc_msgSend(v74, "safeAreaLayoutGuide");

  v77 = objc_msgSend(v76, "topAnchor");
  v78 = objc_msgSend(v73, "constraintEqualToAnchor:", v77);

  *(_QWORD *)(v71 + 32) = v78;
  v79 = *(void **)&v3[v69];
  if (!v79)
  {
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  v80 = objc_msgSend(v79, "bottomAnchor");
  v81 = objc_msgSend(v3, "view");
  if (!v81)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v82 = v81;
  v83 = objc_msgSend(v81, "safeAreaLayoutGuide");

  v84 = objc_msgSend(v83, "bottomAnchor");
  v85 = objc_msgSend(v80, "constraintEqualToAnchor:", v84);

  *(_QWORD *)(v71 + 40) = v85;
  v86 = *(void **)&v3[v69];
  if (!v86)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  v87 = objc_msgSend(v86, "leadingAnchor");
  v88 = objc_msgSend(v3, "view");
  if (!v88)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  v89 = v88;
  v90 = objc_msgSend(v88, "leadingAnchor");

  v91 = objc_msgSend(v87, "constraintEqualToAnchor:", v90);
  *(_QWORD *)(v71 + 48) = v91;
  v92 = *(void **)&v3[v69];
  if (!v92)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  v93 = objc_msgSend(v92, "trailingAnchor");
  v94 = objc_msgSend(v3, "view");
  if (v94)
  {
    v95 = v94;
    v96 = objc_msgSend(v94, "trailingAnchor");

    v97 = objc_msgSend(v93, "constraintEqualToAnchor:", v96);
    *(_QWORD *)(v71 + 56) = v97;
    specialized Array._endMutation()(v98);
    v101 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v99, "activateConstraints:", v101, swift_bridgeObjectRelease(v71).n128_f64[0]);

    return;
  }
LABEL_55:
  __break(1u);
}

void sub_1003AB954()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  _BYTE v18[24];
  objc_super v19;

  v19.receiver = v0;
  v19.super_class = (Class)type metadata accessor for FMFenceMapViewController(0);
  objc_msgSendSuper2(&v19, "viewDidLoad");
  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mediator];
  if (!v1)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v2 = *(_QWORD *)(v1 + 48);
  v3 = type metadata accessor for FMPeopleSubscription(0);
  v4 = swift_allocObject(v3, *(unsigned int *)(v3 + 48), *(unsigned __int16 *)(v3 + 52));
  v5 = v4 + OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_subscriber;
  *(_QWORD *)(v5 + 8) = 0;
  swift_unknownObjectWeakInit(v5);
  swift_retain(v2);
  v6 = v0;
  UUID.init()(v6);
  v7 = v4 + OBJC_IVAR____TtC6FindMy20FMPeopleSubscription_subscriber;
  *(_QWORD *)(v7 + 8) = &off_10055FFC8;
  swift_unknownObjectWeakAssign(v7, v6);

  swift_beginAccess(v2 + 16, v18, 33, 0);
  v8 = swift_retain(v4);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v8);
  v10 = *(_QWORD *)((*(_QWORD *)(v2 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v9 = *(_QWORD *)((*(_QWORD *)(v2 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v10 >= v9 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v9 > 1, v10 + 1, 1);
  v11 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v10, v4);
  specialized Array._endMutation()(v11);
  swift_endAccess(v18);
  swift_release(v2);
  v12 = *(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_peopleSubscription];
  *(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_peopleSubscription] = v4;
  swift_release(v12);
  sub_1003AA11C();
  sub_1003AAFE4();
  v13 = objc_msgSend(objc_allocWithZone((Class)UILongPressGestureRecognizer), "initWithTarget:action:", v6, "longPressActionWithSender:");
  v14 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView;
  v15 = *(void **)&v6[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView];
  if (!v15)
    goto LABEL_8;
  objc_msgSend(v15, "addGestureRecognizer:", v13);
  v16 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v6, "mapTappedActionWithSender:");
  v17 = *(void **)&v6[v14];
  if (v17)
  {
    objc_msgSend(v17, "addGestureRecognizer:", v16);

    sub_1003AC3A4();
    return;
  }
LABEL_9:
  __break(1u);
}

void sub_1003ABB98(char a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  objc_class *v13;
  uint64_t v14;
  _BYTE v15[24];
  objc_super v16;

  v2 = v1;
  v4 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_peopleSubscription;
  v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_peopleSubscription];
  if (!v5)
    goto LABEL_6;
  v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mediator];
  if (v6)
  {
    v7 = *(_QWORD *)(v6 + 48);
    swift_beginAccess(v7 + 16, v15, 33, 0);
    swift_retain(v5);
    swift_retain(v7);
    v8 = sub_10005D57C((uint64_t *)(v7 + 16), v5);
    v9 = v8;
    v10 = *(_QWORD *)(v7 + 16);
    if ((unint64_t)v10 >> 62)
    {
      if (v10 < 0)
        v14 = *(_QWORD *)(v7 + 16);
      else
        v14 = v10 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(v7 + 16));
      v11 = _CocoaArrayWrapper.endIndex.getter(v14);
      swift_bridgeObjectRelease(v10);
      if (v11 >= v9)
        goto LABEL_5;
    }
    else
    {
      v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v11 >= v8)
      {
LABEL_5:
        sub_10005D338(v9, v11);
        swift_endAccess(v15);
        swift_release(v7);
        v12 = *(_QWORD *)&v1[v4];
        *(_QWORD *)&v2[v4] = 0;
        swift_release(v5);
        swift_release(v12);
LABEL_6:
        v13 = (objc_class *)type metadata accessor for FMFenceMapViewController(0);
        v16.receiver = v2;
        v16.super_class = v13;
        objc_msgSendSuper2(&v16, "viewWillDisappear:", a1 & 1);
        return;
      }
    }
    __break(1u);
  }
  __break(1u);
}

id sub_1003ABD28(uint64_t a1)
{
  char *v1;
  id result;
  double *v4;
  double v5;
  double v6;
  double v7;
  BOOL v8;
  BOOL v9;
  double v11;
  double v13;
  objc_super v15;

  v15.receiver = v1;
  v15.super_class = (Class)type metadata accessor for FMFenceMapViewController(0);
  result = objc_msgSendSuper2(&v15, "traitCollectionDidChange:", a1);
  v4 = (double *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_currentMapRegion];
  if ((v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_currentMapRegion + 32] & 1) == 0)
  {
    v5 = *v4;
    v6 = v4[1];
    v7 = *v4;
    v8 = v6 < -180.0 || v6 > 180.0;
    v9 = v8 || v7 < -90.0;
    if (!v9 && v7 <= 90.0)
    {
      v11 = v4[2];
      if (v11 >= 0.0 && v11 <= 180.0)
      {
        v13 = v4[3];
        if (v13 >= 0.0 && v13 <= 360.0)
        {
          result = *(id *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView];
          if (result)
          {
            result = objc_msgSend(result, "setRegion:animated:", 1, v7);
            *v4 = v5;
            v4[1] = v6;
            v4[2] = v11;
            v4[3] = v13;
            *((_BYTE *)v4 + 32) = 0;
          }
          else
          {
            __break(1u);
          }
        }
      }
    }
  }
  return result;
}

void sub_1003ABEA8(uint64_t a1, char *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD aBlock[5];
  uint64_t v52;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v50 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v48 = *(_QWORD *)(v6 - 8);
  v49 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for DispatchTime(0);
  v9 = *(_QWORD *)(v47 - 8);
  v10 = __chkstk_darwin(v47);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v45 - v13;
  v15 = objc_msgSend(a2, "traitCollection");
  v16 = objc_msgSend(v15, "horizontalSizeClass");

  v17 = objc_msgSend(a2, "traitCollection");
  v18 = objc_msgSend(v17, "verticalSizeClass");

  if (v16 == (id)1 || v18 == (id)1)
  {
    v19 = *(void **)&a2[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchResultsTableView];
    if (!v19)
    {
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
      return;
    }
    objc_msgSend(v19, "setHidden:", 1);
    v20 = objc_msgSend(a2, "navigationItem");
    v21 = objc_msgSend(v20, "searchController");

    if (v21)
    {
      objc_msgSend(v21, "setActive:", 0);

    }
    v22 = *(void **)&a2[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView];
    if (!v22)
      goto LABEL_24;
    v23 = objc_msgSend(v22, "selectedAnnotations");
    v24 = sub_100053F2C(&qword_1005E1120);
    v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v23, v24);

    if ((unint64_t)v25 >> 62)
    {
      if (v25 < 0)
        v43 = v25;
      else
        v43 = v25 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v25);
      v44 = _CocoaArrayWrapper.endIndex.getter(v43);
      swift_bridgeObjectRelease(v25);
      if (v44)
        goto LABEL_9;
    }
    else if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_9:
      if ((v25 & 0xC000000000000001) != 0)
      {
        v26 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v25);
LABEL_12:
        swift_bridgeObjectRelease(v25);
        v27 = type metadata accessor for FMFenceMapAnnotation(0);
        v28 = swift_dynamicCastClass(v26, v27);
        if (v28)
        {
          v29 = v28;
          v30 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
          v46 = static OS_dispatch_queue.main.getter(v30);
          static DispatchTime.now()(v46);
          + infix(_:_:)(v12, 0.5);
          v31 = *(void (**)(char *, uint64_t))(v9 + 8);
          v32 = v12;
          v33 = v47;
          v31(v32, v47);
          v34 = swift_allocObject(&unk_100560400, 32, 7);
          *(_QWORD *)(v34 + 16) = a2;
          *(_QWORD *)(v34 + 24) = v29;
          aBlock[4] = sub_1003B95B8;
          v52 = v34;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_100037DF8;
          aBlock[3] = &unk_100560418;
          v35 = _Block_copy(aBlock);
          v36 = v52;
          v37 = a2;
          swift_unknownObjectRetain(v26);
          swift_release(v36);
          static DispatchQoS.unspecified.getter(v38);
          aBlock[0] = _swiftEmptyArrayStorage;
          v39 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
          v40 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
          v41 = sub_1000555E4();
          dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v40, v41, v3, v39);
          v42 = (void *)v46;
          OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v14, v8, v5, v35);
          _Block_release(v35);
          swift_unknownObjectRelease(v26);

          (*(void (**)(char *, uint64_t))(v50 + 8))(v5, v3);
          (*(void (**)(char *, uint64_t))(v48 + 8))(v8, v49);
          v31(v14, v33);
        }
        else
        {
          swift_unknownObjectRelease(v26);
        }
        return;
      }
      if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        v26 = *(_QWORD *)(v25 + 32);
        swift_unknownObjectRetain(v26);
        goto LABEL_12;
      }
      __break(1u);
      goto LABEL_23;
    }
    swift_bridgeObjectRelease(v25);
  }
}

void sub_1003AC3A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  double v32;
  id v33;
  double v34;
  CLLocationDegrees v35;
  uint64_t v36;
  void *v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  id v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  os_log_type_t v64;
  _BOOL4 v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  void (*v71)(uint64_t, _QWORD, uint64_t);
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  double v80;
  double v81;
  double v82;
  double v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(uint64_t, char *, uint64_t);
  uint64_t v97;
  unint64_t object;
  char *v99;
  __n128 v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  Swift::String v109;
  Swift::String v110;
  Swift::String v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  void *v137;
  uint64_t v138;
  void (*v139)(char *, char *, uint64_t);
  uint64_t v140;
  void (*v141)(char *, uint64_t);
  id v142;
  char *v143;
  char *v144;
  char *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t countAndFlagsBits;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  char v156[24];
  char v157[24];
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  char v162[24];
  Swift::String v163;
  CLLocationCoordinate2D v164;
  MKCoordinateRegion v165;

  v1 = v0;
  v154 = type metadata accessor for FMFAddress(0);
  v153 = *(_QWORD *)(v154 - 8);
  __chkstk_darwin(v154);
  v3 = (char *)&v138 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_100053F2C(&qword_1005D3370);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v138 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v146 = (uint64_t)&v138 - v9;
  v10 = __chkstk_darwin(v8);
  countAndFlagsBits = (uint64_t)&v138 - v11;
  __chkstk_darwin(v10);
  v148 = (uint64_t)&v138 - v12;
  v151 = type metadata accessor for FMFLabel(0);
  v150 = *(_QWORD *)(v151 - 8);
  __chkstk_darwin(v151);
  v147 = (char *)&v138 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100053F2C(&qword_1005DC400);
  __chkstk_darwin(v14);
  v149 = (uint64_t)&v138 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100053F2C(&qword_1005D3418);
  __chkstk_darwin(v16);
  v18 = (char *)&v138 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for FMFLocationAlertAddressType(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = __chkstk_darwin(v19);
  v23 = (char *)&v138 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v21);
  __chkstk_darwin(v24);
  v27 = (char *)&v138 - v26;
  v28 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_selectedLocation;
  v29 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_selectedLocation);
  if (v29)
  {
    v144 = v3;
    v155 = v25;
    v30 = v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_addressType;
    swift_beginAccess(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_addressType, v162, 0, 0);
    sub_100007464(v30, (uint64_t)v18, &qword_1005D3418);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
    {
      sub_1000051EC((uint64_t)v18, &qword_1005D3418);
      v31 = *(void **)(v1 + v28);
      if (v31)
      {
        if (*(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_addressRadius + 8))
          v32 = 2817.5;
        else
          v32 = *(double *)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_addressRadius);
        v33 = v31;
        objc_msgSend(v33, "coordinate");
        v35 = v34;
        objc_msgSend(v33, "coordinate");
        v164.latitude = v35;
        v165 = MKCoordinateRegionMakeWithDistance(v164, v32, v32);
        v36 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView;
        v37 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView);
        if (v37)
        {
          objc_msgSend(v37, "regionThatFits:", v165.center.latitude, v165.center.longitude, v165.span.latitudeDelta, v165.span.longitudeDelta);
          v42 = v38;
          if (v39 < -180.0)
            goto LABEL_18;
          v43 = v39;
          if (v39 > 180.0)
            goto LABEL_18;
          if (v38 < -90.0)
            goto LABEL_18;
          if (v38 > 90.0)
            goto LABEL_18;
          v44 = v40;
          if (v40 < 0.0)
            goto LABEL_18;
          if (v40 > 180.0)
            goto LABEL_18;
          v45 = v41;
          if (v41 < 0.0 || v41 > 360.0)
            goto LABEL_18;
          v46 = *(void **)(v1 + v36);
          if (v46)
          {
            objc_msgSend(v46, "setRegion:animated:", 1, v38, v39, v40, v41);
            v47 = v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_currentMapRegion;
            *(double *)v47 = v42;
            *(double *)(v47 + 8) = v43;
            *(double *)(v47 + 16) = v44;
            *(double *)(v47 + 24) = v45;
            *(_BYTE *)(v47 + 32) = 0;
LABEL_18:

            *(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_showingUserLocation) = 1;
            return;
          }
          goto LABEL_81;
        }
        goto LABEL_78;
      }
      goto LABEL_19;
    }
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v27, v18, v19);
    v55 = v29;
    objc_msgSend(v55, "coordinate");
    v57 = v56;
    v142 = v55;
    objc_msgSend(v55, "coordinate");
    v59 = v58;
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_addressRadius + 8))
      v60 = 100.0;
    else
      v60 = *(double *)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_addressRadius);
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v145 = v27;
    v61 = type metadata accessor for Logger(0);
    v62 = sub_100056D88(v61, (uint64_t)qword_1005F5748);
    v63 = Logger.logObject.getter(v62);
    v64 = static os_log_type_t.default.getter(v63);
    v65 = os_log_type_enabled(v63, v64);
    v140 = v1;
    v143 = v7;
    if (v65)
    {
      v66 = (uint8_t *)swift_slowAlloc(12, -1);
      v67 = swift_slowAlloc(32, -1);
      v160 = v67;
      *(_DWORD *)v66 = 136315138;
      v68 = Double.description.getter(v60);
      v70 = v69;
      v158 = sub_100056DA0(v68, v69, &v160);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v158, &v159);
      swift_bridgeObjectRelease(v70);
      _os_log_impl((void *)&_mh_execute_header, v63, v64, "FMFenceMapViewController: radius %s", v66, 0xCu);
      swift_arrayDestroy(v67, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v67, -1, -1);
      swift_slowDealloc(v66, -1, -1);
    }

    v71 = *(void (**)(uint64_t, _QWORD, uint64_t))(v20 + 104);
    v72 = v155;
    v71(v155, enum case for FMFLocationAlertAddressType.friendLocation(_:), v19);
    v73 = sub_100008000((unint64_t *)&unk_1005E27C8, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocationAlertAddressType, (uint64_t)&protocol conformance descriptor for FMFLocationAlertAddressType);
    v74 = v145;
    dispatch thunk of RawRepresentable.rawValue.getter(&v160, v19, v73);
    dispatch thunk of RawRepresentable.rawValue.getter(&v158, v19, v73);
    v75 = v160;
    v76 = v158;
    v77 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v77(v72, v19);
    v139 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
    v139(v23, v74, v19);
    v141 = (void (*)(char *, uint64_t))v77;
    if (v75 == v76)
    {
      v77((uint64_t)v23, v19);
      v78 = v154;
      v79 = v153;
    }
    else
    {
      v71(v72, enum case for FMFLocationAlertAddressType.custom(_:), v19);
      dispatch thunk of RawRepresentable.rawValue.getter(&v160, v19, v73);
      dispatch thunk of RawRepresentable.rawValue.getter(&v158, v19, v73);
      v86 = v160;
      v87 = v158;
      v77(v72, v19);
      v77((uint64_t)v23, v19);
      v78 = v154;
      v79 = v153;
      if (v86 != v87)
      {
        v105 = v155;
        v71(v155, enum case for FMFLocationAlertAddressType.currentLocation(_:), v19);
        dispatch thunk of RawRepresentable.rawValue.getter(&v160, v19, v73);
        dispatch thunk of RawRepresentable.rawValue.getter(&v158, v19, v73);
        v106 = v160;
        v107 = v158;
        v77(v105, v19);
        if (v106 != v107)
        {
          v121 = 0;
          v122 = 0;
          countAndFlagsBits = 0;
          object = 0;
          v88 = v140;
          v96 = (void (*)(uint64_t, char *, uint64_t))v139;
          goto LABEL_74;
        }
        v160 = 0;
        v161 = 0xE000000000000000;
        _StringGuts.grow(_:)(20);
        swift_bridgeObjectRelease(v161);
        v108 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
        v163._countAndFlagsBits = 0xD00000000000003FLL;
        v163._object = (void *)0x80000001004C48B0;
        v109._object = (void *)0x80000001004C4880;
        v109._countAndFlagsBits = 0xD00000000000002DLL;
        v110._countAndFlagsBits = 0;
        v110._object = (void *)0xE000000000000000;
        v111 = NSLocalizedString(_:tableName:bundle:value:comment:)(v109, (Swift::String_optional)0, (NSBundle)v108, v110, v163);
        object = (unint64_t)v111._object;

        v112 = ((unint64_t)v111._object >> 56) & 0xF;
        countAndFlagsBits = v111._countAndFlagsBits;
        if (((uint64_t)v111._object & 0x2000000000000000) == 0)
          v112 = v111._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
        v88 = v140;
        v96 = (void (*)(uint64_t, char *, uint64_t))v139;
        if (!v112)
          goto LABEL_73;
        v113 = v140 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_address;
        swift_beginAccess(v140 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_address, &v158, 0, 0);
        v114 = v113;
        v115 = v146;
        sub_100007464(v114, v146, &qword_1005D3370);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48))(v115, 1, v78))
        {
          v126 = v144;
          (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v144, v115, v78);
          v127 = sub_1000051EC(v115, &qword_1005D3370);
          v128 = FMFAddress.displayAddressWithoutStreetName.getter(v127);
          v122 = v129;
          (*(void (**)(char *, uint64_t))(v79 + 8))(v126, v78);
          if (v122)
            v121 = v128;
          else
            v121 = 0;
          if (!v122)
            v122 = 0xE000000000000000;
          goto LABEL_68;
        }
        sub_1000051EC(v115, &qword_1005D3370);
        goto LABEL_59;
      }
    }
    v88 = v140;
    v89 = v140 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_addressLabel;
    swift_beginAccess(v140 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_addressLabel, &v158, 0, 0);
    v90 = v149;
    sub_100007464(v89, v149, &qword_1005DC400);
    v91 = v150;
    v92 = v151;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v150 + 48))(v90, 1, v151))
    {
      v99 = v147;
      (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v147, v90, v92);
      sub_1000051EC(v90, &qword_1005DC400);
      v101 = FMFLabel.localizedValue.getter(v100);
      object = v102;
      v103 = v92;
      v97 = v101;
      (*(void (**)(char *, uint64_t))(v91 + 8))(v99, v103);
      v104 = countAndFlagsBits;
      v96 = (void (*)(uint64_t, char *, uint64_t))v139;
LABEL_53:
      v119 = HIBYTE(object) & 0xF;
      countAndFlagsBits = v97;
      if ((object & 0x2000000000000000) == 0)
        v119 = v97 & 0xFFFFFFFFFFFFLL;
      if (!v119)
        goto LABEL_73;
      v120 = v88 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_address;
      swift_beginAccess(v88 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_address, v156, 0, 0);
      sub_100007464(v120, v104, &qword_1005D3370);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48))(v104, 1, v78))
      {
        sub_1000051EC(v104, &qword_1005D3370);
      }
      else
      {
        v123 = v144;
        (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v144, v104, v78);
        v124 = sub_1000051EC(v104, &qword_1005D3370);
        v121 = FMFAddress.displayAddressWithoutStreetName.getter(v124);
        v122 = v125;
        (*(void (**)(char *, uint64_t))(v79 + 8))(v123, v78);
        if (v122)
        {
LABEL_68:
          v130 = countAndFlagsBits;
          swift_bridgeObjectRetain_n(object, 2);
          swift_bridgeObjectRetain(v122);
          if (v130 == v121 && object == v122)
          {
            swift_bridgeObjectRelease_n(object, 2);
            swift_bridgeObjectRelease(v122);
            countAndFlagsBits = v121;
LABEL_72:
            swift_bridgeObjectRelease(v122);
LABEL_73:
            v121 = 0;
            v122 = 0;
            goto LABEL_74;
          }
          countAndFlagsBits = v130;
          v131 = _stringCompareWithSmolCheck(_:_:expecting:)(v130, object, v121, v122, 0);
          swift_bridgeObjectRelease_n(object, 2);
          swift_bridgeObjectRelease(v122);
          if ((v131 & 1) != 0)
            goto LABEL_72;
LABEL_74:
          v132 = v155;
          v133 = v145;
          v96(v155, v145, v19);
          v134 = v88 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_address;
          swift_beginAccess(v88 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_address, &v160, 0, 0);
          v135 = (uint64_t)v143;
          sub_100007464(v134, (uint64_t)v143, &qword_1005D3370);
          objc_allocWithZone((Class)type metadata accessor for FMFenceMapAnnotation(0));
          swift_bridgeObjectRetain(object);
          v136 = sub_1003CBA64(countAndFlagsBits, object, v121, v122, 0, v132, v135, *(uint64_t *)&v60, v57, v59, 0);
          sub_1003AD2BC(v136);
          v137 = *(void **)(v88 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_userDroppedAnnotation);
          *(_QWORD *)(v88 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_userDroppedAnnotation) = v136;

          v141(v133, v19);
          *(_BYTE *)(v88 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_showingUserLocation) = 1;
          swift_bridgeObjectRelease(object);
          return;
        }
      }
      swift_bridgeObjectRelease(0);
LABEL_59:
      v121 = 0;
      v122 = 0xE000000000000000;
      goto LABEL_68;
    }
    sub_1000051EC(v90, &qword_1005DC400);
    v93 = v88 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_address;
    swift_beginAccess(v88 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_address, v157, 0, 0);
    v94 = v93;
    v95 = v148;
    sub_100007464(v94, v148, &qword_1005D3370);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48))(v95, 1, v78))
    {
      sub_1000051EC(v95, &qword_1005D3370);
      v96 = (void (*)(uint64_t, char *, uint64_t))v139;
    }
    else
    {
      v116 = v144;
      (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v144, v95, v78);
      v117 = sub_1000051EC(v95, &qword_1005D3370);
      v97 = FMFAddress.displayAddressWithStreetName.getter(v117);
      object = v118;
      (*(void (**)(char *, uint64_t))(v79 + 8))(v116, v78);
      v96 = (void (*)(uint64_t, char *, uint64_t))v139;
      if (object)
        goto LABEL_52;
    }
    swift_bridgeObjectRelease(0);
    v97 = 0;
    object = 0xE000000000000000;
LABEL_52:
    v104 = countAndFlagsBits;
    goto LABEL_53;
  }
LABEL_19:
  v48 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView;
  v49 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView);
  if (!v49)
  {
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  v50 = objc_msgSend(v49, "userLocation");
  v51 = objc_msgSend(v50, "location");

  v52 = *(void **)(v1 + v48);
  if (v51)
  {
    if (v52)
    {
      v53 = v52;
      v54 = objc_msgSend(v53, "userLocation");
      objc_msgSend(v53, "selectAnnotation:animated:", v54, 1);

      return;
    }
    goto LABEL_77;
  }
  if (!v52)
  {
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
    return;
  }
  objc_msgSend(v52, "centerCoordinate");
  v82 = v80;
  if (v81 >= -180.0)
  {
    v83 = v81;
    if (v81 <= 180.0 && v80 >= -90.0 && v80 <= 90.0)
    {
      v84 = *(void **)(v1 + v48);
      if (v84)
      {
        objc_msgSend(v84, "setRegion:animated:", 1, v80, v81, 180.0, 360.0);
        v85 = v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_currentMapRegion;
        *(double *)v85 = v82;
        *(double *)(v85 + 8) = v83;
        *(_OWORD *)(v85 + 16) = xmmword_10048EB60;
        *(_BYTE *)(v85 + 32) = 0;
        return;
      }
      goto LABEL_80;
    }
  }
}

void sub_1003AD2BC(void *a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  void **v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  BOOL v30;
  BOOL v31;
  BOOL v32;
  void *v33;
  unint64_t v34;
  void *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  _QWORD *v69;
  void **aBlock;
  uint64_t v71;
  uint64_t (*v72)(uint64_t);
  void *v73;
  void (*v74)();
  uint64_t v75;
  CLLocationCoordinate2D v76;
  MKCoordinateRegion v77;

  v2 = v1;
  v68 = type metadata accessor for DispatchWorkItemFlags(0);
  v64 = *(_QWORD *)(v68 - 8);
  __chkstk_darwin(v68);
  v67 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for DispatchQoS(0);
  v63 = *(_QWORD *)(v66 - 8);
  __chkstk_darwin(v66);
  v65 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v6 = type metadata accessor for Logger(0);
  sub_100056D88(v6, (uint64_t)qword_1005F5748);
  v7 = a1;
  v8 = Logger.logObject.getter(v7);
  v9 = static os_log_type_t.default.getter(v8);
  if (os_log_type_enabled(v8, v9))
  {
    v62 = v2;
    v10 = (uint8_t *)swift_slowAlloc(12, -1);
    v11 = (void **)swift_slowAlloc(32, -1);
    aBlock = v11;
    *(_DWORD *)v10 = 136315138;
    v12 = objc_msgSend(v7, "debugDescription");
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v15 = v14;

    v16 = v13;
    v2 = v62;
    v69 = (_QWORD *)sub_100056DA0(v16, v15, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v69, &aBlock);

    swift_bridgeObjectRelease(v15);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "FMFenceMapViewController: addAndSelectAnnotation %s", v10, 0xCu);
    swift_arrayDestroy(v11, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v11, -1, -1);
    swift_slowDealloc(v10, -1, -1);

  }
  else
  {

  }
  v17 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView;
  v18 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView);
  if (!v18)
  {
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v19 = v18;
  objc_msgSend(v7, "coordinate");
  v77 = MKCoordinateRegionMakeWithDistance(v76, *(double *)&v7[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius] * 3.5, *(double *)&v7[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius] * 3.5);
  objc_msgSend(v19, "regionThatFits:", v77.center.latitude, v77.center.longitude, v77.span.latitudeDelta, v77.span.longitudeDelta);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v27 = v26;

  v30 = v23 < -180.0 || v23 > 180.0 || v21 < -90.0 || v21 > 90.0;
  if (v30 || (v25 >= 0.0 ? (v31 = v25 > 180.0) : (v31 = 1), v31 || (v27 >= 0.0 ? (v32 = v27 > 360.0) : (v32 = 1), v32)))
  {
LABEL_27:
    v35 = *(void **)(v2 + v17);
    if (v35)
    {
      objc_msgSend(v35, "addAnnotation:", v7);
      v36 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
      v37 = (void *)static OS_dispatch_queue.main.getter(v36);
      v38 = swift_allocObject(&unk_100560220, 24, 7);
      swift_unknownObjectWeakInit(v38 + 16);
      v39 = swift_allocObject(&unk_100560298, 32, 7);
      *(_QWORD *)(v39 + 16) = v38;
      *(_QWORD *)(v39 + 24) = v7;
      v74 = sub_1003B903C;
      v75 = v39;
      aBlock = _NSConcreteStackBlock;
      v71 = 1107296256;
      v72 = sub_100037DF8;
      v73 = &unk_1005602B0;
      v40 = _Block_copy(&aBlock);
      v41 = v75;
      v42 = v7;
      swift_release(v41);
      v43 = v65;
      static DispatchQoS.unspecified.getter(v44);
      aBlock = (void **)_swiftEmptyArrayStorage;
      v45 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v61 = v45;
      v46 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
      v60 = v46;
      v62 = sub_1000555E4();
      v47 = v67;
      v48 = v68;
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v46, v62, v68, v45);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v43, v47, v40);
      _Block_release(v40);

      v64 = *(_QWORD *)(v64 + 8);
      ((void (*)(char *, uint64_t))v64)(v47, v48);
      v49 = *(uint64_t (**)(char *, uint64_t))(v63 + 8);
      v50 = v66;
      v51 = v49(v43, v66);
      v63 = *(_QWORD *)&v42[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_didReverseGeocodeGroup];
      v52 = (void *)static OS_dispatch_queue.main.getter(v51);
      v53 = swift_allocObject(&unk_100560220, 24, 7);
      swift_unknownObjectWeakInit(v53 + 16);
      v54 = swift_allocObject(&unk_1005602E8, 32, 7);
      *(_QWORD *)(v54 + 16) = v53;
      *(_QWORD *)(v54 + 24) = v42;
      v74 = sub_1003B9080;
      v75 = v54;
      aBlock = _NSConcreteStackBlock;
      v71 = 1107296256;
      v72 = sub_100037DF8;
      v73 = &unk_100560300;
      v55 = _Block_copy(&aBlock);
      v56 = v42;
      v57 = swift_retain(v53);
      static DispatchQoS.unspecified.getter(v57);
      v69 = _swiftEmptyArrayStorage;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v69, v60, v62, v48, v61);
      OS_dispatch_group.notify(qos:flags:queue:execute:)(v43, v47, v52, v55);
      _Block_release(v55);

      ((void (*)(char *, uint64_t))v64)(v47, v48);
      v49(v43, v50);
      v58 = v75;
      swift_release(v53);
      swift_release(v58);
      return;
    }
    goto LABEL_30;
  }
  v33 = *(void **)(v2 + v17);
  if (v33)
  {
    objc_msgSend(v33, "setRegion:animated:", 1, v21, v23, v25, v27);
    v34 = v2 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_currentMapRegion;
    *(double *)v34 = v21;
    *(double *)(v34 + 8) = v23;
    *(double *)(v34 + 16) = v25;
    *(double *)(v34 + 24) = v27;
    *(_BYTE *)(v34 + 32) = 0;
    goto LABEL_27;
  }
LABEL_31:
  __break(1u);
}

void sub_1003AD914(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  void *v6;
  id v7;
  _BYTE v8[24];

  v3 = a1 + 16;
  swift_beginAccess(a1 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(void **)(Strong + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView);
    v7 = v6;

    if (v6)
    {
      objc_msgSend(v7, "selectAnnotation:animated:", a2, 1);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1003AD9A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t Strong;
  void *v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  _BYTE v15[24];
  _BYTE v16[24];

  v4 = sub_100053F2C(&qword_1005D3370);
  __chkstk_darwin(v4);
  v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  a1 += 16;
  swift_beginAccess(a1, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a1);
  if (Strong)
  {
    v8 = (void *)Strong;
    v9 = *(void **)(Strong + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView);
    v10 = v9;

    if (v9)
    {
      v11 = objc_msgSend(v10, "viewForAnnotation:", a2);

      if (v11)
      {
        v12 = a2 + OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_fmfPlacemark;
        swift_beginAccess(v12, v15, 0, 0);
        sub_100007464(v12, (uint64_t)v6, &qword_1005D3370);
        v13 = type metadata accessor for FMFAddress(0);
        v14 = (*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v6, 1, v13) != 1;
        sub_1000051EC((uint64_t)v6, &qword_1005D3370);
        objc_msgSend(v11, "setCanShowCallout:", v14);

      }
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1003ADB0C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  id v21;
  id v22;
  Swift::String v23;
  Swift::String v24;
  void *object;
  double v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  Class isa;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  objc_class *v47;
  Class v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  id v77;
  id v78;
  unint64_t v79;
  uint64_t v80;
  Swift::String v81;

  v77 = a6;
  v13 = sub_100053F2C(&qword_1005D3418);
  __chkstk_darwin(v13);
  v76 = (char *)&v73 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FMFLocationAlertAddressType(0);
  v16 = __chkstk_darwin(v15);
  v19 = (char *)&v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    if (!a1)
      return;
    v74 = v17;
    v75 = v16;
    v27 = objc_msgSend(a1, "mapItems");
    v28 = sub_100006C5C(0, &qword_1005E27D8, MKMapItem_ptr);
    v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v27, v28);

    if ((unint64_t)v29 >> 62)
    {
      v53 = v29 < 0 ? v29 : v29 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v29);
      v30 = _CocoaArrayWrapper.endIndex.getter(v53);
      swift_bridgeObjectRelease(v29);
    }
    else
    {
      v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    *(_QWORD *)&v31 = swift_bridgeObjectRelease(v29).n128_u64[0];
    if (v30)
    {
      v32 = (uint64_t)objc_msgSend(a1, "mapItems", v31);
      v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v32, v28);

      if ((unint64_t)v33 >> 62)
      {
        if (v33 < 0)
          v32 = v33;
        else
          v32 = v33 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain(v33);
        v34 = _CocoaArrayWrapper.endIndex.getter(v32);
        swift_bridgeObjectRelease(v33);
        if (v34)
        {
LABEL_10:
          v73 = a7;
          v80 = (uint64_t)_swiftEmptyArrayStorage;
          if (v34 < 1)
          {
            __break(1u);
          }
          else
          {
            swift_bridgeObjectRetain(v33);
            v35 = 0;
            v36 = a5 & 1;
            do
            {
              if ((v33 & 0xC000000000000001) != 0)
                v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v35, v33);
              else
                v37 = *(id *)(v33 + 8 * v35 + 32);
              v38 = v37;
              ++v35;
              v78 = v37;
              sub_1003AE25C(&v78, a4, &v80, v33, v36, a3);

            }
            while (v34 != v35);
            swift_bridgeObjectRelease(v33);
            v30 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView;
            v34 = *(_QWORD *)(a3 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView);
            if (!v34)
              goto LABEL_66;
            v32 = v80;
            a7 = v73;
            if (!((unint64_t)v80 >> 62))
            {
              swift_bridgeObjectRetain_n(v80, 2);
              dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter((id)v34);
              v39 = v32;
              goto LABEL_19;
            }
          }
          if (v32 < 0)
            v54 = v32;
          else
            v54 = v32 & 0xFFFFFFFFFFFFFF8;
          v55 = (id)v34;
          swift_bridgeObjectRetain(v32);
          v56 = sub_100053F2C(&qword_1005E1120);
          v39 = _bridgeCocoaArray<A>(_:)(v54, v56);
LABEL_19:
          swift_bridgeObjectRelease(v32);
          v40 = sub_100053F2C(&qword_1005E1120);
          isa = Array._bridgeToObjectiveC()().super.isa;
          objc_msgSend((id)v34, "addAnnotations:", isa, swift_bridgeObjectRelease(v39).n128_f64[0]);

          v43 = v74;
          v42 = v75;
          (*(void (**)(char *, _QWORD, uint64_t))(v74 + 104))(v19, enum case for FMFLocationAlertAddressType.droppedPin(_:), v75);
          v44 = sub_100008000((unint64_t *)&qword_1005E27E0, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocationAlertAddressType, (uint64_t)&protocol conformance descriptor for FMFLocationAlertAddressType);
          LOBYTE(isa) = dispatch thunk of static Equatable.== infix(_:_:)(a4, v19, v42, v44);
          (*(void (**)(char *, uint64_t))(v43 + 8))(v19, v42);
          if ((isa & 1) == 0)
          {
            v45 = v80;
            if ((unint64_t)v80 >> 62)
            {
              if (v80 < 0)
                v57 = v80;
              else
                v57 = v80 & 0xFFFFFFFFFFFFFF8;
              swift_bridgeObjectRetain(v80);
              if (_CocoaArrayWrapper.endIndex.getter(v57))
                goto LABEL_22;
            }
            else
            {
              v46 = *(_QWORD *)((v80 & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain(v80);
              if (v46)
              {
LABEL_22:
                if ((v45 & 0xC000000000000001) != 0)
                {
                  v47 = (objc_class *)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v45);
                  goto LABEL_25;
                }
                if (*(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10))
                {
                  v47 = (objc_class *)*(id *)(v45 + 32);
LABEL_25:
                  v48 = v47;
                  *(_QWORD *)&v49 = swift_bridgeObjectRelease(v45).n128_u64[0];
                  if ((unint64_t)v45 >> 62)
                  {
                    if (v45 < 0)
                      v51 = v45;
                    else
                      v51 = v45 & 0xFFFFFFFFFFFFFF8;
                    swift_bridgeObjectRetain(v45);
                    v50 = _CocoaArrayWrapper.endIndex.getter(v51);
                    *(_QWORD *)&v49 = swift_bridgeObjectRelease(v45).n128_u64[0];
                  }
                  else
                  {
                    v50 = *(_QWORD *)((v45 & 0xFFFFFFFFFFFFF8) + 0x10);
                  }
                  if (v50 == 1)
                  {
                    v52 = *(void **)(a3 + v30);
                    if (v52)
                    {
                      objc_msgSend(v52, "selectAnnotation:animated:", v48, 1, v49);
LABEL_58:
                      v62 = (uint64_t)v76;
                      v61 = v77;

                      v63 = *(_QWORD *)(a3 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapSearchResults);
                      *(_QWORD *)(a3 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapSearchResults) = v33;
                      v64 = swift_bridgeObjectRelease(v63);
                      v66 = v74;
                      v65 = v75;
                      (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v74 + 16))(v62, a4, v75, v64);
                      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v66 + 56))(v62, 0, 1, v65);
                      v67 = a3 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapLastSeachAddressType;
                      swift_beginAccess(a3 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapLastSeachAddressType, &v78, 33, 0);
                      sub_100099CDC(v62, v67, &qword_1005D3418);
                      swift_endAccess(&v78);
                      v68 = (_QWORD *)(a3 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapLastSearchedQuery);
                      v69 = *(_QWORD *)(a3 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapLastSearchedQuery + 8);
                      *v68 = v61;
                      v68[1] = a7;
                      swift_bridgeObjectRetain(a7);
                      swift_bridgeObjectRelease(v69);
                      v70 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
                      objc_msgSend(v70, "setNetworkActivityIndicatorVisible:", 0);

                      swift_bridgeObjectRelease(v80);
                      return;
                    }
LABEL_68:
                    __break(1u);
                    return;
                  }

                  goto LABEL_54;
                }
                __break(1u);
LABEL_66:
                __break(1u);
LABEL_67:
                __break(1u);
                goto LABEL_68;
              }
            }
            swift_bridgeObjectRelease(v45);
          }
LABEL_54:
          v58 = *(void **)(a3 + v30);
          if (v58)
          {
            v59 = v80;
            if ((unint64_t)v80 >> 62)
            {
              if (v80 < 0)
                v71 = v80;
              else
                v71 = v80 & 0xFFFFFFFFFFFFFF8;
              v72 = v58;
              swift_bridgeObjectRetain(v59);
              v60 = _bridgeCocoaArray<A>(_:)(v71, v40);
            }
            else
            {
              swift_bridgeObjectRetain_n(v80, 2);
              dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v58);
              v60 = v59;
            }
            swift_bridgeObjectRelease(v59);
            v48 = Array._bridgeToObjectiveC()().super.isa;
            objc_msgSend(v58, "showAnnotations:animated:", v48, 1, swift_bridgeObjectRelease(v60).n128_f64[0]);

            goto LABEL_58;
          }
          goto LABEL_67;
        }
      }
      else
      {
        v34 = *(_QWORD *)((v33 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v34)
          goto LABEL_10;
      }
      swift_bridgeObjectRelease(v33);
      return;
    }
  }
  v20 = *(void **)(a3 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchController);
  if (v20)
  {
    v21 = objc_msgSend(v20, "searchBar");
    v78 = 0;
    v79 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v79);
    v22 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v81._countAndFlagsBits = 0xD00000000000002CLL;
    v81._object = (void *)0x80000001004B65E0;
    v23._object = (void *)0x80000001004B65C0;
    v23._countAndFlagsBits = 0xD00000000000001ALL;
    v24._countAndFlagsBits = 0;
    v24._object = (void *)0xE000000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v23, (Swift::String_optional)0, (NSBundle)v22, v24, v81)._object;

    v77 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v26 = swift_bridgeObjectRelease(object).n128_u64[0];
    objc_msgSend(v21, "setPlaceholder:", v77, v26);

  }
}

void sub_1003AE25C(id *a1, uint64_t a2, _QWORD *a3, uint64_t a4, int a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  double v27;
  double v28;
  double v29;
  double v30;
  id v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  char *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  id v45;
  void *v46;
  id v47;
  char v48;
  __n128 v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  CLLocationCoordinate2D v76;
  MKCoordinateRegion v77;

  v66 = a6;
  v67 = a5;
  v73 = a2;
  v9 = sub_100053F2C(&qword_1005D3370);
  __chkstk_darwin(v9);
  v11 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FMFLocationAlertAddressType(0);
  v68 = *(_QWORD *)(v12 - 8);
  v69 = v12;
  __chkstk_darwin(v12);
  v14 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for FMFAddress(0);
  v75 = *(_QWORD *)(v70 - 8);
  __chkstk_darwin(v70);
  v16 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a1;
  v18 = objc_msgSend(v17, "placemark");
  v74 = v16;
  FMFAddress.init(from:)(v18);
  v19 = objc_msgSend(v17, "placemark");
  v20 = objc_msgSend(v19, "region");

  if (v20)
  {
    v21 = objc_opt_self(CLCircularRegion);
    v22 = (void *)swift_dynamicCastObjCClass(v20, v21);
    if (v22)
    {
      objc_msgSend(v22, "radius");
      v24 = v23;

      v71 = 0;
      v72 = v24;
      goto LABEL_6;
    }

  }
  v72 = 0;
  v71 = 1;
LABEL_6:
  v25 = v73;
  v26 = objc_msgSend(v17, "placemark", v66);
  objc_msgSend(v26, "coordinate");
  v28 = v27;
  v30 = v29;

  v31 = objc_msgSend(v17, "name");
  if (v31)
  {
    v32 = v31;
    v33 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
    v35 = v34;

  }
  else
  {
    v33 = 0;
    v35 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v14, v25, v69);
  v36 = v75;
  v37 = v70;
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v11, v74, v70);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v11, 0, 1, v37);
  v38 = objc_allocWithZone((Class)type metadata accessor for FMFenceMapAnnotation(0));
  v39 = sub_1003CBA64(v33, v35, 0, 0, 1, (uint64_t)v14, (uint64_t)v11, v72, v28, v30, v71);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v39);
  v41 = *(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v40 = *(_QWORD *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v41 >= v40 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v40 > 1, v41 + 1, 1);
  v42 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v41, v39);
  specialized Array._endMutation()(v42);
  if (!((unint64_t)a4 >> 62))
  {
    v43 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
    v44 = v17;
    swift_bridgeObjectRetain(a4);
    if (v43)
      goto LABEL_13;
LABEL_35:

    v49 = swift_bridgeObjectRelease(a4);
    goto LABEL_36;
  }
  if (a4 < 0)
    v64 = a4;
  else
    v64 = a4 & 0xFFFFFFFFFFFFFF8;
  v65 = v17;
  swift_bridgeObjectRetain(a4);
  if (!_CocoaArrayWrapper.endIndex.getter(v64))
    goto LABEL_35;
LABEL_13:
  if ((a4 & 0xC000000000000001) != 0)
  {
    v45 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a4);
  }
  else
  {
    if (!*(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_39;
    }
    v45 = *(id *)(a4 + 32);
  }
  v46 = v45;
  swift_bridgeObjectRelease(a4);
  sub_100006C5C(0, &qword_1005E27D8, MKMapItem_ptr);
  v47 = v17;
  v48 = static NSObject.== infix(_:_:)(v47, v46);

  if ((v48 & 1) == 0)
  {
LABEL_36:
    (*(void (**)(char *, uint64_t, __n128))(v75 + 8))(v74, v37, v49);

    return;
  }
  if ((v67 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v75 + 8))(v74, v37);

    return;
  }
  v50 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView;
  v51 = v66;
  v52 = *(void **)(v66 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView);
  if (v52)
  {
    v53 = v52;
    objc_msgSend(v39, "coordinate");
    v77 = MKCoordinateRegionMakeWithDistance(v76, *(double *)&v39[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius] * 3.5, *(double *)&v39[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius] * 3.5);
    objc_msgSend(v53, "regionThatFits:", v77.center.latitude, v77.center.longitude, v77.span.latitudeDelta, v77.span.longitudeDelta);
    v55 = v54;
    v57 = v56;
    v59 = v58;
    v61 = v60;

    if (v57 < -180.0
      || v57 > 180.0
      || v55 < -90.0
      || v55 > 90.0
      || v59 < 0.0
      || v59 > 180.0
      || v61 < 0.0
      || v61 > 360.0)
    {
      goto LABEL_29;
    }
    v62 = *(void **)(v51 + v50);
    if (v62)
    {
      objc_msgSend(v62, "setRegion:animated:", 1, v55, v57, v59, v61);
      v63 = v51 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_currentMapRegion;
      *(double *)v63 = v55;
      *(double *)(v63 + 8) = v57;
      *(double *)(v63 + 16) = v59;
      *(double *)(v63 + 24) = v61;
      *(_BYTE *)(v63 + 32) = 0;
LABEL_29:

      (*(void (**)(char *, uint64_t))(v75 + 8))(v74, v37);
      return;
    }
    goto LABEL_40;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
}

void sub_1003AE7F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  __n128 v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  void (*v23)(char *, char *, uint64_t);
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;

  v1 = sub_100053F2C((uint64_t *)&unk_1005D3350);
  __chkstk_darwin(v1);
  v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FMFFriend(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v28 - v9;
  v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mediator);
  if (v11)
  {
    v12 = *(_QWORD *)(v11 + 48);
    swift_retain(v12);
    v14 = dispatch thunk of FMFManager.friends.getter(v13);
    v15 = swift_release(v12);
    v16 = _swiftEmptyArrayStorage;
    v32 = _swiftEmptyArrayStorage;
    v31 = *(_QWORD *)(v14 + 16);
    if (!v31)
    {
LABEL_14:
      swift_bridgeObjectRelease(v14);
      v32 = v16;
      swift_bridgeObjectRetain(v16);
      sub_1003B4560(&v32);
      swift_release(v16);
      return;
    }
    v17 = 0;
    v29 = v8;
    v30 = v4;
    v28 = v14;
    while (v17 < *(_QWORD *)(v14 + 16))
    {
      v18 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      v19 = *(_QWORD *)(v5 + 72);
      v20 = (*(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16))(v10, v14 + v18 + v19 * v17, v4, v15);
      FMFFriend.location.getter(v20);
      v21 = type metadata accessor for FMFLocation(0);
      v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v3, 1, v21);
      sub_1000051EC((uint64_t)v3, (uint64_t *)&unk_1005D3350);
      if (v22 == 1)
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      }
      else
      {
        v23 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
        v23(v8, v10, v4);
        v24 = v32;
        if ((swift_isUniquelyReferenced_nonNull_native(v32) & 1) == 0)
        {
          sub_100111E44(0, v24[2] + 1, 1);
          v24 = v32;
        }
        v26 = v24[2];
        v25 = v24[3];
        if (v26 >= v25 >> 1)
        {
          sub_100111E44(v25 > 1, v26 + 1, 1);
          v24 = v32;
        }
        v24[2] = v26 + 1;
        v27 = (unint64_t)v24 + v18 + v26 * v19;
        v8 = v29;
        v4 = v30;
        v23((char *)v27, v29, v30);
        v32 = v24;
        v14 = v28;
      }
      if (v31 == ++v17)
      {
        v16 = v32;
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  __break(1u);
  swift_release(v32);
  __break(1u);
}

void sub_1003AEA98()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  SEL *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  char *v67;
  id v68;
  Swift::String v69;
  Swift::String v70;
  Swift::String v71;
  uint64_t v72;
  id v73;
  char *v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  id v78;
  Swift::String v79;
  Swift::String v80;
  Swift::String v81;
  char *v82;
  uint64_t v83;
  id v84;
  char *v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  BOOL v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  void (*v101)(char *, uint64_t);
  uint64_t v102;
  uint64_t v103;
  int v104;
  uint64_t *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  unsigned int (*v109)(uint64_t, uint64_t, _QWORD *);
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  __n128 v121;
  uint64_t v122;
  uint64_t v123;
  __n128 v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  id v128;
  Swift::String v129;
  Swift::String v130;
  Swift::String v131;
  uint64_t v132;
  id v133;
  char *v134;
  unint64_t v135;
  char *v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  id v148;
  Swift::String v149;
  Swift::String v150;
  Swift::String v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  __n128 v157;
  char *v158;
  uint64_t v159;
  char *v160;
  id v161;
  char *v162;
  unint64_t v163;
  unint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  _QWORD *v172;
  void *v173;
  _QWORD *v174;
  id v175;
  void *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  id v180;
  void *v181;
  id v182;
  _QWORD *v183;
  id v184;
  char *v185;
  unint64_t v186;
  unint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  __n128 v191;
  int v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  id v199;
  void **v200;
  uint64_t v201;
  void **v202;
  __n128 v203;
  int v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  _QWORD *v208;
  _BYTE *v209;
  void **v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  __n128 v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  id v221;
  char *v222;
  unint64_t v223;
  unint64_t v224;
  uint64_t v225;
  char *v226;
  unint64_t v227;
  unint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  __n128 v232;
  _QWORD *v233;
  char *v234;
  char *v235;
  unint64_t v236;
  uint64_t v237;
  uint64_t (*v238)(char *, char *, uint64_t, __n128);
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  __n128 v243;
  uint64_t v244;
  __n128 v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  __n128 v249;
  char *v250;
  void (*v251)(char *, char *, char *);
  void **v252;
  unint64_t v253;
  unint64_t v254;
  unint64_t v255;
  char *v256;
  void **v257;
  void **v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  __n128 v263;
  uint64_t v264;
  _BYTE *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  id v269;
  char *v270;
  unint64_t v271;
  unint64_t v272;
  uint64_t v273;
  unint64_t v274;
  unint64_t v275;
  uint64_t v276;
  void **v277;
  uint64_t v278;
  uint64_t v279;
  char *v280;
  char *v281;
  uint64_t v282;
  char *v283;
  char *v284;
  void *v285;
  uint64_t v286;
  uint64_t v287;
  void *v288;
  char *v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  unint64_t v293;
  char *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  unint64_t v298;
  void (*v299)(char *, uint64_t, uint64_t);
  uint64_t v300;
  uint64_t v301;
  char *v302;
  char *v303;
  char *v304;
  char *v305;
  char *v306;
  char *v307;
  uint64_t v308;
  uint64_t v309;
  char *v310;
  uint64_t v311;
  char *v312;
  char *v313;
  char *v314;
  unsigned int (*v315)(char *, uint64_t, uint64_t);
  uint64_t v316;
  char *v317;
  uint64_t v318;
  char *v319;
  _QWORD *v320;
  uint64_t v321;
  char *v322;
  uint64_t v323;
  _QWORD *v324;
  char *v325;
  char *v326;
  char *v327;
  char *v328;
  char *v329;
  char *v330;
  uint64_t v331;
  uint64_t v332;
  char *v333;
  uint64_t v334;
  uint64_t v335;
  char *v336;
  _BYTE *v337;
  char *v338;
  char v339[8];
  char v340[8];
  _QWORD *v341;
  void **aBlock;
  unint64_t v343;
  uint64_t (*v344)(uint64_t);
  void *v345;
  void (*v346)();
  uint64_t v347;
  unint64_t v348;
  char v349[8];
  unint64_t v350;
  uint64_t v351;
  Swift::String v352;
  Swift::String v353;
  Swift::String v354;
  Swift::String v355;

  v1 = v0;
  v335 = type metadata accessor for DispatchWorkItemFlags(0);
  v334 = *(_QWORD *)(v335 - 8);
  __chkstk_darwin(v335);
  v333 = (char *)&v299 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v332 = type metadata accessor for DispatchQoS(0);
  v331 = *(_QWORD *)(v332 - 8);
  __chkstk_darwin(v332);
  v330 = (char *)&v299 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v323 = type metadata accessor for FMFLabelledLocation(0);
  v329 = *(char **)(v323 - 8);
  v4 = __chkstk_darwin(v323);
  v322 = (char *)&v299 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __chkstk_darwin(v4);
  v325 = (char *)&v299 - v7;
  v8 = __chkstk_darwin(v6);
  v326 = (char *)&v299 - v9;
  __chkstk_darwin(v8);
  v336 = (char *)&v299 - v10;
  v11 = sub_100053F2C(&qword_1005D38C0);
  __chkstk_darwin(v11);
  v310 = (char *)&v299 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v311 = type metadata accessor for FMFContact(0);
  v309 = *(_QWORD *)(v311 - 8);
  __chkstk_darwin(v311);
  v302 = (char *)&v299 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100053F2C(&qword_1005DC400);
  v15 = __chkstk_darwin(v14);
  v327 = (char *)&v299 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v15);
  v338 = (char *)&v299 - v18;
  v19 = __chkstk_darwin(v17);
  v328 = (char *)&v299 - v20;
  __chkstk_darwin(v19);
  v303 = (char *)&v299 - v21;
  v324 = (_QWORD *)type metadata accessor for FMFFriend(0);
  v22 = *(v324 - 1);
  v23 = __chkstk_darwin(v324);
  v307 = (char *)&v299 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v314 = (char *)&v299 - v25;
  v26 = sub_100053F2C(&qword_1005D3380);
  v27 = __chkstk_darwin(v26);
  v308 = (uint64_t)&v299 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __chkstk_darwin(v27);
  v316 = (uint64_t)&v299 - v30;
  v31 = __chkstk_darwin(v29);
  v300 = (uint64_t)&v299 - v32;
  v33 = __chkstk_darwin(v31);
  v301 = (uint64_t)&v299 - v34;
  __chkstk_darwin(v33);
  v318 = (uint64_t)&v299 - v35;
  v36 = sub_100053F2C(&qword_1005D3418);
  __chkstk_darwin(v36);
  v319 = (char *)&v299 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v320 = (_QWORD *)type metadata accessor for FMFLocationAlertAddressType(0);
  v38 = *(v320 - 1);
  __chkstk_darwin(v320);
  v313 = (char *)&v299 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_100053F2C(&qword_1005D3370);
  v41 = __chkstk_darwin(v40);
  v304 = (char *)&v299 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  v44 = (char *)&v299 - v43;
  v45 = sub_100053F2C((uint64_t *)&unk_1005D3350);
  v46 = __chkstk_darwin(v45);
  v306 = (char *)&v299 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __chkstk_darwin(v46);
  v317 = (char *)&v299 - v49;
  __chkstk_darwin(v48);
  v51 = (char *)&v299 - v50;
  v52 = type metadata accessor for FMFLocation(0);
  v53 = *(_QWORD *)(v52 - 8);
  v54 = __chkstk_darwin(v52);
  v305 = (char *)&v299 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __chkstk_darwin(v54);
  v312 = (char *)&v299 - v57;
  __chkstk_darwin(v56);
  v59 = (char *)&v299 - v58;
  v350 = (unint64_t)_swiftEmptyArrayStorage;
  v60 = (uint64_t)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_myLocation];
  swift_beginAccess(&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_myLocation], v349, 0, 0);
  sub_100007464(v60, (uint64_t)v51, (uint64_t *)&unk_1005D3350);
  v315 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
  v61 = (SEL *)&unk_1005AA000;
  v62 = (uint64_t)"GEO_FENCE_LOCATION_PICKER_MY_CURRENT_LOCATION";
  if (v315(v51, 1, v52) == 1)
  {
    v63 = v52;
    sub_1000051EC((uint64_t)v51, (uint64_t *)&unk_1005D3350);
LABEL_5:
    aBlock = 0;
    v343 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v343);
    v68 = objc_msgSend((id)objc_opt_self(NSBundle), v61[208]);
    v352._countAndFlagsBits = 0xD00000000000003FLL;
    v352._object = (void *)0x80000001004C48B0;
    v69._object = (void *)0x80000001004C4880;
    v69._countAndFlagsBits = 0xD00000000000002DLL;
    v70._countAndFlagsBits = 0;
    v70._object = (void *)0xE000000000000000;
    v71 = NSLocalizedString(_:tableName:bundle:value:comment:)(v69, (Swift::String_optional)0, (NSBundle)v68, v70, v352);

    v72 = (uint64_t)v319;
    (*(void (**)(char *, uint64_t, uint64_t, _QWORD *))(v38 + 56))(v319, 1, 1, v320);
    v73 = objc_allocWithZone((Class)type metadata accessor for FMFenceMapTransientRecord(0));
    v74 = sub_100275FB0(v71._countAndFlagsBits, (uint64_t)v71._object, v72, 0, 0, 0, 0);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v74);
    v76 = *(_QWORD *)((v350 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v75 = *(_QWORD *)((v350 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v76 >= v75 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v75 > 1, v76 + 1, 1);
    v77 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v76, v74);
    specialized Array._endMutation()(v77);

    goto LABEL_10;
  }
  v64 = (*(uint64_t (**)(char *, char *, uint64_t))(v53 + 32))(v59, v51, v52);
  FMFLocation.address.getter(v64);
  v65 = type metadata accessor for FMFAddress(0);
  v66 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 48))(v44, 1, v65);
  sub_1000051EC((uint64_t)v44, &qword_1005D3370);
  if (v66 == 1)
  {
    v67 = v59;
    v63 = v52;
    (*(void (**)(char *, uint64_t))(v53 + 8))(v67, v52);
    v61 = (SEL *)&unk_1005AA000;
    goto LABEL_5;
  }
  v337 = (_BYTE *)v22;
  aBlock = 0;
  v343 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(v343);
  v78 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v353._countAndFlagsBits = 0xD00000000000003FLL;
  v353._object = (void *)0x80000001004C48B0;
  v79._object = (void *)0x80000001004C4880;
  v79._countAndFlagsBits = 0xD00000000000002DLL;
  v80._countAndFlagsBits = 0;
  v80._object = (void *)0xE000000000000000;
  v81 = NSLocalizedString(_:tableName:bundle:value:comment:)(v79, (Swift::String_optional)0, (NSBundle)v78, v80, v353);

  v62 = v38;
  v82 = v313;
  (*(void (**)(char *, _QWORD, _QWORD *))(v38 + 104))(v313, enum case for FMFLocationAlertAddressType.currentLocation(_:), v320);
  v83 = (uint64_t)v312;
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v312, v59, v52);
  v84 = objc_allocWithZone((Class)type metadata accessor for FMFenceMapTransientRecord(0));
  v85 = sub_100276430(v81._countAndFlagsBits, (uint64_t)v81._object, v82, v83);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v85);
  v87 = *(_QWORD *)((v350 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v86 = *(_QWORD *)((v350 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v87 >= v86 >> 1)
    goto LABEL_131;
  while (1)
  {
    v88 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v87, v85);
    specialized Array._endMutation()(v88);

    v89 = v59;
    v63 = v52;
    (*(void (**)(char *, uint64_t))(v53 + 8))(v89, v52);
    v22 = (uint64_t)v337;
    v38 = v62;
LABEL_10:
    v321 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_isNotifyMe;
    v90 = v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_isNotifyMe] == 1;
    v337 = v1;
    v91 = (uint64_t)v324;
    if (!v90)
      goto LABEL_42;
    v62 = (uint64_t)&OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_requiredCapability;
    v92 = (uint64_t)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_friendForFence];
    swift_beginAccess(&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_friendForFence], v339, 0, 0);
    v93 = v318;
    sub_100007464(v92, v318, &qword_1005D3380);
    v52 = *(_QWORD *)(v22 + 48);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v52)(v93, 1, v91))
    {
      sub_1000051EC(v93, &qword_1005D3380);
      v94 = (uint64_t)v317;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56))(v317, 1, 1, v63);
LABEL_15:
      sub_1000051EC(v94, (uint64_t *)&unk_1005D3350);
LABEL_16:
      v102 = v92;
      v103 = v316;
      sub_100007464(v102, v316, &qword_1005D3380);
      v104 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v52)(v103, 1, v91);
      v1 = v337;
      if (v104)
      {
        v105 = &qword_1005D3380;
LABEL_20:
        sub_1000051EC(v103, v105);
        goto LABEL_39;
      }
      v106 = v307;
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v307, v103, v91);
      v107 = sub_1000051EC(v103, &qword_1005D3380);
      v103 = (uint64_t)v306;
      FMFFriend.location.getter(v107);
      (*(void (**)(char *, uint64_t))(v22 + 8))(v106, v91);
      v108 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v315)(v103, 1, v63);
      if ((_DWORD)v108 == 1)
      {
        v105 = (uint64_t *)&unk_1005D3350;
        goto LABEL_20;
      }
      v117 = v303;
      FMFLocation.label.getter(v108);
      v118 = (uint64_t)v117;
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v103, v63);
      v119 = type metadata accessor for FMFLabel(0);
      v120 = *(_QWORD *)(v119 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v120 + 48))(v118, 1, v119) == 1)
      {
        sub_1000051EC(v118, &qword_1005DC400);
        goto LABEL_38;
      }
      v125 = FMFLabel.localizedValue.getter(v121);
      v127 = v126;
      (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v118, v119);
      aBlock = 0;
      v343 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(v343);
      v128 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v354._countAndFlagsBits = 0xD00000000000003FLL;
      v354._object = (void *)0x80000001004C48B0;
      v129._object = (void *)0x80000001004C4880;
      v129._countAndFlagsBits = 0xD00000000000002DLL;
      v130._countAndFlagsBits = 0;
      v130._object = (void *)0xE000000000000000;
      v131 = NSLocalizedString(_:tableName:bundle:value:comment:)(v129, (Swift::String_optional)0, (NSBundle)v128, v130, v354);

      v132 = (uint64_t)v319;
      (*(void (**)(char *, uint64_t, uint64_t, _QWORD *))(v38 + 56))(v319, 1, 1, v320);
      v133 = objc_allocWithZone((Class)type metadata accessor for FMFenceMapTransientRecord(0));
      v134 = sub_100275FB0(v131._countAndFlagsBits, (uint64_t)v131._object, v132, v125, v127, 0, 0);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v134);
      v136 = *(char **)((v350 & 0xFFFFFFFFFFFFFF8) + 0x10);
      v135 = *(_QWORD *)((v350 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if ((unint64_t)v136 >= v135 >> 1)
        goto LABEL_133;
      goto LABEL_30;
    }
    v95 = v92;
    v96 = v93;
    v97 = v314;
    v299 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
    v299(v314, v96, v91);
    v98 = sub_1000051EC(v96, &qword_1005D3380);
    v99 = v317;
    FMFFriend.location.getter(v98);
    v100 = v97;
    v94 = (uint64_t)v99;
    v92 = v95;
    v101 = *(void (**)(char *, uint64_t))(v22 + 8);
    v101(v100, v91);
    if (v315((char *)v94, 1, v63) == 1)
      goto LABEL_15;
    v109 = (unsigned int (*)(uint64_t, uint64_t, _QWORD *))v52;
    v110 = v94;
    v111 = v305;
    v112 = v63;
    v113 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v53 + 32))(v305, v110, v63);
    v114 = (uint64_t)v304;
    FMFLocation.address.getter(v113);
    v115 = type metadata accessor for FMFAddress(0);
    v116 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 48))(v114, 1, v115);
    sub_1000051EC(v114, &qword_1005D3370);
    if (v116 == 1)
    {
      v63 = v112;
      (*(void (**)(char *, uint64_t))(v53 + 8))(v111, v112);
      v91 = (uint64_t)v324;
      v52 = (uint64_t)v109;
      v62 = 0x1005F5000;
      goto LABEL_16;
    }
    v63 = v112;
    v122 = v301;
    sub_100007464(v92, v301, &qword_1005D3380);
    v91 = (uint64_t)v324;
    v52 = (uint64_t)v109;
    if (v109(v122, 1, v324))
    {
      sub_1000051EC(v122, &qword_1005D3380);
      v62 = 0x1005F5000;
    }
    else
    {
      v138 = v314;
      v299(v314, v122, v91);
      v139 = sub_1000051EC(v122, &qword_1005D3380);
      v318 = FMFFriend.shortName.getter(v139);
      v141 = v140;
      v101(v138, v91);
      v62 = 0x1005F5000;
      if (v141)
      {
        v142 = v318;
        v143 = v141;
        goto LABEL_34;
      }
    }
    v123 = v300;
    sub_100007464(v92, v300, &qword_1005D3380);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v52)(v123, 1, v91))
    {
      sub_1000051EC(v123, &qword_1005D3380);
      v124 = swift_bridgeObjectRelease(0);
      (*(void (**)(char *, uint64_t, __n128))(v53 + 8))(v305, v63, v124);
      goto LABEL_16;
    }
    v144 = v123;
    v145 = v314;
    v299(v314, v144, v91);
    v146 = sub_1000051EC(v144, &qword_1005D3380);
    v142 = FMFFriend.name.getter(v146);
    v143 = v147;
    v101(v145, v91);
    swift_bridgeObjectRelease(0);
LABEL_34:
    aBlock = 0;
    v343 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v343);
    v148 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v149._countAndFlagsBits = 0xD000000000000027;
    v355._countAndFlagsBits = 0xD000000000000039;
    v355._object = (void *)0x80000001004A6860;
    v149._object = (void *)0x80000001004A6830;
    v150._countAndFlagsBits = 0;
    v150._object = (void *)0xE000000000000000;
    v151 = NSLocalizedString(_:tableName:bundle:value:comment:)(v149, (Swift::String_optional)0, (NSBundle)v148, v150, v355);

    v152 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
    v153 = swift_allocObject(v152, 72, 7);
    *(_OWORD *)(v153 + 16) = xmmword_100481740;
    *(_QWORD *)(v153 + 56) = &type metadata for String;
    *(_QWORD *)(v153 + 64) = sub_100071E88();
    *(_QWORD *)(v153 + 32) = v142;
    *(_QWORD *)(v153 + 40) = v143;
    v154 = String.init(format:_:)(v151._countAndFlagsBits, v151._object, v153);
    v156 = v155;
    v157 = swift_bridgeObjectRelease(v151._object);
    v158 = v313;
    (*(void (**)(char *, _QWORD, _QWORD *, __n128))(v38 + 104))(v313, enum case for FMFLocationAlertAddressType.friendLocation(_:), v320, v157);
    v159 = (uint64_t)v312;
    v160 = v305;
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v312, v305, v63);
    v161 = objc_allocWithZone((Class)type metadata accessor for FMFenceMapTransientRecord(0));
    v162 = sub_100276430(v154, v156, v158, v159);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v162);
    v164 = *(_QWORD *)((v350 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v163 = *(_QWORD *)((v350 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v164 >= v163 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v163 > 1, v164 + 1, 1);
    v165 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v164, v162);
    specialized Array._endMutation()(v165);

    (*(void (**)(char *, uint64_t))(v53 + 8))(v160, v63);
    while (1)
    {
      v1 = v337;
LABEL_38:
      v62 = (uint64_t)&OBJC_IVAR____TtC6FindMy26FMRecipientsViewController_requiredCapability;
LABEL_39:
      if (v1[v321] != 1)
      {
LABEL_42:
        v171 = sub_1003C1750();
        v53 = v323;
        v59 = v329;
        goto LABEL_43;
      }
      v166 = &v1[*(_QWORD *)(v62 + 3896)];
      swift_beginAccess(v166, v340, 0, 0);
      v167 = (uint64_t)v166;
      v168 = (uint64_t)v324;
      v169 = v308;
      sub_100007464(v167, v308, &qword_1005D3380);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v52)(v169, 1, v168))
        break;
      v189 = v314;
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v314, v169, v168);
      sub_1000051EC(v169, &qword_1005D3380);
      v190 = v168;
      v170 = (uint64_t)v310;
      FMFFriend.contact.getter(v191);
      (*(void (**)(char *, uint64_t))(v22 + 8))(v189, v190);
      v52 = v309;
      v22 = v311;
      v192 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v309 + 48))(v170, 1, v311);
      v53 = v323;
      v59 = v329;
      if (v192 == 1)
        goto LABEL_59;
      v193 = v302;
      v194 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v52 + 32))(v302, v170, v22);
      v195 = FMFContact.storeUUID.getter(v194);
      v62 = v196;
      v197 = sub_100053F2C(&qword_1005D2F10);
      v198 = swift_allocObject(v197, 40, 7);
      *(_OWORD *)(v198 + 16) = xmmword_100481B00;
      v199 = objc_msgSend((id)objc_opt_self(CNContactViewController), "descriptorForRequiredKeys");
      *(_QWORD *)(v198 + 32) = v199;
      aBlock = (void **)v198;
      specialized Array._endMutation()(v199);
      v200 = aBlock;
      v201 = dispatch thunk of FMFContactsDataController.contact(for:keysToFetch:)(v195, v62, aBlock);
      swift_bridgeObjectRelease(v62);
      v202 = v200;
      v1 = v337;
      v203 = swift_bridgeObjectRelease(v202);
      (*(void (**)(char *, uint64_t, __n128))(v52 + 8))(v193, v22, v203);
      v171 = (_QWORD *)v201;
LABEL_43:
      v85 = (char *)_swiftEmptyArrayStorage;
      if (!v171)
      {
        v320 = 0;
        goto LABEL_67;
      }
      v172 = v171;
      v173 = (void *)objc_opt_self(CNContactFormatter);
      v320 = v172;
      v174 = v172;
      v175 = objc_msgSend(v173, "stringFromContact:style:", v174, 0);
      if (!v175)
      {

        v59 = v329;
        goto LABEL_67;
      }
      v176 = v175;
      v324 = (_QWORD *)static String._unconditionallyBridgeFromObjectiveC(_:)(v175);
      v134 = v177;

      v136 = (char *)objc_msgSend(v174, "postalAddresses");
      v178 = sub_100053F2C((uint64_t *)&unk_1005DF490);
      v52 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v136, v178);

      if ((unint64_t)v52 >> 62)
      {
        if (v52 < 0)
          v136 = (char *)v52;
        else
          v136 = (char *)(v52 & 0xFFFFFFFFFFFFFF8);
        swift_bridgeObjectRetain(v52);
        v62 = _CocoaArrayWrapper.endIndex.getter(v136);
        swift_bridgeObjectRelease(v52);
        if (!v62)
          goto LABEL_65;
      }
      else
      {
        v135 = v52 & 0xFFFFFFFFFFFFF8;
        v62 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (!v62)
          goto LABEL_65;
      }
      if (v62 >= 1)
      {
        v179 = 0;
        do
        {
          if ((v52 & 0xC000000000000001) != 0)
            v180 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v179, v52);
          else
            v180 = *(id *)(v52 + 8 * v179 + 32);
          v181 = v180;
          v182 = objc_allocWithZone((Class)type metadata accessor for FMFenceMapTransientRecord(0));
          v183 = v174;
          swift_bridgeObjectRetain(v134);
          v184 = v181;
          v185 = sub_100276F24((uint64_t)v324, (uint64_t)v134, v183, v184, 0, 0);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v185);
          v187 = *(_QWORD *)((v350 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v186 = *(_QWORD *)((v350 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v187 >= v186 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v186 > 1, v187 + 1, 1);
          ++v179;
          v188 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v187, v185);
          specialized Array._endMutation()(v188);

        }
        while (v62 != v179);
LABEL_65:

        swift_bridgeObjectRelease(v52);
        swift_bridgeObjectRelease(v134);
        v1 = v337;
        v53 = v323;
        v59 = v329;
        goto LABEL_66;
      }
      __break(1u);
LABEL_133:
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v135 > 1, v136 + 1, 1);
LABEL_30:
      v137 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v136, v134);
      specialized Array._endMutation()(v137);

    }
    sub_1000051EC(v169, &qword_1005D3380);
    v170 = (uint64_t)v310;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v309 + 56))(v310, 1, 1, v311);
    v53 = v323;
    v59 = v329;
LABEL_59:
    sub_1000051EC(v170, &qword_1005D38C0);
    v320 = 0;
LABEL_66:
    v85 = (char *)_swiftEmptyArrayStorage;
LABEL_67:
    v204 = v1[v321];
    v348 = (unint64_t)_swiftEmptyArrayStorage;
    v205 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mediator];
    if (v204 == 1)
      break;
    if (!v205)
      goto LABEL_137;
    v87 = *(_QWORD *)(v205 + 48);
    v230 = swift_retain(v87);
    v231 = dispatch thunk of FMFManager.labelledLocations.getter(v230);
    v232 = swift_release(v87);
    if (v231)
      v233 = (_QWORD *)v231;
    else
      v233 = _swiftEmptyArrayStorage;
    aBlock = (void **)_swiftEmptyArrayStorage;
    v328 = (char *)v233[2];
    if (v328)
    {
      v52 = 0;
      v1 = v326;
      v324 = v233;
      while (1)
      {
        if ((unint64_t)v52 >= v233[2])
        {
          __break(1u);
          goto LABEL_124;
        }
        v236 = (v59[80] + 32) & ~(unint64_t)v59[80];
        v237 = *((_QWORD *)v59 + 9);
        v238 = (uint64_t (*)(char *, char *, uint64_t, __n128))*((_QWORD *)v59 + 2);
        v239 = v238(v1, (char *)v233 + v236 + v237 * v52, v53, v232);
        FMFLabelledLocation.label.getter(v239);
        v240 = (uint64_t)v338;
        v241 = type metadata accessor for FMFLabel(0);
        v85 = (char *)v53;
        v242 = *(_QWORD *)(v241 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v242 + 48))(v240, 1, v241) == 1)
          break;
        FMFLabel.localizedValue.getter(v243);
        v87 = v244;
        (*(void (**)(uint64_t, uint64_t))(v242 + 8))(v240, v241);
        v245 = swift_bridgeObjectRelease(v87);
        v234 = v325;
        v246 = v238(v325, v1, (uint64_t)v85, v245);
        v53 = (uint64_t)v85;
        if (!v87)
          goto LABEL_87;
        FMFLabelledLocation.userId.getter(v246);
        v248 = v247;
        v249 = swift_bridgeObjectRelease(v247);
        v59 = v329;
        v250 = v234;
        v62 = *((_QWORD *)v329 + 1);
        ((void (*)(char *, char *, __n128))v62)(v250, v85, v249);
        if (!v248)
        {
          v251 = (void (*)(char *, char *, char *))*((_QWORD *)v59 + 4);
          v1 = v326;
          v251(v322, v326, v85);
          v252 = aBlock;
          if ((swift_isUniquelyReferenced_nonNull_native(aBlock) & 1) == 0)
          {
            sub_100112138(0, (int64_t)v252[2] + 1, 1);
            v252 = aBlock;
          }
          v254 = (unint64_t)v252[2];
          v253 = (unint64_t)v252[3];
          v62 = v254 + 1;
          if (v254 >= v253 >> 1)
          {
            sub_100112138(v253 > 1, v254 + 1, 1);
            v252 = aBlock;
          }
          v252[2] = (void *)v62;
          v255 = (unint64_t)v252 + v236 + v254 * v237;
          v53 = v323;
          v251((char *)v255, v322, (char *)v323);
          aBlock = v252;
          v59 = v329;
          goto LABEL_89;
        }
LABEL_88:
        v1 = v326;
        ((void (*)(char *, uint64_t))v62)(v326, v53);
LABEL_89:
        ++v52;
        v233 = v324;
        if (v328 == (char *)v52)
        {
          v257 = aBlock;
          goto LABEL_101;
        }
      }
      sub_1000051EC(v240, &qword_1005DC400);
      v234 = v325;
      ((void (*)(char *, _BYTE *, char *))v238)(v325, v1, v85);
      v53 = (uint64_t)v85;
LABEL_87:
      v59 = v329;
      v235 = v234;
      v62 = *((_QWORD *)v329 + 1);
      ((void (*)(char *, uint64_t))v62)(v235, v53);
      goto LABEL_88;
    }
    v257 = (void **)_swiftEmptyArrayStorage;
LABEL_101:
    swift_bridgeObjectRelease(v233);
    aBlock = v257;
    swift_retain(v257);
    v85 = 0;
    sub_1003B44E0(&aBlock);
    v1 = v327;
    swift_release(v257);
    v258 = aBlock;
    v52 = (uint64_t)aBlock[2];
    if (v52)
    {
      v85 = (char *)aBlock + ((v59[80] + 32) & ~(unint64_t)v59[80]);
      v259 = *((_QWORD *)v59 + 9);
      v260 = swift_retain(aBlock);
      while (1)
      {
        FMFLabelledLocation.label.getter(v260);
        v261 = type metadata accessor for FMFLabel(0);
        v262 = *(_QWORD *)(v261 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v262 + 48))(v1, 1, v261) == 1)
          goto LABEL_135;
        v264 = FMFLabel.localizedValue.getter(v263);
        v265 = v1;
        v267 = v266;
        (*(void (**)(_BYTE *, uint64_t))(v262 + 8))(v265, v261);
        v268 = (uint64_t)v336;
        (*((void (**)(char *, char *, uint64_t))v59 + 2))(v336, v85, v53);
        v269 = objc_allocWithZone((Class)type metadata accessor for FMFenceMapTransientRecord(0));
        v270 = sub_100278F88(v264, v267, v268, 0, 0);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v270);
        v272 = *(_QWORD *)((v350 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v271 = *(_QWORD *)((v350 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v272 >= v271 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v271 > 1, v272 + 1, 1);
        v273 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v272, v270);
        specialized Array._endMutation()(v273);
        v62 = v270;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v62);
        v275 = *(_QWORD *)((v348 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v274 = *(_QWORD *)((v348 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v275 >= v274 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v274 > 1, v275 + 1, 1);
        v276 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v275, v62);
        specialized Array._endMutation()(v276);

        v85 += v259;
        --v52;
        v1 = v327;
        if (!v52)
        {
          v256 = (char *)v258;
LABEL_110:
          swift_release_n(v256, 2);
          goto LABEL_114;
        }
      }
    }
    v277 = aBlock;
LABEL_113:
    swift_release(v277);
LABEL_114:
    v87 = v348;
    if (v348 >> 62)
    {
LABEL_124:
      if (v87 < 0)
        v297 = v87;
      else
        v297 = v87 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain_n(v87, 2);
      v278 = _CocoaArrayWrapper.endIndex.getter(v297);
      if (!v278)
      {
LABEL_128:
        swift_bridgeObjectRelease(v87);

        v296 = v87;
LABEL_129:
        swift_bridgeObjectRelease(v87);
        v298 = v350;
        swift_bridgeObjectRetain(v350);
        swift_bridgeObjectRelease(v296);
        swift_bridgeObjectRelease(v298);
        return;
      }
    }
    else
    {
      v278 = *(_QWORD *)((v348 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n(v348, 2);
      if (!v278)
        goto LABEL_128;
    }
    v279 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
    v86 = (unint64_t)&v351;
    v336 = (char *)v279;
    if (v278 >= 1)
    {
      v280 = 0;
      v327 = (char *)(v87 & 0xC000000000000001);
      v329 = (char *)v87;
      v328 = (char *)v278;
      v281 = v330;
      v282 = v335;
      do
      {
        if (v327)
          v283 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v280, v87);
        else
          v283 = (char *)*(id *)(v87 + 8 * (_QWORD)v280 + 32);
        ++v280;
        v338 = *(char **)&v283[OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_completedGeoWorkGroup];
        v284 = v283;
        v285 = (void *)static OS_dispatch_queue.main.getter(v284);
        v286 = swift_allocObject(&unk_100560220, 24, 7);
        swift_unknownObjectWeakInit(v286 + 16);
        v287 = swift_allocObject(&unk_100560248, 32, 7);
        *(_QWORD *)(v287 + 16) = v286;
        *(_QWORD *)(v287 + 24) = v284;
        v346 = sub_1003B9028;
        v347 = v287;
        aBlock = _NSConcreteStackBlock;
        v343 = 1107296256;
        v344 = sub_100037DF8;
        v345 = &unk_100560260;
        v288 = _Block_copy(&aBlock);
        v289 = v284;
        v290 = swift_retain(v286);
        static DispatchQoS.unspecified.getter(v290);
        v341 = _swiftEmptyArrayStorage;
        v291 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v292 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
        v293 = sub_1000555E4();
        v294 = v333;
        dispatch thunk of SetAlgebra.init<A>(_:)(&v341, v292, v293, v282, v291);
        OS_dispatch_group.notify(qos:flags:queue:execute:)(v281, v294, v285, v288);
        _Block_release(v288);

        (*(void (**)(char *, uint64_t))(v334 + 8))(v294, v282);
        (*(void (**)(char *, uint64_t))(v331 + 8))(v281, v332);
        v295 = v347;

        swift_release(v286);
        swift_release(v295);
        v87 = (uint64_t)v329;
      }
      while (v328 != v280);
      swift_bridgeObjectRelease(v329);

      v296 = v348;
      goto LABEL_129;
    }
    __break(1u);
LABEL_131:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v86 > 1, v87 + 1, 1);
  }
  if (!v205)
    goto LABEL_136;
  v206 = *(_QWORD *)(v205 + 48);
  v207 = swift_retain(v206);
  v208 = (_QWORD *)dispatch thunk of FMFManager.labelledLocations.getter(v207);
  swift_release(v206);
  if (!v208)
    v208 = _swiftEmptyArrayStorage;
  v209 = v1;
  v210 = (void **)sub_1003B783C((uint64_t)v208, (uint64_t)v209);
  swift_bridgeObjectRelease(v208);

  aBlock = v210;
  swift_bridgeObjectRetain(v210);
  sub_1003B44E0(&aBlock);
  swift_bridgeObjectRelease(v210);
  v85 = (char *)aBlock;
  v1 = aBlock[2];
  v62 = (uint64_t)v328;
  if (!v1)
  {
    v277 = aBlock;
    goto LABEL_113;
  }
  v52 = (uint64_t)aBlock + ((v59[80] + 32) & ~(unint64_t)v59[80]);
  v211 = *((_QWORD *)v59 + 9);
  v212 = swift_retain(aBlock);
  while (1)
  {
    FMFLabelledLocation.label.getter(v212);
    v213 = type metadata accessor for FMFLabel(0);
    v214 = *(_QWORD *)(v213 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v214 + 48))(v62, 1, v213) == 1)
      break;
    v216 = FMFLabel.localizedValue.getter(v215);
    v217 = v62;
    v219 = v218;
    (*(void (**)(uint64_t, uint64_t))(v214 + 8))(v217, v213);
    v220 = (uint64_t)v336;
    (*((void (**)(char *, uint64_t, uint64_t))v59 + 2))(v336, v52, v53);
    v221 = objc_allocWithZone((Class)type metadata accessor for FMFenceMapTransientRecord(0));
    v222 = sub_100278F88(v216, v219, v220, 0, 0);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v222);
    v224 = *(_QWORD *)((v350 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v223 = *(_QWORD *)((v350 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v224 >= v223 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v223 > 1, v224 + 1, 1);
    v225 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v224, v222);
    specialized Array._endMutation()(v225);
    v226 = v222;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v226);
    v228 = *(_QWORD *)((v348 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v227 = *(_QWORD *)((v348 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v228 >= v227 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v227 > 1, v228 + 1, 1);
    v229 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v228, v226);
    specialized Array._endMutation()(v229);

    v52 += v211;
    --v1;
    v62 = (uint64_t)v328;
    if (!v1)
    {
      v256 = v85;
      goto LABEL_110;
    }
  }
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:

  __break(1u);
LABEL_137:

  __break(1u);
  swift_release(aBlock);
  __break(1u);
}

void sub_1003B0A14(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  char v30;
  void *v31;
  id v32;
  uint64_t v33;
  id v34;
  _BYTE v36[24];

  v2 = a1 + 16;
  swift_beginAccess(a1 + 16, v36, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (!Strong)
    return;
  v4 = (void *)Strong;
  v5 = *(void **)(Strong + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchResultsTableView);
  v6 = v5;

  if (!v5)
  {
    __break(1u);
    return;
  }
  v7 = objc_msgSend(v6, "visibleCells");

  v8 = sub_100006C5C(0, &qword_1005E27C0, UITableViewCell_ptr);
  v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v7, v8);

  if ((unint64_t)v9 >> 62)
  {
    if (v9 < 0)
      v19 = v9;
    else
      v19 = v9 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v9);
    v11 = _CocoaArrayWrapper.endIndex.getter(v19);
    swift_bridgeObjectRelease(v9);
    if (!v11)
      goto LABEL_19;
  }
  else
  {
    v10 = v9 & 0xFFFFFFFFFFFFF8;
    v11 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v11)
      goto LABEL_19;
  }
  if (v11 < 1)
    goto LABEL_32;
  for (i = 0; i != v11; ++i)
  {
    if ((v9 & 0xC000000000000001) != 0)
      v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(i, v9);
    else
      v15 = *(id *)(v9 + 8 * i + 32);
    v16 = v15;
    v17 = type metadata accessor for FMFenceMapTableViewCell();
    v18 = swift_dynamicCastClass(v16, v17);
    if (v18)
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v18);
      v13 = _swiftEmptyArrayStorage[2];
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v13);
      v14 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v13, v16);
      specialized ContiguousArray._endMutation()(v14);
    }
    else
    {

    }
  }
LABEL_19:
  swift_bridgeObjectRelease(v9);
  v9 = (uint64_t)sub_10046C510((unint64_t)_swiftEmptyArrayStorage);
  swift_release(_swiftEmptyArrayStorage);
  if (v9)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFF8;
    if ((unint64_t)v9 >> 62)
      goto LABEL_33;
    v20 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v21 = a2;
    swift_bridgeObjectRetain(v9);
    for (; v20; v20 = _CocoaArrayWrapper.endIndex.getter(v33))
    {
      v22 = 4;
      while (1)
      {
        v23 = (v9 & 0xC000000000000001) != 0
            ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v22 - 4, v9)
            : (char *)*(id *)(v9 + 8 * v22);
        v24 = v23;
        v25 = v22 - 3;
        if (__OFADD__(v22 - 4, 1))
          break;
        v26 = OBJC_IVAR____TtC6FindMy23FMFenceMapTableViewCell_record;
        v27 = *(void **)&v23[OBJC_IVAR____TtC6FindMy23FMFenceMapTableViewCell_record];
        if (v27)
        {
          type metadata accessor for FMFenceMapTransientRecord(0);
          v28 = a2;
          v29 = v27;
          v30 = static NSObject.== infix(_:_:)(v29, v28);

          if ((v30 & 1) != 0)
          {

            swift_bridgeObjectRelease_n(v9, 2);
            v31 = *(void **)&v24[v26];
            *(_QWORD *)&v24[v26] = v28;
            v32 = v28;

            sub_100337258();
            return;
          }
        }

        ++v22;
        if (v25 == v20)
          goto LABEL_37;
      }
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      if (v9 >= 0)
        v33 = v10;
      else
        v33 = v9;
      v34 = a2;
      swift_bridgeObjectRetain(v9);
    }
LABEL_37:

    swift_bridgeObjectRelease_n(v9, 2);
  }
}

void sub_1003B0D40(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  Swift::String v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  void *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  id v60;
  id v61;
  unint64_t v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void *object;
  _QWORD *v68;
  __n128 v69;
  uint64_t v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t i;
  __n128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  id v88;
  char *v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  double v96;
  void *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  void *v103;
  _QWORD *v104;
  uint64_t v105;
  void *v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  Swift::String v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  char *v130;
  char *v131;
  char *v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  char *v136;
  uint64_t (*v137)(char *, char *, uint64_t, __n128);
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  _QWORD aBlock[5];
  _QWORD *v143;
  unint64_t v144;

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v129 = (char *)&v114 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v128 = (char *)&v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = type metadata accessor for DispatchQoS.QoSClass(0);
  v124 = *(_QWORD *)(v125 - 8);
  __chkstk_darwin(v125);
  v123 = (char *)&v114 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100053F2C(&qword_1005D3418);
  __chkstk_darwin(v12);
  v136 = (char *)&v114 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FMFLocationAlertAddressType(0);
  v139 = *(_QWORD *)(v14 - 8);
  v140 = v14;
  __chkstk_darwin(v14);
  v132 = (char *)&v114 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100053F2C((uint64_t *)&unk_1005D3350);
  __chkstk_darwin(v16);
  v134 = (char *)&v114 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = type metadata accessor for FMFLocation(0);
  v121 = *(_QWORD *)(v122 - 8);
  v18 = __chkstk_darwin(v122);
  v131 = (char *)&v114 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v120 = (char *)&v114 - v20;
  v133 = type metadata accessor for FMFFriend(0);
  v138 = *(_QWORD *)(v133 - 8);
  __chkstk_darwin(v133);
  v22 = (char *)&v114 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = a1;
  v127 = a2;
  v23 = String.lowercased()();
  v24 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_defaultSearchRecords;
  v130 = v2;
  if (!*(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_defaultSearchRecords])
  {
    v25 = v130;
    sub_1003AEA98();
    v26 = *(_QWORD *)&v25[v24];
    *(_QWORD *)&v25[v24] = v27;
    swift_bridgeObjectRelease(v26);
  }
  v28 = ((unint64_t)v23._object >> 56) & 0xF;
  if (((uint64_t)v23._object & 0x2000000000000000) == 0)
    v28 = v23._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  if (!v28)
  {
    swift_bridgeObjectRelease(v23._object);
    v39 = v130;
    v40 = *(_QWORD *)&v130[v24];
    v41 = *(_QWORD *)&v130[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_filteredSearchRecords];
    *(_QWORD *)&v130[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_filteredSearchRecords] = v40;
    swift_bridgeObjectRetain(v40);
    *(_QWORD *)&v42 = swift_bridgeObjectRelease(v41).n128_u64[0];
    v43 = *(void **)&v39[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchResultsTableView];
    if (v43)
    {
      objc_msgSend(v43, "reloadData", v42);
      return;
    }
    goto LABEL_46;
  }
  v115 = v6;
  v116 = v5;
  v144 = (unint64_t)_swiftEmptyArrayStorage;
  v29 = v130;
  v30 = *(_QWORD *)&v130[v24];
  if (v30)
    v31 = *(_QWORD **)&v130[v24];
  else
    v31 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain(v30);
  sub_1003E6164((uint64_t)v31);
  v32 = v144;
  swift_bridgeObjectRetain(v23._object);
  swift_bridgeObjectRetain(v32);
  v34 = sub_1003B7D40(v33, v23._countAndFlagsBits, (uint64_t)v23._object);
  swift_bridgeObjectRelease(v32);
  swift_bridgeObjectRelease(v23._object);
  v35 = v144;
  v144 = (unint64_t)v34;
  swift_bridgeObjectRelease(v35);
  v36 = *(_QWORD *)&v29[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapSearchResults];
  if (v36)
  {
    swift_bridgeObjectRetain(v23._object);
    swift_bridgeObjectRetain(v36);
    v38 = (uint64_t)sub_1003B7FB8(v37, v23._countAndFlagsBits, (uint64_t)v23._object);
    swift_bridgeObjectRelease(v36);
    swift_bridgeObjectRelease(v23._object);
  }
  else
  {
    v38 = (uint64_t)_swiftEmptyArrayStorage;
  }
  v114 = v8;
  v119 = v9;
  v118 = v23;
  if ((unint64_t)v38 >> 62)
  {
    if (v38 < 0)
      v113 = v38;
    else
      v113 = v38 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v38);
    v44 = _CocoaArrayWrapper.endIndex.getter(v113);
  }
  else
  {
    v44 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v38);
  }
  v45 = v22;
  v117 = 0;
  if (!v44)
    goto LABEL_27;
  if (v44 >= 1)
  {
    v46 = 0;
    v137 = (uint64_t (*)(char *, char *, uint64_t, __n128))(v38 & 0xC000000000000001);
    LODWORD(v135) = enum case for FMFLocationAlertAddressType.custom(_:);
    do
    {
      if (v137)
        v48 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v46, v38);
      else
        v48 = *(id *)(v38 + 8 * v46 + 32);
      v49 = v48;
      v50 = objc_msgSend(v49, "placemark");
      v51 = objc_msgSend(v50, "title");

      if (v51)
      {
        v52 = v38;
        v53 = static String._unconditionallyBridgeFromObjectiveC(_:)(v51);
        v55 = v54;

        v57 = v139;
        v56 = v140;
        v58 = (uint64_t)v136;
        (*(void (**)(char *, _QWORD, uint64_t))(v139 + 104))(v136, v135, v140);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v57 + 56))(v58, 0, 1, v56);
        v59 = objc_allocWithZone((Class)type metadata accessor for FMFenceMapTransientRecord(0));
        sub_100277688(v53, v55, v58, v49);
        v61 = v60;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v61);
        v63 = *(_QWORD *)((v144 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v62 = *(_QWORD *)((v144 & 0xFFFFFFFFFFFFFF8) + 0x18);
        if (v63 >= v62 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v62 > 1, v63 + 1, 1);
        v47 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v63, v61);
        specialized Array._endMutation()(v47);

        v38 = v52;
        v45 = v22;
      }

      ++v46;
    }
    while (v44 != v46);
LABEL_27:
    swift_bridgeObjectRelease_n(v38, 2);
    v64 = v130;
    sub_1003AE7F8();
    v66 = v65;
    object = v118._object;
    v68 = sub_1003B7620(v65, v118._countAndFlagsBits, (uint64_t)v118._object);
    swift_bridgeObjectRelease(v66);
    v69 = swift_bridgeObjectRelease(object);
    v70 = v68[2];
    if (v70)
    {
      v71 = (*(unsigned __int8 *)(v138 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v138 + 80);
      v118._object = v68;
      v72 = (char *)v68 + v71;
      v73 = *(_QWORD *)(v138 + 72);
      v137 = *(uint64_t (**)(char *, char *, uint64_t, __n128))(v138 + 16);
      LODWORD(v136) = enum case for FMFLocationAlertAddressType.friendLocation(_:);
      v74 = v122;
      v75 = v121;
      v77 = v133;
      v76 = (uint64_t)v134;
      v78 = v120;
      v135 = v73;
      for (i = v137(v45, v72, v133, v69); ; i = v137(v45, v72, v77, v80))
      {
        FMFFriend.location.getter(i);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v76, 1, v74) == 1)
        {
          (*(void (**)(char *, uint64_t))(v138 + 8))(v45, v77);
          sub_1000051EC(v76, (uint64_t *)&unk_1005D3350);
        }
        else
        {
          v81 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v75 + 32))(v78, v76, v74);
          v82 = FMFFriend.name.getter(v81);
          v84 = v83;
          v85 = v132;
          (*(void (**)(char *, _QWORD, uint64_t))(v139 + 104))(v132, v136, v140);
          v86 = v45;
          v87 = (uint64_t)v131;
          (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v131, v78, v74);
          v88 = objc_allocWithZone((Class)type metadata accessor for FMFenceMapTransientRecord(0));
          v89 = sub_100276430(v82, v84, v85, v87);
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v89);
          v90 = v74;
          v92 = *(_QWORD *)((v144 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v91 = *(_QWORD *)((v144 & 0xFFFFFFFFFFFFFF8) + 0x18);
          if (v92 >= v91 >> 1)
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v91 > 1, v92 + 1, 1);
          v93 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v92, v89);
          specialized Array._endMutation()(v93);

          (*(void (**)(char *, uint64_t))(v75 + 8))(v78, v90);
          v45 = v86;
          v77 = v133;
          (*(void (**)(char *, uint64_t))(v138 + 8))(v86, v133);
          v74 = v90;
          v76 = (uint64_t)v134;
          v73 = v135;
        }
        v72 += v73;
        if (!--v70)
          break;
      }
      swift_bridgeObjectRelease(v118._object);
      v64 = v130;
    }
    else
    {
      swift_bridgeObjectRelease(v68);
    }
    v94 = v144;
    v95 = *(_QWORD *)&v64[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_filteredSearchRecords];
    *(_QWORD *)&v64[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_filteredSearchRecords] = v144;
    swift_bridgeObjectRetain(v94);
    *(_QWORD *)&v96 = swift_bridgeObjectRelease(v95).n128_u64[0];
    v97 = *(void **)&v64[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchResultsTableView];
    v98 = v129;
    v99 = v119;
    if (v97)
    {
      objc_msgSend(v97, "reloadData", v96);
      sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
      v100 = v124;
      v101 = v123;
      v102 = v125;
      (*(void (**)(char *, _QWORD, uint64_t))(v124 + 104))(v123, enum case for DispatchQoS.QoSClass.default(_:), v125);
      v103 = (void *)static OS_dispatch_queue.global(qos:)(v101);
      (*(void (**)(char *, uint64_t))(v100 + 8))(v101, v102);
      v104 = (_QWORD *)swift_allocObject(&unk_100560180, 40, 7);
      v105 = v127;
      v104[2] = v126;
      v104[3] = v105;
      v104[4] = v64;
      aBlock[4] = sub_1003B8FD8;
      v143 = v104;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100037DF8;
      aBlock[3] = &unk_100560198;
      v106 = _Block_copy(aBlock);
      swift_bridgeObjectRetain(v105);
      v107 = v64;
      v108 = v128;
      static DispatchQoS.unspecified.getter(v107);
      v141 = _swiftEmptyArrayStorage;
      v109 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v110 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
      v111 = sub_1000555E4();
      v112 = v116;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v141, v110, v111, v116, v109);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v108, v98, v106);
      _Block_release(v106);

      (*(void (**)(char *, uint64_t))(v115 + 8))(v98, v112);
      (*(void (**)(char *, uint64_t))(v99 + 8))(v108, v114);
      swift_release(v143);
      swift_bridgeObjectRelease(v144);
      return;
    }
    goto LABEL_45;
  }
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
}

uint64_t sub_1003B1778(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  NSString v12;
  id v13;
  id v14;
  uint64_t v15;
  Class isa;
  double v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v37;
  uint64_t v38;
  id aBlock[5];
  uint64_t v40;

  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v38 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (void *)objc_opt_self(CNContact);
  v12 = String._bridgeToObjectiveC()();
  v13 = objc_msgSend(v11, "predicateForContactsMatchingString:accountIdentifier:containerIdentifier:groupIdentifier:", v12, 0, 0, 0);

  v14 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), "init");
  if (qword_1005D2028 != -1)
    swift_once(&qword_1005D2028, sub_1003BFE68);
  v15 = qword_1005F5FB8;
  swift_bridgeObjectRetain(qword_1005F5FB8);
  sub_100053F2C(&qword_1005D2410);
  isa = Array._bridgeToObjectiveC()().super.isa;
  *(_QWORD *)&v17 = swift_bridgeObjectRelease(v15).n128_u64[0];
  aBlock[0] = 0;
  v18 = objc_msgSend(v14, "unifiedContactsMatchingPredicate:keysToFetch:error:", v13, isa, aBlock, v17);

  v19 = aBlock[0];
  if (v18)
  {
    v20 = sub_100006C5C(0, (unint64_t *)&qword_1005D81D0, CNContact_ptr);
    v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v18, v20);
    v22 = v19;

  }
  else
  {
    v23 = aBlock[0];
    v24 = _convertNSErrorToError(_:)(v19);

    swift_willThrow(v25);
    swift_errorRelease(v24);
    v21 = 0;
  }
  v26 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v27 = (void *)static OS_dispatch_queue.main.getter(v26);
  v28 = swift_allocObject(&unk_1005601D0, 32, 7);
  *(_QWORD *)(v28 + 16) = v21;
  *(_QWORD *)(v28 + 24) = a3;
  aBlock[4] = sub_1003B8FF0;
  v40 = v28;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_1005601E8;
  v29 = _Block_copy(aBlock);
  v30 = v40;
  v31 = a3;
  swift_release(v30);
  static DispatchQoS.unspecified.getter(v32);
  aBlock[0] = _swiftEmptyArrayStorage;
  v33 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v34 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v35 = sub_1000555E4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v34, v35, v4, v33);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v6, v29);
  _Block_release(v29);

  (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_1003B1B0C(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  BOOL v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  char *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  double v31;
  void *v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;

  if (a1)
  {
    v2 = a1;
    v3 = a1 & 0xFFFFFFFFFFFFFF8;
    if (a1 >> 62)
      goto LABEL_34;
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n(a1, 2);
    while (v4)
    {
      v5 = 0;
      v37 = (id)objc_opt_self(CNContactFormatter);
      v38 = v2 & 0xC000000000000001;
      v34 = v2 + 32;
      v35 = v4;
      v36 = v2;
      while (1)
      {
        if (v38)
        {
          v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2);
          v7 = __OFADD__(v5++, 1);
          if (v7)
            break;
          goto LABEL_11;
        }
        v6 = *(id *)(v34 + 8 * v5);
        v7 = __OFADD__(v5++, 1);
        if (v7)
          break;
LABEL_11:
        v8 = v6;
        v9 = objc_msgSend(v37, "stringFromContact:style:", v8, 0);
        if (v9)
        {
          v10 = v9;
          v40 = static String._unconditionallyBridgeFromObjectiveC(_:)(v9);
          v12 = v11;

          v2 = (uint64_t)objc_msgSend(v8, "postalAddresses");
          v13 = sub_100053F2C((uint64_t *)&unk_1005DF490);
          v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v2, v13);

          v39 = v5;
          if ((unint64_t)v14 >> 62)
          {
            if (v14 < 0)
              v2 = v14;
            else
              v2 = v14 & 0xFFFFFFFFFFFFFF8;
            swift_bridgeObjectRetain(v14);
            v15 = _CocoaArrayWrapper.endIndex.getter(v2);
            swift_bridgeObjectRelease(v14);
            if (!v15)
              goto LABEL_5;
          }
          else
          {
            v3 = v14 & 0xFFFFFFFFFFFFF8;
            v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (!v15)
              goto LABEL_5;
          }
          if (v15 < 1)
            goto LABEL_33;
          v16 = 0;
          do
          {
            if ((v14 & 0xC000000000000001) != 0)
              v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v16, v14);
            else
              v17 = *(id *)(v14 + 8 * v16 + 32);
            v18 = v17;
            v19 = objc_allocWithZone((Class)type metadata accessor for FMFenceMapTransientRecord(0));
            v20 = v8;
            swift_bridgeObjectRetain(v12);
            v21 = v18;
            v22 = sub_100276F24(v40, v12, v20, v21, 0, 0);
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v22);
            v24 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
            v23 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v24 >= v23 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v23 > 1, v24 + 1, 1);
            ++v16;
            v25 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v24, v22);
            specialized Array._endMutation()(v25);

          }
          while (v15 != v16);
LABEL_5:
          swift_bridgeObjectRelease(v12);

          swift_bridgeObjectRelease(v14);
          v4 = v35;
          v2 = v36;
          v5 = v39;
          if (v39 == v35)
            goto LABEL_38;
        }
        else
        {

          if (v5 == v4)
            goto LABEL_38;
        }
      }
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      if (v2 >= 0)
        v26 = v3;
      else
        v26 = v2;
      swift_bridgeObjectRetain_n(v2, 2);
      v4 = _CocoaArrayWrapper.endIndex.getter(v26);
    }
LABEL_38:
    swift_bridgeObjectRelease_n(v2, 2);
  }
  v27 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_filteredSearchRecords;
  v28 = *(_QWORD *)(a2 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_filteredSearchRecords);
  if (v28)
    v29 = *(_QWORD **)(a2 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_filteredSearchRecords);
  else
    v29 = _swiftEmptyArrayStorage;
  v41 = v29;
  swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
  swift_bridgeObjectRetain(v28);
  sub_1003E6164((uint64_t)_swiftEmptyArrayStorage);
  v30 = *(_QWORD *)(a2 + v27);
  *(_QWORD *)(a2 + v27) = v41;
  *(_QWORD *)&v31 = swift_bridgeObjectRelease(v30).n128_u64[0];
  v32 = *(void **)(a2 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchResultsTableView);
  if (v32)
  {
    objc_msgSend(v32, "reloadData", v31);
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  }
  else
  {
    __break(1u);
  }
}

void sub_1003B1E9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  _QWORD *v20;
  Class isa;
  void *v22;
  _QWORD *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;

  v3 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView;
  v4 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView);
  if (!v4)
    goto LABEL_30;
  v5 = objc_msgSend(v4, "overlays");
  v6 = sub_100053F2C((uint64_t *)&unk_1005E1100);
  v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v5, v6);

  v25 = v3;
  v26 = v1;
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v18 = v7;
    else
      v18 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v7);
    v8 = _CocoaArrayWrapper.endIndex.getter(v18);
    if (!v8)
      goto LABEL_18;
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v7);
    if (!v8)
      goto LABEL_18;
  }
  if (v8 < 1)
  {
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  for (i = 0; i != v8; ++i)
  {
    if ((v7 & 0xC000000000000001) != 0)
    {
      v11 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v7);
    }
    else
    {
      v11 = *(_QWORD *)(v7 + 8 * i + 32);
      swift_unknownObjectRetain(v11);
    }
    v12 = objc_opt_self(MKCircle);
    v13 = swift_dynamicCastObjCClass(v11, v12);
    if (v13)
    {
      v14 = v13;
      v15 = swift_unknownObjectRetain(v11);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v15);
      v17 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
      v16 = *(_QWORD *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (v17 >= v16 >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v16 > 1, v17 + 1, 1);
      v10 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v17, v14);
      specialized Array._endMutation()(v10);
    }
    swift_unknownObjectRelease(v11);
  }
LABEL_18:
  swift_bridgeObjectRelease_n(v7, 2);
  v19 = *(void **)(v26 + v25);
  if (!v19)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    if ((uint64_t)_swiftEmptyArrayStorage < 0)
      v23 = _swiftEmptyArrayStorage;
    else
      v23 = (_QWORD *)((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8);
    v24 = v19;
    swift_bridgeObjectRetain(_swiftEmptyArrayStorage);
    v20 = (_QWORD *)_bridgeCocoaArray<A>(_:)(v23, v6);
  }
  else
  {
    swift_bridgeObjectRetain_n(_swiftEmptyArrayStorage, 2);
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter(v19);
    v20 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v19, "removeOverlays:", isa, swift_bridgeObjectRelease(v20).n128_f64[0]);

  if (!a1)
    goto LABEL_24;
  v22 = *(void **)(v26 + v25);
  if (v22)
  {
    objc_msgSend(v22, "addOverlay:", a1);
LABEL_24:
    swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    return;
  }
LABEL_32:
  __break(1u);
}

void sub_1003B2124()
{
  _QWORD *isa;
  uint64_t v1;
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  Class v19;
  void *v20;
  _QWORD *v21;
  uint64_t v22;

  v1 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView;
  v2 = *(void **)((char *)isa + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView);
  if (!v2)
    goto LABEL_26;
  v3 = isa;
  isa = objc_msgSend(v2, "overlays");
  if (!isa)
  {
    v4 = sub_100053F2C((uint64_t *)&unk_1005E1100);
    v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)(0, v4);
    isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease(v5);
  }
  v6 = *(void **)((char *)v3 + v1);
  if (!v6)
    goto LABEL_27;
  v7 = v6;
  objc_msgSend(v7, "removeOverlays:", isa);

  v8 = *(void **)((char *)v3 + v1);
  if (v8)
  {
    isa = objc_msgSend(v8, "annotations");
    v9 = sub_100053F2C(&qword_1005E1120);
    v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)(isa, v9);

    if ((unint64_t)v10 >> 62)
    {
      if (v10 < 0)
        isa = (_QWORD *)v10;
      else
        isa = (_QWORD *)(v10 & 0xFFFFFFFFFFFFFF8);
      swift_bridgeObjectRetain(v10);
      v11 = _CocoaArrayWrapper.endIndex.getter(isa);
      swift_bridgeObjectRelease(v10);
      if (v11)
        goto LABEL_8;
    }
    else
    {
      v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v11)
      {
LABEL_8:
        if (v11 < 1)
        {
LABEL_25:
          __break(1u);
LABEL_26:
          __break(1u);
LABEL_27:

          __break(1u);
          goto LABEL_28;
        }
        for (i = 0; i != v11; ++i)
        {
          if ((v10 & 0xC000000000000001) != 0)
          {
            v13 = specialized _ArrayBuffer._getElementSlowPath(_:)(i, v10);
          }
          else
          {
            v13 = *(_QWORD *)(v10 + 8 * i + 32);
            swift_unknownObjectRetain(v13);
          }
          v14 = objc_opt_self(MKUserLocation);
          if (swift_dynamicCastObjCClass(v13, v14))
          {
            swift_unknownObjectRelease(v13);
          }
          else
          {
            specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(0);
            v15 = _swiftEmptyArrayStorage[2];
            specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v15);
            v16 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v15, v13);
            specialized ContiguousArray._endMutation()(v16);
          }
        }
        swift_bridgeObjectRelease(v10);
        isa = _swiftEmptyArrayStorage;
        v17 = *(void **)((char *)v3 + v1);
        if (v17)
          goto LABEL_18;
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
    }
    swift_bridgeObjectRelease(v10);
    isa = _swiftEmptyArrayStorage;
    v17 = *(void **)((char *)v3 + v1);
    if (v17)
    {
LABEL_18:
      v18 = v17;
      v19 = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v18, "removeAnnotations:", v19, swift_release(_swiftEmptyArrayStorage).n128_f64[0]);

      v20 = *(void **)((char *)v3 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_selectedAnnotation);
      *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_selectedAnnotation) = 0;

      v21 = (_QWORD *)((char *)v3 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapLastSearchedQuery);
      v22 = *(_QWORD *)((char *)v3 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapLastSearchedQuery + 8);
      *v21 = 0;
      v21[1] = 0;
      swift_bridgeObjectRelease(v22);
      return;
    }
    goto LABEL_24;
  }
LABEL_28:
  __break(1u);
}

id sub_1003B23D0(char *a1)
{
  uint64_t v1;
  uint64_t v3;
  double v4;
  uint64_t v5;
  id result;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  uint64_t v28;
  CLLocationCoordinate2D v29;
  CLLocationCoordinate2D v30;
  MKCoordinateRegion v31;
  MKCoordinateRegion v32;

  v3 = OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius;
  v4 = *(double *)&a1[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius];
  objc_msgSend(a1, "coordinate");
  v31 = MKCoordinateRegionMakeWithDistance(v29, v4 * 3.5, v4 * 3.5);
  v5 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView;
  result = *(id *)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView);
  if (!result)
  {
    __break(1u);
    goto LABEL_32;
  }
  objc_msgSend(result, "regionThatFits:", v31.center.latitude, v31.center.longitude, v31.span.latitudeDelta, v31.span.longitudeDelta);
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v15 = *(double *)&a1[v3];
  objc_msgSend(a1, "coordinate");
  v32 = MKCoordinateRegionMakeWithDistance(v30, v15 * 3.5, v15 * 3.5);
  result = *(id *)(v1 + v5);
  if (!result)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  objc_msgSend(result, "regionThatFits:", v32.center.latitude, v32.center.longitude, v32.span.latitudeDelta, v32.span.longitudeDelta);
  result = *(id *)(v1 + v5);
  if (!result)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v18 = v16;
  v19 = v17;
  result = objc_msgSend(result, "region");
  if (v21 != v18 || v20 != v19)
  {
    result = *(id *)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_dragView);
    if (result)
    {
      result = objc_msgSend(result, "removeHandle:", 0);
      goto LABEL_10;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
LABEL_10:
  if (v10 >= -180.0
    && v10 <= 180.0
    && v8 >= -90.0
    && v8 <= 90.0
    && v12 >= 0.0
    && v12 <= 180.0
    && v14 >= 0.0
    && v14 <= 360.0)
  {
    result = *(id *)(v1 + v5);
    if (result)
    {
      result = objc_msgSend(result, "setRegion:animated:", 1, v8, v10, v12, v14);
      v28 = v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_currentMapRegion;
      *(double *)v28 = v8;
      *(double *)(v28 + 8) = v10;
      *(double *)(v28 + 16) = v12;
      *(double *)(v28 + 24) = v14;
      *(_BYTE *)(v28 + 32) = 0;
      return result;
    }
LABEL_35:
    __break(1u);
  }
  return result;
}

void sub_1003B25A8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t (*)(char), uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void *v30;
  char *v31;
  uint64_t Strong;
  uint64_t v33;
  uint64_t v34;
  uint64_t ObjectType;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[2];
  _QWORD *v39;
  _QWORD aBlock[5];
  uint64_t v41;
  char v42[8];

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v3 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v5 = (char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DispatchQoS(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)&v0[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView];
  if (!v10)
    goto LABEL_23;
  v11 = objc_msgSend(v10, "selectedAnnotations");
  v12 = sub_100053F2C(&qword_1005E1120);
  v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v11, v12);

  if (!((unint64_t)v13 >> 62))
  {
    if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
LABEL_20:
    swift_bridgeObjectRelease(v13);
    return;
  }
  if (v13 < 0)
    v36 = v13;
  else
    v36 = v13 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v13);
  v37 = _CocoaArrayWrapper.endIndex.getter(v36);
  swift_bridgeObjectRelease(v13);
  if (!v37)
    goto LABEL_20;
LABEL_4:
  if ((v13 & 0xC000000000000001) != 0)
  {
    v14 = specialized _ArrayBuffer._getElementSlowPath(_:)(0, v13);
    goto LABEL_7;
  }
  if (!*(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_23:
    __break(1u);
    return;
  }
  v14 = *(_QWORD *)(v13 + 32);
  swift_unknownObjectRetain(v14);
LABEL_7:
  swift_bridgeObjectRelease(v13);
  v15 = type metadata accessor for FMFenceMapAnnotation(0);
  v16 = swift_dynamicCastClass(v14, v15);
  if (v16)
  {
    v17 = v16;
    if (!*(_QWORD *)(v16 + OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_clPlacemark))
    {
      v38[1] = *(_QWORD *)(v16 + OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_didReverseGeocodeGroup);
      v22 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
      v38[0] = static OS_dispatch_queue.main.getter(v22);
      swift_unknownObjectWeakInit(v42);
      v23 = swift_allocObject(&unk_100560090, 32, 7);
      *(_QWORD *)(v23 + 16) = v1;
      *(_QWORD *)(v23 + 24) = v17;
      aBlock[4] = sub_1003B7618;
      v41 = v23;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100037DF8;
      aBlock[3] = &unk_1005600A8;
      v24 = _Block_copy(aBlock);
      v25 = v1;
      v26 = swift_unknownObjectRetain(v14);
      static DispatchQoS.unspecified.getter(v26);
      v39 = _swiftEmptyArrayStorage;
      v27 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v28 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
      v29 = sub_1000555E4();
      dispatch thunk of SetAlgebra.init<A>(_:)(&v39, v28, v29, v2, v27);
      v30 = (void *)v38[0];
      OS_dispatch_group.notify(qos:flags:queue:execute:)(v9, v5, v38[0], v24);
      _Block_release(v24);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      swift_unknownObjectWeakDestroy(v42);
      swift_unknownObjectRelease(v14);
      swift_release(v41);
      return;
    }
    v18 = *(void (**)(uint64_t, uint64_t (*)(char), uint64_t))&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_doneHandler];
    if (v18)
    {
      v19 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_doneHandler + 8];
      v20 = swift_allocObject(&unk_1005600E0, 32, 7);
      *(_QWORD *)(v20 + 16) = v1;
      *(_QWORD *)(v20 + 24) = v17;
      sub_1000A190C((uint64_t)v18, v19);
      v21 = v1;
      swift_unknownObjectRetain(v14);
      v18(v17, sub_1003B8F74, v20);
      swift_release(v20);
      sub_1000327F0((uint64_t)v18, v19);
    }
    else
    {
      v31 = &v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_delegate];
      Strong = swift_unknownObjectWeakLoadStrong(&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_delegate]);
      if (Strong)
      {
        v33 = Strong;
        v34 = *((_QWORD *)v31 + 1);
        ObjectType = swift_getObjectType(Strong);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 8))(v17, 0, ObjectType, v34);
        swift_unknownObjectRelease(v33);
      }
      sub_1003B2C24(v1);
    }
  }
  swift_unknownObjectRelease(v14);
}

uint64_t sub_1003B29D4(char a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t Strong;
  uint64_t v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[5];
  uint64_t v32;

  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v30 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = &a2[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_delegate];
  Strong = swift_unknownObjectWeakLoadStrong(&a2[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_delegate]);
  if (Strong)
  {
    v15 = Strong;
    v16 = *((_QWORD *)v13 + 1);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 8))(a3, a1 & 1, ObjectType, v16);
    swift_unknownObjectRelease(v15);
  }
  v18 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v19 = (void *)static OS_dispatch_queue.main.getter(v18);
  v20 = swift_allocObject(&unk_100560108, 25, 7);
  *(_QWORD *)(v20 + 16) = a2;
  *(_BYTE *)(v20 + 24) = a1 & 1;
  aBlock[4] = sub_1003B8FA0;
  v32 = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_100560120;
  v21 = _Block_copy(aBlock);
  v22 = v32;
  v23 = a2;
  swift_release(v22);
  static DispatchQoS.unspecified.getter(v24);
  aBlock[0] = _swiftEmptyArrayStorage;
  v25 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v26 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v27 = sub_1000555E4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v26, v27, v6, v25);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v8, v21);
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

void sub_1003B2C24(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _BYTE v15[24];

  v2 = sub_100053F2C(&qword_1005D2C70);
  v3 = __chkstk_darwin(v2);
  v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v3);
  v7 = &v15[-v6 - 8];
  if (a1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_isOtherUsage] == 1)
  {
    v8 = objc_msgSend(a1, "navigationController");
    if (v8)
    {
      v14 = v8;

    }
  }
  else
  {
    v9 = *(_QWORD *)&a1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mediator];
    if (v9)
    {
      v10 = *(_QWORD *)(v9 + 56);
      v11 = sub_100053F2C(&qword_1005D2C78);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 4, 10, v11);
      v12 = type metadata accessor for FMSelectionPendingAction(0);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v7, 0, 1, v12);
      sub_10027AC60((uint64_t)v7, (uint64_t)v5);
      v13 = v10 + OBJC_IVAR____TtC6FindMy21FMSelectionController_pendingAction;
      swift_beginAccess(v10 + OBJC_IVAR____TtC6FindMy21FMSelectionController_pendingAction, v15, 33, 0);
      swift_retain(v10);
      sub_100099CDC((uint64_t)v5, v13, &qword_1005D2C70);
      swift_endAccess(v15);
      objc_msgSend(a1, "dismissViewControllerAnimated:completion:", 1, 0, swift_release(v10).n128_f64[0]);
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1003B2DE4(char *a1, void *a2)
{
  void (*v4)(void *, uint64_t (*)(), uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  char *v9;
  uint64_t Strong;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;

  v4 = *(void (**)(void *, uint64_t (*)(), uint64_t))&a1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_doneHandler];
  if (v4)
  {
    v5 = *(_QWORD *)&a1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_doneHandler + 8];
    v6 = swift_allocObject(&unk_100560158, 32, 7);
    *(_QWORD *)(v6 + 16) = a1;
    *(_QWORD *)(v6 + 24) = a2;
    sub_1000A190C((uint64_t)v4, v5);
    v7 = a1;
    v8 = a2;
    v4(a2, sub_1003B9640, v6);
    swift_release(v6);
    sub_1000327F0((uint64_t)v4, v5);
  }
  else
  {
    v9 = &a1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_delegate];
    Strong = swift_unknownObjectWeakLoadStrong(&a1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_delegate]);
    if (Strong)
    {
      v11 = Strong;
      v12 = *((_QWORD *)v9 + 1);
      ObjectType = swift_getObjectType(Strong);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 8))(a2, 0, ObjectType, v12);
      swift_unknownObjectRelease(v11);
    }
    sub_1003B2C24(a1);
  }
}

void sub_1003B2EE4(uint64_t a1, char a2)
{
  uint64_t v2;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;

  if ((a2 & 1) != 0)
    *(double *)&a1 = -1.0;
  v4 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_smallRadiusBarButtonItem);
  if (!v4)
  {
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v5 = objc_msgSend(v4, "customView");
  if (v5)
  {
    v6 = v5;
    v7 = type metadata accessor for FMStickyRoundedButton();
    v8 = (void *)swift_dynamicCastClass(v6, v7);
    if (!v8)

  }
  else
  {
    v8 = 0;
  }
  v9 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mediumRadiusBarButtonItem);
  if (!v9)
    goto LABEL_28;
  v10 = objc_msgSend(v9, "customView");
  if (v10)
  {
    v11 = v10;
    v12 = type metadata accessor for FMStickyRoundedButton();
    v13 = swift_dynamicCastClass(v11, v12);
    if (v13)
    {
      v20 = (id)v13;
      goto LABEL_15;
    }

  }
  v20 = 0;
LABEL_15:
  v14 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_largeRadiusBarButtonItem);
  if (!v14)
  {
LABEL_29:
    __break(1u);
    return;
  }
  v15 = objc_msgSend(v14, "customView");
  if (v15)
  {
    v16 = v15;
    v17 = type metadata accessor for FMStickyRoundedButton();
    v18 = (void *)swift_dynamicCastClass(v16, v17);
    if (!v18)

  }
  else
  {
    v18 = 0;
  }
  if (v8)
    objc_msgSend(v8, "setSelected:", *(double *)&a1 == 100.0);
  if (v20)
    objc_msgSend(v20, "setSelected:", *(double *)&a1 == 250.0);
  if (v18)
  {
    v19 = v18;
    objc_msgSend(v19, "setSelected:", *(double *)&a1 == 375.0);

  }
}

void sub_1003B30AC(uint64_t a1, char a2)
{
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  char *v19;
  char *v20;
  double v21;
  void *v22;
  uint64_t v23;
  double v24;
  double v25;
  id v26;
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  void *v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  double v49;
  _QWORD aBlock[5];
  uint64_t v51;

  v3 = v2;
  v49 = *(double *)&a1;
  LODWORD(v4) = a2 & 1;
  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v48 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v46 = *(_QWORD *)(v8 - 8);
  v47 = v8;
  __chkstk_darwin(v8);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for DispatchTime(0);
  v11 = *(_QWORD *)(v45 - 8);
  v12 = __chkstk_darwin(v45);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)&v42 - v15;
  v17 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_dragView;
  v18 = *(void **)&v3[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_dragView];
  if (v18)
  {
    v19 = (char *)objc_msgSend(v18, "annotation");
    if (v19)
    {
      v20 = v19;
      if ((_DWORD)v4)
      {

      }
      else
      {
        v44 = 0;
        v21 = v49;
        v22 = *(void **)&v3[v17];
        if (v22)
          objc_msgSend(v22, "removeHandle:", 1);
        v23 = OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius;
        *(double *)&v20[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius] = fmin(fmax(v21, 100.0), 241401.0);
        objc_msgSend(v20, "coordinate");
        v26 = objc_msgSend((id)objc_opt_self(MKCircle), "circleWithCenterCoordinate:radius:", v24, v25, *(double *)&v20[v23]);
        v27 = OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_overlay;
        v28 = *(void **)&v20[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_overlay];
        *(_QWORD *)&v20[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_overlay] = v26;

        v29 = *(void **)&v20[v27];
        v30 = v29;
        sub_1003B1E9C((uint64_t)v29);

        sub_1003B23D0(v20);
        v31 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
        v42 = static OS_dispatch_queue.main.getter(v31);
        static DispatchTime.now()(v42);
        + infix(_:_:)(v14, 0.5);
        v43 = *(void (**)(char *, uint64_t))(v11 + 8);
        v32 = v45;
        v43(v14, v45);
        v33 = swift_allocObject(&unk_100560040, 32, 7);
        *(_QWORD *)(v33 + 16) = v3;
        *(_QWORD *)(v33 + 24) = v20;
        aBlock[4] = sub_1003B44B8;
        v51 = v33;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100037DF8;
        aBlock[3] = &unk_100560058;
        v34 = _Block_copy(aBlock);
        v35 = v51;
        v36 = v3;
        v37 = v20;
        swift_release(v35);
        static DispatchQoS.unspecified.getter(v38);
        aBlock[0] = _swiftEmptyArrayStorage;
        v4 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
        v39 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
        v40 = sub_1000555E4();
        dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v39, v40, v5, v4);
        v41 = (void *)v42;
        OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v16, v10, v7, v34);
        _Block_release(v34);

        (*(void (**)(char *, uint64_t))(v48 + 8))(v7, v5);
        (*(void (**)(char *, uint64_t))(v46 + 8))(v10, v47);
        v43(v16, v32);
        LOBYTE(v4) = v44;
      }
    }
  }
  sub_1003B2EE4(*(uint64_t *)&v49, v4);
}

void sub_1003B3478(void *a1)
{
  uint64_t v1;
  id v3;
  void *v4;

  v3 = objc_msgSend(a1, "annotation");

  if (v3)
  {
    sub_1003B1E9C(0);
    if (a1)
      objc_msgSend(a1, "removeHandle:", 1);
    v4 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView);
    if (v4)
      objc_msgSend(v4, "setUserInteractionEnabled:", 0);
    else
      __break(1u);
  }
}

id sub_1003B3564(void *a1)
{
  uint64_t v1;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  id result;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  BOOL v15;
  double v16;
  BOOL v17;
  double v18;
  BOOL v19;
  double v20;
  uint64_t v21;
  void *v22;
  id v23;
  CLLocationCoordinate2D v24;
  MKCoordinateRegion v25;

  if (!a1)
    goto LABEL_25;
  v3 = (char *)objc_msgSend(a1, "annotation");
  if (!v3)
    goto LABEL_25;
  v4 = v3;
  v5 = OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius;
  sub_1003B2EE4(*(_QWORD *)&v3[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius], 0);
  objc_msgSend(v4, "coordinate");
  v25 = MKCoordinateRegionMakeWithDistance(v24, *(double *)&v4[v5] * 3.5, *(double *)&v4[v5] * 3.5);
  v6 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView;
  result = *(id *)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView);
  if (!result)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  objc_msgSend(result, "regionThatFits:", v25.center.latitude, v25.center.longitude, v25.span.latitudeDelta, v25.span.longitudeDelta);
  v12 = v8;
  v15 = v9 < -180.0 || v9 > 180.0 || v8 < -90.0 || v8 > 90.0;
  if (v15
    || ((v16 = v10, v10 >= 0.0) ? (v17 = v10 > 180.0) : (v17 = 1),
        v17 || ((v18 = v11, v11 >= 0.0) ? (v19 = v11 > 360.0) : (v19 = 1), v19)))
  {
LABEL_24:
    v22 = *(void **)&v4[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_overlay];
    v23 = v22;
    sub_1003B1E9C((uint64_t)v22);

    objc_msgSend(a1, "addHandleForAnnotation:", v4);
LABEL_25:
    result = *(id *)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView);
    if (result)
      return objc_msgSend(result, "setUserInteractionEnabled:", 1);
    __break(1u);
    goto LABEL_28;
  }
  result = *(id *)(v1 + v6);
  if (result)
  {
    v20 = v9;
    objc_msgSend(result, "setRegion:animated:", 1, v8);
    v21 = v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_currentMapRegion;
    *(double *)v21 = v12;
    *(double *)(v21 + 8) = v20;
    *(double *)(v21 + 16) = v16;
    *(double *)(v21 + 24) = v18;
    *(_BYTE *)(v21 + 32) = 0;
    goto LABEL_24;
  }
LABEL_29:
  __break(1u);
  return result;
}

void sub_1003B39A8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  Class isa;
  uint64_t v20;
  void *v21;
  double v22;
  double v23;
  id v24;
  id v25;
  Swift::String v26;
  Swift::String v27;
  Swift::String v28;
  double v29;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  id v34;
  char *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  Swift::String v41;

  v2 = v1;
  v4 = sub_100053F2C(&qword_1005D3370);
  __chkstk_darwin(v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FMFLocationAlertAddressType(0);
  v8 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, "state") == (id)1)
  {
    v11 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_userDroppedAnnotation;
    v12 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_userDroppedAnnotation);
    if (v12)
    {
      v38 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_userDroppedAnnotation;
      v13 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView);
      if (!v13)
        goto LABEL_9;
      v14 = sub_100053F2C(&qword_1005D2F10);
      v15 = swift_allocObject(v14, 40, 7);
      *(_OWORD *)(v15 + 16) = xmmword_100481B00;
      *(_QWORD *)(v15 + 32) = v12;
      v39 = v15;
      specialized Array._endMutation()(v15);
      v16 = v39;
      v17 = v12;
      v18 = v13;
      sub_100053F2C(&qword_1005E1120);
      isa = Array._bridgeToObjectiveC()().super.isa;
      objc_msgSend(v18, "removeAnnotations:", isa, swift_bridgeObjectRelease(v16).n128_f64[0]);

      v11 = v38;
    }
    v20 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView;
    objc_msgSend(a1, "locationInView:", *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView));
    v21 = *(void **)(v2 + v20);
    if (v21)
    {
      objc_msgSend(v21, "convertPoint:toCoordinateFromView:", *(_QWORD *)(v2 + v20));
      v24 = objc_msgSend(objc_allocWithZone((Class)CLLocation), "initWithLatitude:longitude:", v22, v23);
      v39 = 0;
      v40 = 0xE000000000000000;
      _StringGuts.grow(_:)(20);
      swift_bridgeObjectRelease(v40);
      v25 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
      v41._countAndFlagsBits = 0xD000000000000033;
      v41._object = (void *)0x80000001004C4840;
      v26._object = (void *)0x80000001004C4810;
      v26._countAndFlagsBits = 0xD000000000000021;
      v27._countAndFlagsBits = 0;
      v27._object = (void *)0xE000000000000000;
      v28 = NSLocalizedString(_:tableName:bundle:value:comment:)(v26, (Swift::String_optional)0, (NSBundle)v25, v27, v41);

      objc_msgSend(v24, "coordinate");
      v30 = v29;
      v32 = v31;
      (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, enum case for FMFLocationAlertAddressType.droppedPin(_:), v7);
      v33 = type metadata accessor for FMFAddress(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v6, 1, 1, v33);
      v34 = objc_allocWithZone((Class)type metadata accessor for FMFenceMapAnnotation(0));
      v35 = sub_1003CBA64(v28._countAndFlagsBits, (uint64_t)v28._object, 0, 0, 0, (uint64_t)v10, (uint64_t)v6, 0, v30, v32, 1);
      sub_1003AD2BC(v35);
      v36 = *(void **)(v2 + v11);
      *(_QWORD *)(v2 + v11) = v35;

      return;
    }
    __break(1u);
LABEL_9:
    __break(1u);
  }
}

id sub_1003B3EF4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMFenceMapViewController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1003B4140()
{
  return type metadata accessor for FMFenceMapViewController(0);
}

uint64_t type metadata accessor for FMFenceMapViewController(uint64_t a1)
{
  uint64_t result;

  result = qword_1005E2790;
  if (!qword_1005E2790)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMFenceMapViewController);
  return result;
}

void sub_1003B4184(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD v13[33];

  v13[0] = "\b";
  sub_100007178(319, (unint64_t *)&qword_1005E27A0, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocation);
  if (v3 <= 0x3F)
  {
    v13[1] = *(_QWORD *)(v2 - 8) + 64;
    v13[2] = "\b";
    sub_100007178(319, (unint64_t *)&qword_1005DD810, (uint64_t (*)(uint64_t))&type metadata accessor for FMFAddress);
    if (v5 <= 0x3F)
    {
      v13[3] = *(_QWORD *)(v4 - 8) + 64;
      sub_100007178(319, &qword_1005E27B0, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocationAlertAddressType);
      if (v7 <= 0x3F)
      {
        v8 = *(_QWORD *)(v6 - 8) + 64;
        v13[4] = v8;
        sub_100007178(319, &qword_1005E27B8, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLabel);
        if (v10 <= 0x3F)
        {
          v13[5] = *(_QWORD *)(v9 - 8) + 64;
          v13[6] = &unk_10048EBD8;
          sub_100007178(319, (unint64_t *)&qword_1005D3180, (uint64_t (*)(uint64_t))&type metadata accessor for FMFFriend);
          if (v12 <= 0x3F)
          {
            v13[7] = *(_QWORD *)(v11 - 8) + 64;
            v13[8] = &unk_10048EBF0;
            v13[9] = &unk_10048EBF0;
            v13[10] = &unk_10048EC08;
            v13[11] = &unk_10048EC20;
            v13[12] = "\b";
            v13[13] = &unk_10048EC38;
            v13[14] = "\b";
            v13[15] = "\b";
            v13[16] = "\b";
            v13[17] = "\b";
            v13[18] = "\b";
            v13[19] = "\b";
            v13[20] = "\b";
            v13[21] = "\b";
            v13[22] = "\b";
            v13[23] = &unk_10048EC50;
            v13[24] = &unk_10048EBF0;
            v13[25] = "\b";
            v13[26] = v8;
            v13[27] = &unk_10048EC20;
            v13[28] = "\b";
            v13[29] = &unk_10048EBF0;
            v13[30] = (char *)&value witness table for Builtin.NativeObject + 64;
            v13[31] = "\b";
            v13[32] = "\b";
            swift_updateClassMetadata2(a1, 256, 33, v13, a1 + 80);
          }
        }
      }
    }
  }
}

void destroy for FMFenceMapViewStyle(id *a1)
{

}

_QWORD *initializeWithCopy for FMFenceMapViewStyle(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = (void *)a2[4];
  a1[4] = v5;
  v6 = v3;
  v7 = v4;
  v8 = v5;
  return a1;
}

_QWORD *assignWithCopy for FMFenceMapViewStyle(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  *a1 = *a2;
  v4 = (void *)a2[1];
  v5 = (void *)a1[1];
  a1[1] = v4;
  v6 = v4;

  a1[2] = a2[2];
  v7 = (void *)a2[3];
  v8 = (void *)a1[3];
  a1[3] = v7;
  v9 = v7;

  v10 = (void *)a2[4];
  v11 = (void *)a1[4];
  a1[4] = v10;
  v12 = v10;

  return a1;
}

uint64_t assignWithTake for FMFenceMapViewStyle(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

ValueMetadata *type metadata accessor for FMFenceMapViewStyle()
{
  return &type metadata for FMFenceMapViewStyle;
}

uint64_t sub_1003B448C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_1003B44B8()
{
  uint64_t v0;
  id result;

  result = *(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_dragView);
  if (result)
    return objc_msgSend(result, "addHandleForAnnotation:", *(_QWORD *)(v0 + 24));
  return result;
}

void sub_1003B44E0(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *(_QWORD *)(type metadata accessor for FMFLabelledLocation(0) - 8);
  v3 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v3 = (_QWORD *)sub_10020CF9C(v3);
  v4 = v3[2];
  v5[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1003B45E0(v5);
  *a1 = v3;
}

void sub_1003B4560(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *(_QWORD *)(type metadata accessor for FMFFriend(0) - 8);
  v3 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v3 = (_QWORD *)sub_10020CFB0(v3);
  v4 = v3[2];
  v5[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1003B5588(v5);
  *a1 = v3;
}

void sub_1003B45E0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  Swift::Int v35;
  Swift::Int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  Swift::Int v41;
  char *v42;
  unint64_t v43;
  Swift::Int v44;
  Swift::Int v45;
  uint64_t v46;
  Swift::Int v47;
  void (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int (*v53)(char *, uint64_t, uint64_t);
  __n128 v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  char *v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v62;
  uint64_t v63;
  Swift::String v64;
  void *object;
  void (*v66)(char *, uint64_t);
  void *v67;
  __n128 v68;
  void (*v69)(char *, uint64_t, __n128);
  uint64_t v70;
  char *v71;
  uint64_t (*v72)(char *, uint64_t, uint64_t);
  uint64_t v73;
  char *v74;
  unsigned int (*v75)(char *, uint64_t, uint64_t);
  uint64_t v76;
  __n128 v77;
  uint64_t v78;
  uint64_t v79;
  Swift::String v80;
  char *v81;
  uint64_t v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  Swift::String v86;
  void *v87;
  int v88;
  __n128 v89;
  void (*v90)(char *, uint64_t);
  uint64_t v91;
  uint64_t v92;
  Swift::Int v93;
  Swift::Int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  Swift::Int v101;
  uint64_t v102;
  uint64_t v103;
  Swift::Int v104;
  void (*v105)(char *, uint64_t);
  Swift::Int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t (*v109)(char *, uint64_t, uint64_t);
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unsigned int (*v113)(char *, uint64_t, uint64_t);
  __n128 v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(char *, uint64_t);
  Swift::String v118;
  char *v119;
  uint64_t v120;
  __n128 v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  Swift::String v125;
  char v126;
  __n128 v127;
  void (*v128)(char *, uint64_t, __n128);
  uint64_t v129;
  char *v130;
  char *v131;
  void (*v132)(char *, char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  unint64_t v134;
  unint64_t v135;
  char *v136;
  char *v137;
  Swift::Int v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  BOOL v150;
  unint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  BOOL v160;
  uint64_t v161;
  char v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  BOOL v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  unint64_t v184;
  char *v185;
  uint64_t v186;
  unint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  unint64_t v192;
  _QWORD *v193;
  uint64_t v194;
  _QWORD *v195;
  Swift::Int v196;
  char *v197;
  char *v198;
  char *v199;
  char *v200;
  uint64_t v201;
  Swift::Int v202;
  Swift::Int v203;
  char *v204;
  char *v205;
  char *v206;
  char *v207;
  char *v208;
  Swift::Int v209;
  char *v210;
  unint64_t v211;
  void (*v212)(char *, uint64_t);
  char *v213;
  uint64_t v214;
  unsigned int (*v215)(char *, uint64_t, uint64_t);
  uint64_t (*v216)(char *, uint64_t, uint64_t);
  char *v217;
  char *v218;
  uint64_t v219;
  Swift::Int v220;
  char *v221;
  Swift::String v222;
  Swift::Int v223;
  char *v224;
  uint64_t *v225;
  uint64_t v226;

  v2 = v1;
  v4 = sub_100053F2C(&qword_1005DC400);
  v5 = __chkstk_darwin(v4);
  v7 = (char *)&v194 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __chkstk_darwin(v5);
  v10 = (char *)&v194 - v9;
  v11 = __chkstk_darwin(v8);
  v206 = (char *)&v194 - v12;
  v13 = __chkstk_darwin(v11);
  v207 = (char *)&v194 - v14;
  v15 = __chkstk_darwin(v13);
  v197 = (char *)&v194 - v16;
  __chkstk_darwin(v15);
  v198 = (char *)&v194 - v17;
  v18 = type metadata accessor for FMFLabelledLocation(0);
  v226 = *(_QWORD *)(v18 - 8);
  v19 = __chkstk_darwin(v18);
  v205 = (char *)&v194 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v19);
  v221 = (char *)&v194 - v22;
  v23 = __chkstk_darwin(v21);
  v25 = (char *)&v194 - v24;
  v26 = __chkstk_darwin(v23);
  v224 = (char *)&v194 - v27;
  v28 = __chkstk_darwin(v26);
  v208 = (char *)&v194 - v29;
  v30 = __chkstk_darwin(v28);
  v210 = (char *)&v194 - v31;
  v32 = __chkstk_darwin(v30);
  v200 = (char *)&v194 - v33;
  __chkstk_darwin(v32);
  v199 = (char *)&v194 - v34;
  v225 = a1;
  v35 = a1[1];
  v36 = _minimumMergeRunLength(_:)(v35);
  if (v36 >= v35)
  {
    if (v35 < 0)
      goto LABEL_158;
    if (v35)
      sub_1003B6114(0, v35, 1, v225);
    return;
  }
  if (v35 >= 0)
    v37 = v35;
  else
    v37 = v35 + 1;
  if (v35 < -1)
    goto LABEL_172;
  v196 = v36;
  if (v35 < 2)
  {
    v211 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v226 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v226 + 80));
    v195 = _swiftEmptyArrayStorage;
    if (v35 != 1)
    {
      v43 = _swiftEmptyArrayStorage[2];
      v42 = (char *)_swiftEmptyArrayStorage;
LABEL_122:
      if (v43 >= 2)
      {
        v186 = *v225;
        do
        {
          v187 = v43 - 2;
          if (v43 < 2)
            goto LABEL_153;
          if (!v186)
            goto LABEL_169;
          v188 = v42;
          v189 = *(_QWORD *)&v42[16 * v187 + 32];
          v190 = *(_QWORD *)&v42[16 * v43 + 24];
          sub_1003B67E8(v186 + *(_QWORD *)(v226 + 72) * v189, v186 + *(_QWORD *)(v226 + 72) * *(_QWORD *)&v42[16 * v43 + 16], v186 + *(_QWORD *)(v226 + 72) * v190, v211);
          if (v2)
          {
            v185 = v188;
            goto LABEL_135;
          }
          if (v190 < v189)
            goto LABEL_154;
          if ((swift_isUniquelyReferenced_nonNull_native(v188) & 1) == 0)
            v188 = sub_10020CE70((uint64_t)v188);
          if (v187 >= *((_QWORD *)v188 + 2))
            goto LABEL_155;
          v191 = &v188[16 * v187 + 32];
          *(_QWORD *)v191 = v189;
          *((_QWORD *)v191 + 1) = v190;
          v192 = *((_QWORD *)v188 + 2);
          if (v43 > v192)
            goto LABEL_156;
          memmove(&v188[16 * v43 + 16], &v188[16 * v43 + 32], 16 * (v192 - v43));
          v42 = v188;
          *((_QWORD *)v188 + 2) = v192 - 1;
          v43 = v192 - 1;
        }
        while (v192 > 2);
      }
      v185 = v42;
LABEL_135:
      swift_bridgeObjectRelease(v185);
      v193 = v195;
      v195[2] = 0;
      swift_bridgeObjectRelease(v193);
      return;
    }
    v213 = v7;
  }
  else
  {
    v213 = v7;
    v38 = v37 >> 1;
    v39 = static Array._allocateBufferUninitialized(minimumCapacity:)(v37 >> 1, v18);
    *(_QWORD *)(v39 + 16) = v38;
    v40 = *(unsigned __int8 *)(v226 + 80);
    v195 = (_QWORD *)v39;
    v211 = v39 + ((v40 + 32) & ~v40);
  }
  v41 = 0;
  v42 = (char *)_swiftEmptyArrayStorage;
  v217 = v10;
  v218 = v25;
  v219 = v18;
  while (1)
  {
    v44 = v41;
    v45 = v41 + 1;
    v204 = v42;
    v209 = v41;
    if (v41 + 1 < v35)
    {
      v46 = *v225;
      v47 = *(_QWORD *)(v226 + 72);
      v220 = v41 + 1;
      v48 = *(void (**)(char *, uint64_t, uint64_t))(v226 + 16);
      v48(v199, v46 + v47 * v45, v18);
      v201 = v46;
      v223 = v47;
      v216 = (uint64_t (*)(char *, uint64_t, uint64_t))v48;
      v49 = ((uint64_t (*)(char *, uint64_t, uint64_t))v48)(v200, v46 + v47 * v44, v18);
      v50 = v198;
      FMFLabelledLocation.label.getter(v49);
      v51 = type metadata accessor for FMFLabel(0);
      v52 = *(_QWORD *)(v51 - 8);
      v53 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48);
      if (v53(v50, 1, v51) == 1)
        goto LABEL_170;
      FMFLabel.localizedValue.getter(v54);
      v55 = v50;
      v57 = v56;
      v58 = *(void (**)(char *, uint64_t))(v52 + 8);
      v58(v55, v51);
      v222 = String.lowercased()();
      swift_bridgeObjectRelease(v57);
      v59 = v197;
      FMFLabelledLocation.label.getter(v60);
      v215 = v53;
      if (v53(v59, 1, v51) == 1)
        goto LABEL_171;
      FMFLabel.localizedValue.getter(v61);
      v63 = v62;
      v214 = v51;
      v58(v59, v51);
      v64 = String.lowercased()();
      object = v64._object;
      swift_bridgeObjectRelease(v63);
      v66 = v58;
      v67 = v222._object;
      if (v222._countAndFlagsBits == v64._countAndFlagsBits && v222._object == v64._object)
      {
        LODWORD(v222._countAndFlagsBits) = 0;
        object = v222._object;
      }
      else
      {
        LODWORD(v222._countAndFlagsBits) = _stringCompareWithSmolCheck(_:_:expecting:)(v222._countAndFlagsBits, v222._object, v64._countAndFlagsBits, v64._object, 1);
      }
      v10 = v217;
      v18 = v219;
      swift_bridgeObjectRelease(v67);
      v68 = swift_bridgeObjectRelease(object);
      v69 = *(void (**)(char *, uint64_t, __n128))(v226 + 8);
      v69(v200, v18, v68);
      v212 = (void (*)(char *, uint64_t))v69;
      ((void (*)(char *, uint64_t))v69)(v199, v18);
      v45 = v209 + 2;
      v222._object = (void *)v35;
      if (v209 + 2 < v35)
      {
        v194 = v2;
        v203 = v223 * v220;
        v70 = v201;
        v220 = v209 + 2;
        v202 = v223 * v45;
        v71 = v208;
        while (1)
        {
          v72 = v216;
          v216(v210, v70 + v202, v18);
          v73 = v72(v71, v70 + v203, v18);
          v74 = v207;
          FMFLabelledLocation.label.getter(v73);
          v76 = v214;
          v75 = v215;
          if (v215(v74, 1, v214) == 1)
            goto LABEL_166;
          FMFLabel.localizedValue.getter(v77);
          v79 = v78;
          v66(v74, v76);
          v80 = String.lowercased()();
          swift_bridgeObjectRelease(v79);
          v81 = v206;
          FMFLabelledLocation.label.getter(v82);
          if (v75(v81, 1, v76) == 1)
            goto LABEL_167;
          FMFLabel.localizedValue.getter(v83);
          v85 = v84;
          v66(v81, v76);
          v86 = String.lowercased()();
          v87 = v86._object;
          swift_bridgeObjectRelease(v85);
          if (v80._countAndFlagsBits == v86._countAndFlagsBits && v80._object == v86._object)
          {
            v88 = 0;
            v87 = v80._object;
          }
          else
          {
            v88 = _stringCompareWithSmolCheck(_:_:expecting:)(v80._countAndFlagsBits, v80._object, v86._countAndFlagsBits, v86._object, 1);
          }
          v35 = (Swift::Int)v222._object;
          swift_bridgeObjectRelease(v80._object);
          v89 = swift_bridgeObjectRelease(v87);
          v71 = v208;
          v18 = v219;
          v90 = v212;
          ((void (*)(char *, uint64_t, __n128))v212)(v208, v219, v89);
          v90(v210, v18);
          if (((LODWORD(v222._countAndFlagsBits) ^ v88) & 1) != 0)
            break;
          v70 += v223;
          ++v220;
          v10 = v217;
          if (v35 == v220)
          {
            v45 = v35;
            v2 = v194;
            v25 = v218;
            goto LABEL_35;
          }
        }
        v2 = v194;
        v10 = v217;
        v25 = v218;
        v45 = v220;
      }
LABEL_35:
      v42 = v204;
      v44 = v209;
      if ((v222._countAndFlagsBits & 1) != 0)
      {
        if (v45 < v209)
          goto LABEL_159;
        if (v209 < v45)
        {
          v91 = 0;
          v92 = v223 * (v45 - 1);
          v93 = v45 * v223;
          v94 = v209;
          v95 = v209 * v223;
          v220 = v45;
          do
          {
            if (v94 != v45 + v91 - 1)
            {
              if (!v201)
                goto LABEL_168;
              v97 = v2;
              v98 = v201 + v95;
              v99 = v201 + v92;
              v100 = v201;
              v222._countAndFlagsBits = *(_QWORD *)(v226 + 32);
              ((void (*)(char *, uint64_t, uint64_t, char *))v222._countAndFlagsBits)(v205, v201 + v95, v219, v42);
              if (v95 < v92 || v98 >= v100 + v93)
              {
                v96 = v219;
                swift_arrayInitWithTakeFrontToBack(v98, v99);
              }
              else
              {
                v96 = v219;
                if (v95 != v92)
                  swift_arrayInitWithTakeBackToFront(v98, v99);
              }
              ((void (*)(uint64_t, char *, uint64_t))v222._countAndFlagsBits)(v99, v205, v96);
              v2 = v97;
              v42 = v204;
              v45 = v220;
              v35 = (Swift::Int)v222._object;
            }
            ++v94;
            --v91;
            v92 -= v223;
            v93 -= v223;
            v95 += v223;
          }
          while (v94 < v45 + v91);
          v10 = v217;
          v25 = v218;
          v18 = v219;
          v44 = v209;
        }
      }
    }
    if (v45 < v35)
    {
      if (__OFSUB__(v45, v44))
        goto LABEL_157;
      if (v45 - v44 < v196)
        break;
    }
LABEL_72:
    if (v45 < v44)
      goto LABEL_152;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v42);
    v220 = v45;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      v42 = v204;
    else
      v42 = sub_10020C830(0, *((_QWORD *)v204 + 2) + 1, 1, v204);
    v135 = *((_QWORD *)v42 + 2);
    v134 = *((_QWORD *)v42 + 3);
    v43 = v135 + 1;
    if (v135 >= v134 >> 1)
      v42 = sub_10020C830((char *)(v134 > 1), v135 + 1, 1, v42);
    *((_QWORD *)v42 + 2) = v43;
    v136 = v42 + 32;
    v137 = &v42[16 * v135 + 32];
    v138 = v220;
    *(_QWORD *)v137 = v209;
    *((_QWORD *)v137 + 1) = v138;
    if (v135)
    {
      while (1)
      {
        v139 = v43 - 1;
        if (v43 >= 4)
        {
          v144 = &v136[16 * v43];
          v145 = *((_QWORD *)v144 - 8);
          v146 = *((_QWORD *)v144 - 7);
          v150 = __OFSUB__(v146, v145);
          v147 = v146 - v145;
          if (v150)
            goto LABEL_141;
          v149 = *((_QWORD *)v144 - 6);
          v148 = *((_QWORD *)v144 - 5);
          v150 = __OFSUB__(v148, v149);
          v142 = v148 - v149;
          v143 = v150;
          if (v150)
            goto LABEL_142;
          v151 = v43 - 2;
          v152 = &v136[16 * v43 - 32];
          v154 = *(_QWORD *)v152;
          v153 = *((_QWORD *)v152 + 1);
          v150 = __OFSUB__(v153, v154);
          v155 = v153 - v154;
          if (v150)
            goto LABEL_144;
          v150 = __OFADD__(v142, v155);
          v156 = v142 + v155;
          if (v150)
            goto LABEL_147;
          if (v156 >= v147)
          {
            v174 = &v136[16 * v139];
            v176 = *(_QWORD *)v174;
            v175 = *((_QWORD *)v174 + 1);
            v150 = __OFSUB__(v175, v176);
            v177 = v175 - v176;
            if (v150)
              goto LABEL_151;
            v167 = v142 < v177;
            goto LABEL_109;
          }
        }
        else
        {
          if (v43 != 3)
          {
            v168 = *((_QWORD *)v42 + 4);
            v169 = *((_QWORD *)v42 + 5);
            v150 = __OFSUB__(v169, v168);
            v161 = v169 - v168;
            v162 = v150;
            goto LABEL_103;
          }
          v141 = *((_QWORD *)v42 + 4);
          v140 = *((_QWORD *)v42 + 5);
          v150 = __OFSUB__(v140, v141);
          v142 = v140 - v141;
          v143 = v150;
        }
        if ((v143 & 1) != 0)
          goto LABEL_143;
        v151 = v43 - 2;
        v157 = &v136[16 * v43 - 32];
        v159 = *(_QWORD *)v157;
        v158 = *((_QWORD *)v157 + 1);
        v160 = __OFSUB__(v158, v159);
        v161 = v158 - v159;
        v162 = v160;
        if (v160)
          goto LABEL_146;
        v163 = &v136[16 * v139];
        v165 = *(_QWORD *)v163;
        v164 = *((_QWORD *)v163 + 1);
        v150 = __OFSUB__(v164, v165);
        v166 = v164 - v165;
        if (v150)
          goto LABEL_149;
        if (__OFADD__(v161, v166))
          goto LABEL_150;
        if (v161 + v166 >= v142)
        {
          v167 = v142 < v166;
LABEL_109:
          if (v167)
            v139 = v151;
          goto LABEL_111;
        }
LABEL_103:
        if ((v162 & 1) != 0)
          goto LABEL_145;
        v170 = &v136[16 * v139];
        v172 = *(_QWORD *)v170;
        v171 = *((_QWORD *)v170 + 1);
        v150 = __OFSUB__(v171, v172);
        v173 = v171 - v172;
        if (v150)
          goto LABEL_148;
        if (v173 < v161)
          goto LABEL_15;
LABEL_111:
        v178 = v139 - 1;
        if (v139 - 1 >= v43)
        {
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
          goto LABEL_161;
        }
        if (!*v225)
          goto LABEL_165;
        v179 = v42;
        v180 = &v136[16 * v178];
        v181 = *(_QWORD *)v180;
        v182 = &v136[16 * v139];
        v183 = *((_QWORD *)v182 + 1);
        sub_1003B67E8(*v225 + *(_QWORD *)(v226 + 72) * *(_QWORD *)v180, *v225 + *(_QWORD *)(v226 + 72) * *(_QWORD *)v182, *v225 + *(_QWORD *)(v226 + 72) * v183, v211);
        if (v2)
        {
          v185 = v179;
          goto LABEL_135;
        }
        if (v183 < v181)
          goto LABEL_138;
        if (v139 > *((_QWORD *)v179 + 2))
          goto LABEL_139;
        *(_QWORD *)v180 = v181;
        *(_QWORD *)&v136[16 * v178 + 8] = v183;
        v184 = *((_QWORD *)v179 + 2);
        if (v139 >= v184)
          goto LABEL_140;
        v43 = v184 - 1;
        memmove(&v136[16 * v139], v182 + 16, 16 * (v184 - 1 - v139));
        v42 = v179;
        *((_QWORD *)v179 + 2) = v184 - 1;
        v25 = v218;
        v18 = v219;
        if (v184 <= 2)
          goto LABEL_15;
      }
    }
    v43 = 1;
LABEL_15:
    v35 = v225[1];
    v41 = v220;
    v10 = v217;
    if (v220 >= v35)
      goto LABEL_122;
  }
  if (__OFADD__(v44, v196))
    goto LABEL_160;
  if (v44 + v196 >= v35)
    v101 = v35;
  else
    v101 = v44 + v196;
  if (v101 >= v44)
  {
    if (v45 != v101)
    {
      v194 = v2;
      v102 = *(_QWORD *)(v226 + 72);
      v212 = *(void (**)(char *, uint64_t))(v226 + 16);
      v103 = v102 * (v45 - 1);
      v214 = v102;
      v104 = v45 * v102;
      v203 = v101;
      do
      {
        v107 = 0;
        v220 = v45;
        v215 = (unsigned int (*)(char *, uint64_t, uint64_t))v104;
        v216 = (uint64_t (*)(char *, uint64_t, uint64_t))v103;
        while (1)
        {
          v108 = *v225;
          v222._object = (void *)(v104 + v107);
          v223 = v44;
          v109 = (uint64_t (*)(char *, uint64_t, uint64_t))v212;
          ((void (*)(char *, Swift::Int, uint64_t, char *))v212)(v224, v104 + v107 + v108, v18, v42);
          v222._countAndFlagsBits = v103 + v107;
          v110 = v109(v25, v103 + v107 + v108, v18);
          FMFLabelledLocation.label.getter(v110);
          v111 = type metadata accessor for FMFLabel(0);
          v112 = *(_QWORD *)(v111 - 8);
          v113 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v112 + 48);
          if (v113(v10, 1, v111) == 1)
            goto LABEL_162;
          FMFLabel.localizedValue.getter(v114);
          v116 = v115;
          v117 = *(void (**)(char *, uint64_t))(v112 + 8);
          v117(v10, v111);
          v118 = String.lowercased()();
          swift_bridgeObjectRelease(v116);
          v119 = v213;
          FMFLabelledLocation.label.getter(v120);
          if (v113(v119, 1, v111) == 1)
            goto LABEL_163;
          v122 = v119;
          FMFLabel.localizedValue.getter(v121);
          v124 = v123;
          v117(v122, v111);
          v125 = String.lowercased()();
          swift_bridgeObjectRelease(v124);
          v103 = (uint64_t)v216;
          if (v118._countAndFlagsBits == v125._countAndFlagsBits && v118._object == v125._object)
          {
            swift_bridgeObjectRelease_n(v118._object, 2);
            v105 = *(void (**)(char *, uint64_t))(v226 + 8);
            v25 = v218;
            v18 = v219;
            v105(v218, v219);
            v105(v224, v18);
            v10 = v217;
            v106 = v220;
            v104 = (Swift::Int)v215;
            goto LABEL_60;
          }
          v126 = _stringCompareWithSmolCheck(_:_:expecting:)(v118._countAndFlagsBits, v118._object, v125._countAndFlagsBits, v125._object, 1);
          swift_bridgeObjectRelease(v118._object);
          v127 = swift_bridgeObjectRelease(v125._object);
          v128 = *(void (**)(char *, uint64_t, __n128))(v226 + 8);
          v25 = v218;
          v18 = v219;
          v128(v218, v219, v127);
          ((void (*)(char *, uint64_t))v128)(v224, v18);
          v104 = (Swift::Int)v215;
          if ((v126 & 1) == 0)
            break;
          v129 = *v225;
          v10 = v217;
          if (!*v225)
            goto LABEL_164;
          v130 = (char *)v215 + v129 + v107;
          v131 = (char *)(v129 + v103 + v107);
          v132 = *(void (**)(char *, char *, uint64_t))(v226 + 32);
          v132(v221, v130, v18);
          swift_arrayInitWithTakeFrontToBack(v130, v131);
          v132(v131, v221, v18);
          v107 -= v214;
          v44 = v223 + 1;
          v106 = v220;
          if (v220 == v223 + 1)
            goto LABEL_60;
        }
        v10 = v217;
        v106 = v220;
LABEL_60:
        v45 = v106 + 1;
        v103 += v214;
        v104 += v214;
        v44 = v209;
      }
      while (v45 != v203);
      v45 = v203;
      v2 = v194;
      v42 = v204;
    }
    goto LABEL_72;
  }
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
LABEL_168:
  __break(1u);
LABEL_169:
  __break(1u);
LABEL_170:
  __break(1u);
LABEL_171:
  __break(1u);
LABEL_172:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

void sub_1003B5588(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  Swift::Int v20;
  Swift::Int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  __n128 v44;
  void (*v45)(char *, uint64_t, __n128);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  __n128 v58;
  uint64_t v59;
  Swift::Int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(char *, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  __n128 v89;
  void (*v90)(char *, uint64_t, __n128);
  uint64_t v91;
  uint64_t v92;
  char *v93;
  void (*v94)(char *, uint64_t, uint64_t);
  unint64_t v95;
  unint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  BOOL v111;
  unint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  BOOL v121;
  uint64_t v122;
  char v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  BOOL v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  unint64_t v145;
  char *v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  unint64_t v153;
  _QWORD *v154;
  _QWORD *v155;
  Swift::Int v156;
  char *v157;
  uint64_t v158;
  char *v159;
  char *v160;
  char *v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  char *v172;
  Swift::Int v173;
  uint64_t v174;
  uint64_t *v175;
  uint64_t v176;

  v2 = v1;
  v4 = type metadata accessor for FMFFriend(0);
  v176 = *(_QWORD *)(v4 - 8);
  v5 = __chkstk_darwin(v4);
  v163 = (char *)&v155 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v170 = (char *)&v155 - v8;
  v9 = __chkstk_darwin(v7);
  v172 = (char *)&v155 - v10;
  v11 = __chkstk_darwin(v9);
  v171 = (char *)&v155 - v12;
  v13 = __chkstk_darwin(v11);
  v159 = (char *)&v155 - v14;
  v15 = __chkstk_darwin(v13);
  v166 = (char *)&v155 - v16;
  v17 = __chkstk_darwin(v15);
  v161 = (char *)&v155 - v18;
  __chkstk_darwin(v17);
  v160 = (char *)&v155 - v19;
  v175 = a1;
  v20 = a1[1];
  v21 = _minimumMergeRunLength(_:)(v20);
  if (v21 >= v20)
  {
    if (v20 < 0)
      goto LABEL_150;
    if (v20)
      sub_1003B6524(0, v20, 1, v175);
    return;
  }
  if (v20 >= 0)
    v22 = v20;
  else
    v22 = v20 + 1;
  if (v20 < -1)
    goto LABEL_158;
  v156 = v21;
  if (v20 < 2)
  {
    v27 = (char *)_swiftEmptyArrayStorage;
    v26 = (char *)_swiftEmptyArrayStorage
        + ((*(unsigned __int8 *)(v176 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v176 + 80));
    v155 = _swiftEmptyArrayStorage;
    if (v20 != 1)
    {
      v29 = _swiftEmptyArrayStorage[2];
LABEL_116:
      if (v29 >= 2)
      {
        v147 = *v175;
        do
        {
          v148 = v29 - 2;
          if (v29 < 2)
            goto LABEL_145;
          if (!v147)
            goto LABEL_157;
          v149 = *(_QWORD *)&v27[16 * v148 + 32];
          v150 = *(_QWORD *)&v27[16 * v29 + 24];
          v151 = v26;
          sub_1003B7044(v147 + *(_QWORD *)(v176 + 72) * v149, v147 + *(_QWORD *)(v176 + 72) * *(_QWORD *)&v27[16 * v29 + 16], v147 + *(_QWORD *)(v176 + 72) * v150, (unint64_t)v26);
          if (v2)
            break;
          if (v150 < v149)
            goto LABEL_146;
          if ((swift_isUniquelyReferenced_nonNull_native(v27) & 1) == 0)
            v27 = sub_10020CE70((uint64_t)v27);
          if (v148 >= *((_QWORD *)v27 + 2))
            goto LABEL_147;
          v152 = &v27[16 * v148 + 32];
          *(_QWORD *)v152 = v149;
          *((_QWORD *)v152 + 1) = v150;
          v153 = *((_QWORD *)v27 + 2);
          if (v29 > v153)
            goto LABEL_148;
          memmove(&v27[16 * v29 + 16], &v27[16 * v29 + 32], 16 * (v153 - v29));
          *((_QWORD *)v27 + 2) = v153 - 1;
          v29 = v153 - 1;
          v26 = v151;
        }
        while (v153 > 2);
      }
LABEL_127:
      swift_bridgeObjectRelease(v27);
      v154 = v155;
      v155[2] = 0;
      swift_bridgeObjectRelease(v154);
      return;
    }
  }
  else
  {
    v23 = v22 >> 1;
    v24 = static Array._allocateBufferUninitialized(minimumCapacity:)(v22 >> 1, v4);
    *(_QWORD *)(v24 + 16) = v23;
    v25 = *(unsigned __int8 *)(v176 + 80);
    v155 = (_QWORD *)v24;
    v26 = (char *)(v24 + ((v25 + 32) & ~v25));
  }
  v28 = 0;
  v27 = (char *)_swiftEmptyArrayStorage;
  v165 = v26;
  v169 = v4;
  while (1)
  {
    v30 = v28;
    v31 = v28 + 1;
    if (v28 + 1 >= v20)
    {
      v42 = v28 + 1;
      goto LABEL_67;
    }
    v173 = v20;
    v32 = *v175;
    v33 = *(_QWORD *)(v176 + 72);
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v176 + 16);
    v34(v160, *v175 + v33 * v31, v4);
    v164 = v30;
    v162 = v32;
    v174 = v33;
    v35 = ((uint64_t (*)(char *, uint64_t, uint64_t))v34)(v161, v32 + v33 * v30, v4);
    v36 = FMFFriend.name.getter(v35);
    v38 = v37;
    v39 = FMFFriend.name.getter(v36);
    v41 = v40;
    if (v39 == v36 && v40 == v38)
    {
      LODWORD(v168) = 0;
      v41 = v38;
    }
    else
    {
      LODWORD(v168) = _stringCompareWithSmolCheck(_:_:expecting:)(v39, v40, v36, v38, 1);
    }
    v43 = v159;
    swift_bridgeObjectRelease(v38);
    v44 = swift_bridgeObjectRelease(v41);
    v45 = *(void (**)(char *, uint64_t, __n128))(v176 + 8);
    v46 = v169;
    v45(v161, v169, v44);
    ((void (*)(char *, uint64_t))v45)(v160, v46);
    v42 = v164 + 2;
    if (v164 + 2 < v173)
    {
      v157 = v27;
      v158 = v2;
      v167 = v174 * v31;
      v47 = v162;
      v48 = v174 * v42;
      while (1)
      {
        v49 = v169;
        v34(v166, v47 + v48, v169);
        v50 = ((uint64_t (*)(char *, uint64_t, uint64_t))v34)(v43, v47 + v167, v49);
        v51 = FMFFriend.name.getter(v50);
        v53 = v52;
        v54 = FMFFriend.name.getter(v51);
        v56 = v55;
        if (v54 == v51 && v55 == v53)
        {
          v57 = 0;
          v56 = v53;
        }
        else
        {
          v57 = _stringCompareWithSmolCheck(_:_:expecting:)(v54, v55, v51, v53, 1);
        }
        swift_bridgeObjectRelease(v53);
        v58 = swift_bridgeObjectRelease(v56);
        v59 = v169;
        v45(v43, v169, v58);
        ((void (*)(char *, uint64_t))v45)(v166, v59);
        if (((v168 ^ v57) & 1) != 0)
          break;
        ++v42;
        v47 += v174;
        if (v173 == v42)
        {
          v60 = v173;
          v42 = v173;
          v27 = v157;
          v2 = v158;
          goto LABEL_32;
        }
      }
      v27 = v157;
      v2 = v158;
    }
    v60 = v173;
LABEL_32:
    v30 = v164;
    v61 = v162;
    if ((v168 & 1) == 0)
      break;
    if (v42 < v164)
      goto LABEL_151;
    if (v164 >= v42)
      break;
    v157 = v27;
    v158 = v2;
    v62 = 0;
    v63 = v174 * (v42 - 1);
    v64 = v42 * v174;
    v65 = v164;
    v66 = v164 * v174;
    do
    {
      if (v65 != v42 + v62 - 1)
      {
        if (!v61)
          goto LABEL_156;
        v70 = v42;
        v71 = v61 + v66;
        v72 = v61 + v63;
        v168 = *(_QWORD *)(v176 + 32);
        ((void (*)(char *, uint64_t, uint64_t))v168)(v163, v61 + v66, v169);
        if (v66 < v63 || v71 >= v61 + v64)
        {
          v67 = v61 + v66;
          v68 = v61 + v63;
          v69 = v169;
          swift_arrayInitWithTakeFrontToBack(v67, v68);
        }
        else
        {
          v69 = v169;
          if (v66 != v63)
            swift_arrayInitWithTakeBackToFront(v71, v72);
        }
        ((void (*)(uint64_t, char *, uint64_t))v168)(v72, v163, v69);
        v42 = v70;
        v61 = v162;
      }
      ++v65;
      --v62;
      v63 -= v174;
      v64 -= v174;
      v66 += v174;
    }
    while (v65 < v42 + v62);
    v27 = v157;
    v2 = v158;
    v73 = v169;
    v30 = v164;
    v60 = v173;
    if (v42 < v173)
      goto LABEL_48;
LABEL_67:
    if (v42 < v30)
      goto LABEL_144;
    if ((swift_isUniquelyReferenced_nonNull_native(v27) & 1) == 0)
      v27 = sub_10020C830(0, *((_QWORD *)v27 + 2) + 1, 1, v27);
    v96 = *((_QWORD *)v27 + 2);
    v95 = *((_QWORD *)v27 + 3);
    v29 = v96 + 1;
    v26 = v165;
    v174 = v42;
    if (v96 >= v95 >> 1)
    {
      v146 = sub_10020C830((char *)(v95 > 1), v96 + 1, 1, v27);
      v26 = v165;
      v27 = v146;
    }
    *((_QWORD *)v27 + 2) = v29;
    v97 = v27 + 32;
    v98 = &v27[16 * v96 + 32];
    v99 = v174;
    *(_QWORD *)v98 = v30;
    *((_QWORD *)v98 + 1) = v99;
    if (v96)
    {
      while (1)
      {
        v100 = v29 - 1;
        if (v29 >= 4)
        {
          v105 = &v97[16 * v29];
          v106 = *((_QWORD *)v105 - 8);
          v107 = *((_QWORD *)v105 - 7);
          v111 = __OFSUB__(v107, v106);
          v108 = v107 - v106;
          if (v111)
            goto LABEL_133;
          v110 = *((_QWORD *)v105 - 6);
          v109 = *((_QWORD *)v105 - 5);
          v111 = __OFSUB__(v109, v110);
          v103 = v109 - v110;
          v104 = v111;
          if (v111)
            goto LABEL_134;
          v112 = v29 - 2;
          v113 = &v97[16 * v29 - 32];
          v115 = *(_QWORD *)v113;
          v114 = *((_QWORD *)v113 + 1);
          v111 = __OFSUB__(v114, v115);
          v116 = v114 - v115;
          if (v111)
            goto LABEL_136;
          v111 = __OFADD__(v103, v116);
          v117 = v103 + v116;
          if (v111)
            goto LABEL_139;
          if (v117 >= v108)
          {
            v135 = &v97[16 * v100];
            v137 = *(_QWORD *)v135;
            v136 = *((_QWORD *)v135 + 1);
            v111 = __OFSUB__(v136, v137);
            v138 = v136 - v137;
            if (v111)
              goto LABEL_143;
            v128 = v103 < v138;
            goto LABEL_104;
          }
        }
        else
        {
          if (v29 != 3)
          {
            v129 = *((_QWORD *)v27 + 4);
            v130 = *((_QWORD *)v27 + 5);
            v111 = __OFSUB__(v130, v129);
            v122 = v130 - v129;
            v123 = v111;
            goto LABEL_98;
          }
          v102 = *((_QWORD *)v27 + 4);
          v101 = *((_QWORD *)v27 + 5);
          v111 = __OFSUB__(v101, v102);
          v103 = v101 - v102;
          v104 = v111;
        }
        if ((v104 & 1) != 0)
          goto LABEL_135;
        v112 = v29 - 2;
        v118 = &v97[16 * v29 - 32];
        v120 = *(_QWORD *)v118;
        v119 = *((_QWORD *)v118 + 1);
        v121 = __OFSUB__(v119, v120);
        v122 = v119 - v120;
        v123 = v121;
        if (v121)
          goto LABEL_138;
        v124 = &v97[16 * v100];
        v126 = *(_QWORD *)v124;
        v125 = *((_QWORD *)v124 + 1);
        v111 = __OFSUB__(v125, v126);
        v127 = v125 - v126;
        if (v111)
          goto LABEL_141;
        if (__OFADD__(v122, v127))
          goto LABEL_142;
        if (v122 + v127 >= v103)
        {
          v128 = v103 < v127;
LABEL_104:
          if (v128)
            v100 = v112;
          goto LABEL_106;
        }
LABEL_98:
        if ((v123 & 1) != 0)
          goto LABEL_137;
        v131 = &v97[16 * v100];
        v133 = *(_QWORD *)v131;
        v132 = *((_QWORD *)v131 + 1);
        v111 = __OFSUB__(v132, v133);
        v134 = v132 - v133;
        if (v111)
          goto LABEL_140;
        if (v134 < v122)
          goto LABEL_14;
LABEL_106:
        v139 = v100 - 1;
        if (v100 - 1 >= v29)
        {
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
          goto LABEL_153;
        }
        if (!*v175)
          goto LABEL_155;
        v140 = v27;
        v141 = &v97[16 * v139];
        v142 = *(_QWORD *)v141;
        v143 = &v97[16 * v100];
        v144 = *((_QWORD *)v143 + 1);
        sub_1003B7044(*v175 + *(_QWORD *)(v176 + 72) * *(_QWORD *)v141, *v175 + *(_QWORD *)(v176 + 72) * *(_QWORD *)v143, *v175 + *(_QWORD *)(v176 + 72) * v144, (unint64_t)v26);
        if (v2)
        {
          v27 = v140;
          goto LABEL_127;
        }
        if (v144 < v142)
          goto LABEL_130;
        if (v100 > *((_QWORD *)v140 + 2))
          goto LABEL_131;
        *(_QWORD *)v141 = v142;
        *(_QWORD *)&v97[16 * v139 + 8] = v144;
        v145 = *((_QWORD *)v140 + 2);
        if (v100 >= v145)
          goto LABEL_132;
        v27 = v140;
        v29 = v145 - 1;
        memmove(&v97[16 * v100], v143 + 16, 16 * (v145 - 1 - v100));
        *((_QWORD *)v140 + 2) = v145 - 1;
        v26 = v165;
        if (v145 <= 2)
          goto LABEL_14;
      }
    }
    v29 = 1;
LABEL_14:
    v20 = v175[1];
    v28 = v174;
    v4 = v169;
    if (v174 >= v20)
      goto LABEL_116;
  }
  v73 = v169;
  if (v42 >= v60)
    goto LABEL_67;
LABEL_48:
  if (__OFSUB__(v42, v30))
    goto LABEL_149;
  if (v42 - v30 >= v156)
    goto LABEL_67;
  if (__OFADD__(v30, v156))
    goto LABEL_152;
  if (v30 + v156 >= v60)
    v74 = v60;
  else
    v74 = v30 + v156;
  if (v74 >= v30)
  {
    if (v42 != v74)
    {
      v164 = v30;
      v157 = v27;
      v158 = v2;
      v75 = *(_QWORD *)(v176 + 72);
      v167 = *(_QWORD *)(v176 + 16);
      v168 = v75;
      v173 = v42 * v75;
      v174 = v75 * (v42 - 1);
      v162 = v74;
      do
      {
        v77 = 0;
        v78 = v164;
        while (1)
        {
          v79 = *v175;
          v80 = (uint64_t (*)(char *, uint64_t, uint64_t))v167;
          ((void (*)(char *, Swift::Int, uint64_t))v167)(v171, v173 + v77 + *v175, v73);
          v81 = v80(v172, v174 + v77 + v79, v73);
          v82 = FMFFriend.name.getter(v81);
          v84 = v83;
          v85 = FMFFriend.name.getter(v82);
          v87 = v86;
          if (v85 == v82 && v86 == v84)
            break;
          v88 = _stringCompareWithSmolCheck(_:_:expecting:)(v85, v86, v82, v84, 1);
          swift_bridgeObjectRelease(v84);
          v89 = swift_bridgeObjectRelease(v87);
          v90 = *(void (**)(char *, uint64_t, __n128))(v176 + 8);
          v73 = v169;
          v90(v172, v169, v89);
          ((void (*)(char *, uint64_t))v90)(v171, v73);
          if ((v88 & 1) == 0)
            goto LABEL_58;
          v91 = *v175;
          if (!*v175)
            goto LABEL_154;
          v92 = v91 + v173 + v77;
          v93 = (char *)(v91 + v174 + v77);
          v94 = *(void (**)(char *, uint64_t, uint64_t))(v176 + 32);
          v94(v170, v92, v73);
          swift_arrayInitWithTakeFrontToBack(v92, v93);
          v94(v93, (uint64_t)v170, v73);
          v77 -= v168;
          if (v42 == ++v78)
            goto LABEL_58;
        }
        swift_bridgeObjectRelease_n(v84, 2);
        v76 = *(void (**)(char *, uint64_t))(v176 + 8);
        v73 = v169;
        v76(v172, v169);
        v76(v171, v73);
LABEL_58:
        ++v42;
        v174 += v168;
        v173 += v168;
      }
      while (v42 != v162);
      v42 = v162;
      v27 = v157;
      v2 = v158;
      v30 = v164;
    }
    goto LABEL_67;
  }
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
  __break(1u);
}

uint64_t sub_1003B6114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  Swift::String v35;
  char *v36;
  uint64_t v37;
  __n128 v38;
  uint64_t v39;
  uint64_t v40;
  Swift::String v41;
  char v42;
  __n128 v43;
  void (*v44)(char *, uint64_t, __n128);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t (*v56)(char *, uint64_t, uint64_t);
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;

  v64 = a4;
  v51 = a1;
  v6 = sub_100053F2C(&qword_1005DC400);
  v7 = __chkstk_darwin(v6);
  v57 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v10 = (char *)&v49 - v9;
  v11 = type metadata accessor for FMFLabelledLocation(0);
  v65 = *(_QWORD **)(v11 - 8);
  v12 = __chkstk_darwin(v11);
  v61 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __chkstk_darwin(v12);
  v16 = (char *)&v49 - v15;
  result = __chkstk_darwin(v14);
  v19 = (char *)&v49 - v18;
  v60 = a3;
  v50 = a2;
  if (a3 != a2)
  {
    v20 = v65[9];
    v21 = (uint64_t (*)(char *, uint64_t, uint64_t))v65[2];
    v55 = v10;
    v56 = v21;
    v22 = v20 * (v60 - 1);
    v58 = v20;
    v67 = v20 * v60;
    v53 = v16;
    v54 = v11;
    v52 = (char *)&v49 - v18;
LABEL_6:
    v24 = 0;
    v66 = v51;
    v59 = v22;
    while (1)
    {
      v25 = *v64;
      v63 = v67 + v24;
      v26 = v56;
      v56(v19, v67 + v24 + v25, v11);
      v62 = v22 + v24;
      v27 = v26(v16, v22 + v24 + v25, v11);
      FMFLabelledLocation.label.getter(v27);
      v28 = type metadata accessor for FMFLabel(0);
      v29 = *(_QWORD *)(v28 - 8);
      v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
      result = v30(v10, 1, v28);
      if ((_DWORD)result == 1)
        break;
      FMFLabel.localizedValue.getter(v31);
      v33 = v32;
      v34 = *(void (**)(char *, uint64_t))(v29 + 8);
      v34(v10, v28);
      v35 = String.lowercased()();
      swift_bridgeObjectRelease(v33);
      v36 = v57;
      FMFLabelledLocation.label.getter(v37);
      result = v30(v36, 1, v28);
      if ((_DWORD)result == 1)
        goto LABEL_16;
      FMFLabel.localizedValue.getter(v38);
      v40 = v39;
      v34(v36, v28);
      v41 = String.lowercased()();
      swift_bridgeObjectRelease(v40);
      if (v35._countAndFlagsBits == v41._countAndFlagsBits && v35._object == v41._object)
      {
        swift_bridgeObjectRelease_n(v35._object, 2);
        v23 = (void (*)(char *, uint64_t))v65[1];
        v16 = v53;
        v11 = v54;
        v23(v53, v54);
        v19 = v52;
        result = ((uint64_t (*)(char *, uint64_t))v23)(v52, v11);
        v10 = v55;
        v22 = v59;
LABEL_5:
        v22 += v58;
        v67 += v58;
        if (++v60 == v50)
          return result;
        goto LABEL_6;
      }
      v42 = _stringCompareWithSmolCheck(_:_:expecting:)(v35._countAndFlagsBits, v35._object, v41._countAndFlagsBits, v41._object, 1);
      swift_bridgeObjectRelease(v35._object);
      v43 = swift_bridgeObjectRelease(v41._object);
      v44 = (void (*)(char *, uint64_t, __n128))v65[1];
      v16 = v53;
      v11 = v54;
      v44(v53, v54, v43);
      v19 = v52;
      result = ((uint64_t (*)(char *, uint64_t))v44)(v52, v11);
      v10 = v55;
      v22 = v59;
      if ((v42 & 1) != 0)
      {
        v45 = *v64;
        if (!*v64)
          goto LABEL_17;
        v46 = v45 + v67 + v24;
        v47 = v45 + v59 + v24;
        v48 = (void (*)(char *, uint64_t, uint64_t))v65[4];
        v48(v61, v46, v11);
        swift_arrayInitWithTakeFrontToBack(v46, v47);
        result = ((uint64_t (*)(uint64_t, char *, uint64_t))v48)(v47, v61, v11);
        v24 -= v58;
        if (v60 != ++v66)
          continue;
      }
      goto LABEL_5;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  return result;
}

uint64_t sub_1003B6524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t *v41;
  _QWORD *v42;
  char *v43;
  char *v44;
  uint64_t v45;

  v41 = a4;
  v35 = a1;
  v6 = type metadata accessor for FMFFriend(0);
  v42 = *(_QWORD **)(v6 - 8);
  v7 = __chkstk_darwin(v6);
  v40 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v7);
  v44 = (char *)&v33 - v10;
  result = __chkstk_darwin(v9);
  v43 = (char *)&v33 - v12;
  v39 = a3;
  v34 = a2;
  if (a3 != a2)
  {
    v13 = v42[9];
    v36 = (uint64_t (*)(char *, uint64_t, uint64_t))v42[2];
    v37 = v13;
    v14 = v13 * (v39 - 1);
    v45 = v13 * v39;
LABEL_6:
    v16 = 0;
    v17 = v35;
    v38 = v14;
    while (1)
    {
      v18 = *v41;
      v19 = v36;
      v36(v43, v45 + v16 + *v41, v6);
      v20 = v19(v44, v14 + v16 + v18, v6);
      v21 = FMFFriend.name.getter(v20);
      v23 = v22;
      v24 = FMFFriend.name.getter(v21);
      v26 = v25;
      if (v24 == v21 && v25 == v23)
      {
        swift_bridgeObjectRelease_n(v23, 2);
        v15 = (void (*)(char *, uint64_t))v42[1];
        v15(v44, v6);
        result = ((uint64_t (*)(char *, uint64_t))v15)(v43, v6);
        v14 = v38;
LABEL_5:
        v14 += v37;
        v45 += v37;
        if (++v39 == v34)
          return result;
        goto LABEL_6;
      }
      v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v24, v25, v21, v23, 1);
      swift_bridgeObjectRelease(v23);
      swift_bridgeObjectRelease(v26);
      v28 = (void (*)(char *, uint64_t))v42[1];
      v28(v44, v6);
      result = ((uint64_t (*)(char *, uint64_t))v28)(v43, v6);
      v14 = v38;
      if ((v27 & 1) == 0)
        goto LABEL_5;
      v29 = *v41;
      if (!*v41)
        break;
      v30 = v29 + v45 + v16;
      v31 = v29 + v38 + v16;
      v32 = (void (*)(char *, uint64_t, uint64_t))v42[4];
      v32(v40, v30, v6);
      swift_arrayInitWithTakeFrontToBack(v30, v31);
      result = ((uint64_t (*)(uint64_t, char *, uint64_t))v32)(v31, v40, v6);
      v16 -= v37;
      if (v39 == ++v17)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1003B67E8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t (*v23)(char *, unint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v35)(char *, unint64_t, uint64_t);
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  Swift::String v45;
  char *v46;
  char *v47;
  uint64_t v48;
  __n128 v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  Swift::String v53;
  void (*v54)(char *, uint64_t);
  unint64_t v55;
  char v56;
  __n128 v57;
  void (*v58)(char *, uint64_t, __n128);
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v67;
  uint64_t (*v68)(_QWORD, unint64_t, uint64_t);
  unint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  unsigned int (*v74)(char *, uint64_t, uint64_t);
  __n128 v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t);
  Swift::String v79;
  char *v80;
  uint64_t v81;
  __n128 v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  Swift::String v86;
  void *object;
  char v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  __n128 v92;
  char *v93;
  void (*v94)(uint64_t (*)(char *, unint64_t, uint64_t), uint64_t, __n128);
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t result;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t (*v107)(char *, unint64_t, uint64_t);
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;

  v8 = sub_100053F2C(&qword_1005DC400);
  v9 = __chkstk_darwin(v8);
  v104 = (char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v106 = (char *)&v99 - v12;
  v13 = __chkstk_darwin(v11);
  v103 = (char *)&v99 - v14;
  __chkstk_darwin(v13);
  v105 = (uint64_t)&v99 - v15;
  v16 = type metadata accessor for FMFLabelledLocation(0);
  v17 = __chkstk_darwin(v16);
  v18 = __chkstk_darwin(v17);
  v110 = (char *)&v99 - v19;
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v99 - v21;
  __chkstk_darwin(v20);
  v109 = (char *)&v99 - v24;
  v111 = v25;
  v26 = *(_QWORD *)(v25 + 72);
  if (!v26)
  {
    __break(1u);
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  if (a2 - a1 == 0x8000000000000000 && v26 == -1)
    goto LABEL_77;
  v27 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v26 == -1)
  {
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  v28 = (uint64_t)(a2 - a1) / v26;
  v116 = a1;
  v115 = a4;
  v29 = v27 / v26;
  v108 = v16;
  if (v28 >= v27 / v26)
  {
    if (v29 < 0)
      goto LABEL_83;
    v32 = v29 * v26;
    v107 = v23;
    if (a4 < a2 || a2 + v32 <= a4)
    {
      v33 = v26;
      swift_arrayInitWithTakeFrontToBack(a4, a2);
    }
    else
    {
      if (a4 == a2)
      {
LABEL_49:
        v65 = a4 + v32;
        v114 = a4 + v32;
        v116 = a2;
        if (v32 < 1 || a1 >= a2)
        {
LABEL_75:
          sub_10020CD4C(&v116, &v115, (uint64_t *)&v114);
          return 1;
        }
        v67 = -v26;
        v109 = *(char **)(v111 + 16);
        v101 = a1;
        v102 = a4;
        v105 = -v26;
        while (1)
        {
          v112 = a3;
          v68 = (uint64_t (*)(_QWORD, unint64_t, uint64_t))v109;
          ((void (*)(char *, unint64_t, uint64_t))v109)(v110, v65 + v67, v16);
          v113 = a2;
          v69 = a2 + v67;
          v70 = v68(v107, a2 + v67, v16);
          v71 = v106;
          FMFLabelledLocation.label.getter(v70);
          v72 = type metadata accessor for FMFLabel(0);
          v73 = *(_QWORD *)(v72 - 8);
          v74 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48);
          if (v74(v71, 1, v72) == 1)
            goto LABEL_80;
          FMFLabel.localizedValue.getter(v75);
          v77 = v76;
          v78 = *(void (**)(char *, uint64_t))(v73 + 8);
          v78(v71, v72);
          v79 = String.lowercased()();
          swift_bridgeObjectRelease(v77);
          v80 = v104;
          FMFLabelledLocation.label.getter(v81);
          if (v74(v80, 1, v72) == 1)
            goto LABEL_82;
          FMFLabel.localizedValue.getter(v82);
          v83 = v80;
          v85 = v84;
          v78(v83, v72);
          v86 = String.lowercased()();
          object = v86._object;
          swift_bridgeObjectRelease(v85);
          if (v79._countAndFlagsBits == v86._countAndFlagsBits && v79._object == v86._object)
          {
            v88 = 0;
            object = v79._object;
          }
          else
          {
            v88 = _stringCompareWithSmolCheck(_:_:expecting:)(v79._countAndFlagsBits, v79._object, v86._countAndFlagsBits, v86._object, 1);
          }
          v16 = v108;
          v89 = v112;
          v90 = v113;
          v91 = v102;
          swift_bridgeObjectRelease(v79._object);
          v92 = swift_bridgeObjectRelease(object);
          v67 = v105;
          v93 = (char *)(v89 + v105);
          v94 = *(void (**)(uint64_t (*)(char *, unint64_t, uint64_t), uint64_t, __n128))(v111 + 8);
          v94(v107, v16, v92);
          ((void (*)(char *, uint64_t))v94)(v110, v16);
          if ((v88 & 1) != 0)
          {
            if (v89 < v90 || (unint64_t)v93 >= v90)
            {
              swift_arrayInitWithTakeFrontToBack(v89 + v67, v69);
              v95 = v101;
            }
            else
            {
              v95 = v101;
              if (v89 != v90)
                swift_arrayInitWithTakeBackToFront(v89 + v67, v69);
            }
            v116 += v67;
          }
          else
          {
            v96 = v114;
            v97 = v114 + v67;
            v114 += v67;
            if (v89 < v96 || (unint64_t)v93 >= v96)
            {
              swift_arrayInitWithTakeFrontToBack(v89 + v67, v97);
              v69 = v90;
              v95 = v101;
            }
            else
            {
              v95 = v101;
              if (v89 != v96)
                swift_arrayInitWithTakeBackToFront(v89 + v67, v97);
              v69 = v90;
            }
          }
          v65 = v114;
          if (v114 > v91)
          {
            a2 = v69;
            a3 = v89 + v67;
            if (v69 > v95)
              continue;
          }
          goto LABEL_75;
        }
      }
      v33 = v26;
      swift_arrayInitWithTakeBackToFront(a4, a2);
    }
    v26 = v33;
    goto LABEL_49;
  }
  if ((v28 & 0x8000000000000000) == 0)
  {
    v30 = v28 * v26;
    if (a4 < a1 || a1 + v30 <= a4)
    {
      v31 = v26;
      swift_arrayInitWithTakeFrontToBack(a4, a1);
    }
    else
    {
      if (a4 == a1)
        goto LABEL_19;
      v31 = v26;
      swift_arrayInitWithTakeBackToFront(a4, a1);
    }
    v26 = v31;
LABEL_19:
    v110 = (char *)(a4 + v30);
    v114 = a4 + v30;
    if (v30 >= 1 && a2 < a3)
    {
      v107 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v111 + 16);
      v100 = v26;
      v112 = a3;
      while (1)
      {
        v113 = a2;
        v35 = v107;
        v107(v109, a2, v16);
        v36 = v35(v22, a4, v16);
        v37 = (char *)v105;
        FMFLabelledLocation.label.getter(v36);
        v38 = type metadata accessor for FMFLabel(0);
        v39 = *(_QWORD *)(v38 - 8);
        v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
        if (v40(v37, 1, v38) == 1)
          goto LABEL_79;
        FMFLabel.localizedValue.getter(v41);
        v43 = v42;
        v44 = *(void (**)(char *, uint64_t))(v39 + 8);
        v44(v37, v38);
        v45 = String.lowercased()();
        swift_bridgeObjectRelease(v43);
        v46 = v103;
        v47 = v22;
        FMFLabelledLocation.label.getter(v48);
        if (v40(v46, 1, v38) == 1)
          goto LABEL_81;
        FMFLabel.localizedValue.getter(v49);
        v50 = v46;
        v52 = v51;
        v44(v50, v38);
        v53 = String.lowercased()();
        swift_bridgeObjectRelease(v52);
        if (v45._countAndFlagsBits == v53._countAndFlagsBits && v45._object == v53._object)
        {
          swift_bridgeObjectRelease_n(v45._object, 2);
          v54 = *(void (**)(char *, uint64_t))(v111 + 8);
          v16 = v108;
          v54(v22, v108);
          v54(v109, v16);
          v55 = v112;
LABEL_34:
          v59 = v116;
          v60 = v100;
          v63 = v115 + v100;
          v61 = v113;
          if (v116 < v115 || v116 >= v63)
          {
            v64 = v100;
            swift_arrayInitWithTakeFrontToBack(v116, v115);
LABEL_39:
            v60 = v64;
          }
          else if (v116 != v115)
          {
            v64 = v100;
            swift_arrayInitWithTakeBackToFront(v116, v115);
            goto LABEL_39;
          }
          v115 = v63;
          goto LABEL_43;
        }
        v56 = _stringCompareWithSmolCheck(_:_:expecting:)(v45._countAndFlagsBits, v45._object, v53._countAndFlagsBits, v53._object, 1);
        swift_bridgeObjectRelease(v45._object);
        v57 = swift_bridgeObjectRelease(v53._object);
        v58 = *(void (**)(char *, uint64_t, __n128))(v111 + 8);
        v16 = v108;
        v58(v22, v108, v57);
        ((void (*)(char *, uint64_t))v58)(v109, v16);
        v55 = v112;
        if ((v56 & 1) == 0)
          goto LABEL_34;
        v59 = v116;
        v60 = v100;
        v61 = v113 + v100;
        if (v116 < v113 || v116 >= v61)
          break;
        if (v116 != v113)
        {
          v62 = v100;
          swift_arrayInitWithTakeBackToFront(v116, v113);
LABEL_42:
          v60 = v62;
          goto LABEL_43;
        }
        v59 = v113;
LABEL_43:
        v116 = v59 + v60;
        a4 = v115;
        if (v115 < (unint64_t)v110)
        {
          v22 = v47;
          a2 = v61;
          if (v61 < v55)
            continue;
        }
        goto LABEL_75;
      }
      v62 = v100;
      swift_arrayInitWithTakeFrontToBack(v116, v113);
      goto LABEL_42;
    }
    goto LABEL_75;
  }
LABEL_83:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003B7044(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  char v35;
  __n128 v36;
  void (*v37)(char *, uint64_t, __n128);
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v43;
  unint64_t v44;
  uint64_t (*v45)(char *, unint64_t, uint64_t);
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  __n128 v55;
  void (*v56)(char *, uint64_t, __n128);
  BOOL v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t result;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;

  v8 = type metadata accessor for FMFFriend(0);
  v9 = __chkstk_darwin(v8);
  v67 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v66 = (char *)&v63 - v12;
  v13 = __chkstk_darwin(v11);
  v15 = (char *)&v63 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)&v63 - v16;
  v19 = *(_QWORD *)(v18 + 72);
  v68 = v18;
  v69 = v19;
  if (!v19)
  {
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (a2 - a1 == 0x8000000000000000 && v69 == -1)
    goto LABEL_69;
  v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v69 == -1)
    goto LABEL_70;
  v21 = (uint64_t)(a2 - a1) / v69;
  v72 = a1;
  v71 = a4;
  v22 = v20 / v69;
  if (v21 >= v20 / v69)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      v24 = v22 * v69;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack(a4, a2);
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront(a4, a2);
      }
      v41 = a4 + v24;
      v70 = a4 + v24;
      v72 = a2;
      if (v24 >= 1 && a1 < a2)
      {
        v43 = -v69;
        v69 = *(_QWORD *)(v68 + 16);
        v64 = a4;
        v65 = a1;
        do
        {
          v44 = a3;
          v45 = (uint64_t (*)(char *, unint64_t, uint64_t))v69;
          ((void (*)(char *, unint64_t, uint64_t))v69)(v66, v41 + v43, v8);
          v46 = a2 + v43;
          v47 = v45(v67, a2 + v43, v8);
          v48 = FMFFriend.name.getter(v47);
          v50 = v49;
          v51 = FMFFriend.name.getter(v48);
          v53 = v52;
          if (v51 == v48 && v52 == v50)
          {
            v54 = 0;
            v53 = v50;
          }
          else
          {
            v54 = _stringCompareWithSmolCheck(_:_:expecting:)(v51, v52, v48, v50, 1);
          }
          swift_bridgeObjectRelease(v50);
          v55 = swift_bridgeObjectRelease(v53);
          a3 += v43;
          v56 = *(void (**)(char *, uint64_t, __n128))(v68 + 8);
          v56(v67, v8, v55);
          ((void (*)(char *, uint64_t))v56)(v66, v8);
          if ((v54 & 1) != 0)
          {
            if (v44 < a2 || a3 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack(v44 + v43, a2 + v43);
              v58 = v64;
              v59 = v65;
            }
            else
            {
              v57 = v44 == a2;
              v58 = v64;
              v59 = v65;
              if (!v57)
                swift_arrayInitWithTakeBackToFront(a3, a2 + v43);
            }
            v72 += v43;
          }
          else
          {
            v60 = v70;
            v61 = v70 + v43;
            v70 += v43;
            if (v44 < v60 || a3 >= v60)
            {
              swift_arrayInitWithTakeFrontToBack(v44 + v43, v61);
              v46 = a2;
              v58 = v64;
              v59 = v65;
            }
            else
            {
              v59 = v65;
              if (v44 != v60)
                swift_arrayInitWithTakeBackToFront(v44 + v43, v61);
              v46 = a2;
              v58 = v64;
            }
          }
          v41 = v70;
          if (v70 <= v58)
            break;
          a2 = v46;
        }
        while (v46 > v59);
      }
LABEL_67:
      sub_10020CD58(&v72, &v71, (uint64_t *)&v70);
      return 1;
    }
  }
  else if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21 * v69;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack(a4, a1);
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront(a4, a1);
    }
    v67 = (char *)(a4 + v23);
    v70 = a4 + v23;
    if (v23 >= 1 && a2 < a3)
    {
      v26 = *(void (**)(char *, unint64_t, uint64_t))(v68 + 16);
      while (1)
      {
        v26(v17, a2, v8);
        v27 = ((uint64_t (*)(char *, unint64_t, uint64_t))v26)(v15, a4, v8);
        v28 = FMFFriend.name.getter(v27);
        v30 = v29;
        v31 = FMFFriend.name.getter(v28);
        v33 = v32;
        if (v31 == v28 && v32 == v30)
          break;
        v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v31, v32, v28, v30, 1);
        swift_bridgeObjectRelease(v30);
        v36 = swift_bridgeObjectRelease(v33);
        v37 = *(void (**)(char *, uint64_t, __n128))(v68 + 8);
        v37(v15, v8, v36);
        ((void (*)(char *, uint64_t))v37)(v17, v8);
        if ((v35 & 1) == 0)
          goto LABEL_31;
        v38 = v72;
        v39 = a2 + v69;
        if (v72 < a2 || v72 >= v39)
        {
          swift_arrayInitWithTakeFrontToBack(v72, a2);
        }
        else if (v72 == a2)
        {
          v38 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront(v72, a2);
        }
LABEL_37:
        v72 = v38 + v69;
        a4 = v71;
        if (v71 < (unint64_t)v67)
        {
          a2 = v39;
          if (v39 < a3)
            continue;
        }
        goto LABEL_67;
      }
      swift_bridgeObjectRelease_n(v30, 2);
      v34 = *(void (**)(char *, uint64_t))(v68 + 8);
      v34(v15, v8);
      v34(v17, v8);
LABEL_31:
      v38 = v72;
      v40 = v71 + v69;
      if (v72 < v71 || v72 >= v40)
      {
        swift_arrayInitWithTakeFrontToBack(v72, v71);
      }
      else if (v72 != v71)
      {
        swift_arrayInitWithTakeBackToFront(v72, v71);
      }
      v71 = v40;
      v39 = a2;
      goto LABEL_37;
    }
    goto LABEL_67;
  }
LABEL_71:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

void sub_1003B7618()
{
  uint64_t v0;

  sub_1003B2DE4(*(char **)(v0 + 16), *(void **)(v0 + 24));
}

_QWORD *sub_1003B7620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  uint64_t v18;
  uint64_t v19;
  Swift::String v20;
  unint64_t v21;
  __n128 v22;
  void (*v23)(char *, char *, uint64_t, __n128);
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  _QWORD v34[2];
  Swift::String v35;
  _QWORD *v36;

  v33 = a2;
  v6 = type metadata accessor for FMFFriend(0);
  v7 = __chkstk_darwin(v6);
  v32 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)v27 - v10;
  result = _swiftEmptyArrayStorage;
  v36 = _swiftEmptyArrayStorage;
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v14 = *(unsigned __int8 *)(v9 + 80);
    v15 = *(_QWORD *)(v9 + 72);
    v27[1] = v3;
    v28 = (v14 + 32) & ~v14;
    v16 = a1 + v28;
    v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v31 = v9;
    v29 = a3;
    for (i = v30(v11, a1 + v28, v6); ; i = v30(v11, v16, v6))
    {
      FMFFriend.name.getter(i);
      v19 = v18;
      v20 = String.lowercased()();
      swift_bridgeObjectRelease(v19);
      v35 = v20;
      v34[0] = v33;
      v34[1] = a3;
      v21 = sub_1000517B8();
      LOBYTE(v19) = StringProtocol.contains<A>(_:)(v34, &type metadata for String, &type metadata for String, v21, v21);
      v22 = swift_bridgeObjectRelease(v20._object);
      if ((v19 & 1) != 0)
      {
        v23 = *(void (**)(char *, char *, uint64_t, __n128))(v31 + 32);
        v23(v32, v11, v6, v22);
        v24 = v36;
        if ((swift_isUniquelyReferenced_nonNull_native(v36) & 1) == 0)
        {
          sub_100111E44(0, v24[2] + 1, 1);
          v24 = v36;
        }
        v26 = v24[2];
        v25 = v24[3];
        if (v26 >= v25 >> 1)
        {
          sub_100111E44(v25 > 1, v26 + 1, 1);
          v24 = v36;
        }
        v24[2] = v26 + 1;
        ((void (*)(char *, char *, uint64_t))v23)((char *)v24 + v28 + v26 * v15, v32, v6);
        v36 = v24;
        a3 = v29;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v6);
      }
      v16 += v15;
      if (!--v13)
        break;
    }
    return v36;
  }
  return result;
}

_QWORD *sub_1003B783C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  __n128 v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t (*v25)(char *, char *, uint64_t, __n128);
  uint64_t i;
  char *v27;
  void (*v28)(char *, uint64_t);
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  __n128 v54;
  __n128 v55;
  void (*v56)(char *, char *, uint64_t, __n128);
  _QWORD *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  __n128 v61;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t (*v74)(char *, char *, uint64_t, __n128);
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char v78[24];
  _QWORD *v79;

  v4 = type metadata accessor for FMFFriend(0);
  v70 = *(_QWORD *)(v4 - 8);
  v71 = v4;
  __chkstk_darwin(v4);
  v66 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100053F2C(&qword_1005D3380);
  __chkstk_darwin(v6);
  v72 = (uint64_t)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100053F2C(&qword_1005DC400);
  __chkstk_darwin(v8);
  v10 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FMFLabelledLocation(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = __chkstk_darwin(v11);
  v67 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v77 = (char *)&v63 - v16;
  __chkstk_darwin(v15);
  v18 = (char *)&v63 - v17;
  v19 = _swiftEmptyArrayStorage;
  v79 = _swiftEmptyArrayStorage;
  v20 = *(_QWORD *)(a1 + 16);
  v69 = a2 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_friendForFence;
  v21 = swift_beginAccess(a2 + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_friendForFence, v78, 0, 0);
  if (v20)
  {
    v22 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v23 = *(_QWORD *)(v12 + 72);
    v75 = v12;
    v76 = v23;
    v64 = v22;
    v24 = (char *)(a1 + v22);
    v74 = *(uint64_t (**)(char *, char *, uint64_t, __n128))(v12 + 16);
    v25 = v74;
    v68 = v10;
    for (i = v74(v18, (char *)(a1 + v22), v11, v21); ; i = v74(v18, v24, v11, v29))
    {
      FMFLabelledLocation.label.getter(i);
      v30 = type metadata accessor for FMFLabel(0);
      v31 = *(_QWORD *)(v30 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v10, 1, v30) == 1)
        break;
      FMFLabel.localizedValue.getter(v32);
      v34 = v33;
      (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v30);
      v35 = swift_bridgeObjectRelease(v34);
      v27 = v77;
      v36 = v25(v77, v18, v11, v35);
      if (!v34)
        goto LABEL_4;
      v37 = FMFLabelledLocation.userId.getter(v36);
      v73 = v38;
      v39 = v72;
      sub_100007464(v69, v72, &qword_1005D3380);
      v40 = v70;
      v41 = v39;
      v42 = v71;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v41, 1, v71))
      {
        sub_1000051EC(v72, &qword_1005D3380);
        v28 = *(void (**)(char *, uint64_t))(v75 + 8);
        if (v73)
          goto LABEL_12;
        v28(v27, v11);
        v10 = v68;
      }
      else
      {
        v65 = v37;
        v44 = v66;
        v45 = v72;
        (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v66, v72, v42);
        v46 = sub_1000051EC(v45, &qword_1005D3380);
        v47 = v42;
        v48 = FMFFriend.identifier.getter(v46);
        v50 = v49;
        (*(void (**)(char *, uint64_t))(v40 + 8))(v44, v47);
        if (v73)
        {
          v51 = v75;
          v27 = v77;
          if (!v50)
          {
            v28 = *(void (**)(char *, uint64_t))(v75 + 8);
LABEL_12:
            v10 = v68;
            v28(v27, v11);
            v43 = v73;
LABEL_13:
            swift_bridgeObjectRelease(v43);
LABEL_5:
            v28(v18, v11);
            goto LABEL_6;
          }
          v52 = v48;
          v53 = v65 == v48;
          v10 = v68;
          if (v53 && v73 == v50)
          {
            v54 = swift_bridgeObjectRelease(v50);
            (*(void (**)(char *, uint64_t, __n128))(v51 + 8))(v27, v11, v54);
            v55 = swift_bridgeObjectRelease(v73);
          }
          else
          {
            v60 = v73;
            LODWORD(v65) = _stringCompareWithSmolCheck(_:_:expecting:)(v65, v73, v52, v50, 0);
            v61 = swift_bridgeObjectRelease(v50);
            v28 = *(void (**)(char *, uint64_t))(v51 + 8);
            ((void (*)(char *, uint64_t, __n128))v28)(v27, v11, v61);
            v55 = swift_bridgeObjectRelease(v60);
            if ((v65 & 1) == 0)
              goto LABEL_5;
          }
        }
        else
        {
          v28 = *(void (**)(char *, uint64_t))(v75 + 8);
          v28(v77, v11);
          v10 = v68;
          if (v50)
          {
            v43 = v50;
            goto LABEL_13;
          }
        }
      }
      v56 = *(void (**)(char *, char *, uint64_t, __n128))(v75 + 32);
      v56(v67, v18, v11, v55);
      v57 = v79;
      if ((swift_isUniquelyReferenced_nonNull_native(v79) & 1) == 0)
      {
        sub_100112138(0, v57[2] + 1, 1);
        v57 = v79;
      }
      v59 = v57[2];
      v58 = v57[3];
      if (v59 >= v58 >> 1)
      {
        sub_100112138(v58 > 1, v59 + 1, 1);
        v57 = v79;
      }
      v57[2] = v59 + 1;
      ((void (*)(char *, char *, uint64_t))v56)((char *)v57 + v64 + v59 * v76, v67, v11);
      v79 = v57;
LABEL_6:
      v24 += v76;
      --v20;
      v25 = v74;
      if (!v20)
        return v79;
    }
    sub_1000051EC((uint64_t)v10, &qword_1005DC400);
    v27 = v77;
    ((void (*)(char *, char *, uint64_t))v25)(v77, v18, v11);
LABEL_4:
    v28 = *(void (**)(char *, uint64_t))(v75 + 8);
    v28(v27, v11);
    goto LABEL_5;
  }
  return v19;
}

_QWORD *sub_1003B7D40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  Swift::String v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  Swift::String v17;
  unint64_t v18;
  char v19;
  Swift::String v20;
  unint64_t v21;
  char v22;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  Swift::String v28;
  _QWORD *v29;

  v29 = _swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
    goto LABEL_21;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      v6 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v9 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1);
LABEL_9:
        v10 = v9;
        v11 = v6 + 1;
        if (__OFADD__(v6, 1))
          goto LABEL_20;
        v12 = v5;
        if (*(_QWORD *)&v9[OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_title + 8])
        {
          v13 = String.lowercased()();
          v28 = v13;
          v26 = a2;
          v27 = a3;
          v14 = sub_1000517B8();
          v15 = StringProtocol.contains<A>(_:)(&v26, &type metadata for String, &type metadata for String, v14, v14);
          swift_bridgeObjectRelease(v13._object);
          if ((v15 & 1) != 0)
            goto LABEL_4;
        }
        if (*(_QWORD *)&v10[OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_labelLocalizedValue + 8])
        {
          v17 = String.lowercased()();
          v28 = v17;
          v26 = a2;
          v27 = a3;
          v18 = sub_1000517B8();
          v19 = StringProtocol.contains<A>(_:)(&v26, &type metadata for String, &type metadata for String, v18, v18);
          swift_bridgeObjectRelease(v17._object);
          if ((v19 & 1) != 0)
            goto LABEL_4;
        }
        if (*(_QWORD *)&v10[OBJC_IVAR____TtC6FindMy25FMFenceMapTransientRecord_displayAddress + 8]
          && (v20 = String.lowercased()(),
              v28 = v20,
              v26 = a2,
              v27 = a3,
              v21 = sub_1000517B8(),
              v22 = StringProtocol.contains<A>(_:)(&v26, &type metadata for String, &type metadata for String, v21, v21),
              swift_bridgeObjectRelease(v20._object),
              (v22 & 1) != 0))
        {
LABEL_4:
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v16);
          v7 = v29[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v7);
          v8 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v10);
          specialized ContiguousArray._endMutation()(v8);
        }
        else
        {

        }
        ++v6;
        v5 = v12;
        if (v11 == v12)
          return v29;
      }
      if (v6 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      if (a1 < 0)
        v24 = a1;
      else
        v24 = a1 & 0xFFFFFFFFFFFFFF8;
      v5 = _CocoaArrayWrapper.endIndex.getter(v24);
      if (!v5)
        return _swiftEmptyArrayStorage;
    }
    v9 = (char *)*(id *)(a1 + 8 * v6 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

_QWORD *sub_1003B7FB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  Swift::String v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  unint64_t v28;
  void *v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  void *v34;
  void *v35;
  unint64_t v36;
  void *v37;
  uint64_t v39;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  Swift::String v44;
  _QWORD *v45;

  v45 = _swiftEmptyArrayStorage;
  if ((unint64_t)a1 >> 62)
    goto LABEL_21;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      v6 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v6, a1);
LABEL_9:
        v10 = v9;
        if (__OFADD__(v6, 1))
          goto LABEL_20;
        v41 = v6 + 1;
        v11 = objc_msgSend(v9, "name");
        if (v11)
        {
          v12 = v11;
          static String._unconditionallyBridgeFromObjectiveC(_:)(v11);
          v13 = a2;
          v14 = a3;
          v16 = v15;

          v17 = String.lowercased()();
          v18 = v16;
          a3 = v14;
          a2 = v13;
          swift_bridgeObjectRelease(v18);
          v44 = v17;
          v42 = v13;
          v43 = a3;
          v19 = sub_1000517B8();
          v20 = StringProtocol.contains<A>(_:)(&v42, &type metadata for String, &type metadata for String, v19, v19);
          swift_bridgeObjectRelease(v17._object);
          if ((v20 & 1) != 0)
            goto LABEL_4;
        }
        v22 = objc_msgSend(v10, "placemark");
        v23 = objc_msgSend(v22, "locality");

        if (v23)
        {
          v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
          v25 = v10;
          v27 = v26;

          v44._countAndFlagsBits = v24;
          v44._object = v27;
          v42 = a2;
          v43 = a3;
          v28 = sub_1000517B8();
          LOBYTE(v24) = StringProtocol.contains<A>(_:)(&v42, &type metadata for String, &type metadata for String, v28, v28);
          v29 = v27;
          v10 = v25;
          swift_bridgeObjectRelease(v29);
          if ((v24 & 1) != 0)
            goto LABEL_4;
        }
        v30 = objc_msgSend(v10, "placemark");
        v31 = objc_msgSend(v30, "subLocality");

        if (!v31)
          goto LABEL_16;
        v32 = static String._unconditionallyBridgeFromObjectiveC(_:)(v31);
        v33 = v10;
        v35 = v34;

        v44._countAndFlagsBits = v32;
        v44._object = v35;
        v42 = a2;
        v43 = a3;
        v36 = sub_1000517B8();
        LOBYTE(v32) = StringProtocol.contains<A>(_:)(&v42, &type metadata for String, &type metadata for String, v36, v36);
        v37 = v35;
        v10 = v33;
        swift_bridgeObjectRelease(v37);
        if ((v32 & 1) != 0)
        {
LABEL_4:
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()(v21);
          v7 = v45[2];
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)(v7);
          v8 = specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)(v7, v10);
          specialized ContiguousArray._endMutation()(v8);
        }
        else
        {
LABEL_16:

        }
        ++v6;
        if (v41 == v5)
          return v45;
      }
      if (v6 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      if (a1 < 0)
        v39 = a1;
      else
        v39 = a1 & 0xFFFFFFFFFFFFFF8;
      v5 = _CocoaArrayWrapper.endIndex.getter(v39);
      if (!v5)
        return _swiftEmptyArrayStorage;
    }
    v9 = *(id *)(a1 + 8 * v6 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

id sub_1003B82D8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char a13)
{
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  _QWORD *v33;
  void *v34;
  uint64_t v35;
  void *v36;
  void *v37;
  char *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  void *v46;
  id v47;
  id v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  objc_super v66;
  _BYTE v67[32];

  v14 = v13;
  v15 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mediator;
  *(_QWORD *)&v13[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mediator] = 0;
  v16 = (uint64_t)&v13[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_myLocation];
  v17 = type metadata accessor for FMFLocation(0);
  v54 = v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v51 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_selectedLocation;
  *(_QWORD *)&v13[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_selectedLocation] = 0;
  v18 = (uint64_t)&v13[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_address];
  v19 = type metadata accessor for FMFAddress(0);
  v57 = v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  v20 = (uint64_t)&v13[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_addressType];
  v21 = type metadata accessor for FMFLocationAlertAddressType(0);
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
  v58 = v20;
  v22(v20, 1, 1, v21);
  v23 = &v14[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_addressLabel];
  v24 = type metadata accessor for FMFLabel(0);
  v56 = (uint64_t)v23;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
  v25 = &v14[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_addressRadius];
  *(_QWORD *)v25 = 0;
  v25[8] = 1;
  v26 = &v14[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_friendForFence];
  v27 = type metadata accessor for FMFFriend(0);
  v55 = (uint64_t)v26;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
  v53 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_isNotifyMe;
  v14[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_isNotifyMe] = 0;
  v50 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_isOtherUsage;
  v14[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_isOtherUsage] = 0;
  v28 = &v14[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_delegate];
  *((_QWORD *)v28 + 1) = 0;
  swift_unknownObjectWeakInit(v28);
  v29 = &v14[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_doneHandler];
  *v29 = 0;
  v29[1] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_peopleSubscription] = 0;
  v30 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_style;
  v31 = qword_1005D2020;
  v32 = v14;
  if (v31 != -1)
    swift_once(&qword_1005D2020, sub_1003AA050);
  v33 = &v32[v30];
  v34 = (void *)qword_1005F5EE8;
  v35 = qword_1005F5EF0;
  v37 = (void *)qword_1005F5EF8;
  v36 = (void *)qword_1005F5F00;
  *v33 = qword_1005F5EE0;
  v33[1] = v34;
  v33[2] = v35;
  v33[3] = v37;
  v33[4] = v36;
  *(_QWORD *)&v32[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView] = 0;
  *(_QWORD *)&v32[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_dragView] = 0;
  *(_QWORD *)&v32[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchResultsTableView] = 0;
  *(_QWORD *)&v32[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_doneButton] = 0;
  *(_QWORD *)&v32[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_smallRadiusBarButtonItem] = 0;
  *(_QWORD *)&v32[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mediumRadiusBarButtonItem] = 0;
  *(_QWORD *)&v32[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_largeRadiusBarButtonItem] = 0;
  *(_QWORD *)&v32[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_userDroppedAnnotation] = 0;
  *(_QWORD *)&v32[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_selectedAnnotation] = 0;
  v38 = &v32[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_currentMapRegion];
  *(_OWORD *)v38 = 0u;
  *((_OWORD *)v38 + 1) = 0u;
  v38[32] = 1;
  v32[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_showingUserLocation] = 0;
  *(_QWORD *)&v32[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapSearchResults] = 0;
  v22((uint64_t)&v32[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapLastSeachAddressType], 1, 1, v21);
  v39 = &v32[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapLastSearchedQuery];
  *v39 = 0;
  v39[1] = 0;
  *(_QWORD *)&v32[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_defaultSearchRecords] = 0;
  v32[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_isResigningFromTableView] = 0;
  v40 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_contactsDataController;
  v41 = type metadata accessor for FMFContactsDataController(0);
  swift_allocObject(v41, *(unsigned int *)(v41 + 48), *(unsigned __int16 *)(v41 + 52));
  v42 = v34;
  v43 = v37;
  v44 = v36;
  *(_QWORD *)&v32[v40] = FMFContactsDataController.init(isSnapshotMode:)(0);
  *(_QWORD *)&v32[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchController] = 0;
  *(_QWORD *)&v32[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_filteredSearchRecords] = 0;
  v45 = *(_QWORD *)&v14[v15];
  *(_QWORD *)&v14[v15] = a1;
  swift_retain(a1);
  swift_release(v45);
  swift_beginAccess(v54, v67, 33, 0);
  sub_100291FDC(a2, v54, (uint64_t *)&unk_1005D3350);
  swift_endAccess(v67);
  v46 = *(void **)&v14[v51];
  *(_QWORD *)&v14[v51] = a3;
  v47 = a3;

  swift_beginAccess(v57, v67, 33, 0);
  sub_100291FDC(a4, v57, &qword_1005D3370);
  swift_endAccess(v67);
  swift_beginAccess(v58, v67, 33, 0);
  sub_100291FDC(a5, v58, &qword_1005D3418);
  swift_endAccess(v67);
  swift_beginAccess(v56, v67, 33, 0);
  sub_100291FDC(a6, v56, &qword_1005DC400);
  swift_endAccess(v67);
  *(_QWORD *)v25 = a7;
  v25[8] = a8 & 1;
  swift_beginAccess(v55, v67, 33, 0);
  sub_100291FDC(a9, v55, &qword_1005D3380);
  swift_endAccess(v67);
  v14[v50] = a13 & 1;
  v14[v53] = a10 & 1;
  *((_QWORD *)v28 + 1) = a12;
  swift_unknownObjectWeakAssign(v28, a11);

  v66.receiver = v32;
  v66.super_class = (Class)type metadata accessor for FMFenceMapViewController(0);
  v48 = objc_msgSendSuper2(&v66, "initWithNibName:bundle:", 0, 0);
  sub_1000051EC(a9, &qword_1005D3380);
  sub_1000051EC(a6, &qword_1005DC400);
  sub_1000051EC(a5, &qword_1005D3418);
  sub_1000051EC(a4, &qword_1005D3370);
  sub_1000051EC(a2, (uint64_t *)&unk_1005D3350);
  return v48;
}

void sub_1003B8894(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  char *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  NSString v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[5];
  uint64_t v32;

  v30 = a3;
  v8 = type metadata accessor for FMFLocationAlertAddressType(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void **)&v4[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_dragView];
  if (v12)
  {
    v28 = a4;
    objc_msgSend(v12, "removeHandle:", 1);
    sub_1003B2124();
    v13 = objc_msgSend(objc_allocWithZone((Class)MKLocalSearchRequest), "init");
    v27 = a1;
    v29 = a2;
    v14 = String._bridgeToObjectiveC()();
    objc_msgSend(v13, "setNaturalLanguageQuery:", v14);

    v15 = *(void **)&v4[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView];
    if (v15)
    {
      objc_msgSend(v15, "region");
      objc_msgSend(v13, "setRegion:");
      v16 = objc_msgSend(objc_allocWithZone((Class)MKLocalSearch), "initWithRequest:", v13);
      v17 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
      objc_msgSend(v17, "setNetworkActivityIndicatorVisible:", 1);

      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v30, v8);
      v18 = *(unsigned __int8 *)(v9 + 80);
      v19 = (v18 + 24) & ~v18;
      v20 = v19 + v10;
      v21 = swift_allocObject(&unk_100560338, (v20 & 0xFFFFFFFFFFFFFFF8) + 24, v18 | 7);
      v22 = (v20 & 0xFFFFFFFFFFFFFFF8) + v21;
      *(_QWORD *)(v21 + 16) = v4;
      (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v21 + v19, v11, v8);
      *(_BYTE *)(v21 + v20) = v28 & 1;
      v23 = v29;
      *(_QWORD *)(v22 + 8) = v27;
      *(_QWORD *)(v22 + 16) = v23;
      aBlock[4] = sub_1003B9524;
      v32 = v21;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1000EFE00;
      aBlock[3] = &unk_100560350;
      v24 = _Block_copy(aBlock);
      v25 = v32;
      v26 = v4;
      swift_bridgeObjectRetain(v23);
      objc_msgSend(v16, "startWithCompletionHandler:", v24, swift_release(v25).n128_f64[0]);
      _Block_release(v24);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1003B8B10()
{
  _BYTE *v0;
  _BYTE *v1;
  char *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t, uint64_t);
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  char *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;

  v1 = v0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mediator] = 0;
  v2 = &v0[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_myLocation];
  v3 = type metadata accessor for FMFLocation(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_selectedLocation] = 0;
  v4 = &v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_address];
  v5 = type metadata accessor for FMFAddress(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  v6 = &v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_addressType];
  v7 = type metadata accessor for FMFLocationAlertAddressType(0);
  v8 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
  v8(v6, 1, 1, v7);
  v9 = &v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_addressLabel];
  v10 = type metadata accessor for FMFLabel(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = &v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_addressRadius];
  *(_QWORD *)v11 = 0;
  v11[8] = 1;
  v12 = &v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_friendForFence];
  v13 = type metadata accessor for FMFFriend(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_isNotifyMe] = 0;
  v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_isOtherUsage] = 0;
  v14 = &v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_delegate];
  *((_QWORD *)v14 + 1) = 0;
  swift_unknownObjectWeakInit(v14);
  v15 = &v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_doneHandler];
  *v15 = 0;
  v15[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_peopleSubscription] = 0;
  v16 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_style;
  if (qword_1005D2020 != -1)
    swift_once(&qword_1005D2020, sub_1003AA050);
  v17 = &v1[v16];
  v18 = (void *)qword_1005F5EE8;
  v19 = qword_1005F5EF0;
  v21 = (void *)qword_1005F5EF8;
  v20 = (void *)qword_1005F5F00;
  *v17 = qword_1005F5EE0;
  v17[1] = v18;
  v17[2] = v19;
  v17[3] = v21;
  v17[4] = v20;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_dragView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchResultsTableView] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_doneButton] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_smallRadiusBarButtonItem] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mediumRadiusBarButtonItem] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_largeRadiusBarButtonItem] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_userDroppedAnnotation] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_selectedAnnotation] = 0;
  v22 = &v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_currentMapRegion];
  *(_OWORD *)v22 = 0u;
  *((_OWORD *)v22 + 1) = 0u;
  v22[32] = 1;
  v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_showingUserLocation] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapSearchResults] = 0;
  v8(&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapLastSeachAddressType], 1, 1, v7);
  v23 = &v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapLastSearchedQuery];
  *v23 = 0;
  v23[1] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_defaultSearchRecords] = 0;
  v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_isResigningFromTableView] = 0;
  v24 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_contactsDataController;
  v25 = type metadata accessor for FMFContactsDataController(0);
  swift_allocObject(v25, *(unsigned int *)(v25 + 48), *(unsigned __int16 *)(v25 + 52));
  v26 = v18;
  v27 = v21;
  v28 = v20;
  *(_QWORD *)&v1[v24] = FMFContactsDataController.init(isSnapshotMode:)(0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_searchController] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_filteredSearchRecords] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMFenceMapViewController.swift", 37, 2, 117, 0);
  __break(1u);
}

void sub_1003B8E78(void *a1)
{
  void *v1;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  id v7;
  void **v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  void *v11;
  void (*v12)(uint64_t);
  uint64_t v13;

  v12 = (void (*)(uint64_t))State.rawValue.getter;
  v13 = 0;
  v8 = _NSConcreteStackBlock;
  v9 = 1107296256;
  v10 = sub_1003AA008;
  v11 = &unk_100560378;
  v3 = _Block_copy(&v8);
  v4 = swift_allocObject(&unk_1005603B0, 24, 7);
  *(_QWORD *)(v4 + 16) = v1;
  v12 = sub_1003B95B0;
  v13 = v4;
  v8 = _NSConcreteStackBlock;
  v9 = 1107296256;
  v10 = sub_1003AA008;
  v11 = &unk_1005603C8;
  v5 = _Block_copy(&v8);
  v6 = v13;
  v7 = v1;
  objc_msgSend(a1, "animateAlongsideTransition:completion:", v3, v5, swift_release(v6).n128_f64[0]);
  _Block_release(v5);
  _Block_release(v3);
}

uint64_t sub_1003B8F74(char a1)
{
  uint64_t v1;

  return sub_1003B29D4(a1, *(char **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1003B8F7C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

void sub_1003B8FA0()
{
  uint64_t v0;

  sub_1003B2C24(*(char **)(v0 + 16));
}

uint64_t sub_1003B8FAC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 24));

  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003B8FD8()
{
  uint64_t v0;

  return sub_1003B1778(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1003B8FE4()
{
  return sub_1003B9050((void (*)(_QWORD))&_swift_bridgeObjectRelease);
}

void sub_1003B8FF0()
{
  uint64_t v0;

  sub_1003B1B0C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1003B8FF8()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003B901C()
{
  return sub_1003B9050((void (*)(_QWORD))&_swift_release);
}

void sub_1003B9028()
{
  uint64_t v0;

  sub_1003B0A14(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1003B9030()
{
  return sub_1003B9050((void (*)(_QWORD))&_swift_release);
}

void sub_1003B903C()
{
  uint64_t v0;

  sub_1003AD914(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1003B9044()
{
  return sub_1003B9050((void (*)(_QWORD))&_swift_release);
}

uint64_t sub_1003B9050(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));

  return swift_deallocObject(v1, 32, 7);
}

void sub_1003B9080()
{
  uint64_t v0;

  sub_1003AD9A4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1003B9088()
{
  _BYTE *v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;

  v1 = OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_isResigningFromTableView;
  v0[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_isResigningFromTableView] = 1;
  v2 = objc_msgSend(v0, "navigationItem");
  v3 = objc_msgSend(v2, "searchController");

  if (v3)
  {
    v4 = objc_msgSend(v3, "searchBar");

    objc_msgSend(v4, "resignFirstResponder");
  }
  v0[v1] = 0;
}

uint64_t sub_1003B912C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __n128 v16;
  uint64_t v17;
  char **v18;
  char v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __n128 v29;
  uint64_t v31;
  _BYTE v32[24];

  v1 = sub_100053F2C(&qword_1005D3418);
  __chkstk_darwin(v1);
  v3 = &v32[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v31 = type metadata accessor for FMFLocationAlertAddressType(0);
  v4 = *(_QWORD *)(v31 - 8);
  __chkstk_darwin(v31);
  v6 = &v32[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapLastSearchedQuery];
  v7 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapLastSearchedQuery + 8];
  v9 = objc_msgSend(v0, "navigationItem", swift_bridgeObjectRetain(v7).n128_f64[0]);
  v10 = objc_msgSend(v9, "searchController");

  if (!v10)
  {
    v13 = 0;
    v15 = 0xE000000000000000;
    if (v7)
      goto LABEL_8;
LABEL_5:
    v16 = swift_bridgeObjectRelease(v15);
    v17 = v31;
    v18 = &selRef_viewWillAppear_;
LABEL_13:
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v4 + 104))(v6, enum case for FMFLocationAlertAddressType.custom(_:), v17, v16);
    goto LABEL_18;
  }
  v11 = objc_msgSend(v10, "searchBar");

  v12 = objc_msgSend(v11, "text");
  if (v12)
  {
    v13 = static String._unconditionallyBridgeFromObjectiveC(_:)(v12);
    v15 = v14;

  }
  else
  {
    v13 = 0;
    v15 = 0xE000000000000000;
  }
  if (!v7)
    goto LABEL_5;
LABEL_8:
  if (v8 == v13 && v7 == v15)
  {
    swift_bridgeObjectRelease(v7);
    swift_bridgeObjectRelease(v15);
    v17 = v31;
    v18 = &selRef_viewWillAppear_;
  }
  else
  {
    v20 = _stringCompareWithSmolCheck(_:_:expecting:)(v8, v7, v13, v15, 0);
    swift_bridgeObjectRelease(v7);
    v16 = swift_bridgeObjectRelease(v15);
    v17 = v31;
    v18 = &selRef_viewWillAppear_;
    if ((v20 & 1) == 0)
      goto LABEL_13;
  }
  v21 = (uint64_t)&v0[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapLastSeachAddressType];
  swift_beginAccess(&v0[OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_mapLastSeachAddressType], v32, 0, 0);
  sub_100007464(v21, (uint64_t)v3, &qword_1005D3418);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v3, 1, v17) == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for FMFLocationAlertAddressType.custom(_:), v17);
    sub_1000051EC((uint64_t)v3, &qword_1005D3418);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v3, v17);
  }
LABEL_18:
  v22 = objc_msgSend(v0, v18[105]);
  v23 = objc_msgSend(v22, "searchController");

  if (v23
    && (v24 = objc_msgSend(v23, "searchBar"),
        v23,
        v25 = objc_msgSend(v24, "text"),
        v24,
        v25))
  {
    v26 = static String._unconditionallyBridgeFromObjectiveC(_:)(v25);
    v28 = v27;

  }
  else
  {
    v26 = 0;
    v28 = 0xE000000000000000;
  }
  sub_1003B8894(v26, v28, (uint64_t)v6, 0);
  v29 = swift_bridgeObjectRelease(v28);
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v4 + 8))(v6, v17, v29);
}

uint64_t sub_1003B9494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v1 = type metadata accessor for FMFLocationAlertAddressType(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v3 | 7;
  v6 = (v4 + *(_QWORD *)(v2 + 64)) & 0xFFFFFFFFFFFFFFF8;
  v7 = v6 + v0;
  v8 = v6 + 24;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease(*(_QWORD *)(v7 + 16));
  return swift_deallocObject(v0, v8, v5);
}

void sub_1003B9524(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for FMFLocationAlertAddressType(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  sub_1003ADB0C(a1, a2, *(_QWORD *)(v2 + 16), v2 + v6, *(_BYTE *)(v2 + v6 + *(_QWORD *)(v5 + 64)), *(void **)(((v6 + *(_QWORD *)(v5 + 64)) & 0xFFFFFFFFFFFFFFF8) + v2 + 8), *(_QWORD *)(((v6 + *(_QWORD *)(v5 + 64)) & 0xFFFFFFFFFFFFFFF8) + v2 + 16));
}

uint64_t sub_1003B958C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1003B95B0(uint64_t a1)
{
  uint64_t v1;

  sub_1003ABEA8(a1, *(char **)(v1 + 16));
}

id sub_1003B95B8()
{
  uint64_t v0;
  id result;

  result = *(id *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC6FindMy24FMFenceMapViewController_dragView);
  if (result)
    return objc_msgSend(result, "addHandleForAnnotation:", *(_QWORD *)(v0 + 24));
  __break(1u);
  return result;
}

id sub_1003B9644(double a1)
{
  void *v1;
  unsigned int v3;
  id result;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;

  v12 = 0.0;
  v13 = 0.0;
  v10 = 0.0;
  v11 = 0.0;
  v3 = objc_msgSend(v1, "getRed:green:blue:alpha:", &v13, &v12, &v11, &v10);
  result = 0;
  if (v3)
  {
    v5 = a1 / 100.0;
    if (a1 / 100.0 + v13 <= 1.0)
      v6 = a1 / 100.0 + v13;
    else
      v6 = 1.0;
    if (v5 + v12 <= 1.0)
      v7 = v5 + v12;
    else
      v7 = 1.0;
    v8 = v5 + v11;
    if (v8 <= 1.0)
      v9 = v8;
    else
      v9 = 1.0;
    return objc_msgSend(objc_allocWithZone((Class)UIColor), "initWithRed:green:blue:alpha:", v6, v7, v9, v10);
  }
  return result;
}

uint64_t sub_1003B9738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_identifier;
  v2 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_10005E190(v0 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber);
  return swift_deallocClassInstance(v0, *(unsigned int *)(*(_QWORD *)v0 + 48), *(unsigned __int16 *)(*(_QWORD *)v0 + 52));
}

uint64_t sub_1003B9798()
{
  return type metadata accessor for FMDevicesSubscription(0);
}

Swift::Int sub_1003B97A0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[9];

  Hasher.init(_seed:)(v3, 0);
  v0 = type metadata accessor for UUID(0);
  v1 = sub_100008000((unint64_t *)&unk_1005E4270, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v3, v0, v1);
  return Hasher._finalize()();
}

uint64_t sub_1003B981C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for UUID(0);
  v3 = sub_100008000((unint64_t *)&unk_1005E4270, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  return dispatch thunk of Hashable.hash(into:)(a1, v2, v3);
}

Swift::Int sub_1003B9888(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, a1);
  v1 = type metadata accessor for UUID(0);
  v2 = sub_100008000((unint64_t *)&unk_1005E4270, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v4, v1, v2);
  return Hasher._finalize()();
}

uint64_t sub_1003B9900(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;

  v5 = v2 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
  result = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber);
  if (result)
  {
    v7 = result;
    v8 = *(_QWORD *)(v5 + 8);
    ObjectType = swift_getObjectType(result);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 24))(a1, a2, ObjectType, v8);
    return swift_unknownObjectRelease(v7);
  }
  return result;
}

uint64_t sub_1003B9988(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;

  v5 = v2 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
  result = swift_unknownObjectWeakLoadStrong(v2 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber);
  if (result)
  {
    v7 = result;
    v8 = *(_QWORD *)(v5 + 8);
    ObjectType = swift_getObjectType(result);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 32))(a1, a2, ObjectType, v8);
    return swift_unknownObjectRelease(v7);
  }
  return result;
}

uint64_t sub_1003B9A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t ObjectType;

  v7 = v3 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
  result = swift_unknownObjectWeakLoadStrong(v3 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber);
  if (result)
  {
    v9 = result;
    v10 = *(_QWORD *)(v7 + 8);
    ObjectType = swift_getObjectType(result);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 40))(a1, a2, a3, ObjectType, v10);
    return swift_unknownObjectRelease(v9);
  }
  return result;
}

uint64_t sub_1003B9AA0(_QWORD *a1, _QWORD *a2)
{
  return static UUID.== infix(_:_:)(*a1 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_identifier, *a2 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_identifier);
}

uint64_t sub_1003B9ABC()
{
  return sub_100008000(&qword_1005E28E8, type metadata accessor for FMDevicesSubscription, (uint64_t)&unk_10048ECF0);
}

uint64_t sub_1003B9AE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *);
  uint64_t v11;

  v4 = type metadata accessor for Notification(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void (**)(char *))(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)(a2);
  swift_retain(v8);
  v9(v7);
  swift_release(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1003B9B8C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = sub_10003E5BC();
  v2 = *(id *)(v0 + OBJC_IVAR____TtC6FindMy12FMNoItemView_learnMoreButton);
  swift_bridgeObjectRetain(v1);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v3);
  v5 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v5 >= v4 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v4 > 1, v5 + 1, 1);
  v6 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v5, v2);
  specialized Array._endMutation()(v6);
  swift_bridgeObjectRelease(v1);

  return v1;
}

_QWORD *sub_1003B9C44(uint64_t a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return sub_1003B9C74(a1);
}

_QWORD *sub_1003B9C74(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  uint64_t v7;
  void *v8;
  char *v9;
  char *v10;
  id v11;
  id v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;

  v2 = v1;
  v4 = OBJC_IVAR____TtC6FindMy12FMNoItemView_secondaryActionButton;
  v5 = (objc_class *)type metadata accessor for FMEmptyListButton();
  v6 = (char *)objc_allocWithZone(v5);
  v7 = OBJC_IVAR____TtC6FindMy17FMEmptyListButton_textColor;
  v8 = (void *)objc_opt_self(UIColor);
  v9 = v2;
  v10 = v6;
  *(_QWORD *)&v6[v7] = objc_msgSend(v8, "systemBlueColor");
  v10[OBJC_IVAR____TtC6FindMy17FMEmptyListButton_isEnabled] = 1;

  v11 = objc_msgSend(v8, "tertiarySystemFillColor");
  v12 = sub_1000472FC(v11, 1, 1, 0);

  *(_QWORD *)&v2[v4] = v12;
  *(_QWORD *)&v9[OBJC_IVAR____TtC6FindMy12FMNoItemView_secondaryActionButtonHeight] = 0;
  v13 = OBJC_IVAR____TtC6FindMy12FMNoItemView_tertiaryActionButton;
  v14 = (char *)objc_allocWithZone(v5);
  v15 = OBJC_IVAR____TtC6FindMy17FMEmptyListButton_textColor;
  v16 = v14;
  *(_QWORD *)&v14[v15] = objc_msgSend(v8, "systemBlueColor");
  v16[OBJC_IVAR____TtC6FindMy17FMEmptyListButton_isEnabled] = 1;

  v17 = objc_msgSend(v8, "tertiarySystemFillColor");
  v18 = sub_1000472FC(v17, 1, 1, 0);

  *(_QWORD *)&v9[v13] = v18;
  *(_QWORD *)&v9[OBJC_IVAR____TtC6FindMy12FMNoItemView_tertiaryActionButtonHeight] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC6FindMy12FMNoItemView_devicesSubscription] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC6FindMy12FMNoItemView_cardChangeSubscription] = 0;
  *(_QWORD *)&v9[OBJC_IVAR____TtC6FindMy12FMNoItemView_lastCardPercentage] = 0;
  v19 = OBJC_IVAR____TtC6FindMy12FMNoItemView_learnMoreButton;
  v20 = type metadata accessor for FMMultilineButton();
  *(_QWORD *)&v9[v19] = objc_msgSend((id)swift_getObjCClassFromMetadata(v20), "buttonWithType:", 1);

  v21 = swift_retain(a1);
  v22 = sub_10022D214(v21);
  sub_1003BA9FC();

  swift_release(a1);
  return v22;
}

void sub_1003B9EC0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy12FMNoItemView_devicesSubscription));
  swift_unknownObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy12FMNoItemView_cardChangeSubscription));

}

id sub_1003B9F3C()
{
  void *v0;
  objc_super v2;

  sub_1003BADB8();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMNoItemView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

void sub_1003BA03C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  Swift::String v5;
  Swift::String_optional v6;
  Swift::String v7;
  void *object;
  NSString v9;
  void *v10;
  id v11;
  Swift::String v12;
  Swift::String_optional v13;
  Swift::String v14;
  void *v15;
  NSString v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  Swift::String v34;
  Swift::String_optional v35;
  Swift::String v36;
  void *v37;
  NSString v38;
  void *v39;
  id v40;
  id v41;
  id v42;
  Swift::String v43;
  Swift::String_optional v44;
  Swift::String v45;
  void *v46;
  NSString v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t inited;
  NSString *v55;
  unint64_t v56;
  id v57;
  id v58;
  id v59;
  Swift::String v60;
  Swift::String_optional v61;
  Swift::String v62;
  void *v63;
  NSString v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  id v69;
  void *v70;
  uint64_t v71;
  NSString *v72;
  unint64_t v73;
  id v74;
  id v75;
  id v76;
  Swift::String v77;
  Swift::String_optional v78;
  Swift::String v79;
  void *v80;
  NSString v81;
  void *comment_8;
  _BYTE v83[48];
  _BYTE v84[56];
  Swift::String v85;
  Swift::String v86;
  Swift::String v87;
  Swift::String v88;
  Swift::String v89;
  Swift::String v90;

  v1 = v0;
  sub_10004A2D8();
  v2 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_titleLabel);
  v3 = (void *)objc_opt_self(NSBundle);
  v4 = objc_msgSend(v3, "mainBundle");
  v85._object = (void *)0x80000001004A5660;
  v5._countAndFlagsBits = 0x5F4D4554495F4F4ELL;
  v5._object = (void *)0xED0000454C544954;
  v6.value._countAndFlagsBits = 0xD000000000000013;
  v6.value._object = (void *)0x80000001004A5640;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  v85._countAndFlagsBits = 0xD000000000000018;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, v6, (NSBundle)v4, v7, v85)._object;

  v9 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setText:", v9, swift_bridgeObjectRelease(object).n128_f64[0]);

  v10 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_messageLabel);
  v11 = objc_msgSend(v3, "mainBundle");
  v86._object = (void *)0x80000001004A5660;
  v12._countAndFlagsBits = 0x5F4D4554495F4F4ELL;
  v12._object = (void *)0xEF4547415353454DLL;
  v13.value._countAndFlagsBits = 0xD000000000000013;
  v13.value._object = (void *)0x80000001004A5640;
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  v86._countAndFlagsBits = 0xD000000000000018;
  v15 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, v13, (NSBundle)v11, v14, v86)._object;

  v16 = String._bridgeToObjectiveC()();
  objc_msgSend(v10, "setText:", v16, swift_bridgeObjectRelease(v15).n128_f64[0]);

  v17 = OBJC_IVAR____TtC6FindMy12FMNoItemView_learnMoreButton;
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC6FindMy12FMNoItemView_learnMoreButton), "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v18 = *(void **)(v1 + v17);
  v19 = (void *)objc_opt_self(UIColor);
  v20 = v18;
  v21 = objc_msgSend(v19, "systemBlueColor");
  objc_msgSend(v20, "setTitleColor:forState:", v21, 0);

  v22 = objc_msgSend(*(id *)(v1 + v17), "titleLabel");
  if (v22)
  {
    v23 = v22;
    v24 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
    objc_msgSend(v23, "setFont:", v24);

  }
  v25 = objc_msgSend(*(id *)(v1 + v17), "titleLabel");
  if (v25)
  {
    v26 = v25;
    objc_msgSend(v25, "setAdjustsFontForContentSizeCategory:", 1);

  }
  v27 = objc_msgSend(*(id *)(v1 + v17), "titleLabel");
  if (v27)
  {
    v28 = v27;
    objc_msgSend(v27, "setLineBreakMode:", 0);

  }
  v29 = objc_msgSend(*(id *)(v1 + v17), "titleLabel");
  if (v29)
  {
    v30 = v29;
    objc_msgSend(v29, "setTextAlignment:", 1);

  }
  v31 = *(id *)(v1 + v17);
  v32 = v3;
  v33 = objc_msgSend(v3, "mainBundle");
  v34._countAndFlagsBits = 0xD000000000000019;
  v87._object = (void *)0x80000001004A5660;
  v34._object = (void *)0x80000001004C4AF0;
  v35.value._countAndFlagsBits = 0xD000000000000013;
  v35.value._object = (void *)0x80000001004A5640;
  v36._countAndFlagsBits = 0;
  v36._object = (void *)0xE000000000000000;
  v87._countAndFlagsBits = 0xD000000000000018;
  v37 = NSLocalizedString(_:tableName:bundle:value:comment:)(v34, v35, (NSBundle)v33, v36, v87)._object;

  v38 = String._bridgeToObjectiveC()();
  objc_msgSend(v31, "setTitle:forState:", v38, 0, swift_bridgeObjectRelease(v37).n128_f64[0]);

  objc_msgSend(*(id *)(v1 + v17), "addTarget:action:forControlEvents:", v1, "handleLearnMoreButton", 64);
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_scrollableContainerView), "addArrangedSubview:", *(_QWORD *)(v1 + v17));
  v39 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_iconView);
  sub_100006C5C(0, (unint64_t *)&qword_1005DDF90, UIImage_ptr);
  v40 = sub_100342F84(0x63496D6574496F4ELL, 0xEA00000000006E6FLL, 6778480, 0xE300000000000000);
  objc_msgSend(v39, "setImage:", v40);

  v41 = objc_retain(*(id *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButton)
                          + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label));
  comment_8 = v32;
  v42 = objc_msgSend(v32, "mainBundle");
  v43._countAndFlagsBits = 0xD000000000000014;
  v88._object = (void *)0x80000001004A5660;
  v43._object = (void *)0x80000001004AFD70;
  v44.value._countAndFlagsBits = 0xD000000000000013;
  v44.value._object = (void *)0x80000001004A5640;
  v45._countAndFlagsBits = 0;
  v45._object = (void *)0xE000000000000000;
  v88._countAndFlagsBits = 0xD000000000000018;
  v46 = NSLocalizedString(_:tableName:bundle:value:comment:)(v43, v44, (NSBundle)v42, v45, v88)._object;

  v47 = String._bridgeToObjectiveC()();
  objc_msgSend(v41, "setText:", v47, swift_bridgeObjectRelease(v46).n128_f64[0]);

  v48 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy12FMNoItemView_secondaryActionButton);
  v49 = OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label;
  v50 = *(id *)(v48 + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label);
  v51 = objc_msgSend(v50, "font");
  if (v51)
  {
    v52 = v51;
    v53 = sub_100053F2C((uint64_t *)&unk_1005D7EA0);
    inited = swift_initStackObject(v53, v84);
    *(_OWORD *)(inited + 16) = xmmword_100481740;
    *(_QWORD *)(inited + 32) = UIFontWeightTrait;
    *(UIFontWeight *)(inited + 40) = UIFontWeightRegular;
    v55 = UIFontWeightTrait;
    v56 = sub_10004907C(inited);
    v57 = sub_100049188(v56);

    objc_msgSend(v50, "setFont:", v57, swift_bridgeObjectRelease(v56).n128_f64[0]);
    v58 = *(id *)(v48 + v49);
    v59 = objc_msgSend(comment_8, "mainBundle");
    v60._countAndFlagsBits = 0xD000000000000019;
    v89._object = (void *)0x80000001004A5660;
    v60._object = (void *)0x80000001004AFD90;
    v61.value._countAndFlagsBits = 0xD000000000000013;
    v61.value._object = (void *)0x80000001004A5640;
    v62._countAndFlagsBits = 0;
    v62._object = (void *)0xE000000000000000;
    v89._countAndFlagsBits = 0xD000000000000018;
    v63 = NSLocalizedString(_:tableName:bundle:value:comment:)(v60, v61, (NSBundle)v59, v62, v89)._object;

    v64 = String._bridgeToObjectiveC()();
    objc_msgSend(v58, "setText:", v64, swift_bridgeObjectRelease(v63).n128_f64[0]);

    v65 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButtonsStackView);
    objc_msgSend(v65, "addArrangedSubview:", v48);
    v66 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy12FMNoItemView_tertiaryActionButton);
    v67 = OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label;
    v68 = *(id *)(v66 + OBJC_IVAR____TtC6FindMy25FMSingleLinePlatterButton_label);
    v69 = objc_msgSend(v68, "font");
    if (v69)
    {
      v70 = v69;
      v71 = swift_initStackObject(v53, v83);
      *(_OWORD *)(v71 + 16) = xmmword_100481740;
      *(_QWORD *)(v71 + 32) = v55;
      *(UIFontWeight *)(v71 + 40) = UIFontWeightRegular;
      v72 = v55;
      v73 = sub_10004907C(v71);
      v74 = sub_100049188(v73);

      objc_msgSend(v68, "setFont:", v74, swift_bridgeObjectRelease(v73).n128_f64[0]);
      v75 = *(id *)(v66 + v67);
      v76 = objc_msgSend(comment_8, "mainBundle");
      v90._countAndFlagsBits = 0xD000000000000018;
      v77._countAndFlagsBits = 0xD00000000000001DLL;
      v90._object = (void *)0x80000001004A5660;
      v77._object = (void *)0x80000001004AFDD0;
      v78.value._object = (void *)0x80000001004A5640;
      v78.value._countAndFlagsBits = 0xD000000000000013;
      v79._countAndFlagsBits = 0;
      v79._object = (void *)0xE000000000000000;
      v80 = NSLocalizedString(_:tableName:bundle:value:comment:)(v77, v78, (NSBundle)v76, v79, v90)._object;

      v81 = String._bridgeToObjectiveC()();
      objc_msgSend(v75, "setText:", v81, swift_bridgeObjectRelease(v80).n128_f64[0]);

      objc_msgSend(v65, "addArrangedSubview:", v66);
      sub_1003BAF44(0, 1.0);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_1003BA8EC()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  id result;

  sub_1000479B8();
  v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC6FindMy12FMNoItemView_secondaryActionButton), "heightAnchor"));
  v2 = objc_msgSend(v1, "constraintEqualToConstant:", 0.0);

  v3 = OBJC_IVAR____TtC6FindMy12FMNoItemView_secondaryActionButtonHeight;
  v4 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy12FMNoItemView_secondaryActionButtonHeight);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy12FMNoItemView_secondaryActionButtonHeight) = v2;

  v5 = *(void **)(v0 + v3);
  if (v5)
    objc_msgSend(v5, "setActive:", 1);
  v6 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC6FindMy12FMNoItemView_tertiaryActionButton), "heightAnchor"));
  v7 = objc_msgSend(v6, "constraintEqualToConstant:", 0.0);

  v8 = OBJC_IVAR____TtC6FindMy12FMNoItemView_tertiaryActionButtonHeight;
  v9 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy12FMNoItemView_tertiaryActionButtonHeight);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy12FMNoItemView_tertiaryActionButtonHeight) = v7;

  result = *(id *)(v0 + v8);
  if (result)
    return objc_msgSend(result, "setActive:", 1);
  return result;
}

uint64_t sub_1003BA9FC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  _QWORD v19[5];
  uint64_t v20;

  v1 = *(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy15FMEmptyListView_mediator] + 24);
  v2 = type metadata accessor for FMDevicesSubscription(0);
  v3 = swift_allocObject(v2, *(unsigned int *)(v2 + 48), *(unsigned __int16 *)(v2 + 52));
  v4 = v3 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
  *(_QWORD *)(v4 + 8) = 0;
  swift_unknownObjectWeakInit(v4);
  swift_retain(v1);
  v5 = v0;
  UUID.init()(v5);
  v6 = v3 + OBJC_IVAR____TtC6FindMy21FMDevicesSubscription_subscriber;
  *(_QWORD *)(v6 + 8) = &off_100560528;
  swift_unknownObjectWeakAssign(v6, v5);

  swift_beginAccess(v1 + 16, v19, 33, 0);
  v7 = swift_retain(v3);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v7);
  v9 = *(_QWORD *)((*(_QWORD *)(v1 + 16) & 0xFFFFFFFFFFFFFF8) + 0x10);
  v8 = *(_QWORD *)((*(_QWORD *)(v1 + 16) & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v9 >= v8 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v8 > 1, v9 + 1, 1);
  v10 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v9, v3);
  specialized Array._endMutation()(v10);
  swift_endAccess(v19);
  swift_release(v1);
  v11 = *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy12FMNoItemView_devicesSubscription];
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy12FMNoItemView_devicesSubscription] = v3;
  swift_release(v11);
  v12 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
  if (qword_1005D20D8 != -1)
    swift_once(&qword_1005D20D8, sub_10005D2D8);
  v13 = qword_1005F61F8;
  v14 = swift_allocObject(&unk_1005606C8, 24, 7);
  swift_unknownObjectWeakInit(v14 + 16);
  v19[4] = sub_1003BBE24;
  v20 = v14;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  v19[2] = sub_1003B9AE8;
  v19[3] = &unk_1005606E0;
  v15 = _Block_copy(v19);
  v16 = objc_msgSend(v12, "addObserverForName:object:queue:usingBlock:", v13, 0, 0, v15, swift_release(v20).n128_f64[0]);
  _Block_release(v15);

  v17 = *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy12FMNoItemView_cardChangeSubscription];
  *(_QWORD *)&v5[OBJC_IVAR____TtC6FindMy12FMNoItemView_cardChangeSubscription] = v16;
  return swift_unknownObjectRelease(v17);
}

void sub_1003BAC50(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  double v8;
  uint64_t Strong;
  void *v10;
  char *v11;
  _QWORD v12[2];
  _QWORD v13[5];
  __int128 v14;
  __int128 v15;

  v3 = Notification.userInfo.getter();
  if (!v3)
  {
    v14 = 0u;
    v15 = 0u;
LABEL_13:
    sub_1000051EC((uint64_t)&v14, &qword_1005D3AB0);
    return;
  }
  v4 = v3;
  v12[0] = 0x746E6563726570;
  v12[1] = 0xE700000000000000;
  AnyHashable.init<A>(_:)(v13, v12, &type metadata for String, &protocol witness table for String);
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_100025F20((uint64_t)v13), (v6 & 1) != 0))
  {
    sub_100056E70(*(_QWORD *)(v4 + 56) + 32 * v5, (uint64_t)&v14);
  }
  else
  {
    v14 = 0u;
    v15 = 0u;
  }
  swift_bridgeObjectRelease(v4);
  sub_100025EEC((uint64_t)v13);
  if (!*((_QWORD *)&v15 + 1))
    goto LABEL_13;
  if ((swift_dynamicCast(v13, &v14, (char *)&type metadata for Any + 8, &type metadata for CGFloat, 6) & 1) != 0)
  {
    v7 = a2 + 16;
    v8 = *(double *)v13;
    swift_beginAccess(v7, v13, 0, 0);
    Strong = swift_unknownObjectWeakLoadStrong(v7);
    if (Strong)
    {
      v10 = (void *)Strong;
      sub_1003BAF44(1, v8);

    }
    swift_beginAccess(v7, &v14, 0, 0);
    v11 = (char *)swift_unknownObjectWeakLoadStrong(v7);
    if (v11)
    {
      *(double *)&v11[OBJC_IVAR____TtC6FindMy12FMNoItemView_lastCardPercentage] = v8;

    }
  }
}

void sub_1003BADB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v12[24];

  v1 = OBJC_IVAR____TtC6FindMy12FMNoItemView_devicesSubscription;
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy12FMNoItemView_devicesSubscription);
  if (v2)
  {
    v3 = v0;
    v4 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_mediator) + 24);
    v5 = (id)(v4 + 16);
    swift_beginAccess(v4 + 16, v12, 33, 0);
    swift_retain(v2);
    swift_retain(v4);
    v6 = sub_1001138E0((uint64_t *)(v4 + 16), v2);
    v7 = v6;
    v8 = *(_QWORD *)(v4 + 16);
    if ((unint64_t)v8 >> 62)
    {
      if (v8 < 0)
        v11 = *(_QWORD *)(v4 + 16);
      else
        v11 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(v4 + 16));
      v9 = _CocoaArrayWrapper.endIndex.getter(v11);
      swift_bridgeObjectRelease(v8);
      if (v9 >= v7)
      {
LABEL_4:
        sub_1002006EC(v7, v9);
        swift_endAccess(v12);
        swift_release(v4);
        v10 = *(_QWORD *)(v3 + v1);
        *(_QWORD *)(v3 + v1) = 0;
        swift_release(v10);
        v5 = objc_msgSend((id)objc_opt_self(NSNotificationCenter), "defaultCenter");
        if (qword_1005D20D8 == -1)
        {
LABEL_5:
          objc_msgSend(v5, "removeObserver:name:object:", v3, qword_1005F61F8, 0);
          swift_release(v2);

          return;
        }
LABEL_12:
        swift_once(&qword_1005D20D8, sub_10005D2D8);
        goto LABEL_5;
      }
    }
    else
    {
      v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v9 >= v6)
        goto LABEL_4;
    }
    __break(1u);
    goto LABEL_12;
  }
}

double sub_1003BAF44(char a1, double a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _QWORD *v13;
  void *v14;
  _QWORD *v15;
  char *v16;
  double result;
  char *v18;
  _QWORD v19[5];
  _QWORD *v20;

  v3 = v2;
  if (a2 >= 0.64)
  {
    v9 = 0;
  }
  else
  {
    v6 = *(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC6FindMy15FMEmptyListView_mediator] + 24);
    swift_retain(v6);
    v7 = sub_1000BD1E4();
    swift_release(v6);
    v8 = *(_QWORD *)(v7 + 16);
    swift_bridgeObjectRelease(v7);
    v9 = v8 != 0;
  }
  v10 = swift_allocObject(&unk_100560628, 25, 7);
  *(_QWORD *)(v10 + 16) = v3;
  *(_BYTE *)(v10 + 24) = v9;
  v11 = swift_allocObject(&unk_100560650, 25, 7);
  *(_QWORD *)(v11 + 16) = v3;
  *(_BYTE *)(v11 + 24) = a2 < 0.64;
  *(double *)&v3[OBJC_IVAR____TtC6FindMy12FMNoItemView_lastCardPercentage] = a2;
  if ((a1 & 1) != 0)
  {
    v12 = (void *)objc_opt_self(UIView);
    v13 = (_QWORD *)swift_allocObject(&unk_100560678, 48, 7);
    v13[2] = sub_1003BBD7C;
    v13[3] = v10;
    v13[4] = sub_1003BBDA8;
    v13[5] = v11;
    v19[4] = sub_10016AA2C;
    v20 = v13;
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 1107296256;
    v19[2] = sub_100037DF8;
    v19[3] = &unk_100560690;
    v14 = _Block_copy(v19);
    v15 = v20;
    v16 = v3;
    swift_retain(v10);
    swift_retain(v11);
    swift_release(v15);
    objc_msgSend(v12, "animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:", 0x20000, v14, 0, 0.4, 0.0, 0.8, 0.4);
    _Block_release(v14);
    swift_release(v10);
    *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  }
  else
  {
    v18 = v3;
    sub_100169E00((uint64_t)v18, v9, &OBJC_IVAR____TtC6FindMy12FMNoItemView_secondaryActionButton, &OBJC_IVAR____TtC6FindMy12FMNoItemView_secondaryActionButtonHeight);
    sub_100169E00((uint64_t)v18, a2 < 0.64, &OBJC_IVAR____TtC6FindMy12FMNoItemView_tertiaryActionButton, &OBJC_IVAR____TtC6FindMy12FMNoItemView_tertiaryActionButtonHeight);
    swift_release(v10);
    *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  }
  return result;
}

void sub_1003BB198()
{
  uint64_t v0;
  id v1;
  id v2;
  id v3;

  v1 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "handleAction");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_actionButton), "addGestureRecognizer:", v1);

  v2 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "handleSecondaryAction");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy12FMNoItemView_secondaryActionButton), "addGestureRecognizer:", v2);
  v3 = objc_msgSend(objc_allocWithZone((Class)UITapGestureRecognizer), "initWithTarget:action:", v0, "handleTertiaryAction");
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy12FMNoItemView_tertiaryActionButton), "addGestureRecognizer:", v3);

}

double sub_1003BB298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  double result;
  _BYTE v16[24];
  _BYTE v17[24];

  v1 = v0;
  v2 = type metadata accessor for FMSelectedSection(0);
  v3 = __chkstk_darwin(v2);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  v7 = &v16[-v6];
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v8 = type metadata accessor for Logger(0);
  v9 = sub_100056D88(v8, (uint64_t)qword_1005F5748);
  v10 = Logger.logObject.getter(v9);
  v11 = static os_log_type_t.default.getter(v10);
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "FMNoItemView: action tapped", v12, 2u);
    swift_slowDealloc(v12, -1, -1);
  }

  v13 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy15FMEmptyListView_mediator) + 56);
  swift_storeEnumTagMultiPayload(v7, v2, 17);
  v14 = v13 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v13 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, v17, 0, 0);
  sub_100024F3C(v14, (uint64_t)v5);
  swift_beginAccess(v14, v16, 33, 0);
  swift_retain(v13);
  sub_100009DF8((uint64_t)v7, v14);
  swift_endAccess(v16);
  sub_10004C8A4((uint64_t)v5);
  sub_100024F00((uint64_t)v7);
  sub_100024F00((uint64_t)v5);
  *(_QWORD *)&result = swift_release(v13).n128_u64[0];
  return result;
}

double sub_1003BB4AC()
{
  return sub_10016A420("FMNoItemView: secondary action tapped", 0);
}

double sub_1003BB4F0()
{
  return sub_10016A420("FMNoItemView: tertiary action tapped", 1);
}

uint64_t sub_1003BB534()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  id v13;
  NSURL *v14;
  void *v15;
  void *v16;
  unint64_t v17;
  Class isa;
  uint64_t v19;

  v0 = sub_100053F2C((uint64_t *)&unk_1005D3470);
  __chkstk_darwin(v0);
  v2 = (char *)&v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for URL(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v7 = type metadata accessor for Logger(0);
  v8 = sub_100056D88(v7, (uint64_t)qword_1005F5748);
  v9 = Logger.logObject.getter(v8);
  v10 = static os_log_type_t.default.getter(v9);
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v11 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "FMNoItemView: Learn more button tapped", v11, 2u);
    swift_slowDealloc(v11, -1, -1);
  }

  sub_1003BB7CC((uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
    return sub_1000051EC((uint64_t)v2, (uint64_t *)&unk_1005D3470);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  v13 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  URL._bridgeToObjectiveC()(v14);
  v16 = v15;
  v17 = sub_10011D84C((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_100008000((unint64_t *)&qword_1005D2610, (uint64_t (*)(uint64_t))type metadata accessor for OpenExternalURLOptionsKey, (uint64_t)&unk_1004814BC);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v13, "openURL:options:completionHandler:", v16, isa, 0, swift_bridgeObjectRelease(v17).n128_f64[0]);

  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1003BB7CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v2 = sub_100053F2C((uint64_t *)&unk_1005D3470);
  __chkstk_darwin(v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v5 = type metadata accessor for Logger(0);
  v6 = sub_100056D88(v5, (uint64_t)qword_1005F5748);
  v7 = Logger.logObject.getter(v6);
  v8 = static os_log_type_t.default.getter(v7);
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc(12, -1);
    v10 = swift_slowAlloc(32, -1);
    v22 = v10;
    *(_DWORD *)v9 = 136315138;
    v11 = FMIPNoItemsKBArticleLink.getter();
    v13 = v12;
    v21 = sub_100056DA0(v11, v12, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v21, &v22);
    swift_bridgeObjectRelease(v13);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "FMNoItemView: getLearnMoreActionURL from %s", v9, 0xCu);
    swift_arrayDestroy(v10, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v10, -1, -1);
    swift_slowDealloc(v9, -1, -1);
  }

  v14 = FMIPNoItemsKBArticleLink.getter();
  v16 = v15;
  URL.init(string:)(v14, v15);
  swift_bridgeObjectRelease(v16);
  v17 = type metadata accessor for URL(0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v4, 1, v17) == 1)
  {
    sub_1000051EC((uint64_t)v4, (uint64_t *)&unk_1005D3470);
    v19 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(a1, v4, v17);
    v19 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(a1, v19, 1, v17);
}

uint64_t sub_1003BBA00(uint64_t a1, uint64_t a2)
{
  return sub_1003BBA08(a2);
}

uint64_t sub_1003BBA08(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint8_t *v18;
  uint8_t *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v31;
  void *v32;
  void **aBlock;
  _QWORD v34[4];
  uint64_t v35;

  v2 = v1;
  v4 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v12 = type metadata accessor for Logger(0);
  sub_100056D88(v12, (uint64_t)qword_1005F5748);
  swift_bridgeObjectRetain(a1);
  v14 = Logger.logObject.getter(v13);
  v15 = static os_log_type_t.default.getter(v14);
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc(12, -1);
    v32 = v2;
    v17 = v8;
    v18 = v16;
    *(_DWORD *)v16 = 134217984;
    aBlock = *(void ***)(a1 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&aBlock, v34);
    swift_bridgeObjectRelease(a1);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "FMNoItemView: devicesProvider didUpdate unknownItems %ld", v18, 0xCu);
    v19 = v18;
    v8 = v17;
    v2 = v32;
    swift_slowDealloc(v19, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease(a1);
  }
  v20 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v21 = (void *)static OS_dispatch_queue.main.getter(v20);
  v22 = swift_allocObject(&unk_1005605D8, 24, 7);
  *(_QWORD *)(v22 + 16) = v2;
  v34[3] = sub_1003BBD28;
  v35 = v22;
  aBlock = _NSConcreteStackBlock;
  v34[0] = 1107296256;
  v34[1] = sub_100037DF8;
  v34[2] = &unk_1005605F0;
  v23 = _Block_copy(&aBlock);
  v24 = v35;
  v25 = v2;
  swift_release(v24);
  static DispatchQoS.unspecified.getter(v26);
  aBlock = (void **)_swiftEmptyArrayStorage;
  v27 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v28 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v29 = sub_1000555E4();
  dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v28, v29, v4, v27);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v7, v23);
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1003BBD04()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

double sub_1003BBD28()
{
  uint64_t v0;

  return sub_1003BAF44(1, *(double *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC6FindMy12FMNoItemView_lastCardPercentage));
}

uint64_t sub_1003BBD58()
{
  uint64_t v0;

  return swift_deallocObject(v0, 25, 7);
}

id sub_1003BBD7C()
{
  uint64_t v0;

  return sub_100169E00(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), &OBJC_IVAR____TtC6FindMy12FMNoItemView_secondaryActionButton, &OBJC_IVAR____TtC6FindMy12FMNoItemView_secondaryActionButtonHeight);
}

id sub_1003BBDA8()
{
  uint64_t v0;

  return sub_100169E00(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), &OBJC_IVAR____TtC6FindMy12FMNoItemView_tertiaryActionButton, &OBJC_IVAR____TtC6FindMy12FMNoItemView_tertiaryActionButtonHeight);
}

uint64_t sub_1003BBDD4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 40));
  return swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003BBE00()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003BBE24(uint64_t a1)
{
  uint64_t v1;

  sub_1003BAC50(a1, v1);
}

void sub_1003BBE2C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  objc_class *v3;
  char *v4;
  uint64_t v5;
  void *v6;
  char *v7;
  id v8;
  id v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;

  v1 = v0;
  v2 = OBJC_IVAR____TtC6FindMy12FMNoItemView_secondaryActionButton;
  v3 = (objc_class *)type metadata accessor for FMEmptyListButton();
  v4 = (char *)objc_allocWithZone(v3);
  v5 = OBJC_IVAR____TtC6FindMy17FMEmptyListButton_textColor;
  v6 = (void *)objc_opt_self(UIColor);
  v7 = v4;
  *(_QWORD *)&v4[v5] = objc_msgSend(v6, "systemBlueColor");
  v7[OBJC_IVAR____TtC6FindMy17FMEmptyListButton_isEnabled] = 1;

  v8 = objc_msgSend(v6, "tertiarySystemFillColor");
  v9 = sub_1000472FC(v8, 1, 1, 0);

  *(_QWORD *)&v1[v2] = v9;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy12FMNoItemView_secondaryActionButtonHeight] = 0;
  v10 = OBJC_IVAR____TtC6FindMy12FMNoItemView_tertiaryActionButton;
  v11 = (char *)objc_allocWithZone(v3);
  v12 = OBJC_IVAR____TtC6FindMy17FMEmptyListButton_textColor;
  v13 = v11;
  *(_QWORD *)&v11[v12] = objc_msgSend(v6, "systemBlueColor");
  v13[OBJC_IVAR____TtC6FindMy17FMEmptyListButton_isEnabled] = 1;

  v14 = objc_msgSend(v6, "tertiarySystemFillColor");
  v15 = sub_1000472FC(v14, 1, 1, 0);

  *(_QWORD *)&v1[v10] = v15;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy12FMNoItemView_tertiaryActionButtonHeight] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy12FMNoItemView_devicesSubscription] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy12FMNoItemView_cardChangeSubscription] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy12FMNoItemView_lastCardPercentage] = 0;
  v16 = OBJC_IVAR____TtC6FindMy12FMNoItemView_learnMoreButton;
  v17 = type metadata accessor for FMMultilineButton();
  *(_QWORD *)&v1[v16] = objc_msgSend((id)swift_getObjCClassFromMetadata(v17), "buttonWithType:", 1);

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMNoItemView.swift", 25, 2, 55, 0);
  __break(1u);
}

Swift::String *FMReplacedIdentifier.unsafeMutableAddressor()
{
  return &FMReplacedIdentifier;
}

Swift::String *FMReplacedGroupIdentifier.unsafeMutableAddressor()
{
  return &FMReplacedGroupIdentifier;
}

Swift::String *FMLatitudeIdentifier.unsafeMutableAddressor()
{
  return &FMLatitudeIdentifier;
}

Swift::String *FMLongitudeIdentifier.unsafeMutableAddressor()
{
  return &FMLongitudeIdentifier;
}

Swift::String *FMAccuracyIdentifier.unsafeMutableAddressor()
{
  return &FMAccuracyIdentifier;
}

Swift::String *FMLocationIdentifier.unsafeMutableAddressor()
{
  return &FMLocationIdentifier;
}

uint64_t PushPayload.apsData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1003BC0AC(v1, a1);
}

uint64_t sub_1003BC0AC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for PushAPSData(a2, a1);
  return a2;
}

uint64_t PushPayload.payload.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 120));
  return v1;
}

uint64_t PushPayload.showInAppAlert.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 128);
}

uint64_t PushPayload.url.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 136);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 144));
  return v1;
}

uint64_t PushPayload.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 152);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 160));
  return v1;
}

void sub_1003BC16C(char *a1)
{
  sub_10019769C(*a1);
}

void sub_1003BC178()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X9 }
}

Swift::Int sub_1003BC1BC()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x6F4C796150666D66, 0xEA00000000006461);
  swift_bridgeObjectRelease(0xEA00000000006461);
  return Hasher._finalize()();
}

void sub_1003BC250()
{
  __asm { BR              X10 }
}

uint64_t sub_1003BC284(uint64_t a1)
{
  String.hash(into:)(a1, 0x6F4C796150666D66, 0xEA00000000006461);
  return swift_bridgeObjectRelease(0xEA00000000006461);
}

void sub_1003BC304(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  _QWORD v3[9];

  v2 = *v1;
  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X9 }
}

Swift::Int sub_1003BC344()
{
  uint64_t v1;

  String.hash(into:)(&v1, 0x6F4C796150666D66, 0xEA00000000006461);
  swift_bridgeObjectRelease(0xEA00000000006461);
  return Hasher._finalize()();
}

unint64_t sub_1003BC3D8@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  Swift::OpaquePointer v3;
  unint64_t result;

  v3._rawValue = &off_100540038;
  result = sub_1003BD7C4(*a1, v3);
  *a2 = result;
  return result;
}

uint64_t sub_1003BC40C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1003BC434 + 4 * byte_10048ED9F[*v0]))();
}

void sub_1003BC434(_QWORD *a1@<X8>)
{
  *a1 = 0x6F4C796150666D66;
  a1[1] = 0xEA00000000006461;
}

void sub_1003BC454(char *a1@<X8>)
{
  strcpy(a1, "showInAppAlert");
  a1[15] = -18;
}

void sub_1003BC47C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 7107189;
  a1[1] = v1;
}

void sub_1003BC48C(_QWORD *a1@<X8>)
{
  *a1 = 0x696669746E656469;
  a1[1] = 0xEA00000000007265;
}

uint64_t sub_1003BC4B0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1003BC4D8 + 4 * byte_10048EDA4[*v0]))(7565409, 0xE300000000000000);
}

uint64_t sub_1003BC4D8()
{
  return 0x6F4C796150666D66;
}

uint64_t sub_1003BC4F4()
{
  return 0x70416E49776F6873;
}

uint64_t sub_1003BC518()
{
  return 7107189;
}

uint64_t sub_1003BC524()
{
  return 0x696669746E656469;
}

unint64_t sub_1003BC544@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  Swift::OpaquePointer v3;
  unint64_t result;

  v3._rawValue = &off_100540038;
  result = sub_1003BD7C4(a1, v3);
  *a2 = result;
  return result;
}

void sub_1003BC570(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1003BC57C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003BEAA4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003BC5A4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003BEAA4();
  return CodingKey.debugDescription.getter(a1, v2);
}

__n128 PushPayload.init(from:)@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  _OWORD v9[10];
  uint64_t v10;

  sub_1003BCD90(a1, (uint64_t)v9);
  if (!v2)
  {
    v5 = v9[9];
    *(_OWORD *)(a2 + 128) = v9[8];
    *(_OWORD *)(a2 + 144) = v5;
    *(_QWORD *)(a2 + 160) = v10;
    v6 = v9[5];
    *(_OWORD *)(a2 + 64) = v9[4];
    *(_OWORD *)(a2 + 80) = v6;
    v7 = v9[7];
    *(_OWORD *)(a2 + 96) = v9[6];
    *(_OWORD *)(a2 + 112) = v7;
    v8 = v9[1];
    *(_OWORD *)a2 = v9[0];
    *(_OWORD *)(a2 + 16) = v8;
    result = (__n128)v9[3];
    *(_OWORD *)(a2 + 32) = v9[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t PushAPSData.alert.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1003BD334(v1, a1);
}

uint64_t PushAPSData.badge.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

uint64_t PushAPSData.category.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 88));
  return v1;
}

uint64_t PushAPSData.sound.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 104));
  return v1;
}

void sub_1003BC6B0(char *a1)
{
  sub_100197834(*a1);
}

void sub_1003BC6BC()
{
  unsigned __int8 *v0;
  uint64_t v1;
  _QWORD v2[9];

  v1 = *v0;
  Hasher.init(_seed:)(v2, 0);
  __asm { BR              X9 }
}

Swift::Int sub_1003BC704()
{
  uint64_t v0;
  uint64_t v2;

  String.hash(into:)(&v2, 0x6567646162, v0);
  swift_bridgeObjectRelease(v0);
  return Hasher._finalize()();
}

void sub_1003BC764()
{
  __asm { BR              X10 }
}

uint64_t sub_1003BC79C(uint64_t a1)
{
  uint64_t v1;

  String.hash(into:)(a1, 0x6567646162, v1);
  return swift_bridgeObjectRelease(v1);
}

void sub_1003BC7E8(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  _QWORD v3[9];

  v2 = *v1;
  Hasher.init(_seed:)(v3, a1);
  __asm { BR              X9 }
}

Swift::Int sub_1003BC82C()
{
  uint64_t v0;
  uint64_t v2;

  String.hash(into:)(&v2, 0x6567646162, v0);
  swift_bridgeObjectRelease(v0);
  return Hasher._finalize()();
}

unint64_t sub_1003BC88C@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1003BD37C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1003BC8B8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1003BC8E4 + 4 * byte_10048EDB5[*v0]))();
}

void sub_1003BC8E4(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x6567646162;
  a1[1] = v1;
}

void sub_1003BC8F8(_QWORD *a1@<X8>)
{
  *a1 = 0x79726F6765746163;
  a1[1] = 0xE800000000000000;
}

void sub_1003BC914(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x646E756F73;
  a1[1] = v1;
}

uint64_t sub_1003BC928()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1003BC954 + 4 * byte_10048EDB9[*v0]))(0x7472656C61, 0xE500000000000000);
}

uint64_t sub_1003BC954()
{
  return 0x6567646162;
}

uint64_t sub_1003BC964()
{
  return 0x79726F6765746163;
}

uint64_t sub_1003BC97C()
{
  return 0x646E756F73;
}

unint64_t sub_1003BC98C@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1003BD37C(a1);
  *a2 = result;
  return result;
}

void sub_1003BC9B0(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1003BC9BC(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003BE964();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003BC9E4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003BE964();
  return CodingKey.debugDescription.getter(a1, v2);
}

__n128 PushAPSData.init(from:)@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[7];

  sub_1003BD3C4(a1, (uint64_t *)v7);
  if (!v2)
  {
    v5 = v7[5];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(_OWORD *)(a2 + 96) = v7[6];
    v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t PushAlert.locArgs.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 32));
}

uint64_t PushAlert.fallbackLocArgs.getter()
{
  uint64_t v0;

  return swift_bridgeObjectRetain(*(_QWORD *)(v0 + 40));
}

uint64_t PushAlert.summaryArg.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain(*(_QWORD *)(v0 + 56));
  return v1;
}

void sub_1003BCA98(char *a1)
{
  sub_100196430(*a1);
}

void sub_1003BCAA4()
{
  char *v0;

  sub_1001FE9A0(*v0);
}

void sub_1003BCAAC()
{
  __asm { BR              X10 }
}

uint64_t sub_1003BCAE0(uint64_t a1)
{
  String.hash(into:)(a1, 0x79656B2D636F6CLL, 0xE700000000000000);
  return swift_bridgeObjectRelease(0xE700000000000000);
}

void sub_1003BCB60(uint64_t a1)
{
  char *v1;

  sub_100366E98(a1, *v1);
}

unint64_t sub_1003BCB68@<X0>(Swift::String *a1@<X0>, _BYTE *a2@<X8>)
{
  Swift::OpaquePointer v3;
  unint64_t result;

  v3._rawValue = &off_100540150;
  result = sub_1003BD7C4(*a1, v3);
  *a2 = result;
  return result;
}

uint64_t sub_1003BCB9C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1003BCBC4 + 4 * byte_10048EDC2[*v0]))();
}

void sub_1003BCBC4(_QWORD *a1@<X8>)
{
  *a1 = 0x79656B2D636F6CLL;
  a1[1] = 0xE700000000000000;
}

void sub_1003BCBE0(_QWORD *a1@<X8>)
{
  *a1 = 0x736772612D636F6CLL;
  a1[1] = 0xE800000000000000;
}

void sub_1003BCBFC(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x80000001004A4AB0;
}

void sub_1003BCC1C(_QWORD *a1@<X8>)
{
  *a1 = 0x2D7972616D6D7573;
  a1[1] = 0xEB00000000677261;
}

uint64_t sub_1003BCC40()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1003BCC68 + 4 * byte_10048EDC7[*v0]))(2036625250, 0xE400000000000000);
}

uint64_t sub_1003BCC68()
{
  return 0x79656B2D636F6CLL;
}

uint64_t sub_1003BCC80()
{
  return 0x736772612D636F6CLL;
}

unint64_t sub_1003BCC98()
{
  return 0xD000000000000011;
}

uint64_t sub_1003BCCB4()
{
  return 0x2D7972616D6D7573;
}

unint64_t sub_1003BCCD4@<X0>(Swift::String a1@<X1:X0>, _BYTE *a2@<X8>)
{
  Swift::OpaquePointer v3;
  unint64_t result;

  v3._rawValue = &off_100540150;
  result = sub_1003BD7C4(a1, v3);
  *a2 = result;
  return result;
}

uint64_t sub_1003BCD00(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003BE8C4();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003BCD28(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003BE8C4();
  return CodingKey.debugDescription.getter(a1, v2);
}

double PushAlert.init(from:)@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;

  sub_1003BD808(a1, (uint64_t *)v7);
  if (!v2)
  {
    v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    result = *(double *)&v8;
    v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

void sub_1003BCD90(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  int v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unsigned __int8 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unsigned __int8 v107;
  char v108;

  v5 = sub_100053F2C(&qword_1005E2990);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  v74 = a1;
  sub_100029550(a1, v9);
  v11 = sub_1003BEAA4();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for PushPayload.CodingKeys, &type metadata for PushPayload.CodingKeys, v11, v9, v10);
  if (v2)
  {
    sub_100029574(v74);
  }
  else
  {
    v73 = v6;
    v67 = a2;
    LOBYTE(v75) = 0;
    v12 = sub_1003BEAE8();
    KeyedDecodingContainer.decode<A>(_:forKey:)(&v86, &type metadata for PushAPSData, &v75, v5, &type metadata for PushAPSData, v12);
    v13 = v86;
    v14 = v95;
    v15 = v97;
    v62 = v94;
    v63 = v96;
    v16 = v99;
    v61 = v98;
    v107 = v95;
    LOBYTE(v86) = 1;
    v65 = v88;
    v66 = v13;
    v17 = v87;
    v71 = v93;
    v72 = v89;
    v68 = v90;
    v69 = v92;
    v70 = v91;
    sub_1003BE9EC(v13, v87, v88, v89, v90, v91, v92, v93);
    swift_bridgeObjectRetain(v16);
    v18 = swift_bridgeObjectRetain(v15);
    v19 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v86, v5, v18);
    v64 = v20;
    v55 = v14;
    v56 = v19;
    v59 = v15;
    v60 = v17;
    LOBYTE(v86) = 2;
    v21 = swift_bridgeObjectRetain(v20);
    v58 = 0;
    v22 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v86, v5, v21);
    LOBYTE(v86) = 3;
    v24 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v86, v5, v23);
    v108 = 4;
    v26 = v25;
    v27 = swift_bridgeObjectRetain(v25);
    v28 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v108, v5, v27);
    v57 = v26;
    v29 = *(void (**)(char *, uint64_t))(v73 + 8);
    v30 = v28;
    v50 = v31;
    v51 = v28;
    v32 = v8;
    v33 = v31;
    v29(v32, v5);
    v34 = v65;
    *(_QWORD *)&v75 = v66;
    *((_QWORD *)&v75 + 1) = v60;
    v53 = v24;
    *(_QWORD *)&v76 = v65;
    *((_QWORD *)&v76 + 1) = v72;
    *(_QWORD *)&v77 = v68;
    v35 = v26;
    v36 = v68;
    *((_QWORD *)&v77 + 1) = v70;
    *(_QWORD *)&v78 = v69;
    *((_QWORD *)&v78 + 1) = v71;
    *(_QWORD *)&v79 = v62;
    BYTE8(v79) = v55;
    *(_QWORD *)&v80 = v63;
    *((_QWORD *)&v80 + 1) = v59;
    v52 = v22;
    *(_QWORD *)&v81 = v61;
    *((_QWORD *)&v81 + 1) = v16;
    v54 = v16;
    v37 = v64;
    *(_QWORD *)&v82 = v56;
    *((_QWORD *)&v82 + 1) = v64;
    LOBYTE(v83) = v22;
    *((_QWORD *)&v83 + 1) = v24;
    *(_QWORD *)&v84 = v35;
    v38 = v35;
    *((_QWORD *)&v84 + 1) = v30;
    v85 = v33;
    sub_1003BEB2C((uint64_t *)&v75);
    swift_bridgeObjectRelease(v37);
    swift_bridgeObjectRelease(v38);
    v39 = v66;
    v40 = v60;
    v42 = v69;
    v41 = v70;
    sub_1003BEA48(v66, v60, v34, v72, v36, v70, v69, v71);
    swift_bridgeObjectRelease(v54);
    v43 = v59;
    swift_bridgeObjectRelease(v59);
    sub_100029574(v74);
    v86 = v39;
    v87 = v40;
    v88 = v34;
    v89 = v72;
    v90 = v36;
    v91 = v41;
    v92 = v42;
    v93 = v71;
    v94 = v62;
    v95 = v107;
    v96 = v63;
    v97 = v43;
    v98 = v61;
    v99 = v54;
    v100 = v56;
    v101 = v64;
    v102 = v52;
    v103 = v53;
    v104 = v57;
    v105 = v51;
    v106 = v50;
    sub_1003BEBB0(&v86);
    v44 = v84;
    v45 = v67;
    *(_OWORD *)(v67 + 128) = v83;
    *(_OWORD *)(v45 + 144) = v44;
    *(_QWORD *)(v45 + 160) = v85;
    v46 = v80;
    *(_OWORD *)(v45 + 64) = v79;
    *(_OWORD *)(v45 + 80) = v46;
    v47 = v82;
    *(_OWORD *)(v45 + 96) = v81;
    *(_OWORD *)(v45 + 112) = v47;
    v48 = v76;
    *(_OWORD *)v45 = v75;
    *(_OWORD *)(v45 + 16) = v48;
    v49 = v78;
    *(_OWORD *)(v45 + 32) = v77;
    *(_OWORD *)(v45 + 48) = v49;
  }
}

uint64_t sub_1003BD334(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C(&qword_1005E2958);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1003BD37C(Swift::String string)
{
  void *object;
  Swift::String v2;
  unint64_t v3;

  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1005400D0, v2);
  swift_bridgeObjectRelease(object);
  if (v3 >= 4)
    return 4;
  else
    return v3;
}

void sub_1003BD3C4(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __n128 v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  char v70;

  v5 = sub_100053F2C(&qword_1005E2978);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_100029550(a1, v9);
  v11 = sub_1003BE964();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for PushAPSData.CodingKeys, &type metadata for PushAPSData.CodingKeys, v11, v9, v10);
  if (v2)
  {
    sub_100029574(a1);
  }
  else
  {
    v70 = 0;
    v12 = sub_1003BE9A8();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&v61, &type metadata for PushAlert, &v70, v5, &type metadata for PushAlert, v12);
    v55 = a2;
    v13 = v61;
    v14 = v64;
    v16 = v65;
    v15 = v66;
    LOBYTE(v61) = 1;
    v56 = v13;
    v57 = v62;
    v58 = v63;
    v59 = v68;
    v60 = v67;
    sub_1003BE9EC(v13, v62, v63, v64, v65, v66, v67, v68);
    v17 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v61, v5);
    v69 = v18;
    v50 = v17;
    v51 = v15;
    v52 = v16;
    v53 = v14;
    v20 = v57;
    v19 = v58;
    v21 = v56;
    LOBYTE(v61) = 2;
    v49 = KeyedDecodingContainer.decode(_:forKey:)(&v61, v5);
    LOBYTE(v61) = 3;
    v54 = v22;
    v23 = swift_bridgeObjectRetain(v22);
    v24 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v61, v5, v23);
    v25 = *(void (**)(char *, uint64_t))(v6 + 8);
    v48 = v24;
    v27 = v26;
    v47 = v26;
    v25(v8, v5);
    v28 = v21;
    v29 = v21;
    v30 = v20;
    v31 = v20;
    v32 = v19;
    v34 = v52;
    v33 = v53;
    v35 = v51;
    v36 = v59;
    sub_1003BE9EC(v29, v31, v32, v53, v52, v51, v60, v59);
    swift_bridgeObjectRetain(v27);
    v37 = v30;
    v38 = v58;
    v39 = v60;
    sub_1003BEA48(v28, v37, v58, v33, v34, v35, v60, v36);
    sub_100029574(a1);
    v40 = v57;
    v41 = v39;
    v42 = v59;
    sub_1003BEA48(v28, v57, v38, v33, v34, v35, v41, v59);
    v43 = v47;
    swift_bridgeObjectRelease(v47);
    v44 = v54;
    swift_bridgeObjectRelease(v54);
    v45 = v55;
    *v55 = v28;
    v45[1] = v40;
    v45[2] = v58;
    v45[3] = v33;
    v45[4] = v34;
    v45[5] = v35;
    v45[6] = v60;
    v45[7] = v42;
    v45[8] = v50;
    *((_BYTE *)v45 + 72) = v69 & 1;
    v45[10] = v49;
    v45[11] = v44;
    v45[12] = v48;
    v45[13] = v43;
  }
}

unint64_t sub_1003BD7C4(Swift::String string, Swift::OpaquePointer cases)
{
  void *object;
  Swift::String v3;
  unint64_t v5;

  object = string._object;
  v3._countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  v5 = _findStringSwitchCase(cases:string:)(cases, v3);
  swift_bridgeObjectRelease(object);
  if (v5 >= 5)
    return 5;
  else
    return v5;
}

void sub_1003BD808(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  unint64_t v41;

  v5 = sub_100053F2C(&qword_1005E2960);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_100029550(a1, v9);
  v11 = sub_1003BE8C4();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for PushAlert.CodingKeys, &type metadata for PushAlert.CodingKeys, v11, v9, v10);
  if (v2)
  {
    sub_100029574(a1);
  }
  else
  {
    LOBYTE(v41) = 0;
    v13 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v41, v5, v12);
    v15 = v14;
    LOBYTE(v41) = 1;
    v16 = swift_bridgeObjectRetain(v14);
    v17 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v41, v5, v16);
    v39 = v18;
    v19 = v18;
    v34 = v17;
    v35 = v13;
    v38 = v15;
    v20 = sub_100053F2C(&qword_1005D39B0);
    v40 = 2;
    v21 = sub_1003BE908();
    swift_bridgeObjectRetain(v19);
    v36 = v21;
    v37 = 0;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&v41, v20, &v40, v5, v20, v21);
    v22 = v41;
    v40 = 3;
    swift_bridgeObjectRetain(v41);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&v41, v20, &v40, v5, v20, v36);
    v23 = v22;
    v24 = v41;
    LOBYTE(v41) = 4;
    v36 = v24;
    swift_bridgeObjectRetain(v24);
    v25 = KeyedDecodingContainer.decode(_:forKey:)(&v41, v5);
    v26 = v38;
    v28 = v27;
    v29 = *(void (**)(char *, uint64_t))(v6 + 8);
    v37 = v25;
    v29(v8, v5);
    swift_bridgeObjectRetain(v26);
    v30 = v26;
    v31 = v39;
    swift_bridgeObjectRetain(v39);
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(v28);
    swift_bridgeObjectRelease(v30);
    swift_bridgeObjectRelease(v31);
    swift_bridgeObjectRelease(v23);
    sub_100029574(a1);
    swift_bridgeObjectRelease(v28);
    v32 = v36;
    swift_bridgeObjectRelease(v36);
    swift_bridgeObjectRelease(v23);
    swift_bridgeObjectRelease(v31);
    swift_bridgeObjectRelease(v30);
    *a2 = v35;
    a2[1] = v30;
    a2[2] = v34;
    a2[3] = v31;
    a2[4] = v23;
    a2[5] = v32;
    a2[6] = v37;
    a2[7] = v28;
  }
}

uint64_t destroy for PushPayload(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[7];
  if (v2)
  {
    swift_bridgeObjectRelease(a1[1]);
    swift_bridgeObjectRelease(a1[3]);
    swift_bridgeObjectRelease(a1[4]);
    v3 = a1[5];
    swift_bridgeObjectRelease(v2);
    swift_bridgeObjectRelease(v3);
  }
  swift_bridgeObjectRelease(a1[11]);
  swift_bridgeObjectRelease(a1[13]);
  swift_bridgeObjectRelease(a1[15]);
  swift_bridgeObjectRelease(a1[18]);
  return swift_bridgeObjectRelease(a1[20]);
}

uint64_t initializeWithCopy for PushPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a2 + 56);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v6;
    v7 = *(_QWORD *)(a2 + 32);
    v8 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 40) = v8;
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v4;
    swift_bridgeObjectRetain(v5);
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v4);
  }
  else
  {
    v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
    v10 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v10;
  }
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v11 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v11;
  v12 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v12;
  v13 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v13;
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  v14 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v14;
  v15 = *(_QWORD *)(a2 + 152);
  v16 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = v15;
  *(_QWORD *)(a1 + 160) = v16;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v14);
  swift_bridgeObjectRetain(v16);
  return a1;
}

uint64_t assignWithCopy for PushPayload(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v4 = *((_QWORD *)a2 + 7);
  if (*(_QWORD *)(a1 + 56))
  {
    if (v4)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v5 = *((_QWORD *)a2 + 1);
      v6 = *(_QWORD *)(a1 + 8);
      *(_QWORD *)(a1 + 8) = v5;
      swift_bridgeObjectRetain(v5);
      swift_bridgeObjectRelease(v6);
      *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
      v7 = *((_QWORD *)a2 + 3);
      v8 = *(_QWORD *)(a1 + 24);
      *(_QWORD *)(a1 + 24) = v7;
      swift_bridgeObjectRetain(v7);
      swift_bridgeObjectRelease(v8);
      v9 = *(_QWORD *)(a1 + 32);
      v10 = *((_QWORD *)a2 + 4);
      *(_QWORD *)(a1 + 32) = v10;
      swift_bridgeObjectRetain(v10);
      swift_bridgeObjectRelease(v9);
      v11 = *(_QWORD *)(a1 + 40);
      v12 = *((_QWORD *)a2 + 5);
      *(_QWORD *)(a1 + 40) = v12;
      swift_bridgeObjectRetain(v12);
      swift_bridgeObjectRelease(v11);
      *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
      v13 = *((_QWORD *)a2 + 7);
      v14 = *(_QWORD *)(a1 + 56);
      *(_QWORD *)(a1 + 56) = v13;
      swift_bridgeObjectRetain(v13);
      swift_bridgeObjectRelease(v14);
    }
    else
    {
      sub_1003BDF90((_QWORD *)a1);
      v20 = a2[3];
      v22 = *a2;
      v21 = a2[1];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v20;
      *(_OWORD *)a1 = v22;
      *(_OWORD *)(a1 + 16) = v21;
    }
  }
  else if (v4)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v15 = *((_QWORD *)a2 + 1);
    *(_QWORD *)(a1 + 8) = v15;
    *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
    v16 = *((_QWORD *)a2 + 3);
    *(_QWORD *)(a1 + 24) = v16;
    v17 = *((_QWORD *)a2 + 4);
    *(_QWORD *)(a1 + 32) = v17;
    v18 = *((_QWORD *)a2 + 5);
    *(_QWORD *)(a1 + 40) = v18;
    *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
    v19 = *((_QWORD *)a2 + 7);
    *(_QWORD *)(a1 + 56) = v19;
    swift_bridgeObjectRetain(v15);
    swift_bridgeObjectRetain(v16);
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v19);
  }
  else
  {
    v23 = *a2;
    v24 = a2[1];
    v25 = a2[3];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v25;
    *(_OWORD *)a1 = v23;
    *(_OWORD *)(a1 + 16) = v24;
  }
  v26 = *((_QWORD *)a2 + 8);
  *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
  *(_QWORD *)(a1 + 64) = v26;
  *(_QWORD *)(a1 + 80) = *((_QWORD *)a2 + 10);
  v27 = *((_QWORD *)a2 + 11);
  v28 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = v27;
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRelease(v28);
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  v29 = *((_QWORD *)a2 + 13);
  v30 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 104) = v29;
  swift_bridgeObjectRetain(v29);
  swift_bridgeObjectRelease(v30);
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  v31 = *((_QWORD *)a2 + 15);
  v32 = *(_QWORD *)(a1 + 120);
  *(_QWORD *)(a1 + 120) = v31;
  swift_bridgeObjectRetain(v31);
  swift_bridgeObjectRelease(v32);
  *(_BYTE *)(a1 + 128) = *((_BYTE *)a2 + 128);
  *(_QWORD *)(a1 + 136) = *((_QWORD *)a2 + 17);
  v33 = *((_QWORD *)a2 + 18);
  v34 = *(_QWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 144) = v33;
  swift_bridgeObjectRetain(v33);
  swift_bridgeObjectRelease(v34);
  *(_QWORD *)(a1 + 152) = *((_QWORD *)a2 + 19);
  v35 = *((_QWORD *)a2 + 20);
  v36 = *(_QWORD *)(a1 + 160);
  *(_QWORD *)(a1 + 160) = v35;
  swift_bridgeObjectRetain(v35);
  swift_bridgeObjectRelease(v36);
  return a1;
}

_QWORD *sub_1003BDF90(_QWORD *a1)
{
  destroy for PushAlert(a1);
  return a1;
}

__n128 initializeWithTake for PushPayload(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_QWORD *)(a1 + 160) = *((_QWORD *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for PushPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = *(_QWORD *)(a1 + 56);
  if (!v4)
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 56);
  if (!v5)
  {
    sub_1003BDF90((_QWORD *)a1);
LABEL_5:
    v12 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v12;
    v13 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v13;
    goto LABEL_6;
  }
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v10);
  v11 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease(v11);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRelease(v4);
LABEL_6:
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 88);
  v15 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v14;
  swift_bridgeObjectRelease(v15);
  v16 = *(_QWORD *)(a2 + 104);
  v17 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v16;
  swift_bridgeObjectRelease(v17);
  v18 = *(_QWORD *)(a2 + 120);
  v19 = *(_QWORD *)(a1 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v18;
  swift_bridgeObjectRelease(v19);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  v20 = *(_QWORD *)(a2 + 144);
  v21 = *(_QWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v20;
  swift_bridgeObjectRelease(v21);
  v22 = *(_QWORD *)(a2 + 160);
  v23 = *(_QWORD *)(a1 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v22;
  swift_bridgeObjectRelease(v23);
  return a1;
}

uint64_t getEnumTagSinglePayload for PushPayload(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 168))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 88);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PushPayload(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 168) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 88) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 168) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PushPayload()
{
  return &type metadata for PushPayload;
}

uint64_t destroy for PushAPSData(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[7];
  if (v2)
  {
    swift_bridgeObjectRelease(a1[1]);
    swift_bridgeObjectRelease(a1[3]);
    swift_bridgeObjectRelease(a1[4]);
    v3 = a1[5];
    swift_bridgeObjectRelease(v2);
    swift_bridgeObjectRelease(v3);
  }
  swift_bridgeObjectRelease(a1[11]);
  return swift_bridgeObjectRelease(a1[13]);
}

uint64_t initializeWithCopy for PushAPSData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a2 + 56);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v6;
    v7 = *(_QWORD *)(a2 + 32);
    v8 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 40) = v8;
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v4;
    swift_bridgeObjectRetain(v5);
    swift_bridgeObjectRetain(v6);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v4);
  }
  else
  {
    v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
    v10 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v10;
  }
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v11 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v11;
  v12 = *(_QWORD *)(a2 + 96);
  v13 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v12;
  *(_QWORD *)(a1 + 104) = v13;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRetain(v13);
  return a1;
}

uint64_t assignWithCopy for PushAPSData(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = *((_QWORD *)a2 + 7);
  if (*(_QWORD *)(a1 + 56))
  {
    if (v4)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v5 = *((_QWORD *)a2 + 1);
      v6 = *(_QWORD *)(a1 + 8);
      *(_QWORD *)(a1 + 8) = v5;
      swift_bridgeObjectRetain(v5);
      swift_bridgeObjectRelease(v6);
      *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
      v7 = *((_QWORD *)a2 + 3);
      v8 = *(_QWORD *)(a1 + 24);
      *(_QWORD *)(a1 + 24) = v7;
      swift_bridgeObjectRetain(v7);
      swift_bridgeObjectRelease(v8);
      v9 = *(_QWORD *)(a1 + 32);
      v10 = *((_QWORD *)a2 + 4);
      *(_QWORD *)(a1 + 32) = v10;
      swift_bridgeObjectRetain(v10);
      swift_bridgeObjectRelease(v9);
      v11 = *(_QWORD *)(a1 + 40);
      v12 = *((_QWORD *)a2 + 5);
      *(_QWORD *)(a1 + 40) = v12;
      swift_bridgeObjectRetain(v12);
      swift_bridgeObjectRelease(v11);
      *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
      v13 = *((_QWORD *)a2 + 7);
      v14 = *(_QWORD *)(a1 + 56);
      *(_QWORD *)(a1 + 56) = v13;
      swift_bridgeObjectRetain(v13);
      swift_bridgeObjectRelease(v14);
    }
    else
    {
      sub_1003BDF90((_QWORD *)a1);
      v20 = a2[3];
      v22 = *a2;
      v21 = a2[1];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v20;
      *(_OWORD *)a1 = v22;
      *(_OWORD *)(a1 + 16) = v21;
    }
  }
  else if (v4)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v15 = *((_QWORD *)a2 + 1);
    *(_QWORD *)(a1 + 8) = v15;
    *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
    v16 = *((_QWORD *)a2 + 3);
    *(_QWORD *)(a1 + 24) = v16;
    v17 = *((_QWORD *)a2 + 4);
    *(_QWORD *)(a1 + 32) = v17;
    v18 = *((_QWORD *)a2 + 5);
    *(_QWORD *)(a1 + 40) = v18;
    *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
    v19 = *((_QWORD *)a2 + 7);
    *(_QWORD *)(a1 + 56) = v19;
    swift_bridgeObjectRetain(v15);
    swift_bridgeObjectRetain(v16);
    swift_bridgeObjectRetain(v17);
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v19);
  }
  else
  {
    v23 = *a2;
    v24 = a2[1];
    v25 = a2[3];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v25;
    *(_OWORD *)a1 = v23;
    *(_OWORD *)(a1 + 16) = v24;
  }
  v26 = *((_QWORD *)a2 + 8);
  *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
  *(_QWORD *)(a1 + 64) = v26;
  *(_QWORD *)(a1 + 80) = *((_QWORD *)a2 + 10);
  v27 = *((_QWORD *)a2 + 11);
  v28 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = v27;
  swift_bridgeObjectRetain(v27);
  swift_bridgeObjectRelease(v28);
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  v29 = *((_QWORD *)a2 + 13);
  v30 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 104) = v29;
  swift_bridgeObjectRetain(v29);
  swift_bridgeObjectRelease(v30);
  return a1;
}

uint64_t assignWithTake for PushAPSData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a1 + 56);
  if (!v4)
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 56);
  if (!v5)
  {
    sub_1003BDF90((_QWORD *)a1);
LABEL_5:
    v12 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v12;
    v13 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v13;
    goto LABEL_6;
  }
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v10);
  v11 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease(v11);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRelease(v4);
LABEL_6:
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 88);
  v15 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v14;
  swift_bridgeObjectRelease(v15);
  v16 = *(_QWORD *)(a2 + 104);
  v17 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v16;
  swift_bridgeObjectRelease(v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for PushAPSData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 88);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PushAPSData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 88) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PushAPSData()
{
  return &type metadata for PushAPSData;
}

uint64_t destroy for PushAlert(_QWORD *a1)
{
  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[4]);
  swift_bridgeObjectRelease(a1[5]);
  return swift_bridgeObjectRelease(a1[7]);
}

_QWORD *initializeWithCopy for PushAlert(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[4];
  v6 = a2[5];
  a1[4] = v5;
  a1[5] = v6;
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  return a1;
}

_QWORD *assignWithCopy for PushAlert(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a1[1];
  a1[1] = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  a1[2] = a2[2];
  v6 = a2[3];
  v7 = a1[3];
  a1[3] = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  v8 = a1[4];
  v9 = a2[4];
  a1[4] = v9;
  swift_bridgeObjectRetain(v9);
  swift_bridgeObjectRelease(v8);
  v10 = a1[5];
  v11 = a2[5];
  a1[5] = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v10);
  a1[6] = a2[6];
  v12 = a2[7];
  v13 = a1[7];
  a1[7] = v12;
  swift_bridgeObjectRetain(v12);
  swift_bridgeObjectRelease(v13);
  return a1;
}

_QWORD *assignWithTake for PushAlert(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = a1[1];
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease(v5);
  a1[2] = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease(a1[3]);
  v6 = a1[4];
  *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease(v6);
  v7 = a1[5];
  a1[5] = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 56);
  v9 = a1[7];
  a1[6] = *(_QWORD *)(a2 + 48);
  a1[7] = v8;
  swift_bridgeObjectRelease(v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for PushAlert(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PushAlert(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PushAlert()
{
  return &type metadata for PushAlert;
}

unint64_t sub_1003BE8C4()
{
  unint64_t result;

  result = qword_1005E2968;
  if (!qword_1005E2968)
  {
    result = swift_getWitnessTable(&unk_10048F250, &type metadata for PushAlert.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005E2968);
  }
  return result;
}

unint64_t sub_1003BE908()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1005E2970;
  if (!qword_1005E2970)
  {
    v1 = sub_10004058C(&qword_1005D39B0);
    result = swift_getWitnessTable(&protocol conformance descriptor for <A> [A], v1);
    atomic_store(result, (unint64_t *)&qword_1005E2970);
  }
  return result;
}

unint64_t sub_1003BE964()
{
  unint64_t result;

  result = qword_1005E2980;
  if (!qword_1005E2980)
  {
    result = swift_getWitnessTable(&unk_10048F200, &type metadata for PushAPSData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005E2980);
  }
  return result;
}

unint64_t sub_1003BE9A8()
{
  unint64_t result;

  result = qword_1005E2988;
  if (!qword_1005E2988)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PushAlert, &type metadata for PushAlert);
    atomic_store(result, (unint64_t *)&qword_1005E2988);
  }
  return result;
}

uint64_t sub_1003BE9EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result;

  if (a8)
  {
    swift_bridgeObjectRetain(a6);
    swift_bridgeObjectRetain(a8);
    swift_bridgeObjectRetain(a2);
    swift_bridgeObjectRetain(a4);
    return swift_bridgeObjectRetain(a5);
  }
  return result;
}

uint64_t sub_1003BEA48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result;

  if (a8)
  {
    swift_bridgeObjectRelease(a8);
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a4);
    swift_bridgeObjectRelease(a5);
    return swift_bridgeObjectRelease(a6);
  }
  return result;
}

unint64_t sub_1003BEAA4()
{
  unint64_t result;

  result = qword_1005E2998;
  if (!qword_1005E2998)
  {
    result = swift_getWitnessTable(&unk_10048F1B0, &type metadata for PushPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005E2998);
  }
  return result;
}

unint64_t sub_1003BEAE8()
{
  unint64_t result;

  result = qword_1005E29A0;
  if (!qword_1005E29A0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for PushAPSData, &type metadata for PushAPSData);
    atomic_store(result, (unint64_t *)&qword_1005E29A0);
  }
  return result;
}

uint64_t *sub_1003BEB2C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[11];
  v3 = a1[13];
  v4 = a1[15];
  v5 = a1[18];
  v6 = a1[20];
  sub_1003BE9EC(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7]);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v2);
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

uint64_t *sub_1003BEBB0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[11];
  v3 = a1[13];
  v4 = a1[15];
  v5 = a1[18];
  v6 = a1[20];
  sub_1003BEA48(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7]);
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v3);
  swift_bridgeObjectRelease(v4);
  swift_bridgeObjectRelease(v5);
  swift_bridgeObjectRelease(v6);
  return a1;
}

ValueMetadata *type metadata accessor for PushPayload.CodingKeys()
{
  return &type metadata for PushPayload.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for PushAPSData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1003BEC98 + 4 * byte_10048EDD1[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1003BECCC + 4 * byte_10048EDCC[v4]))();
}

uint64_t sub_1003BECCC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003BECD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003BECDCLL);
  return result;
}

uint64_t sub_1003BECE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003BECF0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1003BECF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003BECFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PushAPSData.CodingKeys()
{
  return &type metadata for PushAPSData.CodingKeys;
}

uint64_t _s6FindMy11PushPayloadV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1003BED64 + 4 * byte_10048EDDB[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1003BED98 + 4 * byte_10048EDD6[v4]))();
}

uint64_t sub_1003BED98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003BEDA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003BEDA8);
  return result;
}

uint64_t sub_1003BEDB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003BEDBCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1003BEDC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003BEDC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PushAlert.CodingKeys()
{
  return &type metadata for PushAlert.CodingKeys;
}

unint64_t sub_1003BEDE8()
{
  unint64_t result;

  result = qword_1005E29A8;
  if (!qword_1005E29A8)
  {
    result = swift_getWitnessTable(&unk_10048EFA8, &type metadata for PushAlert.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005E29A8);
  }
  return result;
}

unint64_t sub_1003BEE30()
{
  unint64_t result;

  result = qword_1005E29B0;
  if (!qword_1005E29B0)
  {
    result = swift_getWitnessTable(&unk_10048F098, &type metadata for PushAPSData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005E29B0);
  }
  return result;
}

unint64_t sub_1003BEE78()
{
  unint64_t result;

  result = qword_1005E29B8;
  if (!qword_1005E29B8)
  {
    result = swift_getWitnessTable(&unk_10048F188, &type metadata for PushPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005E29B8);
  }
  return result;
}

unint64_t sub_1003BEEC0()
{
  unint64_t result;

  result = qword_1005E29C0;
  if (!qword_1005E29C0)
  {
    result = swift_getWitnessTable(&unk_10048F0C0, &type metadata for PushPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005E29C0);
  }
  return result;
}

unint64_t sub_1003BEF08()
{
  unint64_t result;

  result = qword_1005E29C8;
  if (!qword_1005E29C8)
  {
    result = swift_getWitnessTable(&unk_10048F0E8, &type metadata for PushPayload.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005E29C8);
  }
  return result;
}

unint64_t sub_1003BEF50()
{
  unint64_t result;

  result = qword_1005E29D0;
  if (!qword_1005E29D0)
  {
    result = swift_getWitnessTable(&unk_10048EFD0, &type metadata for PushAPSData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005E29D0);
  }
  return result;
}

unint64_t sub_1003BEF98()
{
  unint64_t result;

  result = qword_1005E29D8;
  if (!qword_1005E29D8)
  {
    result = swift_getWitnessTable(&unk_10048EFF8, &type metadata for PushAPSData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005E29D8);
  }
  return result;
}

unint64_t sub_1003BEFE0()
{
  unint64_t result;

  result = qword_1005E29E0;
  if (!qword_1005E29E0)
  {
    result = swift_getWitnessTable(&unk_10048EEE0, &type metadata for PushAlert.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005E29E0);
  }
  return result;
}

unint64_t sub_1003BF028()
{
  unint64_t result;

  result = qword_1005E29E8;
  if (!qword_1005E29E8)
  {
    result = swift_getWitnessTable(&unk_10048EF08, &type metadata for PushAlert.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005E29E8);
  }
  return result;
}

uint64_t sub_1003BF070(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __n128 v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  unsigned int v15;
  unsigned int v16;
  _QWORD v18[2];

  v4 = type metadata accessor for CharacterSet(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = a1;
  v18[1] = a2;
  static CharacterSet.whitespaces.getter(v8);
  v9 = sub_1000517B8();
  v10 = StringProtocol.trimmingCharacters(in:)(v7, &type metadata for String, v9);
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v13 = HIBYTE(v12) & 0xF;
  if ((v12 & 0x2000000000000000) == 0)
    v13 = v10 & 0xFFFFFFFFFFFFLL;
  if (v13)
  {
    v14 = sub_1003BF184(v10, v12, 0, 0, 0, 0, 0);
    v16 = v15;
    swift_bridgeObjectRelease(v12);

    return (v16 >> 8) & 1;
  }
  else
  {
    swift_bridgeObjectRelease(v12);
    return 0;
  }
}

id sub_1003BF184(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v11;
  uint64_t v12;
  void *v13;
  NSString v14;
  unsigned int v15;
  void *v16;
  NSString v17;
  id v18;
  char v19;
  uint64_t v20;
  id v21;
  NSString v22;
  id v23;
  id v24;
  void *v25;
  void *v26;
  _QWORD *v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  Class isa;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSString v45;
  NSString v46;
  uint64_t v47;
  uint64_t v48;
  NSString v49;
  id v50;
  NSString v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  Class v57;
  id v58;
  NSString v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  id v64;
  NSString v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  id v70;
  Class v71;
  int v73;
  int v74;
  id v76;
  _QWORD v77[5];
  uint64_t v78[6];
  _BYTE v79[8];
  uint64_t v80;
  void *v81[5];

  sub_100006C5C(0, (unint64_t *)&qword_1005D8190, NSPredicate_ptr);
  v11 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
  v12 = swift_allocObject(v11, 72, 7);
  *(_OWORD *)(v12 + 16) = xmmword_100481740;
  *(_QWORD *)(v12 + 56) = &type metadata for String;
  *(_QWORD *)(v12 + 64) = sub_100071E88();
  *(_QWORD *)(v12 + 32) = 0xD000000000000029;
  *(_QWORD *)(v12 + 40) = 0x80000001004ACC10;
  v13 = (void *)NSPredicate.init(format:_:)(0x54414D20464C4553, 0xEF40252053454843, v12);
  v14 = String._bridgeToObjectiveC()();
  v15 = objc_msgSend(v13, "evaluateWithObject:", v14);

  v73 = v15;
  if (v15)
  {
    v16 = (void *)objc_opt_self(CNContact);
    v17 = String._bridgeToObjectiveC()();
    v18 = objc_msgSend(v16, "predicateForContactsMatchingEmailAddress:", v17);
  }
  else
  {
    v19 = sub_1003C06A0(a1, a2, 0);
    swift_bridgeObjectRelease(v20);
    if ((v19 & 1) == 0)
    {
      v23 = 0;
      v73 = 1;
      v74 = 1;
      if ((a7 & 1) != 0)
        goto LABEL_12;
      goto LABEL_8;
    }
    v21 = objc_allocWithZone((Class)CNPhoneNumber);
    swift_bridgeObjectRetain(a2);
    v22 = String._bridgeToObjectiveC()();
    v17 = objc_msgSend(v21, "initWithStringValue:", v22, swift_bridgeObjectRelease(a2).n128_f64[0]);

    v18 = objc_msgSend((id)objc_opt_self(CNContact), "predicateForContactsMatchingPhoneNumber:", v17);
  }
  v23 = v18;

  v74 = 0;
  if ((a7 & 1) != 0)
    goto LABEL_12;
LABEL_8:
  sub_1003BF95C(v77);
  sub_10005DAA0((uint64_t)v77, (uint64_t)v81, &qword_1005D9170);
  v24 = v81[0];
  if (v81[0])
  {
    v25 = v81[2];
    v26 = v81[4];
    v27 = sub_1003C0A54(v81[0]);
    sub_1003C0414((uint64_t)v27, a1, a2, (uint64_t)v78);
    swift_bridgeObjectRelease(v27);
    sub_1003C195C(v78);
    sub_10005DAA0((uint64_t)v78, (uint64_t)v79, (uint64_t *)&unk_1005E2AC0);
    v28 = v80;
    swift_bridgeObjectRelease(v25);
    if (v28)
    {

      swift_bridgeObjectRelease(v26);
      return v24;
    }

    swift_bridgeObjectRelease(v26);
  }
LABEL_12:
  v29 = objc_msgSend((id)objc_opt_self(CNContactStore), "authorizationStatusForEntityType:", 0);
  if ((a7 & 1) != 0 || v29 != (id)3)
    goto LABEL_31;
  v30 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), "init");
  if (!v23)
    goto LABEL_30;
  v31 = qword_1005D2028;
  v32 = v23;
  if (v31 != -1)
    swift_once(&qword_1005D2028, sub_1003BFE68);
  v33 = qword_1005F5FB8;
  swift_bridgeObjectRetain(qword_1005F5FB8);
  sub_100053F2C(&qword_1005D2410);
  isa = Array._bridgeToObjectiveC()().super.isa;
  v76 = 0;
  v35 = objc_msgSend(v30, "unifiedContactsMatchingPredicate:keysToFetch:error:", v32, isa, &v76, swift_bridgeObjectRelease(v33).n128_f64[0]);

  v36 = v76;
  if (v35)
  {
    v37 = sub_100006C5C(0, (unint64_t *)&qword_1005D81D0, CNContact_ptr);
    v38 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v35, v37);
    v39 = v36;

    if ((unint64_t)v38 >> 62)
    {
      if (v38 < 0)
        v43 = v38;
      else
        v43 = v38 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v38);
      v44 = _CocoaArrayWrapper.endIndex.getter(v43);
      swift_bridgeObjectRelease(v38);
      if (v44)
        goto LABEL_20;
    }
    else if (*(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_20:
      if ((v38 & 0xC000000000000001) != 0)
      {
        v40 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v38);
      }
      else
      {
        if (!*(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10))
          __break(1u);
        v40 = *(id *)(v38 + 32);
      }
      v24 = v40;
      swift_bridgeObjectRelease(v38);

      return v24;
    }
    swift_bridgeObjectRelease(v38);

LABEL_30:
    goto LABEL_31;
  }
  v41 = v76;
  v42 = _convertNSErrorToError(_:)(v36);

  swift_willThrow();
  swift_errorRelease(v42);
LABEL_31:
  v24 = objc_msgSend(objc_allocWithZone((Class)CNMutableContact), "init");
  if (a4)
  {
    v45 = String._bridgeToObjectiveC()();
    objc_msgSend(v24, "setGivenName:", v45);

  }
  if (a6)
  {
    v46 = String._bridgeToObjectiveC()();
    objc_msgSend(v24, "setFamilyName:", v46);

  }
  if (((v73 | v74) & 1) != 0)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)(CNLabelOther);
    v48 = v47;
    v49 = String._bridgeToObjectiveC()();
    v50 = objc_allocWithZone((Class)CNLabeledValue);
    v51 = String._bridgeToObjectiveC()();
    v52 = objc_msgSend(v50, "initWithLabel:value:", v51, v49, swift_bridgeObjectRelease(v48).n128_f64[0]);

    v53 = sub_100053F2C(&qword_1005D2F10);
    v54 = swift_allocObject(v53, 40, 7);
    *(_OWORD *)(v54 + 16) = xmmword_100481B00;
    *(_QWORD *)(v54 + 32) = v52;
    v76 = (id)v54;
    specialized Array._endMutation()(v54);
    v55 = v76;
    v56 = v52;
    sub_100053F2C((uint64_t *)&unk_1005DF490);
    v57 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v24, "setEmailAddresses:", v57, swift_bridgeObjectRelease(v55).n128_f64[0]);

  }
  else
  {
    v58 = objc_allocWithZone((Class)CNPhoneNumber);
    swift_bridgeObjectRetain(a2);
    v59 = String._bridgeToObjectiveC()();
    v60 = objc_msgSend(v58, "initWithStringValue:", v59, swift_bridgeObjectRelease(a2).n128_f64[0]);

    static String._unconditionallyBridgeFromObjectiveC(_:)(CNLabelOther);
    v62 = v61;
    v63 = objc_allocWithZone((Class)CNLabeledValue);
    v64 = v60;
    v65 = String._bridgeToObjectiveC()();
    v66 = objc_msgSend(v63, "initWithLabel:value:", v65, v64, swift_bridgeObjectRelease(v62).n128_f64[0]);

    v67 = sub_100053F2C(&qword_1005D2F10);
    v68 = swift_allocObject(v67, 40, 7);
    *(_OWORD *)(v68 + 16) = xmmword_100481B00;
    *(_QWORD *)(v68 + 32) = v66;
    v76 = (id)v68;
    specialized Array._endMutation()(v68);
    v69 = v76;
    v70 = v66;
    sub_100053F2C((uint64_t *)&unk_1005DF490);
    v71 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v24, "setPhoneNumbers:", v71, swift_bridgeObjectRelease(v69).n128_f64[0]);

  }
  return v24;
}

void sub_1003BF95C(_QWORD *a1@<X8>)
{
  SEL *v2;
  _UNKNOWN **v3;
  char **v4;
  id v5;
  uint64_t v6;
  Class isa;
  id v8;
  id v9;
  id v10;
  NSObject *v11;
  _QWORD *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_log_type_t v24;
  uint8_t *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  void *v50;
  uint64_t v51;
  _BYTE v52[48];
  id v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;

  v2 = (SEL *)&unk_1005AA000;
  v3 = &MCFeatureFindMyDeviceAllowed_ptr;
  v4 = &selRef_viewWillAppear_;
  if (objc_msgSend((id)objc_opt_self(CNContactStore), "authorizationStatusForEntityType:", 0) == (id)3)
  {
    v5 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), "init");
    if (qword_1005D2028 != -1)
      swift_once(&qword_1005D2028, sub_1003BFE68);
    v6 = qword_1005F5FB8;
    swift_bridgeObjectRetain(qword_1005F5FB8);
    sub_100053F2C(&qword_1005D2410);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v53 = 0;
    v8 = objc_msgSend(v5, "_ios_meContactWithKeysToFetch:error:", isa, &v53, swift_bridgeObjectRelease(v6).n128_f64[0]);

    v9 = v53;
    if (v8)
    {
      v10 = v53;
      v11 = v8;
      v12 = sub_1003C0A54(v11);
      v13 = objc_msgSend(objc_allocWithZone((Class)ACAccountStore), "init");
      v14 = objc_msgSend(v13, "aa_primaryAppleAccount");

      if (v14)
      {
        v15 = objc_msgSend(v14, "aa_primaryEmail");
        if (v15)
        {
          v16 = v15;
          v17 = static String._unconditionallyBridgeFromObjectiveC(_:)(v15);
          v19 = v18;

        }
        else
        {
          v17 = 0;
          v19 = 0;
        }
        sub_1003C02F4((uint64_t)v12, v17, v19, (uint64_t)v52);
        swift_bridgeObjectRelease(v12);

        swift_bridgeObjectRelease(v19);
        sub_10005DAA0((uint64_t)v52, (uint64_t)&v53, (uint64_t *)&unk_1005E2AC0);
        v29 = v54;
        v4 = &selRef_viewWillAppear_;
        v2 = (SEL *)&unk_1005AA000;
        v3 = &MCFeatureFindMyDeviceAllowed_ptr;
        if (v54)
        {
          v28 = (uint64_t)v53;
          v31 = v55;
          v30 = v56;
          swift_bridgeObjectRelease(v57);
          goto LABEL_31;
        }
      }
      else
      {
        swift_bridgeObjectRelease(v12);
        v26 = sub_1003C0A54(v11);
        v27 = v26;
        if (v26[2])
        {
          v28 = v26[4];
          v29 = v26[5];
          v31 = v26[6];
          v30 = (id)v26[7];
          v32 = v26[9];
          swift_bridgeObjectRetain(v32);
          swift_bridgeObjectRetain(v29);
          swift_bridgeObjectRetain(v30);
          swift_bridgeObjectRelease(v32);
          swift_bridgeObjectRelease(v27);

LABEL_31:
          *a1 = v8;
          a1[1] = v28;
          a1[2] = v29;
          a1[3] = v31;
          a1[4] = v30;
          return;
        }
        swift_bridgeObjectRelease(v26);

        v3 = &MCFeatureFindMyDeviceAllowed_ptr;
      }
    }
    else
    {
      v20 = v53;
      v21 = _convertNSErrorToError(_:)(v9);

      swift_willThrow();
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v22 = type metadata accessor for Logger(0);
      v23 = sub_100056D88(v22, (uint64_t)qword_1005F5748);
      v11 = Logger.logObject.getter(v23);
      v24 = static os_log_type_t.default.getter(v11);
      if (os_log_type_enabled(v11, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v25 = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, v24, "No access to me card. Use device's primary account.", v25, 2u);
        swift_slowDealloc(v25, -1, -1);
      }

      swift_errorRelease(v21);
    }

  }
  v33 = objc_msgSend(objc_allocWithZone((Class)v3[32]), v2[508]);
  v30 = objc_msgSend(v33, v4[372]);

  if (!v30)
  {
    v8 = 0;
    v28 = 0;
    v29 = 0;
    v31 = 0;
    goto LABEL_31;
  }
  v34 = objc_msgSend(v30, "aa_primaryEmail");
  if (v34)
  {
    v35 = v34;
    v36 = static String._unconditionallyBridgeFromObjectiveC(_:)(v34);
    v38 = v37;

    v39 = objc_msgSend(v30, "aa_firstName");
    if (v39)
    {
      v40 = v39;
      v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v39);
      v43 = v42;

    }
    else
    {
      v41 = 0;
      v43 = 0;
    }
    v44 = objc_msgSend(v30, "aa_lastName");
    if (v44)
    {
      v45 = v44;
      v46 = static String._unconditionallyBridgeFromObjectiveC(_:)(v44);
      v48 = v47;

    }
    else
    {
      v46 = 0;
      v48 = 0;
    }
    v8 = (id)sub_1003BF184(v36, v38, v41, v43, v46, v48, 1);
    swift_bridgeObjectRelease(v38);
    swift_bridgeObjectRelease(v48);
    v49 = objc_msgSend(v30, "aa_primaryEmail", swift_bridgeObjectRelease(v43).n128_f64[0]);
    if (v49)
    {
      v50 = v49;
      v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v49);
      v29 = v51;

      v31 = 0;
      v30 = 0;
      goto LABEL_31;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1003BFE68()
{
  uint64_t result;

  result = sub_1003BFE84();
  qword_1005F5FB8 = result;
  return result;
}

uint64_t sub_1003BFE84()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  NSString *v3;
  NSString *v4;
  NSString *v5;
  NSString *v6;
  NSString *v7;
  NSString *v8;
  NSString *v9;
  NSString *v10;
  NSString *v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v0 = sub_100053F2C(&qword_1005D2F10);
  v1 = swift_allocObject(v0, 104, 7);
  *(_OWORD *)(v1 + 16) = xmmword_10048F300;
  *(_QWORD *)(v1 + 32) = CNContactTypeKey;
  *(_QWORD *)(v1 + 40) = CNContactIdentifierKey;
  *(_QWORD *)(v1 + 48) = CNContactGivenNameKey;
  *(_QWORD *)(v1 + 56) = CNContactFamilyNameKey;
  *(_QWORD *)(v1 + 64) = CNContactMiddleNameKey;
  *(_QWORD *)(v1 + 72) = CNContactNicknameKey;
  *(_QWORD *)(v1 + 80) = CNContactEmailAddressesKey;
  *(_QWORD *)(v1 + 88) = CNContactPhoneNumbersKey;
  *(_QWORD *)(v1 + 96) = CNContactPostalAddressesKey;
  v21 = v1;
  specialized Array._endMutation()(v1);
  v2 = (void *)objc_opt_self(CNContactFormatter);
  v3 = CNContactTypeKey;
  v4 = CNContactIdentifierKey;
  v5 = CNContactGivenNameKey;
  v6 = CNContactFamilyNameKey;
  v7 = CNContactMiddleNameKey;
  v8 = CNContactNicknameKey;
  v9 = CNContactEmailAddressesKey;
  v10 = CNContactPhoneNumbersKey;
  v11 = CNContactPostalAddressesKey;
  v12 = objc_msgSend(v2, "descriptorForRequiredKeysForStyle:", 0);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v12);
  v14 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v14 >= v13 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v13 > 1, v14 + 1, 1);
  v15 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v14, v12);
  specialized Array._endMutation()(v15);
  v16 = objc_msgSend((id)objc_opt_self(CNContactViewController), "descriptorForRequiredKeys");
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v16);
  v18 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v17 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x18);
  if (v18 >= v17 >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v17 > 1, v18 + 1, 1);
  v19 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v18, v16);
  specialized Array._endMutation()(v19);
  return v21;
}

uint64_t sub_1003C0098(id *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v7 = objc_msgSend(*a1, "value");
  v8 = objc_msgSend(v7, "stringValue");

  static String._unconditionallyBridgeFromObjectiveC(_:)(v8);
  v10 = v9;

  v11 = sub_1000517B8();
  v12 = StringProtocol.components(separatedBy:)(a2, &type metadata for String, v11);
  swift_bridgeObjectRelease(v10);
  v13 = sub_100053F2C(&qword_1005D39B0);
  v14 = sub_10011A508();
  v15 = BidirectionalCollection<>.joined(separator:)(0, 0xE000000000000000, v13, v14);
  v17 = v16;
  swift_bridgeObjectRelease(v12);
  if (v15 == a3 && v17 == a4)
  {
    v18 = 1;
  }
  else
  {
    v18 = _stringCompareWithSmolCheck(_:_:expecting:)(v15, v17, a3, a4, 0);
    a4 = v17;
  }
  swift_bridgeObjectRelease(a4);
  return v18 & 1;
}

id sub_1003C02A0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMContactsUtilities();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMContactsUtilities()
{
  return objc_opt_self(_TtC6FindMy19FMContactsUtilities);
}

uint64_t sub_1003C02F4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  BOOL v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;

  v5 = *(_QWORD *)(result + 16);
  if (!v5)
  {
    v9 = 0;
    a3 = 0;
    v11 = 0;
    v13 = 0;
    v15 = 0uLL;
    goto LABEL_15;
  }
  v8 = result + 40;
  while (1)
  {
    if (!a3)
      goto LABEL_3;
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(_QWORD *)v8;
    v11 = *(_QWORD *)(v8 + 8);
    v12 = *(_OWORD *)(v8 + 16);
    v13 = *(_QWORD *)(v8 + 32);
    v14 = v9 == a2 && v10 == a3;
    v17 = *(_OWORD *)(v8 + 16);
    if (v14)
      break;
    result = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v10, a2, a3, 0);
    if ((result & 1) != 0)
    {
      a3 = v10;
      *(_QWORD *)&v12 = v17;
      goto LABEL_14;
    }
LABEL_3:
    v8 += 48;
    if (!--v5)
    {
      v9 = 0;
      a3 = 0;
      v11 = 0;
      v13 = 0;
      v15 = 0uLL;
      goto LABEL_15;
    }
  }
  v9 = a2;
LABEL_14:
  v16 = v12;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRetain(v10);
  result = swift_bridgeObjectRetain(v16);
  v15 = v17;
LABEL_15:
  *(_QWORD *)a4 = v9;
  *(_QWORD *)(a4 + 8) = a3;
  *(_QWORD *)(a4 + 16) = v11;
  *(_OWORD *)(a4 + 24) = v15;
  *(_QWORD *)(a4 + 40) = v13;
  return result;
}

uint64_t sub_1003C0414@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;

  v5 = *(_QWORD *)(result + 16);
  if (v5)
  {
    v8 = result + 40;
    while (1)
    {
      v9 = *(_QWORD *)(v8 - 8);
      v10 = *(_QWORD *)v8;
      v11 = *(_QWORD *)(v8 + 8);
      v15 = *(_OWORD *)(v8 + 16);
      v12 = *(_QWORD *)(v8 + 32);
      if (v9 == a2 && v10 == a3)
        break;
      result = _stringCompareWithSmolCheck(_:_:expecting:)(v9, v10, a2, a3, 0);
      if ((result & 1) != 0)
        goto LABEL_12;
      v8 += 48;
      if (!--v5)
      {
        v9 = 0;
        v10 = 0;
        v11 = 0;
        v12 = 0;
        v14 = 0uLL;
        goto LABEL_13;
      }
    }
    v9 = a2;
    v10 = a3;
LABEL_12:
    swift_bridgeObjectRetain(v10);
    swift_bridgeObjectRetain(v15);
    result = swift_bridgeObjectRetain(v12);
    v14 = v15;
  }
  else
  {
    v9 = 0;
    v10 = 0;
    v11 = 0;
    v12 = 0;
    v14 = 0uLL;
  }
LABEL_13:
  *(_QWORD *)a4 = v9;
  *(_QWORD *)(a4 + 8) = v10;
  *(_QWORD *)(a4 + 16) = v11;
  *(_OWORD *)(a4 + 24) = v14;
  *(_QWORD *)(a4 + 40) = v12;
  return result;
}

void *sub_1003C0528(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  NSString v8;
  char v9;
  uint64_t v10;

  if ((unint64_t)a1 >> 62)
    goto LABEL_13;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a1);
  for (; v2; v2 = _CocoaArrayWrapper.endIndex.getter(v10))
  {
    sub_100006C5C(0, (unint64_t *)&qword_1005D7A60, NSObject_ptr);
    v3 = 4;
    while (1)
    {
      v4 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v3 - 4, a1)
         : *(id *)(a1 + 8 * v3);
      v5 = v4;
      v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1))
        break;
      v7 = objc_msgSend(v4, "value");
      v8 = String._bridgeToObjectiveC()();
      v9 = static NSObject.== infix(_:_:)(v7, v8);

      if ((v9 & 1) != 0)
      {
        swift_bridgeObjectRelease(a1);
        return v5;
      }

      ++v3;
      if (v6 == v2)
        goto LABEL_17;
    }
    __break(1u);
LABEL_13:
    if (a1 < 0)
      v10 = a1;
    else
      v10 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
  }
LABEL_17:
  swift_bridgeObjectRelease(a1);
  return 0;
}

uint64_t sub_1003C06A0(uint64_t a1, unint64_t a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  int v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;

  v50 = a3;
  v5 = type metadata accessor for CharacterSet(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v47 - v11;
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v47 - v14;
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v47 - v17;
  v19 = __chkstk_darwin(v16);
  v21 = (char *)&v47 - v20;
  v22 = __chkstk_darwin(v19);
  v24 = (char *)&v47 - v23;
  v25 = __chkstk_darwin(v22);
  if (!a2)
    goto LABEL_7;
  v27 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v27 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v27)
    goto LABEL_7;
  v49 = (char *)&v47 - v26;
  v28 = static CharacterSet.decimalDigits.getter(v25);
  static CharacterSet.whitespacesAndNewlines.getter(v28);
  v48 = a1;
  CharacterSet.union(_:)(v12);
  v29 = *(void (**)(char *, uint64_t))(v6 + 8);
  v29(v12, v5);
  v30 = ((uint64_t (*)(char *, uint64_t))v29)(v15, v5);
  static CharacterSet.controlCharacters.getter(v30);
  CharacterSet.union(_:)(v15);
  v29(v15, v5);
  v29(v18, v5);
  CharacterSet.init(charactersIn:)(757671979, 0xE400000000000000);
  CharacterSet.union(_:)(v18);
  v29(v18, v5);
  v31 = ((uint64_t (*)(char *, uint64_t))v29)(v21, v5);
  v32 = v49;
  CharacterSet.inverted.getter(v31);
  v29(v24, v5);
  v53 = v48;
  v54 = a2;
  v33 = sub_1000517B8();
  v34 = StringProtocol.rangeOfCharacter(from:options:range:)(v32, 0, 0, 0, 1, &type metadata for String, v33);
  if ((v35 & 1) == 0)
  {
    v29(v32, v5);
LABEL_7:
    v36 = 0;
    return v36 & 1;
  }
  static CharacterSet.decimalDigits.getter(v34);
  CharacterSet.init(charactersIn:)(43, 0xE100000000000000);
  CharacterSet.union(_:)(v18);
  v29(v18, v5);
  v38 = ((uint64_t (*)(char *, uint64_t))v29)(v21, v5);
  CharacterSet.inverted.getter(v38);
  v29(v24, v5);
  v39 = v48;
  v53 = v48;
  v54 = a2;
  swift_bridgeObjectRetain(a2);
  v51 = v39;
  v52 = a2;
  v40 = StringProtocol.rangeOfCharacter(from:options:range:)(v9, 0, 0, 0, 1, &type metadata for String, v33);
  v41 = v39;
  v42 = a2;
  v43 = v39;
  if ((v44 & 1) == 0)
  {
    do
    {
      String.removeSubrange(_:)(v40);
      v41 = v53;
      v42 = v54;
      v51 = v53;
      v52 = v54;
      v40 = StringProtocol.rangeOfCharacter(from:options:range:)(v9, 0, 0, 0, 1, &type metadata for String, v33);
    }
    while ((v45 & 1) == 0);
    v43 = v39;
  }
  if ((v50 & 1) != 0)
  {
    if (v41 == v43 && v42 == a2)
      v36 = 0;
    else
      v36 = _stringCompareWithSmolCheck(_:_:expecting:)(v43, a2, v41, v42, 0) ^ 1;
  }
  else
  {
    v36 = 1;
  }
  v29(v9, v5);
  v29(v49, v5);
  return v36 & 1;
}

_QWORD *sub_1003C0A54(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  char **v15;
  _QWORD *v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  _QWORD *result;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  Swift::String v30;
  unint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  NSString v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSString v45;
  NSString v46;
  uint64_t v47;
  CFAllocatorRef v48;
  __n128 v49;
  void *v50;
  id v51;
  uint64_t String;
  void *v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  id v59;
  id v60;
  void *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  BOOL v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  CFAllocatorRef v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v2 = type metadata accessor for CharacterSet(0);
  v81 = *(_QWORD *)(v2 - 8);
  v82 = v2;
  __chkstk_darwin(v2);
  v4 = (uint64_t)&v76 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend((id)objc_opt_self(CNContactFormatter), "stringFromContact:style:", a1, 0);
  if (v5)
  {
    v6 = v5;
    v88 = static String._unconditionallyBridgeFromObjectiveC(_:)(v5);
    v8 = v7;

  }
  else
  {
    v88 = 0;
    v8 = 0;
  }
  v9 = objc_msgSend(a1, "phoneNumbers");
  v10 = sub_100053F2C((uint64_t *)&unk_1005DF490);
  v11 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v9, v10);

  v12 = objc_msgSend(a1, "emailAddresses");
  v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v10);

  if ((unint64_t)v11 >> 62)
    goto LABEL_64;
  v14 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v15 = &selRef_handleFenceTapWithGestureRecognizer_;
    v89 = v8;
    v83 = v13;
    if (v14)
      break;
    swift_bridgeObjectRelease(v11);
    v16 = _swiftEmptyArrayStorage;
    if (!((unint64_t)v13 >> 62))
      goto LABEL_37;
LABEL_55:
    if (v13 < 0)
      v74 = v13;
    else
      v74 = v13 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v13);
    v87 = _CocoaArrayWrapper.endIndex.getter(v74);
    swift_bridgeObjectRelease(v13);
    if (!v87)
      goto LABEL_59;
LABEL_38:
    v86 = (id)(v13 & 0xC000000000000001);
    v4 = 4;
    while (1)
    {
      v59 = v86 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4 - 4, v13) : *(id *)(v13 + 8 * v4);
      v11 = (uint64_t)v59;
      v13 = v4 - 3;
      if (__OFADD__(v4 - 4, 1))
        break;
      v60 = objc_msgSend(v59, v15[139]);
      if (v60)
      {

        result = objc_msgSend((id)v11, v15[139]);
        if (!result)
          goto LABEL_69;
        v61 = result;
        v62 = objc_msgSend((id)objc_opt_self(CNLabeledValue), "localizedStringForLabel:", result);

        v63 = static String._unconditionallyBridgeFromObjectiveC(_:)(v62);
        v65 = v64;

      }
      else
      {
        v63 = 0;
        v65 = 0;
      }
      v66 = objc_msgSend((id)v11, "value");
      v67 = static String._unconditionallyBridgeFromObjectiveC(_:)(v66);
      v69 = v68;

      swift_bridgeObjectRetain(v8);
      if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
        v16 = sub_100070344(0, v16[2] + 1, 1, v16);
      v71 = v16[2];
      v70 = v16[3];
      if (v71 >= v70 >> 1)
        v16 = sub_100070344((_QWORD *)(v70 > 1), v71 + 1, 1, v16);
      v16[2] = v71 + 1;
      v72 = &v16[6 * v71];
      v72[4] = v67;
      v72[5] = v69;
      v72[6] = v63;
      v72[7] = v65;
      v8 = v89;
      v72[8] = v88;
      v72[9] = v8;

      ++v4;
      v73 = v13 == v87;
      v13 = v83;
      v15 = &selRef_handleFenceTapWithGestureRecognizer_;
      if (v73)
      {
        swift_bridgeObjectRelease(v8);
        goto LABEL_60;
      }
    }
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    if (v11 < 0)
      v75 = v11;
    else
      v75 = v11 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v11);
    v14 = _CocoaArrayWrapper.endIndex.getter(v75);
    swift_bridgeObjectRelease(v11);
  }
  v80 = v11 & 0xC000000000000001;
  v78 = kCFAllocatorDefault;
  v16 = _swiftEmptyArrayStorage;
  v17 = 4;
  v79 = v14;
  v77 = v11;
  do
  {
    v13 = v17 - 4;
    if (v80)
      v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v17 - 4, v11);
    else
      v18 = *(id *)(v11 + 8 * v17);
    v19 = v18;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_62;
    }
    v20 = objc_msgSend(v18, "label");
    v87 = v17 - 3;
    if (v20)
    {

      result = objc_msgSend(v19, "label");
      if (!result)
      {
        __break(1u);
LABEL_69:
        __break(1u);
        return result;
      }
      v22 = result;
      v23 = objc_msgSend((id)objc_opt_self(CNLabeledValue), "localizedStringForLabel:", result);

      v24 = static String._unconditionallyBridgeFromObjectiveC(_:)(v23);
      v84 = v25;
      v85 = v24;

    }
    else
    {
      v84 = 0;
      v85 = 0;
    }
    v86 = v19;
    v26 = objc_msgSend(v19, "value");
    v27 = objc_msgSend(v26, "stringValue");

    v28 = static String._unconditionallyBridgeFromObjectiveC(_:)(v27);
    v8 = v29;

    static CharacterSet.decimalDigits.getter();
    v30._countAndFlagsBits = 0x2D232A29282BLL;
    v30._object = (void *)0xE600000000000000;
    CharacterSet.insert(charactersIn:)(v30);
    v90 = v28;
    v91 = v8;
    v31 = sub_1000517B8();
    v32 = StringProtocol.rangeOfCharacter(from:options:range:)(v4, 0, 0, 0, 1, &type metadata for String, v31);
    if ((v33 & 1) != 0)
    {
      swift_bridgeObjectRetain(v8);
      v38 = v28;
      v40 = v8;
    }
    else
    {
      v90 = v28;
      v91 = v8;
      v34 = String.Index.utf16Offset<A>(in:)(&v90, v32, &type metadata for String, v31);
      v35 = String.count.getter(v28, v8);
      v13 = v35 - v34;
      if (__OFSUB__(v35, v34))
        goto LABEL_63;
      v36 = String._bridgeToObjectiveC()();
      v37 = objc_msgSend(v36, "substringWithRange:", v34, v13);

      v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v37);
      v40 = v39;

    }
    v41 = HIBYTE(v40) & 0xF;
    if ((v40 & 0x2000000000000000) == 0)
      v41 = v38 & 0xFFFFFFFFFFFFLL;
    if (!v41)
    {
      (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v4, v82);
      swift_bridgeObjectRelease(v8);
      goto LABEL_31;
    }
    v42 = v4;
    sub_1000F2A78();
    v44 = v43;
    v45 = String._bridgeToObjectiveC()();
    v46 = String._bridgeToObjectiveC()();
    v47 = v44;
    v48 = v78;
    v49 = swift_bridgeObjectRelease(v47);
    v50 = (void *)CFPhoneNumberCreate(v48, v45, v46, v49);

    if (v50)
    {
      v51 = v50;
      String = CFPhoneNumberCreateString(v48, v51, 7);
      v4 = v42;
      if (!String)
      {
        (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v42, v82);
        swift_bridgeObjectRelease(v8);

        goto LABEL_30;
      }
      v53 = (void *)String;
      swift_bridgeObjectRelease(v40);
      v38 = static String._unconditionallyBridgeFromObjectiveC(_:)(v53);
      v40 = v54;

      (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v42, v82);
    }
    else
    {
      v4 = v42;
      (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v42, v82);
    }
    swift_bridgeObjectRelease(v8);
LABEL_30:
    v11 = v77;
LABEL_31:
    v8 = v89;
    swift_bridgeObjectRetain(v89);
    v15 = &selRef_handleFenceTapWithGestureRecognizer_;
    if ((swift_isUniquelyReferenced_nonNull_native(v16) & 1) == 0)
      v16 = sub_100070344(0, v16[2] + 1, 1, v16);
    v56 = v16[2];
    v55 = v16[3];
    if (v56 >= v55 >> 1)
      v16 = sub_100070344((_QWORD *)(v55 > 1), v56 + 1, 1, v16);
    v16[2] = v56 + 1;
    v57 = &v16[6 * v56];
    v57[4] = v38;
    v57[5] = v40;
    v58 = v84;
    v57[6] = v85;
    v57[7] = v58;
    v57[8] = v88;
    v57[9] = v8;

    ++v17;
  }
  while (v87 != v79);
  swift_bridgeObjectRelease(v11);
  v13 = v83;
  if (v83 >> 62)
    goto LABEL_55;
LABEL_37:
  v87 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v87)
    goto LABEL_38;
LABEL_59:
  swift_bridgeObjectRelease(v13);
  v13 = v8;
LABEL_60:
  swift_bridgeObjectRelease(v13);
  return v16;
}

id sub_1003C1200(uint64_t a1, NSString a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  sub_100006C5C(0, (unint64_t *)&qword_1005D8190, NSPredicate_ptr);
  v3 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
  v4 = swift_allocObject(v3, 72, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100481740;
  *(_QWORD *)(v4 + 56) = &type metadata for String;
  *(_QWORD *)(v4 + 64) = sub_100071E88();
  *(_QWORD *)(v4 + 32) = 0xD000000000000029;
  *(_QWORD *)(v4 + 40) = 0x80000001004ACC10;
  v5 = (void *)NSPredicate.init(format:_:)(0x54414D20464C4553, 0xEF40252053454843, v4);
  if (a2)
    a2 = String._bridgeToObjectiveC()();
  v6 = objc_msgSend(v5, "evaluateWithObject:", a2);

  swift_unknownObjectRelease(a2);
  return v6;
}

void *sub_1003C1304(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  double v16;
  id v17;
  void *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  __n128 v32;
  id v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = type metadata accessor for CharacterSet(0);
  v6 = *(_QWORD *)(v35 - 8);
  v7 = __chkstk_darwin(v35);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v35 - v10;
  v12 = objc_msgSend(a3, "emailAddresses");
  v13 = sub_100053F2C((uint64_t *)&unk_1005DF490);
  v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v12, v13);

  swift_bridgeObjectRetain(a2);
  v15 = sub_1003C0528(v14);
  swift_bridgeObjectRelease(v14);
  *(_QWORD *)&v16 = swift_bridgeObjectRelease(a2).n128_u64[0];
  if (v15)
  {
    v17 = objc_msgSend(v15, "identifier", v16);

    v18 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v17);
  }
  else
  {
    v19 = CharacterSet.init(charactersIn:)(0x3736353433323130, 0xEA00000000003938);
    CharacterSet.inverted.getter(v19);
    v20 = *(void (**)(char *, uint64_t))(v6 + 8);
    v21 = v35;
    v20(v9, v35);
    v36 = a1;
    v37 = a2;
    v22 = sub_1000517B8();
    v23 = StringProtocol.components(separatedBy:)(v11, &type metadata for String, v22);
    v36 = v23;
    v24 = sub_100053F2C(&qword_1005D39B0);
    v25 = sub_10011A508();
    v26 = BidirectionalCollection<>.joined(separator:)(0, 0xE000000000000000, v24, v25);
    v28 = v27;
    v29 = objc_msgSend(a3, "phoneNumbers", swift_bridgeObjectRelease(v23).n128_f64[0]);
    v30 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v29, v13);

    __chkstk_darwin(v31);
    *(&v35 - 4) = (uint64_t)v11;
    *(&v35 - 3) = v26;
    *(&v35 - 2) = v28;
    v18 = sub_1003DB974(sub_1003C19CC, (uint64_t)(&v35 - 6), v30);
    swift_bridgeObjectRelease(v28);
    v32 = swift_bridgeObjectRelease(v30);
    if (v18)
    {
      v33 = objc_msgSend(v18, "identifier", v32.n128_f64[0]);

      v18 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)(v33);
      v20(v11, v21);
    }
    else
    {
      ((void (*)(char *, uint64_t, __n128))v20)(v11, v21, v32);
    }
  }
  return v18;
}

uint64_t sub_1003C15C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  unint64_t v20;
  uint64_t v21;
  _QWORD v23[2];

  v4 = type metadata accessor for CharacterSet(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)v23 - v10;
  v12 = __chkstk_darwin(v9);
  v14 = (char *)v23 - v13;
  v15 = __chkstk_darwin(v12);
  v17 = (char *)v23 - v16;
  v18 = static CharacterSet.whitespacesAndNewlines.getter(v15);
  static CharacterSet.controlCharacters.getter(v18);
  CharacterSet.union(_:)(v8);
  v19 = *(void (**)(char *, uint64_t))(v5 + 8);
  v19(v8, v4);
  v19(v11, v4);
  CharacterSet.init(charactersIn:)(12369903, 0xA300000000000000);
  CharacterSet.union(_:)(v11);
  v19(v11, v4);
  v19(v14, v4);
  v23[0] = a1;
  v23[1] = a2;
  v20 = sub_1000517B8();
  v21 = StringProtocol.trimmingCharacters(in:)(v17, &type metadata for String, v20);
  v19(v17, v4);
  return v21;
}

id sub_1003C1750()
{
  id v0;
  NSObject *v1;
  uint64_t v2;
  Class isa;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  id v14;

  v0 = 0;
  if (objc_msgSend((id)objc_opt_self(CNContactStore), "authorizationStatusForEntityType:", 0) == (id)3)
  {
    v1 = objc_msgSend(objc_allocWithZone((Class)CNContactStore), "init");
    if (qword_1005D2028 != -1)
      swift_once(&qword_1005D2028, sub_1003BFE68);
    v2 = qword_1005F5FB8;
    swift_bridgeObjectRetain(qword_1005F5FB8);
    sub_100053F2C(&qword_1005D2410);
    isa = Array._bridgeToObjectiveC()().super.isa;
    v14 = 0;
    v0 = -[NSObject _ios_meContactWithKeysToFetch:error:](v1, "_ios_meContactWithKeysToFetch:error:", isa, &v14, swift_bridgeObjectRelease(v2).n128_f64[0]);

    v4 = v14;
    if (!v0)
    {
      v5 = v4;
      v6 = _convertNSErrorToError(_:)(v4);

      swift_willThrow(v7);
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v8 = type metadata accessor for Logger(0);
      v9 = sub_100056D88(v8, (uint64_t)qword_1005F5748);
      v10 = Logger.logObject.getter(v9);
      v11 = static os_log_type_t.default.getter(v10);
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v12 = 0;
        _os_log_impl((void *)&_mh_execute_header, v10, v11, "No access to me card. Use device's primary account.", v12, 2u);
        swift_slowDealloc(v12, -1, -1);
      }

      swift_errorRelease(v6);
      v0 = 0;
      v1 = v10;
    }

  }
  return v0;
}

uint64_t *sub_1003C195C(uint64_t *a1)
{
  sub_1003C1990(*a1, a1[1], a1[2], a1[3], a1[4], a1[5]);
  return a1;
}

uint64_t sub_1003C1990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease(a2);
    swift_bridgeObjectRelease(a4);
    return swift_bridgeObjectRelease(a6);
  }
  return result;
}

uint64_t sub_1003C19CC(id *a1)
{
  uint64_t *v1;

  return sub_1003C0098(a1, v1[2], v1[3], v1[4]) & 1;
}

void sub_1003C19EC()
{
  qword_1005E2AD8 = 0x4030000000000000;
}

void sub_1003C19FC()
{
  qword_1005E2AE0 = 0x3FD8000000000000;
}

void sub_1003C1A0C()
{
  qword_1005E2AE8 = 0x4036000000000000;
}

void sub_1003C1A1C()
{
  qword_1005E2AF0 = 0x4061800000000000;
}

double sub_1003C1A30()
{
  double result;

  result = 20.0;
  xmmword_1005E2AF8 = xmmword_10048F340;
  *(_OWORD *)&qword_1005E2B08 = xmmword_10048F350;
  return result;
}

uint64_t sub_1003C1A50(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  NSURL *v15;
  void *v16;
  void *v17;
  _BYTE v20[24];

  v3 = sub_100053F2C((uint64_t *)&unk_1005D3470);
  __chkstk_darwin(v3);
  v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = type metadata accessor for URL(0);
  v7 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10 = (uint64_t)&v1[OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_productImageAdjustmentsURL];
  swift_beginAccess(&v1[OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_productImageAdjustmentsURL], v20, 33, 0);
  sub_1003C2874(a1, v10);
  swift_endAccess(v20);
  sub_1000A1940(v10, (uint64_t)v5);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_10009ADFC((uint64_t)v5);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v9, v5, v6);
    v11 = objc_msgSend(v1, "traitCollection");
    v12 = objc_msgSend(v11, "userInterfaceStyle");

    if (v12 == (id)2)
      v13 = 1;
    else
      v13 = 2;
    v14 = *(id *)&v1[OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_productImageView];
    URL._bridgeToObjectiveC()(v15);
    v17 = v16;
    objc_msgSend(v14, "updateViewForAssetType:adjustmentsURL:", v13, v16);

    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  }
  return sub_10009ADFC(a1);
}

id sub_1003C1C0C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  objc_super v12;

  v1 = &v0[OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_productImageAdjustmentsURL];
  v2 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_stackView;
  v4 = objc_allocWithZone((Class)UIStackView);
  v5 = v0;
  *(_QWORD *)&v0[v3] = objc_msgSend(v4, "init");
  v6 = OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_titleLabel;
  *(_QWORD *)&v5[v6] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v7 = OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_primaryLabel;
  *(_QWORD *)&v5[v7] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v8 = OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_secondaryLabel;
  *(_QWORD *)&v5[v8] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v9 = OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_productImageView;
  *(_QWORD *)&v5[v9] = objc_msgSend(objc_allocWithZone((Class)SFAdjustedImageView), "init");

  v12.receiver = v5;
  v12.super_class = (Class)type metadata accessor for FMProductActionHeaderView(0);
  v10 = objc_msgSendSuper2(&v12, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_1003C1E10();

  return v10;
}

id sub_1003C1E10()
{
  char *v0;
  char *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t inited;
  NSString *v17;
  unint64_t v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  uint64_t v41;
  Class isa;
  id v43;
  double v44;
  double v45;
  uint64_t v47;
  _BYTE v48[48];

  v1 = v0;
  sub_1003C253C();
  objc_msgSend(v0, "setAxis:", 1);
  objc_msgSend(v0, "setAlignment:", 0);
  if (qword_1005D2050 != -1)
    swift_once(&qword_1005D2050, sub_1003C1A30);
  objc_msgSend(v0, "setDirectionalLayoutMargins:", xmmword_1005E2AF8, *(double *)&qword_1005E2B08, unk_1005E2B10);
  objc_msgSend(v0, "setLayoutMarginsRelativeArrangement:", 1);
  objc_msgSend(v0, "setBaselineRelativeArrangement:", 1);
  v47 = OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_productImageView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_productImageView], "setContentMode:", 1);
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_primaryLabel];
  v3 = *(void **)&v1[OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_secondaryLabel];
  v4 = *(id *)&v1[OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_titleLabel];
  v5 = v2;
  v6 = v3;
  objc_msgSend(v4, "setNumberOfLines:", 0);
  objc_msgSend(v4, "setTextAlignment:", 1);
  objc_msgSend(v4, "setAdjustsFontForContentSizeCategory:", 1);
  v7 = v5;
  objc_msgSend(v7, "setNumberOfLines:", 0);
  objc_msgSend(v7, "setTextAlignment:", 1);
  objc_msgSend(v7, "setAdjustsFontForContentSizeCategory:", 1);

  v8 = v6;
  objc_msgSend(v8, "setNumberOfLines:", 0);
  objc_msgSend(v8, "setTextAlignment:", 1);
  objc_msgSend(v8, "setAdjustsFontForContentSizeCategory:", 1);

  v9 = (void *)objc_opt_self(UIFont);
  v10 = objc_msgSend(v9, "preferredFontForTextStyle:", UIFontTextStyleLargeTitle);
  v11 = (void *)sub_10003CEE8(2);

  objc_msgSend(v4, "setFont:", v11);
  v12 = (void *)objc_opt_self(UIColor);
  v13 = objc_msgSend(v12, "labelColor");
  objc_msgSend(v4, "setTextColor:", v13);

  v14 = objc_msgSend(v9, "preferredFontForTextStyle:", UIFontTextStyleHeadline);
  v15 = sub_100053F2C((uint64_t *)&unk_1005D7EA0);
  inited = swift_initStackObject(v15, v48);
  *(_OWORD *)(inited + 16) = xmmword_100481740;
  *(_QWORD *)(inited + 32) = UIFontWeightTrait;
  *(UIFontWeight *)(inited + 40) = UIFontWeightSemibold;
  v17 = UIFontWeightTrait;
  v18 = sub_10004907C(inited);
  v19 = sub_100049188(v18);

  swift_bridgeObjectRelease(v18);
  v20 = (void *)sub_10003CEE8(0x8000);

  objc_msgSend(v7, "setFont:", v20);
  v21 = objc_msgSend(v12, "labelColor");
  objc_msgSend(v7, "setTextColor:", v21);

  v22 = objc_msgSend(v9, "preferredFontForTextStyle:");
  v23 = (void *)sub_10003CEE8(0x8000);

  objc_msgSend(v8, "setFont:", v23);
  v24 = objc_msgSend(v12, "secondaryLabelColor");
  objc_msgSend(v8, "setTextColor:", v24);

  v25 = *(void **)&v1[v47];
  v26 = v4;
  v27 = v7;
  v28 = v8;
  v29 = v25;
  objc_msgSend(v26, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v1, "addArrangedSubview:", v26);

  v30 = v29;
  objc_msgSend(v30, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v1, "addArrangedSubview:", v30);

  v31 = v27;
  objc_msgSend(v31, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v1, "addArrangedSubview:", v31);

  v32 = v28;
  objc_msgSend(v32, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(v1, "addArrangedSubview:", v32);

  if (qword_1005D2030 != -1)
    swift_once(&qword_1005D2030, sub_1003C19EC);
  objc_msgSend(v1, "setCustomSpacing:afterView:", v26, *(double *)&qword_1005E2AD8);
  v33 = (void *)objc_opt_self(NSLayoutConstraint);
  v34 = sub_100053F2C(&qword_1005D2F10);
  v35 = swift_allocObject(v34, 48, 7);
  *(_OWORD *)(v35 + 16) = xmmword_1004820B0;
  v36 = objc_msgSend(*(id *)&v1[v47], "heightAnchor");
  v37 = objc_msgSend(*(id *)&v1[v47], "widthAnchor");
  if (qword_1005D2038 != -1)
    swift_once(&qword_1005D2038, sub_1003C19FC);
  v38 = objc_msgSend(v36, "constraintLessThanOrEqualToAnchor:multiplier:", v37, *(double *)&qword_1005E2AE0);

  *(_QWORD *)(v35 + 32) = v38;
  v39 = objc_msgSend(*(id *)&v1[v47], "heightAnchor");
  if (qword_1005D2048 != -1)
    swift_once(&qword_1005D2048, sub_1003C1A1C);
  v40 = objc_msgSend(v39, "constraintEqualToConstant:", *(double *)&qword_1005E2AF0);

  *(_QWORD *)(v35 + 40) = v40;
  specialized Array._endMutation()(v41);
  sub_100048C64();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v33, "activateConstraints:", isa, swift_bridgeObjectRelease(v35).n128_f64[0]);

  sub_1003C253C();
  v43 = objc_msgSend(objc_allocWithZone((Class)UIFontMetrics), "initForTextStyle:", UIFontTextStyleBody);
  if (qword_1005D2040 != -1)
    swift_once(&qword_1005D2040, sub_1003C1A0C);
  objc_msgSend(v43, "scaledValueForValue:", *(double *)&qword_1005E2AE8);
  v45 = v44;

  return objc_msgSend(v1, "setSpacing:", v45);
}

uint64_t sub_1003C253C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  NSURL *v14;
  void *v15;
  void *v16;
  _BYTE v18[24];

  v1 = sub_100053F2C((uint64_t *)&unk_1005D3470);
  __chkstk_darwin(v1);
  v3 = &v18[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v4 = type metadata accessor for URL(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = (uint64_t)&v0[OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_productImageAdjustmentsURL];
  swift_beginAccess(&v0[OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_productImageAdjustmentsURL], v18, 0, 0);
  sub_1000A1940(v8, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    return sub_10009ADFC((uint64_t)v3);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  v10 = objc_msgSend(v0, "traitCollection");
  v11 = objc_msgSend(v10, "userInterfaceStyle");

  if (v11 == (id)2)
    v12 = 1;
  else
    v12 = 2;
  v13 = *(id *)&v0[OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_productImageView];
  URL._bridgeToObjectiveC()(v14);
  v16 = v15;
  objc_msgSend(v13, "updateViewForAssetType:adjustmentsURL:", v12, v15);

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

id sub_1003C2704()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMProductActionHeaderView(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1003C27B0()
{
  return type metadata accessor for FMProductActionHeaderView(0);
}

uint64_t type metadata accessor for FMProductActionHeaderView(uint64_t a1)
{
  uint64_t result;

  result = qword_1005E2B68;
  if (!qword_1005E2B68)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMProductActionHeaderView);
  return result;
}

void sub_1003C27F4(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[6];

  sub_10014EF1C(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
    swift_updateClassMetadata2(a1, 256, 6, v4, a1 + 80);
  }
}

uint64_t sub_1003C2874(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C((uint64_t *)&unk_1005D3470);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_1003C28BC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = &v0[OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_productImageAdjustmentsURL];
  v2 = type metadata accessor for URL(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_stackView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  v4 = OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_titleLabel;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v5 = OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_primaryLabel;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v6 = OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_secondaryLabel;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v7 = OBJC_IVAR____TtC6FindMy25FMProductActionHeaderView_productImageView;
  *(_QWORD *)&v0[v7] = objc_msgSend(objc_allocWithZone((Class)SFAdjustedImageView), "init");

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMProductActionHeaderView.swift", 38, 2, 76, 0);
  __break(1u);
}

Swift::String *UTAlertExtensionIdentifierKey.unsafeMutableAddressor()
{
  return &UTAlertExtensionIdentifierKey;
}

Swift::String *UTAlertExtensionUserInfoContextKey.unsafeMutableAddressor()
{
  return &UTAlertExtensionUserInfoContextKey;
}

FindMy::UTAlertContextMode_optional __swiftcall UTAlertContextMode.init(rawValue:)(Swift::String rawValue)
{
  void *object;
  Swift::String v2;
  Swift::Int v3;
  FindMy::UTAlertContextMode_optional v4;

  object = rawValue._object;
  v2._countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1005401E8, v2);
  swift_bridgeObjectRelease(object);
  if (v3 == 1)
    v4.value = FindMy_UTAlertContextMode_itemDetectedWithYou;
  else
    v4.value = FindMy_UTAlertContextMode_unknownDefault;
  if (v3)
    return v4;
  else
    return 0;
}

unint64_t UTAlertContextMode.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000013;
  else
    return 0xD000000000000010;
}

uint64_t sub_1003C2A90(char *a1, char *a2)
{
  return sub_100196F28(*a1, *a2);
}

Swift::Int sub_1003C2A9C()
{
  char *v0;

  return sub_1001FE91C(*v0);
}

uint64_t sub_1003C2AA4(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD000000000000013;
  else
    v2 = 0xD000000000000010;
  if (*v1)
    v3 = 0x80000001004A4AF0;
  else
    v3 = 0x80000001004A4AD0;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_1003C2B04(uint64_t a1)
{
  char *v1;

  return sub_100366B18(a1, *v1);
}

uint64_t sub_1003C2B0C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1005401E8, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_1003C2B68(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD000000000000013;
  else
    v2 = 0xD000000000000010;
  v3 = 0x80000001004A4AD0;
  if (*v1)
    v3 = 0x80000001004A4AF0;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1003C2BAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1003C53BC();
  return RawRepresentable<>.encode(to:)(a1, a2, a3, v6);
}

uint64_t sub_1003C2BF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;

  v6 = sub_1003C53BC();
  return RawRepresentable<>.init(from:)(a1, a2, a3, v6);
}

uint64_t UTAlertContext.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1003418CC(v1, a1);
}

uint64_t UTAlertContext.mode.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for UTAlertContext(0) + 20));
}

uint64_t type metadata accessor for UTAlertContext(uint64_t a1)
{
  uint64_t result;

  result = qword_1005E2C10;
  if (!qword_1005E2C10)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for UTAlertContext);
  return result;
}

uint64_t UTAlertContext.roleId.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for UTAlertContext(0) + 24));
}

uint64_t UTAlertContext.roleEmoji.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for UTAlertContext(0) + 28));
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t UTAlertContext.title.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for UTAlertContext(0) + 32));
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t UTAlertContext.subtitle.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for UTAlertContext(0) + 36));
  v2 = *v1;
  swift_bridgeObjectRetain(v1[1]);
  return v2;
}

uint64_t UTAlertContext.latitude.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for UTAlertContext(0) + 40));
}

uint64_t UTAlertContext.longitude.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for UTAlertContext(0) + 44));
}

int *UTAlertContext.init(uuid:mode:roleId:roleEmoji:title:subtitle:latitude:longitude:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, char a15)
{
  int *result;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;

  sub_1003C2EE8(a1, a9);
  result = (int *)type metadata accessor for UTAlertContext(0);
  *(_BYTE *)(a9 + result[5]) = a2;
  v22 = a9 + result[6];
  *(_QWORD *)v22 = a3;
  *(_BYTE *)(v22 + 8) = a4 & 1;
  v23 = (_QWORD *)(a9 + result[7]);
  *v23 = a5;
  v23[1] = a6;
  v24 = (_QWORD *)(a9 + result[8]);
  *v24 = a7;
  v24[1] = a8;
  v25 = (_QWORD *)(a9 + result[9]);
  *v25 = a10;
  v25[1] = a11;
  v26 = a9 + result[10];
  *(_QWORD *)v26 = a12;
  *(_BYTE *)(v26 + 8) = a13 & 1;
  v27 = a9 + result[11];
  *(_QWORD *)v27 = a14;
  *(_BYTE *)(v27 + 8) = a15 & 1;
  return result;
}

uint64_t sub_1003C2EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C((uint64_t *)&unk_1005D53A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t UTAlertContext.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  void *object;
  Swift::String v23;
  int *v24;
  int v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  Swift::String v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  Swift::String v39;
  Swift::String v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  Swift::String v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  Swift::String v51;
  uint64_t v52;
  void *v53;
  Swift::String v54;
  unint64_t v56;
  unint64_t v57;

  v1 = v0;
  v2 = sub_100053F2C((uint64_t *)&unk_1005D53A0);
  __chkstk_darwin(v2);
  v4 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = 0;
  v57 = 0xE000000000000000;
  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease(v57);
  v56 = 0xD000000000000017;
  v57 = 0x80000001004C4C60;
  sub_1003418CC(v0, (uint64_t)v4);
  v5 = type metadata accessor for UUID(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if ((_DWORD)v7 == 1)
  {
    sub_1000051EC((uint64_t)v4, (uint64_t *)&unk_1005D53A0);
    v8 = Substring.init(_:)(10023, 0xE200000000000000);
    v10 = v9;
    v12 = v11;
    v14 = v13;
  }
  else
  {
    v15 = UUID.uuidString.getter(v7);
    v17 = v16;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    v8 = sub_1003C4014(10, v15, v17);
    v10 = v18;
    v12 = v19;
    v14 = v20;
    swift_bridgeObjectRelease(v17);
  }
  v21._countAndFlagsBits = static String._fromSubstring(_:)(v8, v10, v12, v14);
  object = v21._object;
  String.append(_:)(v21);
  swift_bridgeObjectRelease(v14);
  swift_bridgeObjectRelease(object);
  v23._countAndFlagsBits = 0x3A65646F6D20;
  v23._object = (void *)0xE600000000000000;
  String.append(_:)(v23);
  v24 = (int *)type metadata accessor for UTAlertContext(0);
  v25 = *(unsigned __int8 *)(v1 + v24[5]);
  v26 = 0xD000000000000013;
  if ((v25 & 1) == 0)
    v26 = 0xD000000000000010;
  v27 = 0x80000001004A4AD0;
  if ((v25 & 1) != 0)
    v27 = 0x80000001004A4AF0;
  if (v25 == 2)
    v28 = 10023;
  else
    v28 = v26;
  v29 = 0xE200000000000000;
  if (v25 == 2)
    v30 = 0xE200000000000000;
  else
    v30 = v27;
  v31 = v30;
  String.append(_:)(*(Swift::String *)&v28);
  swift_bridgeObjectRelease(v30);
  v32._countAndFlagsBits = 8236;
  v32._object = (void *)0xE200000000000000;
  String.append(_:)(v32);
  v34 = v56;
  v33 = v57;
  v56 = 0;
  v57 = 0xE000000000000000;
  _StringGuts.grow(_:)(36);
  swift_bridgeObjectRelease(v57);
  v56 = 0x3A656C746974;
  v57 = 0xE600000000000000;
  v35 = (uint64_t *)(v1 + v24[8]);
  v36 = v35[1];
  if (v36)
    v37 = *v35;
  else
    v37 = 10023;
  if (v36)
    v38 = (void *)v35[1];
  else
    v38 = (void *)0xE200000000000000;
  swift_bridgeObjectRetain(v36);
  v39._countAndFlagsBits = v37;
  v39._object = v38;
  String.append(_:)(v39);
  swift_bridgeObjectRelease(v38);
  v40._countAndFlagsBits = 0x75746974616C202CLL;
  v40._object = (void *)0xEB000000003A6564;
  String.append(_:)(v40);
  v41 = v1 + v24[10];
  if ((*(_BYTE *)(v41 + 8) & 1) != 0)
  {
    v42 = 24942;
  }
  else
  {
    v42 = Double.description.getter(*(double *)v41);
    v29 = v43;
  }
  v44 = v29;
  String.append(_:)(*(Swift::String *)&v42);
  swift_bridgeObjectRelease(v29);
  v45._countAndFlagsBits = 0x7469676E6F6C202CLL;
  v45._object = (void *)0xEC0000003A656475;
  String.append(_:)(v45);
  v46 = v1 + v24[11];
  if ((*(_BYTE *)(v46 + 8) & 1) != 0)
  {
    v47 = 0xE200000000000000;
    v48 = 24942;
  }
  else
  {
    v48 = Double.description.getter(*(double *)v46);
    v47 = v49;
  }
  v50 = v47;
  String.append(_:)(*(Swift::String *)&v48);
  swift_bridgeObjectRelease(v47);
  v51._countAndFlagsBits = 62;
  v51._object = (void *)0xE100000000000000;
  String.append(_:)(v51);
  v52 = v56;
  v53 = (void *)v57;
  v56 = v34;
  v57 = v33;
  swift_bridgeObjectRetain(v33);
  v54._countAndFlagsBits = v52;
  v54._object = v53;
  String.append(_:)(v54);
  swift_bridgeObjectRelease(v33);
  swift_bridgeObjectRelease(v53);
  return v56;
}

uint64_t sub_1003C3294()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1003C32BC
                                                            + 4 * asc_10048F390[*v0]))(1684632949, 0xE400000000000000);
}

uint64_t sub_1003C32BC()
{
  return 1701080941;
}

uint64_t sub_1003C32C8()
{
  return 0x6449656C6F72;
}

uint64_t sub_1003C32DC()
{
  return 0x6A6F6D45656C6F72;
}

uint64_t sub_1003C32FC()
{
  return 0x656C746974;
}

uint64_t sub_1003C3310()
{
  return 0x656C746974627573;
}

uint64_t sub_1003C3328()
{
  return 0x656475746974616CLL;
}

uint64_t sub_1003C3340()
{
  return 0x64757469676E6F6CLL;
}

uint64_t sub_1003C335C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1003C5094(a1, a2);
  *a3 = result;
  return result;
}

void sub_1003C3380(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1003C338C(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003C409C();
  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003C33B4(uint64_t a1)
{
  unint64_t v2;

  v2 = sub_1003C409C();
  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t UTAlertContext.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;

  v3 = v1;
  v5 = sub_100053F2C(&qword_1005E2B78);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v10 = a1[4];
  sub_100029550(a1, v9);
  v11 = sub_1003C409C();
  dispatch thunk of Encoder.container<A>(keyedBy:)(&type metadata for UTAlertContext.CodingKeys, &type metadata for UTAlertContext.CodingKeys, v11, v9, v10);
  v43 = 0;
  v12 = type metadata accessor for UUID(0);
  v13 = sub_1003C5400(&qword_1005E2B88, (uint64_t)&protocol conformance descriptor for UUID);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(v3, &v43, v5, v12, v13);
  if (!v2)
  {
    v14 = (int *)type metadata accessor for UTAlertContext(0);
    v42 = *(_BYTE *)(v3 + v14[5]);
    v41 = 1;
    v15 = sub_1003C40E0();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)(&v42, &v41, v5, &type metadata for UTAlertContextMode, v15);
    v16 = (uint64_t *)(v3 + v14[6]);
    v17 = *v16;
    v18 = *((unsigned __int8 *)v16 + 8);
    v40 = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v17, v18, &v40, v5);
    v19 = (uint64_t *)(v3 + v14[7]);
    v20 = *v19;
    v21 = v19[1];
    v39 = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v20, v21, &v39, v5);
    v22 = (uint64_t *)(v3 + v14[8]);
    v23 = *v22;
    v24 = v22[1];
    v38 = 4;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v23, v24, &v38, v5);
    v25 = (uint64_t *)(v3 + v14[9]);
    v26 = *v25;
    v27 = v25[1];
    v37 = 5;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v26, v27, &v37, v5);
    v28 = (uint64_t *)(v3 + v14[10]);
    v29 = *v28;
    v30 = *((unsigned __int8 *)v28 + 8);
    v36 = 6;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v29, v30, &v36, v5);
    v31 = (uint64_t *)(v3 + v14[11]);
    v32 = *v31;
    v33 = *((unsigned __int8 *)v31 + 8);
    HIBYTE(v35) = 7;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)(v32, v33, (char *)&v35 + 7, v5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t UTAlertContext.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  __n128 v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  __n128 v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char *v45;
  char v46;
  uint64_t v47;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  uint64_t v61;

  v50 = a2;
  v4 = sub_100053F2C((uint64_t *)&unk_1005D53A0);
  __chkstk_darwin(v4);
  v51 = (uint64_t *)((char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v52 = sub_100053F2C(&qword_1005E2B98);
  v6 = *(_QWORD *)(v52 - 8);
  __chkstk_darwin(v52);
  v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for UTAlertContext(0);
  __chkstk_darwin(v9);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v12 = a1[4];
  v53 = a1;
  sub_100029550(a1, v13);
  v14 = sub_1003C409C();
  dispatch thunk of Decoder.container<A>(keyedBy:)(&type metadata for UTAlertContext.CodingKeys, &type metadata for UTAlertContext.CodingKeys, v14, v13, v12);
  if (v2)
    return sub_100029574(v53);
  v15 = (uint64_t)v11;
  v16 = type metadata accessor for UUID(0);
  BYTE1(v61) = 0;
  v17 = sub_1003C5400(&qword_1005E2BA0, (uint64_t)&protocol conformance descriptor for UUID);
  v18 = v51;
  v19 = v52;
  v20 = v16;
  v21 = v16;
  v22 = v8;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(v51, v20, (char *)&v61 + 1, v52, v21, v17);
  sub_1003C2EE8((uint64_t)v18, v15);
  v60 = 1;
  v23 = sub_1003C4124();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(&v61, &type metadata for UTAlertContextMode, &v60, v19, &type metadata for UTAlertContextMode, v23);
  v24 = v9;
  *(_BYTE *)(v15 + v9[5]) = v61;
  v59 = 2;
  v25 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v59, v19);
  v26 = v15 + v9[6];
  *(_QWORD *)v26 = v25;
  *(_BYTE *)(v26 + 8) = v27 & 1;
  v58 = 3;
  v29 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v58, v19, v28);
  v30 = v53;
  v31 = (uint64_t *)(v15 + v9[7]);
  *v31 = v29;
  v31[1] = v32;
  v57 = 4;
  v34 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v57, v19, v33);
  v35 = (uint64_t *)(v15 + v9[8]);
  *v35 = v34;
  v35[1] = v36;
  v56 = 5;
  v38 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v56, v19, v37);
  v39 = (uint64_t *)(v15 + v9[9]);
  *v39 = v38;
  v39[1] = v40;
  v55 = 6;
  v41 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v55, v19);
  v42 = v15 + v9[10];
  *(_QWORD *)v42 = v41;
  *(_BYTE *)(v42 + 8) = v43 & 1;
  v54 = 7;
  v44 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(&v54, v19);
  v45 = v22;
  LOBYTE(v22) = v46;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v45, v19);
  v47 = v15 + v24[11];
  *(_QWORD *)v47 = v44;
  *(_BYTE *)(v47 + 8) = v22 & 1;
  sub_1003C4168(v15, v50);
  sub_100029574(v30);
  return sub_1003C41AC(v15);
}

uint64_t sub_1003C3AC4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return UTAlertContext.init(from:)(a1, a2);
}

uint64_t sub_1003C3AD8(_QWORD *a1)
{
  return UTAlertContext.encode(to:)(a1);
}

BOOL _s6FindMy14UTAlertContextV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  int *v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  _BOOL8 result;
  uint64_t v37;
  _QWORD *v38;
  char v39;
  _QWORD *v40;
  int v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  double *v61;
  char v62;
  double *v63;
  int v64;
  uint64_t v65;
  double *v66;
  char v67;
  double *v68;
  char v69;
  uint64_t v70;
  uint64_t v71;

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100053F2C((uint64_t *)&unk_1005E2210);
  __chkstk_darwin(v8);
  v10 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100053F2C((uint64_t *)&unk_1005D53A0);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v12);
  v17 = (char *)&v70 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v70 - v18;
  v71 = a1;
  sub_1003418CC(a1, (uint64_t)&v70 - v18);
  v20 = a2;
  sub_1003418CC(a2, (uint64_t)v17);
  v21 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1003418CC((uint64_t)v19, (uint64_t)v10);
  sub_1003418CC((uint64_t)v17, v21);
  v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v22((uint64_t)v10, 1, v4) == 1)
  {
    sub_1000051EC((uint64_t)v17, (uint64_t *)&unk_1005D53A0);
    sub_1000051EC((uint64_t)v19, (uint64_t *)&unk_1005D53A0);
    if (v22(v21, 1, v4) == 1)
    {
      sub_1000051EC((uint64_t)v10, (uint64_t *)&unk_1005D53A0);
      goto LABEL_8;
    }
LABEL_6:
    sub_1000051EC((uint64_t)v10, (uint64_t *)&unk_1005E2210);
    return 0;
  }
  sub_1003418CC((uint64_t)v10, (uint64_t)v14);
  if (v22(v21, 1, v4) == 1)
  {
    sub_1000051EC((uint64_t)v17, (uint64_t *)&unk_1005D53A0);
    sub_1000051EC((uint64_t)v19, (uint64_t *)&unk_1005D53A0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v21, v4);
  v23 = sub_1003C5400((unint64_t *)&unk_1005E2220, (uint64_t)&protocol conformance descriptor for UUID);
  v24 = dispatch thunk of static Equatable.== infix(_:_:)(v14, v7, v4, v23);
  v25 = *(void (**)(char *, uint64_t))(v5 + 8);
  v25(v7, v4);
  sub_1000051EC((uint64_t)v17, (uint64_t *)&unk_1005D53A0);
  sub_1000051EC((uint64_t)v19, (uint64_t *)&unk_1005D53A0);
  v25(v14, v4);
  sub_1000051EC((uint64_t)v10, (uint64_t *)&unk_1005D53A0);
  if ((v24 & 1) == 0)
    return 0;
LABEL_8:
  v26 = (int *)type metadata accessor for UTAlertContext(0);
  v27 = v26[5];
  v28 = v71;
  v29 = *(unsigned __int8 *)(v71 + v27);
  v30 = *(unsigned __int8 *)(v20 + v27);
  if (v29 == 2)
  {
    if (v30 != 2)
      return 0;
  }
  else
  {
    if (v30 == 2)
      return 0;
    if ((v29 & 1) != 0)
      v31 = 0xD000000000000013;
    else
      v31 = 0xD000000000000010;
    if ((v29 & 1) != 0)
      v32 = 0x80000001004A4AF0;
    else
      v32 = 0x80000001004A4AD0;
    if ((v30 & 1) != 0)
      v33 = 0xD000000000000013;
    else
      v33 = 0xD000000000000010;
    if ((v30 & 1) != 0)
      v34 = 0x80000001004A4AF0;
    else
      v34 = 0x80000001004A4AD0;
    if (v31 == v33 && v32 == v34)
    {
      swift_bridgeObjectRelease_n(v32, 2);
    }
    else
    {
      v35 = _stringCompareWithSmolCheck(_:_:expecting:)(v31, v32, v33, v34, 0);
      swift_bridgeObjectRelease(v32);
      swift_bridgeObjectRelease(v34);
      result = 0;
      if ((v35 & 1) == 0)
        return result;
    }
  }
  v37 = v26[6];
  v38 = (_QWORD *)(v28 + v37);
  v39 = *(_BYTE *)(v28 + v37 + 8);
  v40 = (_QWORD *)(v20 + v37);
  v41 = *(unsigned __int8 *)(v20 + v37 + 8);
  if ((v39 & 1) != 0)
  {
    if (!v41)
      return 0;
  }
  else
  {
    if (*v38 != *v40)
      LOBYTE(v41) = 1;
    if ((v41 & 1) != 0)
      return 0;
  }
  v42 = v26[7];
  v43 = (_QWORD *)(v28 + v42);
  v44 = *(_QWORD *)(v28 + v42 + 8);
  v45 = (_QWORD *)(v20 + v42);
  v46 = v45[1];
  if (!v44)
  {
    if (v46)
      return 0;
LABEL_41:
    v48 = v26[8];
    v49 = (_QWORD *)(v28 + v48);
    v50 = *(_QWORD *)(v28 + v48 + 8);
    v51 = (_QWORD *)(v20 + v48);
    v52 = v51[1];
    if (v50)
    {
      if (!v52)
        return 0;
      if (*v49 != *v51 || v50 != v52)
      {
        v53 = _stringCompareWithSmolCheck(_:_:expecting:)(*v49, v50, *v51, v52, 0);
        result = 0;
        if ((v53 & 1) == 0)
          return result;
      }
    }
    else if (v52)
    {
      return 0;
    }
    v54 = v26[9];
    v55 = (_QWORD *)(v28 + v54);
    v56 = *(_QWORD *)(v28 + v54 + 8);
    v57 = (_QWORD *)(v20 + v54);
    v58 = v57[1];
    if (v56)
    {
      if (!v58)
        return 0;
      if (*v55 != *v57 || v56 != v58)
      {
        v59 = _stringCompareWithSmolCheck(_:_:expecting:)(*v55, v56, *v57, v58, 0);
        result = 0;
        if ((v59 & 1) == 0)
          return result;
      }
    }
    else if (v58)
    {
      return 0;
    }
    v60 = v26[10];
    v61 = (double *)(v28 + v60);
    v62 = *(_BYTE *)(v28 + v60 + 8);
    v63 = (double *)(v20 + v60);
    v64 = *(unsigned __int8 *)(v20 + v60 + 8);
    if ((v62 & 1) != 0)
    {
      if (!v64)
        return 0;
    }
    else
    {
      if (*v61 != *v63)
        LOBYTE(v64) = 1;
      if ((v64 & 1) != 0)
        return 0;
    }
    v65 = v26[11];
    v66 = (double *)(v28 + v65);
    v67 = *(_BYTE *)(v28 + v65 + 8);
    v68 = (double *)(v20 + v65);
    v69 = *(_BYTE *)(v20 + v65 + 8);
    if ((v67 & 1) == 0)
    {
      if (*v66 != *v68)
        v69 = 1;
      return (v69 & 1) == 0;
    }
    return (v69 & 1) != 0;
  }
  if (!v46)
    return 0;
  if (*v43 == *v45 && v44 == v46)
    goto LABEL_41;
  v47 = _stringCompareWithSmolCheck(_:_:expecting:)(*v43, v44, *v45, v46, 0);
  result = 0;
  if ((v47 & 1) != 0)
    goto LABEL_41;
  return result;
}

uint64_t sub_1003C4014(uint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v5 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v5 = a2;
    v6 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v6 = 11;
    v7 = v6 | (v5 << 16);
    v8 = String.index(_:offsetBy:limitedBy:)(15, result, v7, a2, a3);
    if ((v9 & 1) != 0)
      v10 = v7;
    else
      v10 = v8;
    return String.subscript.getter(15, v10, a2, a3);
  }
  return result;
}

unint64_t sub_1003C409C()
{
  unint64_t result;

  result = qword_1005E2B80;
  if (!qword_1005E2B80)
  {
    result = swift_getWitnessTable(&unk_10048F694, &type metadata for UTAlertContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005E2B80);
  }
  return result;
}

unint64_t sub_1003C40E0()
{
  unint64_t result;

  result = qword_1005E2B90;
  if (!qword_1005E2B90)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for UTAlertContextMode, &type metadata for UTAlertContextMode);
    atomic_store(result, (unint64_t *)&qword_1005E2B90);
  }
  return result;
}

unint64_t sub_1003C4124()
{
  unint64_t result;

  result = qword_1005E2BA8;
  if (!qword_1005E2BA8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for UTAlertContextMode, &type metadata for UTAlertContextMode);
    atomic_store(result, (unint64_t *)&qword_1005E2BA8);
  }
  return result;
}

uint64_t sub_1003C4168(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UTAlertContext(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003C41AC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UTAlertContext(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1003C41EC()
{
  unint64_t result;

  result = qword_1005E2BB0;
  if (!qword_1005E2BB0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for UTAlertContextMode, &type metadata for UTAlertContextMode);
    atomic_store(result, (unint64_t *)&qword_1005E2BB0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for UTAlertContextMode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1003C427C + 4 * byte_10048F39D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1003C42B0 + 4 * byte_10048F398[v4]))();
}

uint64_t sub_1003C42B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003C42B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003C42C0);
  return result;
}

uint64_t sub_1003C42CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003C42D4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1003C42D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003C42E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UTAlertContextMode()
{
  return &type metadata for UTAlertContextMode;
}

uint64_t *initializeBufferWithCopyOfBuffer for UTAlertContext(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v10);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = sub_100053F2C((uint64_t *)&unk_1005D53A0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    *(_QWORD *)v12 = *(_QWORD *)v13;
    v12[8] = v13[8];
    v14 = a3[7];
    v15 = a3[8];
    v16 = (uint64_t *)((char *)a1 + v14);
    v17 = (uint64_t *)((char *)a2 + v14);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = (uint64_t *)((char *)a1 + v15);
    v20 = (uint64_t *)((char *)a2 + v15);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = a3[9];
    v23 = a3[10];
    v24 = (uint64_t *)((char *)a1 + v22);
    v25 = (uint64_t *)((char *)a2 + v22);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = (char *)a1 + v23;
    v28 = (char *)a2 + v23;
    *(_QWORD *)v27 = *(_QWORD *)v28;
    v27[8] = v28[8];
    v29 = a3[11];
    v30 = (char *)a1 + v29;
    v31 = (char *)a2 + v29;
    *(_QWORD *)v30 = *(_QWORD *)v31;
    v30[8] = v31[8];
    swift_bridgeObjectRetain(v18);
    swift_bridgeObjectRetain(v21);
    swift_bridgeObjectRetain(v26);
  }
  return a1;
}

uint64_t destroy for UTAlertContext(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for UUID(0);
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[7] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[8] + 8));
  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + a2[9] + 8));
}

char *initializeWithCopy for UTAlertContext(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100053F2C((uint64_t *)&unk_1005D53A0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  v10 = &a1[v9];
  v11 = &a2[v9];
  *(_QWORD *)v10 = *(_QWORD *)v11;
  v10[8] = v11[8];
  v12 = a3[7];
  v13 = a3[8];
  v14 = &a1[v12];
  v15 = &a2[v12];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  v17 = &a1[v13];
  v18 = &a2[v13];
  v19 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = v19;
  v20 = a3[9];
  v21 = a3[10];
  v22 = &a1[v20];
  v23 = &a2[v20];
  v24 = *((_QWORD *)v23 + 1);
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_QWORD *)v22 + 1) = v24;
  v25 = &a1[v21];
  v26 = &a2[v21];
  *(_QWORD *)v25 = *(_QWORD *)v26;
  v25[8] = v26[8];
  v27 = a3[11];
  v28 = &a1[v27];
  v29 = &a2[v27];
  *(_QWORD *)v28 = *(_QWORD *)v29;
  v28[8] = v29[8];
  swift_bridgeObjectRetain(v16);
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRetain(v24);
  return a1;
}

char *assignWithCopy for UTAlertContext(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = sub_100053F2C((uint64_t *)&unk_1005D53A0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  a1[a3[5]] = a2[a3[5]];
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *(_QWORD *)v14;
  v13[8] = v14[8];
  *(_QWORD *)v13 = v15;
  v16 = a3[7];
  v17 = &a1[v16];
  v18 = &a2[v16];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  v19 = *((_QWORD *)v18 + 1);
  v20 = *((_QWORD *)v17 + 1);
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v20);
  v21 = a3[8];
  v22 = &a1[v21];
  v23 = &a2[v21];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  v24 = *((_QWORD *)v23 + 1);
  v25 = *((_QWORD *)v22 + 1);
  *((_QWORD *)v22 + 1) = v24;
  swift_bridgeObjectRetain(v24);
  swift_bridgeObjectRelease(v25);
  v26 = a3[9];
  v27 = &a1[v26];
  v28 = &a2[v26];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v29 = *((_QWORD *)v28 + 1);
  v30 = *((_QWORD *)v27 + 1);
  *((_QWORD *)v27 + 1) = v29;
  swift_bridgeObjectRetain(v29);
  swift_bridgeObjectRelease(v30);
  v31 = a3[10];
  v32 = &a1[v31];
  v33 = &a2[v31];
  v34 = *(_QWORD *)v33;
  v32[8] = v33[8];
  *(_QWORD *)v32 = v34;
  v35 = a3[11];
  v36 = &a1[v35];
  v37 = &a2[v35];
  v38 = *(_QWORD *)v37;
  v36[8] = v37[8];
  *(_QWORD *)v36 = v38;
  return a1;
}

char *initializeWithTake for UTAlertContext(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = sub_100053F2C((uint64_t *)&unk_1005D53A0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  v10 = &a1[v9];
  v11 = &a2[v9];
  *(_QWORD *)v10 = *(_QWORD *)v11;
  v10[8] = v11[8];
  v12 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  *(_OWORD *)&a1[v12] = *(_OWORD *)&a2[v12];
  v13 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  v14 = &a1[v13];
  v15 = &a2[v13];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  v16 = a3[11];
  v17 = &a1[v16];
  v18 = &a2[v16];
  v19 = *(_QWORD *)v18;
  v17[8] = v18[8];
  *(_QWORD *)v17 = v19;
  return a1;
}

char *assignWithTake for UTAlertContext(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = sub_100053F2C((uint64_t *)&unk_1005D53A0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v13[8] = v14[8];
  v15 = a3[7];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v19 = *(_QWORD *)v17;
  v18 = *((_QWORD *)v17 + 1);
  v20 = *((_QWORD *)v16 + 1);
  *(_QWORD *)v16 = v19;
  *((_QWORD *)v16 + 1) = v18;
  swift_bridgeObjectRelease(v20);
  v21 = a3[8];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v25 = *(_QWORD *)v23;
  v24 = *((_QWORD *)v23 + 1);
  v26 = *((_QWORD *)v22 + 1);
  *(_QWORD *)v22 = v25;
  *((_QWORD *)v22 + 1) = v24;
  swift_bridgeObjectRelease(v26);
  v27 = a3[9];
  v28 = &a1[v27];
  v29 = &a2[v27];
  v31 = *(_QWORD *)v29;
  v30 = *((_QWORD *)v29 + 1);
  v32 = *((_QWORD *)v28 + 1);
  *(_QWORD *)v28 = v31;
  *((_QWORD *)v28 + 1) = v30;
  swift_bridgeObjectRelease(v32);
  v33 = a3[10];
  v34 = a3[11];
  v35 = &a1[v33];
  v36 = &a2[v33];
  *(_QWORD *)v35 = *(_QWORD *)v36;
  v35[8] = v36[8];
  v37 = &a1[v34];
  v38 = &a2[v34];
  *(_QWORD *)v37 = *(_QWORD *)v38;
  v37[8] = v38[8];
  return a1;
}

uint64_t getEnumTagSinglePayload for UTAlertContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003C4B18);
}

uint64_t sub_1003C4B18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_100053F2C((uint64_t *)&unk_1005D53A0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for UTAlertContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003C4BB4);
}

uint64_t sub_1003C4BB4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_100053F2C((uint64_t *)&unk_1005D53A0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = a2;
  return result;
}

void sub_1003C4C34(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[8];

  sub_100241154(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(v2 - 8) + 64;
    v4[1] = &unk_10048F588;
    v4[2] = &unk_10048F5A0;
    v4[3] = &unk_10048F5B8;
    v4[4] = &unk_10048F5B8;
    v4[5] = &unk_10048F5B8;
    v4[6] = &unk_10048F5A0;
    v4[7] = &unk_10048F5A0;
    swift_initStructMetadata(a1, 256, 8, v4, a1 + 16);
  }
}

uint64_t getEnumTagSinglePayload for UTAlertContext.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for UTAlertContext.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1003C4D9C + 4 * byte_10048F3A7[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1003C4DD0 + 4 * byte_10048F3A2[v4]))();
}

uint64_t sub_1003C4DD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003C4DD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003C4DE0);
  return result;
}

uint64_t sub_1003C4DEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003C4DF4);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1003C4DF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003C4E00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UTAlertContext.CodingKeys()
{
  return &type metadata for UTAlertContext.CodingKeys;
}

unint64_t sub_1003C4E20()
{
  unint64_t result;

  result = qword_1005E2C68;
  if (!qword_1005E2C68)
  {
    result = swift_getWitnessTable(&unk_10048F66C, &type metadata for UTAlertContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005E2C68);
  }
  return result;
}

unint64_t sub_1003C4E68()
{
  unint64_t result;

  result = qword_1005E2C70;
  if (!qword_1005E2C70)
  {
    result = swift_getWitnessTable(&unk_10048F5DC, &type metadata for UTAlertContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005E2C70);
  }
  return result;
}

unint64_t sub_1003C4EB0()
{
  unint64_t result;

  result = qword_1005E2C78;
  if (!qword_1005E2C78)
  {
    result = swift_getWitnessTable(&unk_10048F604, &type metadata for UTAlertContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1005E2C78);
  }
  return result;
}

uint64_t sub_1003C4EF4(uint64_t result, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::Int i;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v3 = result;
    v4 = a2 >> 62;
    if (!(a2 >> 62))
    {
      v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  if (v2 < 0)
    v14 = v2;
  else
    v14 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v2);
  v5 = _CocoaArrayWrapper.endIndex.getter(v14);
  result = swift_bridgeObjectRelease(v2);
LABEL_4:
  if (v5 >= v3)
    v6 = v3;
  else
    v6 = v5;
  if (v5 < 0)
    v6 = v3;
  if (v3)
    v7 = v6;
  else
    v7 = 0;
  if (v4)
  {
    if (v2 < 0)
      v9 = v2;
    else
      v9 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v10 = _CocoaArrayWrapper.endIndex.getter(v9);
    result = swift_bridgeObjectRelease(v2);
    if (v10 < 0)
      goto LABEL_37;
    swift_bridgeObjectRetain(v2);
    v8 = _CocoaArrayWrapper.endIndex.getter(v9);
    result = swift_bridgeObjectRelease(v2);
  }
  else
  {
    v8 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 < v7)
  {
    __break(1u);
LABEL_37:
    __break(1u);
    return result;
  }
  if ((v2 & 0xC000000000000001) != 0 && v7)
  {
    for (i = 0; i != v7; ++i)
    {
      sub_100053F2C(&qword_1005E1120);
      _ArrayBuffer._typeCheckSlowPath(_:)(i);
    }
  }
  if (v4)
  {
    if (v2 < 0)
      v13 = v2;
    else
      v13 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
    v12 = _CocoaArrayWrapper.subscript.getter(0, v7, v13);
    swift_bridgeObjectRelease(v2);
  }
  else
  {
    v12 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v2);
  }
  return v12;
}

uint64_t sub_1003C5094(uint64_t a1, unint64_t a2)
{
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char v13;

  if (a1 == 1684632949 && a2 == 0xE400000000000000)
  {
    v5 = 0xE400000000000000;
    goto LABEL_8;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1684632949, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v5 = a2;
LABEL_8:
    swift_bridgeObjectRelease(v5);
    return 0;
  }
  if (a1 == 1701080941 && a2 == 0xE400000000000000)
  {
    v7 = 0xE400000000000000;
LABEL_14:
    swift_bridgeObjectRelease(v7);
    return 1;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(1701080941, 0xE400000000000000, a1, a2, 0) & 1) != 0)
  {
    v7 = a2;
    goto LABEL_14;
  }
  if (a1 == 0x6449656C6F72 && a2 == 0xE600000000000000)
  {
    v8 = 0xE600000000000000;
LABEL_20:
    swift_bridgeObjectRelease(v8);
    return 2;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6449656C6F72, 0xE600000000000000, a1, a2, 0) & 1) != 0)
  {
    v8 = a2;
    goto LABEL_20;
  }
  if (a1 == 0x6A6F6D45656C6F72 && a2 == 0xE900000000000069)
  {
    v9 = 0xE900000000000069;
LABEL_26:
    swift_bridgeObjectRelease(v9);
    return 3;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x6A6F6D45656C6F72, 0xE900000000000069, a1, a2, 0) & 1) != 0)
  {
    v9 = a2;
    goto LABEL_26;
  }
  if (a1 == 0x656C746974 && a2 == 0xE500000000000000)
  {
    v10 = 0xE500000000000000;
LABEL_32:
    swift_bridgeObjectRelease(v10);
    return 4;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974, 0xE500000000000000, a1, a2, 0) & 1) != 0)
  {
    v10 = a2;
    goto LABEL_32;
  }
  if (a1 == 0x656C746974627573 && a2 == 0xE800000000000000)
  {
    v11 = 0xE800000000000000;
LABEL_38:
    swift_bridgeObjectRelease(v11);
    return 5;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656C746974627573, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v11 = a2;
    goto LABEL_38;
  }
  if (a1 == 0x656475746974616CLL && a2 == 0xE800000000000000)
  {
    v12 = 0xE800000000000000;
LABEL_44:
    swift_bridgeObjectRelease(v12);
    return 6;
  }
  if ((_stringCompareWithSmolCheck(_:_:expecting:)(0x656475746974616CLL, 0xE800000000000000, a1, a2, 0) & 1) != 0)
  {
    v12 = a2;
    goto LABEL_44;
  }
  if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease(0xE900000000000065);
    return 7;
  }
  else
  {
    v13 = _stringCompareWithSmolCheck(_:_:expecting:)(0x64757469676E6F6CLL, 0xE900000000000065, a1, a2, 0);
    swift_bridgeObjectRelease(a2);
    if ((v13 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

unint64_t sub_1003C53BC()
{
  unint64_t result;

  result = qword_1005E2C88;
  if (!qword_1005E2C88)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for UTAlertContextMode, &type metadata for UTAlertContextMode);
    atomic_store(result, (unint64_t *)&qword_1005E2C88);
  }
  return result;
}

uint64_t sub_1003C5400(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for UUID(255);
    result = swift_getWitnessTable(a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

id sub_1003C5440()
{
  char *v0;
  uint64_t v1;
  id v2;
  char *v3;
  uint64_t v4;
  id v5;
  objc_super v7;

  v1 = OBJC_IVAR____TtC6FindMy13FMWaitingView_title;
  v2 = objc_allocWithZone((Class)UILabel);
  v3 = v0;
  *(_QWORD *)&v0[v1] = objc_msgSend(v2, "init");
  v4 = OBJC_IVAR____TtC6FindMy13FMWaitingView_activityIndicator;
  *(_QWORD *)&v3[v4] = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithActivityIndicatorStyle:", 100);

  v7.receiver = v3;
  v7.super_class = (Class)type metadata accessor for FMWaitingView();
  v5 = objc_msgSendSuper2(&v7, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  sub_1003C55EC();
  sub_1003C581C();

  return v5;
}

id sub_1003C55EC()
{
  char *v0;
  char *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t inited;
  NSString *v6;
  unint64_t v7;
  id v8;
  id v9;
  id v10;
  Swift::String v11;
  Swift::String v12;
  void *object;
  NSString v14;
  char v16[48];
  Swift::String v17;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy13FMWaitingView_title];
  v3 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleBody);
  v4 = sub_100053F2C((uint64_t *)&unk_1005D7EA0);
  inited = swift_initStackObject(v4, v16);
  *(_OWORD *)(inited + 16) = xmmword_100481740;
  *(_QWORD *)(inited + 32) = UIFontWeightTrait;
  *(UIFontWeight *)(inited + 40) = UIFontWeightMedium;
  v6 = UIFontWeightTrait;
  v7 = sub_10004907C(inited);
  v8 = sub_100049188(v7);

  objc_msgSend(v2, "setFont:", v8, swift_bridgeObjectRelease(v7).n128_f64[0]);
  objc_msgSend(v2, "setAdjustsFontForContentSizeCategory:", 1);
  v9 = objc_msgSend((id)objc_opt_self(UIColor), "secondaryLabelColor");
  objc_msgSend(v2, "setTextColor:", v9);

  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v10 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v17._object = (void *)0x80000001004C4CA0;
  v11._countAndFlagsBits = 0x474E4954494157;
  v11._object = (void *)0xE700000000000000;
  v12._countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  v17._countAndFlagsBits = 0xD000000000000019;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v17)._object;

  v14 = String._bridgeToObjectiveC()();
  objc_msgSend(v2, "setText:", v14, swift_bridgeObjectRelease(object).n128_f64[0]);

  objc_msgSend(v1, "addSubview:", v2);
  return objc_msgSend(v1, "addSubview:", *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy13FMWaitingView_activityIndicator]);
}

void sub_1003C581C()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  Class isa;
  uint64_t v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  id v31;
  Class v32;

  v1 = v0;
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy13FMWaitingView_title];
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy13FMWaitingView_activityIndicator];
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v31 = (id)objc_opt_self(NSLayoutConstraint);
  v4 = sub_100053F2C(&qword_1005D2F10);
  v5 = swift_allocObject(v4, 64, 7);
  *(_OWORD *)(v5 + 16) = xmmword_100481720;
  v6 = objc_msgSend(v3, "topAnchor");
  v7 = objc_msgSend(v1, "topAnchor");
  v8 = objc_msgSend(v6, "constraintEqualToAnchor:", v7);

  *(_QWORD *)(v5 + 32) = v8;
  v9 = objc_msgSend(v3, "bottomAnchor");
  v10 = objc_msgSend(v1, "bottomAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:", v10);

  *(_QWORD *)(v5 + 40) = v11;
  v12 = objc_msgSend(v3, "leadingAnchor");
  v13 = objc_msgSend(v2, "trailingAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(v5 + 48) = v14;
  v15 = objc_msgSend(v3, "trailingAnchor");
  v16 = objc_msgSend(v1, "trailingAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v5 + 56) = v17;
  specialized Array._endMutation()(v18);
  sub_100048C64();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v31, "activateConstraints:", isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

  v20 = swift_allocObject(v4, 56, 7);
  *(_OWORD *)(v20 + 16) = xmmword_1004820C0;
  v21 = objc_msgSend(v2, "topAnchor");
  v22 = objc_msgSend(v1, "topAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

  *(_QWORD *)(v20 + 32) = v23;
  v24 = objc_msgSend(v2, "bottomAnchor");
  v25 = objc_msgSend(v1, "bottomAnchor");
  v26 = objc_msgSend(v24, "constraintEqualToAnchor:", v25);

  *(_QWORD *)(v20 + 40) = v26;
  v27 = objc_msgSend(v2, "leadingAnchor");
  v28 = objc_msgSend(v1, "leadingAnchor");
  v29 = objc_msgSend(v27, "constraintEqualToAnchor:", v28);

  *(_QWORD *)(v20 + 48) = v29;
  specialized Array._endMutation()(v30);
  v32 = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v31, "activateConstraints:", v32, swift_bridgeObjectRelease(v20).n128_f64[0]);

}

id sub_1003C5C40()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMWaitingView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMWaitingView()
{
  return objc_opt_self(_TtC6FindMy13FMWaitingView);
}

void sub_1003C5D1C(char a1)
{
  void *v1;
  id v3;
  Swift::String v4;
  Swift::String_optional v5;
  Swift::String v6;
  void *object;
  NSString v8;
  objc_super v9;
  Swift::String v10;

  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for FMAccessoryPairingInProgressCard();
  objc_msgSendSuper2(&v9, "viewWillAppear:", a1 & 1);
  v3 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v10._countAndFlagsBits = 0xD000000000000018;
  v4._countAndFlagsBits = 0xD000000000000034;
  v10._object = (void *)0x80000001004A5660;
  v4._object = (void *)0x80000001004C4D30;
  v5.value._object = (void *)0x80000001004A5640;
  v5.value._countAndFlagsBits = 0xD000000000000013;
  v6._countAndFlagsBits = 0;
  v6._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v3, v6, v10)._object;

  v8 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "showActivityIndicatorWithStatus:", v8, swift_bridgeObjectRelease(object).n128_f64[0]);

}

double sub_1003C5E60()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  NSString v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  double result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;

  v1 = v0;
  v2 = sub_100053F2C(&qword_1005D9640);
  __chkstk_darwin(v2);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100053F2C(&qword_1005D7320);
  __chkstk_darwin(v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100053F2C(&qword_1005D6DB0);
  v40 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_100053F2C(&qword_1005E2D38);
  v12 = *(_QWORD *)(v11 - 8);
  v41 = v11;
  v42 = v12;
  __chkstk_darwin(v11);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100053F2C(&qword_1005E2D40);
  v16 = *(_QWORD *)(v15 - 8);
  v43 = v15;
  v44 = v16;
  __chkstk_darwin(v15);
  v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FMAccessoryPairingInProgressCard.ViewModel(0);
  v19 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setTitle:", v19);

  FMIPDiscoveredAccessory.productInformation.getter();
  v20 = sub_10016EF28((uint64_t)v7, 1);
  sub_1000051EC((uint64_t)v7, &qword_1005D7320);
  v46 = v20;
  v45 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v21 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v4, 1, 1, v21);
  v22 = sub_100053F2C(&qword_1005D6DC0);
  v23 = sub_100006C5C(0, (unint64_t *)&qword_1005E5530, NSRunLoop_ptr);
  v24 = sub_10003F774((unint64_t *)&unk_1005D7E70, &qword_1005D6DC0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v25 = sub_100121168();
  Publisher.receive<A>(on:options:)(&v45, v4, v22, v23, v24, v25);
  sub_1000051EC((uint64_t)v4, &qword_1005D9640);

  swift_release(v46);
  v26 = sub_100006C5C(0, (unint64_t *)&qword_1005DDF90, UIImage_ptr);
  v27 = sub_10003F774(&qword_1005D6DC8, &qword_1005D6DB0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  Publisher.map<A>(_:)(sub_1003C62B0, 0, v8, v26, v27);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v8);
  v28 = sub_100053F2C(&qword_1005D8E30);
  v29 = sub_10003F774(&qword_1005E2D48, &qword_1005E2D38, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v30 = sub_10003F774(&qword_1005E2D50, &qword_1005D8E30, (uint64_t)&protocol conformance descriptor for Just<A>);
  v31 = v41;
  Publisher.catch<A>(_:)(sub_1003C62BC, 0, v41, v28, v29, v30);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v14, v31);
  v32 = swift_allocObject(&unk_100560D90, 24, 7);
  swift_unknownObjectWeakInit(v32 + 16);
  v33 = sub_10003F774(&qword_1005E2D58, &qword_1005E2D40, (uint64_t)&protocol conformance descriptor for Publishers.Catch<A, B>);
  v34 = v43;
  v35 = Publisher<>.sink(receiveValue:)(sub_1003C6A60, v32, v43, v33);
  v36 = swift_release(v32);
  (*(void (**)(char *, uint64_t, __n128))(v44 + 8))(v18, v34, v36);
  v37 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy32FMAccessoryPairingInProgressCard_imageFetchCancellable];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy32FMAccessoryPairingInProgressCard_imageFetchCancellable] = v35;
  *(_QWORD *)&result = swift_release(v37).n128_u64[0];
  return result;
}

id sub_1003C62B0@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *a1;
  *a2 = v2;
  return v2;
}

uint64_t sub_1003C62BC()
{
  uint64_t v0;
  id v2;

  v2 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  v0 = sub_100006C5C(0, (unint64_t *)&qword_1005DDF90, UIImage_ptr);
  return Just.init(_:)(&v2, v0);
}

void sub_1003C6324(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  id v6;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(id *)(Strong + OBJC_IVAR____TtC6FindMy32FMAccessoryPairingInProgressCard_imageView);

    objc_msgSend(v6, "setImage:", v2);
  }
}

void sub_1003C63A8()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  void *v39;
  Class isa;

  v1 = v0;
  v2 = objc_msgSend(v0, "contentView");
  v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy32FMAccessoryPairingInProgressCard_imageView];
  objc_msgSend(v2, "addSubview:", v3);

  objc_msgSend(v3, "setContentMode:", 1);
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v39 = (void *)objc_opt_self(NSLayoutConstraint);
  v4 = sub_100053F2C(&qword_1005D2F10);
  v5 = swift_allocObject(v4, 88, 7);
  *(_OWORD *)(v5 + 16) = xmmword_1004850C0;
  v6 = objc_msgSend(v3, "leadingAnchor");
  v7 = objc_msgSend(v1, "contentView");
  v8 = objc_msgSend(v7, "mainContentGuide");

  v9 = objc_msgSend(v8, "leadingAnchor");
  v10 = objc_msgSend(v6, "constraintGreaterThanOrEqualToAnchor:", v9);

  *(_QWORD *)(v5 + 32) = v10;
  v11 = objc_msgSend(v3, "trailingAnchor");
  v12 = objc_msgSend(v1, "contentView");
  v13 = objc_msgSend(v12, "mainContentGuide");

  v14 = objc_msgSend(v13, "trailingAnchor");
  v15 = objc_msgSend(v11, "constraintLessThanOrEqualToAnchor:", v14);

  *(_QWORD *)(v5 + 40) = v15;
  v16 = objc_msgSend(v3, "topAnchor");
  v17 = objc_msgSend(v1, "contentView");
  v18 = objc_msgSend(v17, "mainContentGuide");

  v19 = objc_msgSend(v18, "topAnchor");
  v20 = objc_msgSend(v16, "constraintGreaterThanOrEqualToAnchor:", v19);

  *(_QWORD *)(v5 + 48) = v20;
  v21 = objc_msgSend(v3, "bottomAnchor");
  v22 = objc_msgSend(v1, "contentView");
  v23 = objc_msgSend(v22, "mainContentGuide");

  v24 = objc_msgSend(v23, "bottomAnchor");
  v25 = objc_msgSend(v21, "constraintLessThanOrEqualToAnchor:", v24);

  *(_QWORD *)(v5 + 56) = v25;
  v26 = objc_msgSend(v3, "centerXAnchor");
  v27 = objc_msgSend(v1, "contentView");
  v28 = objc_msgSend(v27, "mainContentGuide");

  v29 = objc_msgSend(v28, "centerXAnchor");
  v30 = objc_msgSend(v26, "constraintEqualToAnchor:", v29);

  *(_QWORD *)(v5 + 64) = v30;
  v31 = objc_msgSend(v3, "centerYAnchor");
  v32 = objc_msgSend(v1, "contentView");
  v33 = objc_msgSend(v32, "mainContentGuide");

  v34 = objc_msgSend(v33, "centerYAnchor");
  v35 = objc_msgSend(v31, "constraintEqualToAnchor:", v34);

  *(_QWORD *)(v5 + 72) = v35;
  v36 = objc_msgSend(v3, "heightAnchor");
  v37 = objc_msgSend(v36, "constraintEqualToConstant:", 140.0);

  *(_QWORD *)(v5 + 80) = v37;
  specialized Array._endMutation()(v38);
  sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v39, "activateConstraints:", isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

}

id sub_1003C6968()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMAccessoryPairingInProgressCard();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMAccessoryPairingInProgressCard()
{
  return objc_opt_self(_TtC6FindMy32FMAccessoryPairingInProgressCard);
}

uint64_t type metadata accessor for FMAccessoryPairingInProgressCard.ViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_1005E2DB8;
  if (!qword_1005E2DB8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMAccessoryPairingInProgressCard.ViewModel);
  return result;
}

uint64_t sub_1003C6A3C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003C6A60(uint64_t *a1)
{
  uint64_t v1;

  sub_1003C6324(a1, v1);
}

uint64_t *sub_1003C6A68(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain(v4);
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for FMIPDiscoveredAccessory(0);
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_retain(v4);
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 24);
    v14 = (uint64_t *)((char *)v7 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain(v16);
  }
  return v7;
}

uint64_t sub_1003C6B28(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  swift_release(*a1);
  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for FMIPDiscoveredAccessory(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + *(int *)(a2 + 24) + 8));
}

uint64_t *sub_1003C6B88(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v6 = *a2;
  *a1 = *a2;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for FMIPDiscoveredAccessory(0);
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_retain(v6);
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 24);
  v13 = (uint64_t *)((char *)a1 + v12);
  v14 = (uint64_t *)((char *)a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain(v15);
  return a1;
}

uint64_t *sub_1003C6C20(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  swift_retain(v6);
  swift_release(v7);
  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for FMIPDiscoveredAccessory(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  v12 = *(int *)(a3 + 24);
  v13 = (uint64_t *)((char *)a1 + v12);
  v14 = (uint64_t *)((char *)a2 + v12);
  *v13 = *v14;
  v15 = v14[1];
  v16 = v13[1];
  v13[1] = v15;
  swift_bridgeObjectRetain(v15);
  swift_bridgeObjectRelease(v16);
  return a1;
}

_QWORD *sub_1003C6CC8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for FMIPDiscoveredAccessory(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t *sub_1003C6D40(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *a1;
  *a1 = *a2;
  swift_release(v6);
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for FMIPDiscoveredAccessory(0);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (uint64_t *)((char *)a1 + v11);
  v13 = (uint64_t *)((char *)a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  v16 = v12[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease(v16);
  return a1;
}

uint64_t sub_1003C6DD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003C6DDC);
}

uint64_t sub_1003C6DDC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for FMIPDiscoveredAccessory(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1003C6E58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003C6E64);
}

char *sub_1003C6E64(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for FMIPDiscoveredAccessory(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1003C6ED8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[3];

  v4[0] = (char *)&value witness table for Builtin.NativeObject + 64;
  result = type metadata accessor for FMIPDiscoveredAccessory(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = &unk_10048F750;
    swift_initStructMetadata(a1, 256, 3, v4, a1 + 16);
    return 0;
  }
  return result;
}

id sub_1003C7100()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMAccessoryDiscoveryAccessoryCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMAccessoryDiscoveryAccessoryCell()
{
  return objc_opt_self(_TtC6FindMy33FMAccessoryDiscoveryAccessoryCell);
}

uint64_t sub_1003C7150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v0 = type metadata accessor for FMModernPlatterButtonEntry(0);
  sub_10005CFFC(v0, qword_1005F5FC8);
  v1 = sub_100056D88(v0, (uint64_t)qword_1005F5FC8);
  result = UUID.init()(v1);
  *(_BYTE *)(v1 + *(int *)(v0 + 20)) = 1;
  return result;
}

double sub_1003C71A8@<D0>(uint64_t a1@<X8>)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = xmmword_100484D30;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_BYTE *)(a1 + 48) = 0;
  return result;
}

uint64_t sub_1003C71C4(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 20));
}

uint64_t sub_1003C71D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

Swift::Int sub_1003C7208(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[9];

  Hasher.init(_seed:)(v6, 0);
  v3 = type metadata accessor for UUID(0);
  v4 = sub_100008000((unint64_t *)&unk_1005E4270, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v6, v3, v4);
  Hasher._combine(_:)(*(_BYTE *)(v1 + *(int *)(a1 + 20)));
  return Hasher._finalize()();
}

void sub_1003C7290(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v5 = type metadata accessor for UUID(0);
  v6 = sub_100008000((unint64_t *)&unk_1005E4270, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(a1, v5, v6);
  Hasher._combine(_:)(*(_BYTE *)(v2 + *(int *)(a2 + 20)));
}

Swift::Int sub_1003C7300(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[9];

  Hasher.init(_seed:)(v7, a1);
  v4 = type metadata accessor for UUID(0);
  v5 = sub_100008000((unint64_t *)&unk_1005E4270, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
  dispatch thunk of Hashable.hash(into:)(v7, v4, v5);
  Hasher._combine(_:)(*(_BYTE *)(v2 + *(int *)(a2 + 20)));
  return Hasher._finalize()();
}

uint64_t sub_1003C7384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;

  if ((static UUID.== infix(_:_:)(a1, a2) & 1) != 0)
    v6 = *(_BYTE *)(a1 + *(int *)(a3 + 20)) ^ *(_BYTE *)(a2 + *(int *)(a3 + 20)) ^ 1;
  else
    v6 = 0;
  return v6 & 1;
}

void sub_1003C73E0(uint64_t a1, uint64_t a2)
{
  void *v2;
  Class isa;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  void **v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  void *v17;
  void *v18;
  uint64_t v19;
  objc_super v20;

  sub_10011D624();
  sub_100008000((unint64_t *)&qword_1005D3F08, (uint64_t (*)(uint64_t))sub_10011D624, (uint64_t)&protocol conformance descriptor for NSObject);
  isa = Set._bridgeToObjectiveC()().super.isa;
  v20.receiver = v2;
  v20.super_class = (Class)type metadata accessor for FMModernPlatterButton(0);
  objc_msgSendSuper2(&v20, "touchesBegan:withEvent:", isa, a2);

  v5 = (void *)objc_opt_self(UIView);
  v6 = swift_allocObject(&unk_100560E80, 24, 7);
  *(_QWORD *)(v6 + 16) = v2;
  v18 = sub_1003C8250;
  v19 = v6;
  v14 = _NSConcreteStackBlock;
  v15 = 1107296256;
  v16 = sub_100037DF8;
  v17 = &unk_100560E98;
  v7 = _Block_copy(&v14);
  v8 = v19;
  v9 = v2;
  swift_release(v8);
  objc_msgSend(v5, "animateWithDuration:animations:", v7, 0.15);
  _Block_release(v7);
  v10 = swift_allocObject(&unk_100560ED0, 24, 7);
  *(_QWORD *)(v10 + 16) = v9;
  v18 = sub_1003C8258;
  v19 = v10;
  v14 = _NSConcreteStackBlock;
  v15 = 1107296256;
  v16 = sub_100037DF8;
  v17 = &unk_100560EE8;
  v11 = _Block_copy(&v14);
  v12 = v19;
  v13 = v9;
  swift_release(v12);
  objc_msgSend(v5, "animateWithDuration:delay:options:animations:completion:", 4, v11, 0, 0.25, 0.0);
  _Block_release(v11);
}

void sub_1003C75AC(void *a1)
{
  id v2;
  id v3;
  void *v4;
  char **v5;
  id v6;

  v2 = objc_msgSend(a1, "traitCollection");
  v3 = objc_msgSend(v2, "userInterfaceStyle");

  v4 = (void *)objc_opt_self(UIColor);
  v5 = &selRef_systemGray3Color;
  if (v3 != (id)2)
    v5 = &selRef_systemGray5Color;
  v6 = objc_msgSend(v4, *v5);
  objc_msgSend(a1, "setBackgroundColor:", v6);

}

id sub_1003C7654(void *a1)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  CATransform3D v7;
  CATransform3D v8;

  v2 = *(_OWORD *)&CATransform3DIdentity.m13;
  *(_OWORD *)&v8.m11 = *(_OWORD *)&CATransform3DIdentity.m11;
  *(_OWORD *)&v8.m13 = v2;
  v3 = *(_OWORD *)&CATransform3DIdentity.m23;
  *(_OWORD *)&v8.m21 = *(_OWORD *)&CATransform3DIdentity.m21;
  *(_OWORD *)&v8.m23 = v3;
  v4 = *(_OWORD *)&CATransform3DIdentity.m33;
  *(_OWORD *)&v8.m31 = *(_OWORD *)&CATransform3DIdentity.m31;
  *(_OWORD *)&v8.m33 = v4;
  v5 = *(_OWORD *)&CATransform3DIdentity.m43;
  *(_OWORD *)&v8.m41 = *(_OWORD *)&CATransform3DIdentity.m41;
  *(_OWORD *)&v8.m43 = v5;
  CATransform3DScale(&v7, &v8, 0.93, 0.93, 1.0);
  v8 = v7;
  return objc_msgSend(a1, "setTransform3D:", &v8);
}

double sub_1003C76F0(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_1003C795C(a1, a2, a3, a4, (void (*)(uint64_t, void *))sub_1003C73E0);
}

void sub_1003C76FC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  Class isa;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  double v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD v27[5];
  uint64_t v28;
  objc_super v29;
  CGPoint v30;
  CGRect v31;

  sub_10011D624();
  sub_100008000((unint64_t *)&qword_1005D3F08, (uint64_t (*)(uint64_t))sub_10011D624, (uint64_t)&protocol conformance descriptor for NSObject);
  isa = Set._bridgeToObjectiveC()().super.isa;
  v29.receiver = v2;
  v29.super_class = (Class)type metadata accessor for FMModernPlatterButton(0);
  objc_msgSendSuper2(&v29, "touchesEnded:withEvent:", isa, a2);

  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v6 = a1;
    else
      v6 = a1 & 0xFFFFFFFFFFFFFF8;
    if (__CocoaSet.count.getter(v6) != 1)
      goto LABEL_14;
  }
  else if (*(_QWORD *)(a1 + 16) != 1)
  {
    goto LABEL_14;
  }
  swift_bridgeObjectRetain(a1);
  v8 = (void *)sub_1000C936C(v7);
  *(_QWORD *)&v9 = swift_bridgeObjectRelease(a1).n128_u64[0];
  if (v8)
  {
    objc_msgSend(v2, "bounds", v9);
    v11 = v10;
    v13 = v12;
    v15 = v14;
    v17 = v16;
    objc_msgSend(v8, "locationInView:", v2);
    v30.x = v18;
    v30.y = v19;
    v31.origin.x = v11;
    v31.origin.y = v13;
    v31.size.width = v15;
    v31.size.height = v17;
    if (CGRectContainsPoint(v31, v30))
    {
      if (qword_1005D2058 != -1)
        swift_once(&qword_1005D2058, sub_1003C7150);
      v20 = type metadata accessor for FMModernPlatterButtonEntry(0);
      v21 = sub_100056D88(v20, (uint64_t)qword_1005F5FC8);
      (*(void (**)(uint64_t))((swift_isaMask & *v2) + 0xF0))(v21);
    }

  }
LABEL_14:
  v22 = (void *)objc_opt_self(UIView);
  v23 = swift_allocObject(&unk_100560E30, 24, 7);
  *(_QWORD *)(v23 + 16) = v2;
  v27[4] = sub_1003C8238;
  v28 = v23;
  v27[0] = _NSConcreteStackBlock;
  v27[1] = 1107296256;
  v27[2] = sub_100037DF8;
  v27[3] = &unk_100560E48;
  v24 = _Block_copy(v27);
  v25 = v28;
  v26 = v2;
  swift_release(v25);
  objc_msgSend(v22, "animateWithDuration:delay:options:animations:completion:", 4, v24, 0, 0.15, 0.1);
  _Block_release(v24);
}

double sub_1003C7950(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_1003C795C(a1, a2, a3, a4, (void (*)(uint64_t, void *))sub_1003C76FC);
}

double sub_1003C795C(void *a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t, void *))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  double result;

  v9 = sub_10011D624();
  v10 = sub_100008000((unint64_t *)&qword_1005D3F08, (uint64_t (*)(uint64_t))sub_10011D624, (uint64_t)&protocol conformance descriptor for NSObject);
  v11 = static Set._unconditionallyBridgeFromObjectiveC(_:)(a3, v9, v10);
  v12 = a4;
  v13 = a1;
  a5(v11, a4);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v11).n128_u64[0];
  return result;
}

void sub_1003C79FC(void *a1)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  id v6;
  id v7;
  void *v8;
  char **v9;
  id v10;
  _OWORD v11[8];

  v2 = *(_OWORD *)&CATransform3DIdentity.m13;
  v11[0] = *(_OWORD *)&CATransform3DIdentity.m11;
  v11[1] = v2;
  v3 = *(_OWORD *)&CATransform3DIdentity.m23;
  v11[2] = *(_OWORD *)&CATransform3DIdentity.m21;
  v11[3] = v3;
  v4 = *(_OWORD *)&CATransform3DIdentity.m33;
  v11[4] = *(_OWORD *)&CATransform3DIdentity.m31;
  v11[5] = v4;
  v5 = *(_OWORD *)&CATransform3DIdentity.m43;
  v11[6] = *(_OWORD *)&CATransform3DIdentity.m41;
  v11[7] = v5;
  objc_msgSend(a1, "setTransform3D:", v11);
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v6 = objc_msgSend(a1, "traitCollection");
  v7 = objc_msgSend(v6, "userInterfaceStyle");
  v8 = (void *)objc_opt_self(UIColor);
  v9 = &selRef_tertiarySystemFillColor;
  if (v7 != (id)2)
    v9 = &selRef_whiteColor;
  v10 = objc_msgSend(v8, *v9);

  objc_msgSend(a1, "setBackgroundColor:", v10);
}

double sub_1003C7B08(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  Class isa;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  double result;
  _QWORD v19[5];
  uint64_t v20;
  objc_super v21;

  v7 = sub_10011D624();
  v8 = sub_100008000((unint64_t *)&qword_1005D3F08, (uint64_t (*)(uint64_t))sub_10011D624, (uint64_t)&protocol conformance descriptor for NSObject);
  v9 = static Set._unconditionallyBridgeFromObjectiveC(_:)(a3, v7, v8);
  v10 = a4;
  v11 = a1;
  isa = Set._bridgeToObjectiveC()().super.isa;
  v21.receiver = v11;
  v21.super_class = (Class)type metadata accessor for FMModernPlatterButton(0);
  objc_msgSendSuper2(&v21, "touchesCancelled:withEvent:", isa, v10);

  v13 = (void *)objc_opt_self(UIView);
  v14 = swift_allocObject(&unk_100560DE0, 24, 7);
  *(_QWORD *)(v14 + 16) = v11;
  v19[4] = sub_1003C8278;
  v20 = v14;
  v19[0] = _NSConcreteStackBlock;
  v19[1] = 1107296256;
  v19[2] = sub_100037DF8;
  v19[3] = &unk_100560DF8;
  v15 = _Block_copy(v19);
  v16 = v20;
  v17 = v11;
  swift_release(v16);
  objc_msgSend(v13, "animateWithDuration:delay:options:animations:completion:", 4, v15, 0, 0.15, 0.1);
  _Block_release(v15);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v9).n128_u64[0];
  return result;
}

id sub_1003C7C98(void *a1)
{
  objc_super v2;

  v2.receiver = a1;
  v2.super_class = (Class)type metadata accessor for FMModernPlatterButton(0);
  return objc_msgSendSuper2(&v2, "init");
}

id sub_1003C7CD8(void *a1, uint64_t a2, uint64_t a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for FMModernPlatterButton(0);
  return objc_msgSendSuper2(&v5, "initWithCoder:", a3);
}

id sub_1003C7D20()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMModernPlatterButton(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMModernPlatterButton(uint64_t a1)
{
  return sub_10001DC04(a1, qword_1005E2E48, (uint64_t)&nominal type descriptor for FMModernPlatterButton);
}

uint64_t sub_1003C7D68(uint64_t a1)
{
  _BYTE v2[8];

  return swift_initClassMetadata2(a1, 256, 0, v2, a1 + 312);
}

uint64_t sub_1003C7D9C()
{
  return type metadata accessor for FMModernPlatterButton(0);
}

_QWORD *sub_1003C7DA4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v8);
  }
  else
  {
    v7 = type metadata accessor for UUID(0);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_1003C7E2C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UUID(0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1003C7E60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1003C7EBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1003C7F18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1003C7F74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for UUID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1003C7FD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003C7FDC);
}

uint64_t sub_1003C7FDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for UUID(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_1003C8068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003C8074);
}

uint64_t sub_1003C8074(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for UUID(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t type metadata accessor for FMModernPlatterButtonEntry(uint64_t a1)
{
  return sub_10001DC04(a1, qword_1005E3018, (uint64_t)&nominal type descriptor for FMModernPlatterButtonEntry);
}

uint64_t sub_1003C8100(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for UUID(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = &unk_10048F800;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1003C8170()
{
  return sub_100008000(&qword_1005E3050, type metadata accessor for FMModernPlatterButtonEntry, (uint64_t)&unk_10048F818);
}

uint64_t sub_1003C819C(uint64_t a1)
{
  uint64_t result;

  result = sub_100008000(&qword_1005E3080, type metadata accessor for FMModernPlatterButtonEntry, (uint64_t)&unk_10048F840);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1003C81D8(uint64_t a1)
{
  uint64_t result;

  result = sub_100008000(&qword_1005E3088, type metadata accessor for FMModernPlatterButtonEntry, (uint64_t)&unk_10048F880);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1003C8214()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1003C8238()
{
  uint64_t v0;

  sub_1003C79FC(*(void **)(v0 + 16));
}

void sub_1003C8250()
{
  uint64_t v0;

  sub_1003C75AC(*(void **)(v0 + 16));
}

id sub_1003C8258()
{
  uint64_t v0;

  return sub_1003C7654(*(void **)(v0 + 16));
}

void sub_1003C8288()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;

  v1 = objc_msgSend(v0, "navigationBar");
  objc_msgSend(v1, "setTranslucent:", 1);

  v2 = objc_msgSend(v0, "navigationBar");
  v3 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  objc_msgSend(v2, "setBackgroundImage:forBarMetrics:", v3, 0);

  v4 = objc_msgSend(v0, "navigationBar");
  v5 = objc_msgSend((id)objc_opt_self(UIColor), "clearColor");
  objc_msgSend(v4, "setBackgroundColor:", v5);

  v6 = objc_msgSend(v0, "navigationBar");
  v7 = objc_msgSend(objc_allocWithZone((Class)UIImage), "init");
  objc_msgSend(v6, "setShadowImage:", v7);

}

char *sub_1003C83DC(uint64_t a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  NSString v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  char *v21;
  NSString v22;
  uint64_t v23;
  uint64_t ObjCClassFromMetadata;
  uint64_t v25;
  NSString v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  objc_super v33;

  v3 = &v1[qword_1005DD830];
  *(_QWORD *)v3 = 0xD00000000000001ELL;
  *((_QWORD *)v3 + 1) = 0x80000001004B3CB0;
  v4 = qword_1005DD858;
  v5 = objc_allocWithZone((Class)UILabel);
  v6 = v1;
  *(_QWORD *)&v1[v4] = objc_msgSend(v5, "init");
  v7 = qword_1005DD860;
  *(_QWORD *)&v6[v7] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMLoadingView()), "init");
  v8 = qword_1005DD868;
  *(_QWORD *)&v6[v8] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v6[qword_1005DD870] = 0;
  v6[qword_1005DD878] = 0;
  v9 = qword_1005DD880;
  v10 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v10, "setAccessibilityIdentifier:", v11);

  *(_QWORD *)&v6[v9] = v10;
  v6[qword_1005DD888] = 0;
  v6[qword_1005DD890] = 0;
  v12 = type metadata accessor for FMTableView(0);
  v13 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v12)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v13, "setSeparatorStyle:", 0);
  *(_QWORD *)&v6[qword_1005DD850] = v13;
  v14 = objc_allocWithZone((Class)type metadata accessor for FMItemsListDataSource());
  v15 = v13;
  v16 = swift_retain(a1);
  *(_QWORD *)&v6[qword_1005DD838] = sub_10038F064(v16, v15);
  v17 = objc_allocWithZone((Class)type metadata accessor for FMNoItemView());
  v18 = swift_retain(a1);
  *(_QWORD *)&v6[qword_1005DD840] = sub_1003B9C74(v18);
  v19 = objc_allocWithZone((Class)type metadata accessor for FMItemTerminalView());
  v20 = swift_retain(a1);
  *(_QWORD *)&v6[qword_1005DD848] = sub_100168D10(v20);

  *(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator] = a1;
  v33.receiver = v6;
  v33.super_class = (Class)type metadata accessor for FMMediatedViewController();
  swift_retain(a1);
  v21 = (char *)objc_msgSendSuper2(&v33, "initWithNibName:bundle:", 0, 0);
  v22 = String._bridgeToObjectiveC()();
  objc_msgSend(v21, "setAccessibilityIdentifier:", v22, v33.receiver, v33.super_class);

  v23 = type metadata accessor for FMTableViewSectionHeaderView();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v23);
  v25 = *(_QWORD *)&v21[qword_1005DD830 + 8];
  swift_bridgeObjectRetain(v25);
  v26 = String._bridgeToObjectiveC()();
  objc_msgSend(v15, "registerClass:forHeaderFooterViewReuseIdentifier:", ObjCClassFromMetadata, v26, swift_bridgeObjectRelease(v25).n128_f64[0]);

  v27 = *(_QWORD *)&v21[qword_1005DD838] + OBJC_IVAR____TtC6FindMy21FMItemsListDataSource_delegate;
  *(_QWORD *)(v27 + 8) = &off_1005545E8;
  swift_unknownObjectWeakAssign(v27, v21);
  v28 = *(char **)&v21[qword_1005DD848];
  v29 = &v28[OBJC_IVAR____TtC6FindMy14FMTerminalView_delegate];
  *((_QWORD *)v29 + 1) = &off_100554598;
  swift_unknownObjectWeakAssign(v29, v21);
  v30 = v21;
  v31 = v28;
  sub_100043DD4();

  swift_release(a1);
  return v30;
}

char *sub_1003C87C8(uint64_t a1)
{
  char *v1;
  char *v3;
  uint64_t v4;
  id v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  NSString v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  char *v21;
  NSString v22;
  uint64_t v23;
  uint64_t ObjCClassFromMetadata;
  uint64_t v25;
  NSString v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  objc_super v33;

  v3 = &v1[qword_1005DD830];
  *(_QWORD *)v3 = 0xD00000000000001ELL;
  *((_QWORD *)v3 + 1) = 0x80000001004B3CB0;
  v4 = qword_1005DD858;
  v5 = objc_allocWithZone((Class)UILabel);
  v6 = v1;
  *(_QWORD *)&v1[v4] = objc_msgSend(v5, "init");
  v7 = qword_1005DD860;
  *(_QWORD *)&v6[v7] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMLoadingView()), "init");
  v8 = qword_1005DD868;
  *(_QWORD *)&v6[v8] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v6[qword_1005DD870] = 0;
  v6[qword_1005DD878] = 0;
  v9 = qword_1005DD880;
  v10 = objc_msgSend((id)objc_opt_self(UIButton), "buttonWithType:", 1);
  v11 = String._bridgeToObjectiveC()();
  objc_msgSend(v10, "setAccessibilityIdentifier:", v11);

  *(_QWORD *)&v6[v9] = v10;
  v6[qword_1005DD888] = 0;
  v6[qword_1005DD890] = 0;
  v12 = type metadata accessor for FMTableView(0);
  v13 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata(v12)), "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v13, "setSeparatorStyle:", 0);
  *(_QWORD *)&v6[qword_1005DD850] = v13;
  v14 = objc_allocWithZone((Class)type metadata accessor for FMDevicesListDataSource());
  v15 = v13;
  v16 = swift_retain(a1);
  *(_QWORD *)&v6[qword_1005DD838] = sub_1002B39E8(v16, v15);
  v17 = objc_allocWithZone((Class)type metadata accessor for FMNoDeviceView());
  v18 = swift_retain(a1);
  *(_QWORD *)&v6[qword_1005DD840] = sub_10022D214(v18);
  v19 = objc_allocWithZone((Class)type metadata accessor for FMDevicesTerminalView());
  v20 = swift_retain(a1);
  *(_QWORD *)&v6[qword_1005DD848] = sub_100366F70(v20);

  *(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator] = a1;
  v33.receiver = v6;
  v33.super_class = (Class)type metadata accessor for FMMediatedViewController();
  swift_retain(a1);
  v21 = (char *)objc_msgSendSuper2(&v33, "initWithNibName:bundle:", 0, 0);
  v22 = String._bridgeToObjectiveC()();
  objc_msgSend(v21, "setAccessibilityIdentifier:", v22, v33.receiver, v33.super_class);

  v23 = type metadata accessor for FMTableViewSectionHeaderView();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v23);
  v25 = *(_QWORD *)&v21[qword_1005DD830 + 8];
  swift_bridgeObjectRetain(v25);
  v26 = String._bridgeToObjectiveC()();
  objc_msgSend(v15, "registerClass:forHeaderFooterViewReuseIdentifier:", ObjCClassFromMetadata, v26, swift_bridgeObjectRelease(v25).n128_f64[0]);

  v27 = *(_QWORD *)&v21[qword_1005DD838] + OBJC_IVAR____TtC6FindMy23FMDevicesListDataSource_delegate;
  *(_QWORD *)(v27 + 8) = &off_1005545E8;
  swift_unknownObjectWeakAssign(v27, v21);
  v28 = *(char **)&v21[qword_1005DD848];
  v29 = &v28[OBJC_IVAR____TtC6FindMy14FMTerminalView_delegate];
  *((_QWORD *)v29 + 1) = &off_100554598;
  swift_unknownObjectWeakAssign(v29, v21);
  v30 = v21;
  v31 = v28;
  sub_100043DD4();

  swift_release(a1);
  return v30;
}

uint64_t sub_1003C8BB4(uint64_t result, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  char v22;
  _QWORD v23[3];

  v3 = HIBYTE(a2) & 0xF;
  v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = result & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease(a2);
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0)
        v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v6 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(result, a2);
      v7 = (uint64_t)sub_1003CA978(v6, v4, 10);
      v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3)
        goto LABEL_50;
      if (v3 == 1 || (BYTE1(result) - 48) > 9u)
        goto LABEL_34;
      v7 = (BYTE1(result) - 48);
      v14 = v3 - 2;
      if (v14)
      {
        v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          v16 = *v15 - 48;
          if (v16 > 9)
            goto LABEL_34;
          v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v17 + v16;
          if (__OFADD__(v17, v16))
            goto LABEL_34;
          v9 = 0;
          ++v15;
          if (!--v14)
            goto LABEL_37;
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            v7 = -(uint64_t)(BYTE1(result) - 48);
            v10 = v3 - 2;
            if (v10)
            {
              v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                v12 = *v11 - 48;
                if (v12 > 9)
                  goto LABEL_34;
                v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
                  goto LABEL_34;
                v7 = v13 - v12;
                if (__OFSUB__(v13, v12))
                  goto LABEL_34;
                v9 = 0;
                ++v11;
                if (!--v10)
                  goto LABEL_37;
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          v7 = 0;
          v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u)
        goto LABEL_34;
      v7 = (result - 48);
      v18 = v3 - 1;
      if (v18)
      {
        v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          v20 = *v19 - 48;
          if (v20 > 9)
            goto LABEL_34;
          v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v21 + v20;
          if (__OFADD__(v21, v20))
            goto LABEL_34;
          v9 = 0;
          ++v19;
          if (!--v18)
            goto LABEL_37;
        }
      }
    }
LABEL_36:
    v9 = 0;
    goto LABEL_37;
  }
  v7 = (uint64_t)sub_1003CA894(result, a2, 10);
  v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease(a2);
  if ((v9 & 1) != 0)
    return 0;
  else
    return v7;
}

char *sub_1003C8E00(uint64_t a1)
{
  char *v1;
  _BYTE *v3;
  uint64_t v4;
  void *v5;
  char *v6;
  objc_super v8;

  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy23FMInitialCardController_selectionSubscription] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy23FMInitialCardController_discoveryCoordinator] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy23FMInitialCardController_mediator] = a1;
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for FMInitialCardController();
  swift_retain(a1);
  v3 = objc_msgSendSuper2(&v8, "initWithNibName:bundle:", 0, 0);
  v4 = OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_dismissable;
  v3[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_dismissable] = 0;
  v5 = *(void **)&v3[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_closeButton];
  v6 = v3;
  objc_msgSend(v5, "setHidden:", 1, v8.receiver, v8.super_class);
  objc_msgSend(*(id *)(*(_QWORD *)&v6[OBJC_IVAR____TtC6FindMy29FMCardContainerViewController_cardContainer]+ OBJC_IVAR____TtC6FindMy19FMCardContainerView_grabber), "setHidden:", v3[v4]);
  sub_10000B194();

  swift_release(a1);
  return v6;
}

void sub_1003C8F88(char a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[24];
  objc_super v11;

  v11.receiver = v1;
  v11.super_class = (Class)type metadata accessor for FMInitialCardController();
  objc_msgSendSuper2(&v11, "viewWillDisappear:", a1 & 1);
  v3 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy23FMInitialCardController_selectionSubscription];
  if (v3)
  {
    v4 = *(_QWORD *)(*(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy23FMInitialCardController_mediator] + 56);
    swift_beginAccess(v4 + 16, v10, 33, 0);
    swift_retain(v3);
    swift_retain(v4);
    v5 = sub_100334CE8((uint64_t *)(v4 + 16), v3);
    v6 = v5;
    v7 = *(_QWORD *)(v4 + 16);
    if ((unint64_t)v7 >> 62)
    {
      if (v7 < 0)
        v9 = *(_QWORD *)(v4 + 16);
      else
        v9 = v7 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(*(_QWORD *)(v4 + 16));
      v8 = _CocoaArrayWrapper.endIndex.getter(v9);
      swift_bridgeObjectRelease(v7);
      if (v8 >= v6)
        goto LABEL_4;
    }
    else
    {
      v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (v8 >= v5)
      {
LABEL_4:
        sub_100200704(v6, v8);
        swift_endAccess(v10);
        swift_release(v3);
        swift_release(v4);
        return;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1003C9134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  v4 = type metadata accessor for OfferLocationDuration(0);
  v3[5] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[6] = v5;
  v3[7] = swift_task_alloc((*(_QWORD *)(v5 + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100053F2C(&qword_1005E3148);
  v3[8] = swift_task_alloc((*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64) + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FriendshipExpiration(0);
  v3[9] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v3[10] = v8;
  v9 = (*(_QWORD *)(v8 + 64) + 15) & 0xFFFFFFFFFFFFFFF0;
  v3[11] = swift_task_alloc(v9);
  v3[12] = swift_task_alloc(v9);
  v10 = type metadata accessor for MainActor(0);
  v3[13] = v10;
  v3[14] = static MainActor.shared.getter(v10);
  v11 = dispatch thunk of Actor.unownedExecutor.getter(v10, &protocol witness table for MainActor);
  v3[15] = v11;
  v3[16] = v12;
  return swift_task_switch(sub_1003C922C, v11, v12);
}

uint64_t sub_1003C922C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  unsigned int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;

  v2 = v0[6];
  v1 = v0[7];
  v3 = v0[5];
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 16))(v1, v0[2], v3);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v1, v3);
  if (v4 == enum case for OfferLocationDuration.oneHour(_:))
  {
    v5 = (unsigned int *)&enum case for FriendshipExpiration.oneHour(_:);
LABEL_7:
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[10] + 104))(v0[8], *v5, v0[9]);
    v6 = 0;
    goto LABEL_8;
  }
  if (v4 == enum case for OfferLocationDuration.endOfDay(_:))
  {
    v5 = (unsigned int *)&enum case for FriendshipExpiration.endOfDay(_:);
    goto LABEL_7;
  }
  if (v4 == enum case for OfferLocationDuration.indefinitely(_:))
  {
    v5 = (unsigned int *)&enum case for FriendshipExpiration.forever(_:);
    goto LABEL_7;
  }
  if (v4 != enum case for OfferLocationDuration.pin(_:))
    return _diagnoseUnexpectedEnumCase<A>(type:)(v0[5], v0[5]);
  v6 = 1;
LABEL_8:
  v7 = v0[9];
  v8 = v0[10];
  v9 = v0[8];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v9, v6, 1, v7);
  v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v9, 1, v7);
  v11 = v0[12];
  v12 = v0[9];
  v13 = v0[10];
  v14 = v0[8];
  if (v10 == 1)
  {
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v13 + 104))(v11, enum case for FriendshipExpiration.forever(_:), v12);
    sub_1000051EC(v14, &qword_1005E3148);
  }
  else
  {
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v13 + 32))(v11, v0[8], v12);
  }
  v15 = v0[11];
  v16 = v0[3];
  v17 = v0[4];
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v0[10] + 16))(v15, v0[12], v0[9]);
  v18 = type metadata accessor for FMFShareLocationAction(0);
  swift_allocObject(v18, *(unsigned int *)(v18 + 48), *(unsigned __int16 *)(v18 + 52));
  swift_bridgeObjectRetain(v16);
  v20 = FMFShareLocationAction.init(handles:friendId:duration:)(v19, 0, 0, v15);
  v0[17] = v20;
  v21 = static MainActor.shared.getter(v20);
  v0[18] = v21;
  v22 = (_QWORD *)swift_task_alloc(48);
  v0[19] = v22;
  v22[2] = v17;
  v22[3] = v20;
  v22[4] = v16;
  v23 = (_QWORD *)swift_task_alloc(async function pointer to withCheckedThrowingContinuation<A>(isolation:function:_:)[1]);
  v0[20] = v23;
  *v23 = v0;
  v23[1] = sub_1003C9498;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v23, v21, &protocol witness table for MainActor, 0xD000000000000029, 0x80000001004C4ED0, sub_1003CB404, v22, &type metadata for () + 1);
}

uint64_t sub_1003C9498()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  v2 = *v1;
  v4 = *(_QWORD *)(*v1 + 152);
  v3 = *(_QWORD *)(*v1 + 160);
  v5 = *(_QWORD *)(*v1 + 144);
  *(_QWORD *)(*v1 + 168) = v0;
  swift_task_dealloc(v3);
  swift_release(v5);
  swift_task_dealloc(v4);
  if (v0)
    v6 = sub_1003C95A8;
  else
    v6 = sub_1003C9514;
  return swift_task_switch(v6, *(_QWORD *)(v2 + 120), *(_QWORD *)(v2 + 128));
}

uint64_t sub_1003C9514()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 136));
  swift_release(v1);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003C95A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 72);
  v5 = *(_QWORD *)(v0 + 80);
  v7 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 64);
  swift_release(*(_QWORD *)(v0 + 136));
  swift_release(v1);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  swift_task_dealloc(v2);
  swift_task_dealloc(v3);
  swift_task_dealloc(v6);
  swift_task_dealloc(v7);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1003C963C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double result;
  uint64_t v16;

  v8 = sub_100053F2C(&qword_1005DCDC8);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  __chkstk_darwin(v8);
  v11 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + OBJC_IVAR____TtC6FindMy23FMInitialCardController_mediator) + 48)
                  + 56);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = (v12 + 24) & ~v12;
  v14 = swift_allocObject(&unk_100561060, v13 + v10, v12 | 7);
  *(_QWORD *)(v14 + 16) = a4;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v14 + v13, (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  swift_retain(v11);
  swift_bridgeObjectRetain(a4);
  sub_1000D421C(a3, (uint64_t)sub_1003CB488, v14);
  swift_release(v14);
  *(_QWORD *)&result = swift_release(v11).n128_u64[0];
  return result;
}

uint64_t sub_1003C9760(void *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint64_t v21;
  Class *v22;
  Class isa;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  os_log_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  Class *v40;
  Class v41;
  uint64_t v42;
  __n128 v43;
  uint64_t v44;
  _QWORD *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t *v55;
  uint64_t v56;
  char v57;
  unint64_t v58;
  char v59;
  unint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  int64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __n128 v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  __n128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  os_log_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90[2];
  __int128 v91;
  __int128 v92;

  v89 = a4;
  v86 = type metadata accessor for Handle(0);
  v7 = *(_QWORD *)(v86 - 8);
  __chkstk_darwin(v86);
  v9 = (char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FMFActionStatus(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (unint64_t)&v82 - v15;
  if (!a2)
  {
    if (qword_1005D1DE8 != -1)
      goto LABEL_61;
    goto LABEL_6;
  }
  swift_errorRetain(a2);
  if (qword_1005D1DE8 != -1)
LABEL_59:
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v17 = type metadata accessor for Logger(0);
  sub_100056D88(v17, (uint64_t)qword_1005F5748);
  (*(void (**)(char *, void *, uint64_t))(v11 + 16))(v14, a1, v10);
  swift_bridgeObjectRetain(a3);
  swift_errorRetain(a2);
  swift_bridgeObjectRetain(a3);
  v18 = swift_errorRetain(a2);
  v16 = Logger.logObject.getter(v18);
  v19 = static os_log_type_t.default.getter(v16);
  v20 = os_log_type_enabled((os_log_t)v16, v19);
  v87 = a2;
  if (v20)
  {
    v21 = swift_slowAlloc(32, -1);
    v83 = v11;
    v85 = (os_log_t)v16;
    v16 = v21;
    v22 = (Class *)swift_slowAlloc(8, -1);
    v84 = (uint64_t)v22;
    v88 = (_QWORD *)swift_slowAlloc(64, -1);
    v90[0] = (uint64_t)v88;
    *(_DWORD *)v16 = 138412802;
    isa = Array._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v91 = isa;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, (char *)&v91 + 8);
    *v22 = isa;
    swift_bridgeObjectRelease_n(a3, 2);
    *(_WORD *)(v16 + 12) = 2080;
    *(_QWORD *)&v91 = 0;
    *((_QWORD *)&v91 + 1) = 0xE000000000000000;
    _print_unlocked<A, B>(_:_:)(v14, &v91, v10, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v24 = *((_QWORD *)&v91 + 1);
    *(_QWORD *)&v91 = sub_100056DA0(v91, *((unint64_t *)&v91 + 1), v90);
    a2 = v87;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, (char *)&v91 + 8);
    v25 = swift_bridgeObjectRelease(v24);
    (*(void (**)(char *, uint64_t, __n128))(v83 + 8))(v14, v10, v25);
    *(_WORD *)(v16 + 22) = 2080;
    *(_QWORD *)&v91 = a2;
    swift_errorRetain(a2);
    v26 = sub_100053F2C((uint64_t *)&unk_1005D2AC0);
    v27 = String.init<A>(describing:)(&v91, v26);
    v29 = v28;
    *(_QWORD *)&v91 = sub_100056DA0(v27, v28, v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, (char *)&v91 + 8);
    swift_bridgeObjectRelease(v29);
    swift_errorRelease(a2);
    swift_errorRelease(a2);
    v30 = v85;
    _os_log_impl((void *)&_mh_execute_header, v85, v19, "FMAddFriendViewController: 🙏 Error offering shares to %@ %s %s", (uint8_t *)v16, 0x20u);
    v31 = sub_100053F2C((uint64_t *)&unk_1005D9680);
    v32 = v84;
    swift_arrayDestroy(v84, 1, v31);
    swift_slowDealloc(v32, -1, -1);
    v33 = v88;
    swift_arrayDestroy(v88, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1, -1);
    swift_slowDealloc(v16, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease_n(a3, 2);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    swift_errorRelease(a2);
    swift_errorRelease(a2);

  }
  a1 = (void *)_convertErrorToNSError(_:)(a2);
  v46 = objc_msgSend(a1, "userInfo");

  v47 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)(v46, &type metadata for String, (char *)&type metadata for Any + 8, &protocol witness table for String);
  v11 = v47 + 64;
  v48 = 1 << *(_BYTE *)(v47 + 32);
  v49 = -1;
  if (v48 < 64)
    v49 = ~(-1 << v48);
  a3 = v49 & *(_QWORD *)(v47 + 64);
  v14 = (char *)((unint64_t)(v48 + 63) >> 6);
  swift_bridgeObjectRetain(v47);
  a2 = 0;
  v10 = 100;
  v88 = _swiftEmptyArrayStorage;
  while (1)
  {
    if (a3)
    {
      v50 = __clz(__rbit64(a3));
      a3 &= a3 - 1;
      v51 = v50 | (a2 << 6);
      goto LABEL_33;
    }
    v52 = a2 + 1;
    if (__OFADD__(a2, 1))
    {
      __break(1u);
      goto LABEL_59;
    }
    if (v52 >= (uint64_t)v14)
    {
LABEL_48:
      swift_release(v47);
      swift_bridgeObjectRelease(v47);
      v64 = v88;
      v65 = v88[2];
      if (v65)
      {
        *(_QWORD *)&v91 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain(v88);
        sub_100112164(0, v65, 0);
        v66 = (_QWORD *)v91;
        v67 = v64 + 5;
        v68 = v86;
        do
        {
          v69 = *(v67 - 1);
          v70 = *v67;
          v71 = swift_bridgeObjectRetain(*v67);
          Handle.init(rawValue:)(v69, v70, v71);
          *(_QWORD *)&v91 = v66;
          v73 = v66[2];
          v72 = v66[3];
          if (v73 >= v72 >> 1)
          {
            sub_100112164(v72 > 1, v73 + 1, 1);
            v66 = (_QWORD *)v91;
          }
          v67 += 2;
          v66[2] = v73 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))((unint64_t)v66+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v73, v9, v68);
          --v65;
        }
        while (v65);
        swift_bridgeObjectRelease_n(v88, 2);
      }
      else
      {
        swift_bridgeObjectRelease(v88);
        v66 = _swiftEmptyArrayStorage;
      }
      v74 = type metadata accessor for OfferLocationError(0);
      v75 = sub_100008000(&qword_1005E3150, (uint64_t (*)(uint64_t))&type metadata accessor for OfferLocationError, (uint64_t)&protocol conformance descriptor for OfferLocationError);
      v76 = swift_allocError(v74, v75, 0, 0);
      *v77 = v66;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v74 - 8) + 104))(v77, enum case for OfferLocationError.failed(_:), v74);
      *(_QWORD *)&v91 = v76;
      v78 = sub_100053F2C(&qword_1005DCDC8);
      CheckedContinuation.resume(throwing:)(&v91, v78);
      return swift_errorRelease(v87);
    }
    v53 = *(_QWORD *)(v11 + 8 * v52);
    ++a2;
    if (!v53)
    {
      a2 = v52 + 1;
      if (v52 + 1 >= (uint64_t)v14)
        goto LABEL_48;
      v53 = *(_QWORD *)(v11 + 8 * a2);
      if (!v53)
      {
        a2 = v52 + 2;
        if (v52 + 2 >= (uint64_t)v14)
          goto LABEL_48;
        v53 = *(_QWORD *)(v11 + 8 * a2);
        if (!v53)
        {
          a2 = v52 + 3;
          if (v52 + 3 >= (uint64_t)v14)
            goto LABEL_48;
          v53 = *(_QWORD *)(v11 + 8 * a2);
          if (!v53)
          {
            a2 = v52 + 4;
            if (v52 + 4 >= (uint64_t)v14)
              goto LABEL_48;
            v53 = *(_QWORD *)(v11 + 8 * a2);
            if (!v53)
              break;
          }
        }
      }
    }
LABEL_32:
    a3 = (v53 - 1) & v53;
    v51 = __clz(__rbit64(v53)) + (a2 << 6);
LABEL_33:
    v55 = (unint64_t *)(*(_QWORD *)(v47 + 48) + 16 * v51);
    v16 = *v55;
    a1 = (void *)v55[1];
    swift_bridgeObjectRetain_n(a1, 2);
    v56 = sub_1003C8BB4(v16, (unint64_t)a1);
    if ((v57 & 1) != 0 || 100 * (v56 / 100) != 500 || v56 == 518)
    {
      swift_bridgeObjectRelease(a1);
    }
    else
    {
      if (*(_QWORD *)(v47 + 16) && (v58 = sub_10004C348(v16, (uint64_t)a1), (v59 & 1) != 0))
      {
        sub_100056E70(*(_QWORD *)(v47 + 56) + 32 * v58, (uint64_t)&v91);
      }
      else
      {
        v91 = 0u;
        v92 = 0u;
      }
      swift_bridgeObjectRelease(a1);
      if (*((_QWORD *)&v92 + 1))
      {
        if ((swift_dynamicCast(v90, &v91, (char *)&type metadata for Any + 8, &type metadata for String, 6) & 1) != 0)
        {
          v84 = v90[1];
          v85 = (os_log_t)v90[0];
          if ((swift_isUniquelyReferenced_nonNull_native(v88) & 1) == 0)
            v88 = sub_100070178(0, v88[2] + 1, 1, v88);
          v16 = v88[2];
          v60 = v88[3];
          a1 = (void *)(v16 + 1);
          if (v16 >= v60 >> 1)
            v88 = sub_100070178((_QWORD *)(v60 > 1), v16 + 1, 1, v88);
          v61 = v88;
          v88[2] = a1;
          v62 = &v61[2 * v16];
          v63 = v84;
          v62[4] = v85;
          v62[5] = v63;
        }
      }
      else
      {
        sub_1000051EC((uint64_t)&v91, &qword_1005D3AB0);
      }
    }
  }
  v54 = v52 + 5;
  if (v54 >= (uint64_t)v14)
    goto LABEL_48;
  v53 = *(_QWORD *)(v11 + 8 * v54);
  if (v53)
  {
    a2 = v54;
    goto LABEL_32;
  }
  while (1)
  {
    a2 = v54 + 1;
    if (__OFADD__(v54, 1))
      break;
    if (a2 >= (uint64_t)v14)
      goto LABEL_48;
    v53 = *(_QWORD *)(v11 + 8 * a2);
    ++v54;
    if (v53)
      goto LABEL_32;
  }
  __break(1u);
LABEL_61:
  swift_once(&qword_1005D1DE8, sub_100005ADC);
LABEL_6:
  v34 = type metadata accessor for Logger(0);
  sub_100056D88(v34, (uint64_t)qword_1005F5748);
  v35 = v11;
  (*(void (**)(unint64_t, void *, uint64_t))(v11 + 16))(v16, a1, v10);
  swift_bridgeObjectRetain(a3);
  v37 = Logger.logObject.getter(v36);
  v38 = static os_log_type_t.default.getter(v37);
  if (os_log_type_enabled(v37, v38))
  {
    v39 = swift_slowAlloc(22, -1);
    v40 = (Class *)swift_slowAlloc(8, -1);
    v88 = (_QWORD *)swift_slowAlloc(32, -1);
    v90[0] = (uint64_t)v88;
    *(_DWORD *)v39 = 138412546;
    v41 = Array._bridgeToObjectiveC()().super.isa;
    *(_QWORD *)&v91 = v41;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, (char *)&v91 + 8);
    *v40 = v41;
    swift_bridgeObjectRelease(a3);
    *(_WORD *)(v39 + 12) = 2080;
    *(_QWORD *)&v91 = 0;
    *((_QWORD *)&v91 + 1) = 0xE000000000000000;
    _print_unlocked<A, B>(_:_:)(v16, &v91, v10, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
    v42 = *((_QWORD *)&v91 + 1);
    *(_QWORD *)&v91 = sub_100056DA0(v91, *((unint64_t *)&v91 + 1), v90);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v91, (char *)&v91 + 8);
    v43 = swift_bridgeObjectRelease(v42);
    (*(void (**)(unint64_t, uint64_t, __n128))(v35 + 8))(v16, v10, v43);
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "FMAddFriendViewController: 🙏 Offered shares to %@ %s", (uint8_t *)v39, 0x16u);
    v44 = sub_100053F2C((uint64_t *)&unk_1005D9680);
    swift_arrayDestroy(v40, 1, v44);
    swift_slowDealloc(v40, -1, -1);
    v45 = v88;
    swift_arrayDestroy(v88, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v45, -1, -1);
    swift_slowDealloc(v39, -1, -1);
  }
  else
  {
    v80 = swift_bridgeObjectRelease(a3);
    (*(void (**)(unint64_t, uint64_t, __n128))(v35 + 8))(v16, v10, v80);
  }

  v81 = sub_100053F2C(&qword_1005DCDC8);
  return CheckedContinuation.resume(returning:)(v81, v81);
}

uint64_t sub_1003CA1E8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v15;

  v8 = type metadata accessor for ContactPickerViewModel.Dependencies(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v11 + 16))(v10, a1);
  v12 = swift_allocObject(&unk_100560FE8, 24, 7);
  *(_QWORD *)(v12 + 16) = a4;
  swift_bridgeObjectRetain(a3);
  v13 = a4;
  return OfferLocationContactPickerView.init(dependencies:fromEmail:performAction:showOfferSuccess:)(v10, a2, a3, &unk_1005E3140, v12, sub_1003CA2C4, 0);
}

uint64_t sub_1003CA2C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void *v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD aBlock[5];
  uint64_t v30;

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v28 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v26 = *(_QWORD *)(v5 - 8);
  v27 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchTime(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v25 - v13;
  sub_1000555A8();
  v15 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()(v15);
  + infix(_:_:)(v12, 0.3);
  v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v12, v8);
  v17 = swift_allocObject(&unk_100561010, 24, 7);
  *(_QWORD *)(v17 + 16) = a1;
  aBlock[4] = sub_1003CB3FC;
  v30 = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_100561028;
  v18 = _Block_copy(aBlock);
  v19 = v30;
  swift_bridgeObjectRetain(a1);
  swift_release(v19);
  static DispatchQoS.unspecified.getter(v20);
  aBlock[0] = _swiftEmptyArrayStorage;
  v21 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v22 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v23 = sub_1000555E4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v22, v23, v2, v21);
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)(v14, v7, v4, v18);
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v28 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v27);
  return ((uint64_t (*)(char *, uint64_t))v16)(v14, v8);
}

void sub_1003CA540()
{
  void *v0;
  Class isa;

  v0 = (void *)objc_opt_self(FMAddFriendsUtilities);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v0, "showOfferSuccessForHandles:", isa);

}

uint64_t sub_1003CA5A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v19[24];
  _BYTE v20[24];
  _BYTE v21[24];

  v2 = type metadata accessor for FMSelectedSection(0);
  v3 = __chkstk_darwin(v2);
  v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = __chkstk_darwin(v3);
  v8 = &v19[-v7 - 8];
  __chkstk_darwin(v6);
  v10 = &v19[-v9 - 8];
  v11 = OBJC_IVAR____TtC6FindMy23FMInitialCardController_mediator;
  v12 = *(_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy23FMInitialCardController_mediator) + 56);
  v13 = v12 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection;
  swift_beginAccess(v12 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection, v21, 0, 0);
  sub_10004FC74(v13, (uint64_t)v10, type metadata accessor for FMSelectedSection);
  swift_storeEnumTagMultiPayload(v8, v2, 14);
  v14 = v12 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v12 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, v20, 0, 0);
  sub_10004FC74(v14, (uint64_t)v5, type metadata accessor for FMSelectedSection);
  swift_beginAccess(v14, v19, 33, 0);
  swift_retain(v12);
  sub_100009DF8((uint64_t)v8, v14);
  swift_endAccess(v19);
  sub_10004C8A4((uint64_t)v5);
  sub_10004FCB8((uint64_t)v8, type metadata accessor for FMSelectedSection);
  sub_10004FCB8((uint64_t)v5, type metadata accessor for FMSelectedSection);
  swift_release(v12);
  v15 = *(_QWORD *)(*(_QWORD *)(a1 + v11) + 56);
  sub_10004FC74((uint64_t)v10, (uint64_t)v8, type metadata accessor for FMSelectedSection);
  v16 = v15 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection;
  swift_beginAccess(v15 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection, v19, 33, 0);
  swift_retain(v15);
  sub_100009DF8((uint64_t)v8, v16);
  swift_endAccess(v19);
  sub_1001F5870();
  sub_10004FCB8((uint64_t)v8, type metadata accessor for FMSelectedSection);
  swift_release(v15);
  return sub_10004FCB8((uint64_t)v10, type metadata accessor for FMSelectedSection);
}

void sub_1003CA7E0()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy23FMInitialCardController_mediator));
  swift_release(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy23FMInitialCardController_selectionSubscription));

}

id sub_1003CA81C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMInitialCardController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

unsigned __int8 *sub_1003CA894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unsigned __int8 *v12;
  uint64_t v14;
  uint64_t v15;

  v14 = a1;
  v15 = a2;
  swift_bridgeObjectRetain(a2);
  v4 = String.init<A>(_:)(&v14, &type metadata for String, &protocol witness table for String, &protocol witness table for String);
  v6 = v4;
  v7 = v5;
  if ((v5 & 0x1000000000000000) == 0)
  {
    if ((v5 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v9 = HIBYTE(v7) & 0xF;
    v14 = v6;
    v15 = v7 & 0xFFFFFFFFFFFFFFLL;
    v8 = (unsigned __int8 *)&v14;
    goto LABEL_7;
  }
  v6 = sub_1003CABF4(v4, v5);
  v11 = v10;
  swift_bridgeObjectRelease(v7);
  v7 = v11;
  if ((v11 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v6 & 0x1000000000000000) != 0)
  {
    v8 = (unsigned __int8 *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v9 = v6 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v8 = (unsigned __int8 *)_StringObject.sharedUTF8.getter(v6, v7);
  }
LABEL_7:
  v12 = sub_1003CA978(v8, v9, a3);
  swift_bridgeObjectRelease(v7);
  return v12;
}

unsigned __int8 *sub_1003CA978(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1003CABF4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1;
  v3 = 7;
  if (((a2 >> 60) & ((a1 & 0x800000000000000) == 0)) != 0)
    v3 = 11;
  v4 = String.subscript.getter(15, v3 | (v2 << 16), a1, a2);
  v6 = v5;
  v9 = sub_1003CAC70(v4, v7, v8, v5);
  swift_bridgeObjectRelease(v6);
  return v9;
}

uint64_t sub_1003CAC70(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v5;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[5];

  v5 = a3;
  if ((a4 & 0x1000000000000000) != 0)
  {
    v12 = sub_1003CADB4(a1, a2, a3, a4);
    if (v12)
    {
      v9 = v12;
      v8 = (unint64_t)sub_100057310(v12, 0);
      v5 = sub_1003CAEA0((unint64_t)v15, v8 + 32, v9, a1, a2, v5, a4);
      v13 = v15[3];
      swift_bridgeObjectRetain(a4);
      swift_bridgeObjectRelease(v13);
      if (v5 != v9)
      {
        __break(1u);
        goto LABEL_11;
      }
    }
    else
    {
      v8 = (unint64_t)_swiftEmptyArrayStorage;
    }
    v14 = static String._uncheckedFromUTF8(_:)(v8 + 32, *(_QWORD *)(v8 + 16));
    swift_release(v8);
    return v14;
  }
  else
  {
    v8 = a1 >> 16;
    v9 = a2 >> 16;
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
      {
        v10 = (a4 & 0xFFFFFFFFFFFFFFFLL) + 32;
LABEL_5:
        v10 += v8;
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      }
LABEL_11:
      v10 = _StringObject.sharedUTF8.getter(v5, a4);
      if (!v10)
        return static String._uncheckedFromUTF8(_:)(v10, v9 - v8);
      goto LABEL_5;
    }
    v15[0] = a3;
    v15[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return static String._uncheckedFromUTF8(_:)((char *)v15 + v8, v9 - v8);
  }
}

unint64_t sub_1003CADB4(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_100070F58(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_100070F58(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return String.UTF8View._foreignDistance(from:to:)(v7);
  }
  __break(1u);
  return result;
}

unint64_t sub_1003CAEA0(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_100070F58(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = String.UTF8View._foreignSubscript(position:)();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = _StringObject.sharedUTF8.getter(a6, a7);
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_100070F58(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = String.UTF8View._foreignIndex(after:)(v12, a6, a7);
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

id sub_1003CB0B0(uint64_t a1, uint64_t *a2)
{
  _BYTE *v2;
  _BYTE *v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  objc_class *v21;
  objc_super v23;

  v4 = v2;
  v6 = sub_100053F2C(&qword_1005D33B0);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v4[qword_1005DD5D0] = 0;
  *(_QWORD *)&v4[qword_1005DD5D8] = 0;
  v9 = &v4[qword_1005DD5E0];
  v10 = type metadata accessor for FMIPSafeLocation(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = &v4[qword_1005DD5E8];
  *v11 = 0;
  v11[1] = 0;
  v4[qword_1005DD5F0] = 0;
  v12 = qword_1005DD5F8;
  v13 = v4;
  static Locale.autoupdatingCurrent.getter(v13);
  v14 = type metadata accessor for Locale(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v8, 0, 1, v14);
  v15 = type metadata accessor for FMIPReverseGeocodingCache(0);
  swift_allocObject(v15, *(unsigned int *)(v15 + 48), *(unsigned __int16 *)(v15 + 52));
  *(_QWORD *)&v4[v12] = FMIPReverseGeocodingCache.init(preferredLocale:)(v8);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v16 = type metadata accessor for Logger(0);
  v17 = sub_100056D88(v16, (uint64_t)qword_1005F5748);
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "FMItemsGroupViewController: Initialized", v20, 2u);
    swift_slowDealloc(v20, -1, -1);
  }

  *(_QWORD *)&v13[qword_1005DD5C8] = a1;
  swift_retain(a1);

  v21 = (objc_class *)sub_100053F2C(a2);
  v23.receiver = v13;
  v23.super_class = v21;
  return objc_msgSendSuper2(&v23, "initWithNibName:bundle:", 0, 0);
}

uint64_t sub_1003CB2D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)swift_task_alloc(dword_1005E3114);
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_1000BBF58;
  return sub_100244F1C(a1, a2, v2);
}

uint64_t sub_1003CB33C()
{
  uint64_t v0;

  return sub_1003CA1E8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_1003CB348()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003CB36C()
{
  uint64_t v0;

  return sub_1003CA5A0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1003CB374(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc(dword_1005E313C);
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1000C7978;
  return sub_1003C9134(a1, a2, v6);
}

uint64_t sub_1003CB3D8()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003CB3FC()
{
  sub_1003CA540();
}

double sub_1003CB404(uint64_t a1)
{
  uint64_t *v1;

  return sub_1003C963C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1003CB410()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;

  v1 = sub_100053F2C(&qword_1005DCDC8);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  v4 = (v3 + 24) & ~v3;
  v5 = v4 + *(_QWORD *)(v2 + 64);
  v6 = v3 | 7;
  v7 = swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  (*(void (**)(uint64_t, uint64_t, __n128))(v2 + 8))(v0 + v4, v1, v7);
  return swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1003CB488(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_100053F2C(&qword_1005DCDC8) - 8) + 80);
  return sub_1003C9760(a1, a2, *(_QWORD *)(v2 + 16), v2 + ((v5 + 24) & ~v5));
}

double sub_1003CB4DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double result;
  _BYTE v18[24];
  _BYTE v19[24];

  v2 = v1;
  v4 = type metadata accessor for FMSelectedSection(0);
  v5 = __chkstk_darwin(v4);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  v9 = &v18[-v8];
  v10 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy23FMInitialCardController_discoveryCoordinator);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy23FMInitialCardController_discoveryCoordinator) = 0;

  v11 = OBJC_IVAR____TtC6FindMy23FMInitialCardController_mediator;
  v12 = *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy23FMInitialCardController_mediator) + 56);
  swift_storeEnumTagMultiPayload(v9, v4, 16);
  v13 = v12 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection;
  swift_beginAccess(v12 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection, v19, 33, 0);
  swift_retain(v12);
  sub_100009DF8((uint64_t)v9, v13);
  swift_endAccess(v19);
  sub_1001F5870();
  sub_10004FCB8((uint64_t)v9, type metadata accessor for FMSelectedSection);
  swift_release(v12);
  v14 = *(_QWORD *)(*(_QWORD *)(v2 + v11) + 56);
  v15 = type metadata accessor for FMIPItem(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v9, a1, v15);
  swift_storeEnumTagMultiPayload(v9, v4, 3);
  v16 = v14 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v14 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, v19, 0, 0);
  sub_10004FC74(v16, (uint64_t)v7, type metadata accessor for FMSelectedSection);
  swift_beginAccess(v16, v18, 33, 0);
  swift_retain(v14);
  sub_100009DF8((uint64_t)v9, v16);
  swift_endAccess(v18);
  sub_10004C8A4((uint64_t)v7);
  sub_10004FCB8((uint64_t)v9, type metadata accessor for FMSelectedSection);
  sub_10004FCB8((uint64_t)v7, type metadata accessor for FMSelectedSection);
  *(_QWORD *)&result = swift_release(v14).n128_u64[0];
  return result;
}

double sub_1003CB6D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  _BYTE *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  _BYTE v13[24];
  _BYTE v14[24];
  _BYTE v15[24];

  v1 = type metadata accessor for FMSelectedSection(0);
  v2 = __chkstk_darwin(v1);
  v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v2);
  v6 = &v13[-v5 - 8];
  v7 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy23FMInitialCardController_discoveryCoordinator);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy23FMInitialCardController_discoveryCoordinator) = 0;

  v8 = *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy23FMInitialCardController_mediator) + 56);
  v9 = v8 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection;
  swift_beginAccess(v8 + OBJC_IVAR____TtC6FindMy21FMSelectionController_previousSelectedSection, v15, 0, 0);
  sub_10004FC74(v9, (uint64_t)v6, type metadata accessor for FMSelectedSection);
  v10 = v8 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v8 + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection, v14, 0, 0);
  sub_10004FC74(v10, (uint64_t)v4, type metadata accessor for FMSelectedSection);
  swift_beginAccess(v10, v13, 33, 0);
  swift_retain(v8);
  sub_100009DF8((uint64_t)v6, v10);
  swift_endAccess(v13);
  sub_10004C8A4((uint64_t)v4);
  sub_10004FCB8((uint64_t)v6, type metadata accessor for FMSelectedSection);
  sub_10004FCB8((uint64_t)v4, type metadata accessor for FMSelectedSection);
  *(_QWORD *)&result = swift_release(v8).n128_u64[0];
  return result;
}

uint64_t sub_1003CB84C(uint64_t a1)
{
  return sub_1003CB8C0(a1, qword_1005F5FE0, 0x68536E6F63616562, 0xED0000676E697261);
}

uint64_t sub_1003CB878(uint64_t a1)
{
  return sub_1003CB8C0(a1, qword_1005F5FF8, 0xD000000000000011, 0x80000001004C4F50);
}

uint64_t sub_1003CB89C(uint64_t a1)
{
  return sub_1003CB8C0(a1, qword_1005F6010, 0xD000000000000015, 0x80000001004C4F70);
}

uint64_t sub_1003CB8C0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = type metadata accessor for Logger(0);
  sub_10005CFFC(v7, a2);
  sub_100056D88(v7, (uint64_t)a2);
  return Logger.init(subsystem:category:)(0xD000000000000010, 0x80000001004AB8B0, a3, a4);
}

double sub_1003CB934(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, void *);
  uint64_t v7;
  id v8;
  double result;

  v4 = a2;
  v6 = *(void (**)(uint64_t, void *))(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  if (a2)
  {
    v7 = sub_100006C5C(0, &qword_1005E31B8, CLPlacemark_ptr);
    v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)(v4, v7);
  }
  swift_retain(v5);
  v8 = a3;
  v6(v4, a3);
  swift_release(v5);

  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

_QWORD *sub_1003CB9C0@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

dispatch_semaphore_t sub_1003CB9E0()
{
  dispatch_semaphore_t result;

  result = dispatch_semaphore_create(4);
  qword_1005E3158 = (uint64_t)result;
  return result;
}

char *sub_1003CBA64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, char a11)
{
  char *v11;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  id v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  objc_class *v31;
  char *v32;
  char *v33;
  double v34;
  NSString v35;
  uint64_t v36;
  char *v37;
  double v38;
  NSString v39;
  uint64_t v40;
  double v41;
  double v42;
  double v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  char *v49;
  char *v50;
  NSString v51;
  double v52;
  uint64_t v53;
  id v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  double v71;
  _BYTE v72[24];
  objc_super v73;

  v71 = *(double *)&a8;
  v68 = a3;
  v69 = a7;
  v65 = a1;
  v17 = a5 & 1;
  v18 = sub_100053F2C(&qword_1005D3370);
  __chkstk_darwin(v18);
  v20 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = &v11[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_fmfPlacemark];
  v22 = type metadata accessor for FMFAddress(0);
  v23 = *(_QWORD *)(v22 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v21, 1, 1, v22);
  *(_QWORD *)&v11[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_clPlacemark] = 0;
  v24 = OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_didReverseGeocodeGroup;
  v25 = v11;
  *(_QWORD *)&v11[v24] = dispatch_group_create();
  v26 = OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_geocoder;
  v27 = objc_allocWithZone((Class)CLGeocoder);
  *(_QWORD *)&v25[v26] = objc_msgSend(v27, "init", v65);
  v25[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_didZoomOnSelection] = 0;
  *(_QWORD *)&v25[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_overlay] = 0;
  *(_QWORD *)&v25[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius] = 0x4059000000000000;
  v28 = &v25[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_addressType];
  v29 = type metadata accessor for FMFLocationAlertAddressType(0);
  v70 = *(_QWORD *)(v29 - 8);
  v30 = *(void (**)(char *, uint64_t))(v70 + 16);
  v66 = a6;
  v67 = v29;
  v30(v28, a6);
  v25[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_locationType] = v17;

  v31 = (objc_class *)type metadata accessor for FMFenceMapAnnotation(0);
  v73.receiver = v25;
  v73.super_class = v31;
  v32 = (char *)objc_msgSendSuper2(&v73, "init");
  v33 = v32;
  if (a2)
  {
    v35 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v34 = swift_bridgeObjectRelease(a2).n128_u64[0];
  }
  else
  {
    v35 = 0;
  }
  v36 = v69;
  objc_msgSend(v32, "setTitle:", v35, v34);

  v37 = v32;
  if (a4)
  {
    swift_bridgeObjectRetain(a4);
    v39 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v38 = swift_bridgeObjectRelease(a4).n128_u64[0];
  }
  else
  {
    v39 = 0;
  }
  objc_msgSend(v32, "setSubtitle:", v39, v38);

  objc_msgSend(v32, "setCoordinate:", a9, a10);
  sub_1003867C0(v36, (uint64_t)v20);
  v40 = (uint64_t)&v32[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_fmfPlacemark];
  swift_beginAccess(&v32[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_fmfPlacemark], v72, 33, 0);
  sub_1003CDAB8((uint64_t)v20, v40);
  swift_endAccess(v72);
  v41 = 100.0;
  v42 = v71;
  if (v71 < 100.0)
    v42 = 100.0;
  if ((a11 & 1) == 0)
    v41 = v42;
  v43 = fmin(v41, 241401.0);
  *(double *)&v32[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius] = v43;
  v44 = objc_msgSend((id)objc_opt_self(MKCircle), "circleWithCenterCoordinate:radius:", a9, a10, v43);
  v45 = *(void **)&v32[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_overlay];
  *(_QWORD *)&v32[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_overlay] = v44;

  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v36, 1, v22) != 1)
  {
    v49 = v32;
    v50 = v49;
    if (a4)
    {
LABEL_14:
      v51 = String._bridgeToObjectiveC()();
LABEL_15:
      v46 = v66;
      *(_QWORD *)&v52 = swift_bridgeObjectRelease(a4).n128_u64[0];
LABEL_16:
      v48 = &qword_1005F5FF8[1];
      v47 = v67;
      objc_msgSend(v50, "setSubtitle:", v51, v52);

      goto LABEL_17;
    }
    v55 = objc_msgSend(v49, "title");
    if (v55)
    {
      v56 = v55;
      v57 = static String._unconditionallyBridgeFromObjectiveC(_:)(v55);
      v59 = v58;

      v60 = sub_1003CCA60();
      a4 = v61;
      if (v59)
      {
        if (v61)
        {
          if (v57 == v60 && v61 == v59)
          {
            swift_bridgeObjectRelease(v59);
            v51 = 0;
            goto LABEL_15;
          }
          v64 = _stringCompareWithSmolCheck(_:_:expecting:)(v57, v59, v60, v61, 0);
          swift_bridgeObjectRelease(v59);
          *(_QWORD *)&v52 = swift_bridgeObjectRelease(a4).n128_u64[0];
          if ((v64 & 1) != 0)
            goto LABEL_31;
          goto LABEL_28;
        }
LABEL_27:
        swift_bridgeObjectRelease(v59);
LABEL_28:
        sub_1003CCA60();
        if (v63)
        {
          a4 = v63;
          goto LABEL_14;
        }
LABEL_31:
        v51 = 0;
        v46 = v66;
        goto LABEL_16;
      }
    }
    else
    {
      sub_1003CCA60();
      a4 = v62;
    }
    if (!a4)
      goto LABEL_31;
    v59 = a4;
    goto LABEL_27;
  }
  swift_bridgeObjectRelease(a4);
  v46 = v66;
  v47 = v67;
  v48 = qword_1005F5FF8 + 8;
LABEL_17:
  v53 = v70;
  dispatch_group_enter(*(dispatch_group_t *)&v32[v48[8]]);
  sub_1003CBF18();

  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v46, v47);
  sub_100386808(v36);
  return v32;
}

void sub_1003CBF18()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double v12;
  double v13;
  double v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD aBlock[5];
  uint64_t v30;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v27 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v25 = *(_QWORD *)(v5 - 8);
  v26 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS.QoSClass(0);
  v9 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(v0, "coordinate");
  v13 = v12;
  objc_msgSend(v0, "coordinate");
  v15 = objc_msgSend(objc_allocWithZone((Class)CLLocation), "initWithLatitude:longitude:", v13, v14);
  v16 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  objc_msgSend(v16, "setNetworkActivityIndicatorVisible:", 1);

  sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, enum case for DispatchQoS.QoSClass.default(_:), v8);
  v17 = (void *)static OS_dispatch_queue.global(qos:)(v11);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v18 = swift_allocObject(&unk_100561180, 32, 7);
  *(_QWORD *)(v18 + 16) = v1;
  *(_QWORD *)(v18 + 24) = v15;
  aBlock[4] = sub_1003CDA84;
  v30 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_100561198;
  v19 = _Block_copy(aBlock);
  v20 = v1;
  v21 = v15;
  static DispatchQoS.unspecified.getter(v21);
  v28 = _swiftEmptyArrayStorage;
  v22 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v23 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v24 = sub_1000555E4();
  dispatch thunk of SetAlgebra.init<A>(_:)(&v28, v23, v24, v2, v22);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v7, v4, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v7, v26);
  swift_release(v30);
}

void sub_1003CC208(char *a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char *v8;
  _QWORD v9[5];
  uint64_t v10;

  if (qword_1005D2078 != -1)
    swift_once(&qword_1005D2078, sub_1003CB9E0);
  OS_dispatch_semaphore.wait()();
  v4 = *(void **)&a1[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_geocoder];
  objc_msgSend(v4, "cancelGeocode");
  v5 = swift_allocObject(&unk_1005611D0, 24, 7);
  *(_QWORD *)(v5 + 16) = a1;
  v9[4] = sub_1003CDAB0;
  v10 = v5;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_1003CB934;
  v9[3] = &unk_1005611E8;
  v6 = _Block_copy(v9);
  v7 = v10;
  v8 = a1;
  objc_msgSend(v4, "reverseGeocodeLocation:completionHandler:", a2, v6, swift_release(v7).n128_f64[0]);
  _Block_release(v6);
}

void sub_1003CC31C(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  id v11;
  unint64_t v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  NSString v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  id v33;
  id v34;
  void *v35;
  uint64_t v36;
  void *v37;
  double v38;
  double v39;
  id v40;
  uint64_t v41;
  id v42;
  char **v43;
  double v44;
  double v45;
  uint64_t v46;
  double v47;
  double v48;
  id v49;
  void *v50;
  uint64_t v51;
  id v52;
  id v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  unint64_t v58;
  _BYTE v59[24];

  v5 = sub_100053F2C(&qword_1005D3370);
  v6 = __chkstk_darwin(v5);
  v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v56 - v9;
  if (qword_1005D2078 != -1)
    swift_once(&qword_1005D2078, sub_1003CB9E0);
  OS_dispatch_semaphore.signal()();
  v11 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  objc_msgSend(v11, "setNetworkActivityIndicatorVisible:", 0);

  if (!a1)
  {
    objc_msgSend(a3, "setTitle:", 0);
    objc_msgSend(a3, "setSubtitle:", 0);
LABEL_55:
    dispatch_group_leave(*(dispatch_group_t *)&a3[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_didReverseGeocodeGroup]);
    return;
  }
  v12 = (unint64_t)a1 >> 62;
  if (!((unint64_t)a1 >> 62))
  {
    v13 = *(void **)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(a1);
    if (v13)
      goto LABEL_6;
LABEL_43:
    objc_msgSend(a3, "setTitle:", 0, swift_bridgeObjectRelease(a1).n128_f64[0]);
    objc_msgSend(a3, "setSubtitle:", 0);
LABEL_44:
    if (v12)
    {
      if (a1 < 0)
        v55 = a1;
      else
        v55 = a1 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(a1);
      v13 = (void *)_CocoaArrayWrapper.endIndex.getter(v55);
      if (v13)
        goto LABEL_46;
    }
    else
    {
      v13 = *(void **)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain(a1);
      if (v13)
      {
LABEL_46:
        if ((a1 & 0xC000000000000001) != 0)
        {
          v52 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
          goto LABEL_49;
        }
        if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          v52 = *(id *)(a1 + 32);
LABEL_49:
          v53 = v52;
          swift_bridgeObjectRelease(a1);
          v54 = *(void **)&a3[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_clPlacemark];
          *(_QWORD *)&a3[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_clPlacemark] = v53;

          goto LABEL_55;
        }
        goto LABEL_59;
      }
    }
    swift_bridgeObjectRelease(a1);
    goto LABEL_55;
  }
  if (a1 >= 0)
    v51 = a1 & 0xFFFFFFFFFFFFFF8;
  else
    v51 = a1;
  swift_bridgeObjectRetain(a1);
  v13 = (void *)_CocoaArrayWrapper.endIndex.getter(v51);
  if (!v13)
    goto LABEL_43;
LABEL_6:
  v58 = (unint64_t)a1 >> 62;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, a1);
  }
  else
  {
    if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_59:
      __break(1u);
      goto LABEL_60;
    }
    v14 = *(id *)(a1 + 32);
  }
  v15 = v14;
  v16 = objc_msgSend(v14, "name", swift_bridgeObjectRelease(a1).n128_f64[0]);
  objc_msgSend(a3, "setTitle:", v16);

  v57 = v15;
  FMFAddress.init(from:)();
  v17 = type metadata accessor for FMFAddress(0);
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v10, 0, 1, v17);
  v19 = (uint64_t)&a3[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_fmfPlacemark];
  swift_beginAccess(&a3[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_fmfPlacemark], v59, 33, 0);
  sub_1003CDAB8((uint64_t)v10, v19);
  swift_endAccess(v59);
  v20 = objc_msgSend(a3, "title");
  if (!v20)
  {
    sub_1003CCA60();
    v28 = v30;
    goto LABEL_17;
  }
  v21 = v20;
  v22 = static String._unconditionallyBridgeFromObjectiveC(_:)(v20);
  v24 = v23;

  v25 = sub_1003CCA60();
  v28 = v26;
  if (!v24)
  {
LABEL_17:
    if (!v28)
      goto LABEL_24;
    v24 = v28;
    goto LABEL_19;
  }
  if (!v26)
  {
LABEL_19:
    swift_bridgeObjectRelease(v24);
LABEL_20:
    sub_1003CCA60();
    if (v31)
    {
      v28 = v31;
      v29 = String._bridgeToObjectiveC()();
      goto LABEL_22;
    }
    goto LABEL_24;
  }
  if (v22 == v25 && v26 == v24)
  {
    swift_bridgeObjectRelease(v24);
    v29 = 0;
LABEL_22:
    *(_QWORD *)&v27 = swift_bridgeObjectRelease(v28).n128_u64[0];
    goto LABEL_25;
  }
  v32 = _stringCompareWithSmolCheck(_:_:expecting:)(v22, v24, v25, v26, 0);
  swift_bridgeObjectRelease(v24);
  *(_QWORD *)&v27 = swift_bridgeObjectRelease(v28).n128_u64[0];
  if ((v32 & 1) == 0)
    goto LABEL_20;
LABEL_24:
  v29 = 0;
LABEL_25:
  objc_msgSend(a3, "setSubtitle:", v29, v27);

  sub_1003867C0(v19, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v8, 1, v17) != 1)
  {

    sub_100386808((uint64_t)v8);
    v12 = v58;
    goto LABEL_44;
  }
  sub_100386808((uint64_t)v8);
  v33 = v57;
  v34 = objc_msgSend(v57, "region");
  if (!v34)
    goto LABEL_34;
  v35 = v34;
  v36 = objc_opt_self(CLCircularRegion);
  v37 = (void *)swift_dynamicCastObjCClass(v35, v36);
  if (!v37)
  {

    goto LABEL_34;
  }
  objc_msgSend(v37, "radius");
  v39 = v38;

  if (v39 <= 0.0)
  {
LABEL_34:
    v42 = objc_msgSend(v33, "location");
    if (!v42)
    {
      v45 = 0.0;
      v12 = v58;
      goto LABEL_38;
    }
    v43 = &selRef_horizontalAccuracy;
    v13 = v42;
    v12 = v58;
LABEL_36:
    objc_msgSend(v42, *v43);
    v45 = v44;

LABEL_38:
    v46 = OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius;
    *(double *)&a3[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius] = fmin(fmax(v45, 100.0), 241401.0);
    objc_msgSend(a3, "coordinate");
    v49 = objc_msgSend((id)objc_opt_self(MKCircle), "circleWithCenterCoordinate:radius:", v47, v48, *(double *)&a3[v46]);
    v50 = *(void **)&a3[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_overlay];
    *(_QWORD *)&a3[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_overlay] = v49;

    goto LABEL_44;
  }
  v40 = objc_msgSend(v33, "region");
  if (v40)
  {
    v13 = v40;
    v41 = objc_opt_self(CLCircularRegion);
    v42 = (id)swift_dynamicCastObjCClass(v13, v41);
    v12 = v58;
    if (!v42)
    {
LABEL_60:

      goto LABEL_61;
    }
    v43 = &selRef_radius;
    goto LABEL_36;
  }
LABEL_61:
  __break(1u);
}

void sub_1003CC954(double a1)
{
  char *v1;
  uint64_t v2;
  double v3;
  double v4;
  id v5;
  void *v6;

  v2 = OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius;
  *(double *)&v1[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius] = fmin(fmax(a1, 100.0), 241401.0);
  objc_msgSend(v1, "coordinate");
  v5 = objc_msgSend((id)objc_opt_self(MKCircle), "circleWithCenterCoordinate:radius:", v3, v4, *(double *)&v1[v2]);
  v6 = *(void **)&v1[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_overlay];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_overlay] = v5;

}

uint64_t sub_1003CCA60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t countAndFlagsBits;
  uint64_t v11;
  uint64_t v12;
  id v13;
  Swift::String v14;
  Swift::String v15;
  _QWORD v17[2];
  unint64_t v18;
  _BYTE v19[24];
  Swift::String v20;

  v1 = type metadata accessor for FMFAddress(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100053F2C(&qword_1005D3370);
  __chkstk_darwin(v5);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v0 + OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_fmfPlacemark;
  swift_beginAccess(v8, v19, 0, 0);
  sub_1003867C0(v8, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
  {
    sub_100386808((uint64_t)v7);
LABEL_4:
    v17[1] = 0;
    v18 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(v18);
    v13 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v20._countAndFlagsBits = 0xD000000000000024;
    v20._object = (void *)0x80000001004B9160;
    v14._object = (void *)0x80000001004B9140;
    v14._countAndFlagsBits = 0xD000000000000012;
    v15._countAndFlagsBits = 0;
    v15._object = (void *)0xE000000000000000;
    countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, (NSBundle)v13, v15, v20)._countAndFlagsBits;
    swift_bridgeObjectRelease(0);

    return countAndFlagsBits;
  }
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
  v9 = sub_100386808((uint64_t)v7);
  countAndFlagsBits = FMFAddress.displayAddress.getter(v9);
  v12 = v11;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (!v12)
    goto LABEL_4;
  return countAndFlagsBits;
}

double sub_1003CCCF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v21;
  void (*v22)(char *, _QWORD, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[24];

  v1 = type metadata accessor for FMFAddress(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100053F2C(&qword_1005D3370);
  __chkstk_darwin(v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FMFAddressLevelType(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v33 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)&v33 - v16;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_locationType) != 1)
    return 2000.0;
  v18 = v0 + OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_fmfPlacemark;
  swift_beginAccess(v18, v36, 0, 0);
  sub_1003867C0(v18, (uint64_t)v7);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
    v21 = sub_100386808((uint64_t)v7);
    FMFAddress.levelType.getter(v21);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v17, v15, v8);
    v22 = *(void (**)(char *, _QWORD, uint64_t))(v9 + 104);
    v22(v12, enum case for FMFAddressLevelType.street(_:), v8);
    v23 = sub_100008000(&qword_1005E31B0, (uint64_t (*)(uint64_t))&type metadata accessor for FMFAddressLevelType, (uint64_t)&protocol conformance descriptor for FMFAddressLevelType);
    dispatch thunk of RawRepresentable.rawValue.getter(&v35, v8, v23);
    dispatch thunk of RawRepresentable.rawValue.getter(&v34, v8, v23);
    v25 = v34;
    v24 = v35;
    v26 = *(void (**)(char *, uint64_t))(v9 + 8);
    v26(v12, v8);
    if (v24 == v25)
    {
      v26(v17, v8);
      return 100.0;
    }
    v22(v12, enum case for FMFAddressLevelType.city(_:), v8);
    dispatch thunk of RawRepresentable.rawValue.getter(&v35, v8, v23);
    dispatch thunk of RawRepresentable.rawValue.getter(&v34, v8, v23);
    v28 = v34;
    v27 = v35;
    v26(v12, v8);
    if (v27 == v28)
    {
      v26(v17, v8);
      return 4000.0;
    }
    v22(v12, enum case for FMFAddressLevelType.state(_:), v8);
    dispatch thunk of RawRepresentable.rawValue.getter(&v35, v8, v23);
    dispatch thunk of RawRepresentable.rawValue.getter(&v34, v8, v23);
    v30 = v34;
    v29 = v35;
    v26(v12, v8);
    if (v29 == v30)
    {
      v26(v17, v8);
    }
    else
    {
      v22(v12, enum case for FMFAddressLevelType.country(_:), v8);
      dispatch thunk of RawRepresentable.rawValue.getter(&v35, v8, v23);
      dispatch thunk of RawRepresentable.rawValue.getter(&v34, v8, v23);
      v32 = v34;
      v31 = v35;
      v26(v12, v8);
      v26(v17, v8);
      if (v31 != v32)
        return 2000.0;
    }
    return 10000.0;
  }
  sub_100386808((uint64_t)v7);
  return 2000.0;
}

double sub_1003CD0E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v21;
  void (*v22)(char *, _QWORD, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[24];

  v1 = type metadata accessor for FMFAddress(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100053F2C(&qword_1005D3370);
  __chkstk_darwin(v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FMFAddressLevelType(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v33 - v14;
  __chkstk_darwin(v13);
  v17 = (char *)&v33 - v16;
  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_locationType) != 1)
    return 500.0;
  v18 = v0 + OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_fmfPlacemark;
  swift_beginAccess(v18, v36, 0, 0);
  sub_1003867C0(v18, (uint64_t)v7);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
    v21 = sub_100386808((uint64_t)v7);
    FMFAddress.levelType.getter(v21);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v17, v15, v8);
    v22 = *(void (**)(char *, _QWORD, uint64_t))(v9 + 104);
    v22(v12, enum case for FMFAddressLevelType.street(_:), v8);
    v23 = sub_100008000(&qword_1005E31B0, (uint64_t (*)(uint64_t))&type metadata accessor for FMFAddressLevelType, (uint64_t)&protocol conformance descriptor for FMFAddressLevelType);
    dispatch thunk of RawRepresentable.rawValue.getter(&v35, v8, v23);
    dispatch thunk of RawRepresentable.rawValue.getter(&v34, v8, v23);
    v25 = v34;
    v24 = v35;
    v26 = *(void (**)(char *, uint64_t))(v9 + 8);
    v26(v12, v8);
    if (v24 == v25)
    {
      v26(v17, v8);
      return 100.0;
    }
    v22(v12, enum case for FMFAddressLevelType.city(_:), v8);
    dispatch thunk of RawRepresentable.rawValue.getter(&v35, v8, v23);
    dispatch thunk of RawRepresentable.rawValue.getter(&v34, v8, v23);
    v28 = v34;
    v27 = v35;
    v26(v12, v8);
    if (v27 == v28)
    {
      v26(v17, v8);
      return 4000.0;
    }
    v22(v12, enum case for FMFAddressLevelType.state(_:), v8);
    dispatch thunk of RawRepresentable.rawValue.getter(&v35, v8, v23);
    dispatch thunk of RawRepresentable.rawValue.getter(&v34, v8, v23);
    v30 = v34;
    v29 = v35;
    v26(v12, v8);
    if (v29 == v30)
    {
      v26(v17, v8);
    }
    else
    {
      v22(v12, enum case for FMFAddressLevelType.country(_:), v8);
      dispatch thunk of RawRepresentable.rawValue.getter(&v35, v8, v23);
      dispatch thunk of RawRepresentable.rawValue.getter(&v34, v8, v23);
      v32 = v34;
      v31 = v35;
      v26(v12, v8);
      v26(v17, v8);
      if (v31 != v32)
        return 500.0;
    }
    return 10000.0;
  }
  sub_100386808((uint64_t)v7);
  return 500.0;
}

void sub_1003CD550()
{
  char *v0;
  char *v1;
  id v2;
  Swift::String v3;
  Swift::String v4;
  void *object;
  NSString v6;
  double v7;
  double v8;
  id v9;
  void *v10;
  Swift::String v11;

  v1 = v0;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v11._object = (void *)0x80000001004B91E0;
  v3._countAndFlagsBits = 0x4E49564C4F534552;
  v3._object = (void *)0xE900000000000047;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v11._countAndFlagsBits = 0xD00000000000001BLL;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v11)._object;

  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setTitle:", v6, swift_bridgeObjectRelease(object).n128_f64[0]);

  objc_msgSend(v1, "coordinate");
  v9 = objc_msgSend((id)objc_opt_self(MKCircle), "circleWithCenterCoordinate:radius:", v7, v8, *(double *)&v1[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_customRadius]);
  v10 = *(void **)&v1[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_overlay];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_overlay] = v9;

  dispatch_group_enter(*(dispatch_group_t *)&v1[OBJC_IVAR____TtC6FindMy20FMFenceMapAnnotation_didReverseGeocodeGroup]);
  sub_1003CBF18();
}

id sub_1003CD728()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMFenceMapAnnotation(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1003CD7EC()
{
  return type metadata accessor for FMFenceMapAnnotation(0);
}

uint64_t type metadata accessor for FMFenceMapAnnotation(uint64_t a1)
{
  uint64_t result;

  result = qword_1005E3198;
  if (!qword_1005E3198)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMFenceMapAnnotation);
  return result;
}

void sub_1003CD830(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[9];

  v6[0] = &unk_10048F958;
  v2 = type metadata accessor for FMFLocationAlertAddressType(319);
  if (v3 <= 0x3F)
  {
    v6[1] = *(_QWORD *)(v2 - 8) + 64;
    sub_1003CD8F0(319);
    if (v5 <= 0x3F)
    {
      v6[2] = *(_QWORD *)(v4 - 8) + 64;
      v6[3] = &unk_10048F970;
      v6[4] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v6[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
      v6[6] = &unk_10048F958;
      v6[7] = &unk_10048F970;
      v6[8] = (char *)&value witness table for Builtin.Int64 + 64;
      swift_updateClassMetadata2(a1, 256, 9, v6, a1 + 80);
    }
  }
}

void sub_1003CD8F0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (!qword_1005DD810)
  {
    v2 = type metadata accessor for FMFAddress(255);
    v3 = type metadata accessor for Optional(a1, v2);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_1005DD810);
  }
}

uint64_t storeEnumTagSinglePayload for FMFLocationType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1003CD990 + 4 * byte_10048F925[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1003CD9C4 + 4 * byte_10048F920[v4]))();
}

uint64_t sub_1003CD9C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003CD9CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003CD9D4);
  return result;
}

uint64_t sub_1003CD9E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003CD9E8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1003CD9EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003CD9F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMFLocationType()
{
  return &type metadata for FMFLocationType;
}

unint64_t sub_1003CDA14()
{
  unint64_t result;

  result = qword_1005E31A8;
  if (!qword_1005E31A8)
  {
    result = swift_getWitnessTable(&unk_10048FA10, &type metadata for FMFLocationType);
    atomic_store(result, (unint64_t *)&qword_1005E31A8);
  }
  return result;
}

uint64_t sub_1003CDA58()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

void sub_1003CDA84()
{
  uint64_t v0;

  sub_1003CC208(*(char **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1003CDA8C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1003CDAB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1003CC31C(a1, a2, *(char **)(v2 + 16));
}

uint64_t sub_1003CDAB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C(&qword_1005D3370);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1003CDB08()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t ObjCClassFromMetadata;
  NSString v12;
  id v13;

  v1 = v0;
  v2 = objc_msgSend(v0, "navigationController");
  if (v2)
  {
    v3 = v2;
    sub_1003C8288();

  }
  v4 = objc_msgSend(objc_allocWithZone((Class)UIActivityIndicatorView), "initWithFrame:", 0.0, 0.0, 20.0, 20.0);
  v5 = (void *)objc_opt_self(UIColor);
  v6 = objc_msgSend(v5, "grayColor");
  objc_msgSend(v4, "setColor:", v6);

  v7 = *(void **)&v1[OBJC_IVAR____TtC6FindMy33FMPredefinedMessageViewController_rightBarButtonItem];
  if (v7)
    objc_msgSend(v7, "setEnabled:", 0);
  v8 = *(void **)&v1[OBJC_IVAR____TtC6FindMy33FMPredefinedMessageViewController_tableView];
  objc_msgSend(v8, "_setSectionContentInsetFollowsLayoutMargins:", 1);
  objc_msgSend(v8, "setDataSource:", v1);
  objc_msgSend(v8, "setDelegate:", v1);
  objc_msgSend(v8, "setScrollEnabled:", 0);
  objc_msgSend(v8, "setAllowsSelection:", 1);
  objc_msgSend(v8, "setAllowsMultipleSelection:", 0);
  v9 = objc_msgSend(v5, "clearColor");
  objc_msgSend(v8, "setBackgroundColor:", v9);

  objc_msgSend(v8, "setRowHeight:", UITableViewAutomaticDimension);
  objc_msgSend(v8, "setEstimatedRowHeight:", *(double *)&v1[OBJC_IVAR____TtC6FindMy33FMPredefinedMessageViewController_style]);
  v10 = type metadata accessor for FMPredefinedMessageTableViewCell();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata(v10);
  v12 = String._bridgeToObjectiveC()();
  objc_msgSend(v8, "registerClass:forCellReuseIdentifier:", ObjCClassFromMetadata, v12);

  v13 = objc_msgSend(v1, "contentView");
  objc_msgSend(v13, "addSubview:", v8);

}

void sub_1003CDD60()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  Class isa;

  v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy33FMPredefinedMessageViewController_tableView];
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = (void *)objc_opt_self(NSLayoutConstraint);
  v3 = sub_100053F2C(&qword_1005D2F10);
  v4 = swift_allocObject(v3, 72, 7);
  *(_OWORD *)(v4 + 16) = xmmword_1004820D0;
  v5 = objc_msgSend(v1, "topAnchor");
  v6 = objc_msgSend(v0, "contentView");
  v7 = objc_msgSend(v6, "topAnchor");

  v8 = objc_msgSend(v5, "constraintEqualToAnchor:constant:", v7, *(double *)&v0[OBJC_IVAR____TtC6FindMy33FMPredefinedMessageViewController_style + 8]);
  *(_QWORD *)(v4 + 32) = v8;
  v9 = objc_msgSend(v1, "bottomAnchor");
  v10 = objc_msgSend(v0, "contentView");
  v11 = objc_msgSend(v10, "bottomAnchor");

  v12 = objc_msgSend(v9, "constraintEqualToAnchor:", v11);
  *(_QWORD *)(v4 + 40) = v12;
  v13 = objc_msgSend(v1, "leadingAnchor");
  v14 = objc_msgSend(v0, "contentView");
  v15 = objc_msgSend(v14, "leadingAnchor");

  v16 = objc_msgSend(v13, "constraintEqualToAnchor:", v15);
  *(_QWORD *)(v4 + 48) = v16;
  v17 = objc_msgSend(v1, "trailingAnchor");
  v18 = objc_msgSend(v0, "contentView");
  v19 = objc_msgSend(v18, "trailingAnchor");

  v20 = objc_msgSend(v17, "constraintEqualToAnchor:", v19);
  v21 = *(void **)&v0[OBJC_IVAR____TtC6FindMy33FMPredefinedMessageViewController_tableViewheightConstraint];
  *(_QWORD *)(v4 + 56) = v20;
  *(_QWORD *)(v4 + 64) = v21;
  specialized Array._endMutation()(v22);
  sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
  v23 = v21;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "activateConstraints:", isa, swift_bridgeObjectRelease(v4).n128_f64[0]);

}

uint64_t sub_1003CE1B0(void *a1)
{
  uint64_t v1;
  NSString v3;
  Class isa;
  char *v5;
  objc_class *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  id v17;
  double v18;
  void *v19;
  uint64_t v20;
  NSString v21;
  uint64_t result;
  objc_super v23;

  v3 = String._bridgeToObjectiveC()();
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v5 = (char *)objc_msgSend(a1, "dequeueReusableCellWithIdentifier:forIndexPath:", v3, isa);

  v6 = (objc_class *)type metadata accessor for FMPredefinedMessageTableViewCell();
  v7 = swift_dynamicCastClass(v5, v6);
  if (v7)
  {
    v8 = (char *)v7;
    v9 = IndexPath.section.getter(v7);
    v5 = (char *)OBJC_IVAR____TtC6FindMy33FMPredefinedMessageViewController_messages;
    if (v9 >= *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy33FMPredefinedMessageViewController_messages) + 16))
      return (uint64_t)v8;
    v10 = IndexPath.section.getter(v9);
    if ((v10 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      v11 = *(_QWORD *)&v5[v1];
      if (v10 < *(_QWORD *)(v11 + 16))
      {
        v12 = v11 + 16 * v10;
        v13 = *(_QWORD *)(v12 + 40);
        v14 = &v8[OBJC_IVAR____TtC6FindMy32FMPredefinedMessageTableViewCell_message];
        v15 = *(_QWORD *)&v8[OBJC_IVAR____TtC6FindMy32FMPredefinedMessageTableViewCell_message + 8];
        *(_QWORD *)v14 = *(_QWORD *)(v12 + 32);
        *((_QWORD *)v14 + 1) = v13;
        swift_bridgeObjectRetain(v13);
        *(_QWORD *)&v16 = swift_bridgeObjectRelease(v15).n128_u64[0];
        v23.receiver = v8;
        v23.super_class = v6;
        v17 = objc_msgSendSuper2(&v23, "textLabel", v16);
        if (v17)
        {
          v19 = v17;
          v20 = *((_QWORD *)v14 + 1);
          if (v20)
          {
            swift_bridgeObjectRetain(v20);
            v21 = String._bridgeToObjectiveC()();
            *(_QWORD *)&v18 = swift_bridgeObjectRelease(v20).n128_u64[0];
          }
          else
          {
            v21 = 0;
          }
          objc_msgSend(v19, "setText:", v21, v18);

        }
        return (uint64_t)v8;
      }
    }
    __break(1u);
  }

  result = _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000042, 0x80000001004C5240, "FindMy/FMPredefinedMessageViewController.swift", 46, 2, 132, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003CE454@<X0>(void *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  void (*v20)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  _BYTE *v26;
  uint64_t v27;
  void (*v28)(_BYTE *, uint64_t);
  Class isa;
  uint64_t v30;
  _BYTE *v31;
  _BYTE v33[12];
  int v34;
  _BYTE *v35;
  id v36;
  uint64_t v37;
  void (*v38)(_BYTE *, uint64_t, uint64_t);
  uint64_t v39;
  _BYTE *v40;

  v40 = a3;
  v5 = type metadata accessor for IndexPath(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v35 = &v33[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_100053F2C(&qword_1005E3230);
  __chkstk_darwin(v8);
  v10 = &v33[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_100053F2C(&qword_1005D33C0);
  v12 = __chkstk_darwin(v11);
  v14 = &v33[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = __chkstk_darwin(v12);
  v17 = &v33[-v16];
  __chkstk_darwin(v15);
  v19 = &v33[-v18];
  v38 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16);
  v39 = a2;
  v38(&v33[-v18], a2, v5);
  v20 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v21 = 1;
  v20(v19, 0, 1, v5);
  v36 = a1;
  v22 = objc_msgSend(a1, "indexPathForSelectedRow");
  if (v22)
  {
    v23 = v22;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v22);

    v21 = 0;
  }
  v20(v17, v21, 1, v5);
  v24 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1003CECBC((uint64_t)v19, (uint64_t)v10);
  sub_1003CECBC((uint64_t)v17, v24);
  v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v25((uint64_t)v10, 1, v5) != 1)
  {
    sub_1003CECBC((uint64_t)v10, (uint64_t)v14);
    if (v25(v24, 1, v5) != 1)
    {
      v26 = v35;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 32))(v35, v24, v5);
      v27 = sub_100008000((unint64_t *)&unk_1005DC410, (uint64_t (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
      v34 = dispatch thunk of static Equatable.== infix(_:_:)(v14, v26, v5, v27);
      v28 = *(void (**)(_BYTE *, uint64_t))(v6 + 8);
      v28(v26, v5);
      sub_1000051EC((uint64_t)v17, &qword_1005D33C0);
      sub_1000051EC((uint64_t)v19, &qword_1005D33C0);
      v28(v14, v5);
      sub_1000051EC((uint64_t)v10, &qword_1005D33C0);
      if ((v34 & 1) != 0)
        goto LABEL_10;
LABEL_11:
      v31 = v40;
      v38(v40, v39, v5);
      v30 = 0;
      return ((uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t))v20)(v31, v30, 1, v5);
    }
    sub_1000051EC((uint64_t)v17, &qword_1005D33C0);
    sub_1000051EC((uint64_t)v19, &qword_1005D33C0);
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v14, v5);
LABEL_8:
    sub_1000051EC((uint64_t)v10, &qword_1005E3230);
    goto LABEL_11;
  }
  sub_1000051EC((uint64_t)v17, &qword_1005D33C0);
  sub_1000051EC((uint64_t)v19, &qword_1005D33C0);
  if (v25(v24, 1, v5) != 1)
    goto LABEL_8;
  sub_1000051EC((uint64_t)v10, &qword_1005D33C0);
LABEL_10:
  isa = IndexPath._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v36, "deselectRowAtIndexPath:animated:", isa, 0);

  objc_msgSend(*(id *)(v37 + OBJC_IVAR____TtC6FindMy33FMPredefinedMessageViewController_rightBarButtonItem), "setEnabled:", 0);
  v30 = 1;
  v31 = v40;
  return ((uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t))v20)(v31, v30, 1, v5);
}

void sub_1003CE944(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;

  v3 = type metadata accessor for IndexPath(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100053F2C(&qword_1005D33C0);
  __chkstk_darwin(v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy33FMPredefinedMessageViewController_rightBarButtonItem);
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(a1, "indexPathForSelectedRow");
    if (v12)
    {
      v13 = v12;
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)(v12);

      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v6, v3);
      v14 = 1;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v9, 0, 1, v3);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) != 1)
        goto LABEL_7;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v9, 1, 1, v3);
    }
    v14 = 0;
LABEL_7:
    sub_1000051EC((uint64_t)v9, &qword_1005D33C0);
    objc_msgSend(v11, "setEnabled:", v14);

  }
}

id sub_1003CEBCC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMPredefinedMessageViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMPredefinedMessageViewController()
{
  return objc_opt_self(_TtC6FindMy33FMPredefinedMessageViewController);
}

ValueMetadata *type metadata accessor for FMPredefinedMessageViewStyle()
{
  return &type metadata for FMPredefinedMessageViewStyle;
}

uint64_t sub_1003CECBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C(&qword_1005D33C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003CED04()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[5];
  uint64_t v23;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v21 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v10 = (void *)static OS_dispatch_queue.main.getter(v9);
  v11 = swift_allocObject(&unk_100561308, 24, 7);
  *(_QWORD *)(v11 + 16) = v0;
  aBlock[4] = sub_10007B930;
  v23 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_100561320;
  v12 = _Block_copy(aBlock);
  v13 = v23;
  v14 = v1;
  swift_release(v13);
  static DispatchQoS.unspecified.getter(v15);
  aBlock[0] = _swiftEmptyArrayStorage;
  v16 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v17 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v18 = sub_1000555E4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v17, v18, v2, v16);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v12);
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1003CEF00()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

id sub_1003CEF24(_QWORD *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, double a6, double a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  id v27;
  uint64_t v29;
  uint64_t v30;

  v8 = v7;
  v16 = a1[3];
  v17 = sub_100029550(a1, v16);
  v18 = _bridgeAnythingToObjectiveC<A>(_:)(v17, v16);
  v19 = a4[3];
  if (v19)
  {
    v20 = sub_100029550(a4, a4[3]);
    v29 = a5;
    v30 = a2;
    v21 = a3;
    v22 = *(_QWORD *)(v19 - 8);
    __chkstk_darwin(v20);
    v24 = (char *)&v29 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v22 + 16))(v24);
    v25 = _bridgeAnythingToObjectiveC<A>(_:)(v24, v19);
    v26 = *(void (**)(char *, uint64_t))(v22 + 8);
    a3 = v21;
    v26(v24, v19);
    a5 = v29;
    a2 = v30;
    sub_100029574(a4);
  }
  else
  {
    v25 = 0;
  }
  v27 = objc_msgSend((id)swift_getObjCClassFromMetadata(v8), "constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:", v18, a2, a3, v25, a5, a6, a7);
  swift_unknownObjectRelease(v18);
  swift_unknownObjectRelease(v25);
  sub_100029574(a1);
  return v27;
}

double sub_1003CF098()
{
  void *v0;
  NSString *v1;
  NSString *v2;
  id v3;
  id v4;
  id v5;
  double result;

  v0 = (void *)objc_opt_self(UIColor);
  v1 = UIFontTextStyleHeadline;
  v2 = UIFontTextStyleSubheadline;
  v3 = objc_msgSend(v0, "systemBlueColor");
  v4 = objc_msgSend(v0, "labelColor");
  v5 = objc_msgSend(v0, "secondaryLabelColor");
  qword_1005E3238 = (uint64_t)v1;
  unk_1005E3240 = v2;
  qword_1005E3248 = (uint64_t)v3;
  unk_1005E3250 = v4;
  qword_1005E3258 = (uint64_t)v5;
  unk_1005E3260 = 32;
  qword_1005E3268 = 0xE100000000000000;
  unk_1005E3270 = xmmword_10048FAB0;
  unk_1005E3280 = xmmword_100488D20;
  result = 0.0;
  unk_1005E3290 = xmmword_1004845C0;
  qword_1005E32A0 = 0x4024000000000000;
  return result;
}

id sub_1003CF194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v5;
  uint64_t v6;
  char *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  NSString v28;
  id v29;
  id v30;
  objc_super v33;

  v5 = &v3[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell__style];
  v6 = qword_1005D2080;
  v7 = v3;
  if (v6 != -1)
    swift_once(&qword_1005D2080, sub_1003CF098);
  v8 = (void *)qword_1005E3238;
  v9 = (void *)unk_1005E3240;
  v10 = (void *)qword_1005E3248;
  v11 = (void *)unk_1005E3250;
  v13 = (void *)qword_1005E3258;
  v12 = unk_1005E3260;
  v14 = qword_1005E3268;
  v15 = qword_1005E32A0;
  v16 = unk_1005E3270;
  v17 = unk_1005E3280;
  v18 = unk_1005E3290;
  *(_QWORD *)v5 = qword_1005E3238;
  *((_QWORD *)v5 + 1) = v9;
  *((_QWORD *)v5 + 2) = v10;
  *((_QWORD *)v5 + 3) = v11;
  *((_QWORD *)v5 + 4) = v13;
  *((_QWORD *)v5 + 5) = v12;
  *((_QWORD *)v5 + 6) = v14;
  *(_OWORD *)(v5 + 56) = v16;
  *(_OWORD *)(v5 + 72) = v17;
  *(_OWORD *)(v5 + 88) = v18;
  *((_QWORD *)v5 + 13) = v15;
  v19 = OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_monogramImageView;
  v20 = objc_allocWithZone((Class)UIImageView);
  v21 = v8;
  v22 = v9;
  v23 = v10;
  v24 = v11;
  v25 = v13;
  *(_QWORD *)&v7[v19] = objc_msgSend(v20, "init", swift_bridgeObjectRetain(v14).n128_f64[0]);
  v26 = OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabel;
  *(_QWORD *)&v7[v26] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  *(_QWORD *)&v7[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabelLeadingWithoutImageConstraint] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabelLeadingWithImageConstraint] = 0;
  v27 = OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_handleLabel;
  *(_QWORD *)&v7[v27] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  *(_QWORD *)&v7[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_isInNetworkOperation] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_recipient] = 0;

  if (a3)
  {
    v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease(a3);
  }
  else
  {
    v28 = 0;
  }
  v33.receiver = v7;
  v33.super_class = (Class)type metadata accessor for FMRecipientTableViewCell();
  v29 = objc_msgSendSuper2(&v33, "initWithStyle:reuseIdentifier:", a1, v28);

  v30 = v29;
  sub_1003CF3E8();
  sub_1003CF534();

  return v30;
}

void sub_1003CF3E8()
{
  char *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;

  v1 = OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_monogramImageView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_monogramImageView], "setContentMode:", 2);
  v2 = objc_msgSend(v0, "contentView");
  objc_msgSend(v2, "addSubview:", *(_QWORD *)&v0[v1]);

  v3 = OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabel;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabel], "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(*(id *)&v0[v3], "setNumberOfLines:", 0);
  objc_msgSend(*(id *)&v0[v3], "setAdjustsFontForContentSizeCategory:", 1);
  v4 = objc_msgSend(v0, "contentView");
  objc_msgSend(v4, "addSubview:", *(_QWORD *)&v0[v3]);

  v5 = OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_handleLabel;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_handleLabel], "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(*(id *)&v0[v5], "setNumberOfLines:", 0);
  objc_msgSend(*(id *)&v0[v5], "setAdjustsFontForContentSizeCategory:", 1);
  v6 = objc_msgSend(v0, "contentView");
  objc_msgSend(v6, "addSubview:", *(_QWORD *)&v0[v5]);

}

void sub_1003CF534()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  double *v12;
  id v13;
  void *v14;
  uint64_t v15;
  double v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  Class isa;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  double v27;
  id v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  uint64_t v35;
  id v36;
  id v37;
  id v38;
  id v39;
  void *v40;
  void *v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  Class v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  id v68;
  Class v69;
  __int128 v70;
  __int128 v71;
  _QWORD v72[3];
  uint64_t v73;

  v1 = v0;
  v2 = OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_monogramImageView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_monogramImageView], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = (void *)objc_opt_self(NSLayoutConstraint);
  v68 = (id)sub_100053F2C(&qword_1005D2F10);
  v4 = swift_allocObject(v68, 64, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100481720;
  v5 = objc_msgSend(*(id *)&v0[v2], "centerYAnchor");
  v6 = objc_msgSend(v0, "contentView");
  v7 = objc_msgSend(v6, "centerYAnchor");

  v8 = objc_msgSend(v5, "constraintEqualToAnchor:", v7);
  *(_QWORD *)(v4 + 32) = v8;
  v9 = objc_msgSend(*(id *)&v0[v2], "leadingAnchor");
  v10 = objc_msgSend(v0, "contentView");
  v11 = objc_msgSend(v10, "leadingAnchor");

  v12 = (double *)&v0[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell__style];
  v13 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v11, *(double *)&v0[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell__style + 64]);

  *(_QWORD *)(v4 + 40) = v13;
  sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
  v14 = *(void **)&v0[v2];
  v15 = sub_100006C5C(0, (unint64_t *)&unk_1005E3310, UIImageView_ptr);
  v73 = v15;
  v72[0] = v14;
  v70 = 0u;
  v71 = 0u;
  v16 = v12[7];
  v17 = v14;
  *(_QWORD *)(v4 + 48) = sub_1003CEF24(v72, 7, 0, &v70, 0, 1.0, v16);
  v18 = *(void **)&v1[v2];
  v73 = v15;
  v72[0] = v18;
  v70 = 0u;
  v71 = 0u;
  v19 = v18;
  v20 = sub_1003CEF24(v72, 8, 0, &v70, 0, 1.0, v16);
  *(_QWORD *)(v4 + 56) = v20;
  v72[0] = v4;
  specialized Array._endMutation()(v20);
  v21 = v72[0];
  isa = Array._bridgeToObjectiveC()().super.isa;
  v67 = v3;
  objc_msgSend(v3, "activateConstraints:", isa, swift_bridgeObjectRelease(v21).n128_f64[0]);

  v23 = OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabel;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabel], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v24 = objc_msgSend(*(id *)&v1[v23], "leadingAnchor");
  v25 = objc_msgSend(v1, "contentView");
  v26 = objc_msgSend(v25, "leadingAnchor");

  v27 = v12[9];
  v28 = objc_msgSend(v24, "constraintEqualToAnchor:constant:", v26, v27);

  v29 = OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabelLeadingWithoutImageConstraint;
  v30 = *(void **)&v1[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabelLeadingWithoutImageConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabelLeadingWithoutImageConstraint] = v28;

  v31 = objc_msgSend(*(id *)&v1[v23], "leadingAnchor");
  v32 = objc_msgSend(*(id *)&v1[v2], "trailingAnchor");
  v33 = objc_msgSend(v31, "constraintEqualToAnchor:constant:", v32, v27);

  v34 = *(void **)&v1[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabelLeadingWithImageConstraint];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabelLeadingWithImageConstraint] = v33;

  v35 = swift_allocObject(v68, 56, 7);
  *(_OWORD *)(v35 + 16) = xmmword_1004820C0;
  v36 = objc_msgSend(*(id *)&v1[v23], "topAnchor");
  v37 = objc_msgSend(v1, "contentView");
  v38 = objc_msgSend(v37, "topAnchor");

  v39 = objc_msgSend(v36, "constraintEqualToAnchor:constant:", v38, v12[10]);
  *(_QWORD *)(v35 + 32) = v39;
  v40 = *(void **)&v1[v29];
  if (v40)
  {
    *(_QWORD *)(v35 + 40) = v40;
    v41 = *(void **)&v1[v23];
    v42 = v40;
    v43 = objc_msgSend(v41, "trailingAnchor");
    v44 = objc_msgSend(v1, "contentView");
    v45 = objc_msgSend(v44, "trailingAnchor");

    v46 = objc_msgSend(v43, "constraintEqualToAnchor:constant:", v45, -v12[11]);
    *(_QWORD *)(v35 + 48) = v46;
    v72[0] = v35;
    specialized Array._endMutation()(v47);
    v48 = v72[0];
    v49 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v67, "activateConstraints:", v49, swift_bridgeObjectRelease(v48).n128_f64[0]);

    v50 = OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_handleLabel;
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_handleLabel], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
    v51 = swift_allocObject(v68, 64, 7);
    *(_OWORD *)(v51 + 16) = xmmword_100481720;
    v52 = objc_msgSend(*(id *)&v1[v50], "topAnchor");
    v53 = objc_msgSend(*(id *)&v1[v23], "bottomAnchor");
    v54 = objc_msgSend(v52, "constraintEqualToAnchor:constant:", v53, v12[12]);

    *(_QWORD *)(v51 + 32) = v54;
    v55 = objc_msgSend(*(id *)&v1[v50], "bottomAnchor");
    v56 = objc_msgSend(v1, "contentView");
    v57 = objc_msgSend(v56, "bottomAnchor");

    v58 = objc_msgSend(v55, "constraintEqualToAnchor:constant:", v57, -v12[13]);
    *(_QWORD *)(v51 + 40) = v58;
    v59 = objc_msgSend(*(id *)&v1[v50], "leadingAnchor");
    v60 = objc_msgSend(*(id *)&v1[v23], "leadingAnchor");
    v61 = objc_msgSend(v59, "constraintEqualToAnchor:", v60);

    *(_QWORD *)(v51 + 48) = v61;
    v62 = objc_msgSend(*(id *)&v1[v50], "trailingAnchor");
    v63 = objc_msgSend(*(id *)&v1[v23], "trailingAnchor");
    v64 = objc_msgSend(v62, "constraintEqualToAnchor:", v63);

    *(_QWORD *)(v51 + 56) = v64;
    v72[0] = v51;
    specialized Array._endMutation()(v65);
    v66 = v72[0];
    v69 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v67, "activateConstraints:", v69, swift_bridgeObjectRelease(v66).n128_f64[0]);

  }
  else
  {
    __break(1u);
  }
}

void sub_1003CFC9C()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  objc_super v7;

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for FMRecipientTableViewCell();
  objc_msgSendSuper2(&v7, "prepareForReuse");
  v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabel];
  v2 = (void *)objc_opt_self(UIColor);
  v3 = v1;
  v4 = objc_msgSend(v2, "labelColor");
  objc_msgSend(v3, "setTextColor:", v4);

  v5 = OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_isInNetworkOperation;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_isInNetworkOperation], "cancel");
  v6 = *(void **)&v0[v5];
  *(_QWORD *)&v0[v5] = 0;

}

void sub_1003CFD90(char a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t inited;
  void *v7;
  _QWORD *v8;
  uint64_t v9;
  NSString *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSString *v16;
  id v17;
  unint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  NSString *v22;
  id v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  char isUniquelyReferenced_nonNull_native;
  id v29;
  NSString *v30;
  char v31;
  uint64_t v32;
  id v33;
  NSString v34;
  Class isa;
  id v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  NSString v40;
  Class v41;
  id v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  Swift::String v47;
  uint64_t v48;
  id v49;
  NSString v50;
  Class v51;
  id v52;
  uint64_t v53;
  void *v54;
  void *v55;
  id v56;
  void *v57;
  id v58;
  void *v59;
  id v60;
  id v61;
  void *v62;
  void *v63;
  id v64;
  _QWORD *v65;
  void *v66;
  unint64_t v67;
  char *v68;
  unint64_t v69;
  _OWORD v70[2];
  __int128 v71;
  uint64_t v72;
  _BYTE v73[72];
  _BYTE v74[80];

  v2 = v1;
  v3 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_recipient);
  if (!v3)
  {
    v24 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabelLeadingWithoutImageConstraint);
    if (v24)
    {
      objc_msgSend(v24, "setActive:", 1);
      v25 = *(void **)(v1 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabelLeadingWithImageConstraint);
      if (v25)
      {
        objc_msgSend(v25, "setActive:", 0);
        objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabel), "setText:", 0);
        objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_handleLabel), "setText:", 0);
        objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_monogramImageView), "setImage:", 0);
        return;
      }
      goto LABEL_26;
    }
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v5 = sub_100053F2C((uint64_t *)&unk_1005D7EB0);
  inited = swift_initStackObject(v5, v74);
  *(_OWORD *)(inited + 16) = xmmword_100481740;
  *(_QWORD *)(inited + 32) = NSFontAttributeName;
  v7 = (void *)objc_opt_self(UIFont);
  v8 = (_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell__style);
  v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell__style);
  v68 = v3;
  v10 = NSFontAttributeName;
  v11 = objc_msgSend(v7, "preferredFontForTextStyle:", v9);
  v12 = sub_100006C5C(0, (unint64_t *)&qword_1005D2F88, UIFont_ptr);
  *(_QWORD *)(inited + 64) = v12;
  *(_QWORD *)(inited + 40) = v11;
  v13 = sub_10011D674(inited);
  v14 = swift_initStackObject(v5, v73);
  *(_OWORD *)(v14 + 16) = xmmword_100481740;
  *(_QWORD *)(v14 + 32) = v10;
  v15 = v8[1];
  v16 = v10;
  v17 = objc_msgSend(v7, "preferredFontForTextStyle:", v15);
  *(_QWORD *)(v14 + 64) = v12;
  *(_QWORD *)(v14 + 40) = v17;
  v18 = sub_10011D674(v14);
  v19 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabel);
  if ((a1 & 1) != 0)
  {
    v20 = (void *)v8[2];
    objc_msgSend(v19, "setTextColor:", v20);
    v21 = sub_100006C5C(0, (unint64_t *)&qword_1005DB750, UIColor_ptr);
    v72 = v21;
    *(_QWORD *)&v71 = v20;
    sub_10004C850(&v71, v70);
    v22 = NSForegroundColorAttributeName;
    v23 = v20;
  }
  else
  {
    objc_msgSend(v19, "setTextColor:", v8[3]);
    v26 = (void *)v8[4];
    v21 = sub_100006C5C(0, (unint64_t *)&qword_1005DB750, UIColor_ptr);
    v72 = v21;
    *(_QWORD *)&v71 = v26;
    sub_10004C850(&v71, v70);
    v22 = NSForegroundColorAttributeName;
    v23 = v26;
  }
  v27 = v23;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v13);
  sub_100179D2C(v70, v22, isUniquelyReferenced_nonNull_native);
  v69 = v13;

  swift_bridgeObjectRelease(0x8000000000000000);
  v72 = v21;
  *(_QWORD *)&v71 = v27;
  sub_10004C850(&v71, v70);
  v29 = v27;
  v30 = v22;
  v31 = swift_isUniquelyReferenced_nonNull_native(v18);
  sub_100179D2C(v70, v30, v31);

  swift_bridgeObjectRelease(0x8000000000000000);
  v67 = v18;
  v65 = v8;
  v32 = *(_QWORD *)&v68[OBJC_IVAR____TtC6FindMy11FMRecipient_fullName + 8];
  if (!v32)
  {
    __break(1u);
    goto LABEL_23;
  }
  v33 = objc_allocWithZone((Class)NSMutableAttributedString);
  swift_bridgeObjectRetain(v69);
  swift_bridgeObjectRetain(v32);
  v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v32);
  type metadata accessor for Key(0);
  sub_100008000((unint64_t *)&qword_1005D2620, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_100481500);
  isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v36 = objc_msgSend(v33, "initWithString:attributes:", v34, isa, swift_bridgeObjectRelease(v69).n128_f64[0]);

  v37 = OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabel;
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabel), "setTextAlignment:", 4);
  v66 = v36;
  objc_msgSend(*(id *)(v2 + v37), "setAttributedText:", v36);
  v38 = *(_QWORD *)&v68[OBJC_IVAR____TtC6FindMy11FMRecipient_handle + 8];
  v39 = objc_allocWithZone((Class)NSMutableAttributedString);
  swift_bridgeObjectRetain(v38);
  swift_bridgeObjectRetain(v67);
  v40 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v38);
  v41 = Dictionary._bridgeToObjectiveC()().super.isa;
  v42 = objc_msgSend(v39, "initWithString:attributes:", v40, v41, swift_bridgeObjectRelease(v67).n128_f64[0]);

  v43 = *(_QWORD *)&v68[OBJC_IVAR____TtC6FindMy11FMRecipient_label + 8];
  if (v43)
  {
    v44 = HIBYTE(v43) & 0xF;
    if ((v43 & 0x2000000000000000) == 0)
      v44 = *(_QWORD *)&v68[OBJC_IVAR____TtC6FindMy11FMRecipient_label] & 0xFFFFFFFFFFFFLL;
    if (v44)
    {
      v45 = v65[5];
      v46 = (void *)v65[6];
      *(_QWORD *)&v71 = *(_QWORD *)&v68[OBJC_IVAR____TtC6FindMy11FMRecipient_label];
      *((_QWORD *)&v71 + 1) = v43;
      swift_bridgeObjectRetain(v43);
      v47._countAndFlagsBits = v45;
      v47._object = v46;
      String.append(_:)(v47);
      v48 = *((_QWORD *)&v71 + 1);
      v49 = objc_allocWithZone((Class)NSAttributedString);
      swift_bridgeObjectRetain(v67);
      v50 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease(v48);
      v51 = Dictionary._bridgeToObjectiveC()().super.isa;
      v52 = objc_msgSend(v49, "initWithString:attributes:", v50, v51, swift_bridgeObjectRelease(v67).n128_f64[0]);

      objc_msgSend(v42, "insertAttributedString:atIndex:", v52, 0);
    }
  }
  v53 = OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_handleLabel;
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_handleLabel), "setTextAlignment:", 4, v65);
  objc_msgSend(*(id *)(v2 + v53), "setAttributedText:", v42);
  v54 = *(void **)&v68[OBJC_IVAR____TtC6FindMy11FMRecipient_monogram];
  if (v54)
  {
    v55 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabelLeadingWithoutImageConstraint);
    if (v55)
    {
      v56 = v54;
      objc_msgSend(v55, "setActive:", 0);
      v57 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabelLeadingWithImageConstraint);
      if (v57)
      {
        v58 = v57;
        swift_bridgeObjectRelease(v69);
        objc_msgSend(v58, "setActive:", 1, swift_bridgeObjectRelease(v67).n128_f64[0]);

        v59 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_monogramImageView);
        v60 = v56;
        v61 = v59;
        objc_msgSend(v61, "setImage:", v60);

LABEL_21:
        return;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v62 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabelLeadingWithoutImageConstraint);
  if (!v62)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  objc_msgSend(v62, "setActive:", 1);
  v63 = *(void **)(v2 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabelLeadingWithImageConstraint);
  if (v63)
  {
    v64 = v63;
    swift_bridgeObjectRelease(v69);
    objc_msgSend(v64, "setActive:", 0, swift_bridgeObjectRelease(v67).n128_f64[0]);

    v60 = *(id *)(v2 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_monogramImageView);
    objc_msgSend(v60, "setImage:", 0);
    goto LABEL_21;
  }
LABEL_28:
  __break(1u);
}

void sub_1003D050C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t (*v9)(uint64_t);
  uint64_t (**v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v1 = v0;
  v2 = OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_isInNetworkOperation;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_isInNetworkOperation], "cancel");
  v3 = *(void **)&v1[v2];
  *(_QWORD *)&v1[v2] = 0;

  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_recipient];
  if (v4)
  {
    v5 = (uint64_t *)(v4 + OBJC_IVAR____TtC6FindMy11FMRecipient_handle);
    v6 = *v5;
    v7 = v5[1];
    v8 = objc_allocWithZone((Class)type metadata accessor for FMReachabilityOperation(0));
    swift_bridgeObjectRetain_n(v7, 2);
    v14 = (char *)sub_1003D0FC0(v6, v7, 0, 1);
    v9 = (uint64_t (*)(uint64_t))swift_allocObject(&unk_100561410, 40, 7);
    *((_QWORD *)v9 + 2) = v1;
    *((_QWORD *)v9 + 3) = v6;
    *((_QWORD *)v9 + 4) = v7;
    v10 = (uint64_t (**)(uint64_t))&v14[qword_1005D5140];
    v11 = *(_QWORD *)&v14[qword_1005D5140];
    v12 = *(_QWORD *)&v14[qword_1005D5140 + 8];
    *v10 = sub_1003D0D94;
    v10[1] = v9;
    v13 = v1;
    sub_1000327F0(v11, v12);
    objc_msgSend(v14, "start");

  }
}

uint64_t sub_1003D062C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[5];
  uint64_t v31;

  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v29 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v27 = *(_QWORD *)(v10 - 8);
  v28 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)a1;
  v14 = *(_BYTE *)(a1 + 8);
  v15 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v16 = (void *)static OS_dispatch_queue.main.getter(v15);
  v17 = swift_allocObject(&unk_100561438, 24, 7);
  swift_unknownObjectWeakInit(v17 + 16);
  v18 = swift_allocObject(&unk_100561460, 56, 7);
  *(_QWORD *)(v18 + 16) = v13;
  *(_BYTE *)(v18 + 24) = v14;
  *(_QWORD *)(v18 + 32) = a3;
  *(_QWORD *)(v18 + 40) = a4;
  *(_QWORD *)(v18 + 48) = v17;
  aBlock[4] = sub_1003D0DFC;
  v31 = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_100561478;
  v19 = _Block_copy(aBlock);
  v20 = v31;
  sub_10015B2A4(v13, v14);
  swift_bridgeObjectRetain(a4);
  swift_release(v20);
  static DispatchQoS.unspecified.getter(v21);
  aBlock[0] = _swiftEmptyArrayStorage;
  v22 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v23 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v24 = sub_1000555E4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v23, v24, v7, v22);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v9, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v12, v28);
}

void sub_1003D0878(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t Strong;
  void *v15;
  _BYTE v16[24];

  v8 = a2 & 1;
  v9 = a5 + 16;
  v10 = swift_bridgeObjectRetain(a4);
  v11 = sub_100067AD8(a1, v8, a3, a4, v10);
  LOBYTE(a1) = v12;
  swift_bridgeObjectRelease(a4);
  if ((a1 & 1) != 0)
  {
    sub_10015BB28(v11, 1);
    v13 = 0;
  }
  else
  {
    v13 = v11 & 1;
  }
  swift_beginAccess(v9, v16, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v9);
  if (Strong)
  {
    v15 = (void *)Strong;
    sub_1003CFD90(v13);

  }
}

void sub_1003D0938()
{
  uint64_t v0;
  id v1;
  id v2;
  _BOOL8 v3;

  v1 = objc_msgSend((id)objc_opt_self(UIApplication), "sharedApplication");
  v2 = objc_msgSend(v1, "preferredContentSizeCategory");

  LOBYTE(v1) = UIContentSizeCategory.isAccessibilityCategory.getter(v2);
  v3 = (v1 & 1) == 0;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabel), "setNumberOfLines:", v3);
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_handleLabel), "setNumberOfLines:", v3);
  sub_1003CFD90(0);
  sub_1003D050C();
}

id sub_1003D09EC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMRecipientTableViewCell();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMRecipientTableViewCell()
{
  return objc_opt_self(_TtC6FindMy24FMRecipientTableViewCell);
}

uint64_t destroy for FMRecipientTableViewCellStyle(uint64_t a1)
{

  return swift_bridgeObjectRelease(*(_QWORD *)(a1 + 48));
}

uint64_t initializeWithCopy for FMRecipientTableViewCellStyle(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v8 = *(void **)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v7;
  v9 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  v10 = v3;
  v11 = v4;
  v12 = v5;
  v13 = v6;
  v14 = v8;
  swift_bridgeObjectRetain(v9);
  return a1;
}

uint64_t assignWithCopy for FMRecipientTableViewCellStyle(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 24);
  v14 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v13;
  v15 = v13;

  v16 = *(void **)(a2 + 32);
  v17 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v16;
  v18 = v16;

  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v19 = *(_QWORD *)(a2 + 48);
  v20 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v19;
  swift_bridgeObjectRetain(v19);
  swift_bridgeObjectRelease(v20);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  return a1;
}

uint64_t assignWithTake for FMRecipientTableViewCellStyle(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  v6 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  v7 = *(_QWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  swift_bridgeObjectRelease(v8);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  return a1;
}

ValueMetadata *type metadata accessor for FMRecipientTableViewCellStyle()
{
  return &type metadata for FMRecipientTableViewCellStyle;
}

uint64_t sub_1003D0D68()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003D0D94(uint64_t a1)
{
  uint64_t *v1;

  return sub_1003D062C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1003D0DA0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003D0DC4()
{
  uint64_t v0;

  sub_10015B234(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 40));
  swift_release(*(_QWORD *)(v0 + 48));
  return swift_deallocObject(v0, 56, 7);
}

void sub_1003D0DFC()
{
  uint64_t v0;

  sub_1003D0878(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

void sub_1003D0E10()
{
  char *v0;
  uint64_t v1;
  char *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;

  v1 = OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell__style;
  if (qword_1005D2080 != -1)
    swift_once(&qword_1005D2080, sub_1003CF098);
  v2 = &v0[v1];
  v3 = (void *)qword_1005E3238;
  v4 = (void *)unk_1005E3240;
  v5 = (void *)qword_1005E3248;
  v6 = (void *)unk_1005E3250;
  v8 = (void *)qword_1005E3258;
  v7 = unk_1005E3260;
  v9 = qword_1005E3268;
  v10 = qword_1005E32A0;
  v11 = unk_1005E3270;
  v12 = unk_1005E3280;
  v13 = unk_1005E3290;
  *(_QWORD *)v2 = qword_1005E3238;
  *((_QWORD *)v2 + 1) = v4;
  *((_QWORD *)v2 + 2) = v5;
  *((_QWORD *)v2 + 3) = v6;
  *((_QWORD *)v2 + 4) = v8;
  *((_QWORD *)v2 + 5) = v7;
  *((_QWORD *)v2 + 6) = v9;
  *(_OWORD *)(v2 + 56) = v11;
  *(_OWORD *)(v2 + 72) = v12;
  *(_OWORD *)(v2 + 88) = v13;
  *((_QWORD *)v2 + 13) = v10;
  v14 = OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_monogramImageView;
  v15 = objc_allocWithZone((Class)UIImageView);
  v16 = v3;
  v17 = v4;
  v18 = v5;
  v19 = v6;
  v20 = v8;
  *(_QWORD *)&v0[v14] = objc_msgSend(v15, "init", swift_bridgeObjectRetain(v9).n128_f64[0]);
  v21 = OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabel;
  *(_QWORD *)&v0[v21] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabelLeadingWithoutImageConstraint] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_nameLabelLeadingWithImageConstraint] = 0;
  v22 = OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_handleLabel;
  *(_QWORD *)&v0[v22] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_isInNetworkOperation] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy24FMRecipientTableViewCell_recipient] = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMRecipientTableViewCell.swift", 37, 2, 73, 0);
  __break(1u);
}

uint64_t sub_1003D0FAC(uint64_t *a1, uint64_t a2)
{
  return sub_1003D29CC(*a1, a1[1], *(_QWORD *)a2, *(_QWORD *)(a2 + 8));
}

id sub_1003D0FC0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  objc_class *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  dispatch_group_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  objc_super v39;
  _QWORD *v40;

  v37 = a4;
  v38 = a3;
  v35 = a1;
  v36 = a2;
  v5 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v32 = *(_QWORD *)(v5 - 8);
  v33 = v5;
  __chkstk_darwin(v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = &v4[qword_1005E3328];
  *(_QWORD *)v14 = 0;
  v14[8] = 1;
  v15 = qword_1005E3330;
  v16 = v4;
  v34 = dispatch_group_create();
  *(_QWORD *)&v4[v15] = v34;
  *(_QWORD *)&v16[qword_1005E3338] = 0;
  *(_QWORD *)&v16[qword_1005E3340] = 0;
  v31 = qword_1005E3348;
  sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v40 = _swiftEmptyArrayStorage;
  v17 = sub_100008000((unint64_t *)&unk_1005D3970, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v18 = sub_100053F2C((uint64_t *)&unk_1005D20F0);
  v19 = sub_10003F734((unint64_t *)&unk_1005D3980, (uint64_t *)&unk_1005D20F0);
  v20 = dispatch thunk of SetAlgebra.init<A>(_:)(&v40, v18, v19, v11, v17);
  static DispatchQoS.unspecified.getter(v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v33);
  v21 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000021, 0x80000001004C54D0, v10, v13, v7, 0);
  *(_QWORD *)&v16[v31] = v21;
  v16[qword_1005E3350] = 0;
  v16[qword_1005E3358] = 0;
  v16[qword_1005E3360] = 0;
  *(_QWORD *)&v16[qword_1005E3368] = 0;
  v22 = qword_1005E3370;
  *(_QWORD *)&v16[v22] = sub_10011D868((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v16[qword_1005E3378] = 0;
  v23 = sub_100053F2C((uint64_t *)&unk_1005D2A90);
  v24 = swift_allocObject(v23, 48, 7);
  *(_OWORD *)(v24 + 16) = xmmword_100481740;
  v25 = v36;
  *(_QWORD *)(v24 + 32) = v35;
  *(_QWORD *)(v24 + 40) = v25;
  *(_QWORD *)&v16[qword_1005E3320] = v24;
  v26 = 0x4024000000000000;
  if ((v37 & 1) == 0)
    v26 = v38;
  *(_QWORD *)v14 = v26;
  v14[8] = 0;
  v27 = v34;
  dispatch_group_enter(v27);

  v28 = (objc_class *)type metadata accessor for FMReachabilityOperation(0);
  v39.receiver = v16;
  v39.super_class = v28;
  return objc_msgSendSuper2(&v39, "init");
}

id sub_1003D12D4(uint64_t a1, uint64_t a2, int a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  dispatch_group_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  objc_class *v25;
  uint64_t v27;
  dispatch_group_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  objc_super v34;
  _QWORD *v35;

  v32 = a3;
  v33 = a2;
  v31 = a1;
  v4 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v29 = *(_QWORD *)(v4 - 8);
  v30 = v4;
  __chkstk_darwin(v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = &v3[qword_1005E3328];
  *(_QWORD *)v13 = 0;
  v13[8] = 1;
  v14 = qword_1005E3330;
  v15 = v3;
  v16 = dispatch_group_create();
  *(_QWORD *)&v3[v14] = v16;
  *(_QWORD *)&v15[qword_1005E3338] = 0;
  *(_QWORD *)&v15[qword_1005E3340] = 0;
  v27 = qword_1005E3348;
  v28 = v16;
  sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v35 = _swiftEmptyArrayStorage;
  v17 = sub_100008000((unint64_t *)&unk_1005D3970, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v18 = sub_100053F2C((uint64_t *)&unk_1005D20F0);
  v19 = sub_10003F734((unint64_t *)&unk_1005D3980, (uint64_t *)&unk_1005D20F0);
  v20 = dispatch thunk of SetAlgebra.init<A>(_:)(&v35, v18, v19, v10, v17);
  static DispatchQoS.unspecified.getter(v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v29 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v30);
  v21 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD000000000000021, 0x80000001004C54D0, v9, v12, v6, 0);
  *(_QWORD *)&v15[v27] = v21;
  v15[qword_1005E3350] = 0;
  v15[qword_1005E3358] = 0;
  v15[qword_1005E3360] = 0;
  *(_QWORD *)&v15[qword_1005E3368] = 0;
  v22 = qword_1005E3370;
  *(_QWORD *)&v15[v22] = sub_10011D868((uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&v15[qword_1005E3378] = 0;
  *(_QWORD *)&v15[qword_1005E3320] = v31;
  v23 = 0x4024000000000000;
  if ((v32 & 1) == 0)
    v23 = v33;
  *(_QWORD *)v13 = v23;
  v13[8] = 0;
  v24 = v28;
  dispatch_group_enter(v24);

  v25 = (objc_class *)type metadata accessor for FMReachabilityOperation(0);
  v34.receiver = v15;
  v34.super_class = v25;
  return objc_msgSendSuper2(&v34, "init");
}

double sub_1003D15B8(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v3;
  double result;
  unint64_t v5;
  unint64_t v6;
  __n128 v7;

  v3 = *(_QWORD *)(a1 + qword_1005E3378);
  if (v3)
  {
    swift_errorRetain(*(_QWORD *)(a1 + qword_1005E3378));
    a2(v3, 1);
    swift_errorRelease(v3);
  }
  else
  {
    v5 = *(_QWORD *)(a1 + qword_1005E3368);
    if (v5)
    {
      v6 = v5;
    }
    else
    {
      v6 = sub_10011E198((uint64_t)_swiftEmptyArrayStorage);
      v5 = 0;
    }
    v7 = swift_bridgeObjectRetain(v5);
    ((void (*)(unint64_t, _QWORD, __n128))a2)(v6, 0, v7);
    *(_QWORD *)&result = swift_bridgeObjectRelease(v6).n128_u64[0];
  }
  return result;
}

void sub_1003D1658(uint64_t a1)
{
  uint64_t v1;
  uint64_t Strong;
  _BYTE *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  _BYTE v14[24];

  v1 = a1 + 16;
  swift_beginAccess(a1 + 16, v14, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v1);
  if (Strong)
  {
    v3 = (_BYTE *)Strong;
    v4 = qword_1005E3358;
    if ((*(_BYTE *)(Strong + qword_1005E3358) & 1) == 0
      && (*(_BYTE *)(Strong + qword_1005E3350) & 1) == 0
      && (*(_BYTE *)(Strong + qword_1005E3360) & 1) == 0)
    {
      objc_msgSend(*(id *)(Strong + qword_1005E3338), "invalidate");
      v5 = sub_1003D3FC4();
      v6 = swift_allocError(&type metadata for FMReachabilityOperationError, v5, 0, 0);
      *v7 = xmmword_10048B4E0;
      v8 = *(_QWORD *)&v3[qword_1005E3378];
      *(_QWORD *)&v3[qword_1005E3378] = v6;
      swift_errorRelease(v8);
      v3[v4] = 1;
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v9 = type metadata accessor for Logger(0);
      v10 = sub_100056D88(v9, (uint64_t)qword_1005F5748);
      v11 = Logger.logObject.getter(v10);
      v12 = static os_log_type_t.default.getter(v11);
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v13 = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "FMReachabilityOperation: timed out", v13, 2u);
        swift_slowDealloc(v13, -1, -1);
      }

      dispatch_group_leave(*(dispatch_group_t *)&v3[qword_1005E3330]);
    }

  }
}

uint64_t sub_1003D17F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v0 = type metadata accessor for DispatchWorkItemFlags(0);
  v5 = _swiftEmptyArrayStorage;
  v1 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v2 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v3 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  return dispatch thunk of SetAlgebra.init<A>(_:)(&v5, v2, v3, v0, v1);
}

void sub_1003D18A4()
{
  char *v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char *v6;
  char isEscapingClosureAtFileLocation;
  _QWORD v8[5];
  uint64_t v9;

  v1 = *(NSObject **)&v0[qword_1005E3348];
  v2 = swift_allocObject(&unk_1005615C8, 24, 7);
  *(_QWORD *)(v2 + 16) = v0;
  v3 = swift_allocObject(&unk_1005615F0, 32, 7);
  *(_QWORD *)(v3 + 16) = sub_1003D40B4;
  *(_QWORD *)(v3 + 24) = v2;
  v8[4] = sub_100021E78;
  v9 = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_100021E38;
  v8[3] = &unk_100561608;
  v4 = _Block_copy(v8);
  v5 = v9;
  v6 = v0;
  swift_retain(v3);
  swift_release(v5);
  dispatch_sync(v1, v4);
  _Block_release(v4);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation(v3, "", 107, 128, 29, 1);
  swift_release(v2);
  swift_release(v3);
  if ((isEscapingClosureAtFileLocation & 1) != 0)
    __break(1u);
}

void sub_1003D19CC(char *a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  objc_super v14;

  if ((a1[qword_1005E3358] & 1) == 0)
  {
    v2 = qword_1005E3350;
    if ((a1[qword_1005E3350] & 1) == 0 && (a1[qword_1005E3360] & 1) == 0)
    {
      v14.receiver = a1;
      v14.super_class = (Class)type metadata accessor for FMReachabilityOperation(0);
      objc_msgSendSuper2(&v14, "cancel");
      v4 = *(_QWORD *)&a1[qword_1005E3340];
      if (v4)
      {
        swift_getObjectType(*(_QWORD *)&a1[qword_1005E3340]);
        swift_unknownObjectRetain(v4);
        OS_dispatch_source.cancel()();
        *(_QWORD *)&v3 = swift_unknownObjectRelease(v4).n128_u64[0];
      }
      objc_msgSend(*(id *)&a1[qword_1005E3338], "invalidate", v3);
      v5 = type metadata accessor for CancellationError(0);
      v6 = sub_100008000((unint64_t *)&qword_1005E3680, (uint64_t (*)(uint64_t))&type metadata accessor for CancellationError, (uint64_t)&protocol conformance descriptor for CancellationError);
      v7 = swift_allocError(v5, v6, 0, 0);
      CancellationError.init()(v7);
      v8 = *(_QWORD *)&a1[qword_1005E3378];
      *(_QWORD *)&a1[qword_1005E3378] = v7;
      swift_errorRelease(v8);
      a1[v2] = 1;
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v9 = type metadata accessor for Logger(0);
      v10 = sub_100056D88(v9, (uint64_t)qword_1005F5748);
      v11 = Logger.logObject.getter(v10);
      v12 = static os_log_type_t.default.getter(v11);
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc(2, -1);
        *(_WORD *)v13 = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "FMReachabilityOperation: cancelled", v13, 2u);
        swift_slowDealloc(v13, -1, -1);
      }

      dispatch_group_leave(*(dispatch_group_t *)&a1[qword_1005E3330]);
    }
  }
}

void sub_1003D1BB0(void *a1)
{
  id v1;

  v1 = a1;
  sub_1003D18A4();

}

void sub_1003D1BE4()
{
  _swift_stdlib_reportUnimplementedInitializer("FindMy.FMReachabilityOperation", 30, "init()", 6, 0);
  __break(1u);
}

uint64_t sub_1003D1C10()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_1005E3320));

  swift_unknownObjectRelease(*(_QWORD *)(v0 + qword_1005E3340));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_1005E3368));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + qword_1005E3370));
  return swift_errorRelease(*(_QWORD *)(v0 + qword_1005E3378));
}

id sub_1003D1C9C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMReachabilityOperation(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1003D1CD0(uint64_t a1)
{
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_1005E3320));

  swift_unknownObjectRelease(*(_QWORD *)(a1 + qword_1005E3340));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_1005E3368));
  swift_bridgeObjectRelease(*(_QWORD *)(a1 + qword_1005E3370));
  return swift_errorRelease(*(_QWORD *)(a1 + qword_1005E3378));
}

uint64_t type metadata accessor for FMReachabilityOperation(uint64_t a1)
{
  uint64_t result;

  result = qword_1005E33A8;
  if (!qword_1005E33A8)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMReachabilityOperation);
  return result;
}

uint64_t sub_1003D1DA4(uint64_t a1)
{
  _QWORD v2[12];

  v2[0] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[1] = "\t";
  v2[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[3] = &unk_10048FB50;
  v2[4] = &unk_10048FB50;
  v2[5] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[6] = &unk_10048FB68;
  v2[7] = &unk_10048FB68;
  v2[8] = &unk_10048FB68;
  v2[9] = &unk_10048FB50;
  v2[10] = (char *)&value witness table for Builtin.BridgeObject + 64;
  v2[11] = &unk_10048FB50;
  return swift_initClassMetadata2(a1, 256, 12, v2, a1 + 200);
}

double sub_1003D1E20(void (*a1)(void ***), uint64_t a2)
{
  char *v2;
  double result;

  swift_retain(a2);
  sub_1003D2CEC(v2, a1, a2);
  *(_QWORD *)&result = swift_release(a2).n128_u64[0];
  return result;
}

uint64_t sub_1003D1E64()
{
  return type metadata accessor for FMReachabilityOperation(0);
}

void sub_1003D1E6C(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  __n128 v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD v37[3];
  char v38[8];
  _QWORD v39[2];
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  if ((a1[qword_1005E3358] & 1) != 0)
    return;
  if ((a1[qword_1005E3350] & 1) != 0)
    return;
  v4 = qword_1005E3360;
  if ((a1[qword_1005E3360] & 1) != 0)
    return;
  if (a2)
  {
    swift_getErrorValue(a2, v38, v37);
    v6 = Error.localizedDescription.getter(v37[1], v37[2]);
    v8 = v7;
    v9 = sub_1003D3FC4();
    v10 = swift_allocError(&type metadata for FMReachabilityOperationError, v9, 0, 0);
    *v11 = v6;
    v11[1] = v8;
  }
  else
  {
    v10 = 0;
  }
  v12 = *(_QWORD *)&a1[qword_1005E3378];
  *(_QWORD *)&a1[qword_1005E3378] = v10;
  swift_errorRelease(v12);
  if (!a3)
  {
    v16 = _swiftEmptyArrayStorage;
    v17 = _swiftEmptyArrayStorage[2];
    if (v17)
      goto LABEL_9;
LABEL_11:
    v18 = &_swiftEmptyDictionarySingleton;
    goto LABEL_12;
  }
  v13 = a1;
  swift_bridgeObjectRetain(a3);
  sub_1003D2A58(v14, v13);
  v16 = v15;
  swift_bridgeObjectRelease(a3);

  v17 = v16[2];
  if (!v17)
    goto LABEL_11;
LABEL_9:
  sub_100053F2C(&qword_1005D6BD0);
  v18 = (void *)static _DictionaryStorage.allocate(capacity:)(v17);
LABEL_12:
  v41 = (uint64_t)v18;
  swift_bridgeObjectRetain(v16);
  sub_1003D264C(v19, 1, &v41);
  swift_bridgeObjectRelease(v16);
  v20 = *(_QWORD *)&a1[qword_1005E3368];
  *(_QWORD *)&a1[qword_1005E3368] = v41;
  swift_bridgeObjectRelease(v20);
  v21 = *(_QWORD *)&a1[qword_1005E3340];
  if (v21)
  {
    swift_getObjectType(*(_QWORD *)&a1[qword_1005E3340]);
    swift_unknownObjectRetain(v21);
    OS_dispatch_source.cancel()();
    swift_unknownObjectRelease(v21);
  }
  a1[v4] = 1;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v22 = type metadata accessor for Logger(0);
  sub_100056D88(v22, (uint64_t)qword_1005F5748);
  v23 = swift_bridgeObjectRetain_n(a3, 2);
  v24 = Logger.logObject.getter(v23);
  v25 = static os_log_type_t.default.getter(v24);
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc(12, -1);
    v27 = swift_slowAlloc(32, -1);
    v43 = v27;
    *(_DWORD *)v26 = 136315138;
    v28 = 0xE000000000000000;
    if (a3)
    {
      v29 = sub_100006C5C(0, &qword_1005D3858, NSNumber_ptr);
      v30 = Dictionary.debugDescription.getter(a3, &type metadata for String, v29, &protocol witness table for String);
      v32 = v31;
      v41 = v30;
      v42 = v31;
      v40[0] = 10;
      v40[1] = 0xE100000000000000;
      v39[0] = 0;
      v39[1] = 0xE000000000000000;
      v33 = sub_1000517B8();
      v35 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)(v40, v39, 0, 0, 0, 1, &type metadata for String, &type metadata for String, v34, &type metadata for String, v33, v33, v33);
      v28 = v36;
      swift_bridgeObjectRelease(v32);
    }
    else
    {
      v35 = 0;
    }
    v41 = sub_100056DA0(v35, v28, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v41, &v42);
    swift_bridgeObjectRelease_n(a3, 2);
    swift_bridgeObjectRelease(v28);
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "FMReachabilityOperation: completed with status: %s", v26, 0xCu);
    swift_arrayDestroy(v27, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v27, -1, -1);
    swift_slowDealloc(v26, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a3, 2);
  }
  dispatch_group_leave(*(dispatch_group_t *)&a1[qword_1005E3330]);
}

void sub_1003D2268(uint64_t *a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v5;
  uint64_t v6;
  void *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  char v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  char *v21;
  char *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  _BYTE v36[24];
  uint64_t v37;

  v6 = *a1;
  v5 = a1[1];
  v7 = (void *)a1[2];
  v8 = &a2[qword_1005E3370];
  swift_beginAccess(&a2[qword_1005E3370], v36, 0, 0);
  v9 = *(_QWORD *)v8;
  v10 = *(_QWORD *)(*(_QWORD *)v8 + 16);
  swift_bridgeObjectRetain(v5);
  if (v10)
  {
    swift_bridgeObjectRetain(v5);
    v11 = v7;
    swift_bridgeObjectRetain(v9);
    v12 = sub_10004C348(v6, v5);
    if ((v13 & 1) != 0)
    {
      v14 = (uint64_t *)(*(_QWORD *)(v9 + 56) + 16 * v12);
      v15 = a3;
      v17 = *v14;
      v16 = v14[1];
      swift_bridgeObjectRetain(v16);
      swift_bridgeObjectRelease_n(v5, 2);
      v18 = objc_msgSend(v11, "integerValue", swift_bridgeObjectRelease(v9).n128_f64[0]);

      *(_QWORD *)v15 = v17;
      *(_QWORD *)(v15 + 8) = v16;
      *(_BYTE *)(v15 + 16) = v18 != (id)2;
      return;
    }
    swift_bridgeObjectRelease(v5);
    swift_bridgeObjectRelease(v9);
  }
  else
  {
    v19 = v7;
  }
  v34 = v7;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v20 = type metadata accessor for Logger(0);
  sub_100056D88(v20, (uint64_t)qword_1005F5748);
  v21 = a2;
  swift_bridgeObjectRetain(v5);
  v22 = v21;
  v23 = Logger.logObject.getter(v22);
  v24 = static os_log_type_t.default.getter(v23);
  if (os_log_type_enabled(v23, v24))
  {
    v25 = swift_slowAlloc(22, -1);
    v33 = swift_slowAlloc(64, -1);
    v37 = v33;
    *(_DWORD *)v25 = 136315394;
    swift_bridgeObjectRetain(v5);
    v35 = sub_100056DA0(v6, v5, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, v36);
    swift_bridgeObjectRelease_n(v5, 3);
    *(_WORD *)(v25 + 12) = 2080;
    v26 = *(_QWORD *)v8;
    swift_bridgeObjectRetain(*(_QWORD *)v8);
    v28 = Dictionary.description.getter(v27, &type metadata for String, &type metadata for String, &protocol witness table for String);
    v29 = a3;
    v31 = v30;
    swift_bridgeObjectRelease(v26);
    v35 = sub_100056DA0(v28, v31, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v35, v36);

    v32 = v31;
    a3 = v29;
    swift_bridgeObjectRelease(v32);
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "FMReachabilityOperation: received response for unknown handle: %s, requested: %s", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy(v33, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1, -1);
    swift_slowDealloc(v25, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(v5, 2);
  }
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = 0;
}

void sub_1003D264C(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  char v28;
  _QWORD *v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  char v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  Swift::String v41;
  Swift::String v42;
  char v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease(a1);
    return;
  }
  v8 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v43 = *(_BYTE *)(a1 + 48);
  swift_bridgeObjectRetain(a1);
  v46 = v8;
  v47 = v7;
  v9 = (_QWORD *)*a3;
  swift_bridgeObjectRetain(v7);
  v11 = sub_10004C348(v8, v7);
  v12 = v9[2];
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
    goto LABEL_23;
  v15 = v10;
  if (v9[3] >= v14)
  {
    if ((a2 & 1) != 0)
    {
      if ((v10 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_10017D6FC();
      if ((v15 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v20 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    v21 = (uint64_t *)(v20[6] + 16 * v11);
    *v21 = v8;
    v21[1] = v7;
    *(_BYTE *)(v20[7] + v11) = v43;
    v22 = v20[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v20[2] = v24;
    v25 = v4 - 1;
    if (v4 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n(a1, 2);
      return;
    }
    v26 = (_BYTE *)(a1 + 72);
    while (1)
    {
      v7 = *((_QWORD *)v26 - 1);
      v28 = *v26;
      v46 = *((_QWORD *)v26 - 2);
      v27 = v46;
      v47 = v7;
      v29 = (_QWORD *)*a3;
      swift_bridgeObjectRetain(v7);
      v30 = sub_10004C348(v46, v7);
      v32 = v29[2];
      v33 = (v31 & 1) == 0;
      v23 = __OFADD__(v32, v33);
      v34 = v32 + v33;
      if (v23)
        break;
      v35 = v31;
      if (v29[3] < v34)
      {
        sub_1001772DC(v34, 1);
        v30 = sub_10004C348(v46, v7);
        if ((v35 & 1) != (v36 & 1))
          goto LABEL_25;
      }
      if ((v35 & 1) != 0)
        goto LABEL_10;
      v37 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v30 >> 6) + 64) |= 1 << v30;
      v38 = (uint64_t *)(v37[6] + 16 * v30);
      *v38 = v27;
      v38[1] = v7;
      *(_BYTE *)(v37[7] + v30) = v28;
      v39 = v37[2];
      v23 = __OFADD__(v39, 1);
      v40 = v39 + 1;
      if (v23)
        goto LABEL_24;
      v26 += 24;
      v37[2] = v40;
      if (!--v25)
        goto LABEL_22;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1001772DC(v14, a2 & 1);
  v16 = sub_10004C348(v8, v7);
  if ((v15 & 1) == (v17 & 1))
  {
    v11 = v16;
    if ((v15 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v18 = swift_allocError(&type metadata for _MergeError, &protocol witness table for _MergeError, 0, 0);
    swift_willThrow(v18);
    v48 = v18;
    swift_errorRetain(v18);
    v19 = sub_100053F2C((uint64_t *)&unk_1005D2AC0);
    if ((swift_dynamicCast(v19, &v48, v19, &type metadata for _MergeError, 0) & 1) == 0)
    {
      swift_bridgeObjectRelease(v7);
      swift_bridgeObjectRelease_n(a1, 2);
      swift_errorRelease(v48);
      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for String);
  __break(1u);
LABEL_26:
  v44 = 0;
  v45 = 0xE000000000000000;
  _StringGuts.grow(_:)(30);
  v41._object = (void *)0x80000001004C5540;
  v41._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v41);
  _print_unlocked<A, B>(_:_:)(&v46, &v44, &type metadata for String, &type metadata for DefaultStringInterpolation, &protocol witness table for DefaultStringInterpolation);
  v42._countAndFlagsBits = 39;
  v42._object = (void *)0xE100000000000000;
  String.append(_:)(v42);
  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, v44, v45, "Swift/NativeDictionary.swift", 28, 2, 783, 0);
  __break(1u);
}

uint64_t sub_1003D29CC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result;

  switch(a2)
  {
    case 0:
      if (a4)
        goto LABEL_14;
      result = 1;
      break;
    case 1:
      if (a4 != 1)
        goto LABEL_14;
      result = 1;
      break;
    case 2:
      if (a4 != 2)
        goto LABEL_14;
      result = 1;
      break;
    case 3:
      if (a4 != 3)
        goto LABEL_14;
      result = 1;
      break;
    default:
      if (a4 < 4)
      {
LABEL_14:
        result = 0;
      }
      else if (a1 == a3 && a2 == a4)
      {
        result = 1;
      }
      else
      {
        result = _stringCompareWithSmolCheck(_:_:expecting:)(a1, a2, a3, a4, 0);
      }
      break;
  }
  return result;
}

void sub_1003D2A58(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  int64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31[3];
  uint64_t v32;

  v3 = v2;
  v25 = a1 + 64;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v26 = (unint64_t)(v4 + 63) >> 6;
  v32 = a1;
  swift_bridgeObjectRetain(a1);
  v7 = 0;
  v8 = _swiftEmptyArrayStorage;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v7 << 6);
      goto LABEL_17;
    }
    if (__OFADD__(v7++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v7 >= v26)
      goto LABEL_31;
    v12 = *(_QWORD *)(v25 + 8 * v7);
    if (!v12)
      break;
LABEL_16:
    v6 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v7 << 6);
LABEL_17:
    v14 = (uint64_t *)(*(_QWORD *)(v32 + 48) + 16 * v10);
    v15 = v14[1];
    v16 = *(void **)(*(_QWORD *)(v32 + 56) + 8 * v10);
    v31[0] = *v14;
    v31[1] = v15;
    v31[2] = (uint64_t)v16;
    swift_bridgeObjectRetain(v15);
    v17 = v16;
    sub_1003D2268(v31, a2, (uint64_t)&v28);
    if (v3)
    {
      swift_bridgeObjectRelease(v8);
      swift_release(v32);

      swift_bridgeObjectRelease(v15);
      return;
    }

    swift_bridgeObjectRelease(v15);
    v18 = v29;
    if (v29)
    {
      v19 = v28;
      v20 = v30;
      if ((swift_isUniquelyReferenced_nonNull_native(v8) & 1) == 0)
        v8 = sub_100070B40(0, v8[2] + 1, 1, v8);
      v22 = v8[2];
      v21 = v8[3];
      if (v22 >= v21 >> 1)
        v8 = sub_100070B40((_QWORD *)(v21 > 1), v22 + 1, 1, v8);
      v8[2] = v22 + 1;
      v23 = &v8[3 * v22];
      v23[4] = v19;
      v23[5] = v18;
      *((_BYTE *)v23 + 48) = v20 & 1;
    }
  }
  v13 = v7 + 1;
  if (v7 + 1 >= v26)
    goto LABEL_31;
  v12 = *(_QWORD *)(v25 + 8 * v13);
  if (v12)
    goto LABEL_15;
  v13 = v7 + 2;
  if (v7 + 2 >= v26)
    goto LABEL_31;
  v12 = *(_QWORD *)(v25 + 8 * v13);
  if (v12)
    goto LABEL_15;
  v13 = v7 + 3;
  if (v7 + 3 >= v26)
    goto LABEL_31;
  v12 = *(_QWORD *)(v25 + 8 * v13);
  if (v12)
  {
LABEL_15:
    v7 = v13;
    goto LABEL_16;
  }
  v24 = v7 + 4;
  if (v7 + 4 >= v26)
  {
LABEL_31:
    swift_release(v32);
    return;
  }
  v12 = *(_QWORD *)(v25 + 8 * v24);
  v7 += 4;
  if (v12)
    goto LABEL_16;
  while (1)
  {
    v7 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v7 >= v26)
      goto LABEL_31;
    v12 = *(_QWORD *)(v25 + 8 * v7);
    ++v24;
    if (v12)
      goto LABEL_16;
  }
LABEL_33:
  __break(1u);
}

void sub_1003D2CEC(char *a1, void (*a2)(void ***), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t *v28;
  _QWORD *v29;
  __int128 v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  void *v36;
  NSString v37;
  unsigned int v38;
  NSString v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  NSString v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  void **v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  os_log_type_t v60;
  uint64_t v61;
  void **v62;
  void **v63;
  void **v64;
  NSString v65;
  void *v66;
  char *v67;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  unint64_t v73;
  void **v74;
  _QWORD *v75;
  unint64_t v76;
  void (*v77)(void ***);
  unint64_t v78;
  void **v79;
  _OWORD *v80;
  char *v81;
  id v82;
  char *v83;
  id v84;
  NSString v85;
  id v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  void *v93;
  _QWORD *v94;
  void *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  double v117;
  char *v118;
  void (*v119)(char *, uint64_t);
  uint64_t v120;
  uint64_t v121;
  void (*v122)(char *, _QWORD, uint64_t);
  char *v123;
  uint64_t v124;
  char *v125;
  __n128 v126;
  void (*v127)(char *, uint64_t, __n128);
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  uint64_t v134;
  char *v135;
  char *v136;
  __n128 v137;
  _QWORD *v138;
  uint64_t v139;
  void *v140;
  id v141;
  _QWORD *v142;
  _QWORD *v143;
  Class isa;
  unint64_t v145;
  _OWORD *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  id v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  __int128 v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t ObjectType;
  uint64_t v173;
  char *v174;
  char *v175;
  void (*v176)(char *, uint64_t);
  __int128 v177;
  uint64_t v178;
  _QWORD *v179;
  void (*v180)(void ***);
  void **aBlock;
  uint64_t v182;
  uint64_t (*v183)(uint64_t);
  void *v184;
  void *v185;
  _QWORD *v186;
  _QWORD *v187;

  v164 = type metadata accessor for DispatchTimeInterval(0);
  v163 = *(_QWORD *)(v164 - 8);
  v6 = __chkstk_darwin(v164);
  v8 = (char *)&v147 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v147 - v9;
  v162 = type metadata accessor for DispatchTime(0);
  v160 = *(_QWORD *)(v162 - 8);
  v11 = __chkstk_darwin(v162);
  v165 = (char *)&v147 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v161 = (char *)&v147 - v13;
  v14 = type metadata accessor for OS_dispatch_source.TimerFlags(0);
  ObjectType = *(_QWORD *)(v14 - 8);
  v173 = v14;
  __chkstk_darwin(v14);
  v171 = (char *)&v147 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for DispatchWorkItemFlags(0);
  v170 = *(_QWORD *)(v16 - 8);
  __chkstk_darwin(v16);
  v174 = (char *)&v147 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for DispatchQoS(0);
  v169 = *(_QWORD *)(v18 - 8);
  __chkstk_darwin(v18);
  v20 = (char *)&v147 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = type metadata accessor for DispatchQoS.QoSClass(0);
  v167 = *(_QWORD *)(v168 - 8);
  __chkstk_darwin(v168);
  v166 = (char *)&v147 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = swift_allocObject(&unk_100561500, 32, 7);
  v180 = a2;
  *(_QWORD *)(v22 + 16) = a2;
  *(_QWORD *)(v22 + 24) = a3;
  swift_retain(a3);
  if (objc_msgSend(a1, "isCancelled"))
  {
    swift_release(v22);
    return;
  }
  v158 = v10;
  v23 = objc_msgSend((id)objc_opt_self(NSOperationQueue), "currentQueue");
  if (!v23
    || (v24 = v23,
        v25 = objc_msgSend(v23, "underlyingQueue"),
        v24,
        !v25))
  {
    v73 = sub_1003D3FC4();
    v74 = (void **)swift_allocError(&type metadata for FMReachabilityOperationError, v73, 0, 0);
    *v75 = 0;
    v75[1] = 0;
    aBlock = v74;
    LOBYTE(v182) = 1;
    v180(&aBlock);
    goto LABEL_34;
  }
  v149 = v8;
  v152 = v20;
  v153 = v18;
  v154 = v16;
  v26 = *(_QWORD *)&a1[qword_1005E3320];
  v27 = *(_QWORD *)(v26 + 16);
  v155 = a3;
  v156 = v22;
  if (!v27)
  {
    v179 = _swiftEmptyArrayStorage;
    v81 = v174;
LABEL_39:
    v82 = objc_allocWithZone((Class)IDSBatchIDQueryController);
    v83 = a1;
    v84 = v25;
    v85 = String._bridgeToObjectiveC()();
    v86 = objc_msgSend(v82, "initWithService:delegate:queue:", v85, v83, v84);

    v87 = qword_1005E3338;
    v88 = *(void **)&v83[qword_1005E3338];
    *(_QWORD *)&v83[qword_1005E3338] = v86;

    if (*(_QWORD *)&v83[v87])
    {
      v178 = v87;
      *(_QWORD *)&v177 = v84;
      v180 = *(void (**)(void ***))&v83[qword_1005E3330];
      sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
      v89 = v167;
      v90 = v166;
      v91 = v168;
      (*(void (**)(char *, _QWORD, uint64_t))(v167 + 104))(v166, enum case for DispatchQoS.QoSClass.default(_:), v168);
      v92 = v22;
      v93 = (void *)static OS_dispatch_queue.global(qos:)(v90);
      (*(void (**)(char *, uint64_t))(v89 + 8))(v90, v91);
      v94 = (_QWORD *)swift_allocObject(&unk_100561528, 40, 7);
      v94[2] = v83;
      v94[3] = sub_10017F60C;
      v94[4] = v22;
      v185 = sub_1003D4058;
      v186 = v94;
      aBlock = _NSConcreteStackBlock;
      v182 = 1107296256;
      v183 = sub_100037DF8;
      v184 = &unk_100561540;
      v95 = _Block_copy(&aBlock);
      v96 = v83;
      v97 = swift_retain(v92);
      v98 = v152;
      static DispatchQoS.unspecified.getter(v97);
      v187 = _swiftEmptyArrayStorage;
      v99 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v100 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
      v101 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
      v102 = v100;
      v103 = v154;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v187, v102, v101, v154, v99);
      OS_dispatch_group.notify(qos:flags:queue:execute:)(v98, v81, v93, v95);
      _Block_release(v95);

      v180 = *(void (**)(void ***))(v170 + 8);
      ((void (*)(char *, uint64_t))v180)(v81, v103);
      v176 = *(void (**)(char *, uint64_t))(v169 + 8);
      v176(v98, v153);
      swift_release(v186);
      sub_100006C5C(0, &qword_1005E3660, OS_dispatch_source_ptr);
      v104 = v96;
      v105 = *(_QWORD *)&v96[qword_1005E3348];
      aBlock = (void **)_swiftEmptyArrayStorage;
      v106 = sub_100008000(&qword_1005E3668, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags, (uint64_t)&protocol conformance descriptor for OS_dispatch_source.TimerFlags);
      v107 = sub_100053F2C(&qword_1005E3670);
      v108 = sub_10003F734(&qword_1005E3678, &qword_1005E3670);
      v109 = v171;
      v110 = v173;
      dispatch thunk of SetAlgebra.init<A>(_:)(&aBlock, v107, v108, v173, v106);
      v111 = static OS_dispatch_source.makeTimerSource(flags:queue:)(v109, v105);
      (*(void (**)(char *, uint64_t))(ObjectType + 8))(v109, v110);
      v112 = qword_1005E3340;
      v113 = *(_QWORD *)&v104[qword_1005E3340];
      *(_QWORD *)&v104[qword_1005E3340] = v111;
      swift_unknownObjectRelease(v113);
      v114 = *(_QWORD *)&v104[v112];
      if (v114)
      {
        v173 = v112;
        v115 = swift_unknownObjectRetain(v114);
        v116 = v165;
        static DispatchTime.now()(v115);
        v175 = v104;
        if ((v104[qword_1005E3328 + 8] & 1) != 0)
        {
LABEL_49:
          swift_release(v155);
          __break(1u);
          return;
        }
        v117 = *(double *)&v104[qword_1005E3328];
        ObjectType = swift_getObjectType(v114);
        v118 = v161;
        + infix(_:_:)(v116, v117);
        v119 = *(void (**)(char *, uint64_t))(v160 + 8);
        v120 = v162;
        v119(v116, v162);
        v121 = v163;
        v122 = *(void (**)(char *, _QWORD, uint64_t))(v163 + 104);
        v123 = v158;
        v124 = v164;
        v122(v158, enum case for DispatchTimeInterval.never(_:), v164);
        v125 = v149;
        *(_QWORD *)v149 = 0;
        v122(v125, enum case for DispatchTimeInterval.seconds(_:), v124);
        OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)(v118, v123, v125, ObjectType);
        v126 = swift_unknownObjectRelease(v114);
        v127 = *(void (**)(char *, uint64_t, __n128))(v121 + 8);
        v127(v125, v124, v126);
        ((void (*)(char *, uint64_t))v127)(v123, v124);
        v119(v118, v120);
        v128 = v175;
        v129 = v173;
        v130 = *(_QWORD *)&v175[v173];
        if (v130)
        {
          v131 = swift_getObjectType(*(_QWORD *)&v175[v173]);
          v132 = swift_allocObject(&unk_100561578, 24, 7);
          swift_unknownObjectWeakInit(v132 + 16);
          v185 = sub_1003D4088;
          v186 = (_QWORD *)v132;
          aBlock = _NSConcreteStackBlock;
          v182 = 1107296256;
          v183 = sub_100037DF8;
          v184 = &unk_100561590;
          v133 = _Block_copy(&aBlock);
          swift_unknownObjectRetain(v130);
          v134 = swift_retain(v132);
          v135 = v152;
          static DispatchQoS.unspecified.getter(v134);
          v136 = v174;
          sub_1003D17F8();
          OS_dispatch_source.setEventHandler(qos:flags:handler:)(v135, v136, v133, v131);
          _Block_release(v133);
          v137 = swift_unknownObjectRelease(v130);
          ((void (*)(char *, uint64_t, __n128))v180)(v136, v154, v137);
          v176(v135, v153);
          v138 = v186;
          swift_release(v132);
          swift_release(v138);
          v139 = *(_QWORD *)&v128[v129];
          if (v139)
          {
            swift_getObjectType(*(_QWORD *)&v128[v129]);
            swift_unknownObjectRetain(v139);
            OS_dispatch_source.resume()();
            swift_unknownObjectRelease(v139);
          }
        }
      }
      v140 = *(void **)&v83[v178];
      if (v140)
      {
        v141 = v140;
        v142 = v179;
        v143 = sub_1004625AC((uint64_t)v179);
        swift_bridgeObjectRelease(v142);
        isa = Array._bridgeToObjectiveC()().super.isa;
        objc_msgSend(v141, "setDestinations:", isa, swift_bridgeObjectRelease(v143).n128_f64[0]);
        swift_release(v156);

        return;
      }
      swift_release(v155);
      __break(1u);
      goto LABEL_49;
    }
    swift_bridgeObjectRelease(v179);
    v145 = sub_1003D3FC4();
    v74 = (void **)swift_allocError(&type metadata for FMReachabilityOperationError, v145, 0, 0);
    *v146 = xmmword_100483A80;
    aBlock = v74;
    LOBYTE(v182) = 1;
    v180(&aBlock);

LABEL_34:
    swift_errorRelease(v74);
    swift_release(v22);
    return;
  }
  v151 = v25;
  v178 = sub_100006C5C(0, (unint64_t *)&qword_1005D8190, NSPredicate_ptr);
  v148 = a1;
  v175 = &a1[qword_1005E3370];
  swift_bridgeObjectRetain(v26);
  v150 = v26;
  v28 = (unint64_t *)(v26 + 40);
  v29 = _swiftEmptyArrayStorage;
  *((_QWORD *)&v30 + 1) = 2;
  v177 = xmmword_100481740;
  v176 = (void (*)(char *, uint64_t))0x80000001004ACC10;
  *(_QWORD *)&v30 = 136315138;
  v159 = v30;
  v157 = (char *)&type metadata for Any + 8;
  while (1)
  {
    v31 = *(v28 - 1);
    v32 = *v28;
    v33 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
    v34 = swift_allocObject(v33, 72, 7);
    *(_OWORD *)(v34 + 16) = v177;
    *(_QWORD *)(v34 + 56) = &type metadata for String;
    *(_QWORD *)(v34 + 64) = sub_100071E88();
    v35 = v176;
    *(_QWORD *)(v34 + 32) = 0xD000000000000029;
    *(_QWORD *)(v34 + 40) = v35;
    swift_bridgeObjectRetain_n(v32, 2);
    v36 = (void *)NSPredicate.init(format:_:)(0x54414D20464C4553, 0xEF40252053454843, v34);
    v37 = String._bridgeToObjectiveC()();
    v38 = objc_msgSend(v36, "evaluateWithObject:", v37);
    swift_bridgeObjectRelease(v32);

    if (v38)
    {
      v39 = String._bridgeToObjectiveC()();
      v40 = (void *)IDSCopyIDForEmailAddress();

      if (v40)
      {
        v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v40);
        v43 = v42;

      }
      else
      {
        v41 = 0;
        v43 = 0;
      }
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v50 = type metadata accessor for Logger(0);
      sub_100056D88(v50, (uint64_t)qword_1005F5748);
      v51 = swift_bridgeObjectRetain_n(v32, 2);
      v52 = Logger.logObject.getter(v51);
      v53 = static os_log_type_t.default.getter(v52);
      if (os_log_type_enabled(v52, v53))
      {
        v54 = swift_slowAlloc(12, -1);
        v179 = v29;
        v55 = v54;
        v56 = (void **)swift_slowAlloc(32, -1);
        aBlock = v56;
        *(_DWORD *)v55 = v159;
        swift_bridgeObjectRetain(v32);
        *(_QWORD *)(v55 + 4) = sub_100056DA0(v31, v32, (uint64_t *)&aBlock);
        swift_bridgeObjectRelease_n(v32, 3);
        _os_log_impl((void *)&_mh_execute_header, v52, v53, "FMReachabilityOperation: will check email address: %s...", (uint8_t *)v55, 0xCu);
        swift_arrayDestroy(v56, 1, v157);
        swift_slowDealloc(v56, -1, -1);
        v57 = v55;
        v29 = v179;
LABEL_23:
        swift_slowDealloc(v57, -1, -1);

        goto LABEL_25;
      }
    }
    else
    {
      swift_bridgeObjectRetain(v32);
      v44 = sub_1003C06A0(v31, v32, 0);
      v46 = v45;
      swift_bridgeObjectRelease(v32);
      swift_bridgeObjectRelease(v46);
      if ((v44 & 1) == 0)
        goto LABEL_36;
      v47 = String._bridgeToObjectiveC()();
      v48 = (void *)IDSCopyIDForPhoneNumber();

      if (v48)
      {
        v41 = static String._unconditionallyBridgeFromObjectiveC(_:)(v48);
        v43 = v49;

      }
      else
      {
        v41 = 0;
        v43 = 0;
      }
      if (qword_1005D1DE8 != -1)
        swift_once(&qword_1005D1DE8, sub_100005ADC);
      v58 = type metadata accessor for Logger(0);
      sub_100056D88(v58, (uint64_t)qword_1005F5748);
      v59 = swift_bridgeObjectRetain_n(v32, 2);
      v52 = Logger.logObject.getter(v59);
      v60 = static os_log_type_t.default.getter(v52);
      if (os_log_type_enabled(v52, v60))
      {
        v61 = swift_slowAlloc(12, -1);
        v62 = (void **)swift_slowAlloc(32, -1);
        v179 = v29;
        v63 = v62;
        aBlock = v62;
        *(_DWORD *)v61 = v159;
        swift_bridgeObjectRetain(v32);
        *(_QWORD *)(v61 + 4) = sub_100056DA0(v31, v32, (uint64_t *)&aBlock);
        swift_bridgeObjectRelease_n(v32, 3);
        _os_log_impl((void *)&_mh_execute_header, v52, v60, "FMReachabilityOperation: will check phone number: %s...", (uint8_t *)v61, 0xCu);
        swift_arrayDestroy(v63, 1, (char *)&type metadata for Any + 8);
        v64 = v63;
        v29 = v179;
        swift_slowDealloc(v64, -1, -1);
        v57 = v61;
        goto LABEL_23;
      }
    }

    swift_bridgeObjectRelease_n(v32, 2);
LABEL_25:
    if (!v43)
    {
LABEL_36:
      swift_bridgeObjectRelease(v150);
      v76 = v32;
      goto LABEL_38;
    }
    v65 = String._bridgeToObjectiveC()();
    v66 = (void *)IDSCopyRawAddressForDestination();

    if (!v66)
      break;

    v67 = v175;
    swift_beginAccess(v175, &aBlock, 33, 0);
    swift_bridgeObjectRetain(v43);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*(_QWORD *)v67);
    v187 = *(_QWORD **)v67;
    *(_QWORD *)v67 = 0x8000000000000000;
    sub_100179904(v31, v32, v41, v43, isUniquelyReferenced_nonNull_native);
    v69 = *(_QWORD *)v67;
    *(_QWORD *)v67 = v187;
    swift_bridgeObjectRelease(v43);
    swift_bridgeObjectRelease(v69);
    swift_endAccess(&aBlock);
    if ((swift_isUniquelyReferenced_nonNull_native(v29) & 1) == 0)
      v29 = sub_100070178(0, v29[2] + 1, 1, v29);
    v71 = v29[2];
    v70 = v29[3];
    if (v71 >= v70 >> 1)
      v29 = sub_100070178((_QWORD *)(v70 > 1), v71 + 1, 1, v29);
    v28 += 2;
    v29[2] = v71 + 1;
    v72 = &v29[2 * v71];
    v72[4] = v41;
    v72[5] = v43;
    if (!--v27)
    {
      v179 = v29;
      swift_bridgeObjectRelease(v150);
      v22 = v156;
      v81 = v174;
      a1 = v148;
      v25 = v151;
      goto LABEL_39;
    }
  }
  swift_bridgeObjectRelease(v150);
  swift_bridgeObjectRelease(v32);
  v76 = v43;
LABEL_38:
  swift_bridgeObjectRelease(v76);
  v77 = v180;
  swift_bridgeObjectRelease(v29);
  v78 = sub_1003D3FC4();
  v79 = (void **)swift_allocError(&type metadata for FMReachabilityOperationError, v78, 0, 0);
  *v80 = xmmword_10048B460;
  aBlock = v79;
  LOBYTE(v182) = 1;
  v77(&aBlock);

  swift_errorRelease(v79);
  swift_release(v156);
}

double sub_1003D3D88(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  void *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double result;
  uint64_t v21;
  _QWORD *v22;
  _QWORD aBlock[5];
  _QWORD *v24;

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v10 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)&v2[qword_1005E3348];
  v13 = (_QWORD *)swift_allocObject(&unk_1005614B0, 40, 7);
  v13[2] = v2;
  v13[3] = a2;
  v13[4] = a1;
  aBlock[4] = sub_1003D3FB8;
  v24 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_1005614C8;
  v14 = _Block_copy(aBlock);
  v15 = v2;
  swift_errorRetain(a2);
  swift_bridgeObjectRetain(a1);
  static DispatchQoS.unspecified.getter(v16);
  v22 = _swiftEmptyArrayStorage;
  v17 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v18 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v19 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v22, v18, v19, v5, v17);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *(_QWORD *)&result = swift_release(v24).n128_u64[0];
  return result;
}

uint64_t sub_1003D3F84()
{
  uint64_t v0;

  swift_errorRelease(*(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

void sub_1003D3FB8()
{
  uint64_t v0;

  sub_1003D1E6C(*(_BYTE **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

unint64_t sub_1003D3FC4()
{
  unint64_t result;

  result = qword_1005E3658;
  if (!qword_1005E3658)
  {
    result = swift_getWitnessTable(&unk_10048FBD8, &type metadata for FMReachabilityOperationError);
    atomic_store(result, (unint64_t *)&qword_1005E3658);
  }
  return result;
}

uint64_t sub_1003D4008()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003D402C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_1003D4058()
{
  uint64_t v0;

  return sub_1003D15B8(*(_QWORD *)(v0 + 16), *(void (**)(uint64_t, uint64_t))(v0 + 24));
}

uint64_t sub_1003D4064()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003D4088()
{
  uint64_t v0;

  sub_1003D1658(v0);
}

uint64_t sub_1003D4090()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1003D40B4()
{
  uint64_t v0;

  sub_1003D19CC(*(char **)(v0 + 16));
}

uint64_t sub_1003D40BC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

ValueMetadata *type metadata accessor for FMReachabilityOperationError()
{
  return &type metadata for FMReachabilityOperationError;
}

void sub_1003D4154()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  void *v39;
  Class isa;

  v1 = v0;
  v2 = objc_msgSend(v0, "contentView");
  v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy45FMAccessoryDiscoveryAccessoryConfirmationCard_imageView];
  objc_msgSend(v2, "addSubview:", v3);

  objc_msgSend(v3, "setContentMode:", 1);
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v39 = (void *)objc_opt_self(NSLayoutConstraint);
  v4 = sub_100053F2C(&qword_1005D2F10);
  v5 = swift_allocObject(v4, 88, 7);
  *(_OWORD *)(v5 + 16) = xmmword_1004850C0;
  v6 = objc_msgSend(v3, "leadingAnchor");
  v7 = objc_msgSend(v1, "contentView");
  v8 = objc_msgSend(v7, "mainContentGuide");

  v9 = objc_msgSend(v8, "leadingAnchor");
  v10 = objc_msgSend(v6, "constraintGreaterThanOrEqualToAnchor:", v9);

  *(_QWORD *)(v5 + 32) = v10;
  v11 = objc_msgSend(v3, "trailingAnchor");
  v12 = objc_msgSend(v1, "contentView");
  v13 = objc_msgSend(v12, "mainContentGuide");

  v14 = objc_msgSend(v13, "trailingAnchor");
  v15 = objc_msgSend(v11, "constraintLessThanOrEqualToAnchor:", v14);

  *(_QWORD *)(v5 + 40) = v15;
  v16 = objc_msgSend(v3, "topAnchor");
  v17 = objc_msgSend(v1, "contentView");
  v18 = objc_msgSend(v17, "mainContentGuide");

  v19 = objc_msgSend(v18, "topAnchor");
  v20 = objc_msgSend(v16, "constraintGreaterThanOrEqualToAnchor:", v19);

  *(_QWORD *)(v5 + 48) = v20;
  v21 = objc_msgSend(v3, "bottomAnchor");
  v22 = objc_msgSend(v1, "contentView");
  v23 = objc_msgSend(v22, "mainContentGuide");

  v24 = objc_msgSend(v23, "bottomAnchor");
  v25 = objc_msgSend(v21, "constraintLessThanOrEqualToAnchor:", v24);

  *(_QWORD *)(v5 + 56) = v25;
  v26 = objc_msgSend(v3, "centerXAnchor");
  v27 = objc_msgSend(v1, "contentView");
  v28 = objc_msgSend(v27, "mainContentGuide");

  v29 = objc_msgSend(v28, "centerXAnchor");
  v30 = objc_msgSend(v26, "constraintEqualToAnchor:", v29);

  *(_QWORD *)(v5 + 64) = v30;
  v31 = objc_msgSend(v3, "centerYAnchor");
  v32 = objc_msgSend(v1, "contentView");
  v33 = objc_msgSend(v32, "mainContentGuide");

  v34 = objc_msgSend(v33, "centerYAnchor");
  v35 = objc_msgSend(v31, "constraintEqualToAnchor:", v34);

  *(_QWORD *)(v5 + 72) = v35;
  v36 = objc_msgSend(v3, "heightAnchor");
  v37 = objc_msgSend(v36, "constraintEqualToConstant:", 140.0);

  *(_QWORD *)(v5 + 80) = v37;
  specialized Array._endMutation()(v38);
  sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v39, "activateConstraints:", isa, swift_bridgeObjectRelease(v5).n128_f64[0]);

}

double sub_1003D4654()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSString v20;
  id v21;
  Swift::String v22;
  Swift::String_optional v23;
  Swift::String v24;
  void *object;
  uint64_t v26;
  NSString v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  double result;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  _QWORD aBlock[5];
  uint64_t v65;
  Swift::String v66;

  v1 = v0;
  v2 = sub_100053F2C(&qword_1005D9640);
  __chkstk_darwin(v2);
  v4 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100053F2C(&qword_1005D7320);
  __chkstk_darwin(v5);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_100053F2C(&qword_1005D6DB0);
  v9 = *(_QWORD *)(v8 - 8);
  v57 = v8;
  v58 = v9;
  __chkstk_darwin(v8);
  v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100053F2C(&qword_1005E2D38);
  v13 = *(_QWORD *)(v12 - 8);
  v59 = v12;
  v60 = v13;
  __chkstk_darwin(v12);
  v55 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_100053F2C(&qword_1005E2D40);
  v16 = *(_QWORD *)(v15 - 8);
  v61 = v15;
  v62 = v16;
  __chkstk_darwin(v15);
  v56 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  FMIPDiscoveredAccessory.displayName.getter(objc_msgSend(v0, "setDismissalType:", 3));
  v19 = v18;
  v20 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setTitle:", v20, swift_bridgeObjectRelease(v19).n128_f64[0]);

  v21 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v66._countAndFlagsBits = 0xD000000000000018;
  v22._countAndFlagsBits = 0xD000000000000021;
  v66._object = (void *)0x80000001004A5660;
  v22._object = (void *)0x80000001004C55C0;
  v23.value._object = (void *)0x80000001004A5640;
  v23.value._countAndFlagsBits = 0xD000000000000013;
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v22, v23, (NSBundle)v21, v24, v66)._object;

  v26 = swift_allocObject(&unk_100561718, 24, 7);
  swift_unknownObjectWeakInit(v26 + 16);
  swift_retain_n(v26, 2);
  swift_bridgeObjectRetain(object);
  v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(object);
  aBlock[4] = sub_1003D5380;
  v65 = v26;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100008B40;
  aBlock[3] = &unk_100561730;
  v28 = _Block_copy(aBlock);
  v29 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v27, 0, v28);

  _Block_release(v28);
  v30 = objc_msgSend(v0, "addAction:", v29, swift_release(v65).n128_f64[0]);

  swift_bridgeObjectRelease(object);
  swift_release_n(v26, 2);

  v31 = type metadata accessor for FMAccessoryDiscoveryAccessoryConfirmationCard.ViewModel(0);
  FMIPDiscoveredAccessory.productInformation.getter(v31);
  v32 = sub_10016EF28((uint64_t)v7, 1);
  sub_1000051EC((uint64_t)v7, &qword_1005D7320);
  aBlock[0] = v32;
  v63 = objc_msgSend((id)objc_opt_self(NSRunLoop), "mainRunLoop");
  v33 = type metadata accessor for NSRunLoop.SchedulerOptions(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v4, 1, 1, v33);
  v34 = sub_100053F2C(&qword_1005D6DC0);
  v35 = sub_100006C5C(0, (unint64_t *)&qword_1005E5530, NSRunLoop_ptr);
  v36 = sub_10003F774((unint64_t *)&unk_1005D7E70, &qword_1005D6DC0, (uint64_t)&protocol conformance descriptor for AnyPublisher<A, B>);
  v37 = sub_100121168();
  Publisher.receive<A>(on:options:)(&v63, v4, v34, v35, v36, v37);
  sub_1000051EC((uint64_t)v4, &qword_1005D9640);

  swift_release(aBlock[0]);
  v38 = sub_100006C5C(0, (unint64_t *)&qword_1005DDF90, UIImage_ptr);
  v39 = sub_10003F774(&qword_1005D6DC8, &qword_1005D6DB0, (uint64_t)&protocol conformance descriptor for Publishers.ReceiveOn<A, B>);
  v40 = v55;
  v41 = v57;
  Publisher.map<A>(_:)(sub_1003C62B0, 0, v57, v38, v39);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v11, v41);
  v42 = sub_100053F2C(&qword_1005D8E30);
  v43 = sub_10003F774(&qword_1005E2D48, &qword_1005E2D38, (uint64_t)&protocol conformance descriptor for Publishers.Map<A, B>);
  v44 = sub_10003F774(&qword_1005E2D50, &qword_1005D8E30, (uint64_t)&protocol conformance descriptor for Just<A>);
  v45 = v56;
  v46 = v59;
  Publisher.catch<A>(_:)(sub_1003C62BC, 0, v59, v42, v43, v44);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v40, v46);
  v47 = swift_allocObject(&unk_100561718, 24, 7);
  swift_unknownObjectWeakInit(v47 + 16);
  v48 = sub_10003F774(&qword_1005E2D58, &qword_1005E2D40, (uint64_t)&protocol conformance descriptor for Publishers.Catch<A, B>);
  v49 = v61;
  v50 = Publisher<>.sink(receiveValue:)(sub_1003D5388, v47, v61, v48);
  v51 = swift_release(v47);
  (*(void (**)(char *, uint64_t, __n128))(v62 + 8))(v45, v49, v51);
  v52 = *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy45FMAccessoryDiscoveryAccessoryConfirmationCard_imageFetchCancellable];
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy45FMAccessoryDiscoveryAccessoryConfirmationCard_imageFetchCancellable] = v50;
  *(_QWORD *)&result = swift_release(v52).n128_u64[0];
  return result;
}

void sub_1003D4C70(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  char *v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  char v13[24];

  v3 = type metadata accessor for FMAccessoryDiscoveryCoordinator.Event(0);
  __chkstk_darwin(v3);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  a2 += 16;
  swift_beginAccess(a2, v13, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(a2);
  if (Strong)
  {
    v7 = (char *)Strong;
    v8 = swift_unknownObjectWeakLoadStrong(Strong + OBJC_IVAR____TtC6FindMy45FMAccessoryDiscoveryAccessoryConfirmationCard_coordinator);
    if (v8)
    {
      v9 = (void *)v8;
      v10 = &v7[OBJC_IVAR____TtC6FindMy45FMAccessoryDiscoveryAccessoryConfirmationCard_viewModel];
      v11 = type metadata accessor for FMIPDiscoveredAccessory(0);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v5, v10, v11);
      swift_storeEnumTagMultiPayload(v5, v3, 4);
      sub_10021ABAC((uint64_t)v5);

      sub_10004FCB8((uint64_t)v5, type metadata accessor for FMAccessoryDiscoveryCoordinator.Event);
    }

  }
}

void sub_1003D4D7C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  void *v5;
  id v6;
  _BYTE v7[24];

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess(a2 + 16, v7, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v3);
  if (Strong)
  {
    v5 = (void *)Strong;
    v6 = *(id *)(Strong + OBJC_IVAR____TtC6FindMy45FMAccessoryDiscoveryAccessoryConfirmationCard_imageView);

    objc_msgSend(v6, "setImage:", v2);
  }
}

id sub_1003D4E30()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMAccessoryDiscoveryAccessoryConfirmationCard(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1003D4EC4()
{
  return type metadata accessor for FMAccessoryDiscoveryAccessoryConfirmationCard(0);
}

uint64_t type metadata accessor for FMAccessoryDiscoveryAccessoryConfirmationCard(uint64_t a1)
{
  return sub_10001DC04(a1, (uint64_t *)&unk_1005E36C8, (uint64_t)&nominal type descriptor for FMAccessoryDiscoveryAccessoryConfirmationCard);
}

uint64_t sub_1003D4EE0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[4];

  v4[0] = "\b";
  result = type metadata accessor for FMAccessoryDiscoveryAccessoryConfirmationCard.ViewModel(319);
  if (v3 <= 0x3F)
  {
    v4[1] = *(_QWORD *)(result - 8) + 64;
    v4[2] = (char *)&value witness table for Builtin.UnknownObject + 64;
    v4[3] = &unk_10048FC78;
    result = swift_updateClassMetadata2(a1, 256, 4, v4, a1 + 80);
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for FMAccessoryDiscoveryAccessoryConfirmationCard.ViewModel(uint64_t a1)
{
  return sub_10001DC04(a1, qword_1005E3730, (uint64_t)&nominal type descriptor for FMAccessoryDiscoveryAccessoryConfirmationCard.ViewModel);
}

uint64_t *sub_1003D4F84(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = type metadata accessor for FMIPDiscoveredAccessory(0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = v9;
  }
  swift_retain(v9);
  return a1;
}

uint64_t sub_1003D500C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FMIPDiscoveredAccessory(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return swift_release(*(_QWORD *)(a1 + *(int *)(a2 + 20)));
}

uint64_t sub_1003D5050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for FMIPDiscoveredAccessory(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_retain(v8);
  return a1;
}

uint64_t sub_1003D50B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = type metadata accessor for FMIPDiscoveredAccessory(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a2 + v7);
  v9 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  swift_retain(v8);
  swift_release(v9);
  return a1;
}

uint64_t sub_1003D511C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = type metadata accessor for FMIPDiscoveredAccessory(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1003D5178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = type metadata accessor for FMIPDiscoveredAccessory(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(_QWORD *)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_release(v8);
  return a1;
}

uint64_t sub_1003D51DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003D51E8);
}

uint64_t sub_1003D51E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for FMIPDiscoveredAccessory(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1003D5264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003D5270);
}

uint64_t sub_1003D5270(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for FMIPDiscoveredAccessory(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1003D52E8(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  _QWORD v4[2];

  result = type metadata accessor for FMIPDiscoveredAccessory(319);
  if (v3 <= 0x3F)
  {
    v4[0] = *(_QWORD *)(result - 8) + 64;
    v4[1] = (char *)&value witness table for Builtin.NativeObject + 64;
    swift_initStructMetadata(a1, 256, 2, v4, a1 + 16);
    return 0;
  }
  return result;
}

uint64_t sub_1003D535C()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003D5380(uint64_t a1)
{
  uint64_t v1;

  sub_1003D4C70(a1, v1);
}

void sub_1003D5388(uint64_t *a1)
{
  uint64_t v1;

  sub_1003D4D7C(a1, v1);
}

uint64_t storeEnumTagSinglePayload for FMAlertBehavior(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1003D53DC + 4 * byte_10048FCB1[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1003D5410 + 4 * byte_10048FCAC[v4]))();
}

uint64_t sub_1003D5410(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003D5418(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003D5420);
  return result;
}

uint64_t sub_1003D542C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003D5434);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1003D5438(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003D5440(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMAlertBehavior()
{
  return &type metadata for FMAlertBehavior;
}

uint64_t sub_1003D545C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  __n128 v23;
  void (*v24)(char *, uint64_t, __n128);
  uint64_t v25;
  void (*v26)(char *, _QWORD, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  __n128 v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char *v37;
  char *v38;
  void (*v39)(char *, _QWORD, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v1 = type metadata accessor for FMIPAlertType(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = __chkstk_darwin(v1);
  v38 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __chkstk_darwin(v3);
  v37 = (char *)&v37 - v6;
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v37 - v8;
  v10 = __chkstk_darwin(v7);
  v12 = (char *)&v37 - v11;
  v13 = __chkstk_darwin(v10);
  v15 = (char *)&v37 - v14;
  v16 = __chkstk_darwin(v13);
  v18 = (char *)&v37 - v17;
  v40 = v0;
  FMIPAlert.type.getter(v16);
  v39 = *(void (**)(char *, _QWORD, uint64_t))(v2 + 104);
  v39(v15, enum case for FMIPAlertType.recurrentNetworkIssue(_:), v1);
  v19 = sub_100008000(&qword_1005DF390, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPAlertType, (uint64_t)&protocol conformance descriptor for FMIPAlertType);
  dispatch thunk of RawRepresentable.rawValue.getter(&v43, v1, v19);
  dispatch thunk of RawRepresentable.rawValue.getter(&v41, v1, v19);
  v20 = v44;
  v21 = v42;
  if (v43 == v41 && v44 == v42)
  {
    v22 = 1;
    v21 = v44;
  }
  else
  {
    v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v43, v44, v41, v42, 0);
  }
  swift_bridgeObjectRelease(v20);
  v23 = swift_bridgeObjectRelease(v21);
  v24 = *(void (**)(char *, uint64_t, __n128))(v2 + 8);
  v24(v15, v1, v23);
  v25 = ((uint64_t (*)(char *, uint64_t))v24)(v18, v1);
  if ((v22 & 1) == 0)
  {
    FMIPAlert.type.getter(v25);
    v26 = v39;
    v39(v9, enum case for FMIPAlertType.networkIssue(_:), v1);
    dispatch thunk of RawRepresentable.rawValue.getter(&v43, v1, v19);
    dispatch thunk of RawRepresentable.rawValue.getter(&v41, v1, v19);
    v27 = v44;
    v28 = v42;
    if (v43 == v41 && v44 == v42)
    {
      v29 = v44;
      goto LABEL_14;
    }
    v30 = _stringCompareWithSmolCheck(_:_:expecting:)(v43, v44, v41, v42, 0);
    swift_bridgeObjectRelease(v27);
    v31 = swift_bridgeObjectRelease(v28);
    v24(v9, v1, v31);
    v32 = ((uint64_t (*)(char *, uint64_t))v24)(v12, v1);
    if ((v30 & 1) == 0)
    {
      v12 = v37;
      FMIPAlert.type.getter(v32);
      v9 = v38;
      v26(v38, enum case for FMIPAlertType.initialization(_:), v1);
      dispatch thunk of RawRepresentable.rawValue.getter(&v43, v1, v19);
      dispatch thunk of RawRepresentable.rawValue.getter(&v41, v1, v19);
      v34 = v44;
      v35 = v42;
      if (v43 != v41 || v44 != v42)
      {
        v33 = _stringCompareWithSmolCheck(_:_:expecting:)(v43, v44, v41, v42, 0);
        swift_bridgeObjectRelease(v34);
        swift_bridgeObjectRelease(v35);
        goto LABEL_15;
      }
      v29 = v44;
LABEL_14:
      swift_bridgeObjectRelease_n(v29, 2);
      v33 = 1;
LABEL_15:
      ((void (*)(char *, uint64_t))v24)(v9, v1);
      ((void (*)(char *, uint64_t))v24)(v12, v1);
      return v33 & 1;
    }
  }
  v33 = 1;
  return v33 & 1;
}

BOOL sub_1003D57C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  _BYTE *v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE *v45;
  unsigned int v46;
  uint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  void (*v51)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v52;
  uint64_t v53;
  void (*v54)(_BYTE *, uint64_t);
  _BYTE *v55;
  uint64_t v56;
  _BYTE *v57;
  void (*v58)(_BYTE *, uint64_t);
  _BYTE *v59;
  uint64_t v60;
  char v61;
  void (*v62)(_BYTE *, uint64_t);
  _BYTE v63[4];
  int v64;
  _BYTE *v65;
  uint64_t v66;
  _BYTE *v67;
  _BYTE *v68;
  _BYTE *v69;
  _BYTE *v70;
  uint64_t v71;
  _BYTE *v72;
  _BYTE *v73;
  void (*v74)(_BYTE *, _QWORD, uint64_t);
  void (*v75)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v76;
  _BYTE *v77;

  v1 = type metadata accessor for FMFAlertType(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v68 = &v63[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = sub_100053F2C(&qword_1005DF3A0);
  v5 = __chkstk_darwin(v4);
  v73 = &v63[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __chkstk_darwin(v5);
  v77 = &v63[-v8];
  __chkstk_darwin(v7);
  v10 = &v63[-v9];
  v11 = sub_100053F2C(&qword_1005DF3A8);
  v12 = __chkstk_darwin(v11);
  v14 = &v63[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = __chkstk_darwin(v12);
  v70 = &v63[-v16];
  v17 = __chkstk_darwin(v15);
  v69 = &v63[-v18];
  v19 = __chkstk_darwin(v17);
  v67 = &v63[-v20];
  v21 = __chkstk_darwin(v19);
  v23 = &v63[-v22];
  v24 = __chkstk_darwin(v21);
  v72 = &v63[-v25];
  v26 = __chkstk_darwin(v24);
  v28 = &v63[-v27];
  v29 = __chkstk_darwin(v26);
  v31 = &v63[-v30];
  v32 = __chkstk_darwin(v29);
  v34 = &v63[-v33];
  v71 = v0;
  FMFAlert.alertType.getter(v32);
  v74 = *(void (**)(_BYTE *, _QWORD, uint64_t))(v2 + 104);
  v74(v31, enum case for FMFAlertType.recurrentNetworkIssue(_:), v1);
  v75 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v2 + 56);
  v75(v31, 0, 1, v1);
  v76 = v4;
  v35 = (uint64_t)&v10[*(int *)(v4 + 48)];
  sub_1002E7BC4((uint64_t)v34, (uint64_t)v10);
  sub_1002E7BC4((uint64_t)v31, v35);
  v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v36((uint64_t)v10, 1, v1) == 1)
  {
    sub_1000051EC((uint64_t)v31, &qword_1005DF3A8);
    sub_1000051EC((uint64_t)v34, &qword_1005DF3A8);
    if (v36(v35, 1, v1) == 1)
    {
      v37 = v10;
LABEL_16:
      sub_1000051EC((uint64_t)v37, &qword_1005DF3A8);
      return 1;
    }
    goto LABEL_6;
  }
  sub_1002E7BC4((uint64_t)v10, (uint64_t)v28);
  if (v36(v35, 1, v1) == 1)
  {
    sub_1000051EC((uint64_t)v31, &qword_1005DF3A8);
    sub_1000051EC((uint64_t)v34, &qword_1005DF3A8);
    (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v28, v1);
LABEL_6:
    v38 = sub_1000051EC((uint64_t)v10, &qword_1005DF3A0);
    goto LABEL_7;
  }
  v51 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v2 + 32);
  v65 = v14;
  v52 = v68;
  v51(v68, v35, v1);
  v53 = sub_100008000(&qword_1005DF3B0, (uint64_t (*)(uint64_t))&type metadata accessor for FMFAlertType, (uint64_t)&protocol conformance descriptor for FMFAlertType);
  v64 = dispatch thunk of static Equatable.== infix(_:_:)(v28, v52, v1, v53);
  v54 = *(void (**)(_BYTE *, uint64_t))(v2 + 8);
  v54(v52, v1);
  v66 = v2;
  sub_1000051EC((uint64_t)v31, &qword_1005DF3A8);
  sub_1000051EC((uint64_t)v34, &qword_1005DF3A8);
  v54(v28, v1);
  v14 = v65;
  v2 = v66;
  v38 = sub_1000051EC((uint64_t)v10, &qword_1005DF3A8);
  if ((v64 & 1) != 0)
    return 1;
LABEL_7:
  v39 = v72;
  FMFAlert.alertType.getter(v38);
  v74(v23, enum case for FMFAlertType.networkIssue(_:), v1);
  v75(v23, 0, 1, v1);
  v40 = v77;
  v41 = (uint64_t)&v77[*(int *)(v76 + 48)];
  sub_1002E7BC4((uint64_t)v39, (uint64_t)v77);
  sub_1002E7BC4((uint64_t)v23, v41);
  if (v36((uint64_t)v40, 1, v1) == 1)
  {
    sub_1000051EC((uint64_t)v23, &qword_1005DF3A8);
    v40 = v77;
    sub_1000051EC((uint64_t)v39, &qword_1005DF3A8);
    v42 = v36(v41, 1, v1);
    v43 = (uint64_t)v69;
    v44 = (uint64_t)v70;
    if (v42 == 1)
    {
      v37 = v40;
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  v45 = v67;
  sub_1002E7BC4((uint64_t)v40, (uint64_t)v67);
  v46 = v36(v41, 1, v1);
  v44 = (uint64_t)v70;
  if (v46 == 1)
  {
    sub_1000051EC((uint64_t)v23, &qword_1005DF3A8);
    sub_1000051EC((uint64_t)v72, &qword_1005DF3A8);
    (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v45, v1);
    v43 = (uint64_t)v69;
LABEL_12:
    v47 = sub_1000051EC((uint64_t)v40, &qword_1005DF3A0);
    goto LABEL_13;
  }
  v55 = v68;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v2 + 32))(v68, v41, v1);
  v56 = sub_100008000(&qword_1005DF3B0, (uint64_t (*)(uint64_t))&type metadata accessor for FMFAlertType, (uint64_t)&protocol conformance descriptor for FMFAlertType);
  LODWORD(v66) = dispatch thunk of static Equatable.== infix(_:_:)(v45, v55, v1, v56);
  v57 = v45;
  v58 = *(void (**)(_BYTE *, uint64_t))(v2 + 8);
  v58(v55, v1);
  sub_1000051EC((uint64_t)v23, &qword_1005DF3A8);
  sub_1000051EC((uint64_t)v72, &qword_1005DF3A8);
  v58(v57, v1);
  v47 = sub_1000051EC((uint64_t)v77, &qword_1005DF3A8);
  v43 = (uint64_t)v69;
  if ((v66 & 1) != 0)
    return 1;
LABEL_13:
  FMFAlert.alertType.getter(v47);
  v74((_BYTE *)v44, enum case for FMFAlertType.initialization(_:), v1);
  v75((_BYTE *)v44, 0, 1, v1);
  v48 = v73;
  v49 = (uint64_t)&v73[*(int *)(v76 + 48)];
  sub_1002E7BC4(v43, (uint64_t)v73);
  sub_1002E7BC4(v44, v49);
  if (v36((uint64_t)v48, 1, v1) == 1)
  {
    sub_1000051EC(v44, &qword_1005DF3A8);
    sub_1000051EC(v43, &qword_1005DF3A8);
    if (v36(v49, 1, v1) == 1)
    {
      v37 = v73;
      goto LABEL_16;
    }
    goto LABEL_22;
  }
  sub_1002E7BC4((uint64_t)v73, (uint64_t)v14);
  if (v36(v49, 1, v1) == 1)
  {
    sub_1000051EC(v44, &qword_1005DF3A8);
    sub_1000051EC(v43, &qword_1005DF3A8);
    (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v14, v1);
LABEL_22:
    sub_1000051EC((uint64_t)v73, &qword_1005DF3A0);
    return 0;
  }
  v59 = v68;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v2 + 32))(v68, v49, v1);
  v60 = sub_100008000(&qword_1005DF3B0, (uint64_t (*)(uint64_t))&type metadata accessor for FMFAlertType, (uint64_t)&protocol conformance descriptor for FMFAlertType);
  v61 = dispatch thunk of static Equatable.== infix(_:_:)(v14, v59, v1, v60);
  v62 = *(void (**)(_BYTE *, uint64_t))(v2 + 8);
  v62(v59, v1);
  sub_1000051EC(v44, &qword_1005DF3A8);
  sub_1000051EC(v43, &qword_1005DF3A8);
  v62(v14, v1);
  sub_1000051EC((uint64_t)v73, &qword_1005DF3A8);
  return (v61 & 1) != 0;
}

uint64_t sub_1003D5F8C(char *a1, char *a2)
{
  return sub_1001972C0(*a1, *a2);
}

Swift::Int sub_1003D5F98()
{
  unsigned __int8 *v0;
  int v1;
  unint64_t v2;
  unint64_t v3;
  _QWORD v5[9];

  v1 = *v0;
  Hasher.init(_seed:)(v5, 0);
  if (v1)
    v2 = 0xD000000000000015;
  else
    v2 = 0x746C7561666564;
  if (v1)
    v3 = 0x80000001004A4B10;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1003D601C(uint64_t a1)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  if (*v1)
    v2 = 0xD000000000000015;
  else
    v2 = 0x746C7561666564;
  if (*v1)
    v3 = 0x80000001004A4B10;
  else
    v3 = 0xE700000000000000;
  String.hash(into:)(a1, v2, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_1003D607C(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  _QWORD v6[9];

  v2 = *v1;
  Hasher.init(_seed:)(v6, a1);
  if (v2)
    v3 = 0xD000000000000015;
  else
    v3 = 0x746C7561666564;
  if (v2)
    v4 = 0x80000001004A4B10;
  else
    v4 = 0xE700000000000000;
  String.hash(into:)(v6, v3, v4);
  swift_bridgeObjectRelease(v4);
  return Hasher._finalize()();
}

uint64_t sub_1003D60FC@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  Swift::String v3;
  void *v4;
  Swift::Int v5;
  uint64_t result;
  char v7;

  v3._countAndFlagsBits = *a1;
  v4 = (void *)a1[1];
  v3._object = v4;
  v5 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100540238, v3);
  result = swift_bridgeObjectRelease(v4);
  if (v5 == 1)
    v7 = 1;
  else
    v7 = 2;
  if (!v5)
    v7 = 0;
  *a2 = v7;
  return result;
}

void sub_1003D6158(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0x746C7561666564;
  if (*v1)
    v2 = 0xD000000000000015;
  v3 = 0x80000001004A4B10;
  if (!*v1)
    v3 = 0xE700000000000000;
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_1003D61A0()
{
  unint64_t result;

  result = qword_1005E3790;
  if (!qword_1005E3790)
  {
    result = swift_getWitnessTable(&unk_10048FD48, &type metadata for FMAlertBehavior);
    atomic_store(result, (unint64_t *)&qword_1005E3790);
  }
  return result;
}

char *sub_1003D61E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  char *v5;
  char *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  objc_class *v24;
  char *v25;
  uint64_t v26;
  void *v27;
  char *v28;
  id v29;
  NSString v30;
  uint64_t v31;
  NSString v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  double v37;
  id v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  objc_super v44;

  v6 = v5;
  v42 = a1;
  v43 = a4;
  v41 = a3;
  v9 = sub_100053F2C(&qword_1005DC1B8);
  v10 = __chkstk_darwin(v9);
  v40 = (uint64_t)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v13 = (char *)&v40 - v12;
  v14 = type metadata accessor for UIButton.Configuration(0);
  v15 = *(_QWORD *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = OBJC_IVAR____TtC6FindMy14FMSimpleButton_button;
  sub_100006C5C(0, (unint64_t *)&qword_1005D6560, UIButton_ptr);
  v19 = v6;
  static UIButton.Configuration.plain()(v19);
  *(_QWORD *)&v6[v18] = UIButton.init(configuration:primaryAction:)(v17, 0);
  v20 = OBJC_IVAR____TtC6FindMy14FMSimpleButton_subtitleLabel;
  *(_QWORD *)&v19[v20] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v21 = OBJC_IVAR____TtC6FindMy14FMSimpleButton_separator;
  *(_QWORD *)&v19[v21] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v19[OBJC_IVAR____TtC6FindMy14FMSimpleButton_isActionEnabled] = 1;
  v22 = &v19[OBJC_IVAR____TtC6FindMy14FMSimpleButton_subtitle];
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  v23 = OBJC_IVAR____TtC6FindMy14FMSimpleButton_subtitleColor;
  *(_QWORD *)&v19[v23] = objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
  v19[OBJC_IVAR____TtC6FindMy14FMSimpleButton_separated] = 1;
  v19[OBJC_IVAR____TtC6FindMy14FMSimpleButton_useEmbeddedSubtitle] = a5;

  v24 = (objc_class *)type metadata accessor for FMSimpleButton();
  v44.receiver = v19;
  v44.super_class = v24;
  v25 = (char *)objc_msgSendSuper2(&v44, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  v26 = OBJC_IVAR____TtC6FindMy14FMSimpleButton_button;
  v27 = *(void **)&v25[OBJC_IVAR____TtC6FindMy14FMSimpleButton_button];
  v28 = v25;
  v29 = v27;
  v30 = String._bridgeToObjectiveC()();
  objc_msgSend(v29, "setTitle:forState:", v30, 0, swift_bridgeObjectRelease(a2).n128_f64[0]);

  if ((a5 & 1) == 0)
  {
    v34 = *(void **)&v28[OBJC_IVAR____TtC6FindMy14FMSimpleButton_subtitleLabel];
    v35 = v43;
    if (v43)
    {
      v36 = v34;
      v32 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v37 = swift_bridgeObjectRelease(v35).n128_u64[0];
    }
    else
    {
      v38 = v34;
      v32 = 0;
    }
    objc_msgSend(v34, "setText:", v32, v37);

    goto LABEL_9;
  }
  v31 = v43;
  v32 = *(id *)&v25[v26];
  UIButton.configuration.getter(v32);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    UIButton.Configuration.subtitle.setter(v41, v31);
    UIButton.configuration.setter(v13);
LABEL_9:

    goto LABEL_10;
  }
  swift_bridgeObjectRelease(v31);
  v33 = v40;
  sub_10022CFA4((uint64_t)v13, v40);
  UIButton.configuration.setter(v33);

  sub_100264E0C((uint64_t)v13);
LABEL_10:
  sub_1003D6558();
  sub_1003D6A88();

  return v28;
}

id sub_1003D6558()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  void *v18;
  uint64_t v19;
  unsigned int (*v20)(_BYTE *, uint64_t, uint64_t);
  uint64_t v21;
  void (*v22)(_BYTE *, _QWORD);
  uint64_t v23;
  void (*v24)(_BYTE *, _QWORD);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  _BYTE v33[32];

  v1 = v0;
  v2 = sub_100053F2C(&qword_1005E3808);
  __chkstk_darwin(v2);
  v4 = &v33[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = sub_100053F2C(&qword_1005DC1B8);
  v6 = __chkstk_darwin(v5);
  v8 = &v33[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __chkstk_darwin(v6);
  v11 = &v33[-v10];
  v12 = __chkstk_darwin(v9);
  v14 = &v33[-v13];
  v15 = __chkstk_darwin(v12);
  v17 = &v33[-v16];
  v18 = *(void **)&v0[OBJC_IVAR____TtC6FindMy14FMSimpleButton_button];
  UIButton.configuration.getter(v15);
  v19 = type metadata accessor for UIButton.Configuration(0);
  v20 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48);
  if (v20(v17, 1, v19))
  {
    sub_10022CFA4((uint64_t)v17, (uint64_t)v8);
    UIButton.configuration.setter(v8);
    v21 = sub_100264E0C((uint64_t)v17);
  }
  else
  {
    v22 = (void (*)(_BYTE *, _QWORD))UIButton.Configuration.contentInsets.modify(v33);
    *(_QWORD *)(v23 + 8) = 0;
    v22(v33, 0);
    v21 = UIButton.configuration.setter(v17);
  }
  UIButton.configuration.getter(v21);
  if (v20(v14, 1, v19))
  {
    sub_10022CFA4((uint64_t)v14, (uint64_t)v8);
    UIButton.configuration.setter(v8);
    sub_100264E0C((uint64_t)v14);
  }
  else
  {
    v24 = (void (*)(_BYTE *, _QWORD))UIButton.Configuration.contentInsets.modify(v33);
    *(_QWORD *)(v25 + 24) = 0;
    v24(v33, 0);
    UIButton.configuration.setter(v14);
  }
  UIButton.configuration.getter(objc_msgSend(v18, "setContentHorizontalAlignment:", 4));
  if (v20(v11, 1, v19))
  {
    sub_10022CFA4((uint64_t)v11, (uint64_t)v8);
    UIButton.configuration.setter(v8);
    sub_100264E0C((uint64_t)v11);
  }
  else
  {
    v26 = swift_allocObject(&unk_100561858, 24, 7);
    swift_unknownObjectWeakInit(v26 + 16);
    UIConfigurationTextAttributesTransformer.init(_:)(sub_1003D71D0, v26);
    v27 = type metadata accessor for UIConfigurationTextAttributesTransformer(0);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v4, 0, 1, v27);
    UIButton.Configuration.subtitleTextAttributesTransformer.setter(v4);
    UIButton.configuration.setter(v11);
  }
  objc_msgSend(v18, "addTarget:action:forControlEvents:", v1, "handleAction", 64);
  objc_msgSend(v1, "addSubview:", v18);
  v28 = *(void **)&v1[OBJC_IVAR____TtC6FindMy14FMSimpleButton_subtitleLabel];
  v29 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleCaption1);
  objc_msgSend(v28, "setFont:", v29);

  objc_msgSend(v28, "setNumberOfLines:", 0);
  objc_msgSend(v28, "setAdjustsFontForContentSizeCategory:", 1);
  objc_msgSend(v28, "setTextColor:", *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy14FMSimpleButton_subtitleColor]);
  objc_msgSend(v1, "addSubview:", v28);
  v30 = *(void **)&v1[OBJC_IVAR____TtC6FindMy14FMSimpleButton_separator];
  v31 = objc_msgSend((id)objc_opt_self(UIColor), "quaternaryLabelColor");
  objc_msgSend(v30, "setBackgroundColor:", v31);

  return objc_msgSend(v1, "addSubview:", v30);
}

uint64_t sub_1003D6960@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t Strong;
  void *v9;
  void *v10;
  id v11;
  unint64_t v12;
  void *v14;
  _BYTE v15[24];

  v5 = a2 + 16;
  v6 = type metadata accessor for AttributeContainer(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, a1, v6);
  swift_getKeyPath(&unk_10048FD98);
  KeyPath = swift_getKeyPath(&unk_10048FDC8);
  swift_beginAccess(v5, v15, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v5);
  if (Strong)
  {
    v9 = (void *)Strong;
    v10 = *(void **)(Strong + OBJC_IVAR____TtC6FindMy14FMSimpleButton_subtitleColor);
    v11 = v10;

  }
  else
  {
    v10 = 0;
  }
  v14 = v10;
  v12 = sub_1003D71F4();
  return AttributeContainer.subscript.setter(&v14, KeyPath, v12);
}

uint64_t sub_1003D6A30(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v2 = *a2;
  v5 = *a1;
  v6 = v2;
  v3 = sub_100053F2C(&qword_1005E3818);
  return dispatch thunk of static Equatable.== infix(_:_:)(&v6, &v5, v3, &protocol witness table for AnyKeyPath) & 1;
}

void sub_1003D6A88()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  double v42;
  double v43;
  id v44;
  uint64_t v45;
  id v46;
  void *v47;
  Class isa;

  v1 = *(void **)&v0[OBJC_IVAR____TtC6FindMy14FMSimpleButton_separator];
  objc_msgSend(v1, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v2 = *(void **)&v0[OBJC_IVAR____TtC6FindMy14FMSimpleButton_button];
  objc_msgSend(v2, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = *(void **)&v0[OBJC_IVAR____TtC6FindMy14FMSimpleButton_subtitleLabel];
  objc_msgSend(v3, "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = objc_msgSend(v1, "topAnchor");
  v5 = objc_msgSend(v3, "bottomAnchor");
  if (qword_1005D1E80 != -1)
    swift_once(&qword_1005D1E80, sub_100008974);
  v46 = objc_msgSend(v4, "constraintEqualToAnchor:constant:", v5, *(double *)&qword_1005F5970);

  LODWORD(v6) = 1144750080;
  objc_msgSend(v46, "setPriority:", v6);
  v47 = (void *)objc_opt_self(NSLayoutConstraint);
  v7 = sub_100053F2C(&qword_1005D2F10);
  v8 = swift_allocObject(v7, 128, 7);
  *(_OWORD *)(v8 + 16) = xmmword_10048FD70;
  v9 = objc_msgSend(v2, "topAnchor");
  v10 = objc_msgSend(v0, "topAnchor");
  v11 = objc_msgSend(v9, "constraintEqualToAnchor:constant:", v10, *(double *)&qword_1005F5970);

  *(_QWORD *)(v8 + 32) = v11;
  v12 = objc_msgSend(v2, "leadingAnchor");
  v13 = objc_msgSend(v0, "leadingAnchor");
  v14 = objc_msgSend(v12, "constraintEqualToAnchor:", v13);

  *(_QWORD *)(v8 + 40) = v14;
  v15 = objc_msgSend(v2, "trailingAnchor");
  v16 = objc_msgSend(v0, "trailingAnchor");
  v17 = objc_msgSend(v15, "constraintEqualToAnchor:", v16);

  *(_QWORD *)(v8 + 48) = v17;
  v18 = objc_msgSend(v3, "topAnchor");
  v19 = objc_msgSend(v2, "bottomAnchor");
  v20 = objc_msgSend(v18, "constraintEqualToAnchor:constant:", v19, *(double *)&qword_1005E3798);

  *(_QWORD *)(v8 + 56) = v20;
  v21 = objc_msgSend(v3, "leadingAnchor");
  v22 = objc_msgSend(v0, "leadingAnchor");
  v23 = objc_msgSend(v21, "constraintEqualToAnchor:", v22);

  *(_QWORD *)(v8 + 64) = v23;
  v24 = objc_msgSend(v3, "trailingAnchor");
  v25 = objc_msgSend(v0, "trailingAnchor");
  v26 = objc_msgSend(v24, "constraintEqualToAnchor:", v25);

  *(_QWORD *)(v8 + 72) = v26;
  v27 = objc_msgSend(v1, "topAnchor");
  v28 = objc_msgSend(v2, "bottomAnchor");
  v29 = objc_msgSend(v27, "constraintGreaterThanOrEqualToAnchor:constant:", v28, *(double *)&qword_1005F5970);

  *(_QWORD *)(v8 + 80) = v29;
  *(_QWORD *)(v8 + 88) = v46;
  v30 = v46;
  v31 = objc_msgSend(v1, "bottomAnchor");
  v32 = objc_msgSend(v0, "bottomAnchor");
  v33 = objc_msgSend(v31, "constraintEqualToAnchor:", v32);

  *(_QWORD *)(v8 + 96) = v33;
  v34 = objc_msgSend(v1, "leadingAnchor");
  v35 = objc_msgSend(v0, "leadingAnchor");
  v36 = objc_msgSend(v34, "constraintEqualToAnchor:", v35);

  *(_QWORD *)(v8 + 104) = v36;
  v37 = objc_msgSend(v1, "trailingAnchor");
  v38 = objc_msgSend(v0, "trailingAnchor");
  v39 = objc_msgSend(v37, "constraintEqualToAnchor:constant:", v38, *(double *)&qword_1005F5978);

  *(_QWORD *)(v8 + 112) = v39;
  v40 = objc_msgSend(v1, "heightAnchor");
  v41 = objc_msgSend((id)objc_opt_self(UIScreen), "mainScreen");
  objc_msgSend(v41, "scale");
  v43 = v42;

  v44 = objc_msgSend(v40, "constraintEqualToConstant:", 1.0 / v43);
  *(_QWORD *)(v8 + 120) = v44;
  specialized Array._endMutation()(v45);
  sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v47, "activateConstraints:", isa, swift_bridgeObjectRelease(v8).n128_f64[0]);

}

id sub_1003D70F0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMSimpleButton();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMSimpleButton()
{
  return objc_opt_self(_TtC6FindMy14FMSimpleButton);
}

uint64_t sub_1003D71AC()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003D71D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1003D6960(a1, v2, a2);
}

void sub_1003D71D8()
{
  AttributeScopes.UIKitAttributes.foregroundColor.getter();
  __break(1u);
}

unint64_t sub_1003D71F4()
{
  unint64_t result;

  result = qword_1005E3810;
  if (!qword_1005E3810)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for AttributeScopes.UIKitAttributes.ForegroundColorAttribute, &type metadata for AttributeScopes.UIKitAttributes.ForegroundColorAttribute);
    atomic_store(result, (unint64_t *)&qword_1005E3810);
  }
  return result;
}

void sub_1003D7238(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a2;
  v3 = sub_1003D71F4();
  AttributeDynamicLookup.subscript.getter(v2, v3);
  __break(1u);
}

uint64_t sub_1003D725C()
{
  return 8;
}

uint64_t sub_1003D7268(_QWORD *a1)
{
  return swift_release(*a1);
}

uint64_t sub_1003D7270(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = *a1;
  *a2 = v2;
  return swift_retain(v2);
}

uint64_t sub_1003D7280()
{
  uint64_t v0;

  v0 = sub_100053F2C(&qword_1005E3818);
  return dispatch thunk of Hashable.hashValue.getter(v0, &protocol witness table for AnyKeyPath);
}

_QWORD *sub_1003D72C4(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void sub_1003D72D0()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v1 = v0;
  v2 = type metadata accessor for UIButton.Configuration(0);
  __chkstk_darwin(v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OBJC_IVAR____TtC6FindMy14FMSimpleButton_button;
  v6 = sub_100006C5C(0, (unint64_t *)&qword_1005D6560, UIButton_ptr);
  static UIButton.Configuration.plain()(v6);
  *(_QWORD *)&v1[v5] = UIButton.init(configuration:primaryAction:)(v4, 0);
  v7 = OBJC_IVAR____TtC6FindMy14FMSimpleButton_subtitleLabel;
  *(_QWORD *)&v1[v7] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v8 = OBJC_IVAR____TtC6FindMy14FMSimpleButton_separator;
  *(_QWORD *)&v1[v8] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  v1[OBJC_IVAR____TtC6FindMy14FMSimpleButton_isActionEnabled] = 1;
  v9 = &v1[OBJC_IVAR____TtC6FindMy14FMSimpleButton_subtitle];
  *v9 = 0;
  v9[1] = 0;
  v10 = OBJC_IVAR____TtC6FindMy14FMSimpleButton_subtitleColor;
  *(_QWORD *)&v1[v10] = objc_msgSend((id)objc_opt_self(UIColor), "tertiaryLabelColor");
  v1[OBJC_IVAR____TtC6FindMy14FMSimpleButton_separated] = 1;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMSimpleButton.swift", 27, 2, 76, 0);
  __break(1u);
}

uint64_t sub_1003D744C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  char v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v3 = sub_100171818(a1);
  if ((v4 & 1) == 0)
    return 0;
  v5 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 32 * v3);
  v6 = *v5;
  v7 = v5[1];
  v8 = (void *)v5[2];
  swift_retain(v5[3]);
  swift_bridgeObjectRetain(v7);
  v9 = v8;
  return v6;
}

void sub_1003D74C8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (*(_QWORD *)(a3 + 16) && (v6 = sub_10004C348(a1, a2), (v7 & 1) != 0))
  {
    v8 = *(_QWORD *)(a3 + 56) + 48 * v6;
    v10 = *(_QWORD *)v8;
    v9 = *(_QWORD *)(v8 + 8);
    v12 = *(_QWORD *)(v8 + 16);
    v11 = *(_QWORD *)(v8 + 24);
    v13 = *(unsigned __int8 *)(v8 + 32);
    v14 = *(_QWORD *)(v8 + 40);
    swift_bridgeObjectRetain(v9);
    swift_bridgeObjectRetain(v11);
    swift_bridgeObjectRetain(v14);
  }
  else
  {
    v10 = 0;
    v9 = 0;
    v12 = 0;
    v11 = 0;
    v13 = 0;
    v14 = 0;
  }
  *a4 = v10;
  a4[1] = v9;
  a4[2] = v12;
  a4[3] = v11;
  a4[4] = v13;
  a4[5] = v14;
}

uint64_t sub_1003D756C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  char v5;
  uint64_t *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;

  if (!*(_QWORD *)(a3 + 16))
    return 0;
  v4 = sub_10004C348(a1, a2);
  if ((v5 & 1) == 0)
    return 0;
  v6 = (uint64_t *)(*(_QWORD *)(a3 + 56) + 32 * v4);
  v7 = *v6;
  v8 = (void *)v6[2];
  v9 = (void *)v6[3];
  swift_bridgeObjectRetain(v6[1]);
  v10 = v8;
  v11 = v9;
  return v7;
}

void sub_1003D75E4()
{
  uint64_t v0;
  void *v1;
  id v2;
  Swift::String v3;
  Swift::String v4;
  void *object;
  NSString v6;
  Swift::String v7;

  sub_100416700();
  v1 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_sectionLabel);
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(0xE000000000000000);
  v2 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v7._countAndFlagsBits = 0xD000000000000032;
  v7._object = (void *)0x80000001004C5730;
  v3._object = (void *)0x80000001004C5700;
  v3._countAndFlagsBits = 0xD000000000000020;
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v7)._object;

  v6 = String._bridgeToObjectiveC()();
  objc_msgSend(v1, "setText:", v6, swift_bridgeObjectRelease(object).n128_f64[0]);

}

void sub_1003D76F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _OWORD *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t (*v51)(char *, char *, uint64_t);
  char *v52;
  uint64_t (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  void (*v58)(char *, uint64_t);
  char *v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  void (*v62)(uint64_t, _QWORD, uint64_t);
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  char v67;
  __n128 v68;
  void (*v69)(uint64_t, uint64_t, __n128);
  char *v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  char *v84;
  uint64_t v85;
  char v86;
  __n128 v87;
  char v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(uint64_t, uint64_t, uint64_t);
  int v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  void *v102;
  id v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  id v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void *v116;
  char *v117;
  Class isa;
  id v119;
  uint64_t v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  void (*v124)(char *, uint64_t);
  uint64_t v125;
  char *v126;
  uint64_t v127;
  char v128;
  void (*v129)(char *, uint64_t);
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  __n128 v141;
  int v142;
  __n128 v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  char *v148;
  uint64_t v149;
  unint64_t v150;
  char v151;
  char *v152;
  _QWORD *v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t v156;
  __n128 v157;
  unint64_t v158;
  unint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char isUniquelyReferenced_nonNull_native;
  BOOL v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  char *v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  id v180;
  uint64_t v181;
  double v182;
  id v183;
  char *v184;
  char *v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  void *v189;
  uint64_t v190;
  id v191;
  double v192;
  NSString v193;
  uint64_t v194;
  id v195;
  uint64_t v196;
  uint64_t v197;
  id v198;
  id v199;
  uint64_t v200;
  id v201;
  id v202;
  BOOL v203;
  uint64_t v204;
  double v205;
  id v206;
  Swift::String v207;
  Swift::String v208;
  Swift::String v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t *v215;
  uint64_t v216;
  void *v217;
  uint64_t v218;
  id v219;
  double v220;
  NSString v221;
  uint64_t (*v222)(char *, char *, uint64_t);
  _QWORD *v223;
  char *v224;
  unint64_t v225;
  unint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  uint64_t v232;
  unsigned int v233;
  uint64_t v234;
  uint64_t v235;
  NSString *v236;
  NSString *v237;
  NSString *v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  char *v244;
  __int128 v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  unsigned int v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  char *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  char *v259;
  uint64_t v260;
  unsigned int v261;
  char *v262;
  uint64_t v263;
  char *v264;
  char *v265;
  char *v266;
  char *v267;
  uint64_t v268;
  id v269;
  uint64_t v270;
  char *v271;
  __int128 v272;
  char *v273;
  char *v274;
  _QWORD *v275;
  char *v276;
  uint64_t v277;
  const char *v278;
  void (*v279)(char *, uint64_t);
  uint64_t (*v280)(char *, char *, uint64_t);
  char *v281;
  char *v282;
  unint64_t v283;
  char *v284;
  unint64_t v285;
  __int128 v286;
  char *v287;
  unint64_t v288;
  BOOL v289;
  uint64_t v290;
  __int128 v291;
  char *v292;
  unint64_t v293;
  BOOL v294;
  unint64_t v295;
  Swift::String v296;

  v4 = v3;
  v257 = a3;
  v256 = a1;
  v6 = sub_100053F2C((uint64_t *)&unk_1005E4430);
  __chkstk_darwin(v6);
  v8 = (char *)&v229 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100053F2C(&qword_1005D3380);
  __chkstk_darwin(v9);
  v255 = (char *)&v229 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for FMFFriend(0);
  v12 = *(_QWORD *)(v11 - 8);
  __chkstk_darwin(v11);
  v244 = (char *)&v229 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v240 = type metadata accessor for PersonNameComponents(0);
  v239 = *(_QWORD *)(v240 - 8);
  __chkstk_darwin(v240);
  v259 = (char *)&v229 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FMFLocationAlertAcceptanceStatus(0);
  v243 = *(_QWORD *)(v15 - 8);
  __chkstk_darwin(v15);
  v17 = (char *)&v229 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v235 = sub_100053F2C((uint64_t *)&unk_1005D2A30);
  __chkstk_darwin(v235);
  v19 = (char *)&v229 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_100053F2C((uint64_t *)&unk_1005DF470);
  v21 = __chkstk_darwin(v20);
  v232 = (uint64_t)&v229 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __chkstk_darwin(v21);
  v267 = (char *)&v229 - v24;
  __chkstk_darwin(v23);
  v242 = (uint64_t)&v229 - v25;
  v260 = type metadata accessor for FMFLocationAlertTarget(0);
  v278 = *(const char **)(v260 - 8);
  v26 = __chkstk_darwin(v260);
  v266 = (char *)&v229 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __chkstk_darwin(v26);
  v265 = (char *)&v229 - v29;
  v30 = __chkstk_darwin(v28);
  v277 = (uint64_t)&v229 - v31;
  __chkstk_darwin(v30);
  v276 = (char *)&v229 - v32;
  v33 = type metadata accessor for FMFLocationAlert(0);
  *(_QWORD *)&v272 = *(_QWORD *)(v33 - 8);
  v34 = __chkstk_darwin(v33);
  v248 = (char *)&v229 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __chkstk_darwin(v34);
  v254 = (char *)&v229 - v37;
  v38 = __chkstk_darwin(v36);
  v250 = (char *)&v229 - v39;
  v40 = __chkstk_darwin(v38);
  v273 = (char *)&v229 - v41;
  v42 = __chkstk_darwin(v40);
  v264 = (char *)&v229 - v43;
  __chkstk_darwin(v42);
  v281 = (char *)&v229 - v44;
  sub_1003D967C();
  if (!a2)
    goto LABEL_103;
  v45 = *(_QWORD **)(a2 + 16);
  v46 = &unk_100481000;
  v263 = v4;
  v262 = v8;
  if (v45)
  {
    v275 = v45;
    v241 = v19;
    v231 = v17;
    v234 = v15;
    v252 = v12;
    v47 = *(unsigned __int8 *)(v272 + 80);
    v48 = (v47 + 32) & ~v47;
    v49 = (char *)(a2 + v48);
    v50 = *(_QWORD *)(v272 + 72);
    v51 = *(uint64_t (**)(char *, char *, uint64_t))(v272 + 16);
    v261 = enum case for FMFLocationAlertTarget.alertFriends(_:);
    v249 = enum case for FMFLocationAlertTarget.alertMe(_:);
    v233 = enum case for FMFLocationAlertAcceptanceStatus.hidden(_:);
    v238 = CNContactNicknameKey;
    v237 = CNContactGivenNameKey;
    v251 = v48;
    v268 = v50;
    v247 = v50 + v48;
    v246 = v47 | 7;
    v236 = CNContactFamilyNameKey;
    v230 = a2;
    swift_bridgeObjectRetain(a2);
    v52 = v49;
    v53 = v51;
    v270 = 0;
    v271 = (char *)&_swiftEmptyDictionarySingleton;
    v245 = xmmword_100481740;
    v253 = v11;
    v54 = v260;
    v55 = v273;
    v56 = v281;
    v258 = v33;
    v280 = v53;
    while (1)
    {
      v274 = v52;
      v61 = ((uint64_t (*)(char *))v53)(v56);
      FMFLocationAlert.locationAlertTarget.getter(v61);
      v62 = (void (*)(uint64_t, _QWORD, uint64_t))*((_QWORD *)v278 + 13);
      v62(v277, v261, v54);
      v63 = sub_100008000((unint64_t *)&unk_1005E5A00, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocationAlertTarget, (uint64_t)&protocol conformance descriptor for FMFLocationAlertTarget);
      dispatch thunk of RawRepresentable.rawValue.getter(&v282, v54, v63);
      dispatch thunk of RawRepresentable.rawValue.getter(&v284, v54, v63);
      v64 = v283;
      v65 = v285;
      if (v282 == v284 && v283 == v285)
      {
        v67 = 1;
        v65 = v283;
      }
      else
      {
        v67 = _stringCompareWithSmolCheck(_:_:expecting:)(v282, v283, v284, v285, 0);
      }
      swift_bridgeObjectRelease(v64);
      v68 = swift_bridgeObjectRelease(v65);
      v69 = (void (*)(uint64_t, uint64_t, __n128))*((_QWORD *)v278 + 1);
      v69(v277, v54, v68);
      ((void (*)(char *, uint64_t))v69)(v276, v54);
      v70 = v264;
      v71 = v280(v264, v281, v33);
      if ((v67 & 1) != 0)
        v72 = FMFLocationAlert.setByMe.getter(v71);
      else
        v72 = 0;
      v73 = (uint64_t)v267;
      v74 = *(void (**)(char *, uint64_t))(v272 + 8);
      v74(v70, v33);
      v56 = v281;
      v75 = v280(v55, v281, v33);
      v279 = v74;
      if ((v72 & 1) != 0)
      {
        v76 = ((uint64_t (*)(char *, uint64_t))v74)(v55, v33);
        goto LABEL_19;
      }
      FMFLocationAlert.locationAlertTarget.getter(v75);
      v62((uint64_t)v266, v249, v54);
      dispatch thunk of RawRepresentable.rawValue.getter(&v282, v54, v63);
      dispatch thunk of RawRepresentable.rawValue.getter(&v284, v54, v63);
      v82 = v283;
      v83 = v285;
      if (v282 == v284 && v283 == v285)
      {
        swift_bridgeObjectRelease_n(v283, 2);
        ((void (*)(char *, uint64_t))v69)(v266, v54);
        ((void (*)(char *, uint64_t))v69)(v265, v54);
        v84 = v250;
        v55 = v273;
        v53 = v280;
        v85 = v280(v250, v273, v33);
      }
      else
      {
        v86 = _stringCompareWithSmolCheck(_:_:expecting:)(v282, v283, v284, v285, 0);
        swift_bridgeObjectRelease(v82);
        v87 = swift_bridgeObjectRelease(v83);
        v69((uint64_t)v266, v54, v87);
        ((void (*)(char *, uint64_t))v69)(v265, v54);
        v84 = v250;
        v55 = v273;
        v53 = v280;
        v85 = v280(v250, v273, v33);
        if ((v86 & 1) == 0)
        {
          v57 = v84;
          v58 = v279;
          v279(v57, v33);
          v59 = v254;
          v53(v254, v55, v33);
LABEL_5:
          v58(v59, v33);
          v58(v55, v33);
          v56 = v281;
          v60 = v58;
          goto LABEL_6;
        }
      }
      v88 = FMFLocationAlert.setOnMe.getter(v85);
      v89 = v84;
      v58 = v279;
      v279(v89, v33);
      v59 = v254;
      v90 = v53(v254, v55, v33);
      if ((v88 & 1) == 0)
        goto LABEL_5;
      v91 = v242;
      FMFLocationAlert.acceptanceStatus.getter(v90);
      v92 = v243;
      v93 = v234;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v243 + 104))(v73, v233, v234);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v92 + 56))(v73, 0, 1, v93);
      v94 = (uint64_t)v241;
      v95 = (uint64_t)&v241[*(int *)(v235 + 48)];
      sub_1003DA934(v91, (uint64_t)v241);
      sub_1003DA934(v73, v95);
      v96 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v92 + 48);
      if (v96(v94, 1, v93) == 1)
      {
        sub_1000051EC(v73, (uint64_t *)&unk_1005DF470);
        sub_1000051EC(v91, (uint64_t *)&unk_1005DF470);
        v60 = v279;
        v279(v59, v33);
        v60(v55, v33);
        v97 = v96(v95, 1, v93);
        v56 = v281;
        v53 = v280;
        if (v97 != 1)
          goto LABEL_48;
        sub_1000051EC((uint64_t)v241, (uint64_t *)&unk_1005DF470);
        v54 = v260;
      }
      else
      {
        v123 = v232;
        sub_1003DA934(v94, v232);
        if (v96(v95, 1, v93) == 1)
        {
          sub_1000051EC(v73, (uint64_t *)&unk_1005DF470);
          sub_1000051EC(v242, (uint64_t *)&unk_1005DF470);
          v124 = v279;
          v279(v254, v33);
          v124(v55, v33);
          (*(void (**)(uint64_t, uint64_t))(v243 + 8))(v123, v93);
          v56 = v281;
LABEL_48:
          v76 = sub_1000051EC((uint64_t)v241, (uint64_t *)&unk_1005D2A30);
LABEL_19:
          v77 = (_QWORD *)FMFLocationAlert.emails.getter(v76);
          if (v77)
          {
            v78 = v77;
            v79 = v271;
            if (v77[2])
            {
              v80 = v77[4];
              v81 = v77[5];
              swift_bridgeObjectRetain(v81);
            }
            else
            {
              v80 = 0;
              v81 = 0xE000000000000000;
            }
            swift_bridgeObjectRelease(v78);
          }
          else
          {
            v80 = 0;
            v81 = 0xE000000000000000;
            v79 = v271;
          }
          v98 = dispatch thunk of FMFContactsDataController.searchInStore(handle:keysToFetch:)(v80, v81, 0);
          if (!v98)
            goto LABEL_55;
          v99 = v98;
          v100 = v98 & 0xFFFFFFFFFFFFFF8;
          if ((unint64_t)v98 >> 62)
          {
            if (v98 >= 0)
              v98 &= 0xFFFFFFFFFFFFFF8uLL;
            if (!_CocoaArrayWrapper.endIndex.getter(v98))
              goto LABEL_54;
LABEL_36:
            if ((v99 & 0xC000000000000001) != 0)
            {
              v101 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(0, v99);
            }
            else
            {
              if (!*(_QWORD *)(v100 + 16))
                goto LABEL_105;
              v101 = *(id *)(v99 + 32);
            }
            v102 = v101;
            swift_bridgeObjectRelease(v99);
            v103 = v102;
            PersonNameComponents.init()();
            if (objc_msgSend(v103, "isKeyAvailable:", v238))
            {
              v104 = objc_msgSend(v103, "nickname");
              v105 = static String._unconditionallyBridgeFromObjectiveC(_:)(v104);
              v107 = v106;

              PersonNameComponents.nickname.setter(v105, v107);
            }
            if (objc_msgSend(v103, "isKeyAvailable:", v237))
            {
              v108 = objc_msgSend(v103, "givenName");
              v109 = static String._unconditionallyBridgeFromObjectiveC(_:)(v108);
              v111 = v110;

              PersonNameComponents.givenName.setter(v109, v111);
            }
            if (objc_msgSend(v103, "isKeyAvailable:", v236))
            {
              v112 = objc_msgSend(v103, "familyName");
              v113 = static String._unconditionallyBridgeFromObjectiveC(_:)(v112);
              v115 = v114;

              PersonNameComponents.familyName.setter(v113, v115);
            }
            v116 = (void *)objc_opt_self(NSPersonNameComponentsFormatter);
            v117 = v259;
            isa = PersonNameComponents._bridgeToObjectiveC()().super.isa;
            v119 = objc_msgSend(v116, "localizedStringFromPersonNameComponents:style:options:", isa, 1, 0);

            v120 = static String._unconditionallyBridgeFromObjectiveC(_:)(v119);
            v122 = v121;

            (*(void (**)(char *, uint64_t))(v239 + 8))(v117, v240);
            v56 = v281;
          }
          else
          {
            if (*(_QWORD *)((v98 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_36;
LABEL_54:
            swift_bridgeObjectRelease(v99);
LABEL_55:
            v120 = 0;
            v103 = 0;
            v122 = 0xE000000000000000;
          }
          v130 = HIBYTE(v122) & 0xF;
          if ((v122 & 0x2000000000000000) == 0)
            v130 = v120 & 0xFFFFFFFFFFFFLL;
          v269 = v103;
          if (!v130)
          {
            swift_bridgeObjectRelease(v122);
            swift_bridgeObjectRetain(v81);
            v120 = v80;
            v122 = v81;
          }
          __chkstk_darwin(v98);
          v296._object = v56;
          v131 = v256;
          swift_bridgeObjectRetain(v256);
          v132 = v131;
          v133 = v270;
          v134 = sub_1003DBDD8(sub_1003DA97C, (uint64_t)(&v229 - 4), v132);
          v135 = v134;
          v136 = *(_QWORD *)(v134 + 16);
          v270 = v133;
          if (v136)
          {
            v137 = v252;
            v138 = (uint64_t)v255;
            v139 = v253;
            (*(void (**)(char *, unint64_t, uint64_t))(v252 + 16))(v255, v134 + ((*(unsigned __int8 *)(v137 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v137 + 80)), v253);
            v140 = 0;
          }
          else
          {
            v140 = 1;
            v138 = (uint64_t)v255;
            v139 = v253;
            v137 = v252;
          }
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v137 + 56))(v138, v140, 1, v139);
          v141 = swift_bridgeObjectRelease(v135);
          v142 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v137 + 48))(v138, 1, v139, v141);
          if (v142 == 1)
          {
            v271 = (char *)v120;
            sub_1000051EC(v138, &qword_1005D3380);
          }
          else
          {
            swift_bridgeObjectRelease(v81);
            v143 = swift_bridgeObjectRelease(v122);
            v144 = v244;
            v145 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v137 + 32))(v244, v138, v139, v143);
            v80 = FMFFriend.identifier.getter(v145);
            v81 = v146;
            v271 = (char *)FMFFriend.name.getter(v80);
            v122 = v147;
            (*(void (**)(char *, uint64_t))(v137 + 8))(v144, v139);
          }
          v54 = v260;
          v148 = v79;
          v149 = *((_QWORD *)v79 + 2);
          v55 = v273;
          if (v149)
          {
            swift_bridgeObjectRetain(v81);
            v150 = sub_10004C348(v80, v81);
            if ((v151 & 1) != 0)
            {
              v152 = v148;
              v153 = (_QWORD *)(*((_QWORD *)v148 + 7) + 48 * v150);
              v154 = v153[1];
              v155 = v153[3];
              v156 = v153[5];
              swift_bridgeObjectRetain(v154);
              swift_bridgeObjectRetain(v155);
              swift_bridgeObjectRetain(v156);
              swift_bridgeObjectRelease(v81);
              swift_bridgeObjectRelease(v155);
              v157 = swift_bridgeObjectRelease(v154);
              ((void (*)(char *, char *, uint64_t, __n128))v280)(v248, v281, v258, v157);
              if ((swift_isUniquelyReferenced_nonNull_native(v156) & 1) == 0)
                v156 = sub_100070324(0, *(_QWORD *)(v156 + 16) + 1, 1, v156);
              v159 = *(_QWORD *)(v156 + 16);
              v158 = *(_QWORD *)(v156 + 24);
              if (v159 >= v158 >> 1)
                v156 = sub_100070324(v158 > 1, v159 + 1, 1, v156);
              *(_QWORD *)(v156 + 16) = v159 + 1;
              v160 = v156 + v251 + v159 * v268;
              v161 = v258;
              (*(void (**)(unint64_t, char *, uint64_t))(v272 + 32))(v160, v248, v258);
              *(_QWORD *)&v291 = v80;
              *((_QWORD *)&v291 + 1) = v81;
              v292 = v271;
              v293 = v122;
              v162 = v80;
              v33 = v161;
              v294 = v142 != 1;
              v295 = v156;
              swift_bridgeObjectRetain(v81);
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v152);
              v282 = v152;
              sub_100179600(&v291, v162, v81, isUniquelyReferenced_nonNull_native);
              v271 = v282;

              swift_bridgeObjectRelease(v81);
              swift_bridgeObjectRelease(0x8000000000000000);
              v54 = v260;
              v56 = v281;
              v53 = v280;
              goto LABEL_75;
            }
            swift_bridgeObjectRelease(v81);
          }
          v164 = v142 != 1;
          v165 = sub_100053F2C(&qword_1005D2B50);
          v166 = swift_allocObject(v165, v247, v246);
          *(_OWORD *)(v166 + 16) = v245;
          v56 = v281;
          v167 = v80;
          v33 = v258;
          v53 = v280;
          v280((char *)(v166 + v251), v281, v258);
          *(_QWORD *)&v286 = v167;
          *((_QWORD *)&v286 + 1) = v81;
          v287 = v271;
          v288 = v122;
          v289 = v164;
          v290 = v166;
          swift_bridgeObjectRetain(v81);
          v168 = swift_isUniquelyReferenced_nonNull_native(v148);
          v282 = v148;
          v169 = v167;
          v55 = v273;
          sub_100179600(&v286, v169, v81, v168);
          v271 = v282;

          swift_bridgeObjectRelease(v81);
          swift_bridgeObjectRelease(0x8000000000000000);
LABEL_75:
          v279(v56, v33);
          goto LABEL_7;
        }
        v125 = v243;
        v126 = v231;
        (*(void (**)(char *, uint64_t, uint64_t))(v243 + 32))(v231, v95, v93);
        v127 = sub_100008000((unint64_t *)&unk_1005D2A70, (uint64_t (*)(uint64_t))&type metadata accessor for FMFLocationAlertAcceptanceStatus, (uint64_t)&protocol conformance descriptor for FMFLocationAlertAcceptanceStatus);
        v128 = dispatch thunk of static Equatable.== infix(_:_:)(v123, v126, v93, v127);
        v129 = *(void (**)(char *, uint64_t))(v125 + 8);
        v129(v126, v93);
        sub_1000051EC(v73, (uint64_t *)&unk_1005DF470);
        sub_1000051EC(v242, (uint64_t *)&unk_1005DF470);
        v60 = v279;
        v279(v254, v33);
        v60(v55, v33);
        v129((char *)v123, v93);
        v76 = sub_1000051EC(v94, (uint64_t *)&unk_1005DF470);
        v54 = v260;
        v56 = v281;
        v53 = v280;
        if ((v128 & 1) == 0)
          goto LABEL_19;
      }
LABEL_6:
      v60(v56, v33);
LABEL_7:
      v52 = &v274[v268];
      v275 = (_QWORD *)((char *)v275 - 1);
      if (!v275)
      {
        swift_bridgeObjectRelease(v230);
        v4 = v263;
        v8 = v262;
        v46 = (_OWORD *)&unk_100481000;
        v170 = v270;
        v171 = v271;
        goto LABEL_79;
      }
    }
  }
  v170 = 0;
  v171 = &_swiftEmptyDictionarySingleton;
LABEL_79:
  swift_bridgeObjectRetain_n(v171, 2);
  v172 = (char *)sub_1003EF4FC((uint64_t)v171);
  swift_bridgeObjectRelease(v171);
  v282 = v172;
  sub_1003D9DF4(&v282);
  if (v170)
    goto LABEL_106;
  swift_bridgeObjectRelease(v171);
  v271 = v282;
  v173 = (char *)*((_QWORD *)v282 + 2);
  if (!v173)
  {
LABEL_102:
    swift_release(v271);
    v228 = *(_QWORD *)(v4 + OBJC_IVAR____TtC6FindMy22FMMyLocationAlertsView_rowViewModel);
    *(_QWORD *)(v4 + OBJC_IVAR____TtC6FindMy22FMMyLocationAlertsView_rowViewModel) = v171;
    swift_bridgeObjectRelease(v228);
LABEL_103:
    sub_1003D9490();
    return;
  }
  v278 = "handleFriendTapWithGestureRecognizer:";
  v276 = (char *)objc_opt_self(NSBundle);
  v174 = v271 + 88;
  v277 = 1;
  v274 = (char *)0x80000001004C57A0;
  v273 = (char *)0x80000001004C5770;
  v272 = v46[116];
  v275 = (_QWORD *)(v4 + OBJC_IVAR____TtC6FindMy22FMMyLocationAlertsView_friendsRow);
  while (1)
  {
    v281 = v173;
    v175 = *((_QWORD *)v174 - 5);
    v176 = *((_QWORD *)v174 - 4);
    v178 = *((_QWORD *)v174 - 3);
    v177 = *((_QWORD *)v174 - 2);
    v179 = *(_QWORD *)v174;
    v279 = *(void (**)(char *, uint64_t))(*(_QWORD *)v174 + 16);
    swift_bridgeObjectRetain(v176);
    swift_bridgeObjectRetain(v177);
    swift_bridgeObjectRetain(v179);
    v180 = objc_allocWithZone((Class)UITapGestureRecognizer);
    v280 = (uint64_t (*)(char *, char *, uint64_t))objc_msgSend(v180, "initWithTarget:action:", v4, v278);
    v181 = type metadata accessor for FMPlatterIcon(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v181 - 8) + 56))(v8, 1, 1, v181);
    if (qword_1005D1E80 != -1)
      swift_once(&qword_1005D1E80, sub_100008974);
    v182 = *(double *)&qword_1005F5978;
    v183 = objc_allocWithZone((Class)type metadata accessor for FMMultiSettingsRowView());
    v184 = sub_100430344(0, 0, 0, (uint64_t)v8, 1, 0, 1, v182);
    v185 = &v184[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_identifier];
    v186 = *(_QWORD *)&v184[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_identifier + 8];
    *(_QWORD *)v185 = v175;
    *((_QWORD *)v185 + 1) = v176;
    swift_bridgeObjectRetain(v176);
    swift_bridgeObjectRelease(v186);
    v187 = &v184[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_title];
    v188 = *(_QWORD *)&v184[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_title + 8];
    *(_QWORD *)v187 = v178;
    *((_QWORD *)v187 + 1) = v177;
    swift_bridgeObjectRetain(v177);
    swift_bridgeObjectRelease(v188);
    v189 = *(void **)&v184[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_titleLabel];
    v190 = *((_QWORD *)v187 + 1);
    v191 = v189;
    if (v190)
    {
      swift_bridgeObjectRetain(v190);
      v193 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v192 = swift_bridgeObjectRelease(v190).n128_u64[0];
    }
    else
    {
      v193 = 0;
    }
    objc_msgSend(v189, "setText:", v193, v192);
    swift_bridgeObjectRelease(v179);
    swift_bridgeObjectRelease(v177);
    swift_bridgeObjectRelease(v176);

    v194 = v171[2];
    if (v194 != 1)
      break;
    v195 = objc_msgSend(*(id *)&v184[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_backgroundView], "layer");
    objc_msgSend(v195, "setCornerRadius:", 10.0);

LABEL_96:
    v282 = 0;
    v283 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    *(_QWORD *)&v205 = swift_bridgeObjectRelease(v283).n128_u64[0];
    v206 = objc_msgSend(v276, "mainBundle", v205);
    v296._countAndFlagsBits = 0xD000000000000034;
    v296._object = v274;
    v207._countAndFlagsBits = 0xD000000000000022;
    v207._object = v273;
    v208._countAndFlagsBits = 0;
    v208._object = (void *)0xE000000000000000;
    v209 = NSLocalizedString(_:tableName:bundle:value:comment:)(v207, (Swift::String_optional)0, (NSBundle)v206, v208, v296);

    v210 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
    v211 = swift_allocObject(v210, 72, 7);
    *(_OWORD *)(v211 + 16) = v272;
    *(_QWORD *)(v211 + 56) = &type metadata for Int;
    *(_QWORD *)(v211 + 64) = &protocol witness table for Int;
    *(_QWORD *)(v211 + 32) = v279;
    v212 = String.init(format:_:)(v209._countAndFlagsBits, v209._object, v211);
    v214 = v213;
    swift_bridgeObjectRelease(v209._object);
    v215 = (uint64_t *)&v184[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitle];
    v216 = *(_QWORD *)&v184[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_subtitle + 8];
    *v215 = v212;
    v215[1] = v214;
    swift_bridgeObjectRelease(v216);
    v217 = *(void **)&v184[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_secondaryLabel];
    v218 = v215[1];
    v219 = v217;
    if (v218)
    {
      swift_bridgeObjectRetain(v218);
      v221 = String._bridgeToObjectiveC()();
      *(_QWORD *)&v220 = swift_bridgeObjectRelease(v218).n128_u64[0];
    }
    else
    {
      v221 = 0;
    }
    objc_msgSend(v217, "setText:", v221, v220);

    v222 = v280;
    objc_msgSend(v184, "addGestureRecognizer:", v280);
    v223 = v275;
    swift_beginAccess(v275, &v282, 33, 0);
    v224 = v184;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v224);
    v226 = *(_QWORD *)((*v223 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v225 = *(_QWORD *)((*v223 & 0xFFFFFFFFFFFFFF8) + 0x18);
    if (v226 >= v225 >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v225 > 1, v226 + 1, 1);
    v227 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v226, v224);
    specialized Array._endMutation()(v227);
    swift_endAccess(&v282);

    v174 += 64;
    v173 = v281 - 1;
    v4 = v263;
    v8 = v262;
    if (v281 == (char *)1)
      goto LABEL_102;
  }
  v196 = v277;
  if (v277 != 1)
  {
    if (v277 != v194)
      goto LABEL_94;
    goto LABEL_93;
  }
  v197 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_backgroundView;
  v198 = objc_msgSend(*(id *)&v184[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_backgroundView], "layer");
  objc_msgSend(v198, "setCornerRadius:", 10.0);

  v199 = objc_msgSend(*(id *)&v184[v197], "layer");
  objc_msgSend(v199, "setMaskedCorners:", 3);

  if (v171[2] == 1)
  {
LABEL_93:
    v200 = OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_backgroundView;
    v201 = objc_msgSend(*(id *)&v184[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_backgroundView], "layer");
    objc_msgSend(v201, "setCornerRadius:", 10.0);

    v202 = objc_msgSend(*(id *)&v184[v200], "layer");
    objc_msgSend(v202, "setMaskedCorners:", 12);

  }
LABEL_94:
  v203 = __OFADD__(v196, 1);
  v204 = v196 + 1;
  if (!v203)
  {
    v277 = v204;
    goto LABEL_96;
  }
  __break(1u);
LABEL_105:
  __break(1u);
LABEL_106:
  swift_release(v282);
  __break(1u);
}

uint64_t sub_1003D905C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int64_t v60;

  v3 = v2;
  if ((FMFLocationAlert.setByMe.getter() & 1) != 0)
  {
    result = FMFFriend.contactHandles.getter();
    v6 = result;
    v7 = 0;
    v59 = result + 56;
    v8 = 1 << *(_BYTE *)(result + 32);
    v9 = -1;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    v10 = v9 & *(_QWORD *)(result + 56);
    v60 = (unint64_t)(v8 + 63) >> 6;
    while (1)
    {
      while (1)
      {
LABEL_6:
        if (v10)
        {
          v11 = __clz(__rbit64(v10));
          v10 &= v10 - 1;
          v12 = v11 | (v7 << 6);
        }
        else
        {
          if (__OFADD__(v7++, 1))
            goto LABEL_73;
          if (v7 >= v60)
          {
LABEL_58:
            swift_release(v6);
            return 0;
          }
          v14 = *(_QWORD *)(v59 + 8 * v7);
          if (!v14)
          {
            v15 = v7 + 1;
            if (v7 + 1 >= v60)
              goto LABEL_58;
            v14 = *(_QWORD *)(v59 + 8 * v15);
            if (!v14)
            {
              v15 = v7 + 2;
              if (v7 + 2 >= v60)
                goto LABEL_58;
              v14 = *(_QWORD *)(v59 + 8 * v15);
              if (!v14)
              {
                v15 = v7 + 3;
                if (v7 + 3 >= v60)
                  goto LABEL_58;
                v14 = *(_QWORD *)(v59 + 8 * v15);
                if (!v14)
                {
                  while (1)
                  {
                    v7 = v15 + 1;
                    if (__OFADD__(v15, 1))
                      goto LABEL_74;
                    if (v7 >= v60)
                      goto LABEL_58;
                    v14 = *(_QWORD *)(v59 + 8 * v7);
                    ++v15;
                    if (v14)
                      goto LABEL_18;
                  }
                }
              }
            }
            v7 = v15;
          }
LABEL_18:
          v10 = (v14 - 1) & v14;
          v12 = __clz(__rbit64(v14)) + (v7 << 6);
        }
        v16 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v12);
        v18 = *v16;
        v17 = v16[1];
        v19 = swift_bridgeObjectRetain(v17);
        v20 = FMFLocationAlert.emails.getter(v19);
        if (v20)
          break;
        result = swift_bridgeObjectRelease(v17);
      }
      v21 = (_QWORD *)v20;
      v22 = *(_QWORD *)(v20 + 16);
      if (v22)
      {
        v23 = *(_QWORD *)(v20 + 32);
        v24 = v21[5];
        v25 = v23 == v18 && v24 == v17;
        if (v25 || (_stringCompareWithSmolCheck(_:_:expecting:)(v23, v24, v18, v17, 0) & 1) != 0)
        {
LABEL_53:
          swift_release(v6);
          swift_bridgeObjectRelease(v17);
          v43 = v21;
          goto LABEL_57;
        }
        if (v22 != 1)
        {
          v26 = v21[6];
          v27 = v21[7];
          if (v26 == v18 && v27 == v17)
            goto LABEL_53;
          result = _stringCompareWithSmolCheck(_:_:expecting:)(v26, v27, v18, v17, 0);
          if ((result & 1) != 0)
            goto LABEL_53;
          if (v22 != 2)
            break;
        }
      }
      swift_bridgeObjectRelease(v17);
      result = swift_bridgeObjectRelease(v21);
    }
    v56 = a2;
    v57 = v6;
    v58 = v3;
    v29 = v21 + 9;
    v30 = 2;
    while (1)
    {
      v31 = v30 + 1;
      if (__OFADD__(v30, 1))
        break;
      v32 = *(v29 - 1);
      v33 = *v29;
      v34 = v32 == v18 && v33 == v17;
      if (v34 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v33, v18, v17, 0), (result & 1) != 0))
      {
        swift_release(v57);
        swift_bridgeObjectRelease(v17);
        swift_bridgeObjectRelease(v21);
        return 1;
      }
      v29 += 2;
      ++v30;
      if (v31 == v22)
      {
        swift_bridgeObjectRelease(v17);
        result = swift_bridgeObjectRelease(v21);
        v6 = v57;
        v3 = v58;
        a2 = v56;
        goto LABEL_6;
      }
    }
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
  }
  else
  {
    result = FMFLocationAlert.followerIds.getter();
    if (result)
    {
      v35 = result;
      v36 = *(_QWORD *)(result + 16);
      if (v36)
      {
        v38 = *(_QWORD *)(result + 32);
        v37 = *(_QWORD *)(result + 40);
        v39 = swift_bridgeObjectRetain(v37);
        v40 = FMFFriend.identifier.getter(v39);
        v42 = v41;
        if (v40 == v38 && v41 == v37)
        {
          swift_bridgeObjectRelease(v35);
          swift_bridgeObjectRelease_n(v37, 2);
          return 1;
        }
        else
        {
          v44 = _stringCompareWithSmolCheck(_:_:expecting:)(v40, v41, v38, v37, 0);
          swift_bridgeObjectRelease(v42);
          result = swift_bridgeObjectRelease(v37);
          if ((v44 & 1) != 0)
          {
            v43 = (_QWORD *)v35;
LABEL_57:
            swift_bridgeObjectRelease(v43);
            return 1;
          }
          else
          {
            v45 = 0;
            v46 = (_QWORD *)(v35 + 56);
            v47 = v36 - 1;
            while (1)
            {
              if (v47 == v45)
              {
                swift_bridgeObjectRelease(v35);
                return 0;
              }
              if ((unint64_t)++v45 >= *(_QWORD *)(v35 + 16))
                goto LABEL_75;
              v49 = *(v46 - 1);
              v48 = *v46;
              v50 = swift_bridgeObjectRetain(*v46);
              v51 = FMFFriend.identifier.getter(v50);
              if (v51 == v49 && v52 == v48)
                break;
              v54 = v52;
              v46 += 2;
              v55 = _stringCompareWithSmolCheck(_:_:expecting:)(v51, v52, v49, v48, 0);
              swift_bridgeObjectRelease(v54);
              result = swift_bridgeObjectRelease(v48);
              if ((v55 & 1) != 0)
              {
                swift_bridgeObjectRelease(v35);
                return 1;
              }
            }
            swift_bridgeObjectRelease(v35);
            swift_bridgeObjectRelease_n(v48, 2);
            return 1;
          }
        }
      }
      else
      {
        swift_bridgeObjectRelease(result);
        return 0;
      }
    }
  }
  return result;
}

void sub_1003D9490()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  char v14[24];

  v1 = v0 + OBJC_IVAR____TtC6FindMy22FMMyLocationAlertsView_friendsRow;
  swift_beginAccess(v0 + OBJC_IVAR____TtC6FindMy22FMMyLocationAlertsView_friendsRow, v14, 0, 0);
  v2 = *(_QWORD *)v1;
  if (*(_QWORD *)v1 >> 62)
  {
    if (v2 < 0)
      v9 = *(_QWORD *)v1;
    else
      v9 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(*(_QWORD *)v1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v9);
    v3 = v4;
    if (!v4)
      goto LABEL_13;
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    v4 = swift_bridgeObjectRetain(*(_QWORD *)v1);
    if (!v3)
      goto LABEL_13;
  }
  if (v3 < 1)
  {
    __break(1u);
    goto LABEL_28;
  }
  v5 = 0;
  v6 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_contentStackView);
  do
  {
    if ((v2 & 0xC000000000000001) != 0)
      v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2);
    else
      v7 = *(id *)(v2 + 8 * v5 + 32);
    v8 = v7;
    ++v5;
    objc_msgSend(v6, "addArrangedSubview:", v7);

  }
  while (v3 != v5);
LABEL_13:
  swift_bridgeObjectRelease(v2);
  v1 = *(_QWORD *)v1;
  if (!((unint64_t)v1 >> 62))
  {
    v10 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain(v1);
    if (v10)
      goto LABEL_15;
LABEL_25:
    swift_bridgeObjectRelease(v1);
    return;
  }
  if (v1 < 0)
    v13 = v1;
  else
    v13 = v1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(v1);
  v10 = _CocoaArrayWrapper.endIndex.getter(v13);
  if (!v10)
    goto LABEL_25;
LABEL_15:
  v4 = v10 - 1;
  if (__OFSUB__(v10, 1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if ((v1 & 0xC000000000000001) != 0)
  {
LABEL_29:
    v11 = (_BYTE *)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, v1);
    goto LABEL_20;
  }
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v4 < *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v11 = *(id *)(v1 + 8 * v4 + 32);
LABEL_20:
    v12 = v11;
    swift_bridgeObjectRelease(v1);
    v12[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_separated] = 0;
    objc_msgSend(*(id *)&v12[OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_separator], "setHidden:", 1);

    return;
  }
  __break(1u);
}

uint64_t sub_1003D967C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC6FindMy22FMMyLocationAlertsView_friendsRow);
  swift_beginAccess(v0 + OBJC_IVAR____TtC6FindMy22FMMyLocationAlertsView_friendsRow, v11, 1, 0);
  v2 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n(*v1, 2);
    if (v3)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease_n(v2, 2);
    v10 = *v1;
    *v1 = (uint64_t)&_swiftEmptyArrayStorage;
    return swift_bridgeObjectRelease(v10);
  }
  if (v2 < 0)
    v9 = *v1;
  else
    v9 = v2 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n(*v1, 2);
  result = _CocoaArrayWrapper.endIndex.getter(v9);
  v3 = result;
  if (!result)
    goto LABEL_13;
LABEL_3:
  if (v3 >= 1)
  {
    v5 = 0;
    v6 = *(void **)(v0 + OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_contentStackView);
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v5, v2);
      else
        v7 = *(id *)(v2 + 8 * v5 + 32);
      v8 = v7;
      ++v5;
      objc_msgSend(v7, "removeFromSuperview");
      objc_msgSend(v6, "removeArrangedSubview:", v8);

    }
    while (v3 != v5);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

void sub_1003D97C4(void *a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t Strong;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  _QWORD v16[6];
  _OWORD v17[3];
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  v2 = objc_msgSend(a1, "view");
  if (v2)
  {
    v15 = v2;
    v3 = type metadata accessor for FMMultiSettingsRowView();
    v4 = swift_dynamicCastClass(v15, v3);
    if (v4 && (v5 = *(_QWORD *)(v4 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_identifier + 8)) != 0)
    {
      v6 = *(_QWORD *)(v4 + OBJC_IVAR____TtC6FindMy22FMMultiSettingsRowView_identifier);
      v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC6FindMy22FMMyLocationAlertsView_rowViewModel);
      swift_bridgeObjectRetain(v7);
      swift_bridgeObjectRetain(v5);
      sub_1003D74C8(v6, v5, v7, v16);
      swift_bridgeObjectRelease(v5);
      swift_bridgeObjectRelease(v7);
      sub_1003D9D5C((uint64_t)v16, (uint64_t)v17);
      if (*((_QWORD *)&v17[0] + 1))
      {
        v18 = v17[0];
        v19 = v17[1];
        v20 = v17[2];
        Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC6FindMy22FMMyLocationAlertsView_delegate);
        if (Strong)
        {
          v9 = (void *)Strong;
          v10 = *(_QWORD *)(Strong + OBJC_IVAR____TtC6FindMy27FMBaseContentViewController_mediator);
          v21 = v18;
          v22 = v19;
          v23 = *((_QWORD *)&v20 + 1);
          v11 = objc_allocWithZone((Class)type metadata accessor for FMFriendLocationAlertsViewController(0));
          swift_retain(v10);
          sub_100195E08((uint64_t)&v21);
          sub_100195E08((uint64_t)&v22);
          sub_1003D9DA4(&v23);
          v12 = sub_100123E94(v10, (uint64_t)&v18);
          objc_allocWithZone((Class)type metadata accessor for FMActivityIndicatingNavigationController());
          v13 = v12;
          v14 = sub_1000A750C(v13, 2);
          objc_msgSend(v9, "presentViewController:animated:completion:", v14, 1, 0);
          swift_unknownObjectRelease(v9);

          sub_100195E58((uint64_t)&v21);
          sub_100195E58((uint64_t)&v22);
        }
        else
        {
          v21 = v18;
          sub_100195E58((uint64_t)&v21);
          v22 = v19;
          sub_100195E58((uint64_t)&v22);
          v23 = *((_QWORD *)&v20 + 1);
        }
        sub_1003D9DCC(&v23);
      }

    }
    else
    {

    }
  }
}

double sub_1003D9B34()
{
  uint64_t v0;
  double result;

  sub_10005E190(v0 + OBJC_IVAR____TtC6FindMy22FMMyLocationAlertsView_delegate);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy22FMMyLocationAlertsView_friendsRow));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0
                                                           + OBJC_IVAR____TtC6FindMy22FMMyLocationAlertsView_rowViewModel)).n128_u64[0];
  return result;
}

id sub_1003D9B70()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMMyLocationAlertsView();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMMyLocationAlertsView()
{
  return objc_opt_self(_TtC6FindMy22FMMyLocationAlertsView);
}

uint64_t initializeWithCopy for FMLocationAlertGroupViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRetain(v3);
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRetain(v5);
  return a1;
}

uint64_t assignWithCopy for FMLocationAlertGroupViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRetain(v4);
  swift_bridgeObjectRelease(v5);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  return a1;
}

uint64_t assignWithTake for FMLocationAlertGroupViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease(v7);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease(v8);
  return a1;
}

ValueMetadata *type metadata accessor for FMLocationAlertGroupViewModel()
{
  return &type metadata for FMLocationAlertGroupViewModel;
}

uint64_t sub_1003D9D5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C(qword_1005E3860);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1003D9DA4(_QWORD *a1)
{
  swift_bridgeObjectRetain(*a1);
  return a1;
}

_QWORD *sub_1003D9DCC(_QWORD *a1)
{
  swift_bridgeObjectRelease(*a1);
  return a1;
}

void sub_1003D9DF4(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4[2];

  v2 = (_QWORD *)*a1;
  if ((swift_isUniquelyReferenced_nonNull_native(*a1) & 1) == 0)
    v2 = (_QWORD *)sub_10020CF38(v2);
  v3 = v2[2];
  v4[0] = (uint64_t)(v2 + 4);
  v4[1] = v3;
  sub_1003D9E5C(v4);
  *a1 = v2;
}

void sub_1003D9E5C(uint64_t *a1)
{
  uint64_t v1;
  Swift::Int v3;
  Swift::Int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  Swift::Int v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  Swift::Int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v22;
  Swift::Int v23;
  uint64_t *v24;
  Swift::Int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  Swift::Int v32;
  Swift::Int v33;
  Swift::Int v34;
  Swift::Int v35;
  _OWORD *v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  Swift::Int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  Swift::Int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  _OWORD *v57;
  _OWORD *v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  unint64_t v66;
  unint64_t v67;
  char *v68;
  char *v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  BOOL v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  BOOL v91;
  uint64_t v92;
  char v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  BOOL v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  unint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  _QWORD *v127;
  Swift::Int v128;
  Swift::Int v129;
  uint64_t v130;
  char *__dst;

  v3 = a1[1];
  v4 = _minimumMergeRunLength(_:)(v3);
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_1003DA584(0, v3, 1, a1);
      return;
    }
    goto LABEL_154;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
  {
LABEL_162:
    _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
    return;
  }
  v128 = v4;
  v125 = a1;
  if (v3 < 2)
  {
    v9 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      v13 = _swiftEmptyArrayStorage[2];
      v12 = (char *)_swiftEmptyArrayStorage;
LABEL_120:
      v117 = v12;
      v127 = v9;
      if (v13 < 2)
        goto LABEL_117;
      v118 = *v125;
      while (1)
      {
        v119 = v13 - 2;
        if (v13 < 2)
          goto LABEL_149;
        if (!v118)
          goto LABEL_161;
        v116 = v117;
        v120 = *(_QWORD *)&v117[16 * v119 + 32];
        v121 = *(_QWORD *)&v117[16 * v13 + 24];
        sub_1003DA674((char *)(v118 + (v120 << 6)), (char *)(v118 + (*(_QWORD *)&v117[16 * v13 + 16] << 6)), v118 + (v121 << 6), __dst);
        if (v1)
          goto LABEL_116;
        if (v121 < v120)
          goto LABEL_150;
        if ((swift_isUniquelyReferenced_nonNull_native(v116) & 1) == 0)
          v116 = sub_10020CE70((uint64_t)v116);
        if (v119 >= *((_QWORD *)v116 + 2))
          goto LABEL_151;
        v122 = &v116[16 * v119 + 32];
        *(_QWORD *)v122 = v120;
        *((_QWORD *)v122 + 1) = v121;
        v123 = *((_QWORD *)v116 + 2);
        if (v13 > v123)
          goto LABEL_152;
        memmove(&v116[16 * v13 + 16], &v116[16 * v13 + 32], 16 * (v123 - v13));
        v117 = v116;
        *((_QWORD *)v116 + 2) = v123 - 1;
        v13 = v123 - 1;
        if (v123 <= 2)
          goto LABEL_117;
      }
    }
    v127 = _swiftEmptyArrayStorage;
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_100053F2C(&qword_1005D6798);
    v8 = static Array._allocateBufferUninitialized(minimumCapacity:)(v6, v7);
    *(_QWORD *)(v8 + 16) = v6;
    v127 = (_QWORD *)v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v126 = *a1 + 40;
  v124 = *a1 + 56;
  v12 = (char *)_swiftEmptyArrayStorage;
  v129 = v3;
  v130 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 >= v3)
      goto LABEL_46;
    v15 = v11 + (v10 << 6);
    v16 = *(_QWORD *)(v15 + 32);
    v17 = *(_QWORD *)(v15 + 40);
    v18 = v11 + (v14 << 6);
    v19 = *(_QWORD *)(v18 + 32);
    v20 = *(_QWORD *)(v18 + 40);
    if (v16 == v19 && v17 == v20)
    {
      v23 = v14 + 2;
      if (v14 + 2 >= v3)
        goto LABEL_45;
      v22 = 0;
    }
    else
    {
      v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, v19, v20, 1);
      v23 = v14 + 2;
      if (v14 + 2 >= v3)
        goto LABEL_36;
    }
    v24 = (uint64_t *)(v126 + (v23 << 6));
    do
    {
      v26 = *(v24 - 1);
      v27 = *v24;
      v28 = v11 + (v10 << 6);
      v29 = *(_QWORD *)(v28 + 32);
      v30 = *(_QWORD *)(v28 + 40);
      if (v26 == v29 && v27 == v30)
      {
        if ((v22 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v22 ^ _stringCompareWithSmolCheck(_:_:expecting:)(v26, v27, v29, v30, 1)) & 1) != 0)
      {
        goto LABEL_36;
      }
      v25 = v23 + 1;
      v24 += 8;
      v10 = v23;
      v23 = v25;
    }
    while (v25 < v3);
    v23 = v25;
LABEL_36:
    v10 = v23;
    if ((v22 & 1) != 0)
    {
LABEL_37:
      if (v23 < v14)
        goto LABEL_157;
      if (v14 < v23)
      {
        v32 = v23 << 6;
        v33 = v14 << 6;
        v34 = v23;
        v35 = v14;
        do
        {
          if (v35 != --v34)
          {
            if (!v11)
              goto LABEL_160;
            v36 = (_OWORD *)(v11 + v33);
            v37 = v11 + v32;
            v38 = *(_OWORD *)(v11 + v33);
            v39 = *(_OWORD *)(v11 + v33 + 16);
            v40 = *(_QWORD *)(v11 + v33 + 32);
            v41 = *(_QWORD *)(v11 + v33 + 40);
            v42 = *(_BYTE *)(v11 + v33 + 48);
            v43 = *(_QWORD *)(v11 + v33 + 56);
            v44 = *(_OWORD *)(v11 + v32 - 16);
            v46 = *(_OWORD *)(v11 + v32 - 64);
            v45 = *(_OWORD *)(v11 + v32 - 48);
            v36[2] = *(_OWORD *)(v11 + v32 - 32);
            v36[3] = v44;
            *v36 = v46;
            v36[1] = v45;
            *(_OWORD *)(v37 - 64) = v38;
            *(_OWORD *)(v37 - 48) = v39;
            *(_QWORD *)(v37 - 32) = v40;
            *(_QWORD *)(v37 - 24) = v41;
            *(_BYTE *)(v37 - 16) = v42;
            *(_QWORD *)(v37 - 8) = v43;
          }
          ++v35;
          v32 -= 64;
          v33 += 64;
        }
        while (v35 < v34);
      }
LABEL_45:
      v10 = v23;
    }
LABEL_46:
    if (v10 < v3)
    {
      if (__OFSUB__(v10, v14))
        goto LABEL_153;
      if (v10 - v14 < v128)
      {
        if (__OFADD__(v14, v128))
          goto LABEL_155;
        if (v14 + v128 >= v3)
          v47 = v3;
        else
          v47 = v14 + v128;
        if (v47 < v14)
          goto LABEL_156;
        if (v10 != v47)
        {
          v48 = v124 + (v10 << 6);
          do
          {
            v49 = v11 + (v10 << 6);
            v50 = *(_QWORD *)(v49 + 32);
            v51 = *(_QWORD *)(v49 + 40);
            v52 = v14;
            v53 = v48;
            do
            {
              v54 = *(_QWORD *)(v53 - 88);
              v55 = *(_QWORD *)(v53 - 80);
              v56 = v50 == v54 && v51 == v55;
              if (v56 || (_stringCompareWithSmolCheck(_:_:expecting:)(v50, v51, v54, v55, 1) & 1) == 0)
                break;
              if (!v11)
                goto LABEL_158;
              v57 = (_OWORD *)(v53 - 56);
              v58 = (_OWORD *)(v53 - 120);
              v60 = *(_OWORD *)(v53 - 88);
              v59 = *(_OWORD *)(v53 - 72);
              *(_QWORD *)(v53 - 64) = *(_QWORD *)v53;
              v53 -= 64;
              v61 = *(_QWORD *)(v53 + 8);
              v62 = *(_QWORD *)(v53 + 16);
              v63 = *(_QWORD *)(v53 + 24);
              v64 = *(_QWORD *)(v53 + 32);
              v65 = v58[1];
              *v57 = *v58;
              v57[1] = v65;
              v50 = *(_QWORD *)(v53 + 40);
              v51 = *(_QWORD *)(v53 + 48);
              LOBYTE(v58) = *(_BYTE *)(v53 + 56);
              v57[2] = v60;
              v57[3] = v59;
              *(_QWORD *)(v53 - 56) = v61;
              *(_QWORD *)(v53 - 48) = v62;
              *(_QWORD *)(v53 - 40) = v63;
              *(_QWORD *)(v53 - 32) = v64;
              *(_QWORD *)(v53 - 24) = v50;
              *(_QWORD *)(v53 - 16) = v51;
              ++v52;
              *(_BYTE *)(v53 - 8) = (_BYTE)v58;
            }
            while (v10 != v52);
            ++v10;
            v48 += 64;
          }
          while (v10 != v47);
          v10 = v47;
        }
      }
    }
    if (v10 < v14)
    {
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
LABEL_160:
      __break(1u);
LABEL_161:
      __break(1u);
      goto LABEL_162;
    }
    if ((swift_isUniquelyReferenced_nonNull_native(v12) & 1) == 0)
      v12 = sub_10020C830(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v67 = *((_QWORD *)v12 + 2);
    v66 = *((_QWORD *)v12 + 3);
    v13 = v67 + 1;
    if (v67 >= v66 >> 1)
      v12 = sub_10020C830((char *)(v66 > 1), v67 + 1, 1, v12);
    *((_QWORD *)v12 + 2) = v13;
    v68 = v12 + 32;
    v69 = &v12[16 * v67 + 32];
    *(_QWORD *)v69 = v14;
    *((_QWORD *)v69 + 1) = v10;
    if (v67)
      break;
    v13 = 1;
    v11 = v130;
LABEL_15:
    v3 = v129;
    if (v10 >= v129)
    {
      v9 = v127;
      goto LABEL_120;
    }
  }
  v11 = v130;
  while (1)
  {
    v70 = v13 - 1;
    if (v13 >= 4)
    {
      v75 = &v68[16 * v13];
      v76 = *((_QWORD *)v75 - 8);
      v77 = *((_QWORD *)v75 - 7);
      v81 = __OFSUB__(v77, v76);
      v78 = v77 - v76;
      if (v81)
        goto LABEL_137;
      v80 = *((_QWORD *)v75 - 6);
      v79 = *((_QWORD *)v75 - 5);
      v81 = __OFSUB__(v79, v80);
      v73 = v79 - v80;
      v74 = v81;
      if (v81)
        goto LABEL_138;
      v82 = v13 - 2;
      v83 = &v68[16 * v13 - 32];
      v85 = *(_QWORD *)v83;
      v84 = *((_QWORD *)v83 + 1);
      v81 = __OFSUB__(v84, v85);
      v86 = v84 - v85;
      if (v81)
        goto LABEL_140;
      v81 = __OFADD__(v73, v86);
      v87 = v73 + v86;
      if (v81)
        goto LABEL_143;
      if (v87 >= v78)
      {
        v105 = &v68[16 * v70];
        v107 = *(_QWORD *)v105;
        v106 = *((_QWORD *)v105 + 1);
        v81 = __OFSUB__(v106, v107);
        v108 = v106 - v107;
        if (v81)
          goto LABEL_147;
        v98 = v73 < v108;
        goto LABEL_105;
      }
    }
    else
    {
      if (v13 != 3)
      {
        v99 = *((_QWORD *)v12 + 4);
        v100 = *((_QWORD *)v12 + 5);
        v81 = __OFSUB__(v100, v99);
        v92 = v100 - v99;
        v93 = v81;
        goto LABEL_99;
      }
      v72 = *((_QWORD *)v12 + 4);
      v71 = *((_QWORD *)v12 + 5);
      v81 = __OFSUB__(v71, v72);
      v73 = v71 - v72;
      v74 = v81;
    }
    if ((v74 & 1) != 0)
      goto LABEL_139;
    v82 = v13 - 2;
    v88 = &v68[16 * v13 - 32];
    v90 = *(_QWORD *)v88;
    v89 = *((_QWORD *)v88 + 1);
    v91 = __OFSUB__(v89, v90);
    v92 = v89 - v90;
    v93 = v91;
    if (v91)
      goto LABEL_142;
    v94 = &v68[16 * v70];
    v96 = *(_QWORD *)v94;
    v95 = *((_QWORD *)v94 + 1);
    v81 = __OFSUB__(v95, v96);
    v97 = v95 - v96;
    if (v81)
      goto LABEL_145;
    if (__OFADD__(v92, v97))
      goto LABEL_146;
    if (v92 + v97 >= v73)
    {
      v98 = v73 < v97;
LABEL_105:
      if (v98)
        v70 = v82;
      goto LABEL_107;
    }
LABEL_99:
    if ((v93 & 1) != 0)
      goto LABEL_141;
    v101 = &v68[16 * v70];
    v103 = *(_QWORD *)v101;
    v102 = *((_QWORD *)v101 + 1);
    v81 = __OFSUB__(v102, v103);
    v104 = v102 - v103;
    if (v81)
      goto LABEL_144;
    if (v104 < v92)
      goto LABEL_15;
LABEL_107:
    v109 = v70 - 1;
    if (v70 - 1 >= v13)
    {
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
      goto LABEL_148;
    }
    if (!v11)
      goto LABEL_159;
    v110 = v11;
    v111 = &v68[16 * v109];
    v112 = *(_QWORD *)v111;
    v113 = &v68[16 * v70];
    v114 = *((_QWORD *)v113 + 1);
    sub_1003DA674((char *)(v110 + (*(_QWORD *)v111 << 6)), (char *)(v110 + (*(_QWORD *)v113 << 6)), v110 + (v114 << 6), __dst);
    if (v1)
      break;
    if (v114 < v112)
      goto LABEL_134;
    if (v70 > *((_QWORD *)v12 + 2))
      goto LABEL_135;
    *(_QWORD *)v111 = v112;
    *(_QWORD *)&v68[16 * v109 + 8] = v114;
    v115 = *((_QWORD *)v12 + 2);
    if (v70 >= v115)
      goto LABEL_136;
    v13 = v115 - 1;
    memmove(&v68[16 * v70], v113 + 16, 16 * (v115 - 1 - v70));
    *((_QWORD *)v12 + 2) = v115 - 1;
    v98 = v115 > 2;
    v11 = v130;
    if (!v98)
      goto LABEL_15;
  }
  v116 = v12;
LABEL_116:
  v117 = v116;
LABEL_117:
  swift_bridgeObjectRelease(v117);
  v127[2] = 0;
  swift_bridgeObjectRelease(v127);
}

uint64_t sub_1003DA584(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  _OWORD *v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + (a3 << 6) + 56;
LABEL_5:
    v9 = v7 + (v4 << 6);
    result = *(_QWORD *)(v9 + 32);
    v10 = *(_QWORD *)(v9 + 40);
    v11 = v6;
    v12 = v8;
    while (1)
    {
      v13 = *(_QWORD *)(v12 - 88);
      v14 = *(_QWORD *)(v12 - 80);
      v15 = result == v13 && v10 == v14;
      if (v15 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(result, v10, v13, v14, 1), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 64;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      v16 = (_OWORD *)(v12 - 56);
      v17 = (_OWORD *)(v12 - 120);
      v19 = *(_OWORD *)(v12 - 88);
      v18 = *(_OWORD *)(v12 - 72);
      *(_QWORD *)(v12 - 64) = *(_QWORD *)v12;
      v12 -= 64;
      v20 = *(_QWORD *)(v12 + 8);
      v21 = *(_QWORD *)(v12 + 16);
      v22 = *(_QWORD *)(v12 + 24);
      v23 = *(_QWORD *)(v12 + 32);
      v24 = v17[1];
      *v16 = *v17;
      v16[1] = v24;
      result = *(_QWORD *)(v12 + 40);
      v10 = *(_QWORD *)(v12 + 48);
      LOBYTE(v17) = *(_BYTE *)(v12 + 56);
      v16[2] = v19;
      v16[3] = v18;
      *(_QWORD *)(v12 - 56) = v20;
      *(_QWORD *)(v12 - 48) = v21;
      *(_QWORD *)(v12 - 40) = v22;
      *(_QWORD *)(v12 - 32) = v23;
      *(_QWORD *)(v12 - 24) = result;
      *(_QWORD *)(v12 - 16) = v10;
      ++v11;
      *(_BYTE *)(v12 - 8) = (_BYTE)v17;
      if (v4 == v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1003DA674(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  char *v21;
  char *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  char *v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t result;
  char *v42;
  const void *v43;
  char *v44;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 63;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 6;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 63;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 6;
  v44 = __src;
  v43 = __dst;
  if (v10 >= v12 >> 6)
  {
    if (v11 >= -63)
    {
      if (__dst != a2 || &a2[64 * v13] <= __dst)
        memmove(__dst, a2, v13 << 6);
      v26 = &v4[64 * v13];
      v42 = v26;
      v44 = v6;
      if (v7 < v6 && v11 >= 64)
      {
        v27 = (char *)(a3 - 64);
        do
        {
          v28 = v27 + 64;
          v29 = *((_QWORD *)v26 - 4);
          v30 = *((_QWORD *)v26 - 3);
          v31 = *((_QWORD *)v6 - 4);
          v32 = *((_QWORD *)v6 - 3);
          v33 = v29 == v31 && v30 == v32;
          if (v33 || (_stringCompareWithSmolCheck(_:_:expecting:)(v29, v30, v31, v32, 1) & 1) == 0)
          {
            v42 = v26 - 64;
            if (v28 < v26 || v27 >= v26 || v28 != v26)
            {
              v38 = *((_OWORD *)v26 - 4);
              v39 = *((_OWORD *)v26 - 3);
              v40 = *((_OWORD *)v26 - 1);
              *((_OWORD *)v27 + 2) = *((_OWORD *)v26 - 2);
              *((_OWORD *)v27 + 3) = v40;
              *(_OWORD *)v27 = v38;
              *((_OWORD *)v27 + 1) = v39;
            }
            v34 = v6;
            v26 -= 64;
            if (v6 <= v7)
              break;
          }
          else
          {
            v34 = v6 - 64;
            if (v28 != v6 || v27 >= v6)
            {
              v35 = *(_OWORD *)v34;
              v36 = *((_OWORD *)v6 - 3);
              v37 = *((_OWORD *)v6 - 1);
              *((_OWORD *)v27 + 2) = *((_OWORD *)v6 - 2);
              *((_OWORD *)v27 + 3) = v37;
              *(_OWORD *)v27 = v35;
              *((_OWORD *)v27 + 1) = v36;
            }
            v44 = v6 - 64;
            if (v34 <= v7)
              break;
          }
          v27 -= 64;
          v6 = v34;
        }
        while (v26 > v4);
      }
LABEL_52:
      sub_10020CB78((void **)&v44, &v43, &v42);
      return 1;
    }
  }
  else if (v8 >= -63)
  {
    if (__dst != __src || &__src[64 * v10] <= __dst)
      memmove(__dst, __src, v10 << 6);
    v14 = &v4[64 * v10];
    v42 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 64)
    {
      v15 = v4;
      while (1)
      {
        v16 = *((_QWORD *)v6 + 4);
        v17 = *((_QWORD *)v6 + 5);
        v18 = *((_QWORD *)v15 + 4);
        v19 = *((_QWORD *)v15 + 5);
        v20 = v16 == v18 && v17 == v19;
        if (v20 || (_stringCompareWithSmolCheck(_:_:expecting:)(v16, v17, v18, v19, 1) & 1) == 0)
        {
          v4 = v15 + 64;
          v22 = v15;
          v21 = v6;
          if (v7 == v15)
          {
            v15 += 64;
            if (v7 < v4)
              goto LABEL_26;
          }
          else
          {
            v15 += 64;
          }
        }
        else
        {
          v21 = v6 + 64;
          v22 = v6;
          if (v7 == v6 && v7 < v21)
            goto LABEL_26;
        }
        v23 = *(_OWORD *)v22;
        v24 = *((_OWORD *)v22 + 1);
        v25 = *((_OWORD *)v22 + 3);
        *((_OWORD *)v7 + 2) = *((_OWORD *)v22 + 2);
        *((_OWORD *)v7 + 3) = v25;
        *(_OWORD *)v7 = v23;
        *((_OWORD *)v7 + 1) = v24;
LABEL_26:
        v7 += 64;
        if (v15 < v14)
        {
          v6 = v21;
          if ((unint64_t)v21 < a3)
            continue;
        }
        v43 = v4;
        v44 = v7;
        goto LABEL_52;
      }
    }
    goto LABEL_52;
  }
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.moveInitialize with negative count", 55, 2, "Swift/UnsafePointer.swift", 25, 2, 1046, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003DA934(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_100053F2C((uint64_t *)&unk_1005DF470);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003DA97C(uint64_t a1)
{
  uint64_t v1;

  return sub_1003D905C(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t FMObjectAssociation.__allocating_init(policy:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = swift_allocObject(v1, 32, 7);
  FMObjectAssociation.init(policy:)(a1);
  return v3;
}

uint64_t FMObjectAssociation.init(policy:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];
  uint64_t v20;
  _QWORD *v21;

  v2 = v1;
  v20 = a1;
  v3 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for OS_dispatch_queue.Attributes(0);
  __chkstk_darwin(v7);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  __chkstk_darwin(v10);
  v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[1] = sub_1000555A8();
  static DispatchQoS.default.getter();
  v21 = _swiftEmptyArrayStorage;
  v13 = sub_100008000((unint64_t *)&unk_1005D3970, (uint64_t (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes, (uint64_t)&protocol conformance descriptor for OS_dispatch_queue.Attributes);
  v14 = sub_100053F2C((uint64_t *)&unk_1005D20F0);
  v15 = sub_10003F734((unint64_t *)&unk_1005D3980, (uint64_t *)&unk_1005D20F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v21, v14, v15, v7, v13);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v3);
  v16 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)(0xD00000000000001DLL, 0x80000001004A4B60, v12, v9, v6, 0);
  v17 = v20;
  *(_QWORD *)(v2 + 16) = v16;
  *(_QWORD *)(v2 + 24) = v17;
  return v2;
}

void FMObjectAssociation.subscript.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD aBlock[5];
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  v11 = 0;
  v4 = *(NSObject **)(v1 + 16);
  v5 = (_QWORD *)swift_allocObject(&unk_100561950, 40, 7);
  v5[2] = &v11;
  v5[3] = a1;
  v5[4] = v2;
  v6 = swift_allocObject(&unk_100561978, 32, 7);
  *(_QWORD *)(v6 + 16) = sub_1003DADE0;
  *(_QWORD *)(v6 + 24) = v5;
  aBlock[4] = sub_100021E58;
  v10 = v6;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100021E38;
  aBlock[3] = &unk_100561990;
  v7 = _Block_copy(aBlock);
  v8 = v10;
  swift_unknownObjectRetain(a1);
  swift_retain(v2);
  swift_retain(v6);
  swift_release(v8);
  dispatch_sync(v4, v7);
  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation(v6, "", 98, 32, 33, 1);
  swift_release(v6);
  if ((v4 & 1) != 0)
    __break(1u);
  else
    swift_release(v5);
}

double sub_1003DACEC(uint64_t *a1, id object, uint64_t *key)
{
  uint64_t v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  uint64_t v10;
  _OWORD v11[2];
  __int128 v12;
  uint64_t v13;
  _OWORD v14[2];

  v4 = *key;
  v5 = objc_getAssociatedObject(object, key);
  if (v5)
  {
    v6 = v5;
    _bridgeAnyObjectToAny(_:)(v11, v5);
    swift_unknownObjectRelease(v6);
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  sub_10005D07C((uint64_t)v11, (uint64_t)&v12);
  if (v13)
  {
    sub_10004C850(&v12, v14);
    swift_dynamicCast(&v10, v14, (char *)&type metadata for Any + 8, *(_QWORD *)(v4 + 80), 7);
    v7 = v10;
  }
  else
  {
    sub_10005D03C((uint64_t)&v12);
    v7 = 0;
  }
  v8 = *a1;
  *a1 = v7;
  *(_QWORD *)&result = swift_unknownObjectRelease(v8).n128_u64[0];
  return result;
}

uint64_t sub_1003DADB4()
{
  uint64_t v0;

  swift_unknownObjectRelease(*(_QWORD *)(v0 + 24));
  swift_release(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_1003DADE0()
{
  uint64_t v0;

  return sub_1003DACEC(*(uint64_t **)(v0 + 16), *(id *)(v0 + 24), *(uint64_t **)(v0 + 32));
}

uint64_t sub_1003DADEC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

double FMObjectAssociation.subscript.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  double result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD aBlock[5];
  _QWORD *v25;

  v5 = type metadata accessor for DispatchWorkItemFlags(0);
  v22 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for DispatchQoS(0);
  v8 = *(_QWORD *)(v21 - 8);
  __chkstk_darwin(v21);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v2 + 24);
  v20 = *(_QWORD *)(v2 + 16);
  v12 = (_QWORD *)swift_allocObject(&unk_1005619C8, 48, 7);
  v12[2] = a2;
  v12[3] = v2;
  v12[4] = a1;
  v12[5] = v11;
  aBlock[4] = sub_1003DB048;
  v25 = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_1005619E0;
  v13 = _Block_copy(aBlock);
  swift_unknownObjectRetain(a1);
  swift_unknownObjectRetain(a2);
  v14 = swift_retain(v2);
  static DispatchQoS.unspecified.getter(v14);
  v23 = _swiftEmptyArrayStorage;
  v15 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v16 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v17 = sub_10003F734((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v23, v16, v17, v5, v15);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v10, v7, v13);
  _Block_release(v13);
  swift_unknownObjectRelease(a1);
  v18 = swift_unknownObjectRelease(a2);
  (*(void (**)(char *, uint64_t, __n128))(v22 + 8))(v7, v5, v18);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v21);
  *(_QWORD *)&result = swift_release(v25).n128_u64[0];
  return result;
}

uint64_t sub_1003DB014()
{
  _QWORD *v0;

  swift_unknownObjectRelease(v0[2]);
  swift_release(v0[3]);
  swift_unknownObjectRelease(v0[4]);
  return swift_deallocObject(v0, 48, 7);
}

void sub_1003DB048()
{
  uint64_t v0;

  objc_setAssociatedObject(*(id *)(v0 + 16), *(const void **)(v0 + 24), *(id *)(v0 + 32), *(void **)(v0 + 40));
}

double (*FMObjectAssociation.subscript.modify(_QWORD *a1, uint64_t a2))(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v4;

  a1[1] = a2;
  a1[2] = v2;
  FMObjectAssociation.subscript.getter(a2);
  *a1 = v4;
  return sub_1003DB08C;
}

double sub_1003DB08C(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  double result;

  v2 = a1[1];
  v3 = *a1;
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRetain(*a1);
    swift_unknownObjectRetain(v2);
    FMObjectAssociation.subscript.setter(v3, v2);
    *(_QWORD *)&result = swift_unknownObjectRelease(v3).n128_u64[0];
  }
  else
  {
    swift_unknownObjectRetain(a1[1]);
    return FMObjectAssociation.subscript.setter(v3, v2);
  }
  return result;
}

uint64_t FMObjectAssociation.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t FMObjectAssociation.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance(v0, 32, 7);
}

uint64_t sub_1003DB13C(uint64_t a1)
{
  _QWORD v2[2];

  v2[0] = (char *)&value witness table for Builtin.UnknownObject + 64;
  v2[1] = (char *)&value witness table for Builtin.Int64 + 64;
  return swift_initClassMetadata2(a1, 0, 2, v2, a1 + 88);
}

uint64_t type metadata accessor for FMObjectAssociation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10003BC28(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FMObjectAssociation);
}

BOOL sub_1003DB1A0(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16) == 0;
}

uint64_t sub_1003DB1B0(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  v6 = a3 + 56;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  result = swift_bridgeObjectRetain(a3);
  v12 = 0;
  if (!v9)
    goto LABEL_5;
LABEL_4:
  v13 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    v18 = *(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * i);
    v20 = v18;
    swift_bridgeObjectRetain(v18);
    v19 = a1(&v20);
    if (v3)
    {
      swift_release(a3);
      swift_bridgeObjectRelease(v18);
      return v18;
    }
    if ((v19 & 1) != 0)
    {
      swift_release(a3);
      return v18;
    }
    result = swift_bridgeObjectRelease(v18);
    if (v9)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v12++, 1))
      break;
    if (v12 >= v10)
      goto LABEL_28;
    v16 = *(_QWORD *)(v6 + 8 * v12);
    if (!v16)
    {
      v17 = v12 + 1;
      if (v12 + 1 >= v10)
        goto LABEL_28;
      v16 = *(_QWORD *)(v6 + 8 * v17);
      if (v16)
        goto LABEL_16;
      v17 = v12 + 2;
      if (v12 + 2 >= v10)
        goto LABEL_28;
      v16 = *(_QWORD *)(v6 + 8 * v17);
      if (v16)
        goto LABEL_16;
      v17 = v12 + 3;
      if (v12 + 3 >= v10)
        goto LABEL_28;
      v16 = *(_QWORD *)(v6 + 8 * v17);
      if (v16)
      {
LABEL_16:
        v12 = v17;
        goto LABEL_17;
      }
      v17 = v12 + 4;
      if (v12 + 4 < v10)
      {
        v16 = *(_QWORD *)(v6 + 8 * v17);
        if (!v16)
        {
          while (1)
          {
            v12 = v17 + 1;
            if (__OFADD__(v17, 1))
              goto LABEL_31;
            if (v12 >= v10)
              goto LABEL_28;
            v16 = *(_QWORD *)(v6 + 8 * v12);
            ++v17;
            if (v16)
              goto LABEL_17;
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      swift_release(a3);
      return 0;
    }
LABEL_17:
    v9 = (v16 - 1) & v16;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1003DB368@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  __n128 v28;
  void (*v29)(char *, uint64_t, __n128);
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  __n128 v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t (*v41)(char *, uint64_t, uint64_t, __n128);
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v49 = type metadata accessor for FMIPPartType(0);
  v44 = *(_QWORD *)(v49 - 8);
  v7 = __chkstk_darwin(v49);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v35 - v10;
  v12 = type metadata accessor for FMIPItem(0);
  __chkstk_darwin(v12);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a1 + 16);
  if (v17)
  {
    v36 = a3;
    v37 = v3;
    v18 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v42 = *a2;
    v38 = *(_QWORD *)(v13 + 72);
    v43 = v13;
    v41 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16);
    v35 = a1;
    v19 = swift_bridgeObjectRetain(a1);
    v20 = v49;
    v39 = v16;
    v40 = v12;
    while (1)
    {
      v21 = v41(v16, v18, v12, v19);
      FMIPItem.partType.getter(v21);
      v22 = v44;
      (*(void (**)(char *, _QWORD, uint64_t))(v44 + 104))(v9, v42, v20);
      v23 = sub_100008000((unint64_t *)&unk_1005E3AF0, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPartType, (uint64_t)&protocol conformance descriptor for FMIPPartType);
      dispatch thunk of RawRepresentable.rawValue.getter(&v47, v20, v23);
      dispatch thunk of RawRepresentable.rawValue.getter(&v45, v20, v23);
      v24 = v48;
      v25 = v46;
      if (v47 == v45 && v48 == v46)
        break;
      v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v47, v48, v45, v46, 0);
      swift_bridgeObjectRelease(v24);
      v28 = swift_bridgeObjectRelease(v25);
      v29 = *(void (**)(char *, uint64_t, __n128))(v22 + 8);
      v29(v9, v49, v28);
      v20 = v49;
      ((void (*)(char *, uint64_t))v29)(v11, v49);
      if ((v27 & 1) != 0)
        goto LABEL_12;
      v16 = v39;
      v12 = v40;
      (*(void (**)(char *, uint64_t))(v43 + 8))(v39, v40);
      v18 += v38;
      if (!--v17)
      {
        v14 = swift_bridgeObjectRelease(v35);
        v30 = 1;
        a3 = v36;
        v13 = v43;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v13 + 56))(a3, v30, 1, v12, v14);
      }
    }
    swift_bridgeObjectRelease_n(v48, 2);
    v31 = *(void (**)(char *, uint64_t))(v22 + 8);
    v31(v9, v20);
    v31(v11, v20);
LABEL_12:
    v32 = swift_bridgeObjectRelease(v35);
    v33 = v43;
    a3 = v36;
    v12 = v40;
    (*(void (**)(uint64_t, char *, uint64_t, __n128))(v43 + 32))(v36, v39, v40, v32);
    v13 = v33;
    v30 = 0;
  }
  else
  {
    v30 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v13 + 56))(a3, v30, 1, v12, v14);
}

uint64_t sub_1003DB634@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, unint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = type metadata accessor for FMIPAudioChannel(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v21 = a1;
    v22 = a2;
    v23 = v2;
    v10 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v11 = *(_QWORD *)(v6 + 72);
    v12 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v6 + 16);
    swift_bridgeObjectRetain(a1);
    while (1)
    {
      v13 = v12(v8, v10, v5);
      v14 = FMIPAudioChannel.name.getter(v13);
      v16 = v15;
      if (v14 == 1952867692 && v15 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease(v21);
        v19 = 0xE400000000000000;
        goto LABEL_11;
      }
      v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, 1952867692, 0xE400000000000000, 0);
      swift_bridgeObjectRelease(v16);
      if ((v17 & 1) != 0)
        break;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v10 += v11;
      if (!--v9)
      {
        swift_bridgeObjectRelease(v21);
        v18 = 1;
        a2 = v22;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v18, 1, v5);
      }
    }
    v19 = v21;
LABEL_11:
    swift_bridgeObjectRelease(v19);
    a2 = v22;
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v22, v8, v5);
    v18 = 0;
  }
  else
  {
    v18 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v18, 1, v5);
}

uint64_t sub_1003DB7D0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, unint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = type metadata accessor for FMIPAudioChannel(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    v21 = a1;
    v22 = a2;
    v23 = v2;
    v10 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v11 = *(_QWORD *)(v6 + 72);
    v12 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v6 + 16);
    swift_bridgeObjectRetain(a1);
    while (1)
    {
      v13 = v12(v8, v10, v5);
      v14 = FMIPAudioChannel.name.getter(v13);
      v16 = v15;
      if (v14 == 0x7468676972 && v15 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease(v21);
        v19 = 0xE500000000000000;
        goto LABEL_11;
      }
      v17 = _stringCompareWithSmolCheck(_:_:expecting:)(v14, v15, 0x7468676972, 0xE500000000000000, 0);
      swift_bridgeObjectRelease(v16);
      if ((v17 & 1) != 0)
        break;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v10 += v11;
      if (!--v9)
      {
        swift_bridgeObjectRelease(v21);
        v18 = 1;
        a2 = v22;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v18, 1, v5);
      }
    }
    v19 = v21;
LABEL_11:
    swift_bridgeObjectRelease(v19);
    a2 = v22;
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v22, v8, v5);
    v18 = 0;
  }
  else
  {
    v18 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v18, 1, v5);
}

void *sub_1003DB974(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  id v15;

  v4 = v3;
  if ((unint64_t)a3 >> 62)
    goto LABEL_16;
  v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain(a3);
  for (; v7; v7 = _CocoaArrayWrapper.endIndex.getter(v14))
  {
    v8 = 4;
    while (1)
    {
      v9 = (a3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v8 - 4, a3)
         : *(id *)(a3 + 8 * v8);
      v10 = v9;
      v11 = v8 - 3;
      if (__OFADD__(v8 - 4, 1))
        break;
      v15 = v9;
      v12 = a1(&v15);
      if (v4)
      {
        swift_bridgeObjectRelease(a3);

        return v10;
      }
      if ((v12 & 1) != 0)
      {
        swift_bridgeObjectRelease(a3);
        return v10;
      }

      ++v8;
      if (v11 == v7)
        goto LABEL_11;
    }
    __break(1u);
LABEL_16:
    if (a3 < 0)
      v14 = a3;
    else
      v14 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
  }
LABEL_11:
  swift_bridgeObjectRelease(a3);
  return 0;
}

uint64_t sub_1003DBA94@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t i;
  unint64_t v21;
  int64_t v22;
  void (*v23)(char *, char *, uint64_t);
  char v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  int64_t v29;
  uint64_t (*v30)(char *);
  uint64_t v31;

  v30 = a1;
  v27 = a3;
  v5 = type metadata accessor for FMIPBeaconShare(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v27 - v10;
  v12 = *(_QWORD *)(a2 + 56);
  v28 = a2 + 56;
  v13 = 1 << *(_BYTE *)(a2 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v29 = (unint64_t)(v13 + 63) >> 6;
  v31 = a2;
  result = swift_bridgeObjectRetain(a2);
  v17 = 0;
  if (!v15)
    goto LABEL_5;
LABEL_4:
  v18 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (i = v18 | (v17 << 6); ; i = __clz(__rbit64(v21)) + (v17 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v11, *(_QWORD *)(v31 + 48) + *(_QWORD *)(v6 + 72) * i, v5);
    v23 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v23(v9, v11, v5);
    v24 = v30(v9);
    if (v3)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      return swift_release(v31);
    }
    if ((v24 & 1) != 0)
    {
      swift_release(v31);
      v25 = v27;
      v23(v27, v9, v5);
      v26 = 0;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v25, v26, 1, v5);
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    if (v15)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v17++, 1))
      break;
    if (v17 >= v29)
      goto LABEL_28;
    v21 = *(_QWORD *)(v28 + 8 * v17);
    if (!v21)
    {
      v22 = v17 + 1;
      if (v17 + 1 >= v29)
        goto LABEL_28;
      v21 = *(_QWORD *)(v28 + 8 * v22);
      if (v21)
        goto LABEL_16;
      v22 = v17 + 2;
      if (v17 + 2 >= v29)
        goto LABEL_28;
      v21 = *(_QWORD *)(v28 + 8 * v22);
      if (v21)
        goto LABEL_16;
      v22 = v17 + 3;
      if (v17 + 3 >= v29)
        goto LABEL_28;
      v21 = *(_QWORD *)(v28 + 8 * v22);
      if (v21)
      {
LABEL_16:
        v17 = v22;
        goto LABEL_17;
      }
      v22 = v17 + 4;
      if (v17 + 4 < v29)
      {
        v21 = *(_QWORD *)(v28 + 8 * v22);
        if (!v21)
        {
          while (1)
          {
            v17 = v22 + 1;
            if (__OFADD__(v22, 1))
              goto LABEL_31;
            if (v17 >= v29)
              goto LABEL_28;
            v21 = *(_QWORD *)(v28 + 8 * v17);
            ++v22;
            if (v21)
              goto LABEL_17;
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      v25 = v27;
      swift_release(v31);
      v26 = 1;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v25, v26, 1, v5);
    }
LABEL_17:
    v15 = (v21 - 1) & v21;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1003DBD48(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  return sub_1003DBDFC(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPItem, (void (*)(BOOL, uint64_t, uint64_t))sub_100111D4C);
}

uint64_t sub_1003DBD6C(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  return sub_1003DBDFC(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPSafeLocation, (void (*)(BOOL, uint64_t, uint64_t))sub_100111DA4);
}

uint64_t sub_1003DBD90(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  return sub_1003DBDFC(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPUnknownItem, (void (*)(BOOL, uint64_t, uint64_t))sub_100111DD0);
}

uint64_t sub_1003DBDB4(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  return sub_1003DBDFC(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPBeaconShare, (void (*)(BOOL, uint64_t, uint64_t))sub_100111DFC);
}

uint64_t sub_1003DBDD8(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  return sub_1003DBDFC(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for FMFFriend, (void (*)(BOOL, uint64_t, uint64_t))sub_100111E44);
}

uint64_t sub_1003DBDFC(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), void (*a5)(BOOL, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  void *v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  void (*v22)(BOOL, uint64_t, uint64_t);
  uint64_t (*v23)(_QWORD);
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  _QWORD *v30;

  v22 = a5;
  v29 = a4(0);
  v9 = *(_QWORD *)(v29 - 8);
  v10 = __chkstk_darwin(v29);
  v28 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v10);
  v14 = (char *)&v22 - v13;
  v15 = &_swiftEmptyArrayStorage;
  v30 = &_swiftEmptyArrayStorage;
  v27 = *(_QWORD *)(a3 + 16);
  if (v27)
  {
    v16 = 0;
    v24 = a2;
    v25 = a3;
    v23 = a1;
    while (v16 < *(_QWORD *)(a3 + 16))
    {
      v17 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      v15 = *(void **)(v9 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v14, a3 + v17 + (_QWORD)v15 * v16, v29);
      v18 = a1(v14);
      if (v5)
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v29);
        swift_bridgeObjectRelease(a3);
        swift_release(v30);
        return (uint64_t)v15;
      }
      if ((v18 & 1) != 0)
      {
        v26 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
        v26(v28, v14, v29);
        v19 = v30;
        if ((swift_isUniquelyReferenced_nonNull_native(v30) & 1) == 0)
        {
          v22(0, v19[2] + 1, 1);
          v19 = v30;
        }
        v21 = v19[2];
        v20 = v19[3];
        if (v21 >= v20 >> 1)
        {
          v22(v20 > 1, v21 + 1, 1);
          v19 = v30;
        }
        v19[2] = v21 + 1;
        result = ((uint64_t (*)(char *, char *, uint64_t))v26)((char *)v19 + v17 + v21 * (_QWORD)v15, v28, v29);
        v30 = v19;
        a3 = v25;
        a1 = v23;
      }
      else
      {
        result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v29);
      }
      if (v27 == ++v16)
      {
        v15 = v30;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease(a3);
    return (uint64_t)v15;
  }
  return result;
}

uint64_t sub_1003DC018(uint64_t (*a1)(_QWORD *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t countAndFlagsBits;
  Swift::String_optional v8;
  void *object;
  char v10;
  Swift::String_optional v11;
  _QWORD v13[3];
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = HIBYTE(a4) & 0xF;
  v13[2] = a3;
  v14 = a4;
  if ((a4 & 0x2000000000000000) == 0)
    v6 = a3 & 0xFFFFFFFFFFFFLL;
  v15 = 0;
  v16 = v6;
  swift_bridgeObjectRetain(a4);
  v8 = String.Iterator.next()();
  countAndFlagsBits = v8.value._countAndFlagsBits;
  if (v8.value._object)
  {
    object = v8.value._object;
    while (1)
    {
      v13[0] = countAndFlagsBits;
      v13[1] = object;
      v10 = a1(v13);
      swift_bridgeObjectRelease(object);
      if (v4 || (v10 & 1) != 0)
        break;
      v11 = String.Iterator.next()();
      countAndFlagsBits = v11.value._countAndFlagsBits;
      object = v11.value._object;
      if (!v11.value._object)
        goto LABEL_8;
    }
    swift_bridgeObjectRelease(v14);
    return 1;
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease(v14);
    return 0;
  }
}

uint64_t sub_1003DC0E0(uint64_t (*a1)(char *), char a2, uint64_t a3)
{
  return sub_1003DC120(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPUnknownItem) & 1;
}

uint64_t sub_1003DC100(uint64_t (*a1)(char *), char a2, uint64_t a3)
{
  return sub_1003DC120(a1, a2, a3, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPItem) & 1;
}

uint64_t sub_1003DC120(uint64_t (*a1)(char *), char a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v23;
  int64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t (*v30)(char *);
  uint64_t v31;

  v30 = a1;
  v7 = a4(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v27 - v12;
  v14 = *(_QWORD *)(a3 + 56);
  v28 = a3 + 56;
  v15 = 1 << *(_BYTE *)(a3 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v29 = (unint64_t)(v15 + 63) >> 6;
  v31 = a3;
  result = swift_bridgeObjectRetain(a3);
  v19 = 0;
  while (1)
  {
    if (v17)
    {
      v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v21 = v20 | (v19 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v19++, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v19 >= v29)
      goto LABEL_27;
    v23 = *(_QWORD *)(v28 + 8 * v19);
    if (!v23)
      break;
LABEL_18:
    v17 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v19 << 6);
LABEL_19:
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v13, *(_QWORD *)(v31 + 48) + *(_QWORD *)(v8 + 72) * v21, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v13, v7);
    v25 = v30(v11);
    if (v4)
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      swift_release(v31);
      return a2 & 1;
    }
    v26 = v25;
    result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    if ((v26 & 1) != 0)
    {
      a2 = 1;
      goto LABEL_28;
    }
  }
  v24 = v19 + 1;
  if (v19 + 1 >= v29)
    goto LABEL_27;
  v23 = *(_QWORD *)(v28 + 8 * v24);
  if (v23)
    goto LABEL_17;
  v24 = v19 + 2;
  if (v19 + 2 >= v29)
    goto LABEL_27;
  v23 = *(_QWORD *)(v28 + 8 * v24);
  if (v23)
    goto LABEL_17;
  v24 = v19 + 3;
  if (v19 + 3 >= v29)
    goto LABEL_27;
  v23 = *(_QWORD *)(v28 + 8 * v24);
  if (v23)
    goto LABEL_17;
  v24 = v19 + 4;
  if (v19 + 4 >= v29)
  {
LABEL_27:
    a2 = 0;
LABEL_28:
    swift_release(v31);
    return a2 & 1;
  }
  v23 = *(_QWORD *)(v28 + 8 * v24);
  if (v23)
  {
LABEL_17:
    v19 = v24;
    goto LABEL_18;
  }
  while (1)
  {
    v19 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v19 >= v29)
      goto LABEL_27;
    v23 = *(_QWORD *)(v28 + 8 * v19);
    ++v24;
    if (v23)
      goto LABEL_18;
  }
LABEL_31:
  __break(1u);
  return result;
}

void *FMDeviceState.markLostActive.unsafeMutableAddressor()
{
  return &static FMDeviceState.markLostActive;
}

void *FMDeviceState.markLostPending.unsafeMutableAddressor()
{
  return &static FMDeviceState.markLostPending;
}

void *FMDeviceCapabilities.canStopSound.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.canStopSound;
}

void *FMDeviceCapabilities.canPlayMultiChannelAudio.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.canPlayMultiChannelAudio;
}

void *FMDeviceCapabilities.supportsShowContactDetails.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.supportsShowContactDetails;
}

void *FMDeviceState.isDeviceWithYou.unsafeMutableAddressor()
{
  return &static FMDeviceState.isDeviceWithYou;
}

void *FMDeviceState.showContactDetailsActive.unsafeMutableAddressor()
{
  return &static FMDeviceState.showContactDetailsActive;
}

void *FMDeviceState.pairingIncomplete.unsafeMutableAddressor()
{
  return &static FMDeviceState.pairingIncomplete;
}

void *FMDeviceState.pairingLocked.unsafeMutableAddressor()
{
  return &static FMDeviceState.pairingLocked;
}

void *FMDeviceState.isInRepairMode.unsafeMutableAddressor()
{
  return &static FMDeviceState.isInRepairMode;
}

void *FMDeviceCapabilities.canPlaySound.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.canPlaySound;
}

void *FMDeviceCapabilities.supportNotifyWhenFound.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.supportNotifyWhenFound;
}

void *FMDeviceCapabilities.canEnableLeashing.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.canEnableLeashing;
}

void *FMDeviceCapabilities.supportsNotifyWhenDetached.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.supportsNotifyWhenDetached;
}

void *FMDeviceCapabilities.canRemoveOrRepair.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.canRemoveOrRepair;
}

void *FMDeviceCapabilities.canLockDevice.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.canLockDevice;
}

void *FMDeviceCapabilities.canEnableLostMode.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.canEnableLostMode;
}

void *FMDeviceState.isWipePending.unsafeMutableAddressor()
{
  return &static FMDeviceState.isWipePending;
}

void *FMDeviceCapabilities.canEraseDevice.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.canEraseDevice;
}

void *FMDeviceCapabilities.canGetDirections.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.canGetDirections;
}

void *FMDeviceCapabilities.canBTFind.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.canBTFind;
}

void *FMDeviceCapabilities.requiresBluetooth.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.requiresBluetooth;
}

void *FMDeviceState.deviceSeparationActive.unsafeMutableAddressor()
{
  return &static FMDeviceState.deviceSeparationActive;
}

void *FMDeviceState.notifyWhenDetachedActive.unsafeMutableAddressor()
{
  return &static FMDeviceState.notifyWhenDetachedActive;
}

void *FMDeviceState.notifyMeActive.unsafeMutableAddressor()
{
  return &static FMDeviceState.notifyMeActive;
}

void *FMDeviceCapabilities.canNotifyWhenFound.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.canNotifyWhenFound;
}

void *FMDeviceCapabilities.canRepair.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.canRepair;
}

void *FMDeviceState.lockActive.unsafeMutableAddressor()
{
  return &static FMDeviceState.lockActive;
}

void *FMDeviceState.lockPending.unsafeMutableAddressor()
{
  return &static FMDeviceState.lockPending;
}

void *FMDeviceState.stopLostPending.unsafeMutableAddressor()
{
  return &static FMDeviceState.stopLostPending;
}

void *FMDeviceCapabilities.canRemoveDevice.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.canRemoveDevice;
}

uint64_t sub_1003DC514(NSObject *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t (*v118)(char *, uint64_t, uint64_t);
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(char *, uint64_t);
  uint64_t v126;
  NSObject *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void (*v131)(char *, uint64_t);
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  __n128 v136;
  char *v137;
  uint8_t *v138;
  uint64_t v139;
  __n128 v140;
  uint64_t v141;
  uint64_t (*v142)(uint8_t *, uint64_t, uint64_t, __n128);
  uint64_t v143;
  uint8_t *v144;
  uint64_t v145;
  __n128 v146;
  _BOOL4 v147;
  uint64_t v148;
  uint64_t v149;
  __n128 v150;
  void (*v151)(NSObject *, uint64_t, uint64_t, uint64_t, __n128);
  uint8_t *v152;
  uint8_t *v153;
  uint64_t v154;
  uint8_t *v155;
  uint64_t v156;
  __n128 v157;
  uint64_t (*v158)(uint8_t *, uint64_t, uint64_t, __n128);
  int v159;
  uint64_t v160;
  __n128 v161;
  os_log_t v162;
  uint64_t v163;
  __n128 v164;
  void (*v165)(uint8_t *, uint64_t, uint64_t, uint64_t);
  uint8_t *v166;
  uint64_t v167;
  uint64_t v168;
  void (*v169)(char *, uint64_t, uint64_t, __n128);
  uint64_t v170;
  uint8_t *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  os_log_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  NSObject *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint8_t *v230;
  uint64_t v231;
  uint64_t v232;
  uint8_t *v233;
  uint8_t *v234;
  uint64_t v235;
  uint8_t *v236;
  uint64_t v237;
  uint64_t v238;
  os_log_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  NSObject *v243;
  uint8_t *v244;
  uint8_t *v245;
  uint8_t *v246;
  uint8_t *v247;
  uint8_t *v248;
  uint8_t *v249;
  uint8_t *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint8_t *v254;
  uint8_t *v255;
  uint64_t v256;
  uint8_t *v257;
  uint64_t v258;
  uint8_t *v259;
  NSObject *v260;
  os_log_t v261;
  uint8_t *v262;
  uint64_t v263;
  uint8_t *v264;
  uint8_t *v265;
  uint8_t *v266;
  uint8_t *v267;
  uint8_t *v268;
  uint8_t *v269;
  uint8_t *v270;
  uint64_t v271;
  uint8_t *v272;
  os_log_t v273;
  uint8_t *v274;
  NSObject *v275;
  NSObject *v276;
  uint64_t v277;
  uint64_t v278;
  uint8_t *v279;
  uint8_t *v280;
  os_log_t v281;
  uint8_t *v282;
  uint8_t *v283;
  uint64_t v284;
  NSObject *v285;
  uint8_t *v286;
  uint64_t v287;
  uint64_t v288;
  __n128 v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  int v301;
  uint64_t (*v302)(char *, uint64_t, uint64_t);
  _QWORD *v303;
  uint8_t *v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  NSObject *v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  os_log_t v318;
  uint8_t *v319;
  uint64_t v320;
  NSObject *v321;
  uint64_t v322;
  os_log_t v323;
  uint8_t *v324;
  uint64_t v325;
  char *v326;
  __n128 v327;
  uint8_t *v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  os_log_t v342;
  _WORD *v343;
  uint64_t v344;
  char *v345;
  os_log_t v346;
  uint64_t v347;
  uint64_t v348;
  __n128 v349;
  void (**v350)(uint64_t, char *);
  char *v351;
  int v352;
  uint8_t *v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  os_log_t v367;
  uint8_t *v368;
  uint64_t v369;
  char *v370;
  NSObject *v371;
  uint64_t v372;
  os_log_t v373;
  uint8_t *v374;
  uint64_t v375;
  int v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  char *v383;
  uint64_t v384;
  uint64_t v385;
  char v386;
  uint64_t v387;
  void (*v388)(uint64_t, uint64_t);
  uint64_t v389;
  uint64_t v390;
  __n128 v391;
  uint64_t v392;
  __n128 v393;
  uint8_t *v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  NSObject *v408;
  _WORD *v409;
  uint64_t v410;
  char *v411;
  os_log_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  __n128 v416;
  uint8_t *v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  NSObject *v431;
  _WORD *v432;
  uint64_t v433;
  char *v434;
  os_log_t v435;
  uint64_t v436;
  __n128 v437;
  __n128 v438;
  uint8_t *v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  NSObject *v453;
  _WORD *v454;
  uint64_t v455;
  char *v456;
  os_log_type_t v457;
  const char *v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  BOOL v462;
  uint8_t *v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  os_log_t v477;
  _WORD *v478;
  uint64_t v479;
  char *v480;
  os_log_t v481;
  uint64_t v482;
  uint8_t *v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t inited;
  uint64_t v496;
  NSObject *v497;
  _WORD *v498;
  uint64_t v499;
  char *v500;
  os_log_t v501;
  uint64_t v502;
  __n128 v503;
  uint64_t v504;
  uint64_t v505;
  unint64_t v506;
  uint64_t v507;
  uint64_t (*v508)(uint64_t, uint64_t, uint64_t);
  uint64_t v509;
  int v510;
  uint64_t v511;
  uint64_t v512;
  int v513;
  __n128 v514;
  uint8_t *v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  NSObject *v530;
  _WORD *v531;
  uint64_t v532;
  char *v533;
  char *v534;
  uint8_t *v535;
  uint64_t v536;
  char *v537;
  uint64_t v538;
  char *v539;
  char *v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  char *v544;
  BOOL v545;
  void (*v546)(char *, uint64_t);
  uint64_t v547;
  char *v548;
  char *v549;
  uint64_t v550;
  uint64_t v551;
  char *v552;
  uint64_t v553;
  char *v554;
  double v555;
  void (*v556)(char *, uint64_t);
  char *v557;
  uint64_t v558;
  uint8_t *v559;
  uint64_t v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  os_log_t v573;
  _WORD *v574;
  uint64_t v575;
  char *v576;
  os_log_t v577;
  uint64_t v578;
  __n128 v579;
  unsigned int v580;
  unsigned int v581;
  __n128 v582;
  uint64_t v583;
  char *v584;
  char *v585;
  uint64_t v586;
  uint64_t (**v587)(char *, uint64_t);
  int v588;
  int v589;
  unsigned int v590;
  int v591;
  __n128 v592;
  __n128 v593;
  uint8_t *v594;
  uint64_t v595;
  uint64_t v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  uint64_t v607;
  NSObject *v608;
  _WORD *v609;
  os_log_t v610;
  uint64_t v611;
  char *v612;
  __n128 v613;
  __n128 v614;
  char *v615;
  __n128 v616;
  uint8_t *v617;
  uint64_t v618;
  uint64_t v619;
  uint64_t v620;
  uint64_t v621;
  uint64_t v622;
  uint64_t v623;
  uint64_t v624;
  uint64_t v625;
  uint64_t v626;
  uint64_t v627;
  uint64_t v628;
  uint64_t v629;
  uint64_t v630;
  NSObject *v631;
  _WORD *v632;
  uint64_t v633;
  char *v634;
  uint8_t *v635;
  uint64_t v636;
  uint64_t v637;
  uint8_t *v638;
  uint64_t v639;
  uint64_t v640;
  uint64_t v641;
  uint64_t v642;
  uint64_t v643;
  uint64_t v644;
  uint64_t v645;
  uint64_t v646;
  uint64_t v647;
  uint64_t v648;
  uint64_t v649;
  uint64_t v650;
  uint64_t v651;
  os_log_t v652;
  _WORD *v653;
  uint64_t v654;
  char *v655;
  os_log_t v656;
  uint64_t v657;
  __n128 v658;
  uint8_t *v659;
  uint64_t v660;
  uint64_t v661;
  uint64_t v662;
  uint64_t v663;
  uint64_t v664;
  uint64_t v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  uint64_t v669;
  uint64_t v670;
  uint64_t v671;
  uint64_t v672;
  uint64_t v673;
  uint64_t v674;
  uint64_t v675;
  os_log_t v676;
  uint64_t v677;
  uint8_t *v678;
  uint64_t v679;
  uint8_t *v680;
  uint64_t v681;
  uint8_t *v682;
  uint8_t *v683;
  uint64_t v684;
  os_log_t v685;
  uint8_t *v686;
  uint64_t v687;
  uint8_t *v688;
  uint8_t *v689;
  uint64_t v690;
  uint64_t v691;
  uint64_t v692;
  uint64_t v693;
  uint64_t v694;
  uint8_t *v695;
  uint64_t v696;
  uint8_t *v697;
  NSObject *v698;
  uint8_t *v699;
  uint64_t v700;
  uint64_t result;
  __n128 v702;
  __n128 v703;
  uint64_t v704;
  __n128 v705;
  uint64_t v706;
  uint64_t v707;
  __n128 v708;
  uint8_t *v709;
  uint64_t v710;
  uint64_t v711;
  uint64_t v712;
  uint64_t v713;
  uint64_t v714;
  uint64_t v715;
  uint64_t v716;
  uint64_t v717;
  uint64_t v718;
  uint64_t v719;
  uint64_t v720;
  uint64_t v721;
  uint64_t v722;
  os_log_t v723;
  _WORD *v724;
  uint64_t v725;
  char *v726;
  os_log_t v727;
  uint64_t v728;
  __n128 v729;
  int v730;
  int v731;
  __n128 v732;
  __n128 v733;
  uint64_t v734;
  uint64_t v735;
  char *v736;
  int v737;
  unsigned int v738;
  int v739;
  char *v740;
  uint64_t v741;
  uint64_t v742;
  uint8_t *v743;
  uint64_t v744;
  uint64_t v745;
  uint64_t v746;
  uint64_t v747;
  uint8_t *v748;
  uint64_t v749;
  uint64_t v750;
  uint64_t v751;
  uint64_t v752;
  uint64_t v753;
  uint64_t v754;
  uint64_t v755;
  uint64_t v756;
  uint64_t v757;
  uint64_t v758;
  uint64_t v759;
  NSObject *v760;
  uint8_t *v761;
  uint8_t *v762;
  uint8_t *v763;
  uint8_t *v764;
  uint8_t *v765;
  uint64_t v766;
  NSObject *v767;
  uint8_t *v768;
  uint64_t v769;
  uint8_t *v770;
  uint8_t *v771;
  uint8_t *v772;
  uint64_t v773;
  uint64_t v774;
  uint64_t v775;
  char *v776;
  uint64_t v777;
  os_log_t v778;
  uint64_t v779;
  void (*v780)(char *, uint64_t);
  char *v781;
  unsigned int v782;
  BOOL v783;
  BOOL v784;
  unsigned int v785;
  unsigned int v786;
  BOOL v787;
  BOOL v788;
  uint8_t *v789;
  uint64_t v790;
  uint64_t v791;
  uint64_t v792;
  uint64_t v793;
  uint64_t v794;
  uint64_t v795;
  uint64_t v796;
  uint64_t v797;
  uint64_t v798;
  uint64_t v799;
  uint64_t v800;
  uint64_t v801;
  uint64_t v802;
  uint64_t v803;
  uint64_t v804;
  uint64_t v805;
  uint64_t v806;
  uint64_t v807;
  uint64_t v808;
  uint64_t v809;
  uint64_t v810;
  uint64_t v811;
  uint64_t v812;
  uint64_t v813;
  uint64_t v814;
  char *v815;
  uint64_t v816;
  uint64_t v817;
  uint64_t v818;
  uint64_t v819;
  uint64_t v820;
  uint64_t v821;
  uint64_t v822;
  uint64_t v823;
  uint64_t v824;
  uint64_t v825;
  uint64_t v826;
  os_log_t v827;
  uint64_t v828;
  uint64_t v829;
  NSObject *v830;
  uint64_t v831;
  os_log_t v832;
  uint64_t v833;
  uint64_t v834;
  NSObject *v835;
  uint64_t v836;
  uint64_t v837;
  uint64_t v838;
  uint8_t *v839;
  _QWORD *v840;
  char *v841;
  uint8_t *v842;
  char *v843;
  uint64_t v844;
  uint64_t v845;
  uint64_t v846;
  NSObject *v847;
  uint8_t *v848;
  uint8_t *v849;
  uint8_t *v850;
  uint64_t v851;
  uint64_t v852;
  uint8_t *v853;
  uint8_t *v854;
  uint8_t *v855;
  uint8_t *v856;
  char *v857;
  uint8_t *v858;
  uint64_t v859;
  uint8_t *v860;
  uint8_t *v861;
  uint8_t *v862;
  uint8_t *v863;
  uint8_t *v864;
  uint64_t v865;
  uint8_t *v866;
  uint64_t v867;
  uint64_t v868;
  char *v869;
  uint64_t v870;
  uint64_t v871;
  uint64_t v872;
  NSObject *v873;
  uint8_t *v874;
  uint8_t *v875;
  uint8_t *v876;
  uint8_t *v877;
  uint8_t *v878;
  os_log_t v879;
  uint64_t v880;
  os_log_t v881;
  os_log_t v882;
  uint8_t *v883;
  uint64_t v884;
  uint64_t v885;
  char *v886;
  uint64_t v887;
  uint64_t v888;
  char *v889;
  BOOL v890;
  void (*v891)(char *, uint64_t);
  uint64_t v892;
  uint8_t *v893;
  char *v894;
  char *v895;
  char *v896;
  char *v897;
  uint64_t v898;
  uint64_t v899;
  char *v900;
  char *v901;
  char *v902;
  char *v903;
  char *v904;
  uint64_t v905;
  char *v906;
  uint64_t v907;
  uint64_t v908;
  char *v909;
  char *v910;
  char *v911;
  char *v912;
  char *v913;
  char *v914;
  int v915;
  uint64_t (**v916)(char *, uint64_t);
  uint64_t v917;
  char *v918;
  _BOOL4 v919;
  char *v920;
  char *v921;
  uint64_t v922;
  uint64_t v923;
  char *v924;
  char *v925;
  char *v926;
  char *v927;
  char *v928;
  uint64_t v929;
  uint64_t v930;
  uint64_t v931;
  uint64_t v932;
  char *v933;
  void (**v934)(uint64_t, char *);
  uint64_t (*v935)(char *, uint64_t, uint64_t);
  char *v936;
  uint64_t v937;
  uint64_t v938;
  uint64_t v939;
  uint8_t *v940;
  uint8_t *v941;
  char *v942;
  uint64_t v943;
  uint64_t v944;
  char *v945;
  _QWORD *v946;
  char *v947;
  uint64_t v948;
  _BOOL4 v949;
  int v950;
  uint64_t v951;
  int v952;
  int v953;
  uint64_t v954;
  int v955;
  uint64_t v956;
  uint64_t v957;
  char *v958;
  uint64_t v959;
  uint64_t v960;
  uint64_t v961;
  uint64_t v962;
  uint64_t v963;
  uint64_t v964;
  uint8_t *v965;
  uint64_t v966;
  uint8_t *v967;
  uint64_t v968;
  uint8_t *v969;
  _QWORD *v970;
  char *v971;
  char *v972;
  uint64_t v973;
  char *v974;
  uint64_t v975;
  uint64_t v976;
  uint64_t v977;
  os_log_t v978;
  uint8_t *v979;
  uint64_t v980;
  uint64_t v981;
  uint64_t v982;
  uint64_t v983;
  void (*v984)(uint64_t, uint8_t *, uint64_t);
  uint64_t v985;
  char *v986;
  uint64_t v987;
  void (*v988)(uint8_t *, NSObject *, uint64_t);
  uint64_t v989;
  void (*v990)(char *, uint64_t, uint64_t, __n128);
  char *v991;
  uint64_t v992;
  uint64_t v993;
  uint64_t v994;
  uint8_t *v995;
  uint64_t v996;
  uint64_t v997;
  uint64_t v998;
  uint64_t v999;
  uint64_t v1000;
  NSObject *v1001;
  uint8_t *v1002;
  uint8_t *v1003;
  __int128 v1004;
  os_log_t v1005;
  os_log_t v1006;
  uint64_t v1007;
  uint64_t v1008;
  uint64_t v1009;
  uint8_t *v1010;
  uint64_t v1011;
  NSObject *v1012;
  uint64_t v1013;
  uint64_t (*v1014)(uint64_t, uint64_t, uint64_t);
  uint8_t *v1015;
  uint64_t v1016;
  uint64_t v1017;
  uint8_t *v1018;
  uint64_t v1019;
  char v1020[144];

  v946 = a2;
  v3 = 0;
  v4 = type metadata accessor for FMIPItemState(0);
  v922 = *(_QWORD *)(v4 - 8);
  v923 = v4;
  v5 = __chkstk_darwin(v4);
  v921 = (char *)&v892 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v920 = (char *)&v892 - v7;
  v8 = type metadata accessor for Date(0);
  v898 = *(_QWORD *)(v8 - 8);
  v899 = v8;
  v9 = __chkstk_darwin(v8);
  v897 = (char *)&v892 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v896 = (char *)&v892 - v11;
  v12 = type metadata accessor for FMIPPartType(0);
  v916 = *(uint64_t (***)(char *, uint64_t))(v12 - 8);
  v917 = v12;
  v13 = __chkstk_darwin(v12);
  v914 = (char *)&v892 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v895 = (char *)&v892 - v15;
  v959 = type metadata accessor for FMIPItem(0);
  v960 = *(_QWORD *)(v959 - 8);
  v16 = __chkstk_darwin(v959);
  v933 = (char *)&v892 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v904 = (char *)&v892 - v18;
  v19 = sub_100053F2C((uint64_t *)&unk_1005E3B10);
  v20 = __chkstk_darwin(v19);
  v908 = (uint64_t)&v892 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v907 = (uint64_t)&v892 - v22;
  v23 = type metadata accessor for FMIPActionStatus(0);
  v937 = *(_QWORD *)(v23 - 8);
  v938 = v23;
  v24 = __chkstk_darwin(v23);
  v910 = (char *)&v892 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __chkstk_darwin(v24);
  v911 = (char *)&v892 - v27;
  __chkstk_darwin(v26);
  v934 = (void (**)(uint64_t, char *))((char *)&v892 - v28);
  v29 = sub_100053F2C(&qword_1005D9968);
  __chkstk_darwin(v29);
  v945 = (char *)&v892 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for FMIPPlaySoundMetadata(0);
  v956 = *(_QWORD *)(v31 - 8);
  v957 = v31;
  v32 = __chkstk_darwin(v31);
  v906 = (char *)&v892 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  v958 = (char *)&v892 - v34;
  v943 = sub_100053F2C(&qword_1005E3AB8);
  v35 = __chkstk_darwin(v943);
  v944 = (uint64_t)&v892 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  v973 = (uint64_t)&v892 - v37;
  v1011 = type metadata accessor for FMIPDevice(0);
  v1007 = *(_QWORD *)(v1011 - 8);
  __chkstk_darwin(v1011);
  v1006 = v38;
  v1010 = (uint8_t *)&v892 - (((unint64_t)&v38[1].isa + 7) & 0xFFFFFFFFFFFFFFF0);
  v1013 = type metadata accessor for Logger(0);
  v1008 = *(_QWORD *)(v1013 - 8);
  v39 = __chkstk_darwin(v1013);
  v972 = (char *)&v892 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __chkstk_darwin(v39);
  v924 = (char *)&v892 - v42;
  v43 = __chkstk_darwin(v41);
  v912 = (char *)&v892 - v44;
  v45 = __chkstk_darwin(v43);
  v925 = (char *)&v892 - v46;
  v47 = __chkstk_darwin(v45);
  v927 = (char *)&v892 - v48;
  v49 = __chkstk_darwin(v47);
  v926 = (char *)&v892 - v50;
  v51 = __chkstk_darwin(v49);
  v936 = (char *)&v892 - v52;
  v53 = __chkstk_darwin(v51);
  v918 = (char *)&v892 - v54;
  v55 = __chkstk_darwin(v53);
  v894 = (char *)&v892 - v56;
  v57 = __chkstk_darwin(v55);
  v913 = (char *)&v892 - v58;
  v59 = __chkstk_darwin(v57);
  v902 = (char *)&v892 - v60;
  v61 = __chkstk_darwin(v59);
  v909 = (char *)&v892 - v62;
  v63 = __chkstk_darwin(v61);
  v903 = (char *)&v892 - v64;
  v65 = __chkstk_darwin(v63);
  v901 = (char *)&v892 - v66;
  v67 = __chkstk_darwin(v65);
  v900 = (char *)&v892 - v68;
  v69 = __chkstk_darwin(v67);
  v928 = (char *)&v892 - v70;
  v71 = __chkstk_darwin(v69);
  v947 = (char *)&v892 - v72;
  __chkstk_darwin(v71);
  v969 = (uint8_t *)&v892 - v73;
  v74 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  v75 = __chkstk_darwin(v74);
  v942 = (char *)&v892 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __chkstk_darwin(v75);
  v905 = (uint64_t)&v892 - v78;
  v79 = __chkstk_darwin(v77);
  v975 = (uint64_t)&v892 - v80;
  v81 = __chkstk_darwin(v79);
  v1005 = (os_log_t)((char *)&v892 - v82);
  v83 = __chkstk_darwin(v81);
  *(_QWORD *)&v1004 = (char *)&v892 - v84;
  v85 = __chkstk_darwin(v83);
  v1003 = (uint8_t *)&v892 - v86;
  v87 = __chkstk_darwin(v85);
  v1009 = (uint64_t)&v892 - v88;
  v89 = __chkstk_darwin(v87);
  v1002 = (uint8_t *)&v892 - v90;
  __chkstk_darwin(v89);
  v1001 = ((char *)&v892 - v91);
  v92 = type metadata accessor for FMIPFeatures(0);
  v1000 = *(_QWORD *)(v92 - 8);
  v93 = __chkstk_darwin(v92);
  v95 = (char *)&v892 - ((v94 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v93);
  v97 = (char *)&v892 - v96;
  v98 = sub_100053F2C(&qword_1005D72D0);
  v99 = __chkstk_darwin(v98);
  v929 = (uint64_t)&v892 - ((v100 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = __chkstk_darwin(v99);
  v932 = (uint64_t)&v892 - v102;
  v103 = __chkstk_darwin(v101);
  v931 = (uint64_t)&v892 - v104;
  v105 = __chkstk_darwin(v103);
  v930 = (uint64_t)&v892 - v106;
  v107 = __chkstk_darwin(v105);
  v109 = (char *)&v892 - v108;
  v110 = __chkstk_darwin(v107);
  v112 = (char *)&v892 - v111;
  v113 = __chkstk_darwin(v110);
  v115 = (char *)&v892 - v114;
  v1012 = a1;
  FMIPDevice.itemGroup.getter(v113);
  v991 = v115;
  sub_100007464((uint64_t)v115, (uint64_t)v112, &qword_1005D72D0);
  v116 = type metadata accessor for FMIPItemGroup(0);
  v117 = *(_QWORD *)(v116 - 8);
  v118 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v117 + 48);
  v119 = v118(v112, 1, v116);
  v939 = v117;
  if ((_DWORD)v119 == 1)
  {
    sub_1000051EC((uint64_t)v112, &qword_1005D72D0);
    v971 = 0;
  }
  else
  {
    v999 = 0;
    v120 = v97;
    v121 = v95;
    v122 = v92;
    v123 = v117;
    v124 = FMIPItemGroup.items.getter(v119);
    v125 = *(void (**)(char *, uint64_t))(v123 + 8);
    v92 = v122;
    v95 = v121;
    v97 = v120;
    v125(v112, v116);
    v3 = v999;
    v971 = sub_1003F4924(v124);
    swift_bridgeObjectRelease(v124);
  }
  sub_100007464((uint64_t)v991, (uint64_t)v109, &qword_1005D72D0);
  v935 = v118;
  v126 = v118(v109, 1, v116);
  v127 = v1012;
  if ((_DWORD)v126 == 1)
  {
    v128 = sub_1000051EC((uint64_t)v109, &qword_1005D72D0);
    v970 = 0;
  }
  else
  {
    v129 = FMIPItemGroup.items.getter(v126);
    (*(void (**)(char *, uint64_t))(v939 + 8))(v109, v116);
    v970 = sub_1003F4BD4(v129);
    swift_bridgeObjectRelease(v129);
  }
  v948 = v116;
  v130 = FMIPDevice.features.getter(v128);
  static FMIPFeatures.isMultiChannelSoundEnabled.getter(v130);
  v953 = sub_10012A664((uint64_t)v95);
  v131 = *(void (**)(char *, uint64_t))(v1000 + 8);
  v131(v95, v92);
  v132 = ((uint64_t (*)(char *, uint64_t))v131)(v97, v92);
  v133 = FMIPDevice.features.getter(v132);
  static FMIPFeatures.isStopSoundSupported.getter(v133);
  v950 = sub_10012A664((uint64_t)v95);
  v131(v95, v92);
  v134 = ((uint64_t (*)(char *, uint64_t))v131)(v97, v92);
  v135 = FMIPDevice.audioChannels.getter(v134);
  v974 = sub_1003F4F28(v135);
  v136 = swift_bridgeObjectRelease(v135);
  v137 = v971;
  if (!v971)
  {
    v141 = v960;
    v151 = *(void (**)(NSObject *, uint64_t, uint64_t, uint64_t, __n128))(v960 + 56);
    v152 = (uint8_t *)v1001;
    v143 = v959;
    v151(v1001, 1, 1, v959, v136);
    sub_1000051EC((uint64_t)v152, (uint64_t *)&unk_1005D3AA0);
    v153 = v1002;
    ((void (*)(uint8_t *, uint64_t, uint64_t, uint64_t))v151)(v1002, 1, 1, v143);
    sub_1000051EC((uint64_t)v153, (uint64_t *)&unk_1005D3AA0);
    v148 = v1009;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v151)(v1009, 1, 1, v143);
    v147 = 0;
    v949 = 0;
    goto LABEL_11;
  }
  swift_bridgeObjectRetain(v971);
  v138 = (uint8_t *)v1001;
  sub_1003DB368(v139, (unsigned int *)&enum case for FMIPPartType.leftBud(_:), (uint64_t)v1001);
  v140 = swift_bridgeObjectRelease(v137);
  v141 = v960;
  v142 = *(uint64_t (**)(uint8_t *, uint64_t, uint64_t, __n128))(v960 + 48);
  v952 = 1;
  v143 = v959;
  v949 = v142(v138, 1, v959, v140) != 1;
  sub_1000051EC((uint64_t)v138, (uint64_t *)&unk_1005D3AA0);
  swift_bridgeObjectRetain(v137);
  v144 = v1002;
  sub_1003DB368(v145, (unsigned int *)&enum case for FMIPPartType.rightBud(_:), (uint64_t)v1002);
  v146 = swift_bridgeObjectRelease(v137);
  v147 = v142(v144, 1, v143, v146) != 1;
  sub_1000051EC((uint64_t)v144, (uint64_t *)&unk_1005D3AA0);
  swift_bridgeObjectRetain(v137);
  v148 = v1009;
  sub_1003DB368(v149, (unsigned int *)&enum case for FMIPPartType.case(_:), v1009);
  v150 = swift_bridgeObjectRelease(v137);
  if (v142((uint8_t *)v148, 1, v143, v150) == 1)
LABEL_11:
    v952 = 0;
  sub_1000051EC(v148, (uint64_t *)&unk_1005D3AA0);
  v154 = (uint64_t)v970;
  if (!v970)
  {
    v1009 = v3;
    v165 = *(void (**)(uint8_t *, uint64_t, uint64_t, uint64_t))(v141 + 56);
    v166 = v1003;
    v165(v1003, 1, 1, v143);
    sub_1000051EC((uint64_t)v166, (uint64_t *)&unk_1005D3AA0);
    v167 = v1004;
    v165((uint8_t *)v1004, 1, 1, v143);
    sub_1000051EC(v167, (uint64_t *)&unk_1005D3AA0);
    v162 = v1005;
    v165((uint8_t *)v1005, 1, 1, v143);
    v951 = 0;
    goto LABEL_16;
  }
  swift_bridgeObjectRetain(v970);
  v155 = v1003;
  sub_1003DB368(v156, (unsigned int *)&enum case for FMIPPartType.leftBud(_:), (uint64_t)v1003);
  v157 = swift_bridgeObjectRelease(v154);
  v158 = *(uint64_t (**)(uint8_t *, uint64_t, uint64_t, __n128))(v141 + 48);
  v159 = 1;
  LODWORD(v951) = v158(v155, 1, v143, v157) != 1;
  sub_1000051EC((uint64_t)v155, (uint64_t *)&unk_1005D3AA0);
  swift_bridgeObjectRetain(v154);
  v160 = v1004;
  sub_1003DB368(v154, (unsigned int *)&enum case for FMIPPartType.rightBud(_:), v1004);
  v161 = swift_bridgeObjectRelease(v154);
  HIDWORD(v951) = v158((uint8_t *)v160, 1, v143, v161) != 1;
  sub_1000051EC(v160, (uint64_t *)&unk_1005D3AA0);
  swift_bridgeObjectRetain(v154);
  v162 = v1005;
  sub_1003DB368(v163, (unsigned int *)&enum case for FMIPPartType.case(_:), (uint64_t)v1005);
  v1009 = v3;
  v164 = swift_bridgeObjectRelease(v154);
  if (v158((uint8_t *)v162, 1, v143, v164) == 1)
LABEL_16:
    v159 = 0;
  sub_1000051EC((uint64_t)v162, (uint64_t *)&unk_1005D3AA0);
  v168 = sub_100197C74();
  v169 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v1008 + 16);
  v989 = v168;
  v990 = v169;
  ((void (*)(uint8_t *))v169)(v969);
  v170 = v1007;
  v171 = v1010;
  v172 = v1011;
  v988 = *(void (**)(uint8_t *, NSObject *, uint64_t))(v1007 + 16);
  v988(v1010, v127, v1011);
  v173 = *(unsigned __int8 *)(v170 + 80);
  v174 = (v173 + 16) & ~v173;
  v986 = (char *)v1006 + v174;
  v985 = v173 | 7;
  v175 = swift_allocObject(&unk_100561BF0, (char *)v1006 + v174, v173 | 7);
  v987 = v174;
  v984 = *(void (**)(uint64_t, uint8_t *, uint64_t))(v170 + 32);
  v984(v175 + v174, v171, v172);
  v176 = swift_allocObject(&unk_100561C18, 17, 7);
  *(_BYTE *)(v176 + 16) = v953 & 1;
  LODWORD(v172) = v159;
  v177 = swift_allocObject(&unk_100561C40, 17, 7);
  *(_BYTE *)(v177 + 16) = v950 & 1;
  v178 = swift_allocObject(&unk_100561C68, 24, 7);
  v179 = v974;
  *(_QWORD *)(v178 + 16) = v974;
  v180 = swift_allocObject(&unk_100561C90, 17, 7);
  *(_BYTE *)(v180 + 16) = v949;
  v1006 = (os_log_t)swift_allocObject(&unk_100561CB8, 17, 7);
  v919 = v147;
  LOBYTE(v1006[2].isa) = v147;
  *(_QWORD *)&v1004 = swift_allocObject(&unk_100561CE0, 17, 7);
  *(_BYTE *)(v1004 + 16) = v952;
  v982 = swift_allocObject(&unk_100561D08, 17, 7);
  *(_BYTE *)(v982 + 16) = v951;
  v981 = swift_allocObject(&unk_100561D30, 17, 7);
  *(_BYTE *)(v981 + 16) = BYTE4(v951);
  v983 = swift_allocObject(&unk_100561D58, 17, 7);
  v915 = v172;
  *(_BYTE *)(v983 + 16) = v172;
  swift_bridgeObjectRetain(v179);
  v954 = Logger.logObject.getter(v181);
  v955 = static os_log_type_t.default.getter(v954);
  v964 = swift_allocObject(&unk_100561D80, 17, 7);
  *(_BYTE *)(v964 + 16) = 112;
  v963 = swift_allocObject(&unk_100561DA8, 17, 7);
  *(_BYTE *)(v963 + 16) = 8;
  v182 = swift_allocObject(&unk_100561DD0, 24, 7);
  *(_QWORD *)(v182 + 16) = 1752392040;
  v183 = swift_allocObject(&unk_100561DF8, 32, 7);
  v965 = (uint8_t *)v183;
  *(_QWORD *)(v183 + 16) = sub_1003F66A0;
  *(_QWORD *)(v183 + 24) = v182;
  v966 = swift_allocObject(&unk_100561E20, 17, 7);
  *(_BYTE *)(v966 + 16) = 33;
  v962 = swift_allocObject(&unk_100561E48, 17, 7);
  *(_BYTE *)(v962 + 16) = 8;
  v184 = swift_allocObject(&unk_100561E70, 32, 7);
  *(_QWORD *)(v184 + 16) = sub_1003F65B4;
  *(_QWORD *)(v184 + 24) = v175;
  v185 = swift_allocObject(&unk_100561E98, 32, 7);
  *(_QWORD *)(v185 + 16) = sub_100021E78;
  *(_QWORD *)(v185 + 24) = v184;
  v994 = swift_allocObject(&unk_100561EC0, 17, 7);
  *(_BYTE *)(v994 + 16) = 0;
  v993 = swift_allocObject(&unk_100561EE8, 17, 7);
  *(_BYTE *)(v993 + 16) = 4;
  v186 = swift_allocObject(&unk_100561F10, 32, 7);
  *(_QWORD *)(v186 + 16) = sub_1003F65C8;
  *(_QWORD *)(v186 + 24) = v176;
  v187 = swift_allocObject(&unk_100561F38, 32, 7);
  *(_QWORD *)(v187 + 16) = sub_1003F66EC;
  *(_QWORD *)(v187 + 24) = v186;
  v188 = swift_allocObject(&unk_100561F60, 32, 7);
  *(_QWORD *)(v188 + 16) = sub_100021E78;
  *(_QWORD *)(v188 + 24) = v187;
  v189 = swift_allocObject(&unk_100561F88, 32, 7);
  v997 = v189;
  *(_QWORD *)(v189 + 16) = sub_1003F66F4;
  *(_QWORD *)(v189 + 24) = v188;
  v1001 = swift_allocObject(&unk_100561FB0, 17, 7);
  LOBYTE(v1001[2].isa) = 0;
  v1005 = (os_log_t)swift_allocObject(&unk_100561FD8, 17, 7);
  LOBYTE(v1005[2].isa) = 4;
  v190 = swift_allocObject(&unk_100562000, 32, 7);
  *(_QWORD *)(v190 + 16) = sub_1003F70DC;
  *(_QWORD *)(v190 + 24) = v177;
  v191 = swift_allocObject(&unk_100562028, 32, 7);
  *(_QWORD *)(v191 + 16) = sub_1003F70D0;
  *(_QWORD *)(v191 + 24) = v190;
  v192 = swift_allocObject(&unk_100562050, 32, 7);
  *(_QWORD *)(v192 + 16) = sub_1001D60BC;
  *(_QWORD *)(v192 + 24) = v191;
  v193 = swift_allocObject(&unk_100562078, 32, 7);
  v995 = (uint8_t *)v193;
  *(_QWORD *)(v193 + 16) = sub_1003F72C8;
  *(_QWORD *)(v193 + 24) = v192;
  v999 = swift_allocObject(&unk_1005620A0, 17, 7);
  *(_BYTE *)(v999 + 16) = 0;
  v1003 = (uint8_t *)swift_allocObject(&unk_1005620C8, 17, 7);
  v1003[16] = 8;
  v194 = swift_allocObject(&unk_1005620F0, 32, 7);
  *(_QWORD *)(v194 + 16) = sub_1003F6604;
  *(_QWORD *)(v194 + 24) = v178;
  v195 = swift_allocObject(&unk_100562118, 32, 7);
  *(_QWORD *)(v195 + 16) = sub_1003F6744;
  *(_QWORD *)(v195 + 24) = v194;
  v196 = swift_allocObject(&unk_100562140, 17, 7);
  *(_BYTE *)(v196 + 16) = 0;
  v197 = v196;
  v992 = swift_allocObject(&unk_100562168, 17, 7);
  *(_BYTE *)(v992 + 16) = 4;
  v198 = swift_allocObject(&unk_100562190, 32, 7);
  *(_QWORD *)(v198 + 16) = sub_1003F70DC;
  *(_QWORD *)(v198 + 24) = v180;
  v199 = swift_allocObject(&unk_1005621B8, 32, 7);
  *(_QWORD *)(v199 + 16) = sub_1003F70D0;
  *(_QWORD *)(v199 + 24) = v198;
  v200 = swift_allocObject(&unk_1005621E0, 32, 7);
  *(_QWORD *)(v200 + 16) = sub_1001D60BC;
  *(_QWORD *)(v200 + 24) = v199;
  v201 = swift_allocObject(&unk_100562208, 32, 7);
  v967 = (uint8_t *)v201;
  *(_QWORD *)(v201 + 16) = sub_1003F72C8;
  *(_QWORD *)(v201 + 24) = v200;
  v968 = swift_allocObject(&unk_100562230, 17, 7);
  *(_BYTE *)(v968 + 16) = 0;
  v1007 = swift_allocObject(&unk_100562258, 17, 7);
  *(_BYTE *)(v1007 + 16) = 4;
  v202 = swift_allocObject(&unk_100562280, 32, 7);
  v203 = v1006;
  *(_QWORD *)(v202 + 16) = sub_1003F70DC;
  *(_QWORD *)(v202 + 24) = v203;
  v204 = swift_allocObject(&unk_1005622A8, 32, 7);
  *(_QWORD *)(v204 + 16) = sub_1003F70D0;
  *(_QWORD *)(v204 + 24) = v202;
  v961 = v185;
  v205 = swift_allocObject(&unk_1005622D0, 32, 7);
  *(_QWORD *)(v205 + 16) = sub_1001D60BC;
  *(_QWORD *)(v205 + 24) = v204;
  v206 = swift_allocObject(&unk_1005622F8, 32, 7);
  v998 = v206;
  *(_QWORD *)(v206 + 16) = sub_1003F72C8;
  *(_QWORD *)(v206 + 24) = v205;
  v1002 = (uint8_t *)swift_allocObject(&unk_100562320, 17, 7);
  v1002[16] = 0;
  v1006 = (os_log_t)swift_allocObject(&unk_100562348, 17, 7);
  LOBYTE(v1006[2].isa) = 4;
  v207 = swift_allocObject(&unk_100562370, 32, 7);
  v208 = v1004;
  *(_QWORD *)(v207 + 16) = sub_1003F70DC;
  *(_QWORD *)(v207 + 24) = v208;
  v209 = swift_allocObject(&unk_100562398, 32, 7);
  *(_QWORD *)(v209 + 16) = sub_1003F70D0;
  *(_QWORD *)(v209 + 24) = v207;
  v210 = swift_allocObject(&unk_1005623C0, 32, 7);
  *(_QWORD *)(v210 + 16) = sub_1001D60BC;
  *(_QWORD *)(v210 + 24) = v209;
  v211 = swift_allocObject(&unk_1005623E8, 32, 7);
  v996 = v211;
  *(_QWORD *)(v211 + 16) = sub_1003F72C8;
  *(_QWORD *)(v211 + 24) = v210;
  v1000 = swift_allocObject(&unk_100562410, 17, 7);
  *(_BYTE *)(v1000 + 16) = 0;
  *(_QWORD *)&v1004 = swift_allocObject(&unk_100562438, 17, 7);
  *(_BYTE *)(v1004 + 16) = 4;
  v212 = swift_allocObject(&unk_100562460, 32, 7);
  v213 = v982;
  *(_QWORD *)(v212 + 16) = sub_1003F70DC;
  *(_QWORD *)(v212 + 24) = v213;
  v214 = swift_allocObject(&unk_100562488, 32, 7);
  *(_QWORD *)(v214 + 16) = sub_1003F70D0;
  *(_QWORD *)(v214 + 24) = v212;
  v215 = swift_allocObject(&unk_1005624B0, 32, 7);
  *(_QWORD *)(v215 + 16) = sub_1001D60BC;
  *(_QWORD *)(v215 + 24) = v214;
  v216 = swift_allocObject(&unk_1005624D8, 32, 7);
  v979 = (uint8_t *)v216;
  *(_QWORD *)(v216 + 16) = sub_1003F72C8;
  *(_QWORD *)(v216 + 24) = v215;
  v976 = swift_allocObject(&unk_100562500, 17, 7);
  *(_BYTE *)(v976 + 16) = 0;
  v982 = swift_allocObject(&unk_100562528, 17, 7);
  *(_BYTE *)(v982 + 16) = 4;
  v217 = swift_allocObject(&unk_100562550, 32, 7);
  v218 = v981;
  *(_QWORD *)(v217 + 16) = sub_1003F70DC;
  *(_QWORD *)(v217 + 24) = v218;
  v219 = swift_allocObject(&unk_100562578, 32, 7);
  *(_QWORD *)(v219 + 16) = sub_1003F70D0;
  *(_QWORD *)(v219 + 24) = v217;
  v220 = swift_allocObject(&unk_1005625A0, 32, 7);
  *(_QWORD *)(v220 + 16) = sub_1001D60BC;
  *(_QWORD *)(v220 + 24) = v219;
  v221 = swift_allocObject(&unk_1005625C8, 32, 7);
  v978 = v221;
  v221[2].isa = (Class)sub_1003F72C8;
  v221[3].isa = (Class)v220;
  v980 = swift_allocObject(&unk_1005625F0, 17, 7);
  *(_BYTE *)(v980 + 16) = 0;
  v981 = swift_allocObject(&unk_100562618, 17, 7);
  *(_BYTE *)(v981 + 16) = 4;
  v222 = swift_allocObject(&unk_100562640, 32, 7);
  v223 = v983;
  *(_QWORD *)(v222 + 16) = sub_1003F70DC;
  *(_QWORD *)(v222 + 24) = v223;
  v224 = swift_allocObject(&unk_100562668, 32, 7);
  *(_QWORD *)(v224 + 16) = sub_1003F70D0;
  *(_QWORD *)(v224 + 24) = v222;
  v225 = swift_allocObject(&unk_100562690, 32, 7);
  *(_QWORD *)(v225 + 16) = sub_1001D60BC;
  *(_QWORD *)(v225 + 24) = v224;
  v226 = swift_allocObject(&unk_1005626B8, 32, 7);
  v977 = v226;
  *(_QWORD *)(v226 + 16) = sub_1003F72C8;
  *(_QWORD *)(v226 + 24) = v225;
  v983 = sub_100053F2C((uint64_t *)&unk_1005E3B20);
  v227 = swift_allocObject(v983, 560, 7);
  *(_OWORD *)(v227 + 16) = xmmword_10048FEC0;
  *(_QWORD *)(v227 + 32) = sub_1001D55E4;
  v228 = v964;
  *(_QWORD *)(v227 + 40) = v964;
  *(_QWORD *)(v227 + 48) = sub_1001D60C4;
  v229 = v963;
  *(_QWORD *)(v227 + 56) = v963;
  *(_QWORD *)(v227 + 64) = sub_1001D563C;
  v230 = v965;
  *(_QWORD *)(v227 + 72) = v965;
  *(_QWORD *)(v227 + 80) = sub_1001D60C4;
  v231 = v966;
  *(_QWORD *)(v227 + 88) = v966;
  *(_QWORD *)(v227 + 96) = sub_1001D60C4;
  v232 = v962;
  *(_QWORD *)(v227 + 104) = v962;
  *(_QWORD *)(v227 + 112) = sub_1001D55FC;
  *(_QWORD *)(v227 + 120) = v185;
  *(_QWORD *)(v227 + 128) = sub_1001D60C4;
  *(_QWORD *)(v227 + 136) = v994;
  *(_QWORD *)(v227 + 144) = sub_1001D60C4;
  *(_QWORD *)(v227 + 152) = v993;
  *(_QWORD *)(v227 + 160) = sub_1003F66FC;
  *(_QWORD *)(v227 + 168) = v997;
  *(_QWORD *)(v227 + 176) = sub_1001D60C4;
  *(_QWORD *)(v227 + 184) = v1001;
  *(_QWORD *)(v227 + 192) = sub_1001D60C4;
  *(_QWORD *)(v227 + 200) = v1005;
  *(_QWORD *)(v227 + 208) = sub_1003F70D4;
  *(_QWORD *)(v227 + 216) = v995;
  *(_QWORD *)(v227 + 224) = sub_1001D60C4;
  *(_QWORD *)(v227 + 232) = v999;
  *(_QWORD *)(v227 + 240) = sub_1001D60C4;
  *(_QWORD *)(v227 + 248) = v1003;
  *(_QWORD *)(v227 + 256) = sub_1001D563C;
  *(_QWORD *)(v227 + 264) = v195;
  *(_QWORD *)(v227 + 272) = sub_1001D60C4;
  v233 = (uint8_t *)v197;
  *(_QWORD *)(v227 + 280) = v197;
  *(_QWORD *)(v227 + 288) = sub_1001D60C4;
  *(_QWORD *)(v227 + 296) = v992;
  *(_QWORD *)(v227 + 304) = sub_1003F70D4;
  v234 = v967;
  *(_QWORD *)(v227 + 312) = v967;
  *(_QWORD *)(v227 + 320) = sub_1001D60C4;
  v235 = v968;
  *(_QWORD *)(v227 + 328) = v968;
  *(_QWORD *)(v227 + 336) = sub_1001D60C4;
  *(_QWORD *)(v227 + 344) = v1007;
  *(_QWORD *)(v227 + 352) = sub_1003F70D4;
  *(_QWORD *)(v227 + 360) = v998;
  *(_QWORD *)(v227 + 368) = sub_1001D60C4;
  *(_QWORD *)(v227 + 376) = v1002;
  *(_QWORD *)(v227 + 384) = sub_1001D60C4;
  *(_QWORD *)(v227 + 392) = v1006;
  *(_QWORD *)(v227 + 400) = sub_1003F70D4;
  *(_QWORD *)(v227 + 408) = v996;
  *(_QWORD *)(v227 + 416) = sub_1001D60C4;
  *(_QWORD *)(v227 + 424) = v1000;
  *(_QWORD *)(v227 + 432) = sub_1001D60C4;
  *(_QWORD *)(v227 + 440) = v1004;
  *(_QWORD *)(v227 + 448) = sub_1003F70D4;
  *(_QWORD *)(v227 + 456) = v979;
  *(_QWORD *)(v227 + 464) = sub_1001D60C4;
  *(_QWORD *)(v227 + 472) = v976;
  *(_QWORD *)(v227 + 480) = sub_1001D60C4;
  *(_QWORD *)(v227 + 488) = v982;
  *(_QWORD *)(v227 + 496) = sub_1003F70D4;
  *(_QWORD *)(v227 + 504) = v978;
  *(_QWORD *)(v227 + 512) = sub_1001D60C4;
  *(_QWORD *)(v227 + 520) = v980;
  *(_QWORD *)(v227 + 528) = sub_1001D60C4;
  *(_QWORD *)(v227 + 536) = v981;
  *(_QWORD *)(v227 + 544) = sub_1003F70D4;
  *(_QWORD *)(v227 + 552) = v977;
  swift_retain(v228);
  swift_retain(v229);
  swift_retain(v230);
  swift_retain(v231);
  swift_retain(v232);
  swift_retain(v961);
  swift_retain(v994);
  swift_retain(v993);
  swift_retain(v997);
  swift_retain(v1001);
  swift_retain(v1005);
  swift_retain(v995);
  swift_retain(v999);
  swift_retain(v1003);
  v940 = (uint8_t *)v195;
  swift_retain(v195);
  v941 = v233;
  swift_retain(v233);
  swift_retain(v992);
  swift_retain(v234);
  swift_retain(v235);
  swift_retain(v1007);
  swift_retain(v998);
  swift_retain(v1002);
  swift_retain(v1006);
  swift_retain(v996);
  swift_retain(v1000);
  swift_retain(v1004);
  v236 = v979;
  swift_retain(v979);
  v237 = v976;
  swift_retain(v976);
  v238 = v982;
  swift_retain(v982);
  v239 = v978;
  swift_retain(v978);
  v240 = v980;
  swift_retain(v980);
  v241 = v981;
  swift_retain(v981);
  v242 = v977;
  swift_retain(v977);
  v243 = v954;
  swift_bridgeObjectRelease(v227);
  if (os_log_type_enabled(v243, (os_log_type_t)v955))
  {
    v244 = (uint8_t *)v963;
    v245 = (uint8_t *)v961;
    v246 = (uint8_t *)v962;
    v247 = (uint8_t *)v994;
    v248 = (uint8_t *)v993;
    v249 = (uint8_t *)v992;
    v250 = (uint8_t *)sub_10007010C(80);
    v251 = swift_slowAlloc(32, -1);
    v1017 = 0;
    v892 = v251;
    v893 = v250;
    v1016 = v251;
    *(_WORD *)v250 = 2819;
    v1018 = v250 + 2;
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D55E4;
    v252 = v964;
    v1015 = (uint8_t *)v964;
    v253 = v1009;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    if (v253)
      goto LABEL_244;
    swift_release(v252);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v1015 = v244;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    swift_release(v244);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D563C;
    v254 = v965;
    v1015 = v965;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    v255 = (uint8_t *)v977;
    swift_release(v254);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v256 = v966;
    v1015 = (uint8_t *)v966;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    swift_release(v256);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v1015 = v246;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    swift_release(v246);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D55FC;
    v1015 = v245;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    swift_release(v245);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v1015 = v247;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    v257 = (uint8_t *)v976;
    swift_release(v247);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v1015 = v248;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    swift_release(v248);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1003F66FC;
    v258 = v997;
    v1015 = (uint8_t *)v997;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    v259 = v1003;
    v260 = v1001;
    swift_release(v258);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v1015 = (uint8_t *)v260;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    v261 = v1005;
    swift_release(v260);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v1015 = (uint8_t *)v261;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    swift_release(v261);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1003F70D4;
    v262 = v995;
    v1015 = v995;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    swift_release(v262);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v263 = v999;
    v1015 = (uint8_t *)v999;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    swift_release(v263);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v1015 = v259;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    swift_release(v259);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D563C;
    v264 = v940;
    v1015 = v940;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    v265 = (uint8_t *)v996;
    swift_release(v264);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v266 = v941;
    v1015 = v941;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    swift_release(v266);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v1015 = v249;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    swift_release(v249);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1003F70D4;
    v267 = v967;
    v1015 = v967;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    v268 = (uint8_t *)v968;
    v269 = v1002;
    swift_release(v267);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v1015 = v268;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    v270 = (uint8_t *)v1007;
    swift_release(v268);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v1015 = v270;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    swift_release(v270);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1003F70D4;
    v271 = v998;
    v1015 = (uint8_t *)v998;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    v272 = (uint8_t *)v1004;
    swift_release(v271);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v1015 = v269;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    v273 = v1006;
    swift_release(v269);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v1015 = (uint8_t *)v273;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    swift_release(v273);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1003F70D4;
    v1015 = v265;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    v274 = (uint8_t *)v1000;
    v275 = v954;
    swift_release(v265);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v1015 = v274;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    swift_release(v274);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v1015 = v272;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    v276 = v1012;
    v277 = v948;
    v278 = (uint64_t)v942;
    swift_release(v272);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1003F70D4;
    v279 = v979;
    v1015 = v979;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    swift_release(v279);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v1015 = v257;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    v280 = (uint8_t *)v982;
    swift_release(v257);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v1015 = v280;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    swift_release(v280);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1003F70D4;
    v281 = v978;
    v1015 = (uint8_t *)v978;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    v282 = (uint8_t *)v980;
    swift_release(v281);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v1015 = v282;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    v283 = (uint8_t *)v981;
    swift_release(v282);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v1015 = v283;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    v284 = v975;
    swift_release(v283);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1003F70D4;
    v1015 = v255;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    v1009 = 0;
    swift_release(v255);
    v285 = v275;
    v286 = v893;
    _os_log_impl((void *)&_mh_execute_header, v275, (os_log_type_t)v955, "soundViewLayout id: %{private,mask.hash}s has multiChannel: %{BOOL}d, canStopSound: %{BOOL}d, playingChannels: %ld, leftPlaying: %{BOOL}d, rightPlaying: %{BOOL}d, casePlaying: %{BOOL}d, leftQueued: %{BOOL}d, rightQueued: %{BOOL}d, caseQueued: %{BOOL}d.", v893, 0x50u);
    v287 = v892;
    swift_arrayDestroy(v892, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v287, -1, -1);
    sub_100070114((uint64_t)v286);

    v288 = v1013;
    v1007 = *(_QWORD *)(v1008 + 8);
    ((void (*)(uint8_t *, uint64_t))v1007)(v969, v1013);
  }
  else
  {

    swift_release(v242);
    swift_release(v241);
    swift_release(v240);
    swift_release(v239);
    swift_release(v238);
    swift_release(v237);
    swift_release(v236);
    swift_release(v1004);
    swift_release(v1000);
    swift_release(v996);
    swift_release(v1006);
    swift_release(v1002);
    swift_release(v998);
    swift_release(v1007);
    swift_release(v968);
    swift_release(v967);
    swift_release(v992);
    swift_release(v941);
    swift_release(v940);
    swift_release(v1003);
    swift_release(v999);
    swift_release(v995);
    swift_release(v1005);
    swift_release(v1001);
    swift_release(v997);
    swift_release(v993);
    swift_release(v994);
    swift_release(v961);
    swift_release(v962);
    swift_release(v966);
    swift_release(v965);
    swift_release(v963);
    v289 = swift_release(v964);
    v288 = v1013;
    v1007 = *(_QWORD *)(v1008 + 8);
    ((void (*)(uint8_t *, uint64_t, __n128))v1007)(v969, v1013, v289);
    v284 = v975;
    v276 = v1012;
    v277 = v948;
    v278 = (uint64_t)v942;
  }
  v290 = *(int *)(v943 + 48);
  v291 = v973;
  sub_1003ED59C(v973, (uint64_t)v276, v946);
  *(_QWORD *)(v291 + v290) = v292;
  v293 = v291;
  v294 = v944;
  sub_100007464(v293, v944, (uint64_t *)&unk_1005D3AA0);
  v295 = sub_10005DAA0(v294, v284, (uint64_t *)&unk_1005D3AA0);
  v296 = (uint64_t)v945;
  FMIPDevice.soundMetadata.getter(v295);
  v298 = v956;
  v297 = v957;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v956 + 48))(v296, 1, v957) == 1)
  {
    swift_bridgeObjectRelease(v974);
    sub_1000051EC(v296, &qword_1005D9968);
    sub_100007464(v284, v278, (uint64_t *)&unk_1005D3AA0);
    v299 = v960;
    v300 = v959;
    v301 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v960 + 48))(v278, 1, v959);
    v302 = v935;
    v303 = v970;
    if (v301 == 1)
    {
      sub_1000051EC(v278, (uint64_t *)&unk_1005D3AA0);
      goto LABEL_39;
    }
    v326 = v933;
    (*(void (**)(char *, uint64_t, uint64_t))(v299 + 32))(v933, v278, v300);
    if ((v953 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v299 + 8))(v326, v300);
LABEL_39:
      v375 = (uint64_t)v991;
      v376 = v302(v991, 1, v277);
      v377 = v930;
      sub_100007464(v375, v930, &qword_1005D72D0);
      v378 = v931;
      if (v376 == 1)
      {
        v378 = v377;
      }
      else
      {
        sub_100007464(v377, v931, &qword_1005D72D0);
        v379 = v302((char *)v378, 1, v277);
        if ((_DWORD)v379 != 1)
        {
          v459 = FMIPItemGroup.items.getter(v379);
          (*(void (**)(uint64_t, uint64_t))(v939 + 8))(v378, v277);
          v460 = sub_1000BCDE0(v459);
          swift_bridgeObjectRelease(v459);
          sub_1000051EC(v377, &qword_1005D72D0);
          v461 = v932;
          sub_100007464((uint64_t)v991, v932, &qword_1005D72D0);
          v462 = v460 < 2;
          v380 = v461;
          if (!v462)
          {
            swift_bridgeObjectRelease(v303);
            swift_bridgeObjectRelease(v971);
            sub_1000051EC(v461, &qword_1005D72D0);
            goto LABEL_65;
          }
LABEL_44:
          v381 = v929;
          sub_100007464(v380, v929, &qword_1005D72D0);
          v382 = v302((char *)v381, 1, v277);
          if ((_DWORD)v382 == 1)
          {
            sub_1000051EC(v380, &qword_1005D72D0);
            sub_1000051EC(v381, &qword_1005D72D0);
            goto LABEL_48;
          }
          v383 = v920;
          FMIPItemGroup.state.getter(v382);
          v384 = (*(uint64_t (**)(uint64_t, uint64_t))(v939 + 8))(v381, v277);
          v385 = (uint64_t)v921;
          static FMIPItemState.isInCase.getter(v384);
          v386 = sub_10012A680(v385);
          v387 = v380;
          v388 = *(void (**)(uint64_t, uint64_t))(v922 + 8);
          v389 = v385;
          v390 = v923;
          v388(v389, v923);
          v388((uint64_t)v383, v390);
          sub_1000051EC(v387, &qword_1005D72D0);
          if ((v386 & 1) == 0)
          {
LABEL_48:
            if (v971)
            {
              v392 = *((_QWORD *)v971 + 2);
              swift_bridgeObjectRelease(v971);
              if (v392)
              {
                v393 = swift_bridgeObjectRelease(v303);
                v990(v925, v989, v288, v393);
                v394 = v1010;
                v395 = v1011;
                v988(v1010, v276, v1011);
                v396 = swift_allocObject(&unk_100562C08, v986, v985);
                v397 = ((uint64_t (*)(uint64_t, uint8_t *, uint64_t))v984)(v396 + v987, v394, v395);
                v1006 = (os_log_t)Logger.logObject.getter(v397);
                LODWORD(v1005) = static os_log_type_t.default.getter(v1006);
                v398 = swift_allocObject(&unk_100562C30, 17, 7);
                *(_BYTE *)(v398 + 16) = 112;
                v399 = swift_allocObject(&unk_100562C58, 17, 7);
                *(_BYTE *)(v399 + 16) = 8;
                v400 = swift_allocObject(&unk_100562C80, 24, 7);
                *(_QWORD *)(v400 + 16) = 1752392040;
                v401 = swift_allocObject(&unk_100562CA8, 32, 7);
                *(_QWORD *)(v401 + 16) = sub_1003F72C0;
                *(_QWORD *)(v401 + 24) = v400;
                v402 = swift_allocObject(&unk_100562CD0, 17, 7);
                *(_BYTE *)(v402 + 16) = 33;
                v403 = swift_allocObject(&unk_100562CF8, 17, 7);
                *(_BYTE *)(v403 + 16) = 8;
                v404 = swift_allocObject(&unk_100562D20, 32, 7);
                *(_QWORD *)(v404 + 16) = sub_1003F65B4;
                *(_QWORD *)(v404 + 24) = v396;
                v405 = swift_allocObject(&unk_100562D48, 32, 7);
                *(_QWORD *)(v405 + 16) = sub_1001D60BC;
                *(_QWORD *)(v405 + 24) = v404;
                v406 = swift_allocObject(v983, 128, 7);
                *(_OWORD *)(v406 + 16) = xmmword_10048A530;
                *(_QWORD *)(v406 + 32) = sub_1001D60C4;
                *(_QWORD *)(v406 + 40) = v398;
                *(_QWORD *)(v406 + 48) = sub_1001D60C4;
                *(_QWORD *)(v406 + 56) = v399;
                *(_QWORD *)(v406 + 64) = sub_1003F70D8;
                *(_QWORD *)(v406 + 72) = v401;
                *(_QWORD *)(v406 + 80) = sub_1001D60C4;
                *(_QWORD *)(v406 + 88) = v402;
                *(_QWORD *)(v406 + 96) = sub_1001D60C4;
                *(_QWORD *)(v406 + 104) = v403;
                *(_QWORD *)(v406 + 112) = sub_1001D60C0;
                *(_QWORD *)(v406 + 120) = v405;
                swift_retain(v398);
                swift_retain(v399);
                swift_retain(v401);
                swift_retain(v402);
                swift_retain(v403);
                swift_retain(v405);
                v407 = v406;
                v408 = v1006;
                swift_bridgeObjectRelease(v407);
                if (os_log_type_enabled(v408, (os_log_type_t)v1005))
                {
                  v409 = (_WORD *)sub_10007010C(22);
                  v410 = swift_slowAlloc(32, -1);
                  v1017 = 0;
                  v1016 = v410;
                  *(_QWORD *)&v1004 = v409;
                  *v409 = 515;
                  v1018 = (uint8_t *)(v409 + 1);
                  v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
                  v1015 = (uint8_t *)v398;
                  v253 = v1009;
                  sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
                  if (v253)
                    goto LABEL_244;
                  swift_release(v398);
                  v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
                  v1015 = (uint8_t *)v399;
                  sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
                  swift_release(v399);
                  v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1003F70D8;
                  v1015 = (uint8_t *)v401;
                  sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
                  v308 = v1012;
                  v411 = v925;
                  swift_release(v401);
                  v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
                  v1015 = (uint8_t *)v402;
                  sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
                  v322 = v1013;
                  swift_release(v402);
                  v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
                  v1015 = (uint8_t *)v403;
                  sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
                  swift_release(v403);
                  v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C0;
                  v1015 = (uint8_t *)v405;
                  sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
                  v312 = (uint64_t)v972;
                  v1009 = 0;
                  swift_release(v405);
                  v412 = v1006;
                  v413 = v1004;
                  _os_log_impl((void *)&_mh_execute_header, v1006, (os_log_type_t)v1005, "soundViewLayout id: %{private,mask.hash}s is monaural device playing sound.", (uint8_t *)v1004, 0x16u);
                  swift_arrayDestroy(v410, 1, (char *)&type metadata for Any + 8);
                  swift_slowDealloc(v410, -1, -1);
                  sub_100070114(v413);

                  ((void (*)(char *, uint64_t))v1007)(v411, v322);
                  goto LABEL_53;
                }

                swift_release(v405);
                swift_release(v403);
                swift_release(v402);
                swift_release(v401);
                swift_release(v399);
                v613 = swift_release(v398);
                v322 = v1013;
                ((void (*)(char *, uint64_t, __n128))v1007)(v925, v1013, v613);
                goto LABEL_110;
              }
            }
            if (v303)
            {
              v415 = v303[2];
              v416 = swift_bridgeObjectRelease(v303);
              if (v415)
              {
                v990(v912, v989, v288, v416);
                v417 = v1010;
                v418 = v1011;
                v988(v1010, v276, v1011);
                v419 = swift_allocObject(&unk_100562AA0, v986, v985);
                v420 = ((uint64_t (*)(uint64_t, uint8_t *, uint64_t))v984)(v419 + v987, v417, v418);
                v1006 = (os_log_t)Logger.logObject.getter(v420);
                LODWORD(v1005) = static os_log_type_t.default.getter(v1006);
                v421 = swift_allocObject(&unk_100562AC8, 17, 7);
                *(_BYTE *)(v421 + 16) = 112;
                v422 = swift_allocObject(&unk_100562AF0, 17, 7);
                *(_BYTE *)(v422 + 16) = 8;
                v423 = swift_allocObject(&unk_100562B18, 24, 7);
                *(_QWORD *)(v423 + 16) = 1752392040;
                v424 = swift_allocObject(&unk_100562B40, 32, 7);
                *(_QWORD *)(v424 + 16) = sub_1003F72C0;
                *(_QWORD *)(v424 + 24) = v423;
                v425 = swift_allocObject(&unk_100562B68, 17, 7);
                *(_BYTE *)(v425 + 16) = 33;
                v426 = swift_allocObject(&unk_100562B90, 17, 7);
                *(_BYTE *)(v426 + 16) = 8;
                v427 = swift_allocObject(&unk_100562BB8, 32, 7);
                *(_QWORD *)(v427 + 16) = sub_1003F65B4;
                *(_QWORD *)(v427 + 24) = v419;
                v428 = swift_allocObject(&unk_100562BE0, 32, 7);
                *(_QWORD *)(v428 + 16) = sub_1001D60BC;
                *(_QWORD *)(v428 + 24) = v427;
                v429 = swift_allocObject(v983, 128, 7);
                *(_OWORD *)(v429 + 16) = xmmword_10048A530;
                *(_QWORD *)(v429 + 32) = sub_1001D60C4;
                *(_QWORD *)(v429 + 40) = v421;
                *(_QWORD *)(v429 + 48) = sub_1001D60C4;
                *(_QWORD *)(v429 + 56) = v422;
                *(_QWORD *)(v429 + 64) = sub_1003F70D8;
                *(_QWORD *)(v429 + 72) = v424;
                *(_QWORD *)(v429 + 80) = sub_1001D60C4;
                *(_QWORD *)(v429 + 88) = v425;
                *(_QWORD *)(v429 + 96) = sub_1001D60C4;
                *(_QWORD *)(v429 + 104) = v426;
                *(_QWORD *)(v429 + 112) = sub_1001D60C0;
                *(_QWORD *)(v429 + 120) = v428;
                swift_retain(v421);
                swift_retain(v422);
                swift_retain(v424);
                swift_retain(v425);
                swift_retain(v426);
                swift_retain(v428);
                v430 = v429;
                v431 = v1006;
                swift_bridgeObjectRelease(v430);
                if (os_log_type_enabled(v431, (os_log_type_t)v1005))
                {
                  v432 = (_WORD *)sub_10007010C(22);
                  v433 = swift_slowAlloc(32, -1);
                  v1017 = 0;
                  v1016 = v433;
                  *(_QWORD *)&v1004 = v432;
                  *v432 = 515;
                  v1018 = (uint8_t *)(v432 + 1);
                  v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
                  v1015 = (uint8_t *)v421;
                  v253 = v1009;
                  sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
                  if (v253)
                    goto LABEL_244;
                  swift_release(v421);
                  v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
                  v1015 = (uint8_t *)v422;
                  sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
                  swift_release(v422);
                  v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1003F70D8;
                  v1015 = (uint8_t *)v424;
                  sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
                  v308 = v1012;
                  v434 = v912;
                  swift_release(v424);
                  v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
                  v1015 = (uint8_t *)v425;
                  sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
                  v322 = v1013;
                  swift_release(v425);
                  v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
                  v1015 = (uint8_t *)v426;
                  sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
                  swift_release(v426);
                  v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C0;
                  v1015 = (uint8_t *)v428;
                  sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
                  v312 = (uint64_t)v972;
                  v1009 = 0;
                  swift_release(v428);
                  v435 = v1006;
                  v436 = v1004;
                  _os_log_impl((void *)&_mh_execute_header, v1006, (os_log_type_t)v1005, "soundViewLayout id: %{private,mask.hash}s is queueing sound.", (uint8_t *)v1004, 0x16u);
                  swift_arrayDestroy(v433, 1, (char *)&type metadata for Any + 8);
                  swift_slowDealloc(v433, -1, -1);
                  sub_100070114(v436);

                  ((void (*)(char *, uint64_t))v1007)(v434, v322);
                  v414 = 2;
                  goto LABEL_124;
                }

                swift_release(v428);
                swift_release(v426);
                swift_release(v425);
                swift_release(v424);
                swift_release(v422);
                v703 = swift_release(v421);
                v322 = v1013;
                ((void (*)(char *, uint64_t, __n128))v1007)(v912, v1013, v703);
                v414 = 2;
                goto LABEL_123;
              }
            }
            ((void (*)(char *, uint64_t, uint64_t))v990)(v924, v989, v288);
            v483 = v1010;
            v484 = v1011;
            v988(v1010, v276, v1011);
            v485 = swift_allocObject(&unk_1005626E0, v986, v985);
            v486 = ((uint64_t (*)(uint64_t, uint8_t *, uint64_t))v984)(v485 + v987, v483, v484);
            v1006 = (os_log_t)Logger.logObject.getter(v486);
            LODWORD(v1005) = static os_log_type_t.default.getter(v1006);
            v487 = swift_allocObject(&unk_100562708, 17, 7);
            *(_BYTE *)(v487 + 16) = 112;
            v488 = swift_allocObject(&unk_100562730, 17, 7);
            *(_BYTE *)(v488 + 16) = 8;
            v489 = swift_allocObject(&unk_100562758, 24, 7);
            *(_QWORD *)(v489 + 16) = 1752392040;
            v490 = swift_allocObject(&unk_100562780, 32, 7);
            *(_QWORD *)(v490 + 16) = sub_1003F72C0;
            *(_QWORD *)(v490 + 24) = v489;
            v491 = swift_allocObject(&unk_1005627A8, 17, 7);
            *(_BYTE *)(v491 + 16) = 33;
            v492 = swift_allocObject(&unk_1005627D0, 17, 7);
            *(_BYTE *)(v492 + 16) = 8;
            v493 = swift_allocObject(&unk_1005627F8, 32, 7);
            *(_QWORD *)(v493 + 16) = sub_1003F65B4;
            *(_QWORD *)(v493 + 24) = v485;
            v494 = swift_allocObject(&unk_100562820, 32, 7);
            *(_QWORD *)(v494 + 16) = sub_1001D60BC;
            *(_QWORD *)(v494 + 24) = v493;
            inited = swift_initStackObject(v983, v1020);
            *(_OWORD *)(inited + 16) = xmmword_10048A530;
            *(_QWORD *)(inited + 32) = sub_1001D60C4;
            *(_QWORD *)(inited + 40) = v487;
            *(_QWORD *)(inited + 48) = sub_1001D60C4;
            *(_QWORD *)(inited + 56) = v488;
            *(_QWORD *)(inited + 64) = sub_1003F70D8;
            *(_QWORD *)(inited + 72) = v490;
            *(_QWORD *)(inited + 80) = sub_1001D60C4;
            *(_QWORD *)(inited + 88) = v491;
            *(_QWORD *)(inited + 96) = sub_1001D60C4;
            *(_QWORD *)(inited + 104) = v492;
            *(_QWORD *)(inited + 112) = sub_1001D60C0;
            *(_QWORD *)(inited + 120) = v494;
            swift_retain(v487);
            swift_retain(v488);
            swift_retain(v490);
            swift_retain(v491);
            swift_retain(v492);
            swift_retain(v494);
            v496 = inited;
            v497 = v1006;
            swift_bridgeObjectRelease(v496);
            if (os_log_type_enabled(v497, (os_log_type_t)v1005))
            {
              v498 = (_WORD *)sub_10007010C(22);
              v499 = swift_slowAlloc(32, -1);
              v1017 = 0;
              v1016 = v499;
              *(_QWORD *)&v1004 = v498;
              *v498 = 515;
              v1018 = (uint8_t *)(v498 + 1);
              v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
              v1015 = (uint8_t *)v487;
              v253 = v1009;
              sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
              if (v253)
                goto LABEL_244;
              swift_release(v487);
              v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
              v1015 = (uint8_t *)v488;
              sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
              swift_release(v488);
              v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1003F70D8;
              v1015 = (uint8_t *)v490;
              sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
              v308 = v1012;
              v500 = v924;
              swift_release(v490);
              v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
              v1015 = (uint8_t *)v491;
              sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
              v322 = v1013;
              swift_release(v491);
              v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
              v1015 = (uint8_t *)v492;
              sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
              swift_release(v492);
              v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C0;
              v1015 = (uint8_t *)v494;
              sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
              v312 = (uint64_t)v972;
              v1009 = 0;
              swift_release(v494);
              v501 = v1006;
              v502 = v1004;
              _os_log_impl((void *)&_mh_execute_header, v1006, (os_log_type_t)v1005, "soundViewLayout id: %{private,mask.hash}s is not playing any sound.", (uint8_t *)v1004, 0x16u);
              swift_arrayDestroy(v499, 1, (char *)&type metadata for Any + 8);
              swift_slowDealloc(v499, -1, -1);
              sub_100070114(v502);

              ((void (*)(char *, uint64_t))v1007)(v500, v322);
              goto LABEL_107;
            }

            swift_release(v494);
            swift_release(v492);
            swift_release(v491);
            swift_release(v490);
            swift_release(v488);
            v614 = swift_release(v487);
            v322 = v1013;
            ((void (*)(char *, uint64_t, __n128))v1007)(v924, v1013, v614);
LABEL_122:
            v414 = 0;
            goto LABEL_123;
          }
          swift_bridgeObjectRelease(v303);
          v391 = swift_bridgeObjectRelease(v971);
LABEL_65:
          v990(v927, v989, v288, v391);
          v463 = v1010;
          v464 = v1011;
          v988(v1010, v276, v1011);
          v465 = swift_allocObject(&unk_100562D70, v986, v985);
          v466 = ((uint64_t (*)(uint64_t, uint8_t *, uint64_t))v984)(v465 + v987, v463, v464);
          v1006 = (os_log_t)Logger.logObject.getter(v466);
          LODWORD(v1005) = static os_log_type_t.default.getter(v1006);
          v467 = swift_allocObject(&unk_100562D98, 17, 7);
          *(_BYTE *)(v467 + 16) = 112;
          v468 = swift_allocObject(&unk_100562DC0, 17, 7);
          *(_BYTE *)(v468 + 16) = 8;
          v469 = swift_allocObject(&unk_100562DE8, 24, 7);
          *(_QWORD *)(v469 + 16) = 1752392040;
          v470 = swift_allocObject(&unk_100562E10, 32, 7);
          *(_QWORD *)(v470 + 16) = sub_1003F72C0;
          *(_QWORD *)(v470 + 24) = v469;
          v471 = swift_allocObject(&unk_100562E38, 17, 7);
          *(_BYTE *)(v471 + 16) = 33;
          v472 = swift_allocObject(&unk_100562E60, 17, 7);
          *(_BYTE *)(v472 + 16) = 8;
          v473 = swift_allocObject(&unk_100562E88, 32, 7);
          *(_QWORD *)(v473 + 16) = sub_1003F65B4;
          *(_QWORD *)(v473 + 24) = v465;
          v474 = swift_allocObject(&unk_100562EB0, 32, 7);
          *(_QWORD *)(v474 + 16) = sub_1001D60BC;
          *(_QWORD *)(v474 + 24) = v473;
          v475 = swift_allocObject(v983, 128, 7);
          *(_OWORD *)(v475 + 16) = xmmword_10048A530;
          *(_QWORD *)(v475 + 32) = sub_1001D60C4;
          *(_QWORD *)(v475 + 40) = v467;
          *(_QWORD *)(v475 + 48) = sub_1001D60C4;
          *(_QWORD *)(v475 + 56) = v468;
          *(_QWORD *)(v475 + 64) = sub_1003F70D8;
          *(_QWORD *)(v475 + 72) = v470;
          *(_QWORD *)(v475 + 80) = sub_1001D60C4;
          *(_QWORD *)(v475 + 88) = v471;
          *(_QWORD *)(v475 + 96) = sub_1001D60C4;
          *(_QWORD *)(v475 + 104) = v472;
          *(_QWORD *)(v475 + 112) = sub_1001D60C0;
          *(_QWORD *)(v475 + 120) = v474;
          swift_retain(v467);
          swift_retain(v468);
          swift_retain(v470);
          swift_retain(v471);
          swift_retain(v472);
          swift_retain(v474);
          v476 = v475;
          v477 = v1006;
          swift_bridgeObjectRelease(v476);
          if (os_log_type_enabled(v477, (os_log_type_t)v1005))
          {
            v478 = (_WORD *)sub_10007010C(22);
            v479 = swift_slowAlloc(32, -1);
            v1017 = 0;
            v1016 = v479;
            *(_QWORD *)&v1004 = v478;
            *v478 = 515;
            v1018 = (uint8_t *)(v478 + 1);
            v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
            v1015 = (uint8_t *)v467;
            v253 = v1009;
            sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
            if (v253)
              goto LABEL_244;
            swift_release(v467);
            v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
            v1015 = (uint8_t *)v468;
            sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
            swift_release(v468);
            v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1003F70D8;
            v1015 = (uint8_t *)v470;
            sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
            v308 = v1012;
            v480 = v927;
            swift_release(v470);
            v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
            v1015 = (uint8_t *)v471;
            sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
            v322 = v1013;
            swift_release(v471);
            v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
            v1015 = (uint8_t *)v472;
            sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
            swift_release(v472);
            v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C0;
            v1015 = (uint8_t *)v474;
            sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
            v312 = (uint64_t)v972;
            v1009 = 0;
            swift_release(v474);
            v481 = v1006;
            v482 = v1004;
            _os_log_impl((void *)&_mh_execute_header, v1006, (os_log_type_t)v1005, "soundViewLayout id: %{private,mask.hash}s is checking LE sound state.", (uint8_t *)v1004, 0x16u);
            swift_arrayDestroy(v479, 1, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v479, -1, -1);
            sub_100070114(v482);

            ((void (*)(char *, uint64_t))v1007)(v480, v322);
          }
          else
          {

            swift_release(v474);
            swift_release(v472);
            swift_release(v471);
            swift_release(v470);
            swift_release(v468);
            v579 = swift_release(v467);
            v322 = v1013;
            ((void (*)(char *, uint64_t, __n128))v1007)(v927, v1013, v579);
            v312 = (uint64_t)v972;
            v308 = v1012;
          }
          if ((v951 & 1) != 0)
          {
            if (v919)
              v580 = 10;
            else
              v580 = 7;
            if (HIDWORD(v951))
              v414 = 2;
            else
              v414 = v580;
          }
          else if (v949)
          {
            if (v919)
              v581 = 4;
            else
              v581 = 6;
            if (HIDWORD(v951))
              v414 = 9;
            else
              v414 = v581;
          }
          else if (v919)
          {
            if (HIDWORD(v951))
              v414 = 8;
            else
              v414 = 5;
          }
          else if (HIDWORD(v951))
          {
            v414 = 8;
          }
          else
          {
            v414 = 0;
          }
          goto LABEL_124;
        }
        sub_1000051EC(v377, &qword_1005D72D0);
      }
      v380 = v932;
      sub_1000051EC(v378, &qword_1005D72D0);
      sub_100007464((uint64_t)v991, v380, &qword_1005D72D0);
      goto LABEL_44;
    }
    swift_bridgeObjectRelease(v971);
    v327 = swift_bridgeObjectRelease(v303);
    v990(v926, v989, v288, v327);
    v328 = v1010;
    v329 = v1011;
    v988(v1010, v276, v1011);
    v330 = swift_allocObject(&unk_100562ED8, v986, v985);
    v331 = ((uint64_t (*)(uint64_t, uint8_t *, uint64_t))v984)(v330 + v987, v328, v329);
    v1006 = (os_log_t)Logger.logObject.getter(v331);
    LODWORD(v1005) = static os_log_type_t.default.getter(v1006);
    v332 = swift_allocObject(&unk_100562F00, 17, 7);
    *(_BYTE *)(v332 + 16) = 112;
    v333 = swift_allocObject(&unk_100562F28, 17, 7);
    *(_BYTE *)(v333 + 16) = 8;
    v334 = swift_allocObject(&unk_100562F50, 24, 7);
    *(_QWORD *)(v334 + 16) = 1752392040;
    v335 = swift_allocObject(&unk_100562F78, 32, 7);
    *(_QWORD *)(v335 + 16) = sub_1003F72C0;
    *(_QWORD *)(v335 + 24) = v334;
    v336 = swift_allocObject(&unk_100562FA0, 17, 7);
    *(_BYTE *)(v336 + 16) = 33;
    v337 = swift_allocObject(&unk_100562FC8, 17, 7);
    *(_BYTE *)(v337 + 16) = 8;
    v338 = swift_allocObject(&unk_100562FF0, 32, 7);
    *(_QWORD *)(v338 + 16) = sub_1003F65B4;
    *(_QWORD *)(v338 + 24) = v330;
    v339 = swift_allocObject(&unk_100563018, 32, 7);
    *(_QWORD *)(v339 + 16) = sub_1001D60BC;
    *(_QWORD *)(v339 + 24) = v338;
    v340 = swift_allocObject(v983, 128, 7);
    *(_OWORD *)(v340 + 16) = xmmword_10048A530;
    *(_QWORD *)(v340 + 32) = sub_1001D60C4;
    *(_QWORD *)(v340 + 40) = v332;
    *(_QWORD *)(v340 + 48) = sub_1001D60C4;
    *(_QWORD *)(v340 + 56) = v333;
    *(_QWORD *)(v340 + 64) = sub_1003F70D8;
    *(_QWORD *)(v340 + 72) = v335;
    *(_QWORD *)(v340 + 80) = sub_1001D60C4;
    *(_QWORD *)(v340 + 88) = v336;
    *(_QWORD *)(v340 + 96) = sub_1001D60C4;
    *(_QWORD *)(v340 + 104) = v337;
    *(_QWORD *)(v340 + 112) = sub_1001D60C0;
    *(_QWORD *)(v340 + 120) = v339;
    swift_retain(v332);
    swift_retain(v333);
    swift_retain(v335);
    swift_retain(v336);
    swift_retain(v337);
    swift_retain(v339);
    v341 = v340;
    v342 = v1006;
    swift_bridgeObjectRelease(v341);
    if (os_log_type_enabled(v342, (os_log_type_t)v1005))
    {
      v343 = (_WORD *)sub_10007010C(22);
      v344 = swift_slowAlloc(32, -1);
      v1017 = 0;
      v1016 = v344;
      *(_QWORD *)&v1004 = v343;
      *v343 = 515;
      v1018 = (uint8_t *)(v343 + 1);
      v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
      v1015 = (uint8_t *)v332;
      v253 = v1009;
      sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
      if (v253)
        goto LABEL_244;
      swift_release(v332);
      v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
      v1015 = (uint8_t *)v333;
      sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
      swift_release(v333);
      v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1003F70D8;
      v1015 = (uint8_t *)v335;
      sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
      v308 = v1012;
      swift_release(v335);
      v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
      v1015 = (uint8_t *)v336;
      sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
      v322 = v1013;
      swift_release(v336);
      v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
      v1015 = (uint8_t *)v337;
      sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
      v345 = v926;
      swift_release(v337);
      v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C0;
      v1015 = (uint8_t *)v339;
      sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
      v312 = (uint64_t)v972;
      v1009 = 0;
      swift_release(v339);
      v346 = v1006;
      v347 = v1004;
      _os_log_impl((void *)&_mh_execute_header, v1006, (os_log_type_t)v1005, "soundViewLayout id: %{private,mask.hash}s is checking LE sound state for primary part", (uint8_t *)v1004, 0x16u);
      swift_arrayDestroy(v344, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v344, -1, -1);
      sub_100070114(v347);

      v348 = ((uint64_t (*)(char *, uint64_t))v1007)(v345, v322);
    }
    else
    {

      swift_release(v339);
      swift_release(v337);
      swift_release(v336);
      swift_release(v335);
      swift_release(v333);
      v582 = swift_release(v332);
      v322 = v1013;
      v348 = ((uint64_t (*)(char *, uint64_t, __n128))v1007)(v926, v1013, v582);
      v312 = (uint64_t)v972;
      v308 = v1012;
    }
    v583 = v959;
    v584 = v914;
    v585 = v933;
    FMIPItem.partType.getter(v348);
    (*(void (**)(char *, uint64_t))(v960 + 8))(v585, v583);
    v587 = v916;
    v586 = v917;
    v588 = v916[11](v584, v917);
    v589 = v915;
    if (v588 == enum case for FMIPPartType.standalone(_:))
      goto LABEL_107;
    if (v588 == enum case for FMIPPartType.case(_:))
      goto LABEL_97;
    if (v588 == enum case for FMIPPartType.leftBud(_:))
    {
      if ((_DWORD)v951)
        v590 = 2;
      else
        v590 = 0;
      v591 = v949;
      goto LABEL_158;
    }
    if (v588 == enum case for FMIPPartType.rightBud(_:))
    {
      if (HIDWORD(v951))
        v590 = 2;
      else
        v590 = 0;
      v591 = v919;
      goto LABEL_158;
    }
    if (v588 != enum case for FMIPPartType.generic(_:))
      v587[1](v584, v586);
LABEL_107:
    v414 = 0;
    goto LABEL_124;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v298 + 32))(v958, v296, v297);
  ((void (*)(char *, uint64_t, uint64_t))v990)(v947, v989, v288);
  v304 = v1010;
  v305 = v1011;
  v988(v1010, v276, v1011);
  v306 = swift_allocObject(&unk_100563040, v986, v985);
  v307 = ((uint64_t (*)(uint64_t, uint8_t *, uint64_t))v984)(v306 + v987, v304, v305);
  v1006 = (os_log_t)Logger.logObject.getter(v307);
  LODWORD(v1005) = static os_log_type_t.default.getter(v1006);
  v308 = swift_allocObject(&unk_100563068, 17, 7);
  LOBYTE(v308[2].isa) = 112;
  v309 = swift_allocObject(&unk_100563090, 17, 7);
  *(_BYTE *)(v309 + 16) = 8;
  v310 = swift_allocObject(&unk_1005630B8, 24, 7);
  *(_QWORD *)(v310 + 16) = 1752392040;
  v311 = swift_allocObject(&unk_1005630E0, 32, 7);
  *(_QWORD *)(v311 + 16) = sub_1003F72C0;
  *(_QWORD *)(v311 + 24) = v310;
  v312 = swift_allocObject(&unk_100563108, 17, 7);
  *(_BYTE *)(v312 + 16) = 33;
  v313 = swift_allocObject(&unk_100563130, 17, 7);
  *(_BYTE *)(v313 + 16) = 8;
  v314 = swift_allocObject(&unk_100563158, 32, 7);
  *(_QWORD *)(v314 + 16) = sub_1003F65B4;
  *(_QWORD *)(v314 + 24) = v306;
  v315 = swift_allocObject(&unk_100563180, 32, 7);
  *(_QWORD *)(v315 + 16) = sub_1001D60BC;
  *(_QWORD *)(v315 + 24) = v314;
  v316 = swift_allocObject(v983, 128, 7);
  v1004 = xmmword_10048A530;
  *(_OWORD *)(v316 + 16) = xmmword_10048A530;
  *(_QWORD *)(v316 + 32) = sub_1001D60C4;
  *(_QWORD *)(v316 + 40) = v308;
  *(_QWORD *)(v316 + 48) = sub_1001D60C4;
  *(_QWORD *)(v316 + 56) = v309;
  *(_QWORD *)(v316 + 64) = sub_1003F70D8;
  *(_QWORD *)(v316 + 72) = v311;
  *(_QWORD *)(v316 + 80) = sub_1001D60C4;
  *(_QWORD *)(v316 + 88) = v312;
  *(_QWORD *)(v316 + 96) = sub_1001D60C4;
  *(_QWORD *)(v316 + 104) = v313;
  *(_QWORD *)(v316 + 112) = sub_1001D60C0;
  *(_QWORD *)(v316 + 120) = v315;
  swift_retain(v308);
  swift_retain(v309);
  swift_retain(v311);
  swift_retain(v312);
  swift_retain(v313);
  swift_retain(v315);
  v317 = v316;
  v318 = v1006;
  swift_bridgeObjectRelease(v317);
  if (os_log_type_enabled(v318, (os_log_type_t)v1005))
  {
    v319 = (uint8_t *)sub_10007010C(22);
    v320 = swift_slowAlloc(32, -1);
    v1017 = 0;
    v1016 = v320;
    v1003 = v319;
    *(_WORD *)v319 = 515;
    v1018 = v319 + 2;
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v1015 = (uint8_t *)v308;
    v253 = v1009;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    if (v253)
      goto LABEL_244;
    swift_release(v308);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v1015 = (uint8_t *)v309;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    swift_release(v309);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1003F70D8;
    v1015 = (uint8_t *)v311;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    v321 = v1012;
    swift_release(v311);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v1015 = (uint8_t *)v312;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    v322 = v1013;
    swift_release(v312);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v1015 = (uint8_t *)v313;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    swift_release(v313);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C0;
    v1015 = (uint8_t *)v315;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    v1009 = 0;
    v313 = (uint64_t)v947;
    swift_release(v315);
    v323 = v1006;
    v324 = v1003;
    _os_log_impl((void *)&_mh_execute_header, v1006, (os_log_type_t)v1005, "soundViewLayout id: %{private,mask.hash}s has sound metadata.", v1003, 0x16u);
    swift_arrayDestroy(v320, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v320, -1, -1);
    sub_100070114((uint64_t)v324);

    v325 = ((uint64_t (*)(uint64_t, uint64_t))v1007)(v313, v322);
  }
  else
  {

    swift_release(v315);
    swift_release(v313);
    swift_release(v312);
    swift_release(v311);
    swift_release(v309);
    v349 = swift_release(v308);
    v322 = v1013;
    v325 = ((uint64_t (*)(char *, uint64_t, __n128))v1007)(v947, v1013, v349);
    v321 = v1012;
  }
  v350 = v934;
  v351 = v958;
  FMIPPlaySoundMetadata.status.getter(v325);
  v352 = (*(uint64_t (**)(char *, uint64_t))(v937 + 88))((char *)v350, v938);
  if (v352 == enum case for FMIPActionStatus.error(_:) || v352 == enum case for FMIPActionStatus.unknown(_:))
    goto LABEL_103;
  if (v352 == enum case for FMIPActionStatus.success(_:))
    goto LABEL_35;
  if (v352 == enum case for FMIPActionStatus.inEarSafetyWarning(_:))
    goto LABEL_60;
  if (v352 != enum case for FMIPActionStatus.pending(_:))
  {
    if (v352 != enum case for FMIPActionStatus.notify(_:))
    {
      if (v352 == enum case for FMIPActionStatus.onNeckSafetyWarning(_:)
        || v352 == enum case for FMIPActionStatus.onHeadSafetyWarning(_:)
        || v352 == enum case for FMIPActionStatus.onTableTopSafetyWarning(_:)
        || v352 == enum case for FMIPActionStatus.carryingCaseClosedWarning(_:))
      {
LABEL_60:
        swift_bridgeObjectRelease(v971);
        swift_bridgeObjectRelease(v970);
        v437 = swift_bridgeObjectRelease(v974);
        NSLog(_:_:)(0x2E2E2E314F444F54, 0xE800000000000000, _swiftEmptyArrayStorage, v437);
        v438 = swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
        v990(v918, v989, v322, v438);
        v439 = v1010;
        v440 = v1011;
        v988(v1010, v321, v1011);
        v441 = swift_allocObject(&unk_100563310, v986, v985);
        v442 = ((uint64_t (*)(uint64_t, uint8_t *, uint64_t))v984)(v441 + v987, v439, v440);
        v1006 = (os_log_t)Logger.logObject.getter(v442);
        LODWORD(v1005) = static os_log_type_t.default.getter(v1006);
        v443 = swift_allocObject(&unk_100563338, 17, 7);
        *(_BYTE *)(v443 + 16) = 112;
        v444 = swift_allocObject(&unk_100563360, 17, 7);
        *(_BYTE *)(v444 + 16) = 8;
        v445 = swift_allocObject(&unk_100563388, 24, 7);
        *(_QWORD *)(v445 + 16) = 1752392040;
        v446 = swift_allocObject(&unk_1005633B0, 32, 7);
        *(_QWORD *)(v446 + 16) = sub_1003F72C0;
        *(_QWORD *)(v446 + 24) = v445;
        v447 = swift_allocObject(&unk_1005633D8, 17, 7);
        *(_BYTE *)(v447 + 16) = 33;
        v448 = swift_allocObject(&unk_100563400, 17, 7);
        *(_BYTE *)(v448 + 16) = 8;
        v449 = swift_allocObject(&unk_100563428, 32, 7);
        *(_QWORD *)(v449 + 16) = sub_1003F65B4;
        *(_QWORD *)(v449 + 24) = v441;
        v450 = swift_allocObject(&unk_100563450, 32, 7);
        *(_QWORD *)(v450 + 16) = sub_1001D60BC;
        *(_QWORD *)(v450 + 24) = v449;
        v451 = swift_allocObject(v983, 128, 7);
        *(_OWORD *)(v451 + 16) = v1004;
        *(_QWORD *)(v451 + 32) = sub_1001D60C4;
        *(_QWORD *)(v451 + 40) = v443;
        *(_QWORD *)(v451 + 48) = sub_1001D60C4;
        *(_QWORD *)(v451 + 56) = v444;
        *(_QWORD *)(v451 + 64) = sub_1003F70D8;
        *(_QWORD *)(v451 + 72) = v446;
        *(_QWORD *)(v451 + 80) = sub_1001D60C4;
        *(_QWORD *)(v451 + 88) = v447;
        *(_QWORD *)(v451 + 96) = sub_1001D60C4;
        *(_QWORD *)(v451 + 104) = v448;
        *(_QWORD *)(v451 + 112) = sub_1001D60C0;
        *(_QWORD *)(v451 + 120) = v450;
        swift_retain(v443);
        swift_retain(v444);
        swift_retain(v446);
        swift_retain(v447);
        swift_retain(v448);
        swift_retain(v450);
        v452 = v451;
        v453 = v1006;
        swift_bridgeObjectRelease(v452);
        if (os_log_type_enabled(v453, (os_log_type_t)v1005))
        {
          v454 = (_WORD *)sub_10007010C(22);
          v455 = swift_slowAlloc(32, -1);
          v1017 = 0;
          v1016 = v455;
          *(_QWORD *)&v1004 = v454;
          *v454 = 515;
          v1018 = (uint8_t *)(v454 + 1);
          v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
          v1015 = (uint8_t *)v443;
          v253 = v1009;
          sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
          if (v253)
            goto LABEL_244;
          swift_release(v443);
          v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
          v1015 = (uint8_t *)v444;
          sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
          swift_release(v444);
          v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1003F70D8;
          v1015 = (uint8_t *)v446;
          sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
          v308 = v1012;
          v456 = v918;
          swift_release(v446);
          v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
          v1015 = (uint8_t *)v447;
          sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
          swift_release(v447);
          v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
          v1015 = (uint8_t *)v448;
          sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
          v322 = v1013;
          swift_release(v448);
          v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C0;
          v1015 = (uint8_t *)v450;
          sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
          v312 = (uint64_t)v972;
          v1009 = 0;
          swift_release(v450);
          v457 = v1005;
          v458 = "soundViewLayout id: %{private,mask.hash}s is asking for safety warning.";
          goto LABEL_106;
        }
        swift_release(v443);
        swift_release(v444);
        swift_release(v446);
        swift_release(v447);
        swift_release(v448);
        swift_release(v450);

        v612 = v918;
        goto LABEL_121;
      }
      if (v352 == enum case for FMIPActionStatus.queueingSound(_:))
      {
        swift_bridgeObjectRelease(v974);
        swift_bridgeObjectRelease(v971);
        v708 = swift_bridgeObjectRelease(v970);
        v990(v894, v989, v322, v708);
        v709 = v1010;
        v710 = v1011;
        v988(v1010, v321, v1011);
        v711 = swift_allocObject(&unk_100563478, v986, v985);
        v712 = ((uint64_t (*)(uint64_t, uint8_t *, uint64_t))v984)(v711 + v987, v709, v710);
        v1006 = (os_log_t)Logger.logObject.getter(v712);
        LODWORD(v1005) = static os_log_type_t.default.getter(v1006);
        v713 = swift_allocObject(&unk_1005634A0, 17, 7);
        *(_BYTE *)(v713 + 16) = 112;
        v714 = swift_allocObject(&unk_1005634C8, 17, 7);
        *(_BYTE *)(v714 + 16) = 8;
        v715 = swift_allocObject(&unk_1005634F0, 24, 7);
        *(_QWORD *)(v715 + 16) = 1752392040;
        v716 = swift_allocObject(&unk_100563518, 32, 7);
        *(_QWORD *)(v716 + 16) = sub_1003F72C0;
        *(_QWORD *)(v716 + 24) = v715;
        v717 = swift_allocObject(&unk_100563540, 17, 7);
        *(_BYTE *)(v717 + 16) = 33;
        v718 = swift_allocObject(&unk_100563568, 17, 7);
        *(_BYTE *)(v718 + 16) = 8;
        v719 = swift_allocObject(&unk_100563590, 32, 7);
        *(_QWORD *)(v719 + 16) = sub_1003F65B4;
        *(_QWORD *)(v719 + 24) = v711;
        v720 = swift_allocObject(&unk_1005635B8, 32, 7);
        *(_QWORD *)(v720 + 16) = sub_1001D60BC;
        *(_QWORD *)(v720 + 24) = v719;
        v721 = swift_allocObject(v983, 128, 7);
        *(_OWORD *)(v721 + 16) = v1004;
        *(_QWORD *)(v721 + 32) = sub_1001D60C4;
        *(_QWORD *)(v721 + 40) = v713;
        *(_QWORD *)(v721 + 48) = sub_1001D60C4;
        *(_QWORD *)(v721 + 56) = v714;
        *(_QWORD *)(v721 + 64) = sub_1003F70D8;
        *(_QWORD *)(v721 + 72) = v716;
        *(_QWORD *)(v721 + 80) = sub_1001D60C4;
        *(_QWORD *)(v721 + 88) = v717;
        *(_QWORD *)(v721 + 96) = sub_1001D60C4;
        *(_QWORD *)(v721 + 104) = v718;
        *(_QWORD *)(v721 + 112) = sub_1001D60C0;
        *(_QWORD *)(v721 + 120) = v720;
        swift_retain(v713);
        swift_retain(v714);
        swift_retain(v716);
        swift_retain(v717);
        swift_retain(v718);
        swift_retain(v720);
        v722 = v721;
        v723 = v1006;
        swift_bridgeObjectRelease(v722);
        if (!os_log_type_enabled(v723, (os_log_type_t)v1005))
        {
          swift_release(v713);
          swift_release(v714);
          swift_release(v716);
          swift_release(v717);
          swift_release(v718);
          swift_release(v720);

          v322 = v1013;
          ((void (*)(char *, uint64_t))v1007)(v894, v1013);
          (*(void (**)(char *, uint64_t))(v956 + 8))(v958, v957);
          v414 = 1;
          goto LABEL_123;
        }
        v724 = (_WORD *)sub_10007010C(22);
        v725 = swift_slowAlloc(32, -1);
        v1017 = 0;
        v1016 = v725;
        *(_QWORD *)&v1004 = v724;
        *v724 = 515;
        v1018 = (uint8_t *)(v724 + 1);
        v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
        v1015 = (uint8_t *)v713;
        v253 = v1009;
        sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
        if (v253)
          goto LABEL_244;
        swift_release(v713);
        v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
        v1015 = (uint8_t *)v714;
        sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
        swift_release(v714);
        v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1003F70D8;
        v1015 = (uint8_t *)v716;
        sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
        v308 = v1012;
        v726 = v894;
        swift_release(v716);
        v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
        v1015 = (uint8_t *)v717;
        sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
        swift_release(v717);
        v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
        v1015 = (uint8_t *)v718;
        sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
        v322 = v1013;
        swift_release(v718);
        v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C0;
        v1015 = (uint8_t *)v720;
        sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
        v312 = (uint64_t)v972;
        v1009 = 0;
        swift_release(v720);
        v727 = v1006;
        v728 = v1004;
        _os_log_impl((void *)&_mh_execute_header, v1006, (os_log_type_t)v1005, "soundViewLayout id: %{private,mask.hash}s is queueing sound.", (uint8_t *)v1004, 0x16u);
        v414 = 1;
        swift_arrayDestroy(v725, 1, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v725, -1, -1);
        sub_100070114(v728);

        ((void (*)(char *, uint64_t))v1007)(v726, v322);
LABEL_221:
        (*(void (**)(char *, uint64_t))(v956 + 8))(v958, v957);
        goto LABEL_124;
      }
      if (v352 != enum case for FMIPActionStatus.serverSafetyWarning(_:)
        && v352 != enum case for FMIPActionStatus.eraseCancelled(_:)
        && v352 != enum case for FMIPActionStatus.successPasscodeSet(_:)
        && v352 != enum case for FMIPActionStatus.successPasscodeAlreadySet(_:)
        && v352 != enum case for FMIPActionStatus.successPasscodeSetV2(_:)
        && v352 != enum case for FMIPActionStatus.successFailedToSetPasscode(_:)
        && v352 != enum case for FMIPActionStatus.succeedFailedToSetPasscodeV2(_:))
      {
        v737 = _diagnoseUnexpectedEnumCase<A>(type:)(v938, v938);
        __break(1u);
        goto LABEL_232;
      }
    }
LABEL_103:
    swift_bridgeObjectRelease(v971);
    swift_bridgeObjectRelease(v970);
    v592 = swift_bridgeObjectRelease(v974);
    NSLog(_:_:)(0x2E2E2E324F444F54, 0xE800000000000000, _swiftEmptyArrayStorage, v592);
    v593 = swift_bridgeObjectRelease(_swiftEmptyArrayStorage);
    v990(v936, v989, v322, v593);
    v594 = v1010;
    v595 = v1011;
    v988(v1010, v321, v1011);
    v596 = swift_allocObject(&unk_1005631A8, v986, v985);
    v597 = ((uint64_t (*)(uint64_t, uint8_t *, uint64_t))v984)(v596 + v987, v594, v595);
    v1006 = (os_log_t)Logger.logObject.getter(v597);
    LODWORD(v1005) = static os_log_type_t.default.getter(v1006);
    v598 = swift_allocObject(&unk_1005631D0, 17, 7);
    *(_BYTE *)(v598 + 16) = 112;
    v599 = swift_allocObject(&unk_1005631F8, 17, 7);
    *(_BYTE *)(v599 + 16) = 8;
    v600 = swift_allocObject(&unk_100563220, 24, 7);
    *(_QWORD *)(v600 + 16) = 1752392040;
    v601 = swift_allocObject(&unk_100563248, 32, 7);
    *(_QWORD *)(v601 + 16) = sub_1003F72C0;
    *(_QWORD *)(v601 + 24) = v600;
    v602 = swift_allocObject(&unk_100563270, 17, 7);
    *(_BYTE *)(v602 + 16) = 33;
    v603 = swift_allocObject(&unk_100563298, 17, 7);
    *(_BYTE *)(v603 + 16) = 8;
    v604 = swift_allocObject(&unk_1005632C0, 32, 7);
    *(_QWORD *)(v604 + 16) = sub_1003F65B4;
    *(_QWORD *)(v604 + 24) = v596;
    v605 = swift_allocObject(&unk_1005632E8, 32, 7);
    *(_QWORD *)(v605 + 16) = sub_1001D60BC;
    *(_QWORD *)(v605 + 24) = v604;
    v606 = swift_allocObject(v983, 128, 7);
    *(_OWORD *)(v606 + 16) = v1004;
    *(_QWORD *)(v606 + 32) = sub_1001D60C4;
    *(_QWORD *)(v606 + 40) = v598;
    *(_QWORD *)(v606 + 48) = sub_1001D60C4;
    *(_QWORD *)(v606 + 56) = v599;
    *(_QWORD *)(v606 + 64) = sub_1003F70D8;
    *(_QWORD *)(v606 + 72) = v601;
    *(_QWORD *)(v606 + 80) = sub_1001D60C4;
    *(_QWORD *)(v606 + 88) = v602;
    *(_QWORD *)(v606 + 96) = sub_1001D60C4;
    *(_QWORD *)(v606 + 104) = v603;
    *(_QWORD *)(v606 + 112) = sub_1001D60C0;
    *(_QWORD *)(v606 + 120) = v605;
    swift_retain(v598);
    swift_retain(v599);
    swift_retain(v601);
    swift_retain(v602);
    swift_retain(v603);
    swift_retain(v605);
    v607 = v606;
    v608 = v1006;
    swift_bridgeObjectRelease(v607);
    if (os_log_type_enabled(v608, (os_log_type_t)v1005))
    {
      v609 = (_WORD *)sub_10007010C(22);
      v455 = swift_slowAlloc(32, -1);
      v1017 = 0;
      v1016 = v455;
      *(_QWORD *)&v1004 = v609;
      *v609 = 515;
      v1018 = (uint8_t *)(v609 + 1);
      v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
      v1015 = (uint8_t *)v598;
      v253 = v1009;
      sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
      if (v253)
        goto LABEL_244;
      swift_release(v598);
      v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
      v1015 = (uint8_t *)v599;
      sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
      swift_release(v599);
      v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1003F70D8;
      v1015 = (uint8_t *)v601;
      sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
      v308 = v1012;
      v456 = v936;
      swift_release(v601);
      v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
      v1015 = (uint8_t *)v602;
      sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
      swift_release(v602);
      v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
      v1015 = (uint8_t *)v603;
      sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
      v322 = v1013;
      swift_release(v603);
      v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C0;
      v1015 = (uint8_t *)v605;
      sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
      v312 = (uint64_t)v972;
      v1009 = 0;
      swift_release(v605);
      v457 = v1005;
      v458 = "soundViewLayout id: %{private,mask.hash}s is in error state.";
LABEL_106:
      v610 = v1006;
      v611 = v1004;
      _os_log_impl((void *)&_mh_execute_header, v1006, v457, v458, (uint8_t *)v1004, 0x16u);
      swift_arrayDestroy(v455, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v455, -1, -1);
      sub_100070114(v611);

      ((void (*)(char *, uint64_t))v1007)(v456, v322);
      (*(void (**)(char *, uint64_t))(v956 + 8))(v958, v957);
      goto LABEL_107;
    }
    swift_release(v598);
    swift_release(v599);
    swift_release(v601);
    swift_release(v602);
    swift_release(v603);
    swift_release(v605);

    v612 = v936;
LABEL_121:
    v322 = v1013;
    ((void (*)(char *, uint64_t))v1007)(v612, v1013);
    (*(void (**)(char *, uint64_t, __n128))(v956 + 8))(v958, v957, v658);
    goto LABEL_122;
  }
LABEL_35:
  LODWORD(v1003) = enum case for FMIPActionStatus.success(_:);
  ((void (*)(char *, uint64_t, uint64_t))v990)(v928, v989, v322);
  v353 = v1010;
  v354 = v1011;
  v988(v1010, v321, v1011);
  v355 = swift_allocObject(&unk_1005635E0, v986, v985);
  v356 = ((uint64_t (*)(uint64_t, uint8_t *, uint64_t))v984)(v355 + v987, v353, v354);
  v1006 = (os_log_t)Logger.logObject.getter(v356);
  LODWORD(v1005) = static os_log_type_t.default.getter(v1006);
  v357 = swift_allocObject(&unk_100563608, 17, 7);
  *(_BYTE *)(v357 + 16) = 112;
  v358 = swift_allocObject(&unk_100563630, 17, 7);
  *(_BYTE *)(v358 + 16) = 8;
  v359 = swift_allocObject(&unk_100563658, 24, 7);
  *(_QWORD *)(v359 + 16) = 1752392040;
  v360 = swift_allocObject(&unk_100563680, 32, 7);
  *(_QWORD *)(v360 + 16) = sub_1003F72C0;
  *(_QWORD *)(v360 + 24) = v359;
  v361 = swift_allocObject(&unk_1005636A8, 17, 7);
  *(_BYTE *)(v361 + 16) = 33;
  v362 = swift_allocObject(&unk_1005636D0, 17, 7);
  *(_BYTE *)(v362 + 16) = 8;
  v363 = swift_allocObject(&unk_1005636F8, 32, 7);
  *(_QWORD *)(v363 + 16) = sub_1003F65B4;
  *(_QWORD *)(v363 + 24) = v355;
  v364 = swift_allocObject(&unk_100563720, 32, 7);
  *(_QWORD *)(v364 + 16) = sub_1001D60BC;
  *(_QWORD *)(v364 + 24) = v363;
  v365 = swift_allocObject(v983, 128, 7);
  *(_OWORD *)(v365 + 16) = v1004;
  *(_QWORD *)(v365 + 32) = sub_1001D60C4;
  *(_QWORD *)(v365 + 40) = v357;
  *(_QWORD *)(v365 + 48) = sub_1001D60C4;
  *(_QWORD *)(v365 + 56) = v358;
  *(_QWORD *)(v365 + 64) = sub_1003F70D8;
  *(_QWORD *)(v365 + 72) = v360;
  *(_QWORD *)(v365 + 80) = sub_1001D60C4;
  *(_QWORD *)(v365 + 88) = v361;
  *(_QWORD *)(v365 + 96) = sub_1001D60C4;
  *(_QWORD *)(v365 + 104) = v362;
  *(_QWORD *)(v365 + 112) = sub_1001D60C0;
  *(_QWORD *)(v365 + 120) = v364;
  swift_retain(v357);
  swift_retain(v358);
  swift_retain(v360);
  swift_retain(v361);
  swift_retain(v362);
  swift_retain(v364);
  v366 = v365;
  v367 = v1006;
  swift_bridgeObjectRelease(v366);
  if (os_log_type_enabled(v367, (os_log_type_t)v1005))
  {
    v368 = (uint8_t *)sub_10007010C(22);
    v369 = swift_slowAlloc(32, -1);
    v1017 = 0;
    v1016 = v369;
    v1002 = v368;
    *(_WORD *)v368 = 515;
    v1018 = v368 + 2;
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v1015 = (uint8_t *)v357;
    v253 = v1009;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    if (v253)
      goto LABEL_244;
    swift_release(v357);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v1015 = (uint8_t *)v358;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    swift_release(v358);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1003F70D8;
    v1015 = (uint8_t *)v360;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    v370 = v928;
    swift_release(v360);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v1015 = (uint8_t *)v361;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    swift_release(v361);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v1015 = (uint8_t *)v362;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    v371 = v1012;
    swift_release(v362);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C0;
    v1015 = (uint8_t *)v364;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    v372 = v1013;
    swift_release(v364);
    v373 = v1006;
    v374 = v1002;
    _os_log_impl((void *)&_mh_execute_header, v1006, (os_log_type_t)v1005, "soundViewLayout id: %{private,mask.hash}s sound succeeded.", v1002, 0x16u);
    swift_arrayDestroy(v369, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v369, -1, -1);
    sub_100070114((uint64_t)v374);

    ((void (*)(char *, uint64_t))v1007)(v370, v372);
  }
  else
  {

    swift_release(v364);
    swift_release(v362);
    swift_release(v361);
    swift_release(v360);
    swift_release(v358);
    v503 = swift_release(v357);
    v372 = v1013;
    ((void (*)(char *, uint64_t, __n128))v1007)(v928, v1013, v503);
    v371 = v1012;
    v253 = v1009;
  }
  v504 = v960;
  if (((v953 | v950) & 1) != 0)
  {
    v505 = v907;
    v506 = (unint64_t)v974;
    sub_1003DB634((unint64_t)v974, v907);
    v507 = type metadata accessor for FMIPAudioChannel(0);
    v508 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v507 - 8) + 48);
    LODWORD(v1006) = v508(v505, 1, v507);
    sub_1000051EC(v505, (uint64_t *)&unk_1005E3B10);
    v509 = v908;
    sub_1003DB7D0(v506, v908);
    v510 = v508(v509, 1, v507);
    sub_1000051EC(v509, (uint64_t *)&unk_1005E3B10);
    v511 = v905;
    sub_100007464(v975, v905, (uint64_t *)&unk_1005D3AA0);
    v512 = v959;
    v513 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v504 + 48))(v511, 1, v959);
    v1009 = v253;
    if (v513 == 1)
    {
      sub_1000051EC(v511, (uint64_t *)&unk_1005D3AA0);
      if ((v953 & 1) != 0)
      {
        LODWORD(v1005) = v510;
        swift_bridgeObjectRelease(v974);
        swift_bridgeObjectRelease(v971);
        v514 = swift_bridgeObjectRelease(v970);
        v990(v901, v989, v372, v514);
        v515 = v1010;
        v516 = v1011;
        v988(v1010, v371, v1011);
        v517 = swift_allocObject(&unk_100563C70, v986, v985);
        v518 = ((uint64_t (*)(uint64_t, uint8_t *, uint64_t))v984)(v517 + v987, v515, v516);
        v1001 = Logger.logObject.getter(v518);
        LODWORD(v1002) = static os_log_type_t.default.getter(v1001);
        v519 = swift_allocObject(&unk_100563C98, 17, 7);
        *(_BYTE *)(v519 + 16) = 112;
        v520 = swift_allocObject(&unk_100563CC0, 17, 7);
        *(_BYTE *)(v520 + 16) = 8;
        v521 = swift_allocObject(&unk_100563CE8, 24, 7);
        *(_QWORD *)(v521 + 16) = 1752392040;
        v522 = swift_allocObject(&unk_100563D10, 32, 7);
        *(_QWORD *)(v522 + 16) = sub_1003F72C0;
        *(_QWORD *)(v522 + 24) = v521;
        v523 = swift_allocObject(&unk_100563D38, 17, 7);
        *(_BYTE *)(v523 + 16) = 33;
        v524 = swift_allocObject(&unk_100563D60, 17, 7);
        *(_BYTE *)(v524 + 16) = 8;
        v525 = swift_allocObject(&unk_100563D88, 32, 7);
        *(_QWORD *)(v525 + 16) = sub_1003F65B4;
        *(_QWORD *)(v525 + 24) = v517;
        v526 = v372;
        v527 = swift_allocObject(&unk_100563DB0, 32, 7);
        *(_QWORD *)(v527 + 16) = sub_1001D60BC;
        *(_QWORD *)(v527 + 24) = v525;
        v528 = swift_allocObject(v983, 128, 7);
        *(_OWORD *)(v528 + 16) = v1004;
        *(_QWORD *)(v528 + 32) = sub_1001D60C4;
        *(_QWORD *)(v528 + 40) = v519;
        *(_QWORD *)(v528 + 48) = sub_1001D60C4;
        *(_QWORD *)(v528 + 56) = v520;
        *(_QWORD *)(v528 + 64) = sub_1003F70D8;
        *(_QWORD *)(v528 + 72) = v522;
        *(_QWORD *)(v528 + 80) = sub_1001D60C4;
        *(_QWORD *)(v528 + 88) = v523;
        *(_QWORD *)(v528 + 96) = sub_1001D60C4;
        *(_QWORD *)(v528 + 104) = v524;
        *(_QWORD *)(v528 + 112) = sub_1001D60C0;
        *(_QWORD *)(v528 + 120) = v527;
        swift_retain(v519);
        swift_retain(v520);
        swift_retain(v522);
        swift_retain(v523);
        swift_retain(v524);
        swift_retain(v527);
        v529 = v528;
        v530 = v1001;
        swift_bridgeObjectRelease(v529);
        if (os_log_type_enabled(v530, (os_log_type_t)v1002))
        {
          v531 = (_WORD *)sub_10007010C(22);
          v532 = swift_slowAlloc(32, -1);
          v1017 = 0;
          v1016 = v532;
          *(_QWORD *)&v1004 = v531;
          *v531 = 515;
          v1018 = (uint8_t *)(v531 + 1);
          v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
          v1015 = (uint8_t *)v519;
          v253 = v1009;
          sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
          if (v253)
            goto LABEL_244;
          swift_release(v519);
          v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
          v1015 = (uint8_t *)v520;
          sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
          swift_release(v520);
          v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1003F70D8;
          v1015 = (uint8_t *)v522;
          sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
          swift_release(v522);
          v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
          v1015 = (uint8_t *)v523;
          sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
          swift_release(v523);
          v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
          v1015 = (uint8_t *)v524;
          sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
          v533 = v901;
          swift_release(v524);
          v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C0;
          v1015 = (uint8_t *)v527;
          sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
          v534 = v903;
          swift_release(v527);
          v535 = (uint8_t *)v1001;
          v536 = v1004;
          _os_log_impl((void *)&_mh_execute_header, v1001, (os_log_type_t)v1002, "soundViewLayout id: %{private,mask.hash}s is a multichannel device.", (uint8_t *)v1004, 0x16u);
          swift_arrayDestroy(v532, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v532, -1, -1);
          sub_100070114(v536);

          v537 = v533;
          v538 = v1013;
          ((void (*)(char *, uint64_t))v1007)(v537, v1013);
        }
        else
        {

          swift_release(v527);
          swift_release(v524);
          swift_release(v523);
          swift_release(v522);
          swift_release(v520);
          v729 = swift_release(v519);
          ((void (*)(char *, uint64_t, __n128))v1007)(v901, v526, v729);
          v538 = v526;
          v253 = v1009;
          v534 = v903;
        }
        v730 = (int)v1006;
        v731 = HIDWORD(v951);
        v1009 = v253;
        if ((_DWORD)v1006 != 1)
        {
          if ((_DWORD)v1005 == 1)
            goto LABEL_197;
          goto LABEL_185;
        }
        if ((_DWORD)v1005 == 1)
        {
          if (v949)
          {
LABEL_197:
            v740 = v534;
            if (HIDWORD(v951))
              v782 = 9;
            else
              v782 = 6;
            v783 = v919;
            if (v919)
              v741 = 4;
            else
              v741 = v782;
            goto LABEL_218;
          }
          if (!v919)
          {
            v885 = v935(v991, 1, v948);
            v740 = v534;
            if ((_DWORD)v885 == 1)
            {
              v886 = v911;
              FMIPPlaySoundMetadata.status.getter(v885);
              v887 = v937;
              v888 = v938;
              v889 = v910;
              (*(void (**)(char *, _QWORD, uint64_t))(v937 + 104))(v910, v1003, v938);
              v890 = sub_100197B68();
              v891 = *(void (**)(char *, uint64_t))(v887 + 8);
              v891(v889, v888);
              v891(v886, v888);
              v784 = !v890;
              v730 = (int)v1006;
              if (v784)
                v741 = 2;
              else
                v741 = 0;
              goto LABEL_217;
            }
            if (!(_DWORD)v951)
            {
              if (v731)
                v741 = 8;
              else
                v741 = 0;
              goto LABEL_217;
            }
            v784 = v731 == 0;
            v785 = 7;
            v786 = 2;
            goto LABEL_214;
          }
        }
        else if (v949)
        {
LABEL_185:
          v740 = v534;
          v741 = 4;
LABEL_217:
          v783 = v919;
LABEL_218:
          v787 = (_DWORD)v1005 != 1;
          v788 = v730 != 1;
          ((void (*)(char *, uint64_t, uint64_t))v990)(v740, v989, v538);
          v789 = v1010;
          v790 = v1011;
          v988(v1010, v1012, v1011);
          v791 = swift_allocObject(&unk_100563DD8, v986, v985);
          v984(v791 + v987, v789, v790);
          v792 = swift_allocObject(&unk_100563E00, 17, 7);
          v1007 = v741;
          *(_BYTE *)(v792 + 16) = v741;
          v793 = swift_allocObject(&unk_100563E28, 32, 7);
          *(_QWORD *)(v793 + 16) = sub_1001D5570;
          *(_QWORD *)(v793 + 24) = v792;
          v794 = swift_allocObject(&unk_100563E50, 17, 7);
          *(_BYTE *)(v794 + 16) = v788;
          v795 = swift_allocObject(&unk_100563E78, 17, 7);
          *(_BYTE *)(v795 + 16) = v949;
          v796 = swift_allocObject(&unk_100563EA0, 17, 7);
          *(_BYTE *)(v796 + 16) = v951;
          *(_QWORD *)&v1004 = swift_allocObject(&unk_100563EC8, 17, 7);
          *(_BYTE *)(v1004 + 16) = v787;
          v1005 = (os_log_t)swift_allocObject(&unk_100563EF0, 17, 7);
          LOBYTE(v1005[2].isa) = v783;
          v797 = swift_allocObject(&unk_100563F18, 17, 7);
          v1006 = (os_log_t)v797;
          *(_BYTE *)(v797 + 16) = BYTE4(v951);
          v978 = (os_log_t)Logger.logObject.getter(v797);
          LODWORD(v977) = static os_log_type_t.default.getter(v978);
          v980 = swift_allocObject(&unk_100563F40, 17, 7);
          *(_BYTE *)(v980 + 16) = 112;
          v798 = swift_allocObject(&unk_100563F68, 17, 7);
          *(_BYTE *)(v798 + 16) = 8;
          v799 = swift_allocObject(&unk_100563F90, 24, 7);
          *(_QWORD *)(v799 + 16) = 1752392040;
          v800 = swift_allocObject(&unk_100563FB8, 32, 7);
          v968 = v800;
          *(_QWORD *)(v800 + 16) = sub_1003F72C0;
          *(_QWORD *)(v800 + 24) = v799;
          v969 = (uint8_t *)swift_allocObject(&unk_100563FE0, 17, 7);
          v969[16] = 33;
          v970 = (_QWORD *)swift_allocObject(&unk_100564008, 17, 7);
          *((_BYTE *)v970 + 16) = 8;
          v801 = swift_allocObject(&unk_100564030, 32, 7);
          *(_QWORD *)(v801 + 16) = sub_1003F65B4;
          *(_QWORD *)(v801 + 24) = v791;
          v802 = swift_allocObject(&unk_100564058, 32, 7);
          v971 = (char *)v802;
          *(_QWORD *)(v802 + 16) = sub_1001D60BC;
          *(_QWORD *)(v802 + 24) = v801;
          v803 = swift_allocObject(&unk_100564080, 17, 7);
          *(_BYTE *)(v803 + 16) = 34;
          v804 = v803;
          v982 = swift_allocObject(&unk_1005640A8, 17, 7);
          *(_BYTE *)(v982 + 16) = 8;
          v805 = swift_allocObject(&unk_1005640D0, 32, 7);
          *(_QWORD *)(v805 + 16) = sub_1003F6874;
          *(_QWORD *)(v805 + 24) = v793;
          v806 = swift_allocObject(&unk_1005640F8, 32, 7);
          v992 = v806;
          *(_QWORD *)(v806 + 16) = sub_1001D60BC;
          *(_QWORD *)(v806 + 24) = v805;
          v993 = swift_allocObject(&unk_100564120, 17, 7);
          *(_BYTE *)(v993 + 16) = 0;
          v997 = swift_allocObject(&unk_100564148, 17, 7);
          *(_BYTE *)(v997 + 16) = 4;
          v807 = swift_allocObject(&unk_100564170, 32, 7);
          *(_QWORD *)(v807 + 16) = sub_1003F70DC;
          *(_QWORD *)(v807 + 24) = v794;
          v808 = swift_allocObject(&unk_100564198, 32, 7);
          *(_QWORD *)(v808 + 16) = sub_1003F70D0;
          *(_QWORD *)(v808 + 24) = v807;
          v809 = swift_allocObject(&unk_1005641C0, 32, 7);
          *(_QWORD *)(v809 + 16) = sub_1001D60BC;
          *(_QWORD *)(v809 + 24) = v808;
          v810 = v798;
          v979 = (uint8_t *)v798;
          v811 = swift_allocObject(&unk_1005641E8, 32, 7);
          v995 = (uint8_t *)v811;
          *(_QWORD *)(v811 + 16) = sub_1003F72C8;
          *(_QWORD *)(v811 + 24) = v809;
          v996 = swift_allocObject(&unk_100564210, 17, 7);
          *(_BYTE *)(v996 + 16) = 0;
          v998 = swift_allocObject(&unk_100564238, 17, 7);
          *(_BYTE *)(v998 + 16) = 4;
          v812 = swift_allocObject(&unk_100564260, 32, 7);
          *(_QWORD *)(v812 + 16) = sub_1003F70DC;
          *(_QWORD *)(v812 + 24) = v795;
          v813 = swift_allocObject(&unk_100564288, 32, 7);
          *(_QWORD *)(v813 + 16) = sub_1003F70D0;
          *(_QWORD *)(v813 + 24) = v812;
          v814 = swift_allocObject(&unk_1005642B0, 32, 7);
          *(_QWORD *)(v814 + 16) = sub_1001D60BC;
          *(_QWORD *)(v814 + 24) = v813;
          v815 = (char *)swift_allocObject(&unk_1005642D8, 32, 7);
          v974 = v815;
          *((_QWORD *)v815 + 2) = sub_1003F72C8;
          *((_QWORD *)v815 + 3) = v814;
          v1000 = swift_allocObject(&unk_100564300, 17, 7);
          *(_BYTE *)(v1000 + 16) = 0;
          v816 = swift_allocObject(&unk_100564328, 17, 7);
          *(_BYTE *)(v816 + 16) = 4;
          v817 = swift_allocObject(&unk_100564350, 32, 7);
          *(_QWORD *)(v817 + 16) = sub_1003F70DC;
          *(_QWORD *)(v817 + 24) = v796;
          v818 = swift_allocObject(&unk_100564378, 32, 7);
          *(_QWORD *)(v818 + 16) = sub_1003F70D0;
          *(_QWORD *)(v818 + 24) = v817;
          v819 = swift_allocObject(&unk_1005643A0, 32, 7);
          *(_QWORD *)(v819 + 16) = sub_1001D60BC;
          *(_QWORD *)(v819 + 24) = v818;
          v820 = swift_allocObject(&unk_1005643C8, 32, 7);
          v976 = v820;
          *(_QWORD *)(v820 + 16) = sub_1003F72C8;
          *(_QWORD *)(v820 + 24) = v819;
          v966 = swift_allocObject(&unk_1005643F0, 17, 7);
          *(_BYTE *)(v966 + 16) = 0;
          v1003 = (uint8_t *)swift_allocObject(&unk_100564418, 17, 7);
          v1003[16] = 4;
          v821 = swift_allocObject(&unk_100564440, 32, 7);
          v822 = v1004;
          *(_QWORD *)(v821 + 16) = sub_1003F70DC;
          *(_QWORD *)(v821 + 24) = v822;
          v823 = swift_allocObject(&unk_100564468, 32, 7);
          *(_QWORD *)(v823 + 16) = sub_1003F70D0;
          *(_QWORD *)(v823 + 24) = v821;
          v824 = swift_allocObject(&unk_100564490, 32, 7);
          *(_QWORD *)(v824 + 16) = sub_1001D60BC;
          *(_QWORD *)(v824 + 24) = v823;
          v825 = swift_allocObject(&unk_1005644B8, 32, 7);
          v1002 = (uint8_t *)v825;
          *(_QWORD *)(v825 + 16) = sub_1003F72C8;
          *(_QWORD *)(v825 + 24) = v824;
          *(_QWORD *)&v1004 = swift_allocObject(&unk_1005644E0, 17, 7);
          *(_BYTE *)(v1004 + 16) = 0;
          v999 = swift_allocObject(&unk_100564508, 17, 7);
          *(_BYTE *)(v999 + 16) = 4;
          v826 = swift_allocObject(&unk_100564530, 32, 7);
          v827 = v1005;
          *(_QWORD *)(v826 + 16) = sub_1003F70DC;
          *(_QWORD *)(v826 + 24) = v827;
          v828 = swift_allocObject(&unk_100564558, 32, 7);
          *(_QWORD *)(v828 + 16) = sub_1003F70D0;
          *(_QWORD *)(v828 + 24) = v826;
          v829 = swift_allocObject(&unk_100564580, 32, 7);
          *(_QWORD *)(v829 + 16) = sub_1001D60BC;
          *(_QWORD *)(v829 + 24) = v828;
          v830 = swift_allocObject(&unk_1005645A8, 32, 7);
          v1005 = v830;
          v830[2].isa = (Class)sub_1003F72C8;
          v830[3].isa = (Class)v829;
          v1001 = swift_allocObject(&unk_1005645D0, 17, 7);
          LOBYTE(v1001[2].isa) = 0;
          v994 = swift_allocObject(&unk_1005645F8, 17, 7);
          *(_BYTE *)(v994 + 16) = 4;
          v831 = swift_allocObject(&unk_100564620, 32, 7);
          v832 = v1006;
          *(_QWORD *)(v831 + 16) = sub_1003F70DC;
          *(_QWORD *)(v831 + 24) = v832;
          v833 = swift_allocObject(&unk_100564648, 32, 7);
          *(_QWORD *)(v833 + 16) = sub_1003F70D0;
          *(_QWORD *)(v833 + 24) = v831;
          v834 = swift_allocObject(&unk_100564670, 32, 7);
          *(_QWORD *)(v834 + 16) = sub_1001D60BC;
          *(_QWORD *)(v834 + 24) = v833;
          v981 = v816;
          v835 = swift_allocObject(&unk_100564698, 32, 7);
          v1006 = v835;
          v835[2].isa = (Class)sub_1003F72C8;
          v835[3].isa = (Class)v834;
          v836 = swift_allocObject(v983, 464, 7);
          *(_OWORD *)(v836 + 16) = xmmword_10048FEE0;
          *(_QWORD *)(v836 + 32) = sub_1001D60C4;
          v837 = v980;
          *(_QWORD *)(v836 + 40) = v980;
          *(_QWORD *)(v836 + 48) = sub_1001D60C4;
          *(_QWORD *)(v836 + 56) = v810;
          *(_QWORD *)(v836 + 64) = sub_1003F70D8;
          v838 = v968;
          *(_QWORD *)(v836 + 72) = v968;
          *(_QWORD *)(v836 + 80) = sub_1001D60C4;
          v839 = v969;
          *(_QWORD *)(v836 + 88) = v969;
          *(_QWORD *)(v836 + 96) = sub_1001D60C4;
          v840 = v970;
          *(_QWORD *)(v836 + 104) = v970;
          *(_QWORD *)(v836 + 112) = sub_1001D60C0;
          v841 = v971;
          *(_QWORD *)(v836 + 120) = v971;
          *(_QWORD *)(v836 + 128) = sub_1001D60C4;
          v842 = (uint8_t *)v804;
          *(_QWORD *)(v836 + 136) = v804;
          *(_QWORD *)(v836 + 144) = sub_1001D60C4;
          *(_QWORD *)(v836 + 152) = v982;
          *(_QWORD *)(v836 + 160) = sub_1001D60C0;
          *(_QWORD *)(v836 + 168) = v992;
          *(_QWORD *)(v836 + 176) = sub_1001D60C4;
          *(_QWORD *)(v836 + 184) = v993;
          *(_QWORD *)(v836 + 192) = sub_1001D60C4;
          *(_QWORD *)(v836 + 200) = v997;
          *(_QWORD *)(v836 + 208) = sub_1003F70D4;
          *(_QWORD *)(v836 + 216) = v995;
          *(_QWORD *)(v836 + 224) = sub_1001D60C4;
          *(_QWORD *)(v836 + 232) = v996;
          *(_QWORD *)(v836 + 240) = sub_1001D60C4;
          *(_QWORD *)(v836 + 248) = v998;
          *(_QWORD *)(v836 + 256) = sub_1003F70D4;
          v843 = v974;
          *(_QWORD *)(v836 + 264) = v974;
          *(_QWORD *)(v836 + 272) = sub_1001D60C4;
          *(_QWORD *)(v836 + 280) = v1000;
          *(_QWORD *)(v836 + 288) = sub_1001D60C4;
          *(_QWORD *)(v836 + 296) = v816;
          *(_QWORD *)(v836 + 304) = sub_1003F70D4;
          v844 = v976;
          *(_QWORD *)(v836 + 312) = v976;
          *(_QWORD *)(v836 + 320) = sub_1001D60C4;
          v845 = v966;
          *(_QWORD *)(v836 + 328) = v966;
          *(_QWORD *)(v836 + 336) = sub_1001D60C4;
          *(_QWORD *)(v836 + 344) = v1003;
          *(_QWORD *)(v836 + 352) = sub_1003F70D4;
          *(_QWORD *)(v836 + 360) = v1002;
          *(_QWORD *)(v836 + 368) = sub_1001D60C4;
          *(_QWORD *)(v836 + 376) = v1004;
          *(_QWORD *)(v836 + 384) = sub_1001D60C4;
          *(_QWORD *)(v836 + 392) = v999;
          *(_QWORD *)(v836 + 400) = sub_1003F70D4;
          *(_QWORD *)(v836 + 408) = v1005;
          *(_QWORD *)(v836 + 416) = sub_1001D60C4;
          *(_QWORD *)(v836 + 424) = v1001;
          *(_QWORD *)(v836 + 432) = sub_1001D60C4;
          *(_QWORD *)(v836 + 440) = v994;
          *(_QWORD *)(v836 + 448) = sub_1003F70D4;
          *(_QWORD *)(v836 + 456) = v1006;
          swift_retain(v837);
          swift_retain(v979);
          swift_retain(v838);
          swift_retain(v839);
          swift_retain(v840);
          swift_retain(v841);
          v967 = v842;
          swift_retain(v842);
          swift_retain(v982);
          swift_retain(v992);
          swift_retain(v993);
          swift_retain(v997);
          swift_retain(v995);
          swift_retain(v996);
          swift_retain(v998);
          swift_retain(v843);
          swift_retain(v1000);
          swift_retain(v981);
          swift_retain(v844);
          swift_retain(v845);
          swift_retain(v1003);
          swift_retain(v1002);
          swift_retain(v1004);
          swift_retain(v999);
          swift_retain(v1005);
          swift_retain(v1001);
          swift_retain(v994);
          swift_retain(v1006);
          v846 = v836;
          v847 = v978;
          swift_bridgeObjectRelease(v846);
          if (os_log_type_enabled(v847, (os_log_type_t)v977))
          {
            v848 = v979;
            v849 = (uint8_t *)v845;
            v850 = (uint8_t *)sub_10007010C(68);
            v851 = swift_slowAlloc(64, -1);
            v1017 = 0;
            v964 = v851;
            v1016 = v851;
            v965 = v850;
            *(_WORD *)v850 = 2307;
            v1018 = v850 + 2;
            v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
            v852 = v980;
            v1015 = (uint8_t *)v980;
            v253 = v1009;
            sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
            if (v253)
              goto LABEL_244;
            swift_release(v852);
            v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
            v853 = v848;
            v1015 = v848;
            sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
            v854 = (uint8_t *)v997;
            v855 = (uint8_t *)v992;
            v856 = (uint8_t *)v982;
            v857 = v971;
            v858 = (uint8_t *)v970;
            swift_release(v853);
            v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1003F70D8;
            v859 = v968;
            v1015 = (uint8_t *)v968;
            sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
            v322 = v1013;
            swift_release(v859);
            v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
            v860 = v969;
            v1015 = v969;
            sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
            swift_release(v860);
            v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
            v1015 = v858;
            sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
            v861 = v858;
            v308 = v1012;
            swift_release(v861);
            v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C0;
            v1015 = (uint8_t *)v857;
            sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
            swift_release(v857);
            v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
            v862 = v967;
            v1015 = v967;
            sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
            swift_release(v862);
            v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
            v1015 = v856;
            sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
            v863 = v856;
            v312 = (uint64_t)v972;
            swift_release(v863);
            v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C0;
            v1015 = v855;
            sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
            v864 = v849;
            swift_release(v855);
            v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
            v865 = v993;
            v1015 = (uint8_t *)v993;
            sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
            swift_release(v865);
            v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
            v1015 = v854;
            sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
            swift_release(v854);
            v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1003F70D4;
            v866 = v995;
            v1015 = v995;
            sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
            swift_release(v866);
            v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
            v867 = v996;
            v1015 = (uint8_t *)v996;
            sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
            swift_release(v867);
            v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
            v868 = v998;
            v1015 = (uint8_t *)v998;
            sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
            swift_release(v868);
            v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1003F70D4;
            v869 = v974;
            v1015 = (uint8_t *)v974;
            sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
            swift_release(v869);
            v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
            v870 = v1000;
            v1015 = (uint8_t *)v1000;
            sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
            swift_release(v870);
            v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
            v871 = v981;
            v1015 = (uint8_t *)v981;
            sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
            swift_release(v871);
            v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1003F70D4;
            v872 = v976;
            v1015 = (uint8_t *)v976;
            sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
            v873 = v1001;
            v874 = (uint8_t *)v999;
            swift_release(v872);
            v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
            v1015 = v864;
            sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
            v875 = (uint8_t *)v1004;
            v876 = v1003;
            swift_release(v864);
            v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
            v1015 = v876;
            sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
            v877 = v876;
            v414 = v1007;
            swift_release(v877);
            v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1003F70D4;
            v878 = v1002;
            v1015 = v1002;
            sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
            swift_release(v878);
            v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
            v1015 = v875;
            sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
            swift_release(v875);
            v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
            v1015 = v874;
            sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
            swift_release(v874);
            v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1003F70D4;
            v879 = v1005;
            v1015 = (uint8_t *)v1005;
            sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
            swift_release(v879);
            v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
            v1015 = (uint8_t *)v873;
            sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
            swift_release(v873);
            v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
            v880 = v994;
            v1015 = (uint8_t *)v994;
            sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
            swift_release(v880);
            v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1003F70D4;
            v881 = v1006;
            v1015 = (uint8_t *)v1006;
            sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
            v1009 = 0;
            swift_release(v881);
            v882 = v978;
            v883 = v965;
            _os_log_impl((void *)&_mh_execute_header, v978, (os_log_type_t)v977, "soundViewLayout id: %{private,mask.hash}s multichannel result %{public}s. Left: [Playing_Classic: %{BOOL}d, PLaying_LE: %{BOOL}d, Queued: %{BOOL}d] Right: [Playing_Classic: %{BOOL}d, Playing_LE: %{BOOL}d, Queued: %{BOOL}d].", v965, 0x44u);
            v884 = v964;
            swift_arrayDestroy(v964, 2, (char *)&type metadata for Any + 8);
            swift_slowDealloc(v884, -1, -1);
            sub_100070114((uint64_t)v883);

            (*(void (**)(char *, uint64_t))(v1008 + 8))(v903, v322);
            goto LABEL_221;
          }
          swift_release(v980);
          swift_release(v979);
          swift_release(v838);
          swift_release(v839);
          swift_release(v840);
          swift_release(v841);
          swift_release(v967);
          swift_release(v982);
          swift_release(v992);
          swift_release(v993);
          swift_release(v997);
          swift_release(v995);
          swift_release(v996);
          swift_release(v998);
          swift_release(v843);
          swift_release(v1000);
          swift_release(v981);
          swift_release(v844);
          swift_release(v845);
          swift_release(v1003);
          swift_release(v1002);
          swift_release(v1004);
          swift_release(v999);
          swift_release(v1005);
          swift_release(v1001);
          swift_release(v994);
          swift_release(v1006);

          v780 = *(void (**)(char *, uint64_t))(v1008 + 8);
          v781 = v903;
LABEL_223:
          v322 = v1013;
          v780(v781, v1013);
          (*(void (**)(char *, uint64_t))(v956 + 8))(v958, v957);
          v312 = (uint64_t)v972;
          v308 = v1012;
          v414 = v1007;
          goto LABEL_124;
        }
        v740 = v534;
        v784 = (_DWORD)v951 == 0;
        v785 = 5;
        v786 = 10;
LABEL_214:
        if (v784)
          v741 = v785;
        else
          v741 = v786;
        goto LABEL_217;
      }
LABEL_141:
      if (v970 && (v704 = v970[2], swift_bridgeObjectRelease(v970), v704))
      {
        swift_bridgeObjectRelease(v974);
        v705 = swift_bridgeObjectRelease(v971);
        v706 = 2;
      }
      else
      {
        v707 = *((_QWORD *)v974 + 2);
        v705 = swift_bridgeObjectRelease(v974);
        if (v707)
        {
          v705 = swift_bridgeObjectRelease(v971);
          v706 = 3;
        }
        else if (v971 && (v742 = *((_QWORD *)v971 + 2), v705 = swift_bridgeObjectRelease(v971), v742))
        {
          v706 = 3;
        }
        else
        {
          v706 = 0;
        }
      }
      v990(v909, v989, v372, v705);
      v743 = v1010;
      v744 = v1011;
      v988(v1010, v371, v1011);
      v745 = swift_allocObject(&unk_100563A18, v986, v985);
      v984(v745 + v987, v743, v744);
      v746 = swift_allocObject(&unk_100563A40, 17, 7);
      v1007 = v706;
      *(_BYTE *)(v746 + 16) = v706;
      v747 = swift_allocObject(&unk_100563A68, 32, 7);
      *(_QWORD *)(v747 + 16) = sub_1003F72C4;
      *(_QWORD *)(v747 + 24) = v746;
      v1006 = (os_log_t)Logger.logObject.getter(v747);
      LODWORD(v1005) = static os_log_type_t.default.getter(v1006);
      v748 = (uint8_t *)swift_allocObject(&unk_100563A90, 17, 7);
      v748[16] = 112;
      v1001 = swift_allocObject(&unk_100563AB8, 17, 7);
      LOBYTE(v1001[2].isa) = 8;
      v749 = swift_allocObject(&unk_100563AE0, 24, 7);
      *(_QWORD *)(v749 + 16) = 1752392040;
      v750 = swift_allocObject(&unk_100563B08, 32, 7);
      *(_QWORD *)(v750 + 16) = sub_1003F72C0;
      *(_QWORD *)(v750 + 24) = v749;
      v751 = swift_allocObject(&unk_100563B30, 17, 7);
      *(_BYTE *)(v751 + 16) = 33;
      v752 = v751;
      v1000 = swift_allocObject(&unk_100563B58, 17, 7);
      *(_BYTE *)(v1000 + 16) = 8;
      v753 = swift_allocObject(&unk_100563B80, 32, 7);
      *(_QWORD *)(v753 + 16) = sub_1003F65B4;
      *(_QWORD *)(v753 + 24) = v745;
      v754 = swift_allocObject(&unk_100563BA8, 32, 7);
      *(_QWORD *)(v754 + 16) = sub_1001D60BC;
      *(_QWORD *)(v754 + 24) = v753;
      v755 = swift_allocObject(&unk_100563BD0, 17, 7);
      *(_BYTE *)(v755 + 16) = 34;
      v756 = swift_allocObject(&unk_100563BF8, 17, 7);
      *(_BYTE *)(v756 + 16) = 8;
      v757 = swift_allocObject(&unk_100563C20, 32, 7);
      *(_QWORD *)(v757 + 16) = sub_1003F6874;
      *(_QWORD *)(v757 + 24) = v747;
      v758 = swift_allocObject(&unk_100563C48, 32, 7);
      *(_QWORD *)(v758 + 16) = sub_1001D60BC;
      *(_QWORD *)(v758 + 24) = v757;
      v759 = swift_allocObject(v983, 176, 7);
      *(_OWORD *)(v759 + 16) = xmmword_10048FED0;
      *(_QWORD *)(v759 + 32) = sub_1001D60C4;
      *(_QWORD *)(v759 + 40) = v748;
      v760 = v1001;
      *(_QWORD *)(v759 + 48) = sub_1001D60C4;
      *(_QWORD *)(v759 + 56) = v760;
      *(_QWORD *)(v759 + 64) = sub_1003F70D8;
      *(_QWORD *)(v759 + 72) = v750;
      *(_QWORD *)(v759 + 80) = sub_1001D60C4;
      *(_QWORD *)(v759 + 88) = v752;
      v761 = (uint8_t *)v752;
      v762 = (uint8_t *)v1000;
      *(_QWORD *)(v759 + 96) = sub_1001D60C4;
      *(_QWORD *)(v759 + 104) = v762;
      *(_QWORD *)(v759 + 112) = sub_1001D60C0;
      *(_QWORD *)(v759 + 120) = v754;
      *(_QWORD *)(v759 + 128) = sub_1001D60C4;
      *(_QWORD *)(v759 + 136) = v755;
      *(_QWORD *)(v759 + 144) = sub_1001D60C4;
      *(_QWORD *)(v759 + 152) = v756;
      *(_QWORD *)(v759 + 160) = sub_1001D60C0;
      *(_QWORD *)(v759 + 168) = v758;
      v1002 = v748;
      v763 = v748;
      v764 = (uint8_t *)v760;
      swift_retain(v763);
      swift_retain(v764);
      v1003 = (uint8_t *)v750;
      swift_retain(v750);
      v765 = v761;
      swift_retain(v761);
      swift_retain(v762);
      swift_retain(v754);
      *(_QWORD *)&v1004 = v755;
      swift_retain(v755);
      swift_retain(v756);
      swift_retain(v758);
      v766 = v759;
      v767 = v1006;
      swift_bridgeObjectRelease(v766);
      if (os_log_type_enabled(v767, (os_log_type_t)v1005))
      {
        v998 = v754;
        v999 = v758;
        v996 = v756;
        v768 = (uint8_t *)sub_10007010C(32);
        v769 = swift_slowAlloc(64, -1);
        v1017 = 0;
        v1016 = v769;
        *(_WORD *)v768 = 771;
        v1018 = v768 + 2;
        v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
        v770 = v1002;
        v1015 = v1002;
        v253 = v1009;
        sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
        if (v253)
          goto LABEL_244;
        v997 = v769;
        swift_release(v770);
        v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
        v1015 = v764;
        sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
        v322 = v1013;
        v308 = v1012;
        swift_release(v764);
        v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1003F70D8;
        v771 = v1003;
        v1015 = v1003;
        sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
        v312 = (uint64_t)v972;
        swift_release(v771);
        v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
        v1015 = v765;
        sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
        v772 = v768;
        swift_release(v765);
        v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
        v1015 = v762;
        sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
        swift_release(v762);
        v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C0;
        v773 = v998;
        v1015 = (uint8_t *)v998;
        sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
        v414 = v1007;
        swift_release(v773);
        v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
        v774 = v1004;
        v1015 = (uint8_t *)v1004;
        sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
        swift_release(v774);
        v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
        v775 = v996;
        v1015 = (uint8_t *)v996;
        sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
        v776 = v909;
        swift_release(v775);
        v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C0;
        v777 = v999;
        v1015 = (uint8_t *)v999;
        sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
        v1009 = 0;
        swift_release(v777);
        v778 = v1006;
        _os_log_impl((void *)&_mh_execute_header, v1006, (os_log_type_t)v1005, "soundViewLayout id: %{private,mask.hash}s [Monaural / Can Stop Sound] is %{public}s.", v772, 0x20u);
        v779 = v997;
        swift_arrayDestroy(v997, 2, (char *)&type metadata for Any + 8);
        swift_slowDealloc(v779, -1, -1);
        sub_100070114((uint64_t)v772);

        (*(void (**)(char *, uint64_t))(v1008 + 8))(v776, v322);
        goto LABEL_221;
      }
      swift_release(v1002);
      swift_release(v764);
      swift_release(v1003);
      swift_release(v761);
      swift_release(v762);
      swift_release(v754);
      swift_release(v1004);
      swift_release(v756);
      swift_release(v758);

      v780 = *(void (**)(char *, uint64_t))(v1008 + 8);
      v781 = v909;
      goto LABEL_223;
    }
    v615 = v904;
    (*(void (**)(char *, uint64_t, uint64_t))(v504 + 32))(v904, v511, v512);
    if ((v953 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v504 + 8))(v615, v512);
      goto LABEL_141;
    }
    LODWORD(v1005) = v510;
    swift_bridgeObjectRelease(v974);
    swift_bridgeObjectRelease(v971);
    v616 = swift_bridgeObjectRelease(v970);
    v990(v900, v989, v372, v616);
    v617 = v1010;
    v618 = v1011;
    v988(v1010, v371, v1011);
    v619 = swift_allocObject(&unk_1005646C0, v986, v985);
    v620 = ((uint64_t (*)(uint64_t, uint8_t *, uint64_t))v984)(v619 + v987, v617, v618);
    v1003 = (uint8_t *)Logger.logObject.getter(v620);
    LODWORD(v1002) = static os_log_type_t.default.getter(v1003);
    v621 = swift_allocObject(&unk_1005646E8, 17, 7);
    *(_BYTE *)(v621 + 16) = 112;
    v622 = swift_allocObject(&unk_100564710, 17, 7);
    *(_BYTE *)(v622 + 16) = 8;
    v623 = swift_allocObject(&unk_100564738, 24, 7);
    *(_QWORD *)(v623 + 16) = 1752392040;
    v624 = swift_allocObject(&unk_100564760, 32, 7);
    *(_QWORD *)(v624 + 16) = sub_1003F72C0;
    *(_QWORD *)(v624 + 24) = v623;
    v625 = swift_allocObject(&unk_100564788, 17, 7);
    *(_BYTE *)(v625 + 16) = 33;
    v626 = swift_allocObject(&unk_1005647B0, 17, 7);
    *(_BYTE *)(v626 + 16) = 8;
    v627 = swift_allocObject(&unk_1005647D8, 32, 7);
    *(_QWORD *)(v627 + 16) = sub_1003F65B4;
    *(_QWORD *)(v627 + 24) = v619;
    v628 = swift_allocObject(&unk_100564800, 32, 7);
    *(_QWORD *)(v628 + 16) = sub_1001D60BC;
    *(_QWORD *)(v628 + 24) = v627;
    v629 = swift_allocObject(v983, 128, 7);
    *(_OWORD *)(v629 + 16) = v1004;
    *(_QWORD *)(v629 + 32) = sub_1001D60C4;
    *(_QWORD *)(v629 + 40) = v621;
    *(_QWORD *)(v629 + 48) = sub_1001D60C4;
    *(_QWORD *)(v629 + 56) = v622;
    *(_QWORD *)(v629 + 64) = sub_1003F70D8;
    *(_QWORD *)(v629 + 72) = v624;
    *(_QWORD *)(v629 + 80) = sub_1001D60C4;
    *(_QWORD *)(v629 + 88) = v625;
    *(_QWORD *)(v629 + 96) = sub_1001D60C4;
    *(_QWORD *)(v629 + 104) = v626;
    *(_QWORD *)(v629 + 112) = sub_1001D60C0;
    *(_QWORD *)(v629 + 120) = v628;
    swift_retain(v621);
    swift_retain(v622);
    swift_retain(v624);
    swift_retain(v625);
    swift_retain(v626);
    swift_retain(v628);
    v630 = v629;
    v631 = v1003;
    swift_bridgeObjectRelease(v630);
    if (os_log_type_enabled(v631, (os_log_type_t)v1002))
    {
      v632 = (_WORD *)sub_10007010C(22);
      v633 = swift_slowAlloc(32, -1);
      v1017 = 0;
      v1016 = v633;
      *(_QWORD *)&v1004 = v632;
      *v632 = 515;
      v1018 = (uint8_t *)(v632 + 1);
      v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
      v1015 = (uint8_t *)v621;
      v253 = v1009;
      sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
      if (v253)
        goto LABEL_244;
      swift_release(v621);
      v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
      v1015 = (uint8_t *)v622;
      sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
      swift_release(v622);
      v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1003F70D8;
      v1015 = (uint8_t *)v624;
      sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
      v634 = v900;
      swift_release(v624);
      v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
      v1015 = (uint8_t *)v625;
      sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
      v308 = v1012;
      swift_release(v625);
      v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
      v1015 = (uint8_t *)v626;
      sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
      v312 = (uint64_t)v972;
      swift_release(v626);
      v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C0;
      v1015 = (uint8_t *)v628;
      sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
      v322 = v1013;
      v1009 = 0;
      swift_release(v628);
      v635 = v1003;
      v636 = v1004;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v1003, (os_log_type_t)v1002, "soundViewLayout id: %{private,mask.hash}s is a multichannel device and has primary selected part.", (uint8_t *)v1004, 0x16u);
      swift_arrayDestroy(v633, 1, (char *)&type metadata for Any + 8);
      swift_slowDealloc(v633, -1, -1);
      sub_100070114(v636);

      v637 = ((uint64_t (*)(char *, uint64_t))v1007)(v634, v322);
    }
    else
    {

      swift_release(v628);
      swift_release(v626);
      swift_release(v625);
      swift_release(v624);
      swift_release(v622);
      v733 = swift_release(v621);
      v322 = v1013;
      v637 = ((uint64_t (*)(char *, uint64_t, __n128))v1007)(v900, v1013, v733);
      v312 = (uint64_t)v972;
      v308 = v1012;
    }
    v734 = v957;
    v735 = v959;
    v313 = (uint64_t)v895;
    v736 = v904;
    FMIPItem.partType.getter(v637);
    (*(void (**)(char *, uint64_t))(v960 + 8))(v736, v735);
    (*(void (**)(char *, uint64_t))(v956 + 8))(v958, v734);
    v350 = (void (**)(uint64_t, char *))v916;
    v351 = (char *)v917;
    v737 = v916[11]((char *)v313, v917);
    v589 = v915;
    if (v737 == enum case for FMIPPartType.standalone(_:))
      goto LABEL_107;
    if (v737 == enum case for FMIPPartType.case(_:))
    {
LABEL_97:
      if (v589)
        v590 = 2;
      else
        v590 = 0;
      v591 = v952;
LABEL_158:
      if (v591)
        v414 = 3;
      else
        v414 = v590;
      goto LABEL_124;
    }
    if (v737 == enum case for FMIPPartType.leftBud(_:))
    {
      v414 = 3;
      if (v949)
        goto LABEL_124;
      if ((_DWORD)v951)
        v738 = 2;
      else
        v738 = 0;
      v739 = (int)v1006;
LABEL_209:
      if (v739 == 1)
        v414 = v738;
      else
        v414 = 3;
      goto LABEL_124;
    }
    if (v737 == enum case for FMIPPartType.rightBud(_:))
    {
      v414 = 3;
      if (v919)
        goto LABEL_124;
      if (HIDWORD(v951))
        v738 = 2;
      else
        v738 = 0;
      v739 = (int)v1005;
      goto LABEL_209;
    }
LABEL_232:
    if (v737 != enum case for FMIPPartType.generic(_:))
      v350[1](v313, v351);
    goto LABEL_107;
  }
  swift_bridgeObjectRelease(v974);
  swift_bridgeObjectRelease(v971);
  swift_bridgeObjectRelease(v970);
  v539 = v911;
  v540 = v958;
  FMIPPlaySoundMetadata.status.getter(v541);
  v542 = v937;
  v543 = v938;
  v544 = v910;
  (*(void (**)(char *, _QWORD, uint64_t))(v937 + 104))(v910, v1003, v938);
  v545 = sub_100197B68();
  v546 = *(void (**)(char *, uint64_t))(v542 + 8);
  v546(v544, v543);
  v546(v539, v543);
  v547 = v956;
  v548 = v906;
  v549 = v540;
  v550 = v957;
  v551 = (*(uint64_t (**)(char *, char *, uint64_t))(v956 + 16))(v906, v549, v957);
  v1009 = v253;
  if (!v545)
  {
    v1006 = *(os_log_t *)(v547 + 8);
    ((void (*)(char *, uint64_t))v1006)(v548, v550);
    goto LABEL_117;
  }
  v552 = v896;
  v553 = Date.init()(v551);
  v554 = v897;
  FMIPPlaySoundMetadata.timestamp.getter(v553);
  v555 = Date.timeIntervalSince(_:)(v554);
  v556 = *(void (**)(char *, uint64_t))(v898 + 8);
  v557 = v554;
  v558 = v899;
  v556(v557, v899);
  v556(v552, v558);
  v1006 = *(os_log_t *)(v547 + 8);
  ((void (*)(char *, uint64_t))v1006)(v548, v550);
  if (v555 >= 15.0)
  {
LABEL_117:
    ((void (*)(char *, uint64_t, uint64_t))v990)(v913, v989, v372);
    v638 = v1010;
    v639 = v1011;
    v988(v1010, v371, v1011);
    v640 = swift_allocObject(&unk_100563748, v986, v985);
    v641 = ((uint64_t (*)(uint64_t, uint8_t *, uint64_t))v984)(v640 + v987, v638, v639);
    v1005 = (os_log_t)Logger.logObject.getter(v641);
    LODWORD(v1003) = static os_log_type_t.default.getter(v1005);
    v642 = swift_allocObject(&unk_100563770, 17, 7);
    *(_BYTE *)(v642 + 16) = 112;
    v643 = swift_allocObject(&unk_100563798, 17, 7);
    *(_BYTE *)(v643 + 16) = 8;
    v644 = swift_allocObject(&unk_1005637C0, 24, 7);
    *(_QWORD *)(v644 + 16) = 1752392040;
    v645 = swift_allocObject(&unk_1005637E8, 32, 7);
    *(_QWORD *)(v645 + 16) = sub_1003F72C0;
    *(_QWORD *)(v645 + 24) = v644;
    v646 = swift_allocObject(&unk_100563810, 17, 7);
    *(_BYTE *)(v646 + 16) = 33;
    v647 = swift_allocObject(&unk_100563838, 17, 7);
    *(_BYTE *)(v647 + 16) = 8;
    v648 = swift_allocObject(&unk_100563860, 32, 7);
    *(_QWORD *)(v648 + 16) = sub_1003F65B4;
    *(_QWORD *)(v648 + 24) = v640;
    v649 = swift_allocObject(&unk_100563888, 32, 7);
    *(_QWORD *)(v649 + 16) = sub_1001D60BC;
    *(_QWORD *)(v649 + 24) = v648;
    v650 = swift_allocObject(v983, 128, 7);
    *(_OWORD *)(v650 + 16) = v1004;
    *(_QWORD *)(v650 + 32) = sub_1001D60C4;
    *(_QWORD *)(v650 + 40) = v642;
    *(_QWORD *)(v650 + 48) = sub_1001D60C4;
    *(_QWORD *)(v650 + 56) = v643;
    *(_QWORD *)(v650 + 64) = sub_1003F70D8;
    *(_QWORD *)(v650 + 72) = v645;
    *(_QWORD *)(v650 + 80) = sub_1001D60C4;
    *(_QWORD *)(v650 + 88) = v646;
    *(_QWORD *)(v650 + 96) = sub_1001D60C4;
    *(_QWORD *)(v650 + 104) = v647;
    *(_QWORD *)(v650 + 112) = sub_1001D60C0;
    *(_QWORD *)(v650 + 120) = v649;
    swift_retain(v642);
    swift_retain(v643);
    swift_retain(v645);
    swift_retain(v646);
    swift_retain(v647);
    swift_retain(v649);
    v651 = v650;
    v652 = v1005;
    swift_bridgeObjectRelease(v651);
    if (!os_log_type_enabled(v652, (os_log_type_t)v1003))
    {
      swift_release(v642);
      swift_release(v643);
      swift_release(v645);
      swift_release(v646);
      swift_release(v647);
      swift_release(v649);

      v322 = v1013;
      ((void (*)(char *, uint64_t))v1007)(v913, v1013);
      ((void (*)(char *, uint64_t, __n128))v1006)(v958, v957, v702);
      goto LABEL_122;
    }
    v653 = (_WORD *)sub_10007010C(22);
    v654 = swift_slowAlloc(32, -1);
    v1017 = 0;
    v1016 = v654;
    *(_QWORD *)&v1004 = v653;
    *v653 = 515;
    v1018 = (uint8_t *)(v653 + 1);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v1015 = (uint8_t *)v642;
    v253 = v1009;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    if (v253)
      goto LABEL_244;
    swift_release(v642);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v1015 = (uint8_t *)v643;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    swift_release(v643);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1003F70D8;
    v1015 = (uint8_t *)v645;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    v308 = v1012;
    swift_release(v645);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v1015 = (uint8_t *)v646;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    v655 = v913;
    swift_release(v646);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v1015 = (uint8_t *)v647;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    v322 = v1013;
    swift_release(v647);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C0;
    v1015 = (uint8_t *)v649;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    v312 = (uint64_t)v972;
    v1009 = 0;
    swift_release(v649);
    v656 = v1005;
    v657 = v1004;
    _os_log_impl((void *)&_mh_execute_header, v1005, (os_log_type_t)v1003, "soundViewLayout id: %{private,mask.hash}s is no longer playing sound - 15 seconds elapsed.", (uint8_t *)v1004, 0x16u);
    swift_arrayDestroy(v654, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v654, -1, -1);
    sub_100070114(v657);

    ((void (*)(char *, uint64_t))v1007)(v655, v322);
    ((void (*)(char *, uint64_t))v1006)(v958, v957);
    goto LABEL_107;
  }
  ((void (*)(char *, uint64_t, uint64_t))v990)(v902, v989, v372);
  v559 = v1010;
  v560 = v1011;
  v988(v1010, v371, v1011);
  v561 = swift_allocObject(&unk_1005638B0, v986, v985);
  v562 = ((uint64_t (*)(uint64_t, uint8_t *, uint64_t))v984)(v561 + v987, v559, v560);
  v1005 = (os_log_t)Logger.logObject.getter(v562);
  LODWORD(v1003) = static os_log_type_t.default.getter(v1005);
  v563 = swift_allocObject(&unk_1005638D8, 17, 7);
  *(_BYTE *)(v563 + 16) = 112;
  v564 = swift_allocObject(&unk_100563900, 17, 7);
  *(_BYTE *)(v564 + 16) = 8;
  v565 = swift_allocObject(&unk_100563928, 24, 7);
  *(_QWORD *)(v565 + 16) = 1752392040;
  v566 = swift_allocObject(&unk_100563950, 32, 7);
  *(_QWORD *)(v566 + 16) = sub_1003F72C0;
  *(_QWORD *)(v566 + 24) = v565;
  v567 = swift_allocObject(&unk_100563978, 17, 7);
  *(_BYTE *)(v567 + 16) = 33;
  v568 = swift_allocObject(&unk_1005639A0, 17, 7);
  *(_BYTE *)(v568 + 16) = 8;
  v569 = swift_allocObject(&unk_1005639C8, 32, 7);
  *(_QWORD *)(v569 + 16) = sub_1003F65B4;
  *(_QWORD *)(v569 + 24) = v561;
  v570 = swift_allocObject(&unk_1005639F0, 32, 7);
  *(_QWORD *)(v570 + 16) = sub_1001D60BC;
  *(_QWORD *)(v570 + 24) = v569;
  v571 = swift_allocObject(v983, 128, 7);
  *(_OWORD *)(v571 + 16) = v1004;
  *(_QWORD *)(v571 + 32) = sub_1001D60C4;
  *(_QWORD *)(v571 + 40) = v563;
  *(_QWORD *)(v571 + 48) = sub_1001D60C4;
  *(_QWORD *)(v571 + 56) = v564;
  *(_QWORD *)(v571 + 64) = sub_1003F70D8;
  *(_QWORD *)(v571 + 72) = v566;
  *(_QWORD *)(v571 + 80) = sub_1001D60C4;
  *(_QWORD *)(v571 + 88) = v567;
  *(_QWORD *)(v571 + 96) = sub_1001D60C4;
  *(_QWORD *)(v571 + 104) = v568;
  *(_QWORD *)(v571 + 112) = sub_1001D60C0;
  *(_QWORD *)(v571 + 120) = v570;
  swift_retain(v563);
  swift_retain(v564);
  swift_retain(v566);
  swift_retain(v567);
  swift_retain(v568);
  swift_retain(v570);
  v572 = v571;
  v573 = v1005;
  swift_bridgeObjectRelease(v572);
  if (!os_log_type_enabled(v573, (os_log_type_t)v1003))
  {
    swift_release(v563);
    swift_release(v564);
    swift_release(v566);
    swift_release(v567);
    swift_release(v568);
    swift_release(v570);

    v322 = v1013;
    ((void (*)(char *, uint64_t))v1007)(v902, v1013);
    ((void (*)(char *, uint64_t, __n128))v1006)(v958, v957, v732);
LABEL_110:
    v414 = 3;
LABEL_123:
    v312 = (uint64_t)v972;
    v308 = v1012;
    goto LABEL_124;
  }
  v574 = (_WORD *)sub_10007010C(22);
  v575 = swift_slowAlloc(32, -1);
  v1017 = 0;
  v1016 = v575;
  *(_QWORD *)&v1004 = v574;
  *v574 = 515;
  v1018 = (uint8_t *)(v574 + 1);
  v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
  v1015 = (uint8_t *)v563;
  v253 = v1009;
  sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
  if (v253)
    goto LABEL_244;
  swift_release(v563);
  v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
  v1015 = (uint8_t *)v564;
  sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
  swift_release(v564);
  v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1003F70D8;
  v1015 = (uint8_t *)v566;
  sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
  v308 = v1012;
  swift_release(v566);
  v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
  v1015 = (uint8_t *)v567;
  sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
  v576 = v902;
  swift_release(v567);
  v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
  v1015 = (uint8_t *)v568;
  sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
  v322 = v1013;
  swift_release(v568);
  v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C0;
  v1015 = (uint8_t *)v570;
  sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
  v312 = (uint64_t)v972;
  v1009 = 0;
  swift_release(v570);
  v577 = v1005;
  v578 = v1004;
  _os_log_impl((void *)&_mh_execute_header, v1005, (os_log_type_t)v1003, "soundViewLayout id: %{private,mask.hash}s is playing sound - for 15 seconds.", (uint8_t *)v1004, 0x16u);
  swift_arrayDestroy(v575, 1, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v575, -1, -1);
  sub_100070114(v578);

  ((void (*)(char *, uint64_t))v1007)(v576, v322);
  ((void (*)(char *, uint64_t))v1006)(v958, v957);
LABEL_53:
  v414 = 3;
LABEL_124:
  ((void (*)(uint64_t, uint64_t, uint64_t))v990)(v312, v989, v322);
  v659 = v1010;
  v660 = v1011;
  v988(v1010, v308, v1011);
  v661 = swift_allocObject(&unk_100562848, v986, v985);
  v984(v661 + v987, v659, v660);
  v662 = swift_allocObject(&unk_100562870, 17, 7);
  v1007 = v414;
  *(_BYTE *)(v662 + 16) = v414;
  v663 = swift_allocObject(&unk_100562898, 32, 7);
  *(_QWORD *)(v663 + 16) = sub_1003F72C4;
  *(_QWORD *)(v663 + 24) = v662;
  v1012 = Logger.logObject.getter(v663);
  LODWORD(v1011) = static os_log_type_t.default.getter(v1012);
  v664 = swift_allocObject(&unk_1005628C0, 17, 7);
  *(_BYTE *)(v664 + 16) = 112;
  v1005 = (os_log_t)swift_allocObject(&unk_1005628E8, 17, 7);
  LOBYTE(v1005[2].isa) = 8;
  v665 = swift_allocObject(&unk_100562910, 24, 7);
  *(_QWORD *)(v665 + 16) = 1752392040;
  v666 = swift_allocObject(&unk_100562938, 32, 7);
  *(_QWORD *)(v666 + 16) = sub_1003F72C0;
  *(_QWORD *)(v666 + 24) = v665;
  v667 = swift_allocObject(&unk_100562960, 17, 7);
  *(_BYTE *)(v667 + 16) = 33;
  v668 = v667;
  v1003 = (uint8_t *)swift_allocObject(&unk_100562988, 17, 7);
  v1003[16] = 8;
  v669 = swift_allocObject(&unk_1005629B0, 32, 7);
  *(_QWORD *)(v669 + 16) = sub_1003F65B4;
  *(_QWORD *)(v669 + 24) = v661;
  v670 = swift_allocObject(&unk_1005629D8, 32, 7);
  *(_QWORD *)(v670 + 16) = sub_1001D60BC;
  *(_QWORD *)(v670 + 24) = v669;
  v671 = swift_allocObject(&unk_100562A00, 17, 7);
  *(_BYTE *)(v671 + 16) = 34;
  v672 = swift_allocObject(&unk_100562A28, 17, 7);
  *(_BYTE *)(v672 + 16) = 8;
  v673 = swift_allocObject(&unk_100562A50, 32, 7);
  *(_QWORD *)(v673 + 16) = sub_1003F6874;
  *(_QWORD *)(v673 + 24) = v663;
  v674 = swift_allocObject(&unk_100562A78, 32, 7);
  *(_QWORD *)(v674 + 16) = sub_1001D60BC;
  *(_QWORD *)(v674 + 24) = v673;
  v675 = swift_initStackObject(v983, &v1019);
  *(_OWORD *)(v675 + 16) = xmmword_10048FED0;
  *(_QWORD *)(v675 + 32) = sub_1001D60C4;
  *(_QWORD *)(v675 + 40) = v664;
  v676 = v1005;
  *(_QWORD *)(v675 + 48) = sub_1001D60C4;
  *(_QWORD *)(v675 + 56) = v676;
  *(_QWORD *)(v675 + 64) = sub_1003F70D8;
  *(_QWORD *)(v675 + 72) = v666;
  *(_QWORD *)(v675 + 80) = sub_1001D60C4;
  *(_QWORD *)(v675 + 88) = v668;
  v677 = v668;
  v678 = v1003;
  *(_QWORD *)(v675 + 96) = sub_1001D60C4;
  *(_QWORD *)(v675 + 104) = v678;
  *(_QWORD *)(v675 + 112) = sub_1001D60C0;
  *(_QWORD *)(v675 + 120) = v670;
  *(_QWORD *)(v675 + 128) = sub_1001D60C4;
  *(_QWORD *)(v675 + 136) = v671;
  *(_QWORD *)(v675 + 144) = sub_1001D60C4;
  *(_QWORD *)(v675 + 152) = v672;
  *(_QWORD *)(v675 + 160) = sub_1001D60C0;
  *(_QWORD *)(v675 + 168) = v674;
  v1006 = (os_log_t)v664;
  v679 = v664;
  v680 = (uint8_t *)v676;
  swift_retain(v679);
  swift_retain(v680);
  *(_QWORD *)&v1004 = v666;
  swift_retain(v666);
  swift_retain(v677);
  swift_retain(v678);
  swift_retain(v670);
  v1010 = (uint8_t *)v671;
  swift_retain(v671);
  v681 = v672;
  swift_retain(v672);
  swift_retain(v674);
  swift_bridgeObjectRelease(v675);
  if (!os_log_type_enabled(v1012, (os_log_type_t)v1011))
  {
    swift_release(v1006);
    swift_release(v680);
    swift_release(v1004);
    swift_release(v677);
    swift_release(v678);
    swift_release(v670);
    swift_release(v1010);
    swift_release(v672);
    swift_release(v674);

    (*(void (**)(char *, uint64_t))(v1008 + 8))(v972, v1013);
    sub_1000051EC(v975, (uint64_t *)&unk_1005D3AA0);
    sub_1000051EC(v973, &qword_1005E3AB8);
    v694 = v1007;
    goto LABEL_128;
  }
  v682 = (uint8_t *)v1004;
  v1000 = v677;
  v1002 = (uint8_t *)v674;
  v998 = v681;
  v683 = (uint8_t *)sub_10007010C(32);
  v684 = swift_slowAlloc(64, -1);
  v1017 = 0;
  v999 = v684;
  v1016 = v684;
  v1001 = v683;
  *(_WORD *)v683 = 771;
  v1018 = v683 + 2;
  v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
  v685 = v1006;
  v1015 = (uint8_t *)v1006;
  v253 = v1009;
  sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
  if (!v253)
  {
    swift_release(v685);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v686 = v680;
    v1015 = v680;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    v687 = v1013;
    v688 = v678;
    v689 = v682;
    swift_release(v686);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1003F70D8;
    v1015 = v682;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    v690 = v1008;
    v691 = v687;
    swift_release(v689);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v692 = v1000;
    v1015 = (uint8_t *)v1000;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    swift_release(v692);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v1015 = v688;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    v693 = v975;
    v694 = v1007;
    swift_release(v688);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C0;
    v1015 = (uint8_t *)v670;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    swift_release(v670);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v695 = v1010;
    v1015 = v1010;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    swift_release(v695);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C4;
    v696 = v998;
    v1015 = (uint8_t *)v998;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    swift_release(v696);
    v1014 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1001D60C0;
    v697 = v1002;
    v1015 = v1002;
    sub_100070130(&v1014, (uint64_t)&v1018, (uint64_t)&v1017, (uint64_t)&v1016);
    swift_release(v697);
    v698 = v1012;
    v699 = (uint8_t *)v1001;
    _os_log_impl((void *)&_mh_execute_header, v1012, (os_log_type_t)v1011, "soundViewLayout Result id: %{private,mask.hash}s is %{public}s.", (uint8_t *)v1001, 0x20u);
    v700 = v999;
    swift_arrayDestroy(v999, 2, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v700, -1, -1);
    sub_100070114((uint64_t)v699);

    (*(void (**)(char *, uint64_t))(v690 + 8))(v972, v691);
    sub_1000051EC(v693, (uint64_t *)&unk_1005D3AA0);
    sub_1000051EC(v973, &qword_1005E3AB8);
LABEL_128:
    sub_1000051EC((uint64_t)v991, &qword_1005D72D0);
    return v694;
  }
LABEL_244:
  swift_errorRelease(v253);
  __break(1u);
  result = swift_errorRelease(v1009);
  __break(1u);
  return result;
}

void sub_1003E5214(uint64_t a1)
{
  _QWORD *v1;
  int64_t v2;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  int64_t v6;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  int64_t v32;
  uint64_t *v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  int64_t v37;
  int64_t v38;
  uint64_t v39;
  _QWORD v40[2];
  uint64_t v41;
  int64_t v42;
  unint64_t v43;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = (_QWORD *)*v1;
  v5 = *(_QWORD *)(*v1 + 16);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || (v9 = v4[3] >> 1, v9 < v6))
  {
    if (v5 <= v6)
      v10 = v5 + v3;
    else
      v10 = v5;
    v4 = sub_100070178(isUniquelyReferenced_nonNull_native, v10, 1, v4);
    v9 = v4[3] >> 1;
  }
  v11 = v4[2];
  v12 = v9 - v11;
  v13 = sub_100059114((uint64_t)v40, &v4[2 * v11 + 4], v9 - v11, a1);
  if (v13 < v3)
    goto LABEL_16;
  if (v13)
  {
    v15 = v4[2];
    v16 = __OFADD__(v15, v13);
    v17 = v15 + v13;
    if (v16)
    {
      __break(1u);
      goto LABEL_50;
    }
    v4[2] = v17;
  }
  if (v13 != v12)
  {
    v18 = v40[0];
LABEL_14:
    sub_100073BB4(v18);
    *v1 = v4;
    return;
  }
LABEL_17:
  v2 = v4[2];
  v3 = v40[0];
  v39 = v40[1];
  v14 = v41;
  v6 = v42;
  if (v43)
  {
    v19 = (v43 - 1) & v43;
    v20 = __clz(__rbit64(v43)) | (v42 << 6);
    v38 = (unint64_t)(v41 + 64) >> 6;
    goto LABEL_19;
  }
LABEL_50:
  v34 = v6 + 1;
  if (__OFADD__(v6, 1))
    goto LABEL_68;
  v38 = (unint64_t)(v14 + 64) >> 6;
  if (v34 >= v38)
  {
    v18 = v3;
    goto LABEL_14;
  }
  v35 = *(_QWORD *)(v39 + 8 * v34);
  v36 = v6 + 1;
  if (v35)
    goto LABEL_53;
  v36 = v6 + 2;
  if (v6 + 2 >= v38)
    goto LABEL_47;
  v35 = *(_QWORD *)(v39 + 8 * v36);
  if (!v35)
  {
    v36 = v6 + 3;
    if (v6 + 3 >= v38)
      goto LABEL_47;
    v35 = *(_QWORD *)(v39 + 8 * v36);
    if (!v35)
    {
      v36 = v6 + 4;
      if (v6 + 4 >= v38)
        goto LABEL_47;
      v35 = *(_QWORD *)(v39 + 8 * v36);
      if (!v35)
      {
        v36 = v6 + 5;
        if (v6 + 5 < v38)
        {
          v35 = *(_QWORD *)(v39 + 8 * v36);
          if (!v35)
          {
            v37 = v6 + 6;
            do
            {
              if (v38 == v37)
                goto LABEL_47;
              v35 = *(_QWORD *)(v39 + 8 * v37++);
            }
            while (!v35);
            v36 = v37 - 1;
          }
          goto LABEL_53;
        }
LABEL_47:
        v18 = v3;
        goto LABEL_14;
      }
    }
  }
LABEL_53:
  v19 = (v35 - 1) & v35;
  v20 = __clz(__rbit64(v35)) + (v36 << 6);
  v6 = v36;
LABEL_19:
  v21 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v20);
  v23 = *v21;
  v22 = v21[1];
  swift_bridgeObjectRetain(v22);
  while (1)
  {
    v24 = v4[3];
    v25 = v24 >> 1;
    if ((uint64_t)(v24 >> 1) < v2 + 1)
      break;
    if (v2 < v25)
      goto LABEL_24;
LABEL_21:
    v4[2] = v2;
  }
  v4 = sub_100070178((_QWORD *)(v24 > 1), v2 + 1, 1, v4);
  v25 = v4[3] >> 1;
  if (v2 >= v25)
    goto LABEL_21;
  while (1)
  {
LABEL_24:
    v26 = &v4[2 * v2 + 4];
    *v26 = v23;
    v26[1] = v22;
    ++v2;
    if (v19)
    {
      v27 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v28 = v27 | (v6 << 6);
      goto LABEL_42;
    }
    v29 = v6 + 1;
    if (__OFADD__(v6, 1))
      break;
    if (v29 >= v38)
      goto LABEL_46;
    v30 = *(_QWORD *)(v39 + 8 * v29);
    v31 = v6 + 1;
    if (!v30)
    {
      v31 = v6 + 2;
      if (v6 + 2 >= v38)
        goto LABEL_46;
      v30 = *(_QWORD *)(v39 + 8 * v31);
      if (!v30)
      {
        v31 = v6 + 3;
        if (v6 + 3 >= v38)
          goto LABEL_46;
        v30 = *(_QWORD *)(v39 + 8 * v31);
        if (!v30)
        {
          v31 = v6 + 4;
          if (v6 + 4 >= v38)
            goto LABEL_46;
          v30 = *(_QWORD *)(v39 + 8 * v31);
          if (!v30)
          {
            v31 = v6 + 5;
            if (v6 + 5 >= v38)
              goto LABEL_46;
            v30 = *(_QWORD *)(v39 + 8 * v31);
            if (!v30)
            {
              v32 = v6 + 6;
              while (v38 != v32)
              {
                v30 = *(_QWORD *)(v39 + 8 * v32++);
                if (v30)
                {
                  v31 = v32 - 1;
                  goto LABEL_41;
                }
              }
LABEL_46:
              v4[2] = v2;
              goto LABEL_47;
            }
          }
        }
      }
    }
LABEL_41:
    v19 = (v30 - 1) & v30;
    v28 = __clz(__rbit64(v30)) + (v31 << 6);
    v6 = v31;
LABEL_42:
    v33 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v28);
    v23 = *v33;
    v22 = v33[1];
    if (v2 >= v25)
    {
      swift_bridgeObjectRetain(v22);
      goto LABEL_21;
    }
    swift_bridgeObjectRetain(v22);
  }
  __break(1u);
LABEL_68:
  __break(1u);
}

uint64_t sub_1003E55DC(uint64_t a1)
{
  return sub_1000314F8(a1, (uint64_t (*)(void))sub_1000702C0, type metadata accessor for FMItemCellViewModel);
}

void sub_1003E55F0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  char v15;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = (_QWORD *)*v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native(*v1);
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_100070178(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy(v9);
  if (!v2)
  {
LABEL_19:
    swift_bridgeObjectRelease(a1);
    *v1 = v3;
    return;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  v15 = 2;
  _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, v15, 1092, 0);
  __break(1u);
}

uint64_t sub_1003E5740(uint64_t a1)
{
  return sub_1000314F8(a1, (uint64_t (*)(void))sub_100070298, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPPlaySoundChannels);
}

uint64_t sub_1003E5754(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  int isUniquelyReferenced_nonNull_native;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t result;
  unint64_t v30;
  unint64_t v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  int64_t v45;
  uint64_t v46;
  int64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  void (*v51)(_QWORD, _QWORD, _QWORD);
  char *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unsigned int v56;
  int64_t v57;
  unint64_t v58;
  int64_t v59;
  int64_t v60;
  int64_t v61;
  unint64_t v62;
  int64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t, uint64_t);
  void (*v67)(_QWORD, _QWORD, _QWORD);
  int64_t v68;
  unint64_t v69;
  unsigned int (*v70)(uint64_t, uint64_t, uint64_t);
  char *v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  char *v75;
  unint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;

  v3 = type metadata accessor for FMIPPlaySoundChannels(0);
  v4 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v78 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100053F2C((uint64_t *)&unk_1005E3C80);
  v7 = __chkstk_darwin(v6);
  v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v7);
  __chkstk_darwin(v10);
  v14 = (char *)&v65 - v13;
  v15 = *(_QWORD *)(a1 + 16);
  v16 = *v1;
  v17 = *(_QWORD *)(*v1 + 16);
  v18 = v17 + v15;
  if (__OFADD__(v17, v15))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v77 = v11;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v16);
  *v1 = v16;
  if (!isUniquelyReferenced_nonNull_native || (v20 = *(_QWORD *)(v16 + 24) >> 1, v20 < v18))
  {
    if (v17 <= v18)
      v21 = v17 + v15;
    else
      v21 = v17;
    v16 = sub_100070298(isUniquelyReferenced_nonNull_native, v21, 1, v16);
    *v1 = v16;
    v20 = *(_QWORD *)(v16 + 24) >> 1;
  }
  v22 = *(_QWORD *)(v16 + 16);
  v17 = *(_QWORD *)(v4 + 72);
  v23 = v20 - v22;
  v76 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v24 = sub_1003F16B0(&v79, v16 + v76 + v17 * v22, v20 - v22, a1, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPPlaySoundChannels);
  if (v24 < v15)
    goto LABEL_15;
  if (v24)
  {
    v26 = *(_QWORD *)(v16 + 16);
    v27 = __OFADD__(v26, v24);
    v28 = v26 + v24;
    if (v27)
    {
      __break(1u);
LABEL_20:
      v32 = a1 + 1;
      if (__OFADD__(a1, 1))
      {
        __break(1u);
      }
      else
      {
        v34 = (unint64_t)(v25 + 64) >> 6;
        v73 = a1;
        if (v32 >= v34)
          goto LABEL_41;
        v35 = *(_QWORD *)(v16 + 8 * v32);
        if (v35)
        {
LABEL_23:
          v30 = (v35 - 1) & v35;
          v31 = __clz(__rbit64(v35)) + (v32 << 6);
          goto LABEL_18;
        }
        v36 = a1 + 2;
        v73 = a1 + 1;
        if (a1 + 2 >= v34)
          goto LABEL_41;
        v12 = v23;
        v11 = v15;
        v35 = *(_QWORD *)(v16 + 8 * v36);
        if (v35)
        {
LABEL_26:
          v32 = v36;
LABEL_27:
          v14 = v75;
          goto LABEL_23;
        }
        v73 = a1 + 2;
        v16 = v74;
        v14 = v75;
        if (a1 + 3 >= v34)
          goto LABEL_41;
        v35 = *(_QWORD *)(v74 + 8 * (a1 + 3));
        if (v35)
        {
          v32 = a1 + 3;
          goto LABEL_27;
        }
        v36 = a1 + 4;
        v73 = a1 + 3;
        v16 = v74;
        v14 = v75;
        if (a1 + 4 >= v34)
          goto LABEL_41;
        v35 = *(_QWORD *)(v74 + 8 * v36);
        if (v35)
          goto LABEL_26;
        v32 = a1 + 5;
        v73 = a1 + 4;
        v16 = v74;
        v14 = v75;
        if (a1 + 5 >= v34)
        {
LABEL_41:
          v66 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
          v66(v14, 1, 1, v3);
          v33 = 0;
          v32 = v73;
          goto LABEL_42;
        }
        v35 = *(_QWORD *)(v74 + 8 * v32);
        if (v35)
          goto LABEL_23;
        v73 = v34 - 1;
        v37 = a1 + 6;
        while (v34 != v37)
        {
          v35 = *(_QWORD *)(v74 + 8 * v37++);
          if (v35)
          {
            v32 = v37 - 1;
            goto LABEL_27;
          }
        }
      }
      v15 = v11;
      v23 = v12;
      v16 = v74;
      v14 = v75;
      goto LABEL_41;
    }
    *(_QWORD *)(v16 + 16) = v28;
  }
  if (v24 != v23)
    return sub_100073BB4(v79);
LABEL_16:
  v23 = *(_QWORD *)(v16 + 16);
  v15 = v79;
  v16 = v80;
  v25 = v81;
  a1 = v82;
  v74 = v80;
  v75 = v14;
  v71 = v9;
  v72 = v81;
  if (!v83)
    goto LABEL_20;
  v30 = (v83 - 1) & v83;
  v31 = __clz(__rbit64(v83)) | (v82 << 6);
  v32 = v82;
LABEL_18:
  (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v14, *(_QWORD *)(v15 + 48) + v31 * v17, v3);
  v66 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v66(v14, 0, 1, v3);
  v33 = v30;
  v16 = v74;
LABEL_42:
  v73 = v33;
  v79 = v15;
  v80 = v16;
  v81 = v72;
  v82 = v32;
  v83 = v33;
  v38 = v15;
  v39 = v77;
  sub_100007464((uint64_t)v14, v77, (uint64_t *)&unk_1005E3C80);
  v40 = v39;
  v41 = v38;
  v70 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v70(v40, 1, v3) == 1)
  {
LABEL_80:
    sub_1000051EC((uint64_t)v14, (uint64_t *)&unk_1005E3C80);
    sub_100073BB4(v41);
    return sub_1000051EC(v77, (uint64_t *)&unk_1005E3C80);
  }
  v42 = v77;
  while (1)
  {
    sub_1000051EC(v42, (uint64_t *)&unk_1005E3C80);
    v43 = *v1;
    v44 = *(_QWORD *)(*v1 + 24);
    v45 = v44 >> 1;
    if ((uint64_t)(v44 >> 1) < (uint64_t)(v23 + 1))
    {
      v43 = sub_100070298(v44 > 1, v23 + 1, 1, *v1);
      *v1 = v43;
      v45 = *(_QWORD *)(v43 + 24) >> 1;
    }
    v46 = (uint64_t)v71;
    v47 = v23;
    sub_100007464((uint64_t)v75, (uint64_t)v71, (uint64_t *)&unk_1005E3C80);
    if (v70(v46, 1, v3) != 1)
      break;
    v48 = v23;
    v49 = (uint64_t)v71;
LABEL_50:
    sub_1000051EC(v49, (uint64_t *)&unk_1005E3C80);
    v47 = v48;
    v23 = v48;
LABEL_45:
    *(_QWORD *)(*v1 + 16) = v47;
    v42 = v77;
    sub_100007464((uint64_t)v75, v77, (uint64_t *)&unk_1005E3C80);
    if (v70(v42, 1, v3) == 1)
    {
      v41 = v79;
      v73 = v83;
      v14 = v75;
      goto LABEL_80;
    }
  }
  v50 = v43 + v76;
  v51 = *(void (**)(_QWORD, _QWORD, _QWORD))(v4 + 32);
  v48 = v47;
  if (v47 <= v45)
    v47 = v45;
  v68 = v47;
  v69 = v50;
  v52 = v78;
  v49 = (uint64_t)v71;
  v67 = v51;
  while (1)
  {
    v51(v52, v49, v3);
    if (v48 == v47)
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v52, v3);
      v23 = v47;
      goto LABEL_45;
    }
    sub_1000051EC((uint64_t)v75, (uint64_t *)&unk_1005E3C80);
    v74 = v48;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v51)(v69 + v48 * v17, v52, v3);
    v55 = v79;
    v57 = v82;
    v72 = v81;
    v73 = v80;
    if (v83)
    {
      v54 = (v83 - 1) & v83;
      v58 = __clz(__rbit64(v83)) | (v82 << 6);
      v49 = (uint64_t)v71;
      goto LABEL_60;
    }
    v65 = v79;
    v60 = v82 + 1;
    v49 = (uint64_t)v71;
    if (__OFADD__(v82, 1))
      break;
    v61 = (unint64_t)(v81 + 64) >> 6;
    v59 = v82;
    if (v60 < v61)
    {
      v62 = *(_QWORD *)(v80 + 8 * v60);
      if (v62)
        goto LABEL_64;
      v63 = v82 + 2;
      v59 = v82 + 1;
      if (v82 + 2 < v61)
      {
        v62 = *(_QWORD *)(v80 + 8 * v63);
        if (v62)
          goto LABEL_67;
        v59 = v82 + 2;
        if (v82 + 3 < v61)
        {
          v62 = *(_QWORD *)(v80 + 8 * (v82 + 3));
          if (v62)
          {
            v60 = v82 + 3;
            goto LABEL_64;
          }
          v63 = v82 + 4;
          v59 = v82 + 3;
          if (v82 + 4 < v61)
          {
            v62 = *(_QWORD *)(v80 + 8 * v63);
            if (v62)
            {
LABEL_67:
              v60 = v63;
              goto LABEL_64;
            }
            v60 = v82 + 5;
            v59 = v82 + 4;
            if (v82 + 5 < v61)
            {
              v62 = *(_QWORD *)(v80 + 8 * v60);
              if (!v62)
              {
                v59 = v61 - 1;
                v64 = v82 + 6;
                do
                {
                  if (v61 == v64)
                  {
                    v49 = (uint64_t)v71;
                    goto LABEL_55;
                  }
                  v62 = *(_QWORD *)(v80 + 8 * v64++);
                }
                while (!v62);
                v60 = v64 - 1;
                v49 = (uint64_t)v71;
              }
LABEL_64:
              v54 = (v62 - 1) & v62;
              v58 = __clz(__rbit64(v62)) + (v60 << 6);
              v57 = v60;
              v55 = v65;
LABEL_60:
              v53 = (uint64_t)v75;
              (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v75, *(_QWORD *)(v55 + 48) + v58 * v17, v3);
              v66((char *)v53, 0, 1, v3);
              v59 = v57;
              goto LABEL_56;
            }
          }
        }
      }
    }
LABEL_55:
    v53 = (uint64_t)v75;
    v66(v75, 1, 1, v3);
    v54 = 0;
    v55 = v65;
LABEL_56:
    v48 = v74 + 1;
    v79 = v55;
    v80 = v73;
    v81 = v72;
    v82 = v59;
    v83 = v54;
    sub_100007464(v53, v49, (uint64_t *)&unk_1005E3C80);
    v56 = v70(v49, 1, v3);
    v52 = v78;
    v51 = v67;
    v47 = v68;
    if (v56 == 1)
      goto LABEL_50;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003E5ED8(uint64_t a1)
{
  return sub_100007550(a1, (uint64_t (*)(uint64_t, _QWORD, uint64_t))sub_1003F01A4);
}

uint64_t sub_1003E5EE4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;

  v9 = a4 >> 1;
  v10 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_11;
  v6 = a3;
  v7 = a2;
  v4 = a1;
  v8 = *v5;
  if ((unint64_t)*v5 >> 62)
    goto LABEL_12;
  v11 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  v12 = v11 + v10;
  if (!__OFADD__(v11, v10))
    goto LABEL_4;
LABEL_17:
  __break(1u);
LABEL_18:
  v14 = 1;
LABEL_19:
  if ((unint64_t)v8 >> 62)
  {
    if (v8 < 0)
      v27 = v8;
    else
      v27 = v8 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v8);
    v18 = _CocoaArrayWrapper.endIndex.getter(v27);
    swift_bridgeObjectRelease(v8);
  }
  else
  {
    v18 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v18 <= v12)
    v18 = v12;
  swift_bridgeObjectRetain(v8);
  v8 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v14, v18, 1, v8);
  swift_bridgeObjectRelease(*v5);
  *v5 = v8;
  v15 = v8 & 0xFFFFFFFFFFFFFF8;
  if (v9 == v6)
  {
    while (v10 > 0)
    {
      __break(1u);
LABEL_11:
      __break(1u);
LABEL_12:
      if (v8 < 0)
        v16 = v8;
      else
        v16 = v8 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain(v8);
      v17 = _CocoaArrayWrapper.endIndex.getter(v16);
      swift_bridgeObjectRelease(v8);
      v12 = v17 + v10;
      if (__OFADD__(v17, v10))
        goto LABEL_17;
LABEL_4:
      v8 = *v5;
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v5);
      *v5 = v8;
      v14 = 0;
      if (!isUniquelyReferenced_nonNull_bridgeObject || v8 < 0 || (v8 & 0x4000000000000000) != 0)
        goto LABEL_19;
      v15 = v8 & 0xFFFFFFFFFFFFFF8;
      if (v12 > *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        goto LABEL_18;
      if (v9 != v6)
        goto LABEL_24;
    }
    goto LABEL_31;
  }
LABEL_24:
  v19 = *(_QWORD *)(v15 + 16);
  if ((*(_QWORD *)(v15 + 24) >> 1) - v19 < v10)
  {
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if ((v10 & 0x8000000000000000) == 0)
  {
    v20 = v15 + 8 * v19 + 32;
    v21 = v7 + 8 * v6;
    if (v21 < v20 + 8 * v10 && v20 < v21 + 8 * v10)
    {
      result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
      goto LABEL_40;
    }
    sub_100053F2C(&qword_1005E1120);
    swift_arrayInitWithCopy(v20);
    if (!v10)
    {
LABEL_31:
      v25 = swift_unknownObjectRelease(v4);
      return specialized Array._endMutation()(v25);
    }
    v22 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v23 = __OFADD__(v22, v10);
    v24 = v22 + v10;
    if (!v23)
    {
      *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v24;
      goto LABEL_31;
    }
    goto LABEL_37;
  }
LABEL_38:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1003E6164(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if ((unint64_t)a1 >> 62)
  {
    if (a1 < 0)
      v16 = a1;
    else
      v16 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v3 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a1);
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *v1;
  if (!((unint64_t)*v1 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = v5 + v3;
    if (!__OFADD__(v5, v3))
      goto LABEL_5;
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v4 < 0)
    v17 = *v1;
  else
    v17 = v4 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain(*v1);
  v5 = _CocoaArrayWrapper.endIndex.getter(v17);
  swift_bridgeObjectRelease(v4);
  v6 = v5 + v3;
  if (__OFADD__(v5, v3))
    goto LABEL_29;
LABEL_5:
  v4 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject(*v1);
  *v1 = v4;
  v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v5 = 1;
  }
  if ((unint64_t)v4 >> 62)
    goto LABEL_31;
  v9 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6)
      v9 = v6;
    swift_bridgeObjectRetain(v4);
    v4 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(v5, v9, 1, v4);
    swift_bridgeObjectRelease(*v1);
    *v1 = v4;
    v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = sub_1003EFF9C(v8 + 8 * *(_QWORD *)(v8 + 16) + 32, (*(_QWORD *)(v8 + 24) >> 1) - *(_QWORD *)(v8 + 16), a1, (void (*)(_QWORD))type metadata accessor for FMFenceMapTransientRecord, &qword_1005E3C18, &qword_1005E3C10, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1002001A8);
    if (v11 >= v3)
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    if (v4 < 0)
      v18 = v4;
    else
      v18 = v4 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(v4);
    v9 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(v4);
  }
  if (v11 < 1)
    goto LABEL_19;
  v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v13 = __OFADD__(v12, v11);
  v14 = v12 + v11;
  if (!v13)
  {
    *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
LABEL_19:
    swift_bridgeObjectRelease(result);
    return specialized Array._endMutation()(v15);
  }
  __break(1u);
  return result;
}

void *FMDeviceCapabilities.noActions.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.noActions;
}

uint64_t static FMDeviceCapabilities.canStopSound.getter()
{
  return 4096;
}

void *FMDeviceCapabilities.canRange.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.canRange;
}

uint64_t static FMDeviceCapabilities.canRange.getter()
{
  return 0x2000;
}

uint64_t static FMDeviceCapabilities.canEnableLeashing.getter()
{
  return 0x4000;
}

uint64_t static FMDeviceCapabilities.supportNotifyWhenFound.getter()
{
  return 0x8000;
}

uint64_t static FMDeviceCapabilities.supportsNotifyWhenDetached.getter()
{
  return 0x10000;
}

uint64_t static FMDeviceCapabilities.supportsShowContactDetails.getter()
{
  return 0x20000;
}

void *FMDeviceCapabilities.supportsRemoveUIv2.unsafeMutableAddressor()
{
  return &static FMDeviceCapabilities.supportsRemoveUIv2;
}

uint64_t static FMDeviceCapabilities.supportsRemoveUIv2.getter()
{
  return 0x40000;
}

uint64_t static FMDeviceCapabilities.canBTFind.getter()
{
  return 0x80000;
}

uint64_t static FMDeviceCapabilities.canRepair.getter()
{
  return 0x100000;
}

uint64_t static FMDeviceCapabilities.canRemoveOrRepair.getter()
{
  return 0x200000;
}

uint64_t FMSoundPlatterViewLayout.description.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1003E63EC + 4 * byte_10048FEF0[a1]))(0x79616C50746F6E2ELL, 0xEB00000000676E69);
}

uint64_t sub_1003E63EC()
{
  return 0x676E69646E65702ELL;
}

unint64_t sub_1003E6440()
{
  return 0xD000000000000018;
}

unint64_t sub_1003E6490()
{
  return 0xD000000000000017;
}

uint64_t sub_1003E64D0()
{
  unsigned __int8 *v0;

  return FMSoundPlatterViewLayout.description.getter(*v0);
}

void *FMDeviceState.normal.unsafeMutableAddressor()
{
  return &static FMDeviceState.normal;
}

void *FMDeviceState.canEnableLeashing.unsafeMutableAddressor()
{
  return &static FMDeviceState.canEnableLeashing;
}

unint64_t sub_1003E64F4()
{
  unint64_t result;

  result = qword_1005E38F0;
  if (!qword_1005E38F0)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FMDeviceCapabilities, &type metadata for FMDeviceCapabilities);
    atomic_store(result, (unint64_t *)&qword_1005E38F0);
  }
  return result;
}

unint64_t sub_1003E653C()
{
  unint64_t result;

  result = qword_1005E38F8;
  if (!qword_1005E38F8)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FMDeviceCapabilities, &type metadata for FMDeviceCapabilities);
    atomic_store(result, (unint64_t *)&qword_1005E38F8);
  }
  return result;
}

unint64_t sub_1003E6584()
{
  unint64_t result;

  result = qword_1005E3900;
  if (!qword_1005E3900)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FMDeviceCapabilities, &type metadata for FMDeviceCapabilities);
    atomic_store(result, (unint64_t *)&qword_1005E3900);
  }
  return result;
}

unint64_t sub_1003E65CC()
{
  unint64_t result;

  result = qword_1005E3908;
  if (!qword_1005E3908)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FMDeviceCapabilities, &type metadata for FMDeviceCapabilities);
    atomic_store(result, (unint64_t *)&qword_1005E3908);
  }
  return result;
}

unint64_t sub_1003E6614()
{
  unint64_t result;

  result = qword_1005E3910;
  if (!qword_1005E3910)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FMSoundPlatterViewLayout, &type metadata for FMSoundPlatterViewLayout);
    atomic_store(result, (unint64_t *)&qword_1005E3910);
  }
  return result;
}

unint64_t sub_1003E665C()
{
  unint64_t result;

  result = qword_1005E3918;
  if (!qword_1005E3918)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FMDeviceState, &type metadata for FMDeviceState);
    atomic_store(result, (unint64_t *)&qword_1005E3918);
  }
  return result;
}

unint64_t sub_1003E66A4()
{
  unint64_t result;

  result = qword_1005E3920;
  if (!qword_1005E3920)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FMDeviceState, &type metadata for FMDeviceState);
    atomic_store(result, (unint64_t *)&qword_1005E3920);
  }
  return result;
}

unint64_t sub_1003E66EC()
{
  unint64_t result;

  result = qword_1005E3928;
  if (!qword_1005E3928)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FMDeviceState, &type metadata for FMDeviceState);
    atomic_store(result, (unint64_t *)&qword_1005E3928);
  }
  return result;
}

unint64_t sub_1003E6734()
{
  unint64_t result;

  result = qword_1005E3930;
  if (!qword_1005E3930)
  {
    result = swift_getWitnessTable(&protocol conformance descriptor for FMDeviceState, &type metadata for FMDeviceState);
    atomic_store(result, (unint64_t *)&qword_1005E3930);
  }
  return result;
}

ValueMetadata *type metadata accessor for FMDeviceCapabilities()
{
  return &type metadata for FMDeviceCapabilities;
}

uint64_t storeEnumTagSinglePayload for FMSoundPlatterViewLayout(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1003E67D4 + 4 * byte_10048FF00[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1003E6808 + 4 * byte_10048FEFB[v4]))();
}

uint64_t sub_1003E6808(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003E6810(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1003E6818);
  return result;
}

uint64_t sub_1003E6824(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1003E682CLL);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1003E6830(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1003E6838(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FMSoundPlatterViewLayout()
{
  return &type metadata for FMSoundPlatterViewLayout;
}

ValueMetadata *type metadata accessor for FMDeviceState()
{
  return &type metadata for FMDeviceState;
}

_QWORD *sub_1003E6864(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  __n128 v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v71;
  unsigned int (*v72)(char *, uint64_t, uint64_t, __n128);
  uint64_t v73;
  void *__dst;
  void *__dsta;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain(v17);
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = a2[4];
    *(_QWORD *)(a1 + 32) = v9;
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    v10 = a2[6];
    v11 = a3[9];
    __dst = (void *)(a1 + v11);
    v12 = (char *)a2 + v11;
    *(_QWORD *)(a1 + 48) = v10;
    v13 = type metadata accessor for FMIPItem(0);
    v14 = *(_QWORD *)(v13 - 8);
    v72 = *(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v14 + 48);
    swift_bridgeObjectRetain(v7);
    swift_bridgeObjectRetain(v8);
    swift_bridgeObjectRetain(v9);
    v15 = swift_bridgeObjectRetain(v10);
    if (v72(v12, 1, v13, v15))
    {
      v16 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
      memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v14 + 16))(__dst, v12, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    v18 = a3[10];
    v19 = a3[11];
    v20 = (char *)v4 + v18;
    v21 = (uint64_t)a2 + v18;
    *(_QWORD *)v20 = *(_QWORD *)v21;
    v20[8] = *(_BYTE *)(v21 + 8);
    v22 = (char *)v4 + v19;
    v23 = (uint64_t)a2 + v19;
    *(_QWORD *)v22 = *(_QWORD *)v23;
    v22[8] = *(_BYTE *)(v23 + 8);
    v24 = a3[12];
    v25 = a3[13];
    __dsta = *(void **)((char *)a2 + v24);
    *(_QWORD *)((char *)v4 + v24) = __dsta;
    *((_BYTE *)v4 + v25) = *((_BYTE *)a2 + v25);
    v26 = a3[14];
    v27 = a3[15];
    v28 = (_QWORD *)((char *)v4 + v26);
    v29 = (uint64_t *)((char *)a2 + v26);
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    *((_BYTE *)v4 + v27) = *((_BYTE *)a2 + v27);
    v31 = a3[16];
    v32 = a3[17];
    v33 = (_QWORD *)((char *)v4 + v31);
    v34 = (uint64_t *)((char *)a2 + v31);
    v35 = v34[1];
    *v33 = *v34;
    v33[1] = v35;
    v36 = (_QWORD *)((char *)v4 + v32);
    v37 = (uint64_t *)((char *)a2 + v32);
    v38 = v37[1];
    *v36 = *v37;
    v36[1] = v38;
    v39 = a3[18];
    v40 = a3[19];
    v41 = (_QWORD *)((char *)v4 + v39);
    v42 = (uint64_t *)((char *)a2 + v39);
    v43 = v42[1];
    *v41 = *v42;
    v41[1] = v43;
    v71 = (char *)v4 + v40;
    v73 = (uint64_t)a2 + v40;
    v44 = type metadata accessor for Date(0);
    v45 = *(_QWORD *)(v44 - 8);
    v46 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
    swift_bridgeObjectRetain(__dsta);
    swift_bridgeObjectRetain(v30);
    swift_bridgeObjectRetain(v35);
    v47 = v38;
    v48 = v46;
    swift_bridgeObjectRetain(v47);
    v49 = swift_bridgeObjectRetain(v43);
    ((void (*)(char *, uint64_t, uint64_t, __n128))v46)(v71, v73, v44, v49);
    v50 = a3[21];
    *(_QWORD *)((char *)v4 + a3[20]) = *(uint64_t *)((char *)a2 + a3[20]);
    v51 = (char *)v4 + v50;
    v52 = (uint64_t)a2 + v50;
    v53 = type metadata accessor for FMIPBatteryStatus(0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v51, v52, v53);
    v54 = a3[23];
    *(_QWORD *)((char *)v4 + a3[22]) = *(uint64_t *)((char *)a2 + a3[22]);
    *(_QWORD *)((char *)v4 + v54) = *(uint64_t *)((char *)a2 + v54);
    v55 = a3[25];
    *((_BYTE *)v4 + a3[24]) = *((_BYTE *)a2 + a3[24]);
    *((_BYTE *)v4 + v55) = *((_BYTE *)a2 + v55);
    v56 = a3[27];
    *((_BYTE *)v4 + a3[26]) = *((_BYTE *)a2 + a3[26]);
    *((_BYTE *)v4 + v56) = *((_BYTE *)a2 + v56);
    v57 = a3[29];
    *((_BYTE *)v4 + a3[28]) = *((_BYTE *)a2 + a3[28]);
    *((_BYTE *)v4 + v57) = *((_BYTE *)a2 + v57);
    v58 = a3[31];
    *((_BYTE *)v4 + a3[30]) = *((_BYTE *)a2 + a3[30]);
    *((_BYTE *)v4 + v58) = *((_BYTE *)a2 + v58);
    v59 = a3[33];
    *((_BYTE *)v4 + a3[32]) = *((_BYTE *)a2 + a3[32]);
    v60 = (char *)v4 + v59;
    v61 = (char *)a2 + v59;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))((uint64_t)a2 + v59, 1, v44))
    {
      v62 = sub_100053F2C((uint64_t *)&unk_1005D3320);
      memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    }
    else
    {
      v48(v60, v61, v44);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v60, 0, 1, v44);
    }
    v63 = a3[35];
    *((_BYTE *)v4 + a3[34]) = *((_BYTE *)a2 + a3[34]);
    *((_BYTE *)v4 + v63) = *((_BYTE *)a2 + v63);
    v64 = a3[37];
    *((_BYTE *)v4 + a3[36]) = *((_BYTE *)a2 + a3[36]);
    *((_BYTE *)v4 + v64) = *((_BYTE *)a2 + v64);
    v65 = a3[38];
    v66 = a3[39];
    v67 = *(uint64_t *)((char *)a2 + v65);
    *(_QWORD *)((char *)v4 + v65) = v67;
    *((_BYTE *)v4 + v66) = *((_BYTE *)a2 + v66);
    v68 = a3[41];
    *((_BYTE *)v4 + a3[40]) = *((_BYTE *)a2 + a3[40]);
    *((_BYTE *)v4 + v68) = *((_BYTE *)a2 + v68);
    v69 = a3[43];
    *((_BYTE *)v4 + a3[42]) = *((_BYTE *)a2 + a3[42]);
    *((_BYTE *)v4 + v69) = *((_BYTE *)a2 + v69);
    swift_bridgeObjectRetain(v67);
  }
  return v4;
}

uint64_t sub_1003E6C34(_QWORD *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  char *v11;
  uint64_t v12;
  char *v13;

  swift_bridgeObjectRelease(a1[1]);
  swift_bridgeObjectRelease(a1[3]);
  swift_bridgeObjectRelease(a1[4]);
  swift_bridgeObjectRelease(a1[6]);
  v4 = (char *)a1 + a2[9];
  v5 = type metadata accessor for FMIPItem(0);
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[12]));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[14] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[16] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[17] + 8));
  swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[18] + 8));
  v7 = (char *)a1 + a2[19];
  v8 = type metadata accessor for Date(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(char *, uint64_t))(v9 + 8);
  v10(v7, v8);
  v11 = (char *)a1 + a2[21];
  v12 = type metadata accessor for FMIPBatteryStatus(0);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  v13 = (char *)a1 + a2[33];
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v13, 1, v8))
    v10(v13, v8);
  return swift_bridgeObjectRelease(*(_QWORD *)((char *)a1 + a2[38]));
}

uint64_t sub_1003E6D90(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(void *, const void *, uint64_t);
  uint64_t v45;
  void (*v46)(void *, const void *, uint64_t);
  __n128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  const void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v69;
  unsigned int (*v70)(const void *, uint64_t, uint64_t, __n128);
  uint64_t v71;
  void *__dst;
  void *__dsta;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = a3[9];
  __dst = (void *)(a1 + v10);
  v11 = (const void *)(a2 + v10);
  *(_QWORD *)(a1 + 48) = v9;
  v12 = type metadata accessor for FMIPItem(0);
  v13 = *(_QWORD *)(v12 - 8);
  v70 = *(unsigned int (**)(const void *, uint64_t, uint64_t, __n128))(v13 + 48);
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRetain(v7);
  swift_bridgeObjectRetain(v8);
  v14 = swift_bridgeObjectRetain(v9);
  if (v70(v11, 1, v12, v14))
  {
    v15 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
    memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(__dst, v11, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
  }
  v16 = a3[10];
  v17 = a3[11];
  v18 = a1 + v16;
  v19 = a2 + v16;
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *(_BYTE *)(v18 + 8) = *(_BYTE *)(v19 + 8);
  v20 = a1 + v17;
  v21 = a2 + v17;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_BYTE *)(v20 + 8) = *(_BYTE *)(v21 + 8);
  v22 = a3[12];
  v23 = a3[13];
  __dsta = *(void **)(a2 + v22);
  *(_QWORD *)(a1 + v22) = __dsta;
  *(_BYTE *)(a1 + v23) = *(_BYTE *)(a2 + v23);
  v24 = a3[14];
  v25 = a3[15];
  v26 = (_QWORD *)(a1 + v24);
  v27 = (_QWORD *)(a2 + v24);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  *(_BYTE *)(a1 + v25) = *(_BYTE *)(a2 + v25);
  v29 = a3[16];
  v30 = a3[17];
  v31 = (_QWORD *)(a1 + v29);
  v32 = (_QWORD *)(a2 + v29);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  v34 = (_QWORD *)(a1 + v30);
  v35 = (_QWORD *)(a2 + v30);
  v36 = v35[1];
  *v34 = *v35;
  v34[1] = v36;
  v37 = a3[18];
  v38 = a3[19];
  v39 = (_QWORD *)(a1 + v37);
  v40 = (_QWORD *)(a2 + v37);
  v41 = v40[1];
  *v39 = *v40;
  v39[1] = v41;
  v69 = a1 + v38;
  v71 = a2 + v38;
  v42 = type metadata accessor for Date(0);
  v43 = *(_QWORD *)(v42 - 8);
  v44 = *(void (**)(void *, const void *, uint64_t))(v43 + 16);
  swift_bridgeObjectRetain(__dsta);
  swift_bridgeObjectRetain(v28);
  swift_bridgeObjectRetain(v33);
  v45 = v36;
  v46 = v44;
  swift_bridgeObjectRetain(v45);
  v47 = swift_bridgeObjectRetain(v41);
  ((void (*)(uint64_t, uint64_t, uint64_t, __n128))v44)(v69, v71, v42, v47);
  v48 = a3[21];
  *(_QWORD *)(a1 + a3[20]) = *(_QWORD *)(a2 + a3[20]);
  v49 = a1 + v48;
  v50 = a2 + v48;
  v51 = type metadata accessor for FMIPBatteryStatus(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
  v52 = a3[23];
  *(_QWORD *)(a1 + a3[22]) = *(_QWORD *)(a2 + a3[22]);
  *(_QWORD *)(a1 + v52) = *(_QWORD *)(a2 + v52);
  v53 = a3[25];
  *(_BYTE *)(a1 + a3[24]) = *(_BYTE *)(a2 + a3[24]);
  *(_BYTE *)(a1 + v53) = *(_BYTE *)(a2 + v53);
  v54 = a3[27];
  *(_BYTE *)(a1 + a3[26]) = *(_BYTE *)(a2 + a3[26]);
  *(_BYTE *)(a1 + v54) = *(_BYTE *)(a2 + v54);
  v55 = a3[29];
  *(_BYTE *)(a1 + a3[28]) = *(_BYTE *)(a2 + a3[28]);
  *(_BYTE *)(a1 + v55) = *(_BYTE *)(a2 + v55);
  v56 = a3[31];
  *(_BYTE *)(a1 + a3[30]) = *(_BYTE *)(a2 + a3[30]);
  *(_BYTE *)(a1 + v56) = *(_BYTE *)(a2 + v56);
  v57 = a3[33];
  *(_BYTE *)(a1 + a3[32]) = *(_BYTE *)(a2 + a3[32]);
  v58 = (void *)(a1 + v57);
  v59 = (const void *)(a2 + v57);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(a2 + v57, 1, v42))
  {
    v60 = sub_100053F2C((uint64_t *)&unk_1005D3320);
    memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  else
  {
    v46(v58, v59, v42);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v58, 0, 1, v42);
  }
  v61 = a3[35];
  *(_BYTE *)(a1 + a3[34]) = *(_BYTE *)(a2 + a3[34]);
  *(_BYTE *)(a1 + v61) = *(_BYTE *)(a2 + v61);
  v62 = a3[37];
  *(_BYTE *)(a1 + a3[36]) = *(_BYTE *)(a2 + a3[36]);
  *(_BYTE *)(a1 + v62) = *(_BYTE *)(a2 + v62);
  v63 = a3[38];
  v64 = a3[39];
  v65 = *(_QWORD *)(a2 + v63);
  *(_QWORD *)(a1 + v63) = v65;
  *(_BYTE *)(a1 + v64) = *(_BYTE *)(a2 + v64);
  v66 = a3[41];
  *(_BYTE *)(a1 + a3[40]) = *(_BYTE *)(a2 + a3[40]);
  *(_BYTE *)(a1 + v66) = *(_BYTE *)(a2 + v66);
  v67 = a3[43];
  *(_BYTE *)(a1 + a3[42]) = *(_BYTE *)(a2 + a3[42]);
  *(_BYTE *)(a1 + v67) = *(_BYTE *)(a2 + v67);
  swift_bridgeObjectRetain(v65);
  return a1;
}

uint64_t sub_1003E7134(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  const void *v66;
  uint64_t (*v67)(uint64_t, uint64_t, uint64_t);
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRetain(v6);
  swift_bridgeObjectRelease(v7);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v8;
  swift_bridgeObjectRetain(v8);
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v11;
  swift_bridgeObjectRetain(v11);
  swift_bridgeObjectRelease(v10);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v12 = *(_QWORD *)(a1 + 48);
  v13 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 48) = v13;
  swift_bridgeObjectRetain(v13);
  swift_bridgeObjectRelease(v12);
  v14 = a3[9];
  v15 = (void *)(a1 + v14);
  v16 = (void *)(a2 + v14);
  v17 = type metadata accessor for FMIPItem(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
LABEL_6:
    v22 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 24))(v15, v16, v17);
LABEL_7:
  v23 = a3[10];
  v24 = a1 + v23;
  v25 = (uint64_t *)(a2 + v23);
  v26 = *v25;
  *(_BYTE *)(v24 + 8) = *((_BYTE *)v25 + 8);
  *(_QWORD *)v24 = v26;
  v27 = a3[11];
  v28 = a1 + v27;
  v29 = (uint64_t *)(a2 + v27);
  v30 = *v29;
  *(_BYTE *)(v28 + 8) = *((_BYTE *)v29 + 8);
  *(_QWORD *)v28 = v30;
  v31 = a3[12];
  v32 = *(_QWORD *)(a1 + v31);
  v33 = *(_QWORD *)(a2 + v31);
  *(_QWORD *)(a1 + v31) = v33;
  swift_bridgeObjectRetain(v33);
  swift_bridgeObjectRelease(v32);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v34 = a3[14];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (_QWORD *)(a2 + v34);
  *v35 = *v36;
  v37 = v36[1];
  v38 = v35[1];
  v35[1] = v37;
  swift_bridgeObjectRetain(v37);
  swift_bridgeObjectRelease(v38);
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  v39 = a3[16];
  v40 = (_QWORD *)(a1 + v39);
  v41 = (_QWORD *)(a2 + v39);
  *v40 = *v41;
  v42 = v41[1];
  v43 = v40[1];
  v40[1] = v42;
  swift_bridgeObjectRetain(v42);
  swift_bridgeObjectRelease(v43);
  v44 = a3[17];
  v45 = (_QWORD *)(a1 + v44);
  v46 = (_QWORD *)(a2 + v44);
  *v45 = *v46;
  v47 = v46[1];
  v48 = v45[1];
  v45[1] = v47;
  swift_bridgeObjectRetain(v47);
  swift_bridgeObjectRelease(v48);
  v49 = a3[18];
  v50 = (_QWORD *)(a1 + v49);
  v51 = (_QWORD *)(a2 + v49);
  *v50 = *v51;
  v52 = v51[1];
  v53 = v50[1];
  v50[1] = v52;
  swift_bridgeObjectRetain(v52);
  swift_bridgeObjectRelease(v53);
  v54 = a3[19];
  v55 = a1 + v54;
  v56 = a2 + v54;
  v57 = type metadata accessor for Date(0);
  v58 = *(_QWORD *)(v57 - 8);
  v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 24);
  v59(v55, v56, v57);
  *(_QWORD *)(a1 + a3[20]) = *(_QWORD *)(a2 + a3[20]);
  v60 = a3[21];
  v61 = a1 + v60;
  v62 = a2 + v60;
  v63 = type metadata accessor for FMIPBatteryStatus(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 24))(v61, v62, v63);
  *(_QWORD *)(a1 + a3[22]) = *(_QWORD *)(a2 + a3[22]);
  *(_QWORD *)(a1 + a3[23]) = *(_QWORD *)(a2 + a3[23]);
  *(_BYTE *)(a1 + a3[24]) = *(_BYTE *)(a2 + a3[24]);
  *(_BYTE *)(a1 + a3[25]) = *(_BYTE *)(a2 + a3[25]);
  *(_BYTE *)(a1 + a3[26]) = *(_BYTE *)(a2 + a3[26]);
  *(_BYTE *)(a1 + a3[27]) = *(_BYTE *)(a2 + a3[27]);
  *(_BYTE *)(a1 + a3[28]) = *(_BYTE *)(a2 + a3[28]);
  *(_BYTE *)(a1 + a3[29]) = *(_BYTE *)(a2 + a3[29]);
  *(_BYTE *)(a1 + a3[30]) = *(_BYTE *)(a2 + a3[30]);
  *(_BYTE *)(a1 + a3[31]) = *(_BYTE *)(a2 + a3[31]);
  *(_BYTE *)(a1 + a3[32]) = *(_BYTE *)(a2 + a3[32]);
  v64 = a3[33];
  v65 = (void *)(a1 + v64);
  v66 = (const void *)(a2 + v64);
  v67 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v58 + 48);
  v68 = v67(a1 + v64, 1, v57);
  v69 = v67((uint64_t)v66, 1, v57);
  if (!v68)
  {
    if (!v69)
    {
      v59((uint64_t)v65, (uint64_t)v66, v57);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v58 + 8))(v65, v57);
    goto LABEL_12;
  }
  if (v69)
  {
LABEL_12:
    v70 = sub_100053F2C((uint64_t *)&unk_1005D3320);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v58 + 16))(v65, v66, v57);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v65, 0, 1, v57);
LABEL_13:
  *(_BYTE *)(a1 + a3[34]) = *(_BYTE *)(a2 + a3[34]);
  *(_BYTE *)(a1 + a3[35]) = *(_BYTE *)(a2 + a3[35]);
  *(_BYTE *)(a1 + a3[36]) = *(_BYTE *)(a2 + a3[36]);
  *(_BYTE *)(a1 + a3[37]) = *(_BYTE *)(a2 + a3[37]);
  v71 = a3[38];
  v72 = *(_QWORD *)(a2 + v71);
  v73 = *(_QWORD *)(a1 + v71);
  *(_QWORD *)(a1 + v71) = v72;
  swift_bridgeObjectRetain(v72);
  swift_bridgeObjectRelease(v73);
  *(_BYTE *)(a1 + a3[39]) = *(_BYTE *)(a2 + a3[39]);
  *(_BYTE *)(a1 + a3[40]) = *(_BYTE *)(a2 + a3[40]);
  *(_BYTE *)(a1 + a3[41]) = *(_BYTE *)(a2 + a3[41]);
  *(_BYTE *)(a1 + a3[42]) = *(_BYTE *)(a2 + a3[42]);
  *(_BYTE *)(a1 + a3[43]) = *(_BYTE *)(a2 + a3[43]);
  return a1;
}

uint64_t sub_1003E7600(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(void *, const void *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  const void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v7 = a3[9];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = type metadata accessor for FMIPItem(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = a3[10];
  v14 = a3[11];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  v19 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v19) = *(_BYTE *)(a2 + v19);
  v20 = a3[15];
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  *(_BYTE *)(a1 + v20) = *(_BYTE *)(a2 + v20);
  v21 = a3[17];
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  *(_OWORD *)(a1 + v21) = *(_OWORD *)(a2 + v21);
  v22 = a3[19];
  v23 = (void *)(a1 + v22);
  v24 = (const void *)(a2 + v22);
  *(_OWORD *)(a1 + a3[18]) = *(_OWORD *)(a2 + a3[18]);
  v25 = type metadata accessor for Date(0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(void (**)(void *, const void *, uint64_t))(v26 + 32);
  v27(v23, v24, v25);
  v28 = a3[21];
  *(_QWORD *)(a1 + a3[20]) = *(_QWORD *)(a2 + a3[20]);
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = type metadata accessor for FMIPBatteryStatus(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
  v32 = a3[23];
  *(_QWORD *)(a1 + a3[22]) = *(_QWORD *)(a2 + a3[22]);
  *(_QWORD *)(a1 + v32) = *(_QWORD *)(a2 + v32);
  v33 = a3[25];
  *(_BYTE *)(a1 + a3[24]) = *(_BYTE *)(a2 + a3[24]);
  *(_BYTE *)(a1 + v33) = *(_BYTE *)(a2 + v33);
  v34 = a3[27];
  *(_BYTE *)(a1 + a3[26]) = *(_BYTE *)(a2 + a3[26]);
  *(_BYTE *)(a1 + v34) = *(_BYTE *)(a2 + v34);
  v35 = a3[29];
  *(_BYTE *)(a1 + a3[28]) = *(_BYTE *)(a2 + a3[28]);
  *(_BYTE *)(a1 + v35) = *(_BYTE *)(a2 + v35);
  v36 = a3[31];
  *(_BYTE *)(a1 + a3[30]) = *(_BYTE *)(a2 + a3[30]);
  *(_BYTE *)(a1 + v36) = *(_BYTE *)(a2 + v36);
  v37 = a3[33];
  *(_BYTE *)(a1 + a3[32]) = *(_BYTE *)(a2 + a3[32]);
  v38 = (void *)(a1 + v37);
  v39 = (const void *)(a2 + v37);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(a2 + v37, 1, v25))
  {
    v40 = sub_100053F2C((uint64_t *)&unk_1005D3320);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    v27(v38, v39, v25);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v38, 0, 1, v25);
  }
  v41 = a3[35];
  *(_BYTE *)(a1 + a3[34]) = *(_BYTE *)(a2 + a3[34]);
  *(_BYTE *)(a1 + v41) = *(_BYTE *)(a2 + v41);
  v42 = a3[37];
  *(_BYTE *)(a1 + a3[36]) = *(_BYTE *)(a2 + a3[36]);
  *(_BYTE *)(a1 + v42) = *(_BYTE *)(a2 + v42);
  v43 = a3[39];
  *(_QWORD *)(a1 + a3[38]) = *(_QWORD *)(a2 + a3[38]);
  *(_BYTE *)(a1 + v43) = *(_BYTE *)(a2 + v43);
  v44 = a3[41];
  *(_BYTE *)(a1 + a3[40]) = *(_BYTE *)(a2 + a3[40]);
  *(_BYTE *)(a1 + v44) = *(_BYTE *)(a2 + v44);
  v45 = a3[43];
  *(_BYTE *)(a1 + a3[42]) = *(_BYTE *)(a2 + a3[42]);
  *(_BYTE *)(a1 + v45) = *(_BYTE *)(a2 + v45);
  return a1;
}

uint64_t sub_1003E7900(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  const void *v70;
  uint64_t (*v71)(uint64_t, uint64_t, uint64_t);
  int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease(v7);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v8;
  swift_bridgeObjectRelease(v9);
  v10 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease(v10);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v11 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease(v11);
  v12 = a3[9];
  v13 = (void *)(a1 + v12);
  v14 = (void *)(a2 + v12);
  v15 = type metadata accessor for FMIPItem(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
LABEL_6:
    v20 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v13, v14, v15);
LABEL_7:
  v21 = a3[10];
  v22 = a3[11];
  v23 = a1 + v21;
  v24 = a2 + v21;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  v25 = a1 + v22;
  v26 = a2 + v22;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_BYTE *)(v25 + 8) = *(_BYTE *)(v26 + 8);
  v27 = a3[12];
  v28 = *(_QWORD *)(a1 + v27);
  *(_QWORD *)(a1 + v27) = *(_QWORD *)(a2 + v27);
  swift_bridgeObjectRelease(v28);
  v29 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v30 = (_QWORD *)(a1 + v29);
  v31 = (uint64_t *)(a2 + v29);
  v33 = *v31;
  v32 = v31[1];
  v34 = v30[1];
  *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease(v34);
  v35 = a3[16];
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  v36 = (_QWORD *)(a1 + v35);
  v37 = (uint64_t *)(a2 + v35);
  v39 = *v37;
  v38 = v37[1];
  v40 = v36[1];
  *v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease(v40);
  v41 = a3[17];
  v42 = (_QWORD *)(a1 + v41);
  v43 = (uint64_t *)(a2 + v41);
  v45 = *v43;
  v44 = v43[1];
  v46 = v42[1];
  *v42 = v45;
  v42[1] = v44;
  swift_bridgeObjectRelease(v46);
  v47 = a3[18];
  v48 = (_QWORD *)(a1 + v47);
  v49 = (uint64_t *)(a2 + v47);
  v51 = *v49;
  v50 = v49[1];
  v52 = v48[1];
  *v48 = v51;
  v48[1] = v50;
  swift_bridgeObjectRelease(v52);
  v53 = a3[19];
  v54 = a1 + v53;
  v55 = a2 + v53;
  v56 = type metadata accessor for Date(0);
  v57 = *(_QWORD *)(v56 - 8);
  v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 40);
  v58(v54, v55, v56);
  v59 = a3[21];
  *(_QWORD *)(a1 + a3[20]) = *(_QWORD *)(a2 + a3[20]);
  v60 = a1 + v59;
  v61 = a2 + v59;
  v62 = type metadata accessor for FMIPBatteryStatus(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 40))(v60, v61, v62);
  v63 = a3[23];
  *(_QWORD *)(a1 + a3[22]) = *(_QWORD *)(a2 + a3[22]);
  *(_QWORD *)(a1 + v63) = *(_QWORD *)(a2 + v63);
  v64 = a3[25];
  *(_BYTE *)(a1 + a3[24]) = *(_BYTE *)(a2 + a3[24]);
  *(_BYTE *)(a1 + v64) = *(_BYTE *)(a2 + v64);
  v65 = a3[27];
  *(_BYTE *)(a1 + a3[26]) = *(_BYTE *)(a2 + a3[26]);
  *(_BYTE *)(a1 + v65) = *(_BYTE *)(a2 + v65);
  v66 = a3[29];
  *(_BYTE *)(a1 + a3[28]) = *(_BYTE *)(a2 + a3[28]);
  *(_BYTE *)(a1 + v66) = *(_BYTE *)(a2 + v66);
  v67 = a3[31];
  *(_BYTE *)(a1 + a3[30]) = *(_BYTE *)(a2 + a3[30]);
  *(_BYTE *)(a1 + v67) = *(_BYTE *)(a2 + v67);
  v68 = a3[33];
  *(_BYTE *)(a1 + a3[32]) = *(_BYTE *)(a2 + a3[32]);
  v69 = (void *)(a1 + v68);
  v70 = (const void *)(a2 + v68);
  v71 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
  v72 = v71(a1 + v68, 1, v56);
  v73 = v71((uint64_t)v70, 1, v56);
  if (!v72)
  {
    if (!v73)
    {
      v58((uint64_t)v69, (uint64_t)v70, v56);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v57 + 8))(v69, v56);
    goto LABEL_12;
  }
  if (v73)
  {
LABEL_12:
    v74 = sub_100053F2C((uint64_t *)&unk_1005D3320);
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v57 + 32))(v69, v70, v56);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v69, 0, 1, v56);
LABEL_13:
  v75 = a3[35];
  *(_BYTE *)(a1 + a3[34]) = *(_BYTE *)(a2 + a3[34]);
  *(_BYTE *)(a1 + v75) = *(_BYTE *)(a2 + v75);
  v76 = a3[37];
  *(_BYTE *)(a1 + a3[36]) = *(_BYTE *)(a2 + a3[36]);
  *(_BYTE *)(a1 + v76) = *(_BYTE *)(a2 + v76);
  v77 = a3[38];
  v78 = *(_QWORD *)(a1 + v77);
  *(_QWORD *)(a1 + v77) = *(_QWORD *)(a2 + v77);
  swift_bridgeObjectRelease(v78);
  v79 = a3[40];
  *(_BYTE *)(a1 + a3[39]) = *(_BYTE *)(a2 + a3[39]);
  *(_BYTE *)(a1 + v79) = *(_BYTE *)(a2 + v79);
  v80 = a3[42];
  *(_BYTE *)(a1 + a3[41]) = *(_BYTE *)(a2 + a3[41]);
  *(_BYTE *)(a1 + v80) = *(_BYTE *)(a2 + v80);
  *(_BYTE *)(a1 + a3[43]) = *(_BYTE *)(a2 + a3[43]);
  return a1;
}

uint64_t sub_1003E7D14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003E7D20);
}

uint64_t sub_1003E7D20(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[9];
    }
    else
    {
      v12 = type metadata accessor for Date(0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[19];
      }
      else
      {
        v13 = type metadata accessor for FMIPBatteryStatus(0);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          v10 = v13;
          v11 = a3[21];
        }
        else
        {
          v10 = sub_100053F2C((uint64_t *)&unk_1005D3320);
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a3[33];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1003E7E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003E7E1C);
}

uint64_t sub_1003E7E1C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[9];
    }
    else
    {
      v12 = type metadata accessor for Date(0);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[19];
      }
      else
      {
        v13 = type metadata accessor for FMIPBatteryStatus(0);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[21];
        }
        else
        {
          v10 = sub_100053F2C((uint64_t *)&unk_1005D3320);
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a4[33];
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for FMDeviceDetailViewModel(uint64_t a1)
{
  uint64_t result;

  result = qword_1005E3990;
  if (!qword_1005E3990)
    return swift_getSingletonMetadata(a1, &nominal type descriptor for FMDeviceDetailViewModel);
  return result;
}

void sub_1003E7F44(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD v10[40];

  v10[0] = &unk_1004904D8;
  v10[1] = &unk_1004904F0;
  v10[2] = &unk_100490508;
  v10[3] = &unk_100490520;
  v10[4] = &unk_100490508;
  sub_100007178(319, (unint64_t *)&qword_1005DD290, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItem);
  if (v3 <= 0x3F)
  {
    v10[5] = *(_QWORD *)(v2 - 8) + 64;
    v10[6] = &unk_100490538;
    v10[7] = &unk_100490538;
    v10[8] = &unk_100490508;
    v10[9] = &unk_100490520;
    v10[10] = &unk_1004904F0;
    v10[11] = &unk_100490520;
    v10[12] = &unk_1004904D8;
    v10[13] = &unk_1004904D8;
    v10[14] = &unk_1004904D8;
    v4 = type metadata accessor for Date(319);
    if (v5 <= 0x3F)
    {
      v10[15] = *(_QWORD *)(v4 - 8) + 64;
      v10[16] = (char *)&value witness table for Builtin.Int64 + 64;
      v6 = type metadata accessor for FMIPBatteryStatus(319);
      if (v7 <= 0x3F)
      {
        v10[17] = *(_QWORD *)(v6 - 8) + 64;
        v10[18] = (char *)&value witness table for Builtin.Int64 + 64;
        v10[19] = (char *)&value witness table for Builtin.Int64 + 64;
        v10[20] = &unk_100490550;
        v10[21] = &unk_100490520;
        v10[22] = &unk_100490520;
        v10[23] = &unk_100490520;
        v10[24] = &unk_100490520;
        v10[25] = &unk_100490520;
        v10[26] = &unk_100490520;
        v10[27] = &unk_100490520;
        v10[28] = &unk_100490520;
        sub_100007178(319, (unint64_t *)&qword_1005D7210, (uint64_t (*)(uint64_t))&type metadata accessor for Date);
        if (v9 <= 0x3F)
        {
          v10[29] = *(_QWORD *)(v8 - 8) + 64;
          v10[30] = &unk_100490520;
          v10[31] = &unk_100490520;
          v10[32] = &unk_100490520;
          v10[33] = &unk_100490520;
          v10[34] = (char *)&value witness table for Builtin.BridgeObject + 64;
          v10[35] = &unk_100490520;
          v10[36] = &unk_100490520;
          v10[37] = &unk_100490520;
          v10[38] = &unk_100490520;
          v10[39] = &unk_100490520;
          swift_initStructMetadata(a1, 256, 40, v10, a1 + 16);
        }
      }
    }
  }
}

uint64_t sub_1003E80BC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X4>, double a5@<X5>, double a6@<X6>, _QWORD *a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  char *v203;
  int *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  unsigned __int8 *v210;
  uint64_t v211;
  uint64_t v212;
  NSObject *v213;
  uint64_t (*v214)(char *, uint64_t, NSObject *, __n128);
  char *v215;
  __n128 v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  __n128 v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  char v235;
  uint64_t v236;
  char v237;
  _QWORD *v238;
  uint64_t v239;
  uint64_t v240;
  unint64_t v241;
  uint64_t v242;
  uint64_t (*v243)(char *, unint64_t, NSObject *, __n128);
  int v244;
  __n128 v245;
  char *v246;
  uint64_t v247;
  int v248;
  uint64_t v249;
  int v250;
  unint64_t v251;
  unint64_t v252;
  unint64_t v253;
  unint64_t v254;
  unint64_t v255;
  unint64_t v256;
  unint64_t v257;
  unint64_t v258;
  unint64_t v259;
  char *v260;
  uint64_t v261;
  char *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  int v266;
  char *v267;
  uint64_t v268;
  char v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t *v272;
  uint64_t v273;
  char *v274;
  uint64_t v275;
  uint64_t v276;
  char *v277;
  uint64_t v278;
  char *v279;
  uint64_t v280;
  uint64_t v281;
  void (*v282)(char *, uint64_t);
  char *v283;
  uint64_t v284;
  char *v285;
  uint64_t v286;
  uint64_t v287;
  void (*v288)(char *, uint64_t);
  uint64_t v289;
  uint64_t v290;
  __n128 v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  __n128 v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  _QWORD *v306;
  __n128 v307;
  uint64_t v308;
  unsigned __int8 *v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t (*v313)(uint64_t, uint64_t, uint64_t);
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  __n128 v319;
  char *v320;
  NSObject *v321;
  char *v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  char *v329;
  char *v330;
  uint64_t v331;
  char v332;
  void (*v333)(char *, uint64_t);
  __n128 v334;
  uint64_t v335;
  void *v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  NSObject *v341;
  NSObject *v342;
  char v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  char *v349;
  char *v350;
  uint64_t v351;
  char *v352;
  uint64_t v353;
  void (*v354)(char *, uint64_t);
  uint64_t v355;
  uint64_t v356;
  NSObject *v357;
  __n128 v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  char *v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  void *v372;
  id v373;
  uint64_t v374;
  void *v375;
  id v376;
  uint64_t v377;
  uint64_t v378;
  __n128 v379;
  uint64_t v380;
  uint64_t v381;
  char *v382;
  uint64_t v383;
  uint64_t v384;
  void *v385;
  uint64_t v386;
  void *v387;
  uint64_t v388;
  id v389;
  unsigned __int8 *v390;
  id v391;
  uint64_t v392;
  char *v393;
  double v394;
  id v395;
  id v396;
  uint64_t v397;
  id v398;
  id v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  id v403;
  Swift::String v404;
  Swift::String v405;
  Swift::String v406;
  uint64_t v407;
  uint64_t v408;
  unint64_t v409;
  uint64_t v410;
  unsigned __int8 *v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  int v417;
  _QWORD *v418;
  uint64_t v419;
  uint64_t v420;
  _QWORD *v421;
  uint64_t v422;
  unint64_t v423;
  char *v424;
  uint64_t v425;
  uint64_t (*v426)(uint64_t, char *, NSObject *);
  NSObject *v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  unint64_t v437;
  unint64_t v438;
  _QWORD *v439;
  __n128 v440;
  int v441;
  int v442;
  int v443;
  void *object;
  _QWORD *v445;
  id v446;
  Swift::String v447;
  Swift::String v448;
  Swift::String v449;
  uint64_t countAndFlagsBits;
  uint64_t v451;
  uint64_t *v452;
  uint64_t *v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  char v462;
  char *v463;
  int v464;
  __n128 v465;
  void (*v466)(char *, uint64_t, __n128);
  uint64_t v467;
  uint64_t v468;
  _QWORD *v469;
  uint64_t v470;
  NSObject *v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t My;
  _QWORD *v476;
  char v477;
  _QWORD *v478;
  int *v479;
  _QWORD *v480;
  uint64_t v481;
  uint64_t *v482;
  uint64_t v483;
  unint64_t v484;
  uint64_t v485;
  char v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t (*v491)(uint64_t, uint64_t, uint64_t, NSObject *);
  uint64_t v492;
  _QWORD *v493;
  char *v494;
  uint64_t v495;
  uint64_t v496;
  char *v497;
  uint64_t v498;
  char *v499;
  NSObject *v500;
  __n128 v501;
  char *v502;
  char *v503;
  id v504;
  uint64_t (**v505)(char *, id);
  uint64_t v506;
  char *v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  char v512;
  __n128 v513;
  uint64_t (*v514)(char *, id);
  uint64_t (*v515)(char *, id);
  char *v516;
  __n128 v517;
  uint64_t v518;
  char *v519;
  uint64_t v520;
  char *v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  char *v527;
  uint64_t v528;
  char *v529;
  __n128 v530;
  char *v531;
  char *v532;
  uint64_t (**v533)(char *, id);
  char *v534;
  uint64_t v535;
  id v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  char v541;
  __n128 v542;
  uint64_t (*v543)(char *, id);
  char *v544;
  uint64_t (*v545)(char *, id);
  char *v546;
  __n128 v547;
  uint64_t v548;
  uint64_t v549;
  int v550;
  __n128 v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  uint64_t v559;
  void *v560;
  id v561;
  uint64_t v562;
  __n128 v563;
  char v564;
  uint64_t v565;
  __n128 v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  void *v574;
  id v575;
  __n128 v576;
  uint64_t v577;
  char v578;
  uint64_t v579;
  char v580;
  uint64_t v581;
  uint64_t v582;
  uint64_t (*v583)(uint64_t, uint64_t, uint64_t);
  uint64_t v584;
  int v585;
  uint64_t v586;
  uint64_t v587;
  void (*v588)(char *, uint64_t, uint64_t);
  uint64_t v589;
  char *v590;
  _QWORD *v591;
  uint64_t v592;
  uint64_t v593;
  uint64_t v594;
  char v595;
  uint64_t v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t *v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  char *v604;
  const char *v605;
  uint64_t v606;
  NSObject *v607;
  uint64_t v608;
  int v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  uint64_t v614;
  uint64_t v615;
  uint64_t v616;
  uint64_t v617;
  char *v618;
  uint64_t v619;
  __n128 v620;
  uint64_t v621;
  uint64_t v622;
  char v623;
  BOOL v624;
  double v625;
  int *v626;
  _QWORD *v627;
  uint64_t v628;
  uint64_t v629;
  _QWORD *v630;
  uint64_t v631;
  uint64_t v632;
  char *v633;
  uint64_t v634;
  char *v635;
  uint64_t v636;
  char v637;
  char *v638;
  int *v639;
  uint64_t (*v640)(char *, uint64_t);
  uint64_t v641;
  uint64_t v642;
  uint64_t v643;
  uint64_t v644;
  __n128 v645;
  char v646;
  uint64_t v647;
  void (*v648)(char *, uint64_t);
  uint64_t v649;
  uint64_t v650;
  char *v651;
  uint64_t v652;
  uint64_t v653;
  uint64_t v654;
  uint64_t v655;
  uint64_t v656;
  char *v657;
  uint64_t v658;
  void (*v659)(void);
  uint64_t v660;
  uint64_t v661;
  char *v662;
  uint64_t v663;
  uint64_t v664;
  uint64_t v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  int *v669;
  char *v670;
  uint64_t v671;
  uint64_t v672;
  uint64_t v673;
  uint64_t v674;
  uint64_t v675;
  uint64_t v676;
  NSObject *v677;
  uint64_t v678;
  char v679;
  char v680;
  char *v681;
  char *v682;
  uint64_t v683;
  uint64_t v684;
  uint64_t v685;
  void (*v686)(uint64_t, uint64_t);
  char *v687;
  uint64_t v688;
  uint64_t v689;
  double v690;
  uint64_t v691;
  uint64_t v692;
  void *v693;
  double v694;
  uint64_t v695;
  char *v696;
  uint64_t v697;
  uint64_t v698;
  uint64_t v699;
  uint64_t v700;
  uint64_t v701;
  __n128 v702;
  uint64_t v703;
  uint64_t v704;
  uint64_t v705;
  uint64_t v706;
  char v707;
  char v708;
  char *v709;
  uint64_t v710;
  BOOL v711;
  char *v712;
  void (*v713)(void);
  __n128 v714;
  uint64_t v715;
  uint64_t v716;
  char v717;
  char *v718;
  uint64_t v719;
  char *v720;
  uint64_t v721;
  uint64_t v722;
  char v723;
  void (*v724)(char *, uint64_t);
  char *v725;
  __n128 v726;
  char *v727;
  char *v728;
  char v729;
  char *v730;
  uint64_t (*v731)(char *, uint64_t);
  uint64_t v732;
  uint64_t v733;
  uint64_t v734;
  uint64_t v735;
  NSObject *v736;
  os_log_type_t v737;
  _BOOL4 v738;
  NSObject *v739;
  uint64_t v740;
  uint8_t *v741;
  uint64_t v742;
  uint64_t v743;
  uint64_t v744;
  char v745;
  uint64_t v746;
  char *v747;
  void (*v748)(void);
  char *v749;
  uint64_t v750;
  NSObject *v751;
  os_log_type_t v752;
  int v753;
  _DWORD *v754;
  char *v755;
  _DWORD *v756;
  char *v757;
  uint64_t v758;
  char *v759;
  uint64_t v760;
  uint64_t v761;
  char v762;
  void (*v763)(char *, uint64_t);
  char *v764;
  void (*v765)(char *, uint64_t);
  uint64_t v766;
  uint64_t v767;
  uint64_t v768;
  char v769;
  char *v770;
  void (*v771)(char *, uint64_t);
  char *v772;
  uint64_t v773;
  uint64_t v774;
  uint64_t v775;
  void *v776;
  uint64_t v777;
  uint64_t v778;
  char *v779;
  uint64_t v780;
  char *v781;
  uint64_t v782;
  uint64_t v783;
  char v784;
  void (*v785)(char *, uint64_t);
  char *v786;
  uint64_t v787;
  uint64_t v788;
  unint64_t v789;
  unint64_t v790;
  __n128 v792;
  id v793;
  Swift::String v794;
  Swift::String_optional v795;
  Swift::String v796;
  Swift::String v797;
  uint64_t v798;
  uint64_t v799;
  void *v800;
  id v801;
  id v802;
  void *v803;
  id v804;
  Class isa;
  id v806;
  uint64_t v807;
  uint64_t v808;
  uint64_t v809;
  unint64_t v810;
  uint64_t v811;
  uint64_t v812;
  uint64_t v813;
  double v814;
  uint64_t *v815;
  id v816;
  Swift::String v817;
  Swift::String_optional v818;
  Swift::String v819;
  Swift::String v820;
  uint64_t v821;
  void *v822;
  id v823;
  id v824;
  void *v825;
  uint64_t v826;
  id v827;
  char *v828;
  Class v829;
  id v830;
  uint64_t v831;
  uint64_t v832;
  uint64_t v833;
  uint64_t v834;
  unint64_t v835;
  unint64_t v836;
  __n128 v837;
  void (*v838)(char *, uint64_t, __n128);
  uint64_t v839;
  char *v840;
  char *v841;
  char *v842;
  char *v843;
  uint64_t v844;
  double v845;
  char *v846;
  uint64_t v847;
  char *v848;
  char *v849;
  uint64_t v850;
  uint64_t v851;
  uint64_t v852;
  uint64_t v853;
  char *v854;
  char *v855;
  uint64_t v856;
  char *v857;
  char *v858;
  double v859;
  uint64_t v860;
  char *v861;
  uint64_t v862;
  uint64_t v863;
  char *v864;
  char *v865;
  char *v866;
  uint64_t v867;
  uint64_t v868;
  char *v869;
  char *v870;
  char *v871;
  char *v872;
  char *v873;
  char *v874;
  uint64_t v875;
  uint64_t v876;
  uint64_t v877;
  uint64_t v878;
  uint64_t v879;
  char *v880;
  uint64_t v881;
  uint64_t v882;
  char *v883;
  char *v884;
  char *v885;
  char *v886;
  uint64_t v887;
  uint64_t v888;
  char *v889;
  char *v890;
  uint64_t v891;
  uint64_t v892;
  char *v893;
  char *v894;
  uint64_t v895;
  uint64_t v896;
  char *v897;
  char *v898;
  char *v899;
  char *v900;
  uint64_t v901;
  uint64_t v902;
  char *v903;
  uint64_t v904;
  char *v905;
  char *v906;
  char *v907;
  uint64_t v908;
  char *v909;
  char *v910;
  void (*v911)(char *, uint64_t);
  uint64_t v912;
  uint64_t v913;
  char *v914;
  id v915;
  unsigned int (*v916)(uint64_t, uint64_t, uint64_t);
  char *v917;
  char *v918;
  uint64_t v919;
  char *v920;
  char *v921;
  char *v922;
  uint64_t v923;
  char *v924;
  char *v925;
  char *v926;
  uint64_t v927;
  char *v928;
  char *v929;
  char *v930;
  char *v931;
  uint64_t v932;
  uint64_t v933;
  uint64_t v934;
  char *v935;
  uint64_t v936;
  uint64_t v937;
  char *v938;
  char *v939;
  uint64_t v940;
  unsigned __int8 *v941;
  char *v942;
  char *v943;
  uint64_t (*v944)(uint64_t, uint64_t, uint64_t, NSObject *);
  uint64_t v945;
  uint64_t v946;
  uint64_t v947;
  char *v948;
  char *v949;
  uint64_t v950;
  char *v951;
  uint64_t v952;
  uint64_t v953;
  uint64_t v954;
  char *v955;
  uint64_t (*v956)(char *, uint64_t, uint64_t);
  uint64_t v957;
  uint64_t v958;
  char *v959;
  uint64_t v960;
  void *v961;
  uint64_t v962;
  uint64_t v963;
  uint64_t (*v964)(char *, uint64_t, NSObject *, __n128);
  void (*v965)(void);
  _QWORD *v966;
  NSObject *v967;
  uint64_t v968;
  _QWORD *v969;
  char *v970;
  char *v971;
  int v972;
  char *v973;
  uint64_t v974;
  int *v975;
  __int128 v976;
  uint64_t v977;
  uint64_t v978;
  uint64_t (**v979)(char *, id);
  id v980;
  NSObject *v981;
  uint64_t v982;
  __int128 v983;
  uint64_t v984;
  __int128 v985;
  __int128 v986;
  uint64_t v987;
  Swift::String v988;
  Swift::String v989;
  Swift::String v990;
  Swift::String v991;

  v845 = a6;
  v859 = a5;
  v915 = a4;
  v961 = a3;
  v892 = type metadata accessor for FMIPFeatures(0);
  v891 = *(_QWORD *)(v892 - 8);
  v10 = __chkstk_darwin(v892);
  v890 = (char *)&v840 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v889 = (char *)&v840 - v12;
  v902 = type metadata accessor for FMIPConfigValue(0);
  v901 = *(_QWORD *)(v902 - 8);
  __chkstk_darwin(v902);
  v900 = (char *)&v840 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_100053F2C(&qword_1005DBA58);
  __chkstk_darwin(v14);
  v886 = (char *)&v840 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_100053F2C((uint64_t *)&unk_1005E3AA0);
  __chkstk_darwin(v16);
  v928 = (char *)&v840 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v934 = type metadata accessor for FMIPRangingParameters(0);
  v937 = *(_QWORD *)(v934 - 8);
  __chkstk_darwin(v934);
  v885 = (char *)&v840 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v960 = type metadata accessor for Date(0);
  v946 = *(_QWORD *)(v960 - 8);
  v19 = __chkstk_darwin(v960);
  v920 = (char *)&v840 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __chkstk_darwin(v19);
  v842 = (char *)&v840 - v22;
  __chkstk_darwin(v21);
  v858 = (char *)&v840 - v23;
  v24 = sub_100053F2C(&qword_1005D9990);
  __chkstk_darwin(v24);
  v953 = (uint64_t)&v840 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v945 = type metadata accessor for FMIPDeviceStatus(0);
  v944 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, NSObject *))(v945 - 8);
  v26 = __chkstk_darwin(v945);
  v943 = (char *)&v840 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v942 = (char *)&v840 - v28;
  v962 = type metadata accessor for FMIPItemGroup(0);
  v947 = *(_QWORD *)(v962 - 8);
  __chkstk_darwin(v962);
  v918 = (char *)&v840 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_100053F2C(&qword_1005E3AB0);
  v31 = __chkstk_darwin(v30);
  v884 = (char *)&v840 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __chkstk_darwin(v31);
  v883 = (char *)&v840 - v34;
  v35 = __chkstk_darwin(v33);
  v930 = (char *)&v840 - v36;
  __chkstk_darwin(v35);
  v916 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))((char *)&v840 - v37);
  v38 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  v39 = __chkstk_darwin(v38);
  v933 = (uint64_t)&v840 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __chkstk_darwin(v39);
  v921 = (char *)&v840 - v42;
  v43 = __chkstk_darwin(v41);
  v927 = (uint64_t)&v840 - v44;
  v45 = __chkstk_darwin(v43);
  v844 = (uint64_t)&v840 - v46;
  v47 = __chkstk_darwin(v45);
  v856 = (uint64_t)&v840 - v48;
  v49 = __chkstk_darwin(v47);
  v868 = (uint64_t)&v840 - v50;
  v51 = __chkstk_darwin(v49);
  v867 = (uint64_t)&v840 - v52;
  __chkstk_darwin(v51);
  v957 = (uint64_t)&v840 - v53;
  v913 = type metadata accessor for FMIPBatteryStatus(0);
  v912 = *(_QWORD *)(v913 - 8);
  v54 = __chkstk_darwin(v913);
  v925 = (char *)&v840 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v54);
  v924 = (char *)&v840 - v56;
  v940 = type metadata accessor for FMIPDeviceConnectedStateType(0);
  v904 = *(_QWORD *)(v940 - 8);
  v57 = __chkstk_darwin(v940);
  v938 = (char *)&v840 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v57);
  v939 = (char *)&v840 - v59;
  v60 = sub_100053F2C(&qword_1005D6710);
  v61 = __chkstk_darwin(v60);
  v879 = (uint64_t)&v840 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __chkstk_darwin(v61);
  v922 = (char *)&v840 - v64;
  v65 = __chkstk_darwin(v63);
  v911 = (void (*)(char *, uint64_t))((char *)&v840 - v66);
  v67 = __chkstk_darwin(v65);
  v958 = (uint64_t)&v840 - v68;
  __chkstk_darwin(v67);
  v952 = (uint64_t)&v840 - v69;
  v70 = sub_100053F2C((uint64_t *)&unk_1005D6700);
  v71 = __chkstk_darwin(v70);
  v929 = (char *)&v840 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __chkstk_darwin(v71);
  v846 = (char *)&v840 - v74;
  v75 = __chkstk_darwin(v73);
  v843 = (char *)&v840 - v76;
  v77 = __chkstk_darwin(v75);
  v857 = (char *)&v840 - v78;
  v79 = __chkstk_darwin(v77);
  v855 = (char *)&v840 - v80;
  v81 = __chkstk_darwin(v79);
  v914 = (char *)&v840 - v82;
  v83 = __chkstk_darwin(v81);
  v963 = (uint64_t)&v840 - v84;
  v85 = __chkstk_darwin(v83);
  v880 = (char *)&v840 - v86;
  v87 = __chkstk_darwin(v85);
  v865 = (char *)&v840 - v88;
  v89 = __chkstk_darwin(v87);
  v864 = (char *)&v840 - v90;
  __chkstk_darwin(v89);
  v866 = (char *)&v840 - v91;
  v950 = type metadata accessor for FMIPDeviceState(0);
  v923 = *(_QWORD *)(v950 - 8);
  v92 = __chkstk_darwin(v950);
  v949 = (char *)&v840 - ((v93 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v92);
  v948 = (char *)&v840 - v94;
  v896 = type metadata accessor for FMIPItemState(0);
  v895 = *(_QWORD *)(v896 - 8);
  v95 = __chkstk_darwin(v896);
  v894 = (char *)&v840 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v95);
  v893 = (char *)&v840 - v97;
  v98 = type metadata accessor for FMIPPlaySoundChannels(0);
  v977 = *(_QWORD *)(v98 - 8);
  v978 = v98;
  v99 = __chkstk_darwin(v98);
  v971 = (char *)&v840 - ((v100 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = __chkstk_darwin(v99);
  v935 = (char *)&v840 - v102;
  __chkstk_darwin(v101);
  v959 = (char *)&v840 - v103;
  v104 = (_QWORD *)type metadata accessor for FMIPPartType(0);
  v979 = (uint64_t (**)(char *, id))*(v104 - 1);
  v980 = v104;
  v105 = __chkstk_darwin(v104);
  v870 = (char *)&v840 - ((v106 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = __chkstk_darwin(v105);
  v841 = (char *)&v840 - v108;
  v109 = __chkstk_darwin(v107);
  v869 = (char *)&v840 - v110;
  v111 = __chkstk_darwin(v109);
  v840 = (char *)&v840 - v112;
  __chkstk_darwin(v111);
  v114 = (char *)&v840 - v113;
  v115 = type metadata accessor for FMIPItem(0);
  v116 = *(_QWORD *)(v115 - 8);
  v981 = v115;
  v982 = v116;
  v117 = __chkstk_darwin(v115);
  v919 = (uint64_t)&v840 - ((v118 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = __chkstk_darwin(v117);
  v872 = (char *)&v840 - v120;
  v121 = __chkstk_darwin(v119);
  v871 = (char *)&v840 - v122;
  v123 = __chkstk_darwin(v121);
  *(_QWORD *)&v976 = (char *)&v840 - v124;
  __chkstk_darwin(v123);
  v126 = (char *)&v840 - v125;
  v908 = type metadata accessor for FMIPProductType(0);
  v862 = *(_QWORD *)(v908 - 8);
  __chkstk_darwin(v908);
  v861 = (char *)&v840 - ((v127 + 15) & 0xFFFFFFFFFFFFFFF0);
  v128 = sub_100053F2C(&qword_1005D72D0);
  v129 = __chkstk_darwin(v128);
  v899 = (char *)&v840 - ((v130 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = __chkstk_darwin(v129);
  v849 = (char *)&v840 - v132;
  v133 = __chkstk_darwin(v131);
  v848 = (char *)&v840 - v134;
  v135 = __chkstk_darwin(v133);
  v905 = (char *)&v840 - v136;
  v137 = __chkstk_darwin(v135);
  v907 = (char *)&v840 - v138;
  __chkstk_darwin(v137);
  v955 = (char *)&v840 - v139;
  v140 = sub_100053F2C(&qword_1005D7320);
  v141 = __chkstk_darwin(v140);
  v968 = (uint64_t)&v840 - ((v142 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v141);
  v951 = (char *)&v840 - v143;
  v974 = type metadata accessor for FMIPDevice(0);
  v941 = *(unsigned __int8 **)(v974 - 8);
  v144 = __chkstk_darwin(v974);
  v874 = (char *)&v840 - ((v145 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = __chkstk_darwin(v144);
  v873 = (char *)&v840 - v147;
  v148 = __chkstk_darwin(v146);
  v903 = (char *)&v840 - v149;
  v150 = __chkstk_darwin(v148);
  v898 = (char *)&v840 - v151;
  v152 = __chkstk_darwin(v150);
  v931 = (char *)&v840 - v153;
  v154 = __chkstk_darwin(v152);
  v926 = (char *)&v840 - v155;
  v156 = __chkstk_darwin(v154);
  v917 = (char *)&v840 - v157;
  v158 = __chkstk_darwin(v156);
  v909 = (char *)&v840 - v159;
  __chkstk_darwin(v158);
  v970 = (char *)&v840 - v160;
  v161 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  v162 = __chkstk_darwin(v161);
  v860 = (uint64_t)&v840 - ((v163 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = __chkstk_darwin(v162);
  v887 = (uint64_t)&v840 - v165;
  v166 = __chkstk_darwin(v164);
  v882 = (uint64_t)&v840 - v167;
  v168 = __chkstk_darwin(v166);
  v936 = (uint64_t)&v840 - v169;
  v170 = __chkstk_darwin(v168);
  v906 = (char *)&v840 - v171;
  v172 = __chkstk_darwin(v170);
  v854 = (char *)&v840 - v173;
  v174 = __chkstk_darwin(v172);
  v853 = (uint64_t)&v840 - v175;
  v176 = __chkstk_darwin(v174);
  v852 = (uint64_t)&v840 - v177;
  v178 = __chkstk_darwin(v176);
  v850 = (uint64_t)&v840 - v179;
  v180 = __chkstk_darwin(v178);
  v875 = (uint64_t)&v840 - v181;
  v182 = __chkstk_darwin(v180);
  v876 = (uint64_t)&v840 - v183;
  v184 = __chkstk_darwin(v182);
  v881 = (uint64_t)&v840 - v185;
  v186 = __chkstk_darwin(v184);
  v878 = (uint64_t)&v840 - v187;
  v188 = __chkstk_darwin(v186);
  v877 = (uint64_t)&v840 - v189;
  v190 = __chkstk_darwin(v188);
  v863 = (uint64_t)&v840 - v191;
  v192 = __chkstk_darwin(v190);
  v888 = (uint64_t)&v840 - v193;
  v194 = __chkstk_darwin(v192);
  v910 = (char *)&v840 - v195;
  __chkstk_darwin(v194);
  v197 = (char *)&v840 - v196;
  v198 = sub_100053F2C(&qword_1005E3AB8);
  v199 = __chkstk_darwin(v198);
  v201 = (char *)&v840 - ((v200 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v199);
  v203 = (char *)&v840 - v202;
  v204 = (int *)type metadata accessor for FMDeviceDetailViewModel(0);
  v954 = v204[13];
  *((_BYTE *)a7 + v954) = 0;
  v851 = v204[26];
  *((_BYTE *)a7 + v851) = 0;
  v975 = v204;
  v205 = v204[27];
  v969 = a7;
  v847 = v205;
  *((_BYTE *)a7 + v205) = 0;
  v206 = *(int *)(v198 + 48);
  v966 = a1;
  sub_1003ED59C((uint64_t)v203, a2, a1);
  v208 = v207;
  *(_QWORD *)&v203[v206] = v207;
  sub_100007464((uint64_t)v203, (uint64_t)v201, (uint64_t *)&unk_1005D3AA0);
  sub_10005DAA0((uint64_t)v201, (uint64_t)v197, (uint64_t *)&unk_1005D3AA0);
  v209 = *(int *)(v198 + 48);
  v210 = v941;
  v897 = v203;
  v211 = (uint64_t)v203;
  v212 = v208;
  sub_100007464(v211, (uint64_t)v201, (uint64_t *)&unk_1005D3AA0);
  *(_QWORD *)&v201[v209] = v208;
  v213 = v981;
  swift_bridgeObjectRetain(v208);
  sub_1000051EC((uint64_t)v201, (uint64_t *)&unk_1005D3AA0);
  v214 = *(uint64_t (**)(char *, uint64_t, NSObject *, __n128))(v982 + 48);
  v973 = v197;
  v964 = v214;
  LODWORD(v197) = ((uint64_t (*)(char *, uint64_t, NSObject *))v214)(v197, 1, v213);
  v215 = v970;
  v965 = (void (*)(void))*((_QWORD *)v210 + 2);
  v965();
  v972 = 0;
  if ((_DWORD)v197 != 1)
    v972 = FMIPDevice.pairingIncomplete.getter(v216) ^ 1;
  v970 = (char *)*((_QWORD *)v210 + 1);
  v217 = ((uint64_t (*)(char *, uint64_t))v970)(v215, v974);
  v218 = v955;
  v219 = a2;
  FMIPDevice.itemGroup.getter(v217);
  v220 = v947;
  v221 = v962;
  v956 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v947 + 48);
  v222 = v956(v218, 1, v962);
  if ((_DWORD)v222 == 1)
  {
    v223 = &qword_1005D72D0;
    v224 = (uint64_t)v218;
LABEL_10:
    sub_1000051EC(v224, v223);
    v231 = (uint64_t)v951;
    v987 = 0;
    v985 = 0u;
    v986 = 0u;
LABEL_11:
    sub_1000051EC((uint64_t)&v985, (uint64_t *)&unk_1005E3AC0);
    v232 = type metadata accessor for FMIPHawkeyeProductInformation(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v232 - 8) + 56))(v231, 1, 1, v232);
    goto LABEL_12;
  }
  v225 = FMIPItemGroup.items.getter(v222);
  (*(void (**)(char *, uint64_t))(v220 + 8))(v218, v221);
  if (*(_QWORD *)(v225 + 16))
  {
    v226 = v982;
    v227 = v910;
    (*(void (**)(char *, unint64_t, NSObject *))(v982 + 16))(v910, v225 + ((*(unsigned __int8 *)(v226 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v226 + 80)), v213);
    v228 = 0;
  }
  else
  {
    v228 = 1;
    v226 = v982;
    v227 = v910;
  }
  (*(void (**)(char *, uint64_t, uint64_t, NSObject *))(v226 + 56))(v227, v228, 1, v213);
  v229 = swift_bridgeObjectRelease(v225);
  v230 = v964(v227, 1, v213, v229);
  if ((_DWORD)v230 == 1)
  {
    v223 = (uint64_t *)&unk_1005D3AA0;
    v224 = (uint64_t)v227;
    goto LABEL_10;
  }
  v262 = v861;
  FMIPItem.productType.getter(v230);
  v263 = (*(uint64_t (**)(char *, NSObject *))(v226 + 8))(v227, v213);
  FMIPProductType.productInformation.getter(&v985, v263);
  (*(void (**)(char *, uint64_t))(v862 + 8))(v262, v908);
  v231 = (uint64_t)v951;
  if (!*((_QWORD *)&v986 + 1))
    goto LABEL_11;
  v264 = sub_100053F2C(&qword_1005D8E98);
  v232 = type metadata accessor for FMIPHawkeyeProductInformation(0);
  v265 = v264;
  v231 = (uint64_t)v951;
  v266 = swift_dynamicCast(v951, &v985, v265, v232, 6);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v232 - 8) + 56))(v231, v266 ^ 1u, 1, v232);
LABEL_12:
  v233 = v968;
  sub_100007464(v231, v968, &qword_1005D7320);
  type metadata accessor for FMIPHawkeyeProductInformation(0);
  v234 = *(_QWORD *)(v232 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v234 + 48))(v233, 1, v232) == 1)
  {
    sub_1000051EC(v233, &qword_1005D7320);
    v235 = 0;
  }
  else
  {
    v235 = FMIPHawkeyeProductInformation.requiresAdditionalConnectionTime.getter();
    (*(void (**)(uint64_t, uint64_t))(v234 + 8))(v233, v232);
  }
  v236 = (uint64_t)v973;
  v237 = v235 & 1;
  v238 = v969;
  *((_BYTE *)v969 + v954) = v237;
  v967 = v219;
  v932 = v212;
  if (v212)
  {
    v239 = *(_QWORD *)(v212 + 16);
    if (v239)
    {
      v240 = v212;
      v241 = v212 + ((*(unsigned __int8 *)(v982 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v982 + 80));
      v242 = *(_QWORD *)(v982 + 72);
      v243 = *(uint64_t (**)(char *, unint64_t, NSObject *, __n128))(v982 + 16);
      v244 = enum case for FMIPPartType.standalone(_:);
      LODWORD(v968) = enum case for FMIPPartType.case(_:);
      LODWORD(v955) = enum case for FMIPPartType.leftBud(_:);
      LODWORD(v910) = enum case for FMIPPartType.rightBud(_:);
      LODWORD(v862) = enum case for FMIPPartType.generic(_:);
      LODWORD(v861) = enum case for FMIPPlaySoundChannels.right(_:);
      LODWORD(v908) = enum case for FMIPPlaySoundChannels.left(_:);
      LODWORD(v954) = enum case for FMIPPlaySoundChannels.case(_:);
      v245 = swift_bridgeObjectRetain(v240);
      v246 = (char *)_swiftEmptyArrayStorage;
      while (1)
      {
        v247 = v243(v126, v241, v213, v245);
        FMIPItem.partType.getter(v247);
        v248 = v979[11](v114, v980);
        if (v248 == v244)
        {
          v249 = v982;
        }
        else
        {
          v250 = v248;
          if (v248 == (_DWORD)v968)
          {
            (*(void (**)(char *, _QWORD, uint64_t))(v977 + 104))(v971, v954, v978);
            if ((swift_isUniquelyReferenced_nonNull_native(v246) & 1) != 0)
              v251 = (unint64_t)v246;
            else
              v251 = sub_100070298(0, *((_QWORD *)v246 + 2) + 1, 1, (unint64_t)v246);
            v253 = *(_QWORD *)(v251 + 16);
            v252 = *(_QWORD *)(v251 + 24);
            if (v253 >= v252 >> 1)
              v251 = sub_100070298(v252 > 1, v253 + 1, 1, v251);
            *(_QWORD *)(v251 + 16) = v253 + 1;
            v246 = (char *)v251;
            (*(void (**)(unint64_t, char *, uint64_t))(v977 + 32))(v251+ ((*(unsigned __int8 *)(v977 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v977 + 80))+ *(_QWORD *)(v977 + 72) * v253, v971, v978);
          }
          else if (v248 == (_DWORD)v955)
          {
            (*(void (**)(char *, _QWORD, uint64_t))(v977 + 104))(v959, v908, v978);
            if ((swift_isUniquelyReferenced_nonNull_native(v246) & 1) != 0)
              v254 = (unint64_t)v246;
            else
              v254 = sub_100070298(0, *((_QWORD *)v246 + 2) + 1, 1, (unint64_t)v246);
            v256 = *(_QWORD *)(v254 + 16);
            v255 = *(_QWORD *)(v254 + 24);
            if (v256 >= v255 >> 1)
              v254 = sub_100070298(v255 > 1, v256 + 1, 1, v254);
            *(_QWORD *)(v254 + 16) = v256 + 1;
            v246 = (char *)v254;
            (*(void (**)(unint64_t, char *, uint64_t))(v977 + 32))(v254+ ((*(unsigned __int8 *)(v977 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v977 + 80))+ *(_QWORD *)(v977 + 72) * v256, v959, v978);
          }
          else
          {
            if (v248 != (_DWORD)v910)
            {
              (*(void (**)(char *, NSObject *))(v982 + 8))(v126, v213);
              if (v250 != (_DWORD)v862)
                v979[1](v114, v980);
              goto LABEL_40;
            }
            (*(void (**)(char *, _QWORD, uint64_t))(v977 + 104))(v935, v861, v978);
            if ((swift_isUniquelyReferenced_nonNull_native(v246) & 1) != 0)
              v257 = (unint64_t)v246;
            else
              v257 = sub_100070298(0, *((_QWORD *)v246 + 2) + 1, 1, (unint64_t)v246);
            v259 = *(_QWORD *)(v257 + 16);
            v258 = *(_QWORD *)(v257 + 24);
            if (v259 >= v258 >> 1)
              v257 = sub_100070298(v258 > 1, v259 + 1, 1, v257);
            *(_QWORD *)(v257 + 16) = v259 + 1;
            v246 = (char *)v257;
            (*(void (**)(unint64_t, char *, uint64_t))(v977 + 32))(v257+ ((*(unsigned __int8 *)(v977 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v977 + 80))+ *(_QWORD *)(v977 + 72) * v259, v935, v978);
          }
          v213 = v981;
          v249 = v982;
        }
        (*(void (**)(char *, NSObject *))(v249 + 8))(v126, v213);
LABEL_40:
        v241 += v242;
        if (!--v239)
        {
          swift_bridgeObjectRelease(v932);
          v238 = v969;
          v236 = (uint64_t)v973;
          v260 = v246;
          v261 = v962;
          goto LABEL_52;
        }
      }
    }
    v260 = (char *)_swiftEmptyArrayStorage;
    v238 = v969;
  }
  else
  {
    v260 = (char *)_swiftEmptyArrayStorage;
  }
  v261 = v962;
LABEL_52:
  v267 = (char *)*((_QWORD *)v260 + 2);
  v268 = v974;
  v959 = v260;
  if (v267)
  {
    swift_bridgeObjectRetain(v260);
    v267 = v959;
  }
  *(_QWORD *)((char *)v238 + v975[12]) = v267;
  v269 = v972;
  *((_BYTE *)v238 + 40) = v972 & 1;
  if ((v269 & 1) != 0)
  {
    v270 = v888;
    sub_100007464(v236, v888, (uint64_t *)&unk_1005D3AA0);
    v271 = ((uint64_t (*)(uint64_t, uint64_t, NSObject *))v964)(v270, 1, v213);
    if ((_DWORD)v271 == 1)
    {
      v272 = (uint64_t *)&unk_1005D3AA0;
      v273 = v270;
LABEL_59:
      v276 = sub_1000051EC(v273, v272);
      LODWORD(v907) = 0;
      goto LABEL_63;
    }
    v277 = v893;
    FMIPItem.state.getter(v271);
    v278 = (*(uint64_t (**)(uint64_t, NSObject *))(v982 + 8))(v270, v213);
  }
  else
  {
    v274 = v907;
    FMIPDevice.itemGroup.getter(v260);
    v275 = v956(v274, 1, v261);
    if ((_DWORD)v275 == 1)
    {
      v272 = &qword_1005D72D0;
      v273 = (uint64_t)v274;
      goto LABEL_59;
    }
    v277 = v893;
    FMIPItemGroup.state.getter(v275);
    v278 = (*(uint64_t (**)(char *, uint64_t))(v947 + 8))(v274, v261);
  }
  v279 = v894;
  static FMIPItemState.isBTConnected.getter(v278);
  v280 = sub_100008000((unint64_t *)&qword_1005E2280, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItemState, (uint64_t)&protocol conformance descriptor for FMIPItemState);
  v281 = v896;
  LODWORD(v907) = dispatch thunk of SetAlgebra.isSuperset(of:)(v279, v896, v280);
  v282 = *(void (**)(char *, uint64_t))(v895 + 8);
  v282(v279, v281);
  v276 = ((uint64_t (*)(char *, uint64_t))v282)(v277, v281);
LABEL_63:
  v283 = v948;
  v284 = FMIPDevice.state.getter(v276);
  v285 = v949;
  static FMIPDeviceState.isThisDevice.getter(v284);
  v286 = sub_100008000((unint64_t *)&qword_1005D4158, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPDeviceState, (uint64_t)&protocol conformance descriptor for FMIPDeviceState);
  v287 = v950;
  LODWORD(v910) = dispatch thunk of SetAlgebra.isSuperset(of:)(v285, v950, v286);
  v288 = *(void (**)(char *, uint64_t))(v923 + 8);
  v288(v285, v287);
  v289 = ((uint64_t (*)(char *, uint64_t))v288)(v283, v287);
  v290 = FMIPDevice.state.getter(v289);
  static FMIPDeviceState.isDeviceWithYou.getter(v290);
  v954 = v286;
  LODWORD(v923) = dispatch thunk of SetAlgebra.isSuperset(of:)(v285, v287, v286);
  v288(v285, v287);
  v955 = (char *)v288;
  v291.n128_f64[0] = ((double (*)(char *, uint64_t))v288)(v283, v287);
  v292 = FMIPDevice.pairingIncomplete.getter(v291);
  if ((v292 & 1) != 0)
  {
    LODWORD(v908) = 0;
    v293 = (uint64_t)v922;
    v294 = (uint64_t)v911;
    goto LABEL_72;
  }
  v295 = v982;
  v294 = (uint64_t)v911;
  if ((v972 & 1) == 0)
  {
    v299 = (uint64_t)v864;
    FMIPDevice.bestLocation.getter(v292);
LABEL_70:
    v300 = type metadata accessor for FMIPLocation(0);
    LODWORD(v908) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v300 - 8) + 48))(v299, 1, v300) != 1;
    goto LABEL_71;
  }
  v296 = v863;
  sub_100007464(v236, v863, (uint64_t *)&unk_1005D3AA0);
  if (((unsigned int (*)(uint64_t, uint64_t, NSObject *))v964)(v296, 1, v213) != 1)
  {
    v299 = (uint64_t)v866;
    FMIPItem.location.getter(v297);
    (*(void (**)(uint64_t, NSObject *))(v295 + 8))(v296, v213);
    goto LABEL_70;
  }
  sub_1000051EC(v296, (uint64_t *)&unk_1005D3AA0);
  v298 = type metadata accessor for FMIPLocation(0);
  v299 = (uint64_t)v866;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v298 - 8) + 56))(v866, 1, 1, v298);
  LODWORD(v908) = 0;
LABEL_71:
  v293 = (uint64_t)v922;
  v292 = sub_1000051EC(v299, (uint64_t *)&unk_1005D6700);
LABEL_72:
  v301 = FMIPDevice.deviceConnectedWithBeacon.getter(v292);
  if (v302)
    v303 = v301;
  else
    v303 = 0;
  if (v302)
    v304 = v302;
  else
    v304 = 0xE000000000000000;
  v305 = FMIPManager.devices.getter(v301);
  swift_bridgeObjectRetain(v304);
  v306 = sub_1003F26FC(v305, v303, v304);
  swift_bridgeObjectRelease(v305);
  v307 = swift_bridgeObjectRelease(v304);
  v308 = v306[2];
  v888 = 0;
  if (v308)
  {
    v309 = v941;
    v310 = v952;
    ((void (*)(uint64_t, char *, uint64_t, __n128))v965)(v952, (char *)v306 + ((v941[80] + 32) & ~(unint64_t)v941[80]), v268, v307);
    v311 = 0;
  }
  else
  {
    v311 = 1;
    v310 = v952;
    v309 = v941;
  }
  (*((void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v309 + 7))(v310, v311, 1, v268);
  swift_bridgeObjectRelease(v304);
  swift_bridgeObjectRelease(v306);
  v312 = v966[3];
  swift_retain(v312);
  sub_1000BD5B0(v958);
  swift_release(v312);
  sub_100007464(v310, v294, &qword_1005D6710);
  v313 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v309 + 6);
  v314 = v313(v294, 1, v268);
  if ((_DWORD)v314 == 1)
  {
    sub_1000051EC(v294, &qword_1005D6710);
    v315 = 0;
    v316 = 0;
  }
  else
  {
    v315 = FMIPDevice.baIdentifier.getter(v314);
    v316 = v317;
    ((void (*)(uint64_t, uint64_t))v970)(v294, v268);
  }
  sub_100007464(v958, v293, &qword_1005D6710);
  v318 = v313(v293, 1, v268);
  if ((_DWORD)v318 == 1)
  {
    sub_1000051EC(v293, &qword_1005D6710);
    v320 = v938;
    v321 = v967;
    v322 = v909;
    if (!v316)
    {
      LODWORD(v978) = 1;
      v323 = v974;
      v324 = v904;
      goto LABEL_95;
    }
    goto LABEL_92;
  }
  v325 = v268;
  v326 = FMIPDevice.baIdentifier.getter(v318);
  v328 = v327;
  ((void (*)(uint64_t, uint64_t))v970)(v293, v325);
  if (v316)
  {
    v320 = v938;
    v321 = v967;
    v322 = v909;
    if (v328)
    {
      if (v315 == v326 && v316 == v328)
      {
        swift_bridgeObjectRelease(v316);
        LODWORD(v978) = 1;
      }
      else
      {
        LODWORD(v978) = _stringCompareWithSmolCheck(_:_:expecting:)(v315, v316, v326, v328, 0);
        swift_bridgeObjectRelease(v316);
      }
      goto LABEL_93;
    }
LABEL_92:
    LODWORD(v978) = 0;
    v328 = v316;
LABEL_93:
    v323 = v974;
    v324 = v904;
LABEL_94:
    v319 = swift_bridgeObjectRelease(v328);
    goto LABEL_95;
  }
  v320 = v938;
  v321 = v967;
  v324 = v904;
  v322 = v909;
  if (v328)
  {
    LODWORD(v978) = 0;
    v323 = v974;
    goto LABEL_94;
  }
  LODWORD(v978) = 1;
  v323 = v974;
LABEL_95:
  v329 = v939;
  FMIPDevice.deviceConnectedState.getter(v319);
  v330 = *(char **)(v324 + 104);
  v331 = v940;
  ((void (*)(char *, _QWORD, uint64_t))v330)(v320, enum case for FMIPDeviceConnectedStateType.connected(_:), v940);
  v332 = static FMIPDeviceConnectedStateType.== infix(_:_:)(v329, v320);
  v333 = *(void (**)(char *, uint64_t))(v324 + 8);
  v333(v320, v331);
  v333(v329, v331);
  ((void (*)(char *, NSObject *, uint64_t))v965)(v322, v321, v323);
  v911 = v333;
  v909 = v330;
  if ((v332 & 1) != 0)
  {
    ((void (*)(char *, uint64_t))v970)(v322, v323);
    v335 = v982;
    v336 = v961;
    v337 = (uint64_t)v914;
    if ((v978 & 1) != 0)
    {
LABEL_97:
      v338 = 0;
      v339 = 0;
      v340 = (uint64_t)v973;
      v341 = v981;
      v342 = v967;
      goto LABEL_103;
    }
  }
  else
  {
    FMIPDevice.deviceConnectedState.getter(v334);
    ((void (*)(char *, _QWORD, uint64_t))v330)(v320, enum case for FMIPDeviceConnectedStateType.attached(_:), v331);
    v343 = static FMIPDeviceConnectedStateType.== infix(_:_:)(v329, v320);
    v333(v320, v331);
    v333(v329, v331);
    ((void (*)(char *, uint64_t))v970)(v322, v323);
    v335 = v982;
    v336 = v961;
    v337 = (uint64_t)v914;
    if (v978 & 1 | ((v343 & 1) == 0))
      goto LABEL_97;
  }
  v344 = v879;
  sub_100007464(v952, v879, &qword_1005D6710);
  v345 = v313(v344, 1, v323);
  v341 = v981;
  v342 = v967;
  if ((_DWORD)v345 == 1)
  {
    sub_1000051EC(v344, &qword_1005D6710);
    v338 = 0;
    v339 = 0;
  }
  else
  {
    v338 = FMIPDevice.name.getter(v345);
    v339 = v346;
    ((void (*)(uint64_t, uint64_t))v970)(v344, v323);
  }
  v340 = (uint64_t)v973;
LABEL_103:
  v347 = v913;
  v348 = v912;
  v914 = (char *)sub_10020E04C((uint64_t)v342, v340, v336 != 0, 0, 0, 1, 0, v338, v339);
  v922 = v349;
  swift_bridgeObjectRelease(v339);
  v350 = v924;
  FMIPDevice.batteryStatus.getter(v351);
  v352 = v925;
  (*(void (**)(char *, _QWORD, uint64_t))(v348 + 104))(v925, enum case for FMIPBatteryStatus.unknown(_:), v347);
  v353 = sub_100008000((unint64_t *)&unk_1005E3AD0, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPBatteryStatus, (uint64_t)&protocol conformance descriptor for FMIPBatteryStatus);
  LODWORD(v935) = dispatch thunk of static Equatable.== infix(_:_:)(v350, v352, v347, v353);
  v354 = *(void (**)(char *, uint64_t))(v348 + 8);
  v354(v352, v347);
  v355 = ((uint64_t (*)(char *, uint64_t))v354)(v350, v347);
  if ((v972 & 1) != 0)
  {
    v356 = v877;
    sub_100007464(v340, v877, (uint64_t *)&unk_1005D3AA0);
    v357 = v341;
    if (((unsigned int (*)(uint64_t, uint64_t, NSObject *))v964)(v356, 1, v341) == 1)
    {
      sub_1000051EC(v356, (uint64_t *)&unk_1005D3AA0);
      v359 = (uint64_t)v930;
      v360 = v963;
    }
    else
    {
      v367 = (uint64_t)v865;
      FMIPItem.location.getter(v358);
      (*(void (**)(uint64_t, NSObject *))(v335 + 8))(v356, v341);
      v368 = type metadata accessor for FMIPLocation(0);
      v369 = *(_QWORD *)(v368 - 8);
      v370 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v369 + 48))(v367, 1, v368);
      v360 = v963;
      if ((_DWORD)v370 != 1)
      {
        v375 = (void *)FMIPLocation.location.getter(v370);
        (*(void (**)(uint64_t, uint64_t))(v369 + 8))(v367, v368);
        v376 = objc_msgSend(v375, "timestamp");

        v377 = v957;
        static Date._unconditionallyBridgeFromObjectiveC(_:)(v376);

        v365 = *(char **)(v946 + 56);
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v365)(v377, 0, 1, v960);
        v371 = v937;
        v359 = (uint64_t)v930;
LABEL_116:
        v378 = v878;
        sub_100007464((uint64_t)v973, v878, (uint64_t *)&unk_1005D3AA0);
        if (((unsigned int (*)(uint64_t, uint64_t, NSObject *))v964)(v378, 1, v357) == 1)
        {
          sub_1000051EC(v378, (uint64_t *)&unk_1005D3AA0);
          v380 = type metadata accessor for FMIPLocation(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v380 - 8) + 56))(v360, 1, 1, v380);
        }
        else
        {
          FMIPItem.location.getter(v379);
          (*(void (**)(uint64_t, NSObject *))(v335 + 8))(v378, v357);
        }
        goto LABEL_119;
      }
      sub_1000051EC(v367, (uint64_t *)&unk_1005D6700);
      v359 = (uint64_t)v930;
    }
    v365 = *(char **)(v946 + 56);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v365)(v957, 1, 1, v960);
    v371 = v937;
    goto LABEL_116;
  }
  v361 = (uint64_t)v880;
  FMIPDevice.bestLocation.getter(v355);
  v362 = type metadata accessor for FMIPLocation(0);
  v363 = *(_QWORD *)(v362 - 8);
  v364 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v363 + 48))(v361, 1, v362);
  if ((_DWORD)v364 == 1)
  {
    sub_1000051EC(v361, (uint64_t *)&unk_1005D6700);
    v365 = *(char **)(v946 + 56);
    v366 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v365)(v957, 1, 1, v960);
  }
  else
  {
    v372 = (void *)FMIPLocation.location.getter(v364);
    (*(void (**)(uint64_t, uint64_t))(v363 + 8))(v361, v362);
    v373 = objc_msgSend(v372, "timestamp");

    v374 = v957;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v373);

    v365 = *(char **)(v946 + 56);
    v366 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v365)(v374, 0, 1, v960);
  }
  v371 = v937;
  v359 = (uint64_t)v930;
  v360 = v963;
  FMIPDevice.bestLocation.getter(v366);
LABEL_119:
  sub_100007464(v360, v337, (uint64_t *)&unk_1005D6700);
  v381 = type metadata accessor for FMIPLocation(0);
  v382 = *(char **)(v381 - 8);
  v977 = *((_QWORD *)v382 + 6);
  v383 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v977)(v337, 1, v381);
  v925 = v382;
  v971 = v365;
  if ((_DWORD)v383 == 1)
  {
    swift_bridgeObjectRelease(v915);
    v384 = sub_1000051EC(v337, (uint64_t *)&unk_1005D6700);
    v924 = 0;
    v941 = 0;
LABEL_133:
    v388 = (uint64_t)v916;
    goto LABEL_138;
  }
  v385 = (void *)FMIPLocation.location.getter(v383);
  (*((void (**)(uint64_t, uint64_t))v382 + 1))(v337, v381);
  if (!v961)
  {

    swift_bridgeObjectRelease(v915);
    v924 = 0;
    v941 = 0;
    v365 = v971;
    goto LABEL_133;
  }
  v386 = qword_1005D1ED0;
  v387 = v961;
  v388 = (uint64_t)v916;
  if (v386 != -1)
    swift_once(&qword_1005D1ED0, sub_10032D1AC);
  v389 = objc_msgSend((id)qword_1005F5AB8, "localizedDistanceFromLocation:toLocation:", v385, v387);
  v924 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)(v389);
  v941 = v390;

  v391 = v915;
  if (!v915)
  {

LABEL_137:
    v371 = v937;
    v365 = v971;
    goto LABEL_138;
  }
  v392 = sub_1000D7980(v859);
  if (!v393)
  {

    swift_bridgeObjectRelease(v391);
    goto LABEL_137;
  }
  v924 = v393;
  v968 = v392;
  swift_bridgeObjectRelease(v941);
  swift_bridgeObjectRelease(v391);
  v394 = v845;
  v395 = objc_msgSend(objc_allocWithZone((Class)MKDistanceFormatter), "init");
  v396 = objc_msgSend((id)qword_1005F5AB8, "measurementSystem");
  if (v396 != (id)1)
  {
    if (v396 == (id)2)
      v397 = 1;
    else
      v397 = 2;
    objc_msgSend(v395, "setUnits:", v397);
  }
  v398 = objc_msgSend(v395, "stringFromDistance:", v394);
  v915 = v395;
  v399 = v398;
  v400 = static String._unconditionallyBridgeFromObjectiveC(_:)(v398);
  v402 = v401;

  *(_QWORD *)&v985 = 0;
  *((_QWORD *)&v985 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease(*((_QWORD *)&v985 + 1));
  v403 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
  v988._countAndFlagsBits = 0xD00000000000001FLL;
  v988._object = (void *)0x80000001004A99F0;
  v404._countAndFlagsBits = 0x415045535F415445;
  v404._object = (void *)0xED0000524F544152;
  v405._countAndFlagsBits = 0;
  v405._object = (void *)0xE000000000000000;
  v406 = NSLocalizedString(_:tableName:bundle:value:comment:)(v404, (Swift::String_optional)0, (NSBundle)v403, v405, v988);

  v407 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
  v408 = swift_allocObject(v407, 112, 7);
  *(_OWORD *)(v408 + 16) = xmmword_100481730;
  *(_QWORD *)(v408 + 56) = &type metadata for String;
  v409 = sub_100071E88();
  *(_QWORD *)(v408 + 32) = v400;
  *(_QWORD *)(v408 + 40) = v402;
  *(_QWORD *)(v408 + 96) = &type metadata for String;
  *(_QWORD *)(v408 + 104) = v409;
  v410 = v968;
  *(_QWORD *)(v408 + 64) = v409;
  *(_QWORD *)(v408 + 72) = v410;
  *(_QWORD *)(v408 + 80) = v924;
  v924 = (char *)String.init(format:_:)(v406._countAndFlagsBits, v406._object, v408);
  v941 = v411;
  swift_bridgeObjectRelease(v406._object);

  v342 = v967;
  v335 = v982;
  v371 = v937;
  v365 = v971;
  v359 = (uint64_t)v930;
LABEL_138:
  v412 = (uint64_t)v905;
  FMIPManager.rangingParameters.getter(v384);
  v413 = v934;
  v916 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v371 + 48);
  if (v916(v359, 1, v934) == 1)
  {
    FMIPRangingParameters.init()();
    sub_1000051EC(v359, &qword_1005E3AB0);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v371 + 32))(v388, v359, v413);
  }
  v930 = *(char **)(v371 + 56);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v930)(v388, 0, 1, v413);
  v968 = sub_1003F2910((uint64_t)v342, (uint64_t)v961, v388, v978 & 1);
  v414 = sub_1000051EC(v388, &qword_1005E3AB0);
  v415 = FMIPDevice.safeLocations.getter(v414);
  v984 = v415;
  FMIPDevice.itemGroup.getter(v415);
  v416 = v962;
  v417 = v956((char *)v412, 1, v962);
  v978 = v381;
  if (v417 == 1)
  {
    sub_1000051EC(v412, &qword_1005D72D0);
    v418 = _swiftEmptyArrayStorage;
  }
  else
  {
    v419 = v947;
    v420 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v947 + 32))(v918, v412, v416);
    v421 = (_QWORD *)FMIPItemGroup.items.getter(v420);
    v422 = v421[2];
    if (v422)
    {
      v423 = (*(unsigned __int8 *)(v335 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v335 + 80);
      v915 = v421;
      v424 = (char *)v421 + v423;
      v425 = *(_QWORD *)(v335 + 72);
      v426 = *(uint64_t (**)(uint64_t, char *, NSObject *))(v335 + 16);
      v418 = _swiftEmptyArrayStorage;
      v427 = v981;
      v428 = v976;
      v429 = v888;
      do
      {
        v430 = v426(v428, v424, v427);
        v431 = FMIPItem.safeLocations.getter(v430);
        v432 = sub_1003F41D4(v431, &v984);
        swift_bridgeObjectRelease(v431);
        v433 = sub_1000314F8(v432, (uint64_t (*)(void))sub_100070284, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPSafeLocation);
        v434 = FMIPItem.identifier.getter(v433);
        v436 = v435;
        if ((swift_isUniquelyReferenced_nonNull_native(v418) & 1) == 0)
          v418 = sub_100070178(0, v418[2] + 1, 1, v418);
        v438 = v418[2];
        v437 = v418[3];
        if (v438 >= v437 >> 1)
          v418 = sub_100070178((_QWORD *)(v437 > 1), v438 + 1, 1, v418);
        v418[2] = v438 + 1;
        v439 = &v418[2 * v438];
        v439[4] = v434;
        v439[5] = v436;
        v427 = v981;
        v335 = v982;
        v428 = v976;
        (*(void (**)(_QWORD, NSObject *))(v982 + 8))(v976, v981);
        v424 += v425;
        --v422;
      }
      while (v422);
      v888 = v429;
      v440 = swift_bridgeObjectRelease(v915);
      v342 = v967;
      v416 = v962;
      v419 = v947;
      v365 = v971;
    }
    else
    {
      v440 = swift_bridgeObjectRelease(v421);
      v418 = _swiftEmptyArrayStorage;
    }
    (*(void (**)(char *, uint64_t, __n128))(v419 + 8))(v918, v416, v440);
    v415 = v984;
  }
  v441 = (int)v907;
  v442 = (int)v910;
  v443 = v923;
  object = v941;
  v445 = v969;
  v969[4] = v418;
  *(_QWORD *)((char *)v445 + v975[38]) = v415;
  if (((v442 | v441 | v443) & 1) != 0)
  {
    swift_bridgeObjectRetain(v418);
    swift_bridgeObjectRetain(v415);
    swift_bridgeObjectRelease(object);
    *(_QWORD *)&v985 = 0;
    *((_QWORD *)&v985 + 1) = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease(*((_QWORD *)&v985 + 1));
    v446 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v447._countAndFlagsBits = 0xD00000000000001DLL;
    v989._countAndFlagsBits = 0xD00000000000002FLL;
    v989._object = (void *)0x80000001004BBAB0;
    v447._object = (void *)0x80000001004BBA90;
    v448._countAndFlagsBits = 0;
    v448._object = (void *)0xE000000000000000;
    v449 = NSLocalizedString(_:tableName:bundle:value:comment:)(v447, (Swift::String_optional)0, (NSBundle)v446, v448, v989);
    countAndFlagsBits = v449._countAndFlagsBits;
    object = v449._object;

  }
  else
  {
    swift_bridgeObjectRetain(v418);
    swift_bridgeObjectRetain(v415);
    countAndFlagsBits = (uint64_t)v924;
  }
  v452 = v969;
  v453 = (_QWORD *)((char *)v969 + v975[14]);
  *v453 = countAndFlagsBits;
  v453[1] = (uint64_t)object;
  v454 = FMIPDevice.identifier.getter(v451);
  *v452 = v454;
  v452[1] = v455;
  v456 = FMIPDevice.baIdentifier.getter(v454);
  v452[2] = v456;
  v452[3] = v457;
  FMIPDevice.status.getter(v456);
  v458 = v945;
  (*((void (**)(char *, _QWORD, uint64_t))v944 + 13))(v943, enum case for FMIPDeviceStatus.online(_:), v945);
  v459 = sub_100008000(&qword_1005DB618, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPDeviceStatus, (uint64_t)&protocol conformance descriptor for FMIPDeviceStatus);
  dispatch thunk of RawRepresentable.rawValue.getter(&v985, v458, v459);
  dispatch thunk of RawRepresentable.rawValue.getter(&v983, v458, v459);
  v460 = *((_QWORD *)&v985 + 1);
  v461 = *((_QWORD *)&v983 + 1);
  if (v985 == v983)
  {
    v462 = 1;
    v461 = *((_QWORD *)&v985 + 1);
  }
  else
  {
    v462 = _stringCompareWithSmolCheck(_:_:expecting:)(v985, *((_QWORD *)&v985 + 1), v983, *((_QWORD *)&v983 + 1), 0);
  }
  v463 = v917;
  v464 = v908;
  swift_bridgeObjectRelease(v460);
  v465 = swift_bridgeObjectRelease(v461);
  v466 = (void (*)(char *, uint64_t, __n128))*((_QWORD *)v944 + 1);
  v467 = v945;
  v466(v943, v945, v465);
  v468 = ((uint64_t (*)(char *, uint64_t))v466)(v942, v467);
  v469 = v969;
  *((_BYTE *)v969 + v975[15]) = v462 & 1;
  if ((v972 & 1) != 0)
  {
    v470 = v881;
    sub_100007464((uint64_t)v973, v881, (uint64_t *)&unk_1005D3AA0);
    v471 = v981;
    v472 = ((uint64_t (*)(uint64_t, uint64_t, NSObject *))v964)(v470, 1, v981);
    v473 = v974;
    if ((_DWORD)v472 == 1)
    {
      sub_1000051EC(v470, (uint64_t *)&unk_1005D3AA0);
      v474 = type metadata accessor for FMIPAddress(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v474 - 8) + 56))(v953, 1, 1, v474);
    }
    else
    {
      FMIPItem.address.getter(v472);
      (*(void (**)(uint64_t, NSObject *))(v335 + 8))(v470, v471);
    }
  }
  else
  {
    FMIPDevice.address.getter(v468);
    v473 = v974;
    v471 = v981;
  }
  My = type metadata accessor for Feature.FindMy(0);
  *((_QWORD *)&v986 + 1) = My;
  v987 = sub_100008000((unint64_t *)&qword_1005D9690, (uint64_t (*)(uint64_t))&type metadata accessor for Feature.FindMy, (uint64_t)&protocol conformance descriptor for Feature.FindMy);
  v476 = sub_10003D370(&v985);
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(My - 8) + 104))(v476, enum case for Feature.FindMy.baAirpodsMultipartUI(_:), My);
  v477 = isFeatureEnabled(_:)(&v985);
  sub_100029574(&v985);
  if (v464)
  {
    swift_bridgeObjectRelease(v959);
    swift_bridgeObjectRelease(v418);
    v478 = sub_10020D508(v953, v963, 1, 0);
    v479 = v975;
    v480 = (_QWORD *)((char *)v469 + v975[16]);
    *v480 = v478;
    v480[1] = v481;
    v482 = (_QWORD *)((char *)v469 + v479[17]);
    *v482 = (uint64_t)v914;
    v483 = (uint64_t)v906;
    v484 = (unint64_t)v922;
LABEL_224:
    v592 = (uint64_t)v973;
    goto LABEL_225;
  }
  v485 = ((uint64_t (*)(char *, NSObject *, uint64_t))v965)(v463, v342, v473);
  if ((v477 & 1) == 0)
  {
    ((void (*)(char *, uint64_t))v970)(v463, v473);
    goto LABEL_171;
  }
  v486 = FMIPDevice.shouldDisplaySeparatedLocation.getter(v485);
  v487 = ((uint64_t (*)(char *, uint64_t))v970)(v463, v473);
  if ((v486 & 1) == 0)
  {
LABEL_171:
    swift_bridgeObjectRelease(v959);
    swift_bridgeObjectRelease(v418);
    v479 = v975;
    v493 = (_QWORD *)((char *)v469 + v975[16]);
    v494 = v922;
    *v493 = v914;
    v493[1] = v494;
LABEL_223:
    v482 = (_QWORD *)((char *)v469 + v479[17]);
    *v482 = 0;
    v484 = 0xE000000000000000;
    v483 = (uint64_t)v906;
    goto LABEL_224;
  }
  v488 = (uint64_t)v848;
  FMIPDevice.itemGroup.getter(v487);
  v489 = v962;
  v490 = v956((char *)v488, 1, v962);
  if ((_DWORD)v490 == 1)
  {
    sub_1000051EC(v488, &qword_1005D72D0);
    v491 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, NSObject *))(v335 + 56);
    v492 = v491(v876, 1, 1, v471);
  }
  else
  {
    v495 = FMIPItemGroup.items.getter(v490);
    v496 = v488;
    v497 = (char *)v495;
    (*(void (**)(uint64_t, uint64_t))(v947 + 8))(v496, v489);
    v498 = *((_QWORD *)v497 + 2);
    if (v498)
    {
      v499 = &v497[(*(unsigned __int8 *)(v335 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v335 + 80)];
      LODWORD(v976) = enum case for FMIPPartType.leftBud(_:);
      v500 = v471;
      v944 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, NSObject *))(v335 + 72);
      v945 = *(_QWORD *)(v335 + 16);
      v943 = v497;
      v501 = swift_bridgeObjectRetain(v497);
      v502 = v840;
      v503 = v871;
      v505 = v979;
      v504 = v980;
      while (1)
      {
        v506 = ((uint64_t (*)(char *, char *, NSObject *, __n128))v945)(v503, v499, v500, v501);
        FMIPItem.partType.getter(v506);
        v507 = v869;
        ((void (*)(char *, _QWORD, id))v505[13])(v869, v976, v504);
        v508 = sub_100008000((unint64_t *)&unk_1005E3AF0, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPartType, (uint64_t)&protocol conformance descriptor for FMIPPartType);
        dispatch thunk of RawRepresentable.rawValue.getter(&v985, v504, v508);
        dispatch thunk of RawRepresentable.rawValue.getter(&v983, v504, v508);
        v509 = *((_QWORD *)&v985 + 1);
        v510 = *((_QWORD *)&v983 + 1);
        if ((_QWORD)v985 == (_QWORD)v983 && *((_QWORD *)&v985 + 1) == *((_QWORD *)&v983 + 1))
          break;
        v512 = _stringCompareWithSmolCheck(_:_:expecting:)(v985, *((_QWORD *)&v985 + 1), v983, *((_QWORD *)&v983 + 1), 0);
        swift_bridgeObjectRelease(v509);
        v513 = swift_bridgeObjectRelease(v510);
        v514 = v505[1];
        ((void (*)(char *, id, __n128))v514)(v507, v504, v513);
        v514(v502, v504);
        if ((v512 & 1) != 0)
          goto LABEL_184;
        v500 = v981;
        v335 = v982;
        v503 = v871;
        (*(void (**)(char *, NSObject *))(v982 + 8))(v871, v981);
        v499 = (char *)v944 + (_QWORD)v499;
        if (!--v498)
        {
          v497 = v943;
          swift_bridgeObjectRelease(v943);
          v469 = v969;
          v471 = v500;
          v365 = v971;
          goto LABEL_182;
        }
      }
      swift_bridgeObjectRelease_n(*((_QWORD *)&v985 + 1), 2);
      v515 = v505[1];
      v515(v507, v504);
      v515(v502, v504);
LABEL_184:
      v516 = v943;
      v517 = swift_bridgeObjectRelease(v943);
      v471 = v981;
      v335 = v982;
      v518 = v876;
      (*(void (**)(uint64_t, char *, NSObject *, __n128))(v982 + 32))(v876, v871, v981, v517);
      v491 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, NSObject *))(v335 + 56);
      v491(v518, 0, 1, v471);
      swift_bridgeObjectRelease(v516);
      v469 = v969;
      v365 = v971;
    }
    else
    {
LABEL_182:
      v491 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, NSObject *))(v335 + 56);
      v491(v876, 1, 1, v471);
      swift_bridgeObjectRelease(v497);
    }
  }
  v519 = v849;
  FMIPDevice.itemGroup.getter(v492);
  v520 = (uint64_t)v519;
  v521 = v519;
  v522 = v962;
  v523 = v956(v521, 1, v962);
  v524 = v867;
  if ((_DWORD)v523 == 1)
  {
    swift_bridgeObjectRelease(v959);
    swift_bridgeObjectRelease(v418);
    sub_1000051EC(v520, &qword_1005D72D0);
    v491(v875, 1, 1, v471);
LABEL_197:
    v544 = v858;
    goto LABEL_200;
  }
  v525 = FMIPItemGroup.items.getter(v523);
  v526 = v520;
  v527 = (char *)v525;
  (*(void (**)(uint64_t, uint64_t))(v947 + 8))(v526, v522);
  v528 = *((_QWORD *)v527 + 2);
  if (!v528)
  {
LABEL_196:
    v491(v875, 1, 1, v471);
    swift_bridgeObjectRelease(v959);
    swift_bridgeObjectRelease(v418);
    swift_bridgeObjectRelease(v527);
    goto LABEL_197;
  }
  v944 = v491;
  v529 = &v527[(*(unsigned __int8 *)(v335 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v335 + 80)];
  LODWORD(v976) = enum case for FMIPPartType.rightBud(_:);
  v945 = *(_QWORD *)(v335 + 72);
  v947 = *(_QWORD *)(v335 + 16);
  v943 = v527;
  v530 = swift_bridgeObjectRetain(v527);
  v531 = v841;
  v532 = v872;
  v533 = v979;
  v534 = v870;
  while (1)
  {
    v535 = ((uint64_t (*)(char *, char *, NSObject *, __n128))v947)(v532, v529, v471, v530);
    FMIPItem.partType.getter(v535);
    v536 = v980;
    ((void (*)(char *, _QWORD, id))v533[13])(v534, v976, v980);
    v537 = sub_100008000((unint64_t *)&unk_1005E3AF0, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPartType, (uint64_t)&protocol conformance descriptor for FMIPPartType);
    dispatch thunk of RawRepresentable.rawValue.getter(&v985, v536, v537);
    dispatch thunk of RawRepresentable.rawValue.getter(&v983, v536, v537);
    v538 = *((_QWORD *)&v985 + 1);
    v539 = *((_QWORD *)&v983 + 1);
    if ((_QWORD)v985 == (_QWORD)v983 && *((_QWORD *)&v985 + 1) == *((_QWORD *)&v983 + 1))
      break;
    v541 = _stringCompareWithSmolCheck(_:_:expecting:)(v985, *((_QWORD *)&v985 + 1), v983, *((_QWORD *)&v983 + 1), 0);
    swift_bridgeObjectRelease(v538);
    v542 = swift_bridgeObjectRelease(v539);
    v543 = v533[1];
    ((void (*)(char *, id, __n128))v543)(v534, v536, v542);
    v543(v531, v536);
    if ((v541 & 1) != 0)
      goto LABEL_199;
    v471 = v981;
    v335 = v982;
    v532 = v872;
    (*(void (**)(char *, NSObject *))(v982 + 8))(v872, v981);
    v529 += v945;
    if (!--v528)
    {
      v527 = v943;
      swift_bridgeObjectRelease(v943);
      v469 = v969;
      v524 = v867;
      v365 = v971;
      v491 = v944;
      goto LABEL_196;
    }
  }
  swift_bridgeObjectRelease_n(*((_QWORD *)&v985 + 1), 2);
  v545 = v533[1];
  v545(v534, v536);
  v545(v531, v536);
LABEL_199:
  v546 = v943;
  v547 = swift_bridgeObjectRelease(v943);
  v471 = v981;
  v335 = v982;
  v548 = v875;
  (*(void (**)(uint64_t, char *, NSObject *, __n128))(v982 + 32))(v875, v872, v981, v547);
  v944(v548, 0, 1, v471);
  swift_bridgeObjectRelease(v959);
  swift_bridgeObjectRelease(v418);
  swift_bridgeObjectRelease(v546);
  v469 = v969;
  v544 = v858;
  v524 = v867;
  v365 = v971;
LABEL_200:
  v549 = v850;
  sub_100007464(v876, v850, (uint64_t *)&unk_1005D3AA0);
  v550 = ((uint64_t (*)(uint64_t, uint64_t, NSObject *))v964)(v549, 1, v471);
  v552 = (uint64_t)v855;
  v553 = (uint64_t)v854;
  if (v550 == 1)
  {
    sub_1000051EC(v549, (uint64_t *)&unk_1005D3AA0);
    v554 = 1;
    v555 = (uint64_t)v857;
  }
  else
  {
    FMIPItem.location.getter(v551);
    (*(void (**)(uint64_t, NSObject *))(v335 + 8))(v549, v471);
    v556 = v978;
    v557 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v977)(v552, 1, v978);
    if ((_DWORD)v557 == 1)
    {
      sub_1000051EC(v552, (uint64_t *)&unk_1005D6700);
      v554 = 1;
    }
    else
    {
      v558 = FMIPLocation.location.getter(v557);
      v559 = v552;
      v560 = (void *)v558;
      (*((void (**)(uint64_t, uint64_t))v925 + 1))(v559, v556);
      v561 = objc_msgSend(v560, "timestamp");

      static Date._unconditionallyBridgeFromObjectiveC(_:)(v561);
      v554 = 0;
    }
    v555 = (uint64_t)v857;
    v365 = v971;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v365)(v524, v554, 1, v960);
  v562 = v852;
  sub_100007464(v876, v852, (uint64_t *)&unk_1005D3AA0);
  if (((unsigned int (*)(uint64_t, uint64_t, NSObject *))v964)(v562, 1, v471) == 1)
  {
    sub_1000051EC(v562, (uint64_t *)&unk_1005D3AA0);
    (*((void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v925 + 7))(v555, 1, 1, v978);
  }
  else
  {
    FMIPItem.location.getter(v563);
    v555 = (uint64_t)v857;
    (*(void (**)(uint64_t, NSObject *))(v335 + 8))(v562, v471);
  }
  v564 = sub_1003F45A4(v555);
  sub_1000051EC(v555, (uint64_t *)&unk_1005D6700);
  *((_BYTE *)v469 + v851) = v564 & 1;
  v565 = v853;
  sub_100007464(v875, v853, (uint64_t *)&unk_1005D3AA0);
  if (((unsigned int (*)(uint64_t, uint64_t, NSObject *))v964)(v565, 1, v471) == 1)
  {
    sub_1000051EC(v565, (uint64_t *)&unk_1005D3AA0);
    v567 = 1;
    v568 = (uint64_t)v846;
  }
  else
  {
    v569 = (uint64_t)v843;
    FMIPItem.location.getter(v566);
    (*(void (**)(uint64_t, NSObject *))(v335 + 8))(v565, v471);
    v570 = v978;
    v571 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v977)(v569, 1, v978);
    if ((_DWORD)v571 == 1)
    {
      sub_1000051EC(v569, (uint64_t *)&unk_1005D6700);
      v567 = 1;
    }
    else
    {
      v572 = FMIPLocation.location.getter(v571);
      v573 = v569;
      v574 = (void *)v572;
      (*((void (**)(uint64_t, uint64_t))v925 + 1))(v573, v570);
      v575 = objc_msgSend(v574, "timestamp");

      static Date._unconditionallyBridgeFromObjectiveC(_:)(v575);
      v567 = 0;
    }
    v568 = (uint64_t)v846;
    v365 = v971;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v365)(v868, v567, 1, v960);
  sub_100007464(v875, v553, (uint64_t *)&unk_1005D3AA0);
  if (((unsigned int (*)(uint64_t, uint64_t, NSObject *))v964)(v553, 1, v471) == 1)
  {
    sub_1000051EC(v553, (uint64_t *)&unk_1005D3AA0);
    (*((void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v925 + 7))(v568, 1, 1, v978);
  }
  else
  {
    FMIPItem.location.getter(v576);
    (*(void (**)(uint64_t, NSObject *))(v335 + 8))(v553, v471);
  }
  v577 = v847;
  v578 = sub_1003F45A4(v568);
  v579 = v568;
  v580 = v578;
  sub_1000051EC(v579, (uint64_t *)&unk_1005D6700);
  *((_BYTE *)v469 + v577) = v580 & 1;
  v581 = v856;
  sub_100007464(v524, v856, (uint64_t *)&unk_1005D3320);
  v582 = v946;
  v583 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v946 + 48);
  v584 = v960;
  v585 = v583(v581, 1, v960);
  v342 = v967;
  if (v585 == 1)
  {
    v586 = v581;
LABEL_222:
    v590 = v922;
    sub_1000051EC(v586, (uint64_t *)&unk_1005D3320);
    v479 = v975;
    v591 = (_QWORD *)((char *)v469 + v975[16]);
    *v591 = v914;
    v591[1] = v590;
    sub_1000051EC(v868, (uint64_t *)&unk_1005D3320);
    sub_1000051EC(v867, (uint64_t *)&unk_1005D3320);
    sub_1000051EC(v875, (uint64_t *)&unk_1005D3AA0);
    sub_1000051EC(v876, (uint64_t *)&unk_1005D3AA0);
    goto LABEL_223;
  }
  v587 = v581;
  v588 = *(void (**)(char *, uint64_t, uint64_t))(v582 + 32);
  v588(v544, v587, v584);
  v589 = v844;
  sub_100007464(v868, v844, (uint64_t *)&unk_1005D3320);
  if (v583(v589, 1, v584) == 1)
  {
    (*(void (**)(char *, uint64_t))(v582 + 8))(v544, v584);
    v586 = v589;
    v342 = v967;
    goto LABEL_222;
  }
  v792 = swift_bridgeObjectRelease(v922);
  ((void (*)(char *, uint64_t, uint64_t, __n128))v588)(v842, v589, v584, v792);
  v980 = (id)objc_opt_self(NSBundle);
  v793 = objc_msgSend(v980, "mainBundle");
  v990._countAndFlagsBits = 0xD00000000000001BLL;
  v794._countAndFlagsBits = 0xD000000000000024;
  v979 = (uint64_t (**)(char *, id))"Localizable-MOONDRAGON";
  v990._object = (void *)0x80000001004A91F0;
  v794._object = (void *)0x80000001004C58D0;
  v795.value._object = (void *)0x80000001004A91D0;
  v795.value._countAndFlagsBits = 0xD000000000000016;
  v796._countAndFlagsBits = 0;
  v796._object = (void *)0xE000000000000000;
  v797 = NSLocalizedString(_:tableName:bundle:value:comment:)(v794, v795, (NSBundle)v793, v796, v990);

  v798 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
  v799 = swift_allocObject(v798, 72, 7);
  v976 = xmmword_100481740;
  *(_OWORD *)(v799 + 16) = xmmword_100481740;
  v800 = (void *)qword_1005F5ED0;
  if (qword_1005F5ED0)
  {
    v801 = (id)qword_1005F5ED0;
  }
  else
  {
    v802 = objc_msgSend(objc_allocWithZone((Class)FMRelativeDateFormatter), "init");
    objc_msgSend(v802, "setFormattingContext:", 2);
    v803 = (void *)qword_1005F5ED0;
    qword_1005F5ED0 = (uint64_t)v802;
    v801 = v802;

    v800 = 0;
  }
  v804 = v800;
  isa = Date._bridgeToObjectiveC()().super.isa;
  v806 = objc_msgSend(v801, "stringFromDate:", isa);

  v807 = static String._unconditionallyBridgeFromObjectiveC(_:)(v806);
  v809 = v808;

  *(_QWORD *)(v799 + 56) = &type metadata for String;
  v810 = sub_100071E88();
  *(_QWORD *)(v799 + 64) = v810;
  *(_QWORD *)(v799 + 32) = v807;
  *(_QWORD *)(v799 + 40) = v809;
  v811 = String.init(format:_:)(v797._countAndFlagsBits, v797._object, v799);
  v813 = v812;
  *(_QWORD *)&v814 = swift_bridgeObjectRelease(v797._object).n128_u64[0];
  v815 = (_QWORD *)((char *)v969 + v975[16]);
  *v815 = v811;
  v815[1] = v813;
  v816 = objc_msgSend(v980, "mainBundle", v814);
  v991._countAndFlagsBits = 0xD00000000000001BLL;
  v817._countAndFlagsBits = 0xD000000000000025;
  v991._object = (void *)((unint64_t)v979 | 0x8000000000000000);
  v817._object = (void *)0x80000001004C5900;
  v818.value._object = (void *)0x80000001004A91D0;
  v818.value._countAndFlagsBits = 0xD000000000000016;
  v819._countAndFlagsBits = 0;
  v819._object = (void *)0xE000000000000000;
  v820 = NSLocalizedString(_:tableName:bundle:value:comment:)(v817, v818, (NSBundle)v816, v819, v991);

  v821 = swift_allocObject(v798, 72, 7);
  *(_OWORD *)(v821 + 16) = v976;
  v822 = (void *)qword_1005F5ED0;
  if (qword_1005F5ED0)
  {
    v823 = (id)qword_1005F5ED0;
  }
  else
  {
    v824 = objc_msgSend(objc_allocWithZone((Class)FMRelativeDateFormatter), "init");
    objc_msgSend(v824, "setFormattingContext:", 2);
    v825 = (void *)qword_1005F5ED0;
    qword_1005F5ED0 = (uint64_t)v824;
    v823 = v824;

    v822 = 0;
  }
  v342 = v967;
  v826 = v946;
  v827 = v822;
  v828 = v842;
  v829 = Date._bridgeToObjectiveC()().super.isa;
  v830 = objc_msgSend(v823, "stringFromDate:", v829);

  v831 = static String._unconditionallyBridgeFromObjectiveC(_:)(v830);
  v833 = v832;

  *(_QWORD *)(v821 + 56) = &type metadata for String;
  *(_QWORD *)(v821 + 64) = v810;
  *(_QWORD *)(v821 + 32) = v831;
  *(_QWORD *)(v821 + 40) = v833;
  v834 = String.init(format:_:)(v820._countAndFlagsBits, v820._object, v821);
  v836 = v835;
  v837 = swift_bridgeObjectRelease(v820._object);
  v838 = *(void (**)(char *, uint64_t, __n128))(v826 + 8);
  v839 = v960;
  v838(v828, v960, v837);
  ((void (*)(char *, uint64_t))v838)(v858, v839);
  sub_1000051EC(v868, (uint64_t *)&unk_1005D3320);
  sub_1000051EC(v867, (uint64_t *)&unk_1005D3320);
  sub_1000051EC(v875, (uint64_t *)&unk_1005D3AA0);
  sub_1000051EC(v876, (uint64_t *)&unk_1005D3AA0);
  v479 = v975;
  v469 = v969;
  v482 = (_QWORD *)((char *)v969 + v975[17]);
  *v482 = v834;
  v484 = v836;
  v592 = (uint64_t)v973;
  v335 = v982;
  v483 = (uint64_t)v906;
  v365 = v971;
LABEL_225:
  v482[1] = v484;
  sub_100007464(v592, (uint64_t)v469 + v479[9], (uint64_t *)&unk_1005D3AA0);
  v593 = v932;
  v469[6] = v932;
  swift_bridgeObjectRetain(v593);
  v595 = FMIPDevice.shouldDisplaySeparatedLocation.getter(v594);
  v596 = sub_100211A8C((uint64_t)v342, v592, v593, v595 & 1);
  v598 = v597;
  swift_bridgeObjectRelease(v593);
  v599 = (_QWORD *)((char *)v469 + v479[18]);
  *v599 = v596;
  v599[1] = v598;
  v600 = v927;
  sub_100007464(v957, v927, (uint64_t *)&unk_1005D3320);
  v601 = v946;
  v602 = v960;
  v980 = *(id *)(v946 + 48);
  v603 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v980)(v600, 1, v960);
  v604 = v920;
  if ((_DWORD)v603 == 1)
  {
    static Date.distantFuture.getter(v603);
    sub_1000051EC(v600, (uint64_t *)&unk_1005D3320);
    v605 = *(const char **)(v601 + 32);
  }
  else
  {
    v606 = v600;
    v605 = *(const char **)(v601 + 32);
    ((void (*)(char *, uint64_t, uint64_t))v605)(v920, v606, v602);
  }
  v607 = v981;
  v608 = (uint64_t)v469 + v975[19];
  v979 = (uint64_t (**)(char *, id))v605;
  ((void (*)(uint64_t, char *, uint64_t))v605)(v608, v604, v602);
  sub_100007464((uint64_t)v973, v483, (uint64_t *)&unk_1005D3AA0);
  v609 = ((uint64_t (*)(uint64_t, uint64_t, NSObject *))v964)(v483, 1, v607);
  if (v609 == 1)
  {
    v610 = sub_1000051EC(v483, (uint64_t *)&unk_1005D3AA0);
    v611 = 0;
    v612 = 0;
  }
  else
  {
    v613 = v919;
    (*(void (**)(uint64_t, uint64_t, NSObject *))(v335 + 32))(v919, v483, v607);
    v612 = sub_1000CC5E4(v613);
    v614 = v966[3];
    v615 = swift_retain(v614);
    v616 = (uint64_t)v883;
    FMIPManager.rangingParameters.getter(v615);
    v617 = v934;
    if (v916(v616, 1, v934) == 1)
    {
      v618 = v885;
      FMIPRangingParameters.init()();
      sub_1000051EC(v616, &qword_1005E3AB0);
      v619 = v937;
    }
    else
    {
      v619 = v937;
      v618 = v885;
      (*(void (**)(char *, uint64_t, uint64_t))(v937 + 32))(v885, v616, v617);
    }
    v620 = swift_release(v614);
    v621 = (uint64_t)v884;
    (*(void (**)(char *, char *, uint64_t, __n128))(v619 + 16))(v884, v618, v617, v620);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v930)(v621, 0, 1, v617);
    v622 = v919;
    v611 = sub_1000CCB0C(v919, v961, v621);
    sub_1000051EC(v621, &qword_1005E3AB0);
    (*(void (**)(char *, uint64_t))(v619 + 8))(v618, v617);
    v610 = (*(uint64_t (**)(uint64_t, NSObject *))(v335 + 8))(v622, v981);
    v365 = v971;
  }
  v623 = v935 ^ 1;
  v624 = v609 == 1;
  v625 = FMIPDevice.batteryLevel.getter(v610);
  v626 = v975;
  v627 = v969;
  *(double *)((char *)v969 + v975[20]) = v625;
  v628 = (uint64_t)v627 + v626[10];
  *(_QWORD *)v628 = v612;
  *(_BYTE *)(v628 + 8) = v624;
  v629 = (uint64_t)v627 + v626[11];
  *(_QWORD *)v629 = v611;
  v630 = v627;
  *(_BYTE *)(v629 + 8) = v624;
  FMIPDevice.batteryStatus.getter(v631);
  *(_QWORD *)((char *)v630 + v626[22]) = v968;
  *((_BYTE *)v630 + v626[24]) = sub_1003DC514(v342, v966);
  *(_QWORD *)((char *)v630 + v626[23]) = sub_1003F50E4((uint64_t)v342);
  if ((v972 & 1) != 0)
    v632 = sub_1003F45A4(v963);
  else
    v632 = sub_1003F61A4();
  *((_BYTE *)v630 + v626[25]) = v632 & 1;
  *((_BYTE *)v630 + v626[29]) = v623 & 1;
  v633 = v948;
  v634 = FMIPDevice.state.getter(v632);
  v635 = v949;
  static FMIPDeviceState.isLowPowerModeEnabled.getter(v634);
  v636 = v950;
  v637 = dispatch thunk of SetAlgebra.isSuperset(of:)(v635, v950, v954);
  v638 = v635;
  v639 = v975;
  v640 = (uint64_t (*)(char *, uint64_t))v955;
  ((void (*)(char *, uint64_t))v955)(v638, v636);
  v641 = v640(v633, v636);
  *((_BYTE *)v630 + v639[31]) = v637 & 1;
  v642 = FMIPDevice.category.getter(v641);
  v644 = v643;
  if (v642 == 0x6863746157 && v643 == 0xE500000000000000)
  {
    v645 = swift_bridgeObjectRelease(0xE500000000000000);
    v646 = 1;
  }
  else
  {
    v646 = _stringCompareWithSmolCheck(_:_:expecting:)(v642, v643, 0x6863746157, 0xE500000000000000, 0);
    v645 = swift_bridgeObjectRelease(v644);
  }
  v647 = v963;
  v648 = (void (*)(char *, uint64_t))v970;
  v649 = v960;
  *((_BYTE *)v630 + v639[30]) = v646 & 1;
  v650 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))v977)(v647, 1, v978, v645);
  *((_BYTE *)v630 + v639[32]) = (_DWORD)v650 != 1;
  v651 = v928;
  FMIPDevice.lockMetadata.getter(v650);
  v652 = (uint64_t)v651;
  v653 = type metadata accessor for FMIPLockMetadata(0);
  v654 = *(_QWORD *)(v653 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v654 + 48))(v652, 1, v653) == 1)
  {
    sub_1000051EC(v652, (uint64_t *)&unk_1005E3AA0);
    v655 = 1;
    v656 = v933;
  }
  else
  {
    v656 = v933;
    FMIPLockMetadata.timestamp.getter();
    (*(void (**)(uint64_t, uint64_t))(v654 + 8))(v652, v653);
    v655 = 0;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v365)(v656, v655, 1, v649);
  v657 = v926;
  v658 = v974;
  v659 = v965;
  ((void (*)(char *, NSObject *, uint64_t))v965)(v926, v342, v974);
  v660 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v980)(v656, 1, v649);
  if ((_DWORD)v660 == 1)
  {
    v661 = (uint64_t)v886;
    v662 = v657;
    FMIPDevice.lostMetadata.getter(v660);
    v663 = type metadata accessor for FMIPDeviceLostModeMetadata(0);
    v664 = *(_QWORD *)(v663 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v664 + 48))(v661, 1, v663) == 1)
    {
      v665 = v974;
      v648(v657, v974);
      sub_1000051EC(v661, &qword_1005DBA58);
      v666 = 1;
      v667 = (uint64_t)v973;
      v668 = (uint64_t)v921;
    }
    else
    {
      v670 = v921;
      FMIPDeviceLostModeMetadata.timestamp.getter();
      v668 = (uint64_t)v670;
      v665 = v974;
      v648(v662, v974);
      (*(void (**)(uint64_t, uint64_t))(v664 + 8))(v661, v663);
      v666 = 0;
      v667 = (uint64_t)v973;
    }
    v669 = v975;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v971)(v668, v666, 1, v649);
    sub_1000051EC(v933, (uint64_t *)&unk_1005D3320);
    v659 = v965;
  }
  else
  {
    v648(v657, v658);
    v668 = (uint64_t)v921;
    ((void (*)(char *, uint64_t, uint64_t))v979)(v921, v656, v649);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v365)(v668, 0, 1, v649);
    v665 = v658;
    v667 = (uint64_t)v973;
    v669 = v975;
  }
  v671 = (uint64_t)v931;
  v672 = sub_10005DAA0(v668, (uint64_t)v630 + v669[33], (uint64_t *)&unk_1005D3320);
  *((_BYTE *)v630 + v669[36]) = FMIPDevice.shouldDisplaySeparatedLocation.getter(v672) & 1;
  v673 = v936;
  sub_100007464(v667, v936, (uint64_t *)&unk_1005D3AA0);
  v674 = ((uint64_t (*)(uint64_t, NSObject *, uint64_t))v659)(v671, v342, v665);
  v675 = (uint64_t)v929;
  if ((v972 & 1) != 0)
  {
    v676 = v882;
    sub_100007464(v673, v882, (uint64_t *)&unk_1005D3AA0);
    v677 = v981;
    v678 = ((uint64_t (*)(uint64_t, uint64_t, NSObject *))v964)(v676, 1, v981);
    if ((_DWORD)v678 == 1)
    {
      v648((char *)v671, v665);
      sub_1000051EC(v673, (uint64_t *)&unk_1005D3AA0);
      v679 = 0;
      goto LABEL_256;
    }
    v682 = v893;
    FMIPItem.state.getter(v678);
    v683 = (*(uint64_t (**)(uint64_t, NSObject *))(v982 + 8))(v676, v677);
    v671 = (uint64_t)v894;
    static FMIPItemState.isLocating.getter(v683);
    v684 = sub_100008000((unint64_t *)&qword_1005E2280, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItemState, (uint64_t)&protocol conformance descriptor for FMIPItemState);
    v685 = v896;
    v679 = dispatch thunk of SetAlgebra.isSuperset(of:)(v671, v896, v684);
    v686 = *(void (**)(uint64_t, uint64_t))(v895 + 8);
    v686(v671, v685);
    v687 = v682;
    v648 = (void (*)(char *, uint64_t))v970;
    v686((uint64_t)v687, v685);
    v676 = v936;
    v681 = v931;
  }
  else
  {
    v680 = FMIPDevice.isLocating.getter(v674);
    v676 = v936;
    v679 = v680;
    v681 = (char *)v671;
  }
  v648(v681, v665);
LABEL_256:
  sub_1000051EC(v676, (uint64_t *)&unk_1005D3AA0);
  *((_BYTE *)v630 + v669[28]) = v679 & 1;
  sub_100007464(v963, v675, (uint64_t *)&unk_1005D6700);
  v688 = v978;
  v689 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v977)(v675, 1, v978);
  if ((_DWORD)v689 != 1)
  {
    v691 = FMIPLocation.location.getter(v689);
    v692 = v688;
    v693 = (void *)v691;
    (*((void (**)(uint64_t, uint64_t))v925 + 1))(v675, v692);
    objc_msgSend(v693, "horizontalAccuracy");
    v690 = v694;

    if ((~*(_QWORD *)&v690 & 0x7FF0000000000000) != 0)
    {
      if (v690 <= -9.22337204e18)
      {
        __break(1u);
      }
      else if (v690 < 9.22337204e18)
      {
        goto LABEL_261;
      }
      __break(1u);
    }
    __break(1u);
LABEL_296:
    swift_once(&qword_1005D1DE8, sub_100005ADC);
    goto LABEL_272;
  }
  sub_1000051EC(v675, (uint64_t *)&unk_1005D6700);
  v690 = 0.0;
LABEL_261:
  v695 = v901;
  v696 = v900;
  v697 = v902;
  (*(void (**)(char *, _QWORD, uint64_t))(v901 + 104))(v900, enum case for FMIPConfigValue.inaccuracyRadiusThreshold(_:), v902);
  *(_QWORD *)&v983 = 0x7FFFFFFFFFFFFFFFLL;
  FMIPGlobalConfig<A>(_:fallback:)(&v985, v696, &v983, &type metadata for Int);
  v698 = (*(uint64_t (**)(char *, uint64_t))(v695 + 8))(v696, v697);
  *((_BYTE *)v630 + v669[34]) = (uint64_t)v985 < (uint64_t)v690;
  v699 = FMIPDevice.ownerIdentifier.getter(v698);
  v701 = v700;
  v704 = FMIPDefaultOwnerIdentifier.getter(v702);
  v705 = v703;
  if (v699 == v704 && v701 == v703)
  {
    v706 = swift_bridgeObjectRelease_n(v701, 2);
    v707 = 0;
  }
  else
  {
    v708 = _stringCompareWithSmolCheck(_:_:expecting:)(v699, v701, v704, v703, 0);
    swift_bridgeObjectRelease(v701);
    swift_bridgeObjectRelease(v705);
    v707 = v708 ^ 1;
  }
  v709 = v903;
  *((_BYTE *)v630 + v669[35]) = v707 & 1;
  v710 = (uint64_t)v899;
  FMIPDevice.itemGroup.getter(v706);
  v711 = v956((char *)v710, 1, v962) != 1;
  sub_1000051EC(v710, &qword_1005D72D0);
  *((_BYTE *)v630 + v669[37]) = v711;
  v712 = v898;
  v713 = v965;
  ((void (*)(char *, NSObject *, uint64_t))v965)(v898, v342, v665);
  if ((v968 & 0x2000) == 0)
  {
    v648(v712, v665);
    v715 = ((uint64_t (*)(char *, NSObject *, uint64_t))v713)(v709, v342, v665);
    v716 = v940;
LABEL_268:
    v718 = v889;
    v719 = FMIPDevice.features.getter(v715);
    v720 = v890;
    static FMIPFeatures.isBTFindingSupported.getter(v719);
    v721 = sub_100008000((unint64_t *)&qword_1005D72F0, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPFeatures, (uint64_t)&protocol conformance descriptor for FMIPFeatures);
    v722 = v892;
    v723 = dispatch thunk of SetAlgebra.isSuperset(of:)(v720, v892, v721);
    v724 = *(void (**)(char *, uint64_t))(v891 + 8);
    v725 = v720;
    v665 = v974;
    v724(v725, v722);
    v724(v718, v722);
    goto LABEL_270;
  }
  v717 = FMIPDevice.pairingIncomplete.getter(v714);
  v648(v712, v665);
  v715 = ((uint64_t (*)(char *, NSObject *, uint64_t))v713)(v709, v342, v665);
  v716 = v940;
  if ((v717 & 1) != 0)
    goto LABEL_268;
  v723 = 1;
LABEL_270:
  v671 = (uint64_t)v973;
  v726.n128_f64[0] = ((double (*)(char *, uint64_t))v970)(v709, v665);
  *((_BYTE *)v630 + v669[39]) = v723 & 1;
  v727 = v939;
  FMIPDevice.deviceConnectedState.getter(v726);
  v728 = v938;
  ((void (*)(char *, _QWORD, uint64_t))v909)(v938, enum case for FMIPDeviceConnectedStateType.attached(_:), v716);
  v729 = static FMIPDeviceConnectedStateType.== infix(_:_:)(v727, v728);
  v730 = v728;
  v731 = (uint64_t (*)(char *, uint64_t))v911;
  v911(v730, v716);
  v732 = v731(v727, v716);
  *((_BYTE *)v630 + v669[40]) = v729 & 1;
  *((_BYTE *)v630 + v669[41]) = FMIPDevice.removePairingLockLocally.getter(v732) & 1;
  *((_BYTE *)v630 + v669[42]) = FMIPDevice.skipPasswordOnRemove.getter() & 1;
  *((_BYTE *)v630 + v669[43]) = FMIPDevice.warnLockOnUnattachedRemove.getter() & 1;
  if ((v972 & 1) == 0)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v746 = type metadata accessor for Logger(0);
    sub_100056D88(v746, (uint64_t)qword_1005F5748);
    v747 = v873;
    v748 = v965;
    ((void (*)(char *, NSObject *, uint64_t))v965)(v873, v342, v665);
    v749 = v874;
    v750 = ((uint64_t (*)(char *, NSObject *, uint64_t))v748)(v874, v342, v665);
    v751 = Logger.logObject.getter(v750);
    v752 = static os_log_type_t.default.getter(v751);
    v753 = v752;
    if (os_log_type_enabled(v751, v752))
    {
      v754 = (_DWORD *)swift_slowAlloc(14, -1);
      v981 = v751;
      v755 = v749;
      v756 = v754;
      *v754 = 67109376;
      v757 = v948;
      LODWORD(v982) = v753;
      v758 = FMIPDevice.state.getter(v754);
      v759 = v949;
      static FMIPDeviceState.isLocating.getter(v758);
      v760 = v950;
      v761 = v954;
      v762 = dispatch thunk of SetAlgebra.isSuperset(of:)(v759, v950, v954);
      v763 = (void (*)(char *, uint64_t))v955;
      ((void (*)(char *, uint64_t))v955)(v759, v760);
      v763(v757, v760);
      v764 = v747;
      v765 = (void (*)(char *, uint64_t))v970;
      ((void (*)(char *, uint64_t))v970)(v764, v974);
      LODWORD(v985) = v762 & 1;
      v766 = UnsafeMutableRawBufferPointer.copyMemory(from:)(&v985, (char *)&v985 + 4);
      *((_WORD *)v756 + 4) = 1024;
      v767 = FMIPDevice.state.getter(v766);
      static FMIPDeviceState.isCrowdsourcedLocating.getter(v767);
      v768 = v761;
      v342 = v967;
      v769 = dispatch thunk of SetAlgebra.isSuperset(of:)(v759, v760, v768);
      v763(v759, v760);
      v770 = v757;
      v771 = v765;
      v763(v770, v760);
      v772 = v755;
      v751 = v981;
      v765(v772, v974);
      LODWORD(v985) = v769 & 1;
      v671 = (uint64_t)v973;
      v665 = v974;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v985, (char *)&v985 + 4);
      _os_log_impl((void *)&_mh_execute_header, v751, (os_log_type_t)v982, "FMDeviceDetailViewModel: Locating states - device: %{BOOL}d ba: %{BOOL}d", (uint8_t *)v756, 0xEu);
      swift_slowDealloc(v756, -1, -1);
    }
    else
    {
      v771 = (void (*)(char *, uint64_t))v970;
      ((void (*)(char *, uint64_t))v970)(v749, v665);
      v771(v747, v665);
    }
    v774 = v952;
    v775 = (uint64_t)v897;
    v776 = v961;

    swift_release(v966);
    v771((char *)v342, v665);
    sub_1000051EC(v953, &qword_1005D9990);
    sub_1000051EC(v957, (uint64_t *)&unk_1005D3320);
    sub_1000051EC(v958, &qword_1005D6710);
    sub_1000051EC(v774, &qword_1005D6710);
    v773 = v775;
    goto LABEL_282;
  }
  if (qword_1005D1DE8 != -1)
    goto LABEL_296;
LABEL_272:
  v733 = type metadata accessor for Logger(0);
  sub_100056D88(v733, (uint64_t)qword_1005F5748);
  v734 = v887;
  v735 = sub_100007464(v671, v887, (uint64_t *)&unk_1005D3AA0);
  v736 = Logger.logObject.getter(v735);
  v737 = static os_log_type_t.default.getter(v736);
  v738 = os_log_type_enabled(v736, v737);
  v739 = v981;
  v740 = v982;
  if (!v738)
  {

    swift_release(v966);
    sub_1000051EC(v734, (uint64_t *)&unk_1005D3AA0);
    ((void (*)(NSObject *, uint64_t))v970)(v342, v665);
    sub_1000051EC(v953, &qword_1005D9990);
    sub_1000051EC(v957, (uint64_t *)&unk_1005D3320);
    sub_1000051EC(v958, &qword_1005D6710);
    sub_1000051EC(v952, &qword_1005D6710);
    v773 = (uint64_t)v897;
LABEL_282:
    sub_1000051EC(v773, &qword_1005E3AB8);
    v777 = (uint64_t)v951;
    v778 = v963;
    goto LABEL_285;
  }
  v741 = (uint8_t *)swift_slowAlloc(12, -1);
  v742 = swift_slowAlloc(32, -1);
  *(_QWORD *)&v985 = v742;
  *(_DWORD *)v741 = 136315138;
  v743 = v860;
  sub_100007464(v734, v860, (uint64_t *)&unk_1005D3AA0);
  v744 = ((uint64_t (*)(uint64_t, uint64_t, NSObject *))v964)(v743, 1, v739);
  if ((_DWORD)v744 == 1)
  {
    sub_1000051EC(v743, (uint64_t *)&unk_1005D3AA0);
    v745 = 2;
  }
  else
  {
    v779 = v893;
    FMIPItem.state.getter(v744);
    v780 = (*(uint64_t (**)(uint64_t, NSObject *))(v740 + 8))(v743, v739);
    v781 = v894;
    static FMIPItemState.isLocating.getter(v780);
    v782 = sub_100008000((unint64_t *)&qword_1005E2280, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItemState, (uint64_t)&protocol conformance descriptor for FMIPItemState);
    v783 = v896;
    v784 = dispatch thunk of SetAlgebra.isSuperset(of:)(v781, v896, v782);
    v785 = *(void (**)(char *, uint64_t))(v895 + 8);
    v785(v781, v783);
    v786 = v779;
    v734 = v887;
    v785(v786, v783);
    v745 = v784 & 1;
  }
  LOBYTE(v983) = v745;
  v787 = sub_100053F2C((uint64_t *)&unk_1005E3AE0);
  v788 = String.init<A>(describing:)(&v983, v787);
  v790 = v789;
  *(_QWORD *)&v983 = sub_100056DA0(v788, v789, (uint64_t *)&v985);
  UnsafeMutableRawBufferPointer.copyMemory(from:)(&v983, (char *)&v983 + 8);
  swift_bridgeObjectRelease(v790);
  sub_1000051EC(v734, (uint64_t *)&unk_1005D3AA0);
  _os_log_impl((void *)&_mh_execute_header, v736, v737, "FMDeviceDetailViewModel: Locating states - device: %s", v741, 0xCu);
  swift_arrayDestroy(v742, 1, (char *)&type metadata for Any + 8);
  swift_slowDealloc(v742, -1, -1);
  swift_slowDealloc(v741, -1, -1);

  swift_release(v966);
  ((void (*)(NSObject *, uint64_t))v970)(v342, v974);
  sub_1000051EC(v953, &qword_1005D9990);
  sub_1000051EC(v957, (uint64_t *)&unk_1005D3320);
  sub_1000051EC(v958, &qword_1005D6710);
  sub_1000051EC(v952, &qword_1005D6710);
  sub_1000051EC((uint64_t)v897, &qword_1005E3AB8);
  v778 = v963;
  v777 = (uint64_t)v951;
  v671 = (uint64_t)v973;
LABEL_285:
  sub_1000051EC(v778, (uint64_t *)&unk_1005D6700);
  sub_1000051EC(v671, (uint64_t *)&unk_1005D3AA0);
  swift_bridgeObjectRelease(v984);
  return sub_1000051EC(v777, &qword_1005D7320);
}

void sub_1003ED59C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(char *, uint64_t, uint64_t);
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  __n128 v89;
  uint64_t v90;
  unint64_t v91;
  char *v92;
  __n128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(_QWORD, _QWORD, _QWORD);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v102;
  __n128 v103;
  void (*v104)(_QWORD, _QWORD, __n128);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unsigned int (*v108)(_QWORD, _QWORD, _QWORD);
  void (*v109)(char *, uint64_t);
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  void (*v121)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v122)(_QWORD, _QWORD, _QWORD);
  uint64_t (*v123)(void (**)(uint64_t, char *), char *, uint64_t);
  void (**v124)(uint64_t, char *);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unsigned int (*v129)(_QWORD, _QWORD, _QWORD);
  void (*v130)(_QWORD, _QWORD);
  __n128 v131;
  uint64_t (*v132)(uint64_t, uint64_t, uint64_t, uint64_t);
  __n128 v133;
  int v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t (*v152)(char *, char *, uint64_t, __n128);
  __n128 v153;
  char *v154;
  char *v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t (*v159)(_QWORD, _QWORD, _QWORD);
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char v164;
  __n128 v165;
  void (*v166)(_QWORD, _QWORD, __n128);
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t (*v170)(uint64_t, uint64_t);
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  __n128 v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  unint64_t v183;
  unint64_t i;
  uint64_t v185;
  unint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  NSObject *v191;
  os_log_type_t v192;
  _BOOL4 v193;
  char *v194;
  uint8_t *v195;
  uint64_t v196;
  __n128 v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t (*v200)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  void (*v205)(char *, uint64_t);
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  void (*v211)(_QWORD, _QWORD);
  char *v212;
  __n128 v213;
  char *v214;
  uint64_t v215;
  char *v216;
  uint64_t v217;
  char *v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  unsigned int (*v223)(uint64_t, uint64_t, char *);
  uint64_t v224;
  uint64_t v225;
  __n128 v226;
  uint64_t v227;
  unint64_t v228;
  char *v229;
  uint64_t (*v230)(char *, unint64_t, uint64_t, __n128);
  __n128 v231;
  uint64_t v232;
  char *v233;
  char *v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t (*v239)(_QWORD, _QWORD, _QWORD);
  uint64_t v240;
  char v242;
  __n128 v243;
  void (*v244)(_QWORD, _QWORD, __n128);
  uint64_t v245;
  __n128 v246;
  uint64_t v247;
  uint64_t v248;
  __n128 v249;
  uint64_t v250;
  uint64_t v251;
  unint64_t v252;
  __n128 v253;
  uint64_t v254;
  char *v255;
  uint64_t (*v256)(char *, unint64_t, uint64_t, __n128);
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  char v264;
  __n128 v265;
  uint64_t v266;
  void (*v267)(_QWORD, _QWORD);
  __n128 v268;
  __n128 v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  char *v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  void (*v279)(char *, uint64_t, __n128);
  __n128 v280;
  __n128 v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  char *v285;
  char *v286;
  void (**v287)(uint64_t, char *);
  char *v288;
  char *v289;
  uint64_t v290;
  char *v291;
  char *v292;
  char *v293;
  uint64_t v294;
  char *v295;
  char *v296;
  char *v297;
  char *v298;
  char *v299;
  char *v300;
  char *v301;
  void (*v302)(char *, uint64_t);
  char *v303;
  char *v304;
  char *v305;
  void (**v306)(uint64_t, char *);
  char *v307;
  uint64_t v308;
  uint64_t v309;
  void (*v310)(char *, uint64_t);
  unsigned int (*v311)(uint64_t, uint64_t, char *);
  char *v312;
  char *v313;
  uint64_t (*v314)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v315;
  uint64_t v316;
  char *v317;
  uint64_t v318;
  uint64_t (*v319)(_QWORD, _QWORD, _QWORD);
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;

  v315 = a3;
  v318 = a1;
  v4 = type metadata accessor for FMIPPartType(0);
  v5 = *(_QWORD *)(v4 - 8);
  v319 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v4;
  v320 = v5;
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v284 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __chkstk_darwin(v6);
  v11 = (char *)&v284 - v10;
  v12 = __chkstk_darwin(v9);
  v304 = (char *)&v284 - v13;
  v14 = __chkstk_darwin(v12);
  v286 = (char *)&v284 - v15;
  v16 = __chkstk_darwin(v14);
  v310 = (void (*)(char *, uint64_t))((char *)&v284 - v17);
  __chkstk_darwin(v16);
  v288 = (char *)&v284 - v18;
  v308 = type metadata accessor for FMIPDevice(0);
  v309 = *(_QWORD *)(v308 - 8);
  v19 = __chkstk_darwin(v308);
  v301 = (char *)&v284 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v289 = (char *)&v284 - v21;
  v22 = sub_100053F2C(&qword_1005D72D0);
  v23 = __chkstk_darwin(v22);
  v302 = (void (*)(char *, uint64_t))((char *)&v284 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = __chkstk_darwin(v23);
  v27 = (char *)&v284 - v26;
  v28 = __chkstk_darwin(v25);
  v292 = (char *)&v284 - v29;
  v30 = __chkstk_darwin(v28);
  v291 = (char *)&v284 - v31;
  v32 = __chkstk_darwin(v30);
  v299 = (char *)&v284 - v33;
  v34 = __chkstk_darwin(v32);
  v285 = (char *)&v284 - v35;
  __chkstk_darwin(v34);
  v298 = (char *)&v284 - v36;
  v37 = type metadata accessor for FMIPItem(0);
  v38 = *(_QWORD *)(v37 - 8);
  v39 = __chkstk_darwin(v37);
  v41 = (char *)&v284 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __chkstk_darwin(v39);
  v307 = (char *)&v284 - v43;
  v44 = __chkstk_darwin(v42);
  v296 = (char *)&v284 - v45;
  v46 = __chkstk_darwin(v44);
  v305 = (char *)&v284 - v47;
  v48 = __chkstk_darwin(v46);
  v312 = (char *)&v284 - v49;
  v50 = __chkstk_darwin(v48);
  v293 = (char *)&v284 - v51;
  v52 = __chkstk_darwin(v50);
  v300 = (char *)&v284 - v53;
  v54 = __chkstk_darwin(v52);
  v317 = (char *)&v284 - v55;
  v56 = __chkstk_darwin(v54);
  v316 = (uint64_t)&v284 - v57;
  __chkstk_darwin(v56);
  v306 = (void (**)(uint64_t, char *))((char *)&v284 - v58);
  v59 = type metadata accessor for FMSelectedSection(0);
  __chkstk_darwin(v59);
  v61 = (char *)&v284 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  v63 = __chkstk_darwin(v62);
  v313 = (char *)&v284 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __chkstk_darwin(v63);
  v297 = (char *)&v284 - v66;
  v67 = __chkstk_darwin(v65);
  v303 = (char *)&v284 - v68;
  v69 = __chkstk_darwin(v67);
  v295 = (char *)&v284 - v70;
  v71 = __chkstk_darwin(v69);
  v290 = (uint64_t)&v284 - v72;
  v73 = __chkstk_darwin(v71);
  v287 = (void (**)(uint64_t, char *))((char *)&v284 - v74);
  v75 = __chkstk_darwin(v73);
  v77 = (char *)&v284 - v76;
  __chkstk_darwin(v75);
  v311 = (unsigned int (*)(uint64_t, uint64_t, char *))((char *)&v284 - v78);
  v321 = v37;
  v322 = v38;
  v314 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56);
  v79 = v314(v318, 1, 1, v37);
  v80 = FMIPDevice.shouldDisplaySeparatedLocation.getter(v79);
  if ((v80 & 1) == 0)
  {
    FMIPDevice.itemGroup.getter(v80);
    v82 = type metadata accessor for FMIPItemGroup(0);
    v83 = *(_QWORD *)(v82 - 8);
    v84 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v83 + 48);
    v85 = v84(v27, 1, v82);
    if ((_DWORD)v85 == 1)
    {
      sub_1000051EC((uint64_t)v27, &qword_1005D72D0);
      v86 = v313;
      v314((uint64_t)v313, 1, 1, v321);
    }
    else
    {
      v87 = a2;
      v88 = FMIPItemGroup.items.getter(v85);
      v310 = *(void (**)(char *, uint64_t))(v83 + 8);
      v310(v27, v82);
      v90 = *(_QWORD *)(v88 + 16);
      v311 = (unsigned int (*)(uint64_t, uint64_t, char *))v84;
      v312 = (char *)v82;
      if (v90)
      {
        v294 = v87;
        v91 = v88 + ((*(unsigned __int8 *)(v322 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v322 + 80));
        LODWORD(v317) = enum case for FMIPPartType.case(_:);
        v92 = *(char **)(v322 + 16);
        v315 = *(_QWORD **)(v322 + 72);
        v316 = (uint64_t)v92;
        v309 = v88;
        v93 = swift_bridgeObjectRetain(v88);
        v95 = v320;
        v94 = v321;
        v96 = v319;
        while (1)
        {
          v97 = ((uint64_t (*)(char *, unint64_t, uint64_t, __n128))v316)(v41, v91, v94, v93);
          FMIPItem.partType.getter(v97);
          (*(void (**)(char *, _QWORD, uint64_t (*)(_QWORD, _QWORD, _QWORD)))(v95 + 104))(v8, v317, v96);
          v98 = sub_100008000((unint64_t *)&unk_1005E3AF0, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPartType, (uint64_t)&protocol conformance descriptor for FMIPPartType);
          dispatch thunk of RawRepresentable.rawValue.getter(&v325, v96, v98);
          dispatch thunk of RawRepresentable.rawValue.getter(&v327, v96, v98);
          v99 = v326;
          v100 = v328;
          if (v325 == v327 && v326 == v328)
            break;
          v102 = _stringCompareWithSmolCheck(_:_:expecting:)(v325, v326, v327, v328, 0);
          swift_bridgeObjectRelease(v99);
          v103 = swift_bridgeObjectRelease(v100);
          v104 = *(void (**)(_QWORD, _QWORD, __n128))(v95 + 8);
          v104(v8, v96, v103);
          ((void (*)(char *, uint64_t (*)(_QWORD, _QWORD, _QWORD)))v104)(v11, v96);
          if ((v102 & 1) != 0)
            goto LABEL_23;
          v94 = v321;
          (*(void (**)(char *, uint64_t))(v322 + 8))(v41, v321);
          v91 += (unint64_t)v315;
          if (!--v90)
          {
            v88 = v309;
            v89 = swift_bridgeObjectRelease(v309);
            v105 = 1;
            v106 = v322;
            goto LABEL_19;
          }
        }
        swift_bridgeObjectRelease_n(v326, 2);
        v130 = *(void (**)(_QWORD, _QWORD))(v95 + 8);
        v130(v8, v96);
        v130(v11, v96);
LABEL_23:
        v88 = v309;
        v131 = swift_bridgeObjectRelease(v309);
        v94 = v321;
        v106 = v322;
        v86 = v313;
        (*(void (**)(char *, char *, uint64_t, __n128))(v322 + 32))(v313, v41, v321, v131);
        v105 = 0;
      }
      else
      {
        v105 = 1;
        v94 = v321;
        v106 = v322;
LABEL_19:
        v86 = v313;
      }
      v132 = v314;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v314)(v86, v105, 1, v94, v89);
      v133 = swift_bridgeObjectRelease(v88);
      v134 = (*(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v106 + 48))(v86, 1, v94, v133);
      v135 = v318;
      v136 = v307;
      if (v134 != 1)
      {
        sub_1000051EC(v318, (uint64_t *)&unk_1005D3AA0);
        (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v136, v86, v94);
        (*(void (**)(uint64_t, char *, uint64_t))(v106 + 16))(v135, v136, v94);
        v138 = v132(v135, 0, 1, v94);
        v139 = (uint64_t)v302;
        FMIPDevice.itemGroup.getter(v138);
        v140 = v312;
        if (v311(v139, 1, v312) == 1)
        {
          sub_1000051EC(v139, &qword_1005D72D0);
        }
        else
        {
          v141 = FMIPItemGroup.groupedItems.getter();
          v142 = v139;
          v143 = v141;
          v144 = ((uint64_t (*)(uint64_t, char *))v310)(v142, v140);
          __chkstk_darwin(v144);
          *(&v284 - 2) = (uint64_t)v136;
          v145 = sub_1003DB1B0(sub_1003F7010, (uint64_t)(&v284 - 4), v143);
          swift_bridgeObjectRelease(v143);
          if (v145)
          {
            sub_1003EF2CC(v145, &qword_1005D2C10, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPItem);
            swift_bridgeObjectRelease(v145);
          }
        }
        goto LABEL_113;
      }
    }
    v137 = (uint64_t)v86;
LABEL_26:
    sub_1000051EC(v137, (uint64_t *)&unk_1005D3AA0);
    return;
  }
  v294 = a2;
  v81 = v315[7] + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v81, &v325, 0, 0);
  sub_100024F3C(v81, (uint64_t)v61);
  if (swift_getEnumCaseMultiPayload(v61, v59))
  {
    sub_100024F00((uint64_t)v61);
    return;
  }
  v107 = sub_100053F2C(&qword_1005DE9B0);
  v108 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v311;
  sub_10005DAA0((uint64_t)&v61[*(int *)(v107 + 48)], (uint64_t)v311, (uint64_t *)&unk_1005D3AA0);
  v109 = *(void (**)(char *, uint64_t))(v309 + 8);
  v110 = v308;
  v109(v61, v308);
  sub_100007464((uint64_t)v108, (uint64_t)v77, (uint64_t *)&unk_1005D3AA0);
  v111 = v321;
  v106 = v322;
  v112 = *(_QWORD **)(v322 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v112)(v77, 1, v321) == 1)
  {
    v113 = sub_1000051EC((uint64_t)v77, (uint64_t *)&unk_1005D3AA0);
    v114 = (uint64_t)v299;
    v115 = v294;
    FMIPDevice.itemGroup.getter(v113);
    v116 = type metadata accessor for FMIPItemGroup(0);
    v117 = *(char **)(v116 - 8);
    v307 = (char *)*((_QWORD *)v117 + 6);
    v118 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v307)(v114, 1, v116);
    v313 = (char *)v116;
    v306 = (void (**)(uint64_t, char *))v117;
    if ((_DWORD)v118 == 1)
    {
      sub_1000051EC(v114, &qword_1005D72D0);
      v119 = v303;
      v120 = v321;
      v121 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v314;
      v314((uint64_t)v303, 1, 1, v321);
      v122 = v319;
    }
    else
    {
      v146 = FMIPItemGroup.items.getter(v118);
      v147 = v116;
      v148 = (char *)v146;
      (*((void (**)(uint64_t, uint64_t))v117 + 1))(v114, v147);
      v149 = *((_QWORD *)v148 + 2);
      v120 = v321;
      v122 = v319;
      if (v149)
      {
        v315 = v112;
        v302 = v109;
        v150 = v148;
        v151 = &v148[(*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80)];
        LODWORD(v317) = enum case for FMIPPartType.case(_:);
        v316 = *(_QWORD *)(v106 + 72);
        v152 = *(uint64_t (**)(char *, char *, uint64_t, __n128))(v106 + 16);
        v300 = v150;
        v153 = swift_bridgeObjectRetain(v150);
        v154 = v288;
        v155 = v312;
        v156 = v320;
        v157 = (char *)v310;
        while (1)
        {
          v158 = v152(v155, v151, v120, v153);
          FMIPItem.partType.getter(v158);
          (*(void (**)(char *, _QWORD, uint64_t (*)(_QWORD, _QWORD, _QWORD)))(v156 + 104))(v157, v317, v122);
          v159 = v122;
          v160 = sub_100008000((unint64_t *)&unk_1005E3AF0, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPartType, (uint64_t)&protocol conformance descriptor for FMIPPartType);
          dispatch thunk of RawRepresentable.rawValue.getter(&v327, v159, v160);
          dispatch thunk of RawRepresentable.rawValue.getter(&v323, v159, v160);
          v161 = v328;
          v162 = v324;
          if (v327 == v323 && v328 == v324)
            break;
          v164 = _stringCompareWithSmolCheck(_:_:expecting:)(v327, v328, v323, v324, 0);
          swift_bridgeObjectRelease(v161);
          v165 = swift_bridgeObjectRelease(v162);
          v166 = *(void (**)(_QWORD, _QWORD, __n128))(v156 + 8);
          v166(v157, v159, v165);
          ((void (*)(char *, uint64_t (*)(_QWORD, _QWORD, _QWORD)))v166)(v154, v159);
          v122 = v159;
          if ((v164 & 1) != 0)
            goto LABEL_79;
          v120 = v321;
          v155 = v312;
          (*(void (**)(char *, uint64_t))(v322 + 8))(v312, v321);
          v151 += v316;
          if (!--v149)
          {
            v148 = v300;
            swift_bridgeObjectRelease(v300);
            v106 = v322;
            v115 = v294;
            v110 = v308;
            v109 = v302;
            v112 = v315;
            goto LABEL_40;
          }
        }
        swift_bridgeObjectRelease_n(v328, 2);
        v211 = *(void (**)(_QWORD, _QWORD))(v156 + 8);
        v211(v157, v159);
        v211(v154, v159);
        v122 = v159;
LABEL_79:
        v212 = v300;
        v213 = swift_bridgeObjectRelease(v300);
        v120 = v321;
        v106 = v322;
        v119 = v303;
        (*(void (**)(char *, char *, uint64_t, __n128))(v322 + 32))(v303, v312, v321, v213);
        v121 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v314;
        v314((uint64_t)v119, 0, 1, v120);
        swift_bridgeObjectRelease(v212);
        v115 = v294;
        v110 = v308;
        v109 = v302;
        v112 = v315;
      }
      else
      {
LABEL_40:
        v119 = v303;
        v121 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v314;
        v314((uint64_t)v303, 1, 1, v120);
        swift_bridgeObjectRelease(v148);
      }
    }
    v214 = v301;
    (*(void (**)(char *, uint64_t, uint64_t))(v309 + 16))(v301, v115, v110);
    v215 = ((uint64_t (*)(char *, uint64_t, uint64_t))v112)(v119, 1, v120);
    if ((_DWORD)v215 == 1)
    {
      v216 = v291;
      FMIPDevice.itemGroup.getter(v215);
      v217 = (uint64_t)v216;
      v218 = v216;
      v219 = v313;
      v220 = ((uint64_t (*)(char *, uint64_t, char *))v307)(v218, 1, v313);
      if ((_DWORD)v220 == 1)
      {
        v109(v214, v110);
        sub_1000051EC(v217, &qword_1005D72D0);
        v221 = (uint64_t)v295;
        v120 = v321;
        v121(v295, 1, 1, v321);
        v136 = v296;
        v222 = (uint64_t)v303;
        v223 = v311;
      }
      else
      {
        v225 = FMIPItemGroup.items.getter(v220);
        v306[1](v217, v219);
        v227 = *(_QWORD *)(v225 + 16);
        v223 = v311;
        if (v227)
        {
          v315 = v112;
          v302 = v109;
          v228 = v225 + ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80));
          LODWORD(v319) = enum case for FMIPPartType.leftBud(_:);
          v229 = *(char **)(v106 + 72);
          v316 = v225;
          v317 = v229;
          v230 = *(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v106 + 16);
          v231 = swift_bridgeObjectRetain(v225);
          v232 = v320;
          v120 = v321;
          v233 = v286;
          v234 = v305;
          while (1)
          {
            v235 = v230(v234, v228, v120, v231);
            FMIPItem.partType.getter(v235);
            v236 = v304;
            (*(void (**)(char *, _QWORD, uint64_t (*)(_QWORD, _QWORD, _QWORD)))(v232 + 104))(v304, v319, v122);
            v237 = sub_100008000((unint64_t *)&unk_1005E3AF0, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPPartType, (uint64_t)&protocol conformance descriptor for FMIPPartType);
            dispatch thunk of RawRepresentable.rawValue.getter(&v327, v122, v237);
            dispatch thunk of RawRepresentable.rawValue.getter(&v323, v122, v237);
            v238 = v328;
            v239 = v122;
            v240 = v324;
            if (v327 == v323 && v328 == v324)
              break;
            v242 = _stringCompareWithSmolCheck(_:_:expecting:)(v327, v328, v323, v324, 0);
            swift_bridgeObjectRelease(v238);
            v243 = swift_bridgeObjectRelease(v240);
            v244 = *(void (**)(_QWORD, _QWORD, __n128))(v232 + 8);
            v244(v236, v239, v243);
            ((void (*)(char *, uint64_t (*)(_QWORD, _QWORD, _QWORD)))v244)(v233, v239);
            if ((v242 & 1) != 0)
              goto LABEL_102;
            v122 = v239;
            v120 = v321;
            v234 = v305;
            (*(void (**)(char *, uint64_t))(v322 + 8))(v305, v321);
            v228 += (unint64_t)v317;
            if (!--v227)
            {
              v245 = v316;
              v246 = swift_bridgeObjectRelease(v316);
              v106 = v322;
              v121 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v314;
              v112 = v315;
              v223 = v311;
              v110 = v308;
              v109 = v302;
              v221 = (uint64_t)v295;
              ((void (*)(char *, uint64_t, uint64_t, uint64_t, __n128))v314)(v295, 1, 1, v120, v246);
              goto LABEL_104;
            }
          }
          swift_bridgeObjectRelease_n(v328, 2);
          v267 = *(void (**)(_QWORD, _QWORD))(v232 + 8);
          v267(v236, v239);
          v267(v233, v239);
LABEL_102:
          v245 = v316;
          v268 = swift_bridgeObjectRelease(v316);
          v120 = v321;
          v106 = v322;
          v221 = (uint64_t)v295;
          (*(void (**)(char *, char *, uint64_t, __n128))(v322 + 32))(v295, v305, v321, v268);
          v247 = 0;
          v121 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v314;
          v112 = v315;
          v223 = v311;
          v110 = v308;
          v109 = v302;
        }
        else
        {
          v247 = 1;
          v120 = v321;
          v221 = (uint64_t)v295;
          v245 = v225;
        }
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))v121)(v221, v247, 1, v120, v226);
LABEL_104:
        v269 = swift_bridgeObjectRelease(v245);
        ((void (*)(char *, uint64_t, __n128))v109)(v301, v110, v269);
        v136 = v296;
        v222 = (uint64_t)v303;
      }
      sub_1000051EC(v222, (uint64_t *)&unk_1005D3AA0);
      v224 = (uint64_t)v297;
    }
    else
    {
      v109(v214, v110);
      v221 = (uint64_t)v295;
      (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v295, v119, v120);
      v121((char *)v221, 0, 1, v120);
      v136 = v296;
      v224 = (uint64_t)v297;
      v223 = v311;
    }
    sub_100007464(v221, v224, (uint64_t *)&unk_1005D3AA0);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v112)(v224, 1, v120) == 1)
    {
      sub_1000051EC(v221, (uint64_t *)&unk_1005D3AA0);
      sub_1000051EC((uint64_t)v223, (uint64_t *)&unk_1005D3AA0);
      v137 = v224;
      goto LABEL_26;
    }
    v270 = v318;
    sub_1000051EC(v318, (uint64_t *)&unk_1005D3AA0);
    (*(void (**)(char *, uint64_t, uint64_t))(v106 + 32))(v136, v224, v120);
    (*(void (**)(uint64_t, char *, uint64_t))(v106 + 16))(v270, v136, v120);
    v271 = ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v121)(v270, 0, 1, v120);
    v272 = (uint64_t)v292;
    FMIPDevice.itemGroup.getter(v271);
    v273 = v313;
    if (((unsigned int (*)(uint64_t, uint64_t, char *))v307)(v272, 1, v313) == 1)
    {
      sub_1000051EC(v272, &qword_1005D72D0);
    }
    else
    {
      v274 = v272;
      v275 = FMIPItemGroup.groupedItems.getter();
      v276 = ((uint64_t (*)(uint64_t, char *))v306[1])(v274, v273);
      __chkstk_darwin(v276);
      *(&v284 - 2) = (uint64_t)v136;
      v277 = sub_1003DB1B0(sub_1003F7030, (uint64_t)(&v284 - 4), v275);
      swift_bridgeObjectRelease(v275);
      if (v277)
      {
        sub_1003EF2CC(v277, &qword_1005D2C10, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPItem);
        swift_bridgeObjectRelease(v277);
      }
    }
    sub_1000051EC(v221, (uint64_t *)&unk_1005D3AA0);
    sub_1000051EC((uint64_t)v223, (uint64_t *)&unk_1005D3AA0);
LABEL_113:
    (*(void (**)(char *, uint64_t))(v106 + 8))(v136, v321);
    return;
  }
  v315 = v112;
  v123 = *(uint64_t (**)(void (**)(uint64_t, char *), char *, uint64_t))(v106 + 32);
  v124 = v306;
  v125 = v123(v306, v77, v111);
  v126 = (uint64_t)v298;
  FMIPDevice.itemGroup.getter(v125);
  v127 = type metadata accessor for FMIPItemGroup(0);
  v128 = *(_QWORD *)(v127 - 8);
  v129 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v128 + 48);
  if (v129(v126, 1, v127) == 1)
  {
    sub_1000051EC(v126, &qword_1005D72D0);
  }
  else
  {
    v167 = FMIPItemGroup.groupedItems.getter();
    v168 = v126;
    v169 = v167;
    v170 = *(uint64_t (**)(uint64_t, uint64_t))(v128 + 8);
    v171 = v170(v168, v127);
    __chkstk_darwin(v171);
    *(&v284 - 2) = (uint64_t)v124;
    v172 = sub_1003DB1B0(sub_1003F7010, (uint64_t)(&v284 - 4), v169);
    swift_bridgeObjectRelease(v169);
    if (v172)
    {
      v313 = (char *)v170;
      v319 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v129;
      v320 = v127;
      v302 = v109;
      v173 = v172 + 56;
      v174 = 1 << *(_BYTE *)(v172 + 32);
      v175 = -1;
      if (v174 < 64)
        v175 = ~(-1 << v174);
      v176 = v175 & *(_QWORD *)(v172 + 56);
      v108 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))((unint64_t)(v174 + 63) >> 6);
      v177 = swift_bridgeObjectRetain(v172);
      v178 = 0;
      v180 = v321;
      v179 = v322;
      v182 = v316;
      v181 = v317;
      if (!v176)
        goto LABEL_46;
LABEL_45:
      v183 = __clz(__rbit64(v176));
      v176 &= v176 - 1;
      for (i = v183 | (v178 << 6); ; i = __clz(__rbit64(v186)) + (v178 << 6))
      {
        (*(void (**)(uint64_t, unint64_t, uint64_t, __n128))(v179 + 16))(v182, *(_QWORD *)(v172 + 48) + *(_QWORD *)(v179 + 72) * i, v180, v177);
        v188 = v123((void (**)(uint64_t, char *))v181, (char *)v182, v180);
        if ((FMIPItem.primaryItemPart.getter(v188) & 1) != 0)
          break;
        (*(void (**)(char *, uint64_t))(v179 + 8))(v181, v180);
        if (v176)
          goto LABEL_45;
LABEL_46:
        v185 = v178 + 1;
        if (__OFADD__(v178, 1))
        {
          __break(1u);
          goto LABEL_124;
        }
        if (v185 >= (uint64_t)v108)
        {
LABEL_73:
          swift_release(v172);
          v199 = 1;
          v198 = v290;
          goto LABEL_74;
        }
        v186 = *(_QWORD *)(v173 + 8 * v185);
        ++v178;
        if (!v186)
        {
          v178 = v185 + 1;
          if (v185 + 1 >= (uint64_t)v108)
            goto LABEL_73;
          v186 = *(_QWORD *)(v173 + 8 * v178);
          if (!v186)
          {
            v178 = v185 + 2;
            if (v185 + 2 >= (uint64_t)v108)
              goto LABEL_73;
            v186 = *(_QWORD *)(v173 + 8 * v178);
            if (!v186)
            {
              v178 = v185 + 3;
              if (v185 + 3 >= (uint64_t)v108)
                goto LABEL_73;
              v186 = *(_QWORD *)(v173 + 8 * v178);
              if (!v186)
              {
                v178 = v185 + 4;
                if (v185 + 4 >= (uint64_t)v108)
                  goto LABEL_73;
                v186 = *(_QWORD *)(v173 + 8 * v178);
                if (!v186)
                {
                  v187 = v185 + 5;
                  if (v187 >= (uint64_t)v108)
                    goto LABEL_73;
                  v186 = *(_QWORD *)(v173 + 8 * v187);
                  if (!v186)
                  {
                    while (1)
                    {
                      v178 = v187 + 1;
                      if (__OFADD__(v187, 1))
                        break;
                      if (v178 >= (uint64_t)v108)
                        goto LABEL_73;
                      v186 = *(_QWORD *)(v173 + 8 * v178);
                      ++v187;
                      if (v186)
                        goto LABEL_63;
                    }
                    __break(1u);
                    return;
                  }
                  v178 = v187;
                }
              }
            }
          }
        }
LABEL_63:
        v176 = (v186 - 1) & v186;
      }
      v197 = swift_release(v172);
      v198 = v290;
      ((void (*)(uint64_t, char *, uint64_t, __n128))v123)(v290, v181, v180, v197);
      v199 = 0;
LABEL_74:
      v200 = v314;
      v314(v198, v199, 1, v180);
      v201 = v289;
      v202 = v308;
      (*(void (**)(char *, uint64_t, uint64_t))(v309 + 16))(v289, v294, v308);
      v317 = *(char **)(v322 + 16);
      ((void (*)(char *, void (**)(uint64_t, char *), uint64_t))v317)(v300, v306, v180);
      v203 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v315)(v198, 1, v180);
      v204 = v318;
      v205 = v302;
      if ((_DWORD)v203 == 1)
      {
        v206 = v318;
        v207 = (uint64_t)v285;
        FMIPDevice.itemGroup.getter(v203);
        v208 = v320;
        v209 = v319(v207, 1, v320);
        if ((_DWORD)v209 == 1)
        {
          v205(v201, v202);
          v204 = v206;
          sub_1000051EC(v206, (uint64_t *)&unk_1005D3AA0);
          sub_1000051EC(v207, &qword_1005D72D0);
          v210 = (uint64_t)v287;
          v180 = v321;
          v314((uint64_t)v287, 1, 1, v321);
          v108 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v311;
        }
        else
        {
          v248 = FMIPItemGroup.items.getter(v209);
          ((void (*)(uint64_t, uint64_t))v313)(v207, v208);
          v250 = *(_QWORD *)(v248 + 16);
          if (v250)
          {
            v251 = v322;
            v252 = v248
                 + ((*(unsigned __int8 *)(v322 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v322 + 80));
            v253 = swift_bridgeObjectRetain(v248);
            v254 = *(_QWORD *)(v251 + 72);
            v180 = v321;
            v255 = v293;
            v256 = (uint64_t (*)(char *, unint64_t, uint64_t, __n128))v317;
            while (1)
            {
              v257 = v256(v255, v252, v180, v253);
              v258 = FMIPItem.identifier.getter(v257);
              v260 = v259;
              v262 = FMIPItem.identifier.getter(v258);
              v263 = v261;
              if (v258 == v262 && v260 == v261)
              {
                swift_bridgeObjectRelease(v248);
                swift_bridgeObjectRelease(v260);
                goto LABEL_118;
              }
              v264 = _stringCompareWithSmolCheck(_:_:expecting:)(v258, v260, v262, v261, 0);
              swift_bridgeObjectRelease(v260);
              v265 = swift_bridgeObjectRelease(v263);
              if ((v264 & 1) != 0)
                break;
              v180 = v321;
              v255 = v293;
              (*(void (**)(char *, uint64_t, __n128))(v322 + 8))(v293, v321, v265);
              v252 += v254;
              if (!--v250)
              {
                v249 = swift_bridgeObjectRelease(v248);
                v266 = 1;
                goto LABEL_115;
              }
            }
            v260 = v248;
LABEL_118:
            v180 = v321;
            v204 = v318;
            v108 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v311;
            v278 = v308;
            v279 = (void (*)(char *, uint64_t, __n128))v302;
            v280 = swift_bridgeObjectRelease(v260);
            v210 = (uint64_t)v287;
            ((void (*)(void (**)(uint64_t, char *), char *, uint64_t, __n128))v123)(v287, v293, v180, v280);
            v266 = 0;
          }
          else
          {
            v266 = 1;
            v180 = v321;
LABEL_115:
            v204 = v318;
            v108 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v311;
            v278 = v308;
            v279 = (void (*)(char *, uint64_t, __n128))v302;
            v210 = (uint64_t)v287;
          }
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))v314)(v210, v266, 1, v180, v249);
          v281 = swift_bridgeObjectRelease(v248);
          v279(v289, v278, v281);
          sub_1000051EC(v204, (uint64_t *)&unk_1005D3AA0);
        }
        v194 = (char *)v306;
        sub_1000051EC(v290, (uint64_t *)&unk_1005D3AA0);
      }
      else
      {
        v302(v201, v202);
        sub_1000051EC(v204, (uint64_t *)&unk_1005D3AA0);
        v210 = (uint64_t)v287;
        v123(v287, (char *)v198, v180);
        v200(v210, 0, 1, v180);
        v108 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v311;
        v194 = (char *)v306;
      }
      v282 = v322;
      (*(void (**)(char *, uint64_t))(v322 + 8))(v300, v180);
      sub_10005DAA0(v210, v204, (uint64_t *)&unk_1005D3AA0);
      sub_1003EF2CC(v172, &qword_1005D2C10, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPItem);
      v283 = v172;
      v196 = v282;
      swift_bridgeObjectRelease(v283);
      goto LABEL_122;
    }
  }
  if (qword_1005D1DE8 != -1)
LABEL_124:
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v189 = type metadata accessor for Logger(0);
  v190 = sub_100056D88(v189, (uint64_t)qword_1005F5748);
  v191 = Logger.logObject.getter(v190);
  v192 = static os_log_type_t.error.getter(v191);
  v193 = os_log_type_enabled(v191, v192);
  v194 = (char *)v306;
  if (v193)
  {
    v195 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v195 = 0;
    _os_log_impl((void *)&_mh_execute_header, v191, v192, "FMDeviceDetailViewModel: We shouldn't be here. No group for this item", v195, 2u);
    swift_slowDealloc(v195, -1, -1);
  }

  v180 = v321;
  v196 = v322;
LABEL_122:
  sub_1000051EC((uint64_t)v108, (uint64_t *)&unk_1005D3AA0);
  (*(void (**)(char *, uint64_t))(v196 + 8))(v194, v180);
}

uint64_t sub_1003EF01C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 76);
  v5 = type metadata accessor for Date(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

Swift::Int sub_1003EF05C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[9];

  Hasher.init(_seed:)(v4, 0);
  v1 = *v0;
  v2 = v0[1];
  swift_bridgeObjectRetain(v2);
  String.hash(into:)(v4, v1, v2);
  swift_bridgeObjectRelease(v2);
  return Hasher._finalize()();
}

uint64_t sub_1003EF0B4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v4 = *v1;
  v3 = v1[1];
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(a1, v4, v3);
  return swift_bridgeObjectRelease(v3);
}

Swift::Int sub_1003EF0F8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[9];

  Hasher.init(_seed:)(v5, a1);
  v2 = *v1;
  v3 = v1[1];
  swift_bridgeObjectRetain(v3);
  String.hash(into:)(v5, v2, v3);
  swift_bridgeObjectRelease(v3);
  return Hasher._finalize()();
}

uint64_t sub_1003EF150()
{
  return sub_100008000(&qword_1005E3A60, type metadata accessor for FMDeviceDetailViewModel, (uint64_t)&unk_100490568);
}

uint64_t sub_1003EF17C(uint64_t a1)
{
  uint64_t result;

  result = sub_100008000((unint64_t *)&unk_1005E3A90, type metadata accessor for FMDeviceDetailViewModel, (uint64_t)&unk_100490590);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1003EF1B8(void (*a1)(uint64_t *__return_ptr))
{
  uint64_t v2;

  a1(&v2);
  return FMSoundPlatterViewLayout.description.getter(v2);
}

_QWORD *sub_1003EF1E8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;

  if (a1 < 0)
  {
    result = (_QWORD *)_assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, "Can't construct Array with count < 0", 36, 2, "Swift/Array.swift", 17, 2, 936, 0);
    __break(1u);
  }
  else if (a1)
  {
    v2 = sub_100053F2C(&qword_1005D6860);
    result = (_QWORD *)static Array._allocateBufferUninitialized(minimumCapacity:)(a1, v2);
    result[2] = a1;
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_1003EF288(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 16) = a2;
  *(_QWORD *)(result + 24) = 2 * a2;
  return result;
}

_QWORD *sub_1003EF298(uint64_t a1)
{
  return sub_1003EFC88(a1, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1003EFD88);
}

_QWORD *sub_1003EF2A4(uint64_t a1)
{
  return sub_1003EF2CC(a1, &qword_1005D2C10, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPItem);
}

_QWORD *sub_1003EF2B8(uint64_t a1)
{
  return sub_1003EF2CC(a1, &qword_1005D2AB8, (uint64_t (*)(_QWORD))&type metadata accessor for FMFFriend);
}

_QWORD *sub_1003EF2CC(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return _swiftEmptyArrayStorage;
  v6 = sub_100053F2C(a2);
  v7 = *(_QWORD *)(a3(0) - 8);
  v8 = *(_QWORD *)(v7 + 72);
  v9 = *(unsigned __int8 *)(v7 + 80);
  v10 = (v9 + 32) & ~v9;
  v11 = (_QWORD *)swift_allocObject(v6, v10 + v8 * v3, v9 | 7);
  result = (_QWORD *)j__malloc_size(v11);
  if (v8)
  {
    if ((_QWORD *)((char *)result - v10) != (_QWORD *)0x8000000000000000 || v8 != -1)
    {
      v11[2] = v3;
      v11[3] = 2 * (((uint64_t)result - v10) / v8);
      v14 = sub_1003F16B0(&v16, (uint64_t)v11 + v10, v3, a1, a3);
      v15 = v16;
      swift_bridgeObjectRetain(a1);
      sub_100073BB4(v15);
      if (v14 == v3)
        return v11;
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_1003EF3E8(uint64_t a1)
{
  return sub_100059028(a1, &qword_1005E3C20, (uint64_t (*)(_QWORD *, _QWORD *, uint64_t, uint64_t))sub_1003F07EC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_100073BB4);
}

_QWORD *sub_1003EF404(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *result;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_100053F2C(&qword_1005D6768);
  v4 = *(_QWORD *)(type metadata accessor for UUID(0) - 8);
  v5 = *(_QWORD *)(v4 + 72);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = (_QWORD *)swift_allocObject(v3, v7 + v5 * v1, v6 | 7);
  result = (_QWORD *)j__malloc_size(v8);
  if (v5)
  {
    if ((_QWORD *)((char *)result - v7) != (_QWORD *)0x8000000000000000 || v5 != -1)
    {
      v8[2] = v1;
      v8[3] = 2 * (((uint64_t)result - v7) / v5);
      swift_bridgeObjectRetain(a1);
      v11 = sub_1003F09EC(&v12, (uint64_t)v8 + v7, v1, a1);
      sub_100073BB4(v12);
      if (v11 == v1)
        return v8;
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_1003EF4FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_100053F2C(&qword_1005D6790);
  v4 = (_QWORD *)swift_allocObject(v3, (v1 << 6) | 0x20, 7);
  v5 = j__malloc_size(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 + 31;
  v4[2] = v1;
  v4[3] = 2 * (v6 >> 6);
  v7 = sub_1003F0D3C(&v10, (uint64_t)(v4 + 4), v1, a1);
  v8 = v10;
  swift_bridgeObjectRetain(a1);
  sub_100073BB4(v8);
  if (v7 != (_QWORD *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v4;
}

_QWORD *sub_1003EF5E0(uint64_t a1)
{
  return sub_1003EFB58(a1, (void (*)(_QWORD))type metadata accessor for FMMultiSettingsRowView, (unint64_t *)&unk_1005E3CA0, &qword_1005E3C98, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1002001A8);
}

_QWORD *sub_1003EF604(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_100053F2C((uint64_t *)&unk_1005E3CB0);
  v4 = (_QWORD *)swift_allocObject(v3, 8 * v1 + 32, 7);
  v5 = j__malloc_size(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 25;
  v4[2] = v1;
  v4[3] = 2 * (v6 >> 3);
  v7 = sub_1003F0FB0((uint64_t)&v10, v4 + 4, v1, a1);
  v8 = v10;
  swift_bridgeObjectRetain(a1);
  sub_100073BB4(v8);
  if (v7 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v4;
}

_QWORD *sub_1003EF6E8(uint64_t a1)
{
  return sub_1003EFB58(a1, (void (*)(_QWORD))type metadata accessor for FMMultiSettingsStatusRowView, (unint64_t *)&unk_1005E3C60, &qword_1005E3C58, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1002001A8);
}

_QWORD *sub_1003EF70C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  int64_t v5;
  uint64_t v8;
  _QWORD *v9;
  size_t v10;
  void *v11;
  _QWORD *result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
    goto LABEL_16;
  if (!v5)
    return _swiftEmptyArrayStorage;
  if (v5 > 0)
  {
    v8 = sub_100053F2C(&qword_1005D2A88);
    v9 = (_QWORD *)swift_allocObject(v8, v5 + 32, 7);
    v10 = j__malloc_size(v9);
    v9[2] = v5;
    v9[3] = 2 * v10 - 64;
    if (v4 != a3)
      goto LABEL_5;
    goto LABEL_15;
  }
  v9 = _swiftEmptyArrayStorage;
  if (v4 == a3)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
LABEL_5:
  if (v5 < 0)
  {
LABEL_17:
    result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize with negative count", 51, 2, "Swift/UnsafePointer.swift", 25, 2, 1090, 0);
    goto LABEL_18;
  }
  v11 = v9 + 4;
  if (a2 + a3 >= (unint64_t)v9 + v5 + 32 || (unint64_t)v11 >= a2 + a3 + v5)
  {
    memcpy(v11, (const void *)(a2 + a3), v5);
    return v9;
  }
  result = (_QWORD *)_fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
LABEL_18:
  __break(1u);
  return result;
}

_QWORD *sub_1003EF864(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_100053F2C((uint64_t *)&unk_1005D2A90);
  v4 = (_QWORD *)swift_allocObject(v3, 16 * v1 + 32, 7);
  v5 = j__malloc_size(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 17;
  v4[2] = v1;
  v4[3] = 2 * (v6 >> 4);
  v7 = sub_1003F11A8((uint64_t)&v10, v4 + 4, v1, a1);
  v8 = v10;
  swift_bridgeObjectRetain(a1);
  sub_100073BB4(v8);
  if (v7 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v4;
}

_QWORD *sub_1003EF948(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return _swiftEmptyArrayStorage;
  v3 = sub_100053F2C(&qword_1005E3C90);
  v4 = *(_QWORD *)(sub_100053F2C((uint64_t *)&unk_1005D6840) - 8);
  v5 = *(_QWORD *)(v4 + 72);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = (_QWORD *)swift_allocObject(v3, v7 + v5 * v1, v6 | 7);
  result = (_QWORD *)j__malloc_size(v8);
  if (v5)
  {
    if ((_QWORD *)((char *)result - v7) != (_QWORD *)0x8000000000000000 || v5 != -1)
    {
      v8[2] = v1;
      v8[3] = 2 * (((uint64_t)result - v7) / v5);
      v11 = *(unsigned __int8 *)(*(_QWORD *)(sub_100053F2C((uint64_t *)&unk_1005D6840) - 8) + 80);
      sub_1003F13A4(&v15, (uint64_t)v8 + ((v11 + 32) & ~v11), v1, a1);
      v13 = v12;
      v14 = v15;
      swift_bridgeObjectRetain(a1);
      sub_100073BB4(v14);
      if (v13 == v1)
        return v8;
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_1003EFA80(uint64_t a1)
{
  return sub_1003EF2CC(a1, &qword_1005D2AA8, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPPlaySoundChannels);
}

_QWORD *sub_1003EFA94(uint64_t a1)
{
  return sub_1003EFB58(a1, (void (*)(_QWORD))type metadata accessor for FMDeletableRowView, (unint64_t *)&unk_1005E3B90, &qword_1005E3B88, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1002001A8);
}

_QWORD *sub_1003EFAB8(uint64_t a1)
{
  return sub_1003EF2CC(a1, &qword_1005D2A80, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPUnknownItem);
}

_QWORD *sub_1003EFACC(uint64_t a1)
{
  return sub_1003EF2CC(a1, &qword_1005E3C08, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPDiscoveredAccessory);
}

_QWORD *sub_1003EFAE0(uint64_t a1)
{
  return sub_1003EFB58(a1, (void (*)(_QWORD))type metadata accessor for FMTrackAnnotation, (unint64_t *)&unk_1005E3C30, &qword_1005E3C28, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1002001A8);
}

_QWORD *sub_1003EFB04(uint64_t a1)
{
  return sub_1003EFC88(a1, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1003F03B8);
}

_QWORD *sub_1003EFB10(uint64_t a1)
{
  return sub_1003EFB58(a1, (void (*)(_QWORD))type metadata accessor for FMAnnotation, &qword_1005E3BC8, &qword_1005E3BC0, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_100200200);
}

_QWORD *sub_1003EFB34(uint64_t a1)
{
  return sub_1003EFB58(a1, (void (*)(_QWORD))type metadata accessor for FMUnknownItemAnnotation, &qword_1005E3BB8, &qword_1005E3BB0, (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1002001A8);
}

_QWORD *sub_1003EFB58(uint64_t a1, void (*a2)(_QWORD), unint64_t *a3, uint64_t *a4, uint64_t (*a5)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;

  if ((unint64_t)a1 >> 62)
    goto LABEL_10;
  v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v10)
    return _swiftEmptyArrayStorage;
  while (1)
  {
    if (v10 <= 0)
    {
      v12 = _swiftEmptyArrayStorage;
    }
    else
    {
      v11 = sub_100053F2C(&qword_1005D2F10);
      v12 = (_QWORD *)swift_allocObject(v11, 8 * v10 + 32, 7);
      v13 = j__malloc_size(v12);
      v14 = v13 - 32;
      if (v13 < 32)
        v14 = v13 - 25;
      v12[2] = v10;
      v12[3] = (2 * (v14 >> 3)) | 1;
    }
    swift_bridgeObjectRetain(a1);
    v15 = sub_1003EFF9C((unint64_t)(v12 + 4), v10, a1, a2, a3, a4, a5);
    a5 = v16;
    swift_bridgeObjectRelease(v15);
    if (a5 == (uint64_t (*)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))v10)
      break;
    __break(1u);
LABEL_10:
    if (a1 < 0)
      v17 = a1;
    else
      v17 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v10 = _CocoaArrayWrapper.endIndex.getter(v17);
    swift_bridgeObjectRelease(a1);
    if (!v10)
      return _swiftEmptyArrayStorage;
  }
  return v12;
}

_QWORD *sub_1003EFC7C(uint64_t a1)
{
  return sub_1003EFC88(a1, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1003F05CC);
}

_QWORD *sub_1003EFC88(uint64_t a1, uint64_t (*a2)(_QWORD *, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD *, uint64_t, uint64_t);
  uint64_t v11;

  if ((unint64_t)a1 >> 62)
    goto LABEL_10;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return _swiftEmptyArrayStorage;
  while (1)
  {
    if (v4 <= 0)
    {
      v6 = _swiftEmptyArrayStorage;
    }
    else
    {
      v5 = sub_100053F2C(&qword_1005D2F10);
      v6 = (_QWORD *)swift_allocObject(v5, 8 * v4 + 32, 7);
      v7 = j__malloc_size(v6);
      v8 = v7 - 32;
      if (v7 < 32)
        v8 = v7 - 25;
      v6[2] = v4;
      v6[3] = (2 * (v8 >> 3)) | 1;
    }
    swift_bridgeObjectRetain(a1);
    v9 = a2(v6 + 4, v4, a1);
    a2 = v10;
    swift_bridgeObjectRelease(v9);
    if (a2 == (uint64_t (*)(_QWORD *, uint64_t, uint64_t))v4)
      break;
    __break(1u);
LABEL_10:
    if (a1 < 0)
      v11 = a1;
    else
      v11 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v4 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(a1);
    if (!v4)
      return _swiftEmptyArrayStorage;
  }
  return v6;
}

uint64_t sub_1003EFD88(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1003F7090((unint64_t *)&unk_1005E3B60, &qword_1005E3B58);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_100053F2C(&qword_1005E3B58);
          v13 = sub_1002001A8(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100006C5C(0, (unint64_t *)&qword_1005DB750, UIColor_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003EFF9C(unint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t i;
  uint64_t v22;
  void (*v23)(_BYTE *, _QWORD);
  id *v24;
  id v25;
  uint64_t v26;
  uint64_t result;
  _BYTE v28[32];

  v14 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v26 = a3;
    else
      v26 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v15 = _CocoaArrayWrapper.endIndex.getter(v26);
    swift_bridgeObjectRelease(a3);
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    if (a3 < 0)
      v18 = a3;
    else
      v18 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v19 = _CocoaArrayWrapper.endIndex.getter(v18);
    swift_bridgeObjectRelease(a3);
    if (v19 <= a2)
    {
      if (v15 >= 1)
      {
        v20 = sub_1003F7090(a5, a6);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v15; ++i)
        {
          v22 = sub_100053F2C(a6);
          v23 = (void (*)(_BYTE *, _QWORD))a7(v28, i, a3, v22, v20);
          v25 = *v24;
          v23(v28, 0);
          *(_QWORD *)(a1 + 8 * i) = v25;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v17 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003F01A4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1003F7090(&qword_1005E3C78, &qword_1005E3C70);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_100053F2C(&qword_1005E3C70);
          v13 = sub_1002001A8(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100006C5C(0, (unint64_t *)&qword_1005DB470, UIView_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003F03B8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1003F7090((unint64_t *)&unk_1005E3BE0, &qword_1005E3BD8);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_100053F2C(&qword_1005E3BD8);
          v13 = sub_1002001A8(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100006C5C(0, &qword_1005E3BD0, MKAnnotationView_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003F05CC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t i;
  void (*v13)(_QWORD *);
  id *v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  void (*v18[4])(id *);

  v6 = (unint64_t)a3 >> 62;
  if ((unint64_t)a3 >> 62)
  {
    if (a3 < 0)
      v16 = a3;
    else
      v16 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v7 = _CocoaArrayWrapper.endIndex.getter(v16);
    swift_bridgeObjectRelease(a3);
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_25;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    if (a3 < 0)
      v10 = a3;
    else
      v10 = a3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a3);
    v11 = _CocoaArrayWrapper.endIndex.getter(v10);
    swift_bridgeObjectRelease(a3);
    if (v11 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1003F7090(&qword_1005E3BA8, &qword_1005E3BA0);
        swift_bridgeObjectRetain(a3);
        for (i = 0; i != v7; ++i)
        {
          sub_100053F2C(&qword_1005E3BA0);
          v13 = sub_1002001A8(v18, i, a3);
          v15 = *v14;
          ((void (*)(void (**)(id *), _QWORD))v13)(v18, 0);
          *(_QWORD *)(a1 + 8 * i) = v15;
        }
        swift_bridgeObjectRelease(a3);
        return a3;
      }
      goto LABEL_24;
    }
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100006C5C(0, (unint64_t *)&unk_1005DF4B0, CLLocation_ptr);
    swift_arrayInitWithCopy(a1);
    return a3;
  }
LABEL_26:
  result = _fatalErrorMessage(_:_:file:line:flags:)("Fatal error", 11, 2, "UnsafeMutablePointer.initialize overlapping range", 49, 2, "Swift/UnsafePointer.swift", 25, 2, 1092, 0);
  __break(1u);
  return result;
}

uint64_t sub_1003F07E0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1003F16B0(a1, a2, a3, a4, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPItem);
}

uint64_t sub_1003F07EC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v16);
    *(_BYTE *)v11 = *(_BYTE *)(*(_QWORD *)(a4 + 48) + v16);
    *(_QWORD *)(v11 + 8) = v20;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain(v20);
      goto LABEL_38;
    }
    v11 += 16;
    result = swift_bridgeObjectRetain(v20);
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1003F09EC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;

  v8 = sub_100053F2C((uint64_t *)&unk_1005D53A0);
  __chkstk_darwin(v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for UUID(0);
  v41 = *(_QWORD *)(v11 - 8);
  result = __chkstk_darwin(v11);
  v40 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = a4;
  v15 = a4 + 64;
  v14 = *(_QWORD *)(a4 + 64);
  v16 = -1 << *(_BYTE *)(a4 + 32);
  v35 = a1;
  v36 = v16;
  v17 = -v16;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  else
    v18 = -1;
  v19 = v18 & v14;
  if (!a2)
  {
    v20 = 0;
    v21 = 0;
LABEL_39:
    v31 = v35;
    v32 = ~v36;
    *v35 = v42;
    v31[1] = v15;
    v31[2] = v32;
    v31[3] = v20;
    v31[4] = v19;
    return v21;
  }
  if (!a3)
  {
    v20 = 0;
    v21 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v20 = 0;
  v21 = 0;
  v37 = a4 + 64;
  v38 = (unint64_t)(63 - v36) >> 6;
  v34 = v38 - 1;
  v39 = a3;
  v22 = v40;
  v23 = v41;
  if (!v19)
    goto LABEL_9;
LABEL_8:
  v24 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  v25 = v24 | (v20 << 6);
  while (1)
  {
    v29 = *(_QWORD *)(v23 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v10, *(_QWORD *)(v42 + 48) + v29 * v25, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v10, 1, v11) == 1)
    {
      v15 = v37;
      goto LABEL_38;
    }
    ++v21;
    v30 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v30(v22, v10, v11);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v22, v11);
    if (v21 == v39)
    {
      v21 = v39;
      v15 = v37;
      goto LABEL_39;
    }
    a2 += v29;
    v23 = v41;
    if (v19)
      goto LABEL_8;
LABEL_9:
    v26 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    v15 = v37;
    if (v26 >= v38)
      goto LABEL_37;
    v27 = *(_QWORD *)(v37 + 8 * v26);
    if (!v27)
    {
      v28 = v20 + 2;
      ++v20;
      if (v26 + 1 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * v28);
      if (v27)
        goto LABEL_14;
      v20 = v26 + 1;
      if (v26 + 2 >= v38)
        goto LABEL_37;
      v27 = *(_QWORD *)(v37 + 8 * (v26 + 2));
      if (v27)
      {
        v26 += 2;
      }
      else
      {
        v20 = v26 + 2;
        if (v26 + 3 >= v38)
          goto LABEL_37;
        v27 = *(_QWORD *)(v37 + 8 * (v26 + 3));
        if (!v27)
        {
          v28 = v26 + 4;
          v20 = v26 + 3;
          if (v26 + 4 < v38)
          {
            v27 = *(_QWORD *)(v37 + 8 * v28);
            if (!v27)
            {
              while (1)
              {
                v26 = v28 + 1;
                if (__OFADD__(v28, 1))
                  goto LABEL_42;
                if (v26 >= v38)
                {
                  v20 = v34;
                  goto LABEL_37;
                }
                v27 = *(_QWORD *)(v37 + 8 * v26);
                ++v28;
                if (v27)
                  goto LABEL_21;
              }
            }
LABEL_14:
            v26 = v28;
            goto LABEL_21;
          }
LABEL_37:
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v10, 1, 1, v11);
          v19 = 0;
LABEL_38:
          sub_1000051EC((uint64_t)v10, (uint64_t *)&unk_1005D53A0);
          goto LABEL_39;
        }
        v26 += 3;
      }
    }
LABEL_21:
    v19 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v26 << 6);
    v20 = v26;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

_QWORD *sub_1003F0D3C(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  int64_t v30;

  v5 = a4 + 64;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v11 = 0;
    v9 = 0;
LABEL_39:
    *result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (_QWORD *)v9;
  }
  v9 = a3;
  if (!a3)
  {
    v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v10 = a2;
  v28 = -1 << *(_BYTE *)(a4 + 32);
  v29 = result;
  v11 = 0;
  v12 = 0;
  v30 = (unint64_t)(63 - v6) >> 6;
  if (!v8)
    goto LABEL_9;
LABEL_8:
  v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  v14 = v13 | (v11 << 6);
  while (1)
  {
    ++v12;
    v18 = (uint64_t *)(*(_QWORD *)(a4 + 48) + 16 * v14);
    v20 = *v18;
    v19 = v18[1];
    v21 = *(_QWORD *)(a4 + 56) + 48 * v14;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    v24 = *(_QWORD *)(v21 + 16);
    v25 = *(_QWORD *)(v21 + 24);
    v26 = *(_BYTE *)(v21 + 32);
    v27 = *(_QWORD *)(v21 + 40);
    *(_QWORD *)v10 = v20;
    *(_QWORD *)(v10 + 8) = v19;
    *(_QWORD *)(v10 + 16) = v22;
    *(_QWORD *)(v10 + 24) = v23;
    *(_QWORD *)(v10 + 32) = v24;
    *(_QWORD *)(v10 + 40) = v25;
    *(_BYTE *)(v10 + 48) = v26;
    *(_QWORD *)(v10 + 56) = v27;
    if (v12 == v9)
    {
      swift_bridgeObjectRetain(v19);
      swift_bridgeObjectRetain(v23);
      swift_bridgeObjectRetain(v25);
      swift_bridgeObjectRetain(v27);
      goto LABEL_38;
    }
    v10 += 64;
    swift_bridgeObjectRetain(v19);
    swift_bridgeObjectRetain(v23);
    swift_bridgeObjectRetain(v25);
    result = (_QWORD *)swift_bridgeObjectRetain(v27);
    if (v8)
      goto LABEL_8;
LABEL_9:
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v15 >= v30)
      goto LABEL_33;
    v16 = *(_QWORD *)(v5 + 8 * v15);
    if (!v16)
    {
      v11 += 2;
      if (v15 + 1 >= v30)
      {
        v8 = 0;
        v11 = v15;
      }
      else
      {
        v16 = *(_QWORD *)(v5 + 8 * v11);
        if (v16)
          goto LABEL_14;
        v17 = v15 + 2;
        if (v15 + 2 >= v30)
          goto LABEL_33;
        v16 = *(_QWORD *)(v5 + 8 * v17);
        if (v16)
        {
LABEL_17:
          v15 = v17;
          goto LABEL_18;
        }
        v11 = v15 + 3;
        if (v15 + 3 < v30)
        {
          v16 = *(_QWORD *)(v5 + 8 * v11);
          if (v16)
          {
LABEL_14:
            v15 = v11;
            goto LABEL_18;
          }
          v17 = v15 + 4;
          if (v15 + 4 >= v30)
          {
LABEL_33:
            v8 = 0;
            goto LABEL_37;
          }
          v16 = *(_QWORD *)(v5 + 8 * v17);
          if (!v16)
          {
            while (1)
            {
              v15 = v17 + 1;
              if (__OFADD__(v17, 1))
                goto LABEL_42;
              if (v15 >= v30)
              {
                v8 = 0;
                v11 = v30 - 1;
                goto LABEL_37;
              }
              v16 = *(_QWORD *)(v5 + 8 * v15);
              ++v17;
              if (v16)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v8 = 0;
        v11 = v15 + 2;
      }
LABEL_37:
      v9 = v12;
LABEL_38:
      v6 = v28;
      result = v29;
      goto LABEL_39;
    }
LABEL_18:
    v8 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v15 << 6);
    v11 = v15;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1003F0FB0(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v16);
    *v11 = v20;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain(v20);
      goto LABEL_38;
    }
    ++v11;
    result = swift_bridgeObjectRetain(v20);
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1003F11A8(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain(v21);
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain(v21);
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_1003F13A4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  _QWORD *v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v8 = sub_100053F2C((uint64_t *)&unk_1005D6840);
  v40 = *(_QWORD *)(v8 - 8);
  v41 = v8;
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v33 - v12;
  v42 = a4;
  v16 = *(_QWORD *)(a4 + 64);
  v15 = a4 + 64;
  v14 = v16;
  v38 = v15;
  v17 = -1 << *(_BYTE *)(v15 - 32);
  if (-v17 < 64)
    v18 = ~(-1 << -(char)v17);
  else
    v18 = -1;
  v19 = v18 & v14;
  if (!a2)
  {
    v20 = 0;
LABEL_38:
    v32 = v38;
    *a1 = v42;
    a1[1] = v32;
    a1[2] = ~v17;
    a1[3] = v20;
    a1[4] = v19;
    return;
  }
  if (!a3)
  {
    v20 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
    goto LABEL_40;
  v35 = -1 << *(_BYTE *)(v15 - 32);
  v36 = a1;
  v20 = 0;
  v21 = 0;
  v37 = (unint64_t)(63 - v17) >> 6;
  v34 = v37 - 1;
  v39 = a3;
  if (!v19)
    goto LABEL_9;
LABEL_8:
  v22 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  v23 = v22 | (v20 << 6);
  while (1)
  {
    ++v21;
    v27 = *(_QWORD *)(v42 + 56);
    v28 = (uint64_t *)(*(_QWORD *)(v42 + 48) + 16 * v23);
    v29 = *v28;
    v30 = v28[1];
    v31 = type metadata accessor for FMIPItemPairingState(0);
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(&v11[*(int *)(v41 + 48)], v27 + *(_QWORD *)(*(_QWORD *)(v31 - 8) + 72) * v23, v31);
    *(_QWORD *)v11 = v29;
    *((_QWORD *)v11 + 1) = v30;
    sub_10005DAA0((uint64_t)v11, (uint64_t)v13, (uint64_t *)&unk_1005D6840);
    sub_10005DAA0((uint64_t)v13, a2, (uint64_t *)&unk_1005D6840);
    if (v21 == v39)
    {
      swift_bridgeObjectRetain(v30);
LABEL_37:
      v17 = v35;
      a1 = v36;
      goto LABEL_38;
    }
    a2 += *(_QWORD *)(v40 + 72);
    swift_bridgeObjectRetain(v30);
    if (v19)
      goto LABEL_8;
LABEL_9:
    v24 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v24 >= v37)
      goto LABEL_33;
    v25 = *(_QWORD *)(v38 + 8 * v24);
    if (!v25)
    {
      v20 += 2;
      if (v24 + 1 >= v37)
      {
        v19 = 0;
        v20 = v24;
        goto LABEL_37;
      }
      v25 = *(_QWORD *)(v38 + 8 * v20);
      if (v25)
        goto LABEL_14;
      v26 = v24 + 2;
      if (v24 + 2 >= v37)
        goto LABEL_33;
      v25 = *(_QWORD *)(v38 + 8 * v26);
      if (!v25)
      {
        v20 = v24 + 3;
        if (v24 + 3 >= v37)
        {
          v19 = 0;
          v20 = v24 + 2;
          goto LABEL_37;
        }
        v25 = *(_QWORD *)(v38 + 8 * v20);
        if (v25)
        {
LABEL_14:
          v24 = v20;
          goto LABEL_18;
        }
        v26 = v24 + 4;
        if (v24 + 4 >= v37)
        {
LABEL_33:
          v19 = 0;
          goto LABEL_37;
        }
        v25 = *(_QWORD *)(v38 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v24 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_41;
            if (v24 >= v37)
            {
              v19 = 0;
              v20 = v34;
              goto LABEL_37;
            }
            v25 = *(_QWORD *)(v38 + 8 * v24);
            ++v26;
            if (v25)
              goto LABEL_18;
          }
        }
      }
      v24 = v26;
    }
LABEL_18:
    v19 = (v25 - 1) & v25;
    v23 = __clz(__rbit64(v25)) + (v24 << 6);
    v20 = v24;
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
}

uint64_t sub_1003F16B0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  _QWORD *v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v9 = a5(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = __chkstk_darwin(v11);
  v16 = (char *)&v33 - v15;
  v40 = a4;
  v19 = *(_QWORD *)(a4 + 56);
  v18 = a4 + 56;
  v17 = v19;
  v38 = v18;
  v20 = -1 << *(_BYTE *)(v18 - 24);
  if (-v20 < 64)
    v21 = ~(-1 << -(char)v20);
  else
    v21 = -1;
  v22 = v21 & v17;
  if (!a2)
  {
    v23 = 0;
    a3 = 0;
LABEL_38:
    v32 = v38;
    *a1 = v40;
    a1[1] = v32;
    a1[2] = ~v20;
    a1[3] = v23;
    a1[4] = v22;
    return a3;
  }
  if (!a3)
  {
    v23 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v35 = -1 << *(_BYTE *)(v18 - 24);
  v36 = a1;
  v23 = 0;
  v24 = 0;
  v37 = (unint64_t)(63 - v20) >> 6;
  v34 = v37 - 1;
  v39 = a3;
  if (!v22)
    goto LABEL_9;
LABEL_8:
  v25 = __clz(__rbit64(v22));
  v22 &= v22 - 1;
  v26 = v25 | (v23 << 6);
  while (1)
  {
    ++v24;
    v30 = *(_QWORD *)(v10 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v13, *(_QWORD *)(v40 + 48) + v30 * v26, v9);
    v31 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v31(v16, v13, v9);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v31)(a2, v16, v9);
    a3 = v39;
    if (v24 == v39)
      goto LABEL_37;
    a2 += v30;
    if (v22)
      goto LABEL_8;
LABEL_9:
    v27 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v27 >= v37)
      goto LABEL_32;
    v28 = *(_QWORD *)(v38 + 8 * v27);
    if (!v28)
      break;
LABEL_18:
    v22 = (v28 - 1) & v28;
    v26 = __clz(__rbit64(v28)) + (v27 << 6);
    v23 = v27;
  }
  v23 += 2;
  if (v27 + 1 >= v37)
  {
    v22 = 0;
    v23 = v27;
    goto LABEL_36;
  }
  v28 = *(_QWORD *)(v38 + 8 * v23);
  if (v28)
    goto LABEL_14;
  v29 = v27 + 2;
  if (v27 + 2 >= v37)
    goto LABEL_32;
  v28 = *(_QWORD *)(v38 + 8 * v29);
  if (v28)
    goto LABEL_17;
  v23 = v27 + 3;
  if (v27 + 3 >= v37)
  {
    v22 = 0;
    v23 = v27 + 2;
    goto LABEL_36;
  }
  v28 = *(_QWORD *)(v38 + 8 * v23);
  if (v28)
  {
LABEL_14:
    v27 = v23;
    goto LABEL_18;
  }
  v29 = v27 + 4;
  if (v27 + 4 >= v37)
  {
LABEL_32:
    v22 = 0;
LABEL_36:
    a3 = v24;
LABEL_37:
    v20 = v35;
    a1 = v36;
    goto LABEL_38;
  }
  v28 = *(_QWORD *)(v38 + 8 * v29);
  if (v28)
  {
LABEL_17:
    v27 = v29;
    goto LABEL_18;
  }
  while (1)
  {
    v27 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v27 >= v37)
    {
      v22 = 0;
      v23 = v34;
      goto LABEL_36;
    }
    v28 = *(_QWORD *)(v38 + 8 * v27);
    ++v29;
    if (v28)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_1003F1978(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  id v21;

  v5 = result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(void **)(*(_QWORD *)(a4 + 56) + 8 * v16);
    *v11 = v20;
    if (v13 == v10)
    {
      v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    result = v20;
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1003F1B70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  _QWORD *v37;
  _QWORD *v38;
  int *v40;
  uint64_t v41;
  unsigned int (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t *v43;
  _BYTE *v44;
  uint64_t v45;
  char v46;
  void (*v47)(_BYTE *, uint64_t);
  int *v48;
  _QWORD *v49;
  char v50;
  _QWORD *v51;
  _QWORD *v52;
  char v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int *v88;
  char v89;
  int *v90;
  _BYTE *v91;
  _BYTE *v92;
  _BYTE *v93;
  uint64_t v94;
  unsigned int (*v95)(uint64_t, uint64_t, uint64_t);
  uint64_t v96;
  _BYTE *v97;
  uint64_t v98;
  uint64_t v99;
  _BYTE *v100;
  char v101;
  void (*v102)(_BYTE *, uint64_t);
  _BYTE v103[12];
  int v104;
  uint64_t v105;
  int *v106;
  uint64_t v107;
  _BYTE *v108;
  _BYTE *v109;
  _BYTE *v110;
  _BYTE *v111;
  uint64_t v112;
  _BYTE *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;

  v114 = type metadata accessor for Date(0);
  v112 = *(_QWORD *)(v114 - 8);
  __chkstk_darwin(v114);
  v111 = &v103[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v107 = sub_100053F2C(&qword_1005D3430);
  __chkstk_darwin(v107);
  v113 = &v103[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  v7 = __chkstk_darwin(v6);
  v110 = &v103[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __chkstk_darwin(v7);
  v108 = &v103[-v10];
  __chkstk_darwin(v9);
  v109 = &v103[-v11];
  v12 = type metadata accessor for FMIPItem(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = &v103[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = sub_100053F2C(&qword_1005DAB00);
  __chkstk_darwin(v16);
  v18 = &v103[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  v20 = __chkstk_darwin(v19);
  v22 = &v103[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = __chkstk_darwin(v20);
  v25 = &v103[-v24];
  __chkstk_darwin(v23);
  v27 = &v103[-v26];
  v28 = *(_QWORD *)(a1 + 8);
  v29 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)a1 != *(_QWORD *)a2 || v28 != v29)
  {
    v30 = _stringCompareWithSmolCheck(_:_:expecting:)(*(_QWORD *)a1, v28, *(_QWORD *)a2, v29, 0);
    LOBYTE(v31) = 0;
    if ((v30 & 1) == 0)
      return v31 & 1;
  }
  v32 = *(_QWORD *)(a1 + 24);
  v33 = *(_QWORD *)(a2 + 24);
  if (v32)
  {
    if (!v33)
      goto LABEL_17;
    v34 = *(_QWORD *)(a1 + 16);
    v35 = *(_QWORD *)(a2 + 16);
    if (v34 != v35 || v32 != v33)
    {
      v36 = _stringCompareWithSmolCheck(_:_:expecting:)(v34, v32, v35, v33, 0);
      LOBYTE(v31) = 0;
      if ((v36 & 1) == 0)
        return v31 & 1;
    }
  }
  else if (v33)
  {
    goto LABEL_17;
  }
  v37 = *(_QWORD **)(a1 + 32);
  v38 = *(_QWORD **)(a2 + 32);
  if (!v37)
  {
    if (!v38)
      goto LABEL_16;
LABEL_17:
    LOBYTE(v31) = 0;
    return v31 & 1;
  }
  if (!v38 || (sub_1001F4AB0(v37, v38) & 1) == 0)
    goto LABEL_17;
LABEL_16:
  if (*(unsigned __int8 *)(a1 + 40) != *(unsigned __int8 *)(a2 + 40))
    goto LABEL_17;
  v40 = *(int **)(a1 + 48);
  v31 = *(_QWORD *)(a2 + 48);
  if (v40)
  {
    if (!v31)
      return v31 & 1;
    v105 = *(_QWORD *)(a2 + 48);
    v106 = v40;
    swift_bridgeObjectRetain(v105);
    swift_bridgeObjectRetain(v106);
    v104 = sub_1001F4B74((uint64_t)v106, v105);
    swift_bridgeObjectRelease(v106);
    swift_bridgeObjectRelease(v105);
    if ((v104 & 1) == 0)
      goto LABEL_17;
  }
  else if (v31)
  {
    goto LABEL_17;
  }
  v106 = (int *)type metadata accessor for FMDeviceDetailViewModel(0);
  sub_100007464(a1 + v106[9], (uint64_t)v27, (uint64_t *)&unk_1005D3AA0);
  sub_100007464(a2 + v106[9], (uint64_t)v25, (uint64_t *)&unk_1005D3AA0);
  v41 = (uint64_t)&v18[*(int *)(v16 + 48)];
  sub_100007464((uint64_t)v27, (uint64_t)v18, (uint64_t *)&unk_1005D3AA0);
  v105 = v41;
  sub_100007464((uint64_t)v25, v41, (uint64_t *)&unk_1005D3AA0);
  v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (v42((uint64_t)v18, 1, v12) == 1)
  {
    sub_1000051EC((uint64_t)v25, (uint64_t *)&unk_1005D3AA0);
    sub_1000051EC((uint64_t)v27, (uint64_t *)&unk_1005D3AA0);
    if (v42(v105, 1, v12) == 1)
    {
      sub_1000051EC((uint64_t)v18, (uint64_t *)&unk_1005D3AA0);
      goto LABEL_32;
    }
LABEL_29:
    v43 = &qword_1005DAB00;
    v44 = v18;
    goto LABEL_30;
  }
  sub_100007464((uint64_t)v18, (uint64_t)v22, (uint64_t *)&unk_1005D3AA0);
  if (v42(v105, 1, v12) == 1)
  {
    sub_1000051EC((uint64_t)v25, (uint64_t *)&unk_1005D3AA0);
    sub_1000051EC((uint64_t)v27, (uint64_t *)&unk_1005D3AA0);
    (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v22, v12);
    goto LABEL_29;
  }
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 32))(v15, v105, v12);
  v45 = sub_100008000(&qword_1005E3B80, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItem, (uint64_t)&protocol conformance descriptor for FMIPItem);
  v46 = dispatch thunk of static Equatable.== infix(_:_:)(v22, v15, v12, v45);
  v47 = *(void (**)(_BYTE *, uint64_t))(v13 + 8);
  v47(v15, v12);
  sub_1000051EC((uint64_t)v25, (uint64_t *)&unk_1005D3AA0);
  sub_1000051EC((uint64_t)v27, (uint64_t *)&unk_1005D3AA0);
  v47(v22, v12);
  sub_1000051EC((uint64_t)v18, (uint64_t *)&unk_1005D3AA0);
  if ((v46 & 1) == 0)
    goto LABEL_17;
LABEL_32:
  v48 = v106;
  v31 = v106[10];
  v49 = (_QWORD *)(a1 + v31);
  v50 = *(_BYTE *)(a1 + v31 + 8);
  v51 = (_QWORD *)(a2 + v31);
  LODWORD(v31) = *(unsigned __int8 *)(a2 + v31 + 8);
  if ((v50 & 1) != 0)
  {
    if (!(_DWORD)v31)
      return v31 & 1;
  }
  else
  {
    if (*v49 != *v51)
      LOBYTE(v31) = 1;
    if ((v31 & 1) != 0)
      goto LABEL_17;
  }
  v31 = v106[11];
  v52 = (_QWORD *)(a1 + v31);
  v53 = *(_BYTE *)(a1 + v31 + 8);
  v54 = (_QWORD *)(a2 + v31);
  LODWORD(v31) = *(unsigned __int8 *)(a2 + v31 + 8);
  if ((v53 & 1) != 0)
  {
    if (!(_DWORD)v31)
      return v31 & 1;
  }
  else
  {
    if (*v52 != *v54)
      LOBYTE(v31) = 1;
    if ((v31 & 1) != 0)
      goto LABEL_17;
  }
  v55 = v106[12];
  v56 = *(_QWORD *)(a1 + v55);
  v57 = *(_QWORD *)(a2 + v55);
  if (v56)
  {
    if (!v57)
      goto LABEL_17;
    swift_bridgeObjectRetain(*(_QWORD *)(a2 + v55));
    swift_bridgeObjectRetain(v56);
    v59 = sub_1001F4B90(v58, v57);
    swift_bridgeObjectRelease(v56);
    swift_bridgeObjectRelease(v57);
    if ((v59 & 1) == 0)
      goto LABEL_17;
  }
  else if (v57)
  {
    goto LABEL_17;
  }
  if (*(unsigned __int8 *)(a1 + v48[13]) != *(unsigned __int8 *)(a2 + v48[13]))
    goto LABEL_17;
  v60 = v48[14];
  v61 = (_QWORD *)(a1 + v60);
  v62 = *(_QWORD *)(a1 + v60 + 8);
  v63 = (_QWORD *)(a2 + v60);
  v64 = v63[1];
  if (v62)
  {
    if (!v64)
      goto LABEL_17;
    if (*v61 != *v63 || v62 != v64)
    {
      v65 = _stringCompareWithSmolCheck(_:_:expecting:)(*v61, v62, *v63, v64, 0);
      LOBYTE(v31) = 0;
      if ((v65 & 1) == 0)
        return v31 & 1;
    }
  }
  else if (v64)
  {
    goto LABEL_17;
  }
  if (*(unsigned __int8 *)(a1 + v48[15]) != *(unsigned __int8 *)(a2 + v48[15]))
    goto LABEL_17;
  v66 = v48[16];
  v67 = *(_QWORD *)(a1 + v66);
  v68 = *(_QWORD *)(a1 + v66 + 8);
  v69 = (_QWORD *)(a2 + v66);
  v70 = v69[1];
  if (v67 == *v69 && v68 == v70
    || (v71 = _stringCompareWithSmolCheck(_:_:expecting:)(v67, v68, *v69, v70, 0), LOBYTE(v31) = 0, (v71 & 1) != 0))
  {
    if ((v72 = v48[17],
          v73 = *(_QWORD *)(a1 + v72),
          v74 = *(_QWORD *)(a1 + v72 + 8),
          v75 = (_QWORD *)(a2 + v72),
          v76 = v75[1],
          v73 == *v75)
      && v74 == v76
      || (v77 = _stringCompareWithSmolCheck(_:_:expecting:)(v73, v74, *v75, v76, 0), LOBYTE(v31) = 0, (v77 & 1) != 0))
    {
      if ((v78 = v48[18],
            v79 = *(_QWORD *)(a1 + v78),
            v80 = *(_QWORD *)(a1 + v78 + 8),
            v81 = (_QWORD *)(a2 + v78),
            v82 = v81[1],
            v79 == *v81)
        && v80 == v82
        || (v83 = _stringCompareWithSmolCheck(_:_:expecting:)(v79, v80, *v81, v82, 0), LOBYTE(v31) = 0, (v83 & 1) != 0))
      {
        if ((static Date.== infix(_:_:)(a1 + v48[19], a2 + v48[19]) & 1) == 0
          || *(double *)(a1 + v106[20]) != *(double *)(a2 + v106[20]))
        {
          goto LABEL_17;
        }
        v84 = type metadata accessor for FMIPBatteryStatus(0);
        v85 = sub_100008000((unint64_t *)&unk_1005E3B70, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPBatteryStatus, (uint64_t)&protocol conformance descriptor for FMIPBatteryStatus);
        dispatch thunk of RawRepresentable.rawValue.getter(&v117, v84, v85);
        dispatch thunk of RawRepresentable.rawValue.getter(&v115, v84, v85);
        v86 = v118;
        v87 = v116;
        if (v117 == v115 && v118 == v116)
        {
          swift_bridgeObjectRelease_n(v118, 2);
          v88 = v106;
        }
        else
        {
          v89 = _stringCompareWithSmolCheck(_:_:expecting:)(v117, v118, v115, v116, 0);
          swift_bridgeObjectRelease(v86);
          swift_bridgeObjectRelease(v87);
          LOBYTE(v31) = 0;
          v88 = v106;
          if ((v89 & 1) == 0)
            return v31 & 1;
        }
        if (*(_QWORD *)(a1 + v88[22]) != *(_QWORD *)(a2 + v88[22])
          || *(_QWORD *)(a1 + v106[23]) != *(_QWORD *)(a2 + v106[23])
          || *(unsigned __int8 *)(a1 + v106[24]) != *(unsigned __int8 *)(a2 + v106[24])
          || *(unsigned __int8 *)(a1 + v106[25]) != *(unsigned __int8 *)(a2 + v106[25])
          || *(unsigned __int8 *)(a1 + v106[26]) != *(unsigned __int8 *)(a2 + v106[26])
          || *(unsigned __int8 *)(a1 + v106[27]) != *(unsigned __int8 *)(a2 + v106[27])
          || *(unsigned __int8 *)(a1 + v106[28]) != *(unsigned __int8 *)(a2 + v106[28])
          || *(unsigned __int8 *)(a1 + v106[29]) != *(unsigned __int8 *)(a2 + v106[29])
          || *(unsigned __int8 *)(a1 + v106[30]) != *(unsigned __int8 *)(a2 + v106[30])
          || *(unsigned __int8 *)(a1 + v106[31]) != *(unsigned __int8 *)(a2 + v106[31])
          || *(unsigned __int8 *)(a1 + v106[32]) != *(unsigned __int8 *)(a2 + v106[32]))
        {
          goto LABEL_17;
        }
        v90 = v106;
        v91 = v109;
        sub_100007464(a1 + v106[33], (uint64_t)v109, (uint64_t *)&unk_1005D3320);
        v92 = v108;
        sub_100007464(a2 + v90[33], (uint64_t)v108, (uint64_t *)&unk_1005D3320);
        v93 = v113;
        v94 = (uint64_t)&v113[*(int *)(v107 + 48)];
        sub_100007464((uint64_t)v91, (uint64_t)v113, (uint64_t *)&unk_1005D3320);
        sub_100007464((uint64_t)v92, v94, (uint64_t *)&unk_1005D3320);
        v95 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v112 + 48);
        if (v95((uint64_t)v93, 1, v114) == 1)
        {
          sub_1000051EC((uint64_t)v108, (uint64_t *)&unk_1005D3320);
          sub_1000051EC((uint64_t)v109, (uint64_t *)&unk_1005D3320);
          if (v95(v94, 1, v114) == 1)
          {
            sub_1000051EC((uint64_t)v113, (uint64_t *)&unk_1005D3320);
            goto LABEL_91;
          }
        }
        else
        {
          sub_100007464((uint64_t)v113, (uint64_t)v110, (uint64_t *)&unk_1005D3320);
          if (v95(v94, 1, v114) != 1)
          {
            v97 = v111;
            v96 = v112;
            v98 = v114;
            (*(void (**)(_BYTE *, uint64_t, uint64_t))(v112 + 32))(v111, v94, v114);
            v99 = sub_100008000((unint64_t *)&qword_1005D3438, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
            v100 = v110;
            v101 = dispatch thunk of static Equatable.== infix(_:_:)(v110, v97, v98, v99);
            v102 = *(void (**)(_BYTE *, uint64_t))(v96 + 8);
            v102(v97, v98);
            sub_1000051EC((uint64_t)v108, (uint64_t *)&unk_1005D3320);
            sub_1000051EC((uint64_t)v109, (uint64_t *)&unk_1005D3320);
            v102(v100, v98);
            sub_1000051EC((uint64_t)v113, (uint64_t *)&unk_1005D3320);
            if ((v101 & 1) == 0)
              goto LABEL_17;
LABEL_91:
            if (*(unsigned __int8 *)(a1 + v106[34]) == *(unsigned __int8 *)(a2 + v106[34])
              && *(unsigned __int8 *)(a1 + v106[35]) == *(unsigned __int8 *)(a2 + v106[35])
              && *(unsigned __int8 *)(a1 + v106[36]) == *(unsigned __int8 *)(a2 + v106[36])
              && *(unsigned __int8 *)(a1 + v106[37]) == *(unsigned __int8 *)(a2 + v106[37])
              && (sub_1001F4D50(*(_QWORD *)(a1 + v106[38]), *(_QWORD *)(a2 + v106[38])) & 1) != 0
              && *(unsigned __int8 *)(a1 + v106[39]) == *(unsigned __int8 *)(a2 + v106[39])
              && *(unsigned __int8 *)(a1 + v106[40]) == *(unsigned __int8 *)(a2 + v106[40])
              && *(unsigned __int8 *)(a1 + v106[41]) == *(unsigned __int8 *)(a2 + v106[41])
              && *(unsigned __int8 *)(a1 + v106[42]) == *(unsigned __int8 *)(a2 + v106[42]))
            {
              LOBYTE(v31) = *(_BYTE *)(a1 + v106[43]) ^ *(_BYTE *)(a2 + v106[43]) ^ 1;
              return v31 & 1;
            }
            goto LABEL_17;
          }
          sub_1000051EC((uint64_t)v108, (uint64_t *)&unk_1005D3320);
          sub_1000051EC((uint64_t)v109, (uint64_t *)&unk_1005D3320);
          (*(void (**)(_BYTE *, uint64_t))(v112 + 8))(v110, v114);
        }
        v43 = &qword_1005D3430;
        v44 = v113;
LABEL_30:
        sub_1000051EC((uint64_t)v44, v43);
        goto LABEL_17;
      }
    }
  }
  return v31 & 1;
}

_QWORD *sub_1003F26FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *result;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t i;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __n128 v21;
  char v22;
  void (*v23)(char *, char *, uint64_t, __n128);
  _QWORD *v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD v27[2];
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t (*v33)(char *, unint64_t, uint64_t);
  _QWORD *v34;

  v31 = a3;
  v6 = type metadata accessor for FMIPDevice(0);
  v7 = __chkstk_darwin(v6);
  v32 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)v27 - v10;
  result = _swiftEmptyArrayStorage;
  v34 = _swiftEmptyArrayStorage;
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v27[1] = v3;
    v28 = v9;
    v14 = *(_QWORD *)(v9 + 72);
    v29 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v30 = a2;
    v15 = a1 + v29;
    v33 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v9 + 16);
    v16 = v9;
    for (i = v33(v11, a1 + v29, v6); ; i = v33(v11, v15, v6))
    {
      v18 = FMIPDevice.baIdentifier.getter(i);
      if (!v19)
        break;
      v20 = v19;
      if (v18 == a2 && v19 == v31)
      {
        v21 = swift_bridgeObjectRelease(v19);
      }
      else
      {
        v22 = _stringCompareWithSmolCheck(_:_:expecting:)(v18, v19, a2, v31, 0);
        v21 = swift_bridgeObjectRelease(v20);
        if ((v22 & 1) == 0)
          break;
      }
      v23 = *(void (**)(char *, char *, uint64_t, __n128))(v16 + 32);
      v23(v32, v11, v6, v21);
      v24 = v34;
      if ((swift_isUniquelyReferenced_nonNull_native(v34) & 1) == 0)
      {
        sub_100111D20(0, v24[2] + 1, 1);
        v24 = v34;
      }
      v26 = v24[2];
      v25 = v24[3];
      if (v26 >= v25 >> 1)
      {
        sub_100111D20(v25 > 1, v26 + 1, 1);
        v24 = v34;
      }
      v24[2] = v26 + 1;
      ((void (*)(char *, char *, uint64_t))v23)((char *)v24 + v29 + v26 * v14, v32, v6);
      v34 = v24;
      a2 = v30;
      v16 = v28;
LABEL_4:
      v15 += v14;
      if (!--v13)
        return v34;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v6);
    goto LABEL_4;
  }
  return result;
}

uint64_t sub_1003F2910(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(char *, uint64_t, uint64_t);
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  void (*v75)(char *, _QWORD *);
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(char *, uint64_t);
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  __n128 v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  void (*v112)(char *, uint64_t);
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  char v125;
  uint64_t v126;
  uint64_t v127;
  char v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  uint64_t v133;
  _BOOL8 v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  uint64_t v140;
  char *v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t result;
  _QWORD *v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  unint64_t v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char v159;
  uint64_t v160;
  void (*v161)(char *, uint64_t);
  void (*v162)(char *, char *, uint64_t);
  uint64_t countAndFlagsBits;
  unint64_t v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  __n128 v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  void (*v174)(char *, _QWORD, uint64_t);
  uint64_t v175;
  char v176;
  char *v177;
  void (*v178)(char *, uint64_t);
  uint64_t v179;
  __n128 v180;
  uint64_t v181;
  char v182;
  uint64_t (*v183)(char *, uint64_t);
  uint64_t v184;
  void (*v185)(char *, uint64_t);
  char *v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  char *v191;
  char v192;
  char *v193;
  uint64_t (*v194)(char *, uint64_t, uint64_t);
  uint64_t v195;
  char *v196;
  uint64_t v197;
  char v198;
  void (*v199)(char *, uint64_t);
  char *v200;
  uint64_t v201;
  char *v202;
  char *v203;
  uint64_t v204;
  char *v205;
  char v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t (*v210)(char *, uint64_t);
  uint64_t v211;
  char *v212;
  char *v213;
  uint64_t v214;
  char v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  char *v219;
  char *v220;
  unsigned __int8 v221;
  uint64_t (*v222)(char *, uint64_t);
  uint64_t v223;
  uint64_t v224;
  unsigned __int8 v225;
  uint64_t v226;
  uint64_t v227;
  unsigned __int8 v228;
  uint64_t v229;
  uint64_t v230;
  unsigned __int8 v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  unsigned __int8 v237;
  uint64_t v238;
  unsigned __int8 v239;
  char *v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  char v246;
  void (*v247)(char *, uint64_t);
  uint64_t v248;
  uint64_t (*v249)(char *, uint64_t, uint64_t);
  char *v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  uint64_t v254;
  uint64_t v255;
  char *v256;
  uint64_t v257;
  uint64_t v258;
  char v259;
  char v260;
  void (*v261)(char *, uint64_t);
  uint64_t (*v262)(char *, uint64_t);
  uint64_t v263;
  uint64_t v264;
  char v265;
  void (*v266)(char *, uint64_t);
  char *v267;
  char *v268;
  uint64_t v269;
  uint64_t v270;
  void (*v271)(char *, uint64_t);
  char *v272;
  char *v273;
  uint64_t v274;
  uint64_t v275;
  char v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  char *v281;
  char *v282;
  uint64_t v283;
  char v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  Swift::String v288;
  unint64_t v289;
  __n128 v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  int v294;
  char *v295;
  char *v296;
  uint64_t v297;
  char *v298;
  uint64_t v299;
  char *v300;
  char *v301;
  char *v302;
  char *v303;
  char *v304;
  char *v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t (*v308)(uint64_t, uint64_t, uint64_t);
  uint64_t v309;
  char *v310;
  char *v311;
  char *v312;
  char *v313;
  char *v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  void (*v318)(char *, uint64_t);
  char *v319;
  uint64_t v320;
  uint64_t v321;
  char *v322;
  char *v323;
  uint64_t v324;
  char *v325;
  uint64_t v326;
  uint64_t v327;
  char *v328;
  char *v329;
  char *v330;
  uint64_t v331;
  char *v332;
  char *v333;
  uint64_t v334;
  char *v335;
  uint64_t v336;
  void (*v337)(char *, uint64_t, uint64_t);
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  _QWORD v341[2];
  Swift::String v342;

  v294 = a4;
  v292 = a3;
  v291 = a2;
  v316 = type metadata accessor for FMIPDeviceStatus(0);
  v315 = *(_QWORD *)(v316 - 8);
  v5 = __chkstk_darwin(v316);
  v314 = (char *)&v291 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v313 = (char *)&v291 - v7;
  v320 = type metadata accessor for FMIPDevice(0);
  v321 = *(_QWORD *)(v320 - 8);
  v8 = __chkstk_darwin(v320);
  v311 = (char *)&v291 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v323 = (char *)&v291 - v11;
  v12 = __chkstk_darwin(v10);
  v301 = (char *)&v291 - v13;
  v14 = __chkstk_darwin(v12);
  v300 = (char *)&v291 - v15;
  __chkstk_darwin(v14);
  v302 = (char *)&v291 - v16;
  v299 = type metadata accessor for FMIPDeviceConnectedStateType(0);
  v297 = *(_QWORD *)(v299 - 8);
  v17 = __chkstk_darwin(v299);
  v296 = (char *)&v291 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v295 = (char *)&v291 - v19;
  v339 = type metadata accessor for FMIPItem(0);
  v326 = *(_QWORD *)(v339 - 8);
  v20 = __chkstk_darwin(v339);
  v333 = (char *)&v291 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v325 = (char *)&v291 - v22;
  v327 = type metadata accessor for FMIPFeatures(0);
  v324 = *(_QWORD *)(v327 - 8);
  v23 = __chkstk_darwin(v327);
  v329 = (char *)&v291 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v328 = (char *)&v291 - v25;
  v26 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  __chkstk_darwin(v26);
  v337 = (void (*)(char *, uint64_t, uint64_t))((char *)&v291 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  v307 = type metadata accessor for FMIPActionStatus(0);
  v306 = *(_QWORD *)(v307 - 8);
  v28 = __chkstk_darwin(v307);
  v305 = (char *)&v291 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  v304 = (char *)&v291 - v30;
  v31 = sub_100053F2C((uint64_t *)&unk_1005E3B00);
  __chkstk_darwin(v31);
  v330 = (char *)&v291 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v336 = type metadata accessor for FMIPEraseMetadata(0);
  v331 = *(_QWORD *)(v336 - 8);
  __chkstk_darwin(v336);
  v303 = (char *)&v291 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_100053F2C((uint64_t *)&unk_1005D6700);
  __chkstk_darwin(v34);
  v319 = (char *)&v291 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v318 = (void (*)(char *, uint64_t))type metadata accessor for FMIPDeviceState(0);
  v317 = *((_QWORD *)v318 - 1);
  v36 = __chkstk_darwin(v318);
  v38 = (char *)&v291 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  v40 = (char *)&v291 - v39;
  v41 = sub_100053F2C(&qword_1005D72D0);
  v42 = __chkstk_darwin(v41);
  v310 = (char *)&v291 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  v45 = (char *)&v291 - v44;
  v46 = type metadata accessor for FMItemCapabilities(0);
  v47 = *(_QWORD *)(v46 - 8);
  v48 = __chkstk_darwin(v46);
  v312 = (char *)&v291 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __chkstk_darwin(v48);
  v298 = (char *)&v291 - v51;
  v52 = __chkstk_darwin(v50);
  v332 = (char *)&v291 - v53;
  v54 = __chkstk_darwin(v52);
  v335 = (char *)&v291 - v55;
  v56 = __chkstk_darwin(v54);
  v58 = (char *)&v291 - v57;
  v59 = __chkstk_darwin(v56);
  v61 = (char *)&v291 - v60;
  v340 = a1;
  FMIPDevice.itemGroup.getter(v59);
  v62 = type metadata accessor for FMIPItemGroup(0);
  v63 = *(_QWORD *)(v62 - 8);
  v64 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v63 + 48);
  v65 = v64(v45, 1, v62);
  v338 = v46;
  v334 = v47;
  v322 = v61;
  v309 = v62;
  v293 = v63;
  v308 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v64;
  if (v65 == 1)
  {
    sub_1000051EC((uint64_t)v45, &qword_1005D72D0);
    v342._countAndFlagsBits = 0;
    v66 = sub_100008000(&qword_1005E3B30, (uint64_t (*)(uint64_t))&type metadata accessor for FMItemCapabilities, (uint64_t)&protocol conformance descriptor for FMItemCapabilities);
    v67 = dispatch thunk of OptionSet.init(rawValue:)(&v342, v46, v66);
  }
  else
  {
    FMIPItemGroup.capabilities.getter();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v45, v62);
    v67 = (*(uint64_t (**)(char *, char *, uint64_t))(v47 + 32))(v61, v58, v46);
  }
  v68 = v331;
  v69 = (uint64_t)v319;
  v70 = v318;
  v71 = v317;
  v72 = FMIPDevice.state.getter(v67);
  static FMIPDeviceState.isThisDevice.getter(v72);
  v73 = sub_100008000((unint64_t *)&qword_1005D4158, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPDeviceState, (uint64_t)&protocol conformance descriptor for FMIPDeviceState);
  v74 = dispatch thunk of SetAlgebra.isSuperset(of:)(v38, v70, v73);
  v75 = *(void (**)(char *, _QWORD *))(v71 + 8);
  v75(v38, v70);
  v76 = ((uint64_t (*)(char *, _QWORD))v75)(v40, v70);
  v77 = FMIPDevice.state.getter(v76);
  static FMIPDeviceState.isDeviceWithYou.getter(v77);
  v78 = dispatch thunk of SetAlgebra.isSuperset(of:)(v38, v70, v73);
  v75(v38, v70);
  v79 = ((uint64_t (*)(char *, _QWORD))v75)(v40, v70);
  FMIPDevice.bestLocation.getter(v79);
  v80 = type metadata accessor for FMIPLocation(0);
  v81 = *(_QWORD *)(v80 - 8);
  v82 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v69, 1, v80);
  if ((_DWORD)v82 == 1)
  {
    v83 = sub_1000051EC(v69, (uint64_t *)&unk_1005D6700);
    LODWORD(v84) = 0;
  }
  else
  {
    v85 = (void *)FMIPLocation.location.getter(v82);
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v69, v80);

    LODWORD(v84) = (v74 | v78) ^ 1;
  }
  v86 = v324;
  v88 = v336;
  v87 = (uint64_t)v337;
  v89 = (uint64_t)v330;
  FMIPDevice.eraseMetadata.getter(v83);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v89, 1, v88) == 1)
  {
    v90 = sub_1000051EC(v89, (uint64_t *)&unk_1005E3B00);
    v91 = 1;
  }
  else
  {
    v92 = v303;
    v93 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v68 + 32))(v303, v89, v88);
    LODWORD(v337) = (_DWORD)v84;
    v84 = v304;
    FMIPEraseMetadata.status.getter(v93);
    v94 = v306;
    v95 = v305;
    v96 = v307;
    (*(void (**)(char *, _QWORD, uint64_t))(v306 + 104))(v305, enum case for FMIPActionStatus.eraseCancelled(_:), v307);
    v97 = sub_100008000(&qword_1005E3B50, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPActionStatus, (uint64_t)&protocol conformance descriptor for FMIPActionStatus);
    v91 = dispatch thunk of static Equatable.== infix(_:_:)(v84, v95, v96, v97);
    v98 = *(void (**)(char *, uint64_t))(v94 + 8);
    v98(v95, v96);
    v99 = v84;
    LOBYTE(v84) = (_BYTE)v337;
    v98(v99, v96);
    v100 = v92;
    v86 = v324;
    v90 = (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v100, v88);
  }
  FMIPDevice.wipedTimestamp.getter(v90);
  v101 = type metadata accessor for Date(0);
  v102 = 1;
  v103 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 48))(v87, 1, v101);
  sub_1000051EC(v87, (uint64_t *)&unk_1005D3320);
  v105 = FMIPDevice.pairingIncomplete.getter(v104);
  if ((v105 & 1) != 0 || v103 != 1 || (v91 & 1) == 0)
    goto LABEL_81;
  v106 = v328;
  v107 = ((uint64_t (*)(void))FMIPDevice.features.getter)();
  v108 = v329;
  static FMIPFeatures.isWipeEnabled.getter(v107);
  v109 = sub_100008000((unint64_t *)&qword_1005D72F0, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPFeatures, (uint64_t)&protocol conformance descriptor for FMIPFeatures);
  v110 = v327;
  v111 = dispatch thunk of SetAlgebra.isSuperset(of:)(v108, v327, v109);
  v112 = *(void (**)(char *, uint64_t))(v86 + 8);
  v112(v108, v110);
  v113 = ((uint64_t (*)(char *, uint64_t))v112)(v106, v110);
  if ((v111 & 1) != 0)
    v114 = 3;
  else
    v114 = 1;
  v115 = FMIPDevice.features.getter(v113);
  static FMIPFeatures.isLockAndMessageEnabled.getter(v115);
  v116 = dispatch thunk of SetAlgebra.isSuperset(of:)(v108, v110, v109);
  v112(v108, v110);
  v117 = ((uint64_t (*)(char *, uint64_t))v112)(v106, v110);
  if ((v116 & 1) != 0)
    v114 |= 4uLL;
  v118 = FMIPDevice.features.getter(v117);
  static FMIPFeatures.isLostModeEnabled.getter(v118);
  v119 = dispatch thunk of SetAlgebra.isSuperset(of:)(v108, v110, v109);
  v112(v108, v110);
  v120 = ((uint64_t (*)(char *, uint64_t))v112)(v106, v110);
  if ((v119 & 1) != 0)
    v114 |= 8uLL;
  v121 = FMIPDevice.features.getter(v120);
  static FMIPFeatures.isPlaySoundEnabled.getter(v121);
  v122 = dispatch thunk of SetAlgebra.isSuperset(of:)(v108, v110, v109);
  v112(v108, v110);
  v123 = ((uint64_t (*)(char *, uint64_t))v112)(v106, v110);
  if ((v122 & 1) != 0)
    v114 |= 0x20uLL;
  v124 = FMIPDevice.features.getter(v123);
  static FMIPFeatures.isMultiChannelSoundEnabled.getter(v124);
  v125 = dispatch thunk of SetAlgebra.isSuperset(of:)(v108, v110, v109);
  v112(v108, v110);
  v126 = ((uint64_t (*)(char *, uint64_t))v112)(v106, v110);
  if ((v125 & 1) != 0)
    v114 |= 0x400uLL;
  v127 = FMIPDevice.features.getter(v126);
  static FMIPFeatures.isBluetoothRequired.getter(v127);
  v128 = dispatch thunk of SetAlgebra.isSuperset(of:)(v108, v110, v109);
  v112(v108, v110);
  v129 = ((uint64_t (*)(char *, uint64_t))v112)(v106, v110);
  if ((v128 & 1) != 0)
    v114 |= 0x800uLL;
  v130 = FMIPDevice.features.getter(v129);
  static FMIPFeatures.isStopSoundSupported.getter(v130);
  v319 = (char *)v109;
  v131 = dispatch thunk of SetAlgebra.isSuperset(of:)(v108, v110, v109);
  v112(v108, v110);
  v318 = v112;
  v112(v106, v110);
  v132 = v114 | 0x1000;
  if ((v131 & 1) == 0)
    v132 = v114;
  if ((v84 & ((v132 & 0x80) == 0)) != 0)
    v133 = v132 | 0x80;
  else
    v133 = v132;
  v134 = FMIPDevice.canEnableNotifyWhenFound()();
  if (v134 && (v133 & 0x40) == 0)
    v135 = v133 | 0x40;
  else
    v135 = v133;
  v136 = (uint64_t)v310;
  FMIPDevice.itemGroup.getter(v134);
  v137 = v309;
  v138 = v308(v136, 1, v309);
  if ((_DWORD)v138 == 1)
  {
    sub_1000051EC(v136, &qword_1005D72D0);
    v139 = _swiftEmptyArrayStorage;
    v140 = v320;
    v141 = v302;
    v142 = v296;
    v143 = v295;
    goto LABEL_49;
  }
  v144 = FMIPItemGroup.items.getter(v138);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v293 + 8))(v136, v137);
  v146 = _swiftEmptyArrayStorage;
  v342._countAndFlagsBits = (uint64_t)_swiftEmptyArrayStorage;
  v331 = *(_QWORD *)(v144 + 16);
  v317 = v135;
  if (!v331)
  {
LABEL_48:
    v140 = v320;
    v142 = v296;
    v143 = v295;
    v166 = v292;
    v167 = v291;
    swift_bridgeObjectRelease(v144);
    __chkstk_darwin(v168);
    *(&v291 - 2) = v167;
    *(&v291 - 1) = v166;
    v139 = (_QWORD *)sub_1003DBDFC((uint64_t (*)(_QWORD))sub_1003F6FE0, (uint64_t)(&v291 - 4), (uint64_t)v146, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPItem, (void (*)(BOOL, uint64_t, uint64_t))sub_100111D4C);
    v141 = v302;
    v135 = v317;
LABEL_49:
    v169 = v139[2];
    v170 = swift_bridgeObjectRelease(v139);
    v171 = v135 | 0x82000;
    if (!v169)
      v171 = v135;
    v339 = v171;
    v172 = v340;
    FMIPDevice.deviceConnectedState.getter(v170);
    v173 = v297;
    v174 = *(void (**)(char *, _QWORD, uint64_t))(v297 + 104);
    v175 = v299;
    v174(v142, enum case for FMIPDeviceConnectedStateType.connected(_:), v299);
    v176 = static FMIPDeviceConnectedStateType.== infix(_:_:)(v143, v142);
    v177 = v143;
    v178 = *(void (**)(char *, uint64_t))(v173 + 8);
    v178(v142, v175);
    v178(v177, v175);
    v179 = v321;
    v337 = *(void (**)(char *, uint64_t, uint64_t))(v321 + 16);
    v337(v141, v172, v140);
    if ((v176 & 1) != 0)
    {
      v336 = *(_QWORD *)(v179 + 8);
      v181 = ((uint64_t (*)(char *, uint64_t))v336)(v141, v140);
    }
    else
    {
      FMIPDevice.deviceConnectedState.getter(v180);
      v174(v142, enum case for FMIPDeviceConnectedStateType.detectedNearby(_:), v175);
      v182 = static FMIPDeviceConnectedStateType.== infix(_:_:)(v177, v142);
      v178(v142, v175);
      v178(v177, v175);
      v183 = *(uint64_t (**)(char *, uint64_t))(v179 + 8);
      v181 = v183(v141, v140);
      v336 = (uint64_t)v183;
      if ((v182 & 1) == 0)
      {
        v184 = v327;
        v185 = v318;
        v186 = v319;
        v187 = v339;
        v188 = v340;
        goto LABEL_57;
      }
    }
    v184 = v327;
    v185 = v318;
    v186 = v319;
    v187 = v339;
    v188 = v340;
    if ((v294 & 1) != 0)
      v187 = v339 | 0x80000;
LABEL_57:
    v339 = v187;
    v189 = v328;
    v190 = FMIPDevice.features.getter(v181);
    v191 = v329;
    static FMIPFeatures.isNotifyWhenFoundSupported.getter(v190);
    v192 = dispatch thunk of SetAlgebra.isSuperset(of:)(v191, v184, v186);
    v185(v191, v184);
    v185(v189, v184);
    v193 = v300;
    v194 = (uint64_t (*)(char *, uint64_t, uint64_t))v337;
    v195 = ((uint64_t (*)(char *, uint64_t, uint64_t))v337)(v300, v188, v140);
    if ((v192 & 1) != 0)
    {
      v196 = v193;
      v197 = FMIPDevice.features.getter(v195);
      static FMIPFeatures.isMultiChannelSoundEnabled.getter(v197);
      v198 = dispatch thunk of SetAlgebra.isSuperset(of:)(v191, v184, v186);
      v185(v191, v184);
      v185(v189, v184);
      v199 = (void (*)(char *, uint64_t))v336;
      ((void (*)(char *, uint64_t))v336)(v196, v140);
      v200 = v301;
      v201 = v194(v301, v340, v140);
      v202 = v298;
      if ((v198 & 1) == 0)
      {
        v203 = v328;
        v204 = FMIPDevice.features.getter(v201);
        v205 = v329;
        static FMIPFeatures.isStopSoundSupported.getter(v204);
        v206 = dispatch thunk of SetAlgebra.isSuperset(of:)(v205, v184, v319);
        v185(v205, v184);
        v185(v203, v184);
        v199(v200, v140);
        v207 = v334;
        v208 = v338;
        v209 = (*(uint64_t (**)(char *, char *, uint64_t))(v334 + 16))(v202, v322, v338);
        if ((v206 & 1) == 0)
        {
          v210 = *(uint64_t (**)(char *, uint64_t))(v207 + 8);
          v211 = v210(v202, v208);
          goto LABEL_64;
        }
LABEL_63:
        v213 = v335;
        static FMItemCapabilities.canEnableNotifyWhenFound.getter(v209);
        v214 = sub_100008000((unint64_t *)&qword_1005E3B40, (uint64_t (*)(uint64_t))&type metadata accessor for FMItemCapabilities, (uint64_t)&protocol conformance descriptor for FMItemCapabilities);
        v215 = dispatch thunk of SetAlgebra.isSuperset(of:)(v213, v208, v214);
        v210 = *(uint64_t (**)(char *, uint64_t))(v207 + 8);
        v210(v213, v208);
        v211 = v210(v202, v208);
        if ((v215 & 1) == 0)
        {
          v216 = v339;
LABEL_67:
          v217 = v328;
          v218 = FMIPDevice.features.getter(v211);
          v219 = v329;
          static FMIPFeatures.isNotifyWhenDetachedSupported.getter(v218);
          v220 = v319;
          v221 = dispatch thunk of SetAlgebra.isSuperset(of:)(v219, v184, v319);
          v222 = (uint64_t (*)(char *, uint64_t))v318;
          v318(v219, v184);
          v223 = v222(v217, v184);
          if ((v221 & ((v216 & 0x10000) == 0)) != 0)
            v216 |= 0x10000uLL;
          v224 = FMIPDevice.features.getter(v223);
          static FMIPFeatures.isShowContactDetailsSupported.getter(v224);
          v225 = dispatch thunk of SetAlgebra.isSuperset(of:)(v219, v184, v220);
          v222(v219, v184);
          v226 = v222(v217, v184);
          if ((v225 & ((v216 & 0x20000) == 0)) != 0)
            v216 |= 0x20000uLL;
          v227 = FMIPDevice.features.getter(v226);
          static FMIPFeatures.isRemoveUIv2Supported.getter(v227);
          v228 = dispatch thunk of SetAlgebra.isSuperset(of:)(v219, v184, v220);
          v222(v219, v184);
          v229 = v222(v217, v184);
          if ((v228 & ((v216 & 0x40000) == 0)) != 0)
            v216 |= 0x40000uLL;
          v230 = FMIPDevice.features.getter(v229);
          static FMIPFeatures.isLeashingSupported.getter(v230);
          v231 = dispatch thunk of SetAlgebra.isSuperset(of:)(v219, v184, v220);
          v222(v219, v184);
          v232 = v222(v217, v184);
          v233 = v216 | 0x4000;
          if ((v231 & ((v216 & 0x4000) == 0)) != 0)
            v216 |= 0x4000uLL;
          v234 = v335;
          static FMItemCapabilities.canEnableLeashing.getter(v232);
          v235 = sub_100008000((unint64_t *)&qword_1005E3B40, (uint64_t (*)(uint64_t))&type metadata accessor for FMItemCapabilities, (uint64_t)&protocol conformance descriptor for FMItemCapabilities);
          v236 = v338;
          v237 = dispatch thunk of SetAlgebra.isSuperset(of:)(v234, v338, v235);
          v238 = v210(v234, v236);
          if ((v237 & ((v216 & 0x4000) == 0)) != 0)
            v216 = v233;
          static FMItemCapabilities.canEnableLostMode.getter(v238);
          v239 = dispatch thunk of SetAlgebra.isSuperset(of:)(v234, v236, v235);
          v105 = v210(v234, v236);
          if ((v239 & ((v216 & 8) == 0)) != 0)
            v102 = v216 | 8;
          else
            v102 = v216;
          v86 = v324;
LABEL_81:
          v240 = v313;
          v241 = v340;
          FMIPDevice.status.getter(v105);
          v242 = v315;
          v243 = v314;
          v244 = v316;
          (*(void (**)(char *, _QWORD, uint64_t))(v315 + 104))(v314, enum case for FMIPDeviceStatus.online(_:), v316);
          v245 = sub_100008000(&qword_1005E3B38, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPDeviceStatus, (uint64_t)&protocol conformance descriptor for FMIPDeviceStatus);
          v246 = dispatch thunk of static Equatable.== infix(_:_:)(v240, v243, v244, v245);
          v247 = *(void (**)(char *, uint64_t))(v242 + 8);
          v247(v243, v244);
          v247(v240, v244);
          v248 = v321;
          v249 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v321 + 16);
          v250 = v323;
          v251 = v320;
          v252 = v249(v323, v241, v320);
          v337 = (void (*)(char *, uint64_t, uint64_t))v102;
          if ((v246 & 1) != 0)
          {
            v253 = v328;
            v254 = FMIPDevice.features.getter(v252);
            v255 = v86;
            v256 = v329;
            static FMIPFeatures.isRemoveUIv2Supported.getter(v254);
            v257 = sub_100008000((unint64_t *)&qword_1005D72F0, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPFeatures, (uint64_t)&protocol conformance descriptor for FMIPFeatures);
            v258 = v327;
            v259 = dispatch thunk of SetAlgebra.isSuperset(of:)(v256, v327, v257);
            v250 = v323;
            v260 = v259;
            v261 = *(void (**)(char *, uint64_t))(v255 + 8);
            v261(v256, v258);
            v261(v253, v258);
          }
          else
          {
            v260 = 1;
            v258 = v327;
            v253 = v328;
            v255 = v86;
            v256 = v329;
          }
          v262 = *(uint64_t (**)(char *, uint64_t))(v248 + 8);
          v263 = v262(v250, v251);
          v264 = FMIPDevice.features.getter(v263);
          static FMIPFeatures.isRemoveEnabled.getter(v264);
          v339 = sub_100008000((unint64_t *)&qword_1005D72F0, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPFeatures, (uint64_t)&protocol conformance descriptor for FMIPFeatures);
          v265 = dispatch thunk of SetAlgebra.isSuperset(of:)(v256, v258, v339);
          v266 = *(void (**)(char *, uint64_t))(v255 + 8);
          v266(v256, v258);
          v266(v253, v258);
          v267 = v312;
          v268 = v322;
          v269 = (*(uint64_t (**)(char *, char *, uint64_t))(v334 + 16))(v312, v322, v338);
          if ((v265 & 1) != 0 && (v260 & 1) != 0)
          {
            v270 = v251;
            v271 = *(void (**)(char *, uint64_t))(v334 + 8);
            v271(v267, v338);
            v272 = v311;
            v249(v311, v340, v270);
          }
          else
          {
            v273 = v335;
            static FMItemCapabilities.canRemove.getter(v269);
            v274 = sub_100008000((unint64_t *)&qword_1005E3B40, (uint64_t (*)(uint64_t))&type metadata accessor for FMItemCapabilities, (uint64_t)&protocol conformance descriptor for FMItemCapabilities);
            v275 = v338;
            v276 = dispatch thunk of SetAlgebra.isSuperset(of:)(v273, v338, v274);
            v270 = v251;
            v271 = *(void (**)(char *, uint64_t))(v334 + 8);
            v271(v273, v275);
            v271(v267, v275);
            v272 = v311;
            v277 = v249(v311, v340, v270);
            if ((v276 & 1) == 0)
            {
              FMIPDevice.rawModel.getter(v277);
              v287 = v286;
              v288 = String.uppercased()();
              swift_bridgeObjectRelease(v287);
              v342 = v288;
              v341[0] = 0x53444F50524941;
              v341[1] = 0xE700000000000000;
              v289 = sub_1000517B8();
              LOBYTE(v287) = StringProtocol.contains<A>(_:)(v341, &type metadata for String, &type metadata for String, v289, v289);
              v290 = swift_bridgeObjectRelease(v288._object);
              v279 = ((uint64_t (*)(char *, uint64_t, __n128))v262)(v272, v270, v290);
              v278 = (uint64_t)v337;
              if ((v287 & 1) == 0)
                goto LABEL_90;
              goto LABEL_89;
            }
          }
          v278 = (uint64_t)v337;
          v279 = v262(v272, v270);
LABEL_89:
          v278 |= 0x200200uLL;
LABEL_90:
          v280 = v327;
          v281 = v328;
          v282 = v329;
          v283 = FMIPDevice.features.getter(v279);
          static FMIPFeatures.isRepairSupported.getter(v283);
          v284 = dispatch thunk of SetAlgebra.isSuperset(of:)(v282, v280, v339);
          v266(v282, v280);
          v266(v281, v280);
          if ((v284 & 1) != 0)
            v285 = v278 | 0x300000;
          else
            v285 = v278;
          v271(v268, v338);
          return v285;
        }
LABEL_64:
        v216 = v339;
        if ((v339 & 0x8000) == 0)
          v216 = v339 | 0x8000;
        goto LABEL_67;
      }
    }
    else
    {
      v212 = v193;
      v199 = (void (*)(char *, uint64_t))v336;
      ((void (*)(char *, uint64_t))v336)(v212, v140);
      v200 = v301;
      v194(v301, v188, v140);
      v202 = v298;
    }
    v199(v200, v140);
    v207 = v334;
    v208 = v338;
    v209 = (*(uint64_t (**)(char *, char *, uint64_t))(v334 + 16))(v202, v322, v338);
    goto LABEL_63;
  }
  v147 = 0;
  v148 = v338;
  v149 = v339;
  v150 = v334;
  v152 = v325;
  v151 = v326;
  v330 = (char *)v144;
  v153 = v332;
  while (v147 < *(_QWORD *)(v144 + 16))
  {
    v154 = (*(unsigned __int8 *)(v151 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v151 + 80);
    v336 = *(_QWORD *)(v151 + 72);
    v337 = (void (*)(char *, uint64_t, uint64_t))v154;
    v155 = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v151 + 16))(v152, v144 + v154 + v336 * v147, v149);
    v156 = v335;
    v157 = FMIPItem.capabilities.getter(v155);
    static FMItemCapabilities.canBTFinding.getter(v157);
    v158 = sub_100008000((unint64_t *)&qword_1005E3B40, (uint64_t (*)(uint64_t))&type metadata accessor for FMItemCapabilities, (uint64_t)&protocol conformance descriptor for FMItemCapabilities);
    v159 = dispatch thunk of SetAlgebra.isSuperset(of:)(v153, v148, v158);
    v160 = v150;
    v161 = *(void (**)(char *, uint64_t))(v150 + 8);
    v161(v153, v148);
    v161(v156, v148);
    if ((v159 & 1) != 0)
    {
      v162 = *(void (**)(char *, char *, uint64_t))(v151 + 32);
      v162(v333, v152, v149);
      countAndFlagsBits = v342._countAndFlagsBits;
      if ((swift_isUniquelyReferenced_nonNull_native(v342._countAndFlagsBits) & 1) == 0)
      {
        sub_100111D4C(0, *(_QWORD *)(countAndFlagsBits + 16) + 1, 1);
        countAndFlagsBits = v342._countAndFlagsBits;
      }
      v144 = (uint64_t)v330;
      v165 = *(_QWORD *)(countAndFlagsBits + 16);
      v164 = *(_QWORD *)(countAndFlagsBits + 24);
      if (v165 >= v164 >> 1)
      {
        sub_100111D4C(v164 > 1, v165 + 1, 1);
        countAndFlagsBits = v342._countAndFlagsBits;
      }
      *(_QWORD *)(countAndFlagsBits + 16) = v165 + 1;
      result = ((uint64_t (*)(char *, char *, uint64_t))v162)((char *)v337 + countAndFlagsBits + v165 * v336, v333, v339);
      v342._countAndFlagsBits = countAndFlagsBits;
      v148 = v338;
      v150 = v334;
      v152 = v325;
      v151 = v326;
    }
    else
    {
      result = (*(uint64_t (**)(char *, uint64_t))(v151 + 8))(v152, v149);
      v144 = (uint64_t)v330;
      v150 = v160;
    }
    if (v331 == ++v147)
    {
      v146 = (_QWORD *)v342._countAndFlagsBits;
      goto LABEL_48;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1003F41D4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  __n128 v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t result;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __n128 v43;
  void (*v44)(char *, char *, uint64_t, __n128);
  _QWORD *v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  unint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(char *, unint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;

  v52 = a2;
  v60 = type metadata accessor for FMIPSafeLocation(0);
  v4 = *(_QWORD *)(v60 - 8);
  v5 = __chkstk_darwin(v60);
  v49 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)&v48 - v8;
  __chkstk_darwin(v7);
  v11 = (char *)&v48 - v10;
  v12 = _swiftEmptyArrayStorage;
  v62 = _swiftEmptyArrayStorage;
  v51 = *(_QWORD *)(a1 + 16);
  if (!v51)
    return (uint64_t)v12;
  v48 = v2;
  v13 = 0;
  v14 = *(_QWORD *)(v4 + 72);
  v53 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v50 = a1 + v53;
  v58 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v4 + 16);
  v59 = v14;
  v57 = v4;
  v55 = (char *)&v48 - v10;
  for (i = v58(v11, a1 + v53, v60); ; i = v58(v11, v50 + v59 * v13, v60))
  {
    v17 = *v52;
    v18 = *(_QWORD *)(*v52 + 16);
    v56 = v13;
    if (v18)
    {
      v61 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain(v17);
      sub_100111E28(0, v18, 0);
      v54 = v17;
      v19 = v17 + v53;
      do
      {
        v20 = v60;
        v21 = v58(v9, v19, v60);
        v22 = FMIPSafeLocation.identifier.getter(v21);
        v24 = v23;
        (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v20);
        v12 = v61;
        if ((swift_isUniquelyReferenced_nonNull_native(v61) & 1) == 0)
        {
          sub_100111E28(0, v12[2] + 1, 1);
          v12 = v61;
        }
        v26 = v12[2];
        v25 = v12[3];
        if (v26 >= v25 >> 1)
        {
          sub_100111E28(v25 > 1, v26 + 1, 1);
          v12 = v61;
        }
        v12[2] = v26 + 1;
        v27 = &v12[2 * v26];
        v27[4] = v22;
        v27[5] = v24;
        v19 += v59;
        --v18;
        v4 = v57;
      }
      while (v18);
      swift_bridgeObjectRelease(v54);
      v11 = v55;
    }
    v28 = FMIPSafeLocation.identifier.getter(i);
    v30 = v29;
    v31 = v12[2];
    if (!v31)
    {
      swift_bridgeObjectRelease(v12);
      v12 = _swiftEmptyArrayStorage;
      goto LABEL_31;
    }
    v32 = v28;
    v33 = v12[4];
    v34 = v12[5];
    v35 = v33 == v32 && v34 == v30;
    if (v35 || (result = _stringCompareWithSmolCheck(_:_:expecting:)(v33, v34, v32, v30, 0), (result & 1) != 0))
    {
LABEL_3:
      swift_bridgeObjectRelease(v12);
      v16 = swift_bridgeObjectRelease(v30);
      v11 = v55;
      (*(void (**)(char *, uint64_t, __n128))(v4 + 8))(v55, v60, v16);
      v12 = _swiftEmptyArrayStorage;
      goto LABEL_4;
    }
    if (v31 != 1)
      break;
LABEL_29:
    swift_bridgeObjectRelease(v12);
    v12 = _swiftEmptyArrayStorage;
    v11 = v55;
LABEL_31:
    v43 = swift_bridgeObjectRelease(v30);
    v44 = *(void (**)(char *, char *, uint64_t, __n128))(v4 + 32);
    v44(v49, v11, v60, v43);
    v45 = v62;
    if ((swift_isUniquelyReferenced_nonNull_native(v62) & 1) == 0)
    {
      sub_100111DA4(0, v45[2] + 1, 1);
      v45 = v62;
    }
    v47 = v45[2];
    v46 = v45[3];
    if (v47 >= v46 >> 1)
    {
      sub_100111DA4(v46 > 1, v47 + 1, 1);
      v45 = v62;
    }
    v45[2] = v47 + 1;
    ((void (*)(char *, char *, uint64_t))v44)((char *)v45 + v53 + v47 * v59, v49, v60);
    v62 = v45;
    v4 = v57;
LABEL_4:
    v13 = v56 + 1;
    if (v56 + 1 == v51)
      return (uint64_t)v62;
  }
  v37 = v12 + 7;
  v38 = 1;
  while (1)
  {
    v39 = v38 + 1;
    if (__OFADD__(v38, 1))
      break;
    v40 = *(v37 - 1);
    v41 = *v37;
    if (v40 == v32 && v41 == v30)
      goto LABEL_3;
    result = _stringCompareWithSmolCheck(_:_:expecting:)(v40, v41, v32, v30, 0);
    if ((result & 1) != 0)
      goto LABEL_3;
    v37 += 2;
    ++v38;
    if (v39 == v31)
      goto LABEL_29;
  }
  __break(1u);
  return result;
}

uint64_t sub_1003F45A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  uint64_t (*v36)(char *, uint64_t);
  uint64_t v37;
  double v38;
  double v39;
  char v40;
  uint64_t v41;
  char *v43;
  uint64_t (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;

  v2 = type metadata accessor for Date(0);
  v45 = *(_QWORD *)(v2 - 8);
  v3 = __chkstk_darwin(v2);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  v7 = (char *)&v43 - v6;
  v8 = sub_100053F2C((uint64_t *)&unk_1005D6700);
  v9 = __chkstk_darwin(v8);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v13 = (char *)&v43 - v12;
  v14 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  v15 = __chkstk_darwin(v14);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v43 - v18;
  sub_100007464(a1, (uint64_t)v13, (uint64_t *)&unk_1005D6700);
  v20 = type metadata accessor for FMIPLocation(0);
  v21 = *(_QWORD *)(v20 - 8);
  v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v22 = v44(v13, 1, v20);
  v46 = v21;
  if ((_DWORD)v22 == 1)
  {
    sub_1000051EC((uint64_t)v13, (uint64_t *)&unk_1005D6700);
    v23 = 1;
  }
  else
  {
    v24 = FMIPLocation.location.getter(v22);
    v43 = v11;
    v25 = v5;
    v26 = v7;
    v27 = a1;
    v28 = (void *)v24;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v13, v20);
    v29 = objc_msgSend(v28, "timestamp");

    a1 = v27;
    v7 = v26;
    v5 = v25;
    v11 = v43;
    static Date._unconditionallyBridgeFromObjectiveC(_:)(v29);

    v23 = 0;
  }
  v30 = v20;
  v31 = v45;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56))(v19, v23, 1, v2);
  sub_100007464((uint64_t)v19, (uint64_t)v17, (uint64_t *)&unk_1005D3320);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v17, 1, v2) == 1)
  {
    sub_1000051EC((uint64_t)v17, (uint64_t *)&unk_1005D3320);
    v32 = v46;
  }
  else
  {
    v33 = (*(uint64_t (**)(char *, char *, uint64_t))(v31 + 32))(v7, v17, v2);
    v34 = Date.init()(v33);
    v35 = Date.timeIntervalSince1970.getter(v34);
    v36 = *(uint64_t (**)(char *, uint64_t))(v31 + 8);
    v37 = v36(v5, v2);
    v38 = v35 - Date.timeIntervalSince1970.getter(v37);
    v39 = FMIPOldLocationAgeThresholdInSeconds.getter();
    v36(v7, v2);
    v32 = v46;
    if (v39 < v38)
    {
      sub_1000051EC((uint64_t)v19, (uint64_t *)&unk_1005D3320);
      v40 = 1;
      return v40 & 1;
    }
  }
  sub_100007464(a1, (uint64_t)v11, (uint64_t *)&unk_1005D6700);
  v41 = v44(v11, 1, v30);
  if ((_DWORD)v41 == 1)
  {
    sub_1000051EC((uint64_t)v19, (uint64_t *)&unk_1005D3320);
    sub_1000051EC((uint64_t)v11, (uint64_t *)&unk_1005D6700);
    v40 = 0;
  }
  else
  {
    v40 = FMIPLocation.isOld.getter(v41);
    sub_1000051EC((uint64_t)v19, (uint64_t *)&unk_1005D3320);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v30);
  }
  return v40 & 1;
}

char *sub_1003F4924(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t);
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  char *v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD v34[2];
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;

  v3 = type metadata accessor for FMIPItemState(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v43 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v41 = (char *)v34 - v7;
  v36 = type metadata accessor for FMIPItem(0);
  v8 = __chkstk_darwin(v36);
  v42 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)v34 - v11;
  result = (char *)_swiftEmptyArrayStorage;
  v45 = (char *)_swiftEmptyArrayStorage;
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    v38 = v10;
    v39 = v4;
    v15 = *(unsigned __int8 *)(v10 + 80);
    v16 = *(_QWORD *)(v10 + 72);
    v34[1] = v1;
    v35 = (v15 + 32) & ~v15;
    v17 = a1 + v35;
    v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v40 = v3;
    v18 = v36;
    v19 = v3;
    do
    {
      v44 = v14;
      v20 = v37(v12, v17, v18);
      v21 = v41;
      v22 = FMIPItem.state.getter(v20);
      v23 = v12;
      v24 = v43;
      static FMIPItemState.soundPlaying.getter(v22);
      v25 = sub_100008000((unint64_t *)&qword_1005E2280, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItemState, (uint64_t)&protocol conformance descriptor for FMIPItemState);
      v26 = v18;
      v27 = dispatch thunk of SetAlgebra.isSuperset(of:)(v24, v19, v25);
      v28 = *(void (**)(char *, uint64_t))(v39 + 8);
      v28(v24, v19);
      v28(v21, v19);
      if ((v27 & 1) != 0)
      {
        v29 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
        v30 = v23;
        v29(v42, v23, v26);
        v31 = v45;
        if ((swift_isUniquelyReferenced_nonNull_native(v45) & 1) == 0)
        {
          sub_100111D4C(0, *((_QWORD *)v31 + 2) + 1, 1);
          v31 = v45;
        }
        v33 = *((_QWORD *)v31 + 2);
        v32 = *((_QWORD *)v31 + 3);
        if (v33 >= v32 >> 1)
        {
          sub_100111D4C(v32 > 1, v33 + 1, 1);
          v31 = v45;
        }
        *((_QWORD *)v31 + 2) = v33 + 1;
        v18 = v36;
        v29(&v31[v35 + v33 * v16], v42, v36);
        v45 = v31;
        v12 = v30;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v38 + 8))(v23, v26);
        v18 = v26;
        v12 = v23;
      }
      v17 += v16;
      v14 = v44 - 1;
    }
    while (v44 != 1);
    return v45;
  }
  return result;
}

_QWORD *sub_1003F4BD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, char *, uint64_t);
  uint64_t v22;
  char *v23;
  uint64_t (*v24)(uint64_t, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char v27;
  char *v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  void (*v36)(uint64_t, uint64_t);
  void (*v37)(char *, char *, uint64_t);
  _QWORD *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  _QWORD *v56;

  v3 = type metadata accessor for FMIPItemState(0);
  v50 = *(_QWORD *)(v3 - 8);
  v4 = __chkstk_darwin(v3);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v8 = (char *)&v42 - v7;
  v9 = type metadata accessor for FMIPItem(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v52 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __chkstk_darwin(v11);
  __chkstk_darwin(v13);
  v55 = (char *)&v42 - v15;
  result = _swiftEmptyArrayStorage;
  v56 = _swiftEmptyArrayStorage;
  v17 = *(_QWORD *)(a1 + 16);
  if (v17)
  {
    v47 = v14;
    v48 = v6;
    v18 = *(unsigned __int8 *)(v10 + 80);
    v19 = *(_QWORD *)(v10 + 72);
    v42 = v1;
    v43 = (v18 + 32) & ~v18;
    v20 = a1 + v43;
    v21 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 16);
    v44 = v3;
    v45 = v21;
    v49 = v10;
    v46 = v19;
    while (1)
    {
      v53 = v20;
      v54 = v17;
      v23 = v55;
      v24 = v45;
      v25 = ((uint64_t (*)(char *))v45)(v55);
      v26 = FMIPItem.state.getter(v25);
      static FMIPItemState.soundPending.getter(v26);
      v51 = sub_100008000((unint64_t *)&qword_1005E2280, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItemState, (uint64_t)&protocol conformance descriptor for FMIPItemState);
      v27 = dispatch thunk of SetAlgebra.isSuperset(of:)(v6, v3, v51);
      v28 = v8;
      v29 = v6;
      v30 = *(void (**)(char *, uint64_t))(v50 + 8);
      v30(v29, v3);
      v30(v28, v3);
      v31 = v47;
      v32 = v24(v47, v23, v9);
      if ((v27 & 1) != 0)
        break;
      v34 = FMIPItem.state.getter(v32);
      static FMIPItemState.soundQueued.getter(v34);
      v35 = dispatch thunk of SetAlgebra.isSuperset(of:)(v29, v3, v51);
      v30(v29, v3);
      v30(v28, v3);
      v33 = v49;
      v36 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
      v36(v31, v9);
      v8 = v28;
      if ((v35 & 1) != 0)
        goto LABEL_8;
      v36((uint64_t)v55, v9);
      v22 = v46;
LABEL_4:
      v20 = v53 + v22;
      v17 = v54 - 1;
      v6 = v48;
      if (v54 == 1)
        return v56;
    }
    v33 = v49;
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v31, v9);
    v8 = v28;
LABEL_8:
    v37 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
    v37(v52, v55, v9);
    v38 = v56;
    if ((swift_isUniquelyReferenced_nonNull_native(v56) & 1) == 0)
    {
      sub_100111D4C(0, v38[2] + 1, 1);
      v38 = v56;
    }
    v40 = v38[2];
    v39 = v38[3];
    if (v40 >= v39 >> 1)
    {
      sub_100111D4C(v39 > 1, v40 + 1, 1);
      v38 = v56;
    }
    v38[2] = v40 + 1;
    v41 = (uint64_t)v38 + v43 + v40 * v46;
    v22 = v46;
    v37((char *)v41, v52, v9);
    v56 = v38;
    v3 = v44;
    goto LABEL_4;
  }
  return result;
}

char *sub_1003F4F28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(_QWORD, _QWORD, _QWORD);
  uint64_t i;
  void (*v16)(char *, char *, uint64_t);
  char *v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v20[2];
  uint64_t (*v21)(_QWORD, _QWORD, _QWORD);
  unint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;

  v3 = type metadata accessor for FMIPAudioChannel(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = __chkstk_darwin(v3);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v9 = (char *)v20 - v8;
  result = (char *)_swiftEmptyArrayStorage;
  v25 = (char *)_swiftEmptyArrayStorage;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v20[1] = v1;
    v12 = *(_QWORD *)(v4 + 72);
    v22 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v23 = v7;
    v13 = a1 + v22;
    v14 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v4 + 16);
    v24 = v4;
    v21 = v14;
    for (i = v14(v9, a1 + v22, v3); ; i = v14(v9, v13, v3))
    {
      if ((FMIPAudioChannel.isPlaying.getter(i) & 1) != 0)
      {
        v16 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
        v16(v7, v9, v3);
        v17 = v25;
        if ((swift_isUniquelyReferenced_nonNull_native(v25) & 1) == 0)
        {
          sub_100111D78(0, *((_QWORD *)v17 + 2) + 1, 1);
          v17 = v25;
        }
        v19 = *((_QWORD *)v17 + 2);
        v18 = *((_QWORD *)v17 + 3);
        if (v19 >= v18 >> 1)
        {
          sub_100111D78(v18 > 1, v19 + 1, 1);
          v17 = v25;
        }
        *((_QWORD *)v17 + 2) = v19 + 1;
        v7 = v23;
        v16(&v17[v22 + v19 * v12], v23, v3);
        v25 = v17;
        v4 = v24;
        v14 = v21;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
      }
      v13 += v12;
      if (!--v11)
        break;
    }
    return v25;
  }
  return result;
}

uint64_t sub_1003F50E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t (*v45)(char *, uint64_t);
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(char *, char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t (*v62)(char *, uint64_t);
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char v81;
  uint64_t (*v82)(char *, uint64_t);
  uint64_t v83;
  uint64_t v84;
  __n128 v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char v100;
  void (*v101)(char *, uint64_t);
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  uint64_t (*v118)(char *, uint64_t);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  unsigned __int8 v131;
  void (*v132)(char *, uint64_t);
  uint64_t v133;
  uint64_t v134;
  char v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  int v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  void (*v157)(char *, uint64_t);
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t (*v162)(_QWORD, _QWORD, _QWORD);
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unsigned __int8 v178;
  void (*v179)(char *, uint64_t);
  BOOL v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  char v187;
  void (*v188)(char *, uint64_t);
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  unsigned __int8 v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  char *v196;
  unsigned __int8 v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char v201;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  int v206;
  char *v207;
  uint64_t v208;
  char *v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  char *v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  char *v220;
  unint64_t v221;
  char *v222;
  char *v223;
  uint64_t v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  uint64_t v235;
  char *v236;
  char *v237;
  _QWORD *v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;

  v212 = type metadata accessor for FMIPItemState(0);
  v217 = *(_QWORD *)(v212 - 8);
  v2 = __chkstk_darwin(v212);
  v216 = (char *)&v203 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  v213 = (char *)&v203 - v4;
  v208 = type metadata accessor for FMIPItem(0);
  v240 = *(_QWORD *)(v208 - 8);
  __chkstk_darwin(v208);
  v241 = (char *)&v203 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_100053F2C(&qword_1005D72D0);
  __chkstk_darwin(v6);
  v238 = (uint64_t *)((char *)&v203 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for FMIPItemGroup(0);
  v228 = *(_QWORD *)(v8 - 8);
  v229 = v8;
  __chkstk_darwin(v8);
  v220 = (char *)&v203 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_100053F2C((uint64_t *)&unk_1005E3B00);
  __chkstk_darwin(v10);
  v223 = (char *)&v203 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v224 = type metadata accessor for FMIPEraseMetadata(0);
  v230 = *(_QWORD *)(v224 - 8);
  __chkstk_darwin(v224);
  v219 = (char *)&v203 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v231 = type metadata accessor for FMIPDeviceState(0);
  v226 = *(_QWORD *)(v231 - 8);
  v13 = __chkstk_darwin(v231);
  v237 = (char *)&v203 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v236 = (char *)&v203 - v15;
  v211 = type metadata accessor for FMIPDevice(0);
  v214 = *(_QWORD *)(v211 - 8);
  __chkstk_darwin(v211);
  v210 = (char *)&v203 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_100053F2C(&qword_1005DBA58);
  __chkstk_darwin(v17);
  v222 = (char *)&v203 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v233 = type metadata accessor for FMIPDeviceLostModeMetadata(0);
  v227 = *(_QWORD *)(v233 - 8);
  v19 = __chkstk_darwin(v233);
  v207 = (char *)&v203 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v215 = (char *)&v203 - v21;
  v239 = type metadata accessor for FMIPActionStatus(0);
  v235 = *(_QWORD *)(v239 - 8);
  v22 = __chkstk_darwin(v239);
  v209 = (char *)&v203 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v22);
  v225 = (char *)&v203 - v25;
  v26 = __chkstk_darwin(v24);
  v234 = (char *)&v203 - v27;
  __chkstk_darwin(v26);
  v29 = (char *)&v203 - v28;
  v30 = sub_100053F2C((uint64_t *)&unk_1005E3AA0);
  __chkstk_darwin(v30);
  v32 = (char *)&v203 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for FMIPLockMetadata(0);
  v34 = *(_QWORD *)(v33 - 8);
  __chkstk_darwin(v33);
  v36 = (char *)&v203 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  v38 = __chkstk_darwin(v37);
  v40 = (char *)&v203 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __chkstk_darwin(v38);
  v43 = (char *)&v203 - v42;
  FMIPDevice.lockedTimestamp.getter(v41);
  v44 = type metadata accessor for Date(0);
  v45 = *(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v44 - 8) + 48);
  v218 = v44;
  v221 = (unint64_t)v45;
  v46 = v45(v43, 1);
  v47 = (uint64_t)v43;
  v48 = a1;
  v49 = sub_1000051EC(v47, (uint64_t *)&unk_1005D3320);
  FMIPDevice.lockMetadata.getter(v49);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33) == 1)
  {
    v50 = v239;
    v51 = sub_1000051EC((uint64_t)v32, (uint64_t *)&unk_1005E3AA0);
    if (v46 == 1)
      v52 = 1;
    else
      v52 = 17;
    v53 = v231;
    v54 = v233;
    v55 = v227;
    v56 = v218;
  }
  else
  {
    v206 = v46;
    v204 = v34;
    v57 = *(uint64_t (**)(char *, char *, uint64_t))(v34 + 32);
    v205 = v33;
    v58 = v57(v36, v32, v33);
    v59 = FMIPLockMetadata.status.getter(v58);
    v60 = FMIPActionStatus.isActionSuccessful.getter(v59);
    v61 = v235;
    v62 = *(uint64_t (**)(char *, uint64_t))(v235 + 8);
    v63 = v62(v29, v239);
    if ((v60 & 1) == 0 || v206 == 1)
    {
      v64 = v234;
      FMIPLockMetadata.status.getter(v63);
      v65 = v225;
      v66 = v239;
      (*(void (**)(char *, _QWORD, uint64_t))(v61 + 104))(v225, enum case for FMIPActionStatus.pending(_:), v239);
      v67 = sub_100008000(&qword_1005D9928, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPActionStatus, (uint64_t)&protocol conformance descriptor for FMIPActionStatus);
      dispatch thunk of RawRepresentable.rawValue.getter(&v243, v66, v67);
      dispatch thunk of RawRepresentable.rawValue.getter(&v242, v66, v67);
      v69 = v242;
      v68 = v243;
      v62(v65, v66);
      v62(v64, v66);
      v70 = 17;
      if (v206 == 1)
        v70 = 1;
      if (v68 == v69)
        v52 = 33;
      else
        v52 = v70;
    }
    else
    {
      v52 = 17;
    }
    v53 = v231;
    v55 = v227;
    v56 = v218;
    v51 = (*(uint64_t (**)(char *, uint64_t))(v204 + 8))(v36, v205);
    v50 = v239;
    v54 = v233;
  }
  FMIPDevice.lostTimestamp.getter(v51);
  v71 = ((uint64_t (*)(char *, uint64_t, uint64_t))v221)(v40, 1, v56);
  v72 = sub_1000051EC((uint64_t)v40, (uint64_t *)&unk_1005D3320);
  v73 = (uint64_t)v222;
  FMIPDevice.lostMetadata.getter(v72);
  v74 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v73, 1, v54);
  v232 = v48;
  if (v74 == 1)
  {
    v75 = sub_1000051EC(v73, &qword_1005DBA58);
    if (v71 == 1)
      v76 = v52;
    else
      v76 = v52 | 0x40;
    goto LABEL_22;
  }
  v221 = v52;
  v77 = v215;
  v78 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 32))(v215, v73, v54);
  v79 = v234;
  v80 = FMIPDeviceLostModeMetadata.status.getter(v78);
  v81 = FMIPActionStatus.isActionSuccessful.getter(v80);
  v82 = *(uint64_t (**)(char *, uint64_t))(v235 + 8);
  v83 = v50;
  v84 = v82(v79, v50);
  if ((v81 & 1) != 0)
  {
    v84 = FMIPDevice.isLocalFindable.getter(v85);
    if ((v84 & 1) != 0)
    {
      v86 = v55;
      v76 = v221 | 0x40;
      v75 = (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v77, v233);
LABEL_22:
      v87 = v226;
      goto LABEL_37;
    }
  }
  v88 = v209;
  v89 = FMIPDeviceLostModeMetadata.status.getter(v84);
  v90 = FMIPActionStatus.isActionSuccessful.getter(v89);
  v82(v88, v50);
  v91 = v214;
  v92 = v210;
  v93 = v211;
  v94 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v214 + 16))(v210, v232, v211);
  v87 = v226;
  if ((v90 & 1) != 0)
  {
    v95 = v236;
    v96 = FMIPDevice.state.getter(v94);
    v97 = v92;
    v98 = v237;
    static FMIPDeviceState.isLostModeEnabled.getter(v96);
    v99 = sub_100008000((unint64_t *)&qword_1005D4158, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPDeviceState, (uint64_t)&protocol conformance descriptor for FMIPDeviceState);
    v100 = dispatch thunk of SetAlgebra.isSuperset(of:)(v98, v53, v99);
    v101 = *(void (**)(char *, uint64_t))(v87 + 8);
    v101(v98, v53);
    v102 = v95;
    v83 = v239;
    v101(v102, v53);
    v103 = (*(uint64_t (**)(char *, uint64_t))(v214 + 8))(v97, v93);
    if ((v100 & 1) != 0)
    {
      v76 = v221 | 0x40;
      v75 = (*(uint64_t (**)(char *, uint64_t))(v227 + 8))(v77, v233);
      goto LABEL_37;
    }
  }
  else
  {
    v103 = (*(uint64_t (**)(char *, uint64_t))(v91 + 8))(v92, v93);
  }
  v104 = v83;
  v105 = v77;
  v106 = v234;
  FMIPDeviceLostModeMetadata.status.getter(v103);
  v107 = enum case for FMIPActionStatus.pending(_:);
  v108 = v225;
  v222 = *(char **)(v235 + 104);
  ((void (*)(char *, _QWORD, uint64_t))v222)(v225, enum case for FMIPActionStatus.pending(_:), v83);
  v109 = sub_100008000(&qword_1005D9928, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPActionStatus, (uint64_t)&protocol conformance descriptor for FMIPActionStatus);
  dispatch thunk of RawRepresentable.rawValue.getter(&v243, v104, v109);
  dispatch thunk of RawRepresentable.rawValue.getter(&v242, v104, v109);
  v111 = v242;
  v110 = v243;
  v82(v108, v104);
  v112 = v104;
  v82(v106, v104);
  v113 = v227;
  v114 = v207;
  v115 = v233;
  v116 = (*(uint64_t (**)(char *, char *, uint64_t))(v227 + 16))(v207, v105, v233);
  if (v110 != v111)
  {
    v118 = *(uint64_t (**)(char *, uint64_t))(v113 + 8);
    v119 = v118(v114, v115);
LABEL_32:
    v123 = v234;
    v122 = v215;
    FMIPDeviceLostModeMetadata.status.getter(v119);
    v124 = v225;
    ((void (*)(char *, uint64_t, uint64_t))v222)(v225, v107, v112);
    dispatch thunk of RawRepresentable.rawValue.getter(&v243, v112, v109);
    dispatch thunk of RawRepresentable.rawValue.getter(&v242, v112, v109);
    v126 = v242;
    v125 = v243;
    v82(v124, v112);
    v82(v123, v112);
    if (v125 == v126)
      v76 = v221 | 0x80;
    else
      v76 = v221;
    v121 = v233;
    v87 = v226;
    goto LABEL_36;
  }
  v117 = FMIPDeviceLostModeMetadata.canStopLostMode.getter(v116);
  v118 = *(uint64_t (**)(char *, uint64_t))(v113 + 8);
  v119 = v118(v114, v115);
  v120 = v112;
  v87 = v226;
  if ((v117 & 1) == 0)
  {
    v112 = v120;
    goto LABEL_32;
  }
  v121 = v115;
  v76 = v221 | 0x200;
  v122 = v215;
LABEL_36:
  v75 = v118(v122, v121);
  v53 = v231;
LABEL_37:
  v127 = v236;
  v128 = FMIPDevice.state.getter(v75);
  v129 = v237;
  static FMIPDeviceState.isNotifyWhenFoundEnabled.getter(v128);
  v130 = sub_100008000((unint64_t *)&qword_1005D4158, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPDeviceState, (uint64_t)&protocol conformance descriptor for FMIPDeviceState);
  v131 = dispatch thunk of SetAlgebra.isSuperset(of:)(v129, v53, v130);
  v132 = *(void (**)(char *, uint64_t))(v87 + 8);
  v132(v129, v53);
  v133 = ((uint64_t (*)(char *, uint64_t))v132)(v127, v53);
  if ((v131 & ((v76 & 8) == 0)) != 0)
    v76 |= 8uLL;
  v134 = FMIPDevice.state.getter(v133);
  static FMIPDeviceState.isNotifyWhenDetachedEnabled.getter(v134);
  v135 = dispatch thunk of SetAlgebra.isSuperset(of:)(v129, v53, v130);
  v132(v129, v53);
  v136 = ((uint64_t (*)(char *, uint64_t))v132)(v127, v53);
  if ((v135 & 1) != 0)
    v76 |= 0x8000uLL;
  v137 = FMIPDevice.state.getter(v136);
  static FMIPDeviceState.isShowContactDetailsEnabled.getter(v137);
  v138 = dispatch thunk of SetAlgebra.isSuperset(of:)(v129, v53, v130);
  v132(v129, v53);
  v139 = ((uint64_t (*)(char *, uint64_t))v132)(v127, v53);
  if ((v138 & 1) != 0)
    v76 |= 0x10000uLL;
  v140 = FMIPDevice.state.getter(v139);
  static FMIPDeviceState.isDeviceWithYou.getter(v140);
  v227 = v130;
  v141 = dispatch thunk of SetAlgebra.isSuperset(of:)(v129, v53, v130);
  v132(v129, v53);
  v142 = ((uint64_t (*)(char *, uint64_t))v132)(v127, v53);
  if ((v141 & 1) != 0)
    v143 = v76 | 0x20000;
  else
    v143 = v76;
  v144 = (uint64_t)v223;
  FMIPDevice.eraseMetadata.getter(v142);
  v145 = v230;
  v146 = v224;
  v147 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v230 + 48))(v144, 1, v224);
  v233 = (uint64_t)v132;
  if (v147 == 1)
  {
    v148 = sub_1000051EC(v144, (uint64_t *)&unk_1005E3B00);
  }
  else
  {
    v149 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v145 + 32))(v219, v144, v146);
    v150 = v234;
    FMIPEraseMetadata.status.getter(v149);
    v151 = v235;
    v152 = v225;
    v153 = v239;
    (*(void (**)(char *, _QWORD, uint64_t))(v235 + 104))(v225, enum case for FMIPActionStatus.pending(_:), v239);
    v154 = sub_100008000(&qword_1005D9928, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPActionStatus, (uint64_t)&protocol conformance descriptor for FMIPActionStatus);
    dispatch thunk of RawRepresentable.rawValue.getter(&v243, v153, v154);
    dispatch thunk of RawRepresentable.rawValue.getter(&v242, v153, v154);
    v156 = v242;
    v155 = v243;
    v157 = *(void (**)(char *, uint64_t))(v151 + 8);
    v157(v152, v153);
    v158 = v150;
    v132 = (void (*)(char *, uint64_t))v233;
    v157(v158, v153);
    v159 = (v143 >> 8) & 1;
    if (v155 != v156)
      LODWORD(v159) = 1;
    if (!(_DWORD)v159)
      v143 |= 0x100uLL;
    v148 = (*(uint64_t (**)(char *, uint64_t))(v230 + 8))(v219, v146);
  }
  v161 = v228;
  v160 = v229;
  v162 = (uint64_t (*)(_QWORD, _QWORD, _QWORD))v238;
  FMIPDevice.itemGroup.getter(v148);
  if ((*(unsigned int (**)(_QWORD, uint64_t, uint64_t))(v161 + 48))(v162, 1, v160) == 1)
  {
    v163 = sub_1000051EC((uint64_t)v238, &qword_1005D72D0);
  }
  else
  {
    v164 = (*(uint64_t (**)(char *, _QWORD *, uint64_t))(v161 + 32))(v220, v238, v160);
    v165 = FMIPItemGroup.items.getter(v164);
    v166 = *(_QWORD *)(v165 + 16);
    if (v166)
    {
      v167 = v241;
      v168 = *(unsigned __int8 *)(v240 + 80);
      v235 = v165;
      v169 = v165 + ((v168 + 32) & ~v168);
      v170 = v213;
      v171 = v208;
      v172 = v212;
      v239 = *(_QWORD *)(v240 + 72);
      v173 = v216;
      v238 = *(_QWORD **)(v240 + 16);
      v174 = v217;
      do
      {
        v175 = ((uint64_t (*)(char *, uint64_t, uint64_t))v238)(v167, v169, v171);
        v176 = FMIPItem.state.getter(v175);
        static FMIPItemState.separationWarningActive.getter(v176);
        v177 = sub_100008000((unint64_t *)&qword_1005E2280, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItemState, (uint64_t)&protocol conformance descriptor for FMIPItemState);
        v178 = dispatch thunk of SetAlgebra.isSuperset(of:)(v173, v172, v177);
        v179 = *(void (**)(char *, uint64_t))(v174 + 8);
        v179(v173, v172);
        v179(v170, v172);
        v180 = (v178 & ((v143 & 0x1000) == 0)) == 0;
        v167 = v241;
        if (!v180)
          v143 |= 0x1000uLL;
        (*(void (**)(char *, uint64_t))(v240 + 8))(v241, v171);
        v169 += v239;
        --v166;
      }
      while (v166);
      swift_bridgeObjectRelease(v235);
      v182 = v170;
      v53 = v231;
    }
    else
    {
      swift_bridgeObjectRelease(v165);
      v172 = v212;
      v182 = v213;
    }
    v183 = v220;
    v184 = FMIPItemGroup.state.getter(v181);
    v185 = v216;
    static FMIPItemState.pairingLocked.getter(v184);
    v186 = sub_100008000((unint64_t *)&qword_1005E2280, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPItemState, (uint64_t)&protocol conformance descriptor for FMIPItemState);
    v187 = dispatch thunk of SetAlgebra.isSuperset(of:)(v185, v172, v186);
    v188 = *(void (**)(char *, uint64_t))(v217 + 8);
    v188(v185, v172);
    v189 = ((uint64_t (*)(char *, uint64_t))v188)(v182, v172);
    if ((v187 & 1) != 0)
      v190 = v143 | 0x80000;
    else
      v190 = v143;
    v191 = FMIPItemGroup.state.getter(v189);
    static FMIPItemState.pairingIncomplete.getter(v191);
    v192 = dispatch thunk of SetAlgebra.isSuperset(of:)(v185, v172, v186);
    v188(v185, v172);
    v188(v182, v172);
    if ((v192 & ((v190 & 0x40000) == 0)) != 0)
      v143 = v190 | 0x40000;
    else
      v143 = v190;
    v163 = (*(uint64_t (**)(char *, uint64_t))(v228 + 8))(v183, v229);
    v132 = (void (*)(char *, uint64_t))v233;
  }
  v193 = v227;
  v194 = v236;
  v195 = FMIPDevice.state.getter(v163);
  v196 = v237;
  static FMIPDeviceState.separationWarningActive.getter(v195);
  v197 = dispatch thunk of SetAlgebra.isSuperset(of:)(v196, v53, v193);
  v132(v196, v53);
  v198 = ((uint64_t (*)(char *, uint64_t))v132)(v194, v53);
  if ((v197 & ((v143 & 0x1000) == 0)) != 0)
    v199 = v143 | 0x1000;
  else
    v199 = v143;
  v200 = FMIPDevice.state.getter(v198);
  static FMIPDeviceState.isInRepairMode.getter(v200);
  v201 = dispatch thunk of SetAlgebra.isSuperset(of:)(v196, v53, v193);
  v132(v196, v53);
  v132(v194, v53);
  if ((v201 & 1) != 0)
    return v199 | 0x100000;
  else
    return v199;
}

uint64_t sub_1003F61A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  double v42;
  uint64_t (*v43)(char *, uint64_t);
  uint64_t v44;
  double v45;
  double v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;

  v0 = type metadata accessor for Date(0);
  v55 = *(_QWORD *)(v0 - 8);
  v56 = v0;
  v1 = __chkstk_darwin(v0);
  v52 = (char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  v53 = (char *)&v51 - v3;
  v4 = sub_100053F2C((uint64_t *)&unk_1005D6700);
  v5 = __chkstk_darwin(v4);
  v54 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v8 = (char *)&v51 - v7;
  v9 = sub_100053F2C((uint64_t *)&unk_1005D3320);
  v10 = __chkstk_darwin(v9);
  v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v51 - v13;
  v15 = type metadata accessor for FMIPDeviceState(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __chkstk_darwin(v17);
  v22 = (char *)&v51 - v21;
  v23 = FMIPDevice.state.getter(v20);
  static FMIPDeviceState.isLocating.getter(v23);
  v24 = sub_100008000((unint64_t *)&qword_1005D4158, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPDeviceState, (uint64_t)&protocol conformance descriptor for FMIPDeviceState);
  v25 = dispatch thunk of SetAlgebra.isSuperset(of:)(v19, v15, v24);
  v26 = *(void (**)(char *, uint64_t))(v16 + 8);
  v26(v19, v15);
  v27 = ((uint64_t (*)(char *, uint64_t))v26)(v22, v15);
  if ((v25 & 1) != 0)
  {
LABEL_11:
    v47 = 0;
    return v47 & 1;
  }
  FMIPDevice.bestLocation.getter(v27);
  v28 = type metadata accessor for FMIPLocation(0);
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
  v31 = v30(v8, 1, v28);
  if ((_DWORD)v31 == 1)
  {
    sub_1000051EC((uint64_t)v8, (uint64_t *)&unk_1005D6700);
    v32 = 1;
  }
  else
  {
    v33 = (void *)FMIPLocation.location.getter(v31);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v28);
    v34 = objc_msgSend(v33, "timestamp");

    static Date._unconditionallyBridgeFromObjectiveC(_:)(v34);
    v32 = 0;
  }
  v35 = v55;
  v36 = v56;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56))(v14, v32, 1, v56);
  sub_100007464((uint64_t)v14, (uint64_t)v12, (uint64_t *)&unk_1005D3320);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v12, 1, v36) == 1)
  {
    v37 = sub_1000051EC((uint64_t)v12, (uint64_t *)&unk_1005D3320);
LABEL_9:
    v48 = (uint64_t)v54;
    FMIPDevice.bestLocation.getter(v37);
    v49 = v30((char *)v48, 1, v28);
    if ((_DWORD)v49 != 1)
    {
      v47 = FMIPLocation.isOld.getter(v49);
      sub_1000051EC((uint64_t)v14, (uint64_t *)&unk_1005D3320);
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v48, v28);
      return v47 & 1;
    }
    sub_1000051EC((uint64_t)v14, (uint64_t *)&unk_1005D3320);
    sub_1000051EC(v48, (uint64_t *)&unk_1005D6700);
    goto LABEL_11;
  }
  v38 = v53;
  v39 = (*(uint64_t (**)(char *, char *, uint64_t))(v35 + 32))(v53, v12, v36);
  v40 = v52;
  v41 = Date.init()(v39);
  v42 = Date.timeIntervalSince1970.getter(v41);
  v43 = *(uint64_t (**)(char *, uint64_t))(v35 + 8);
  v44 = v43(v40, v36);
  v45 = v42 - Date.timeIntervalSince1970.getter(v44);
  v46 = FMIPOldLocationAgeThresholdInSeconds.getter();
  v37 = v43(v38, v36);
  if (v46 >= v45)
    goto LABEL_9;
  sub_1000051EC((uint64_t)v14, (uint64_t *)&unk_1005D3320);
  v47 = 1;
  return v47 & 1;
}

uint64_t sub_1003F65B8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F65C8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1003F65D0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F65E0()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003F6604()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
}

uint64_t sub_1003F6610()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6620()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6630()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6640()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6650()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6660()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6670()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6680()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6690()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

void sub_1003F66A0(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
}

uint64_t sub_1003F66AC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F66BC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F66CC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F66DC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F66EC()
{
  uint64_t v0;

  return sub_100071274(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1003F66F4@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_100071298(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1003F66FC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_100071130(a1, a2, a3, *(void (**)(uint64_t *__return_ptr))(v3 + 16));
}

uint64_t sub_1003F6704()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6714()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6724()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6734()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6744@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_10009C0D4(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1003F674C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F675C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F676C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F677C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F678C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F679C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F67AC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F67BC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F67CC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F67DC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F67EC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F67FC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6810()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6820()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6830()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003F6840()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6850()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6864()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6878()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6888()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6898()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003F68A8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F68B8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F68C8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F68D8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F68EC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F68FC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F690C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003F691C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F692C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6940()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6950()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6960()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003F6970()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6980()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6994()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F69A4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F69B4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003F69C4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F69D4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F69E8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F69F8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6A08()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003F6A18()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6A28()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6A3C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6A4C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6A5C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003F6A6C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6A7C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6A90()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6AA0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6AB0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003F6AC0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6AD0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6AE4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6AF4()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6B04()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003F6B14()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6B24()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6B38()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6B48()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6B58()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003F6B68()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6B78()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6B8C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6B9C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6BAC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003F6BBC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6BCC()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6BE0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6BF0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6C00()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003F6C10()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6C20()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6C34()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6C44()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6C54()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003F6C64()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6C74()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6C88()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6C98()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6CA8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6CB8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003F6CC8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6CD8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6CE8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6CF8()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6D0C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6D1C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6D2C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003F6D3C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6D4C()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6D60()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6D70()
{
  uint64_t v0;
  uint64_t v2;

  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v2);
  return FMSoundPlatterViewLayout.description.getter(v2);
}

uint64_t sub_1003F6DA0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6DB0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6DC0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6DD0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6DE0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6DF0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6E00()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6E10()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6E20()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003F6E30()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6E40()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6E50()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6E60()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6E70()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6E80()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6E90()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6EA0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6EB0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6EC0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6ED0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6EE0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6EF0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6F00()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6F10()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003F6F34()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6F44()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6F58()
{
  type metadata accessor for FMIPDevice(0);
  return FMIPDevice.identifier.getter();
}

uint64_t sub_1003F6F90()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6FA0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6FB0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003F6FC0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003F6FD0()
{
  uint64_t v0;

  return swift_deallocObject(v0, 17, 7);
}

BOOL sub_1003F6FE0(uint64_t a1)
{
  uint64_t v1;

  return (sub_1000CCB0C(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24)) & 0x60) != 0;
}

uint64_t sub_1003F7010(uint64_t *a1)
{
  return sub_1003F7050(a1, (uint64_t (*)(char *))sub_100345664) & 1;
}

uint64_t sub_1003F7030(uint64_t *a1)
{
  return sub_1003F7050(a1, (uint64_t (*)(char *))sub_100345600) & 1;
}

uint64_t sub_1003F7050(uint64_t *a1, uint64_t (*a2)(char *))
{
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[4];

  v3 = *a1;
  v5[2] = *(_QWORD *)(v2 + 16);
  return sub_1003DC120(a2, (char)v5, v3, (uint64_t (*)(_QWORD))&type metadata accessor for FMIPItem) & 1;
}

uint64_t sub_1003F7090(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_10004058C(a2);
    result = swift_getWitnessTable(&protocol conformance descriptor for [A], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003F72CC()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for FMDeviceImageLoader()
{
  return objc_opt_self(_TtC6FindMy19FMDeviceImageLoader);
}

double sub_1003F7318()
{
  double result;

  result = 6.0;
  xmmword_1005F6070 = xmmword_100490640;
  return result;
}

void sub_1003F7350()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  objc_class *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  char *v27;
  id v28;
  void *v29;
  void *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  __int128 v38;
  void *v39;
  void *v40;
  id v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __n128 v53;
  uint64_t v54;
  SEL *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __n128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(char *, unint64_t, uint64_t, __n128);
  __n128 v69;
  uint64_t v70;
  char *v71;
  char v72;
  __n128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __n128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  __n128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __n128 v105;
  int v106;
  id v107;
  unint64_t v108;
  unint64_t v109;
  const char *v110;
  unint64_t v111;
  Swift::String_optional v112;
  Swift::String v113;
  Swift::String v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  NSString v119;
  char *v120;
  double v121;
  id v122;
  id v123;
  id v124;
  char *v125;
  void *v126;
  char *v127;
  void *v128;
  id v129;
  id v130;
  Swift::String v131;
  Swift::String_optional v132;
  Swift::String v133;
  void *object;
  NSString v135;
  double v136;
  void *v137;
  id v138;
  void *v139;
  uint64_t v140;
  uint64_t v141;
  NSString v142;
  id v143;
  id v144;
  id v145;
  Swift::String v146;
  Swift::String_optional v147;
  Swift::String v148;
  Swift::String v149;
  char *v150;
  Swift::String *v151;
  uint64_t v152;
  void *v153;
  id v154;
  NSString v155;
  char *v156;
  NSString v157;
  id v158;
  id v159;
  Swift::String v160;
  Swift::String_optional v161;
  Swift::String v162;
  void *v163;
  NSString v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  id v168;
  char *v169;
  uint64_t v170;
  char *v171;
  void *v172;
  uint64_t v173;
  char *v174;
  id v175;
  id v176;
  void (**v177)(uint64_t, uint64_t);
  char *v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  unsigned int (*v183)(char *, uint64_t, uint64_t);
  _QWORD *v184;
  char v185[24];
  objc_super v186;
  Swift::String v187;
  Swift::String v188;
  Swift::String v189;

  v1 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v1);
  v169 = (char *)&v166 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for FMFDevice(0);
  v181 = *(_QWORD *)(v3 - 8);
  v182 = v3;
  __chkstk_darwin(v3);
  v180 = (char *)&v166 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100053F2C(&qword_1005D2BC8);
  v6 = __chkstk_darwin(v5);
  v170 = (uint64_t)&v166 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v171 = (char *)&v166 - v8;
  v9 = sub_100053F2C((uint64_t *)&unk_1005D2A40);
  v10 = __chkstk_darwin(v9);
  v179 = (char *)&v166 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __chkstk_darwin(v10);
  v177 = (void (**)(uint64_t, uint64_t))((char *)&v166 - v13);
  __chkstk_darwin(v12);
  v15 = (char *)&v166 - v14;
  v16 = (objc_class *)type metadata accessor for FMTrustedLocationDetailViewController();
  v186.receiver = v0;
  v186.super_class = v16;
  objc_msgSendSuper2(&v186, "viewDidLoad");
  v17 = objc_msgSend(v0, "view");
  if (!v17)
  {
    __break(1u);
LABEL_55:
    __break(1u);
    return;
  }
  v18 = v17;
  v19 = (void *)objc_opt_self(UIColor);
  v20 = objc_msgSend(v19, "secondarySystemBackgroundColor");
  objc_msgSend(v18, "setBackgroundColor:", v20);

  v21 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_scrollView;
  v22 = *(id *)&v0[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_scrollView];
  v23 = objc_msgSend(v19, "secondarySystemBackgroundColor");
  objc_msgSend(v22, "setBackgroundColor:", v23);

  v24 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_contentStackView;
  v25 = *(id *)&v0[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_contentStackView];
  v176 = v19;
  v26 = objc_msgSend(v19, "secondarySystemBackgroundColor");
  objc_msgSend(v25, "setBackgroundColor:", v26);

  objc_msgSend(*(id *)&v0[v21], "setPreservesSuperviewLayoutMargins:", 1);
  objc_msgSend(*(id *)&v0[v21], "setContentInsetAdjustmentBehavior:", 3);
  objc_msgSend(*(id *)&v0[v24], "setPreservesSuperviewLayoutMargins:", 1);
  objc_msgSend(*(id *)&v0[v24], "setAxis:", 1);
  sub_1003F85E8();
  v27 = v0;
  v28 = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  objc_msgSend(*(id *)&v0[v24], "addArrangedSubview:", v28);
  v29 = *(void **)&v0[v24];
  v30 = *(void **)&v0[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindImageView];
  objc_msgSend(v29, "addArrangedSubview:", v30);
  v31 = *(_QWORD *)&v27[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindSwitchSection];
  v32 = *(void **)(v31 + OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_contentStackView);
  v174 = *(char **)&v27[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindSwitch];
  objc_msgSend(v32, "addArrangedSubview:");
  objc_msgSend(*(id *)&v27[v24], "addArrangedSubview:", v31);
  v33 = *(void **)&v27[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindDescription];
  objc_msgSend(*(id *)&v27[v24], "addArrangedSubview:", v33);
  v34 = *(void **)&v27[v24];
  v168 = *(id *)&v27[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_trustedLocationsDescription];
  objc_msgSend(v34, "addArrangedSubview:");
  v35 = *(_QWORD *)&v27[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_nonMeDescriptionPadView];
  objc_msgSend(*(id *)&v27[v24], "addArrangedSubview:", v35);
  v36 = *(_QWORD *)&v27[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_trustedLocationsSection];
  objc_msgSend(*(id *)&v27[v24], "addArrangedSubview:", v36);
  v37 = *(void **)&v27[v24];
  v173 = *(_QWORD *)&v27[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_suggestionsSection];
  objc_msgSend(v37, "addArrangedSubview:");
  objc_msgSend(v30, "setContentMode:", 1);
  if (qword_1005D2088 != -1)
    swift_once(&qword_1005D2088, sub_1003F7318);
  v38 = xmmword_1005F6070;
  v39 = *(void **)&v27[v24];
  v175 = v28;
  objc_msgSend(v39, "setCustomSpacing:afterView:", v28, *(double *)&xmmword_1005F6070);
  objc_msgSend(*(id *)&v27[v24], "setCustomSpacing:afterView:", v30, *(double *)&v38);
  v40 = *(void **)&v27[v24];
  v172 = v33;
  objc_msgSend(v40, "setCustomSpacing:afterView:", v33, *(double *)&v38 + *(double *)&v38);
  objc_msgSend(*(id *)&v27[v24], "setCustomSpacing:afterView:", v35, *((double *)&v38 + 1));
  objc_msgSend(*(id *)&v27[v24], "setCustomSpacing:afterView:", v36, *((double *)&v38 + 1));
  objc_msgSend(*(id *)&v27[v21], "addSubview:", *(_QWORD *)&v27[v24]);
  v41 = objc_msgSend(v27, "view");
  if (!v41)
    goto LABEL_55;
  v42 = v41;
  objc_msgSend(v41, "addSubview:", *(_QWORD *)&v27[v21]);

  v184 = *(_QWORD **)&v27[OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator];
  v43 = v184[6];
  v44 = swift_retain(v43);
  dispatch thunk of FMFManager.myInfo.getter(v44);
  swift_release(v43);
  v45 = type metadata accessor for FMFMyInfo(0);
  v46 = *(char **)(v45 - 8);
  v183 = (unsigned int (*)(char *, uint64_t, uint64_t))*((_QWORD *)v46 + 6);
  if (v183(v15, 1, v45) == 1)
  {
    sub_1000051EC((uint64_t)v15, (uint64_t *)&unk_1005D2A40);
    v47 = 0;
    v48 = 0;
  }
  else
  {
    v47 = FMFMyInfo.meDeviceId.getter();
    v48 = v49;
    (*((void (**)(char *, uint64_t))v46 + 1))(v15, v45);
  }
  v50 = (uint64_t)v177;
  v51 = v184[6];
  v52 = swift_retain(v51);
  dispatch thunk of FMFManager.myInfo.getter(v52);
  v53 = swift_release(v51);
  v54 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128))v183)(v50, 1, v45, v53);
  v55 = (SEL *)&unk_1005AA000;
  v178 = v27;
  if ((_DWORD)v54 == 1)
  {
    sub_1000051EC(v50, (uint64_t *)&unk_1005D2A40);
    if (!v48)
      goto LABEL_50;
    goto LABEL_16;
  }
  v56 = FMFMyInfo.deviceId.getter(v54);
  v58 = v57;
  (*((void (**)(uint64_t, uint64_t))v46 + 1))(v50, v45);
  if (!v48)
  {
    if (!v58)
      goto LABEL_50;
    goto LABEL_18;
  }
  if (!v58)
  {
LABEL_16:
    v58 = v48;
LABEL_18:
    swift_bridgeObjectRelease(v58);
LABEL_19:
    v59 = v184[6];
    v60 = swift_retain(v59);
    v61 = dispatch thunk of FMFManager.devices.getter(v60);
    v62 = swift_release(v59);
    if (!v61)
    {
      v65 = v181;
      v64 = v182;
      v84 = (uint64_t)v171;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v181 + 56))(v171, 1, 1, v182, v62);
      goto LABEL_38;
    }
    v63 = *(_QWORD *)(v61 + 16);
    v65 = v181;
    v64 = v182;
    if (!v63)
    {
LABEL_33:
      v84 = (uint64_t)v171;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v65 + 56))(v171, 1, 1, v64, v62);
      swift_bridgeObjectRelease(v61);
      v55 = (SEL *)&unk_1005AA000;
      goto LABEL_38;
    }
    v177 = (void (**)(uint64_t, uint64_t))v46;
    v66 = v61 + ((*(unsigned __int8 *)(v181 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v181 + 80));
    v67 = *(_QWORD *)(v181 + 72);
    v68 = *(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v181 + 16);
    v167 = v61;
    v69 = swift_bridgeObjectRetain(v61);
    v70 = (uint64_t)v179;
    v71 = v180;
    while (1)
    {
      v74 = v68(v71, v66, v64, v69);
      v75 = FMFDevice.identifier.getter(v74);
      v77 = v76;
      v78 = v184[6];
      v79 = swift_retain(v78);
      dispatch thunk of FMFManager.myInfo.getter(v79);
      v80 = swift_release(v78);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v183)(v70, 1, v45, v80) == 1)
        break;
      v81 = FMFMyInfo.meDeviceId.getter();
      v83 = v82;
      v177[1](v70, v45);
      if (!v83)
        goto LABEL_30;
      if (v75 == v81 && v83 == v77)
      {
        v86 = v167;
        swift_bridgeObjectRelease(v167);
        swift_bridgeObjectRelease(v77);
        goto LABEL_37;
      }
      v72 = _stringCompareWithSmolCheck(_:_:expecting:)(v75, v77, v81, v83, 0);
      swift_bridgeObjectRelease(v77);
      v73 = swift_bridgeObjectRelease(v83);
      if ((v72 & 1) != 0)
      {
        v86 = v167;
        v83 = v167;
LABEL_37:
        v65 = v181;
        v64 = v182;
        v87 = swift_bridgeObjectRelease(v83);
        v84 = (uint64_t)v171;
        (*(void (**)(char *, char *, uint64_t, __n128))(v65 + 32))(v171, v180, v64, v87);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v65 + 56))(v84, 0, 1, v64);
        swift_bridgeObjectRelease(v86);
        v55 = (SEL *)&unk_1005AA000;
LABEL_38:
        v88 = v170;
        sub_100007464(v84, v170, &qword_1005D2BC8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v88, 1, v64) == 1)
        {
          sub_1000051EC(v88, &qword_1005D2BC8);
          v89 = v84;
          goto LABEL_49;
        }
        v90 = FMFDevice.name.getter();
        v91 = v88;
        v93 = v92;
        (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v91, v64);
        v94 = *(_QWORD *)&v178[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_beaconUUID + 8];
        if (v94)
        {
          v95 = *(_QWORD *)&v178[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_beaconUUID];
          v96 = v184[3];
          swift_bridgeObjectRetain(*(_QWORD *)&v178[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_beaconUUID
                                                  + 8]);
          v97 = swift_retain(v96);
          v98 = FMIPManager.devices.getter(v97);
          swift_bridgeObjectRetain(v94);
          v99 = sub_1003F26FC(v98, v95, v94);
          swift_bridgeObjectRelease(v98);
          swift_bridgeObjectRelease(v94);
          v100 = v99[2];
          v101 = type metadata accessor for FMIPDevice(0);
          v102 = *(_QWORD *)(v101 - 8);
          if (v100)
          {
            v103 = (uint64_t)v169;
            (*(void (**)(char *, unint64_t, uint64_t))(v102 + 16))(v169, (unint64_t)v99+ ((*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80)), v101);
            v104 = 0;
          }
          else
          {
            v104 = 1;
            v103 = (uint64_t)v169;
          }
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v102 + 56))(v103, v104, 1, v101);
          swift_release(v96);
          swift_bridgeObjectRelease(v94);
          v105 = swift_bridgeObjectRelease(v99);
          v106 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v102 + 48))(v103, 1, v101, v105);
          sub_1000051EC(v103, &qword_1005D6710);
          v107 = objc_msgSend((id)objc_opt_self(NSBundle), v55[208]);
          v108 = 0xD00000000000001BLL;
          if (v106 == 1)
          {
            v109 = 0xD00000000000003BLL;
            v165 = 0x80000001004A91F0;
            v110 = "ITEM_NOTIFICATIONS_LEFT_BEHIND_TRUSTED_LOCATION_DESCRIPTION";
          }
          else
          {
            v109 = 0xD00000000000003DLL;
            v165 = 0x80000001004A91F0;
            v110 = "DEVICE_NOTIFICATIONS_LEFT_BEHIND_TRUSTED_LOCATION_DESCRIPTION";
          }
          v111 = (unint64_t)(v110 - 32) | 0x8000000000000000;
          v112.value._object = (void *)0x80000001004A91D0;
          v112.value._countAndFlagsBits = 0xD000000000000016;
          v113._countAndFlagsBits = 0;
          v113._object = (void *)0xE000000000000000;
          v114 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v109, v112, (NSBundle)v107, v113, *(Swift::String *)&v108);

          v115 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
          v116 = swift_allocObject(v115, 72, 7);
          *(_OWORD *)(v116 + 16) = xmmword_100481740;
          *(_QWORD *)(v116 + 56) = &type metadata for String;
          *(_QWORD *)(v116 + 64) = sub_100071E88();
          *(_QWORD *)(v116 + 32) = v90;
          *(_QWORD *)(v116 + 40) = v93;
          String.init(format:_:)(v114._countAndFlagsBits, v114._object, v116);
          v118 = v117;
          swift_bridgeObjectRelease(v114._object);
          v119 = String._bridgeToObjectiveC()();
          v120 = v171;
          *(_QWORD *)&v121 = swift_bridgeObjectRelease(v118).n128_u64[0];
          v122 = v168;
          objc_msgSend(v168, "setText:", v119, v121);

          objc_msgSend(v122, "setNumberOfLines:", 0);
          v123 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleFootnote);
          objc_msgSend(v122, "setFont:", v123);

          v124 = objc_msgSend(v176, "secondaryLabelColor");
          objc_msgSend(v122, "setTextColor:", v124);

          objc_msgSend(v122, "setLineBreakMode:", 0);
          objc_msgSend(v122, "sizeToFit");
          v89 = (uint64_t)v120;
LABEL_49:
          sub_1000051EC(v89, &qword_1005D2BC8);
        }
        else
        {
          sub_1000051EC(v84, &qword_1005D2BC8);
          swift_bridgeObjectRelease(v93);
        }
        goto LABEL_50;
      }
LABEL_23:
      v71 = v180;
      v65 = v181;
      v64 = v182;
      (*(void (**)(char *, uint64_t, __n128))(v181 + 8))(v180, v182, v73);
      v66 += v67;
      if (!--v63)
      {
        v61 = v167;
        v62 = swift_bridgeObjectRelease(v167);
        goto LABEL_33;
      }
    }
    sub_1000051EC(v70, (uint64_t *)&unk_1005D2A40);
LABEL_30:
    v73 = swift_bridgeObjectRelease(v77);
    goto LABEL_23;
  }
  if (v47 == v56 && v48 == v58)
  {
    swift_bridgeObjectRelease(v48);
    swift_bridgeObjectRelease(v58);
    goto LABEL_50;
  }
  v85 = _stringCompareWithSmolCheck(_:_:expecting:)(v47, v48, v56, v58, 0);
  swift_bridgeObjectRelease(v48);
  swift_bridgeObjectRelease(v58);
  if ((v85 & 1) == 0)
    goto LABEL_19;
LABEL_50:
  v125 = v178;
  sub_1003F84DC();
  sub_1003FD504();
  v126 = *(void **)(v173 + OBJC_IVAR____TtC6FindMy25FMSectionPlatterGroupView_sectionLabel);
  v127 = &v125[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_suggestedSafeLocations];
  swift_beginAccess(&v125[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_suggestedSafeLocations], v185, 0, 0);
  if (*(_QWORD *)(*(_QWORD *)v127 + 16))
  {
    v128 = (void *)objc_opt_self(NSBundle);
    v129 = v126;
    v130 = objc_msgSend(v128, v55[208]);
    v187._countAndFlagsBits = 0xD00000000000001BLL;
    v131._countAndFlagsBits = 0xD000000000000024;
    v187._object = (void *)0x80000001004A91F0;
    v131._object = (void *)0x80000001004C5B60;
    v132.value._object = (void *)0x80000001004A91D0;
    v132.value._countAndFlagsBits = 0xD000000000000016;
    v133._countAndFlagsBits = 0;
    v133._object = (void *)0xE000000000000000;
    object = NSLocalizedString(_:tableName:bundle:value:comment:)(v131, v132, (NSBundle)v130, v133, v187)._object;

    v135 = String._bridgeToObjectiveC()();
    *(_QWORD *)&v136 = swift_bridgeObjectRelease(object).n128_u64[0];
  }
  else
  {
    v138 = v126;
    v135 = 0;
  }
  v137 = v172;
  objc_msgSend(v126, "setText:", v135, v136);

  v139 = v178;
  sub_1003F95BC();
  v141 = v140;
  v142 = String._bridgeToObjectiveC()();
  objc_msgSend(v137, "setText:", v142, swift_bridgeObjectRelease(v141).n128_f64[0]);

  objc_msgSend(v137, "setNumberOfLines:", 0);
  v143 = objc_msgSend((id)objc_opt_self(UIFont), "preferredFontForTextStyle:", UIFontTextStyleFootnote);
  objc_msgSend(v137, "setFont:", v143);

  v144 = objc_msgSend(v176, "secondaryLabelColor");
  objc_msgSend(v137, "setTextColor:", v144);

  objc_msgSend(v137, "setLineBreakMode:", 0);
  objc_msgSend(v137, "sizeToFit");
  v184 = (_QWORD *)objc_opt_self(NSBundle);
  v145 = objc_msgSend(v184, v55[208]);
  v188._countAndFlagsBits = 0xD00000000000001BLL;
  v183 = (unsigned int (*)(char *, uint64_t, uint64_t))0xD00000000000001BLL;
  v188._object = (void *)0x80000001004A91F0;
  v146._countAndFlagsBits = 0xD000000000000023;
  v146._object = (void *)0x80000001004B3F30;
  v147.value._countAndFlagsBits = 0xD000000000000016;
  v147.value._object = (void *)0x80000001004A91D0;
  v148._countAndFlagsBits = 0;
  v148._object = (void *)0xE000000000000000;
  v149 = NSLocalizedString(_:tableName:bundle:value:comment:)(v146, v147, (NSBundle)v145, v148, v188);

  v150 = v174;
  v151 = (Swift::String *)&v174[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_title];
  v152 = *(_QWORD *)&v174[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_title + 8];
  *v151 = v149;
  swift_bridgeObjectRelease(v152);
  v153 = v151->_object;
  v154 = *(id *)&v150[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_titleLabel];
  swift_bridgeObjectRetain(v153);
  v155 = String._bridgeToObjectiveC()();
  objc_msgSend(v154, "setText:", v155, swift_bridgeObjectRelease(v153).n128_f64[0]);

  v156 = &v150[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_delegate];
  *((_QWORD *)v156 + 1) = &off_1005649C0;
  swift_unknownObjectWeakAssign(v156, v139);
  v157 = String._bridgeToObjectiveC()();
  objc_msgSend(v150, "setAccessibilityIdentifier:", v157);

  v150[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_separated] = 0;
  objc_msgSend(*(id *)&v150[OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_separator], "setHidden:", 1);
  v158 = objc_msgSend(v139, "navigationItem");
  v159 = objc_msgSend(v184, "mainBundle");
  v189._object = (void *)0x80000001004A91F0;
  v160._countAndFlagsBits = 0xD000000000000023;
  v160._object = (void *)0x80000001004B3F30;
  v161.value._countAndFlagsBits = 0xD000000000000016;
  v161.value._object = (void *)0x80000001004A91D0;
  v162._countAndFlagsBits = 0;
  v162._object = (void *)0xE000000000000000;
  v189._countAndFlagsBits = (uint64_t)v183;
  v163 = NSLocalizedString(_:tableName:bundle:value:comment:)(v160, v161, (NSBundle)v159, v162, v189)._object;

  v164 = String._bridgeToObjectiveC()();
  objc_msgSend(v158, "setTitle:", v164, swift_bridgeObjectRelease(v163).n128_f64[0]);

}

void sub_1003F84DC()
{
  void *v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  Class isa;
  uint64_t v7;

  v1 = objc_msgSend(objc_allocWithZone((Class)UIBarButtonItem), "initWithBarButtonSystemItem:target:action:", 0, v0, "doneAction");
  v2 = objc_msgSend(v0, "navigationItem");
  v3 = sub_100053F2C(&qword_1005D2F10);
  v4 = swift_allocObject(v3, 40, 7);
  *(_OWORD *)(v4 + 16) = xmmword_100481B00;
  *(_QWORD *)(v4 + 32) = v1;
  v7 = v4;
  specialized Array._endMutation()(v4);
  sub_100006C5C(0, &qword_1005D34A0, UIBarButtonItem_ptr);
  v5 = v1;
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v2, "setRightBarButtonItems:animated:", isa, 0, swift_bridgeObjectRelease(v7).n128_f64[0]);

}

uint64_t sub_1003F85E8()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _BYTE *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[5];
  uint64_t v26;

  v1 = v0;
  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v24 = *(_QWORD *)(v2 - 8);
  __chkstk_darwin(v2);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1003F88F8();
  if (!v9)
    v9 = objc_msgSend(objc_allocWithZone((Class)MKAnnotationView), "init");
  v10 = v9;
  v11 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v12 = (void *)static OS_dispatch_queue.main.getter(v11);
  v13 = swift_allocObject(&unk_100564BF0, 32, 7);
  *(_QWORD *)(v13 + 16) = v10;
  *(_QWORD *)(v13 + 24) = v0;
  aBlock[4] = sub_1003FDF50;
  v26 = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_100564C08;
  v14 = _Block_copy(aBlock);
  v15 = v26;
  v16 = v10;
  v17 = v1;
  swift_release(v15);
  static DispatchQoS.unspecified.getter(v18);
  aBlock[0] = _swiftEmptyArrayStorage;
  v19 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v20 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v21 = sub_1000555E4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v20, v21, v2, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v4, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id sub_1003F8810(id a1, uint64_t a2)
{
  void *v4;
  double v5;
  double v6;
  double v7;

  if (qword_1005D1E18 != -1)
    swift_once(&qword_1005D1E18, sub_10028BDDC);
  objc_msgSend(a1, "frame");
  objc_msgSend(a1, "setFrame:");
  v4 = *(void **)(a2 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindImageView);
  objc_msgSend(v4, "addSubview:", a1);
  objc_msgSend(v4, "bounds");
  v6 = v5 * 0.5 - *((double *)&xmmword_1005F57F0 + 1);
  objc_msgSend(v4, "bounds");
  return objc_msgSend(a1, "setCenter:", v6, v7 * 0.5);
}

_BYTE *sub_1003F88F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  __n128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  __n128 v46;
  uint64_t v47;
  uint64_t (*v48)(char *, uint64_t, uint64_t, __n128);
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  _BYTE *v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  id v68;
  void *v69;
  void *v70;
  id v71;
  NSString v72;
  uint64_t v73;
  void *v74;
  char *v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  void *v84;
  void *v85;
  id v86;
  NSString v87;
  _QWORD v89[2];
  uint64_t v90;
  id v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;

  v1 = type metadata accessor for FMIPItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)v89 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FMIPDevice(0);
  v97 = *(_QWORD *)(v5 - 8);
  __chkstk_darwin(v5);
  v92 = (char *)v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  v8 = __chkstk_darwin(v7);
  v93 = (uint64_t)v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v96 = (uint64_t)v89 - v10;
  v11 = sub_100053F2C(&qword_1005D6710);
  v12 = __chkstk_darwin(v11);
  v14 = (char *)v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v16 = (char *)v89 - v15;
  v17 = objc_msgSend(objc_allocWithZone((Class)CLLocation), "init");
  v18 = v17;
  v19 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_beaconUUID + 8);
  if (!v19)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v30 = type metadata accessor for Logger(0);
    v31 = sub_100056D88(v30, (uint64_t)qword_1005F5748);
    v32 = Logger.logObject.getter(v31);
    v33 = static os_log_type_t.default.getter(v32);
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "FMTrustedLocationDetailViewController: no beacon UUID", v34, 2u);
      swift_slowDealloc(v34, -1, -1);
    }

    return 0;
  }
  v89[0] = v4;
  v94 = v2;
  v95 = v16;
  v90 = v1;
  v91 = v17;
  v20 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_beaconUUID);
  v89[1] = v0;
  v21 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator);
  v22 = *(_QWORD *)(v21 + 24);
  swift_bridgeObjectRetain(v19);
  v23 = swift_retain(v22);
  v24 = FMIPManager.devices.getter(v23);
  swift_bridgeObjectRetain(v19);
  v25 = sub_1003F26FC(v24, v20, v19);
  swift_bridgeObjectRelease(v24);
  v26 = swift_bridgeObjectRelease(v19);
  if (v25[2])
  {
    v27 = v97;
    v28 = v95;
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v97 + 16))(v95, (unint64_t)v25+ ((*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80)), v5, v26);
    v29 = 0;
  }
  else
  {
    v29 = 1;
    v28 = v95;
    v27 = v97;
  }
  v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
  v36 = 1;
  v35(v28, v29, 1, v5);
  swift_release(v22);
  swift_bridgeObjectRelease(v25);
  v37 = *(_QWORD *)(v21 + 24);
  v38 = swift_retain(v37);
  v39 = FMIPManager.items.getter(v38);
  swift_bridgeObjectRetain(v19);
  v40 = sub_100114030(v39, v20, v19);
  swift_bridgeObjectRelease(v39);
  v41 = swift_bridgeObjectRelease(v19);
  if (v40[2])
  {
    v42 = v94;
    v43 = v96;
    v44 = v90;
    (*(void (**)(uint64_t, unint64_t, uint64_t, __n128))(v94 + 16))(v96, (unint64_t)v40+ ((*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80)), v90, v41);
    v36 = 0;
    v45 = v91;
  }
  else
  {
    v44 = v90;
    v45 = v91;
    v43 = v96;
    v42 = v94;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56))(v43, v36, 1, v44);
  swift_release(v37);
  swift_bridgeObjectRelease(v19);
  v46 = swift_bridgeObjectRelease(v40);
  v47 = v97;
  v48 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v97 + 48);
  v49 = (uint64_t)v95;
  v50 = v48(v95, 1, v5, v46);
  sub_100007464(v49, (uint64_t)v14, &qword_1005D6710);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v48)(v14, 1, v5) == 1)
  {
    sub_1000051EC((uint64_t)v14, &qword_1005D6710);
  }
  else
  {
    v51 = (uint64_t)v92;
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v92, v14, v5);
    if (v50 != 1)
    {
      v76 = (void *)sub_1003F9114(v51, v45);
      v77 = sub_100053F2C(&qword_1005D2F10);
      v78 = swift_allocObject(v77, 40, 7);
      *(_OWORD *)(v78 + 16) = xmmword_100481B00;
      *(_QWORD *)(v78 + 32) = v76;
      v98 = v78;
      specialized Array._endMutation()(v78);
      v79 = v98;
      v80 = objc_allocWithZone((Class)type metadata accessor for FMClusterAnnotation());
      v81 = v51;
      v82 = v47;
      v83 = v76;
      sub_100353488(v79);
      v85 = v84;
      v86 = objc_allocWithZone((Class)type metadata accessor for FMClusteredAnnotationView());
      v87 = String._bridgeToObjectiveC()();
      v60 = objc_msgSend(v86, "initWithAnnotation:reuseIdentifier:", v85, v87);

      (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v81, v5);
      if (v60)
        goto LABEL_25;
      goto LABEL_27;
    }
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v51, v5);
  }
  v52 = v43;
  v53 = v93;
  sub_100007464(v52, v93, (uint64_t *)&unk_1005D3AA0);
  v54 = v94;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48))(v53, 1, v44) != 1)
  {
    v61 = v89[0];
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v54 + 32))(v89[0], v53, v44);
    v62 = (void *)sub_100290D40(v61, v45);
    v63 = sub_100053F2C(&qword_1005D2F10);
    v64 = swift_allocObject(v63, 40, 7);
    *(_OWORD *)(v64 + 16) = xmmword_100481B00;
    *(_QWORD *)(v64 + 32) = v62;
    v98 = v64;
    specialized Array._endMutation()(v64);
    v65 = v98;
    v66 = objc_allocWithZone((Class)type metadata accessor for FMClusterAnnotation());
    v67 = v54;
    v68 = v62;
    sub_100353488(v65);
    v70 = v69;
    v71 = objc_allocWithZone((Class)type metadata accessor for FMClusteredAnnotationView());
    v72 = String._bridgeToObjectiveC()();
    v60 = objc_msgSend(v71, "initWithAnnotation:reuseIdentifier:", v70, v72);

    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v61, v44);
    if (v60)
    {
LABEL_25:
      v73 = OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_puckHidden;
      v60[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_puckHidden] = 1;
      v74 = *(void **)&v60[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_puckIcon];
      v75 = v60;
      objc_msgSend(v74, "setHidden:", 1);
      objc_msgSend(*(id *)&v75[OBJC_IVAR____TtC6FindMy25FMClusteredAnnotationView_puckBackgroundLayer], "setHidden:", v60[v73]);

      sub_1000051EC(v96, (uint64_t *)&unk_1005D3AA0);
LABEL_28:
      sub_1000051EC(v49, &qword_1005D6710);
      return v60;
    }
LABEL_27:
    sub_1000051EC(v96, (uint64_t *)&unk_1005D3AA0);

    goto LABEL_28;
  }
  sub_1000051EC(v53, (uint64_t *)&unk_1005D3AA0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v55 = type metadata accessor for Logger(0);
  v56 = sub_100056D88(v55, (uint64_t)qword_1005F5748);
  v57 = Logger.logObject.getter(v56);
  v58 = static os_log_type_t.default.getter(v57);
  if (os_log_type_enabled(v57, v58))
  {
    v59 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v59 = 0;
    _os_log_impl((void *)&_mh_execute_header, v57, v58, "FMTrustedLocationDetailViewController: no item or device", v59, 2u);
    swift_slowDealloc(v59, -1, -1);
  }

  sub_1000051EC(v96, (uint64_t *)&unk_1005D3AA0);
  sub_1000051EC(v49, &qword_1005D6710);
  return 0;
}

uint64_t sub_1003F9114(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, _QWORD, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  double v32;
  double v33;
  __n128 v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  __n128 v42;
  uint64_t v43;
  __n128 v44;
  uint64_t v45;
  id v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  id v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;

  v63 = a2;
  v3 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  __chkstk_darwin(v3);
  v64 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = type metadata accessor for FMIPDevice(0);
  v65 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v61 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FMIPDeviceImageCacheRequest(0);
  v58 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = type metadata accessor for FMIPDeviceImageSize(0);
  v9 = *(_QWORD *)(v60 - 8);
  v10 = __chkstk_darwin(v60);
  v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v14 = (char *)&v58 - v13;
  v15 = sub_100053F2C(&qword_1005D72D0);
  __chkstk_darwin(v15);
  v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for FMIPItemGroup(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = __chkstk_darwin(v18);
  v22 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = a1;
  FMIPDevice.itemGroup.getter(v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_1000051EC((uint64_t)v17, &qword_1005D72D0);
    v23 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v59 + OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator) + 24)
                    + 24);
    v24 = *(void (**)(char *, _QWORD, uint64_t))(v9 + 104);
    v25 = v9;
    v26 = v60;
    v24(v14, enum case for FMIPDeviceImageSize.list(_:), v60);
    v27 = v6;
    v28 = (uint64_t)v61;
    v29 = v62;
    (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v61, v66, v62);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v12, v14, v26);
    v30 = (void *)objc_opt_self(UIScreen);
    swift_retain(v23);
    v31 = objc_msgSend(v30, "mainScreen");
    objc_msgSend(v31, "scale");
    v33 = v32;

    FMIPDeviceImageCacheRequest.init(device:size:scale:)(v28, v12, v33);
    dispatch thunk of FMImageCache.cachedImage(for:completion:)(&v67, v8, 0, 0);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v8, v27);
    v34 = swift_release(v23);
    v35 = v67;
    (*(void (**)(char *, uint64_t, __n128))(v25 + 8))(v14, v26, v34);
    v36 = v29;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v22, v17, v18);
    v37 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v59 + OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator) + 24)
                    + 24);
    v38 = swift_retain(v37);
    v39 = FMIPItemGroup.items.getter(v38);
    v40 = v9;
    v41 = (char *)sub_1000CEC84(v39);
    v42 = swift_bridgeObjectRelease(v39);
    v43 = v60;
    (*(void (**)(char *, _QWORD, uint64_t, __n128))(v40 + 104))(v14, enum case for FMIPDeviceImageSize.list(_:), v60, v42);
    v35 = (void *)sub_100182A4C(v41, v66, (uint64_t)v14, 0, 0);
    swift_release(v37);
    v44 = swift_bridgeObjectRelease(v41);
    (*(void (**)(char *, uint64_t, __n128))(v40 + 8))(v14, v43, v44);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
    v28 = (uint64_t)v61;
    v36 = v62;
  }
  v45 = v65;
  v46 = v63;
  objc_msgSend(v63, "coordinate");
  v48 = v47;
  v50 = v49;
  objc_msgSend(v46, "horizontalAccuracy");
  v52 = v51;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 16))(v28, v66, v36);
  v53 = type metadata accessor for FMIPItem(0);
  v54 = (uint64_t)v64;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v64, 1, 1, v53);
  v55 = objc_allocWithZone((Class)type metadata accessor for FMDeviceAnnotation(0));
  v56 = sub_1003448E0(v28, v54, v35, 0, 0, 2, v48, v50, v52);

  return v56;
}

uint64_t sub_1003F95BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  __n128 v24;
  char *v25;
  void (*v26)(uint64_t, char *, uint64_t, __n128);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  void (*v36)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  __n128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  id v53;
  Swift::String v54;
  Swift::String_optional v55;
  Swift::String v56;
  Swift::String v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __n128 v64;
  uint64_t v65;
  char *v66;
  id v67;
  Swift::String v68;
  Swift::String_optional v69;
  Swift::String v70;
  Swift::String v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __n128 v78;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  Swift::String v89;
  Swift::String v90;

  v1 = type metadata accessor for FMIPItem(0);
  v86 = *(_QWORD *)(v1 - 8);
  __chkstk_darwin(v1);
  v3 = (char *)&v80 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = type metadata accessor for FMIPDevice(0);
  v4 = *(_QWORD *)(v88 - 8);
  __chkstk_darwin(v88);
  v6 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  v8 = __chkstk_darwin(v7);
  v85 = (uint64_t)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v11 = (char *)&v80 - v10;
  v12 = sub_100053F2C(&qword_1005D6710);
  v13 = __chkstk_darwin(v12);
  v15 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v17 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_beaconUUID + 8);
  if (!v17)
  {
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v31 = type metadata accessor for Logger(0);
    v32 = sub_100056D88(v31, (uint64_t)qword_1005F5748);
    v33 = Logger.logObject.getter(v32);
    v34 = static os_log_type_t.default.getter(v33);
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc(2, -1);
      *(_WORD *)v35 = 0;
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "FMTrustedLocationDetailViewController: no beacon UUID", v35, 2u);
      swift_slowDealloc(v35, -1, -1);
    }

    return 0;
  }
  v80 = v3;
  v81 = v6;
  v83 = v1;
  v84 = v11;
  v87 = (uint64_t)&v80 - v16;
  v18 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_beaconUUID);
  v19 = *(_QWORD *)(v0 + OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator);
  v20 = *(_QWORD *)(v19 + 24);
  swift_bridgeObjectRetain(v17);
  v21 = swift_retain(v20);
  v22 = FMIPManager.devices.getter(v21);
  swift_bridgeObjectRetain(v17);
  v23 = sub_1003F26FC(v22, v18, v17);
  swift_bridgeObjectRelease(v22);
  v24 = swift_bridgeObjectRelease(v17);
  if (v23[2])
  {
    v25 = (char *)v23 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v26 = *(void (**)(uint64_t, char *, uint64_t, __n128))(v4 + 16);
    v27 = v87;
    v28 = v4;
    v29 = v88;
    v26(v87, v25, v88, v24);
    v30 = 0;
  }
  else
  {
    v30 = 1;
    v28 = v4;
    v27 = v87;
    v29 = v88;
  }
  v82 = v28;
  v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
  v37 = 1;
  v36(v27, v30, 1, v29);
  swift_release(v20);
  swift_bridgeObjectRelease(v23);
  v38 = *(_QWORD *)(v19 + 24);
  v39 = swift_retain(v38);
  v40 = FMIPManager.items.getter(v39);
  swift_bridgeObjectRetain(v17);
  v41 = sub_100114030(v40, v18, v17);
  swift_bridgeObjectRelease(v40);
  v42 = swift_bridgeObjectRelease(v17);
  if (v41[2])
  {
    v43 = v86;
    v45 = v83;
    v44 = (uint64_t)v84;
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v86 + 16))(v84, (unint64_t)v41+ ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80)), v83, v42);
    v37 = 0;
  }
  else
  {
    v45 = v83;
    v44 = (uint64_t)v84;
    v43 = v86;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56))(v44, v37, 1, v45);
  swift_release(v38);
  swift_bridgeObjectRelease(v17);
  swift_bridgeObjectRelease(v41);
  v46 = v87;
  sub_100007464(v87, (uint64_t)v15, &qword_1005D6710);
  v47 = v82;
  v48 = v88;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v15, 1, v88) != 1)
  {
    v51 = v81;
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v81, v15, v48);
    v52 = v48;
    v53 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v89._countAndFlagsBits = 0xD00000000000001BLL;
    v54._countAndFlagsBits = 0xD000000000000034;
    v89._object = (void *)0x80000001004A91F0;
    v54._object = (void *)0x80000001004C5B20;
    v55.value._object = (void *)0x80000001004A91D0;
    v55.value._countAndFlagsBits = 0xD000000000000016;
    v56._countAndFlagsBits = 0;
    v56._object = (void *)0xE000000000000000;
    v57 = NSLocalizedString(_:tableName:bundle:value:comment:)(v54, v55, (NSBundle)v53, v56, v89);

    v58 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
    v59 = swift_allocObject(v58, 72, 7);
    *(_OWORD *)(v59 + 16) = xmmword_100481740;
    v60 = FMIPDevice.name.getter(v59);
    v61 = v44;
    v63 = v62;
    *(_QWORD *)(v59 + 56) = &type metadata for String;
    *(_QWORD *)(v59 + 64) = sub_100071E88();
    *(_QWORD *)(v59 + 32) = v60;
    *(_QWORD *)(v59 + 40) = v63;
    v50 = String.init(format:_:)(v57._countAndFlagsBits, v57._object, v59);
    v64 = swift_bridgeObjectRelease(v57._object);
    (*(void (**)(char *, uint64_t, __n128))(v47 + 8))(v51, v52, v64);
    sub_1000051EC(v61, (uint64_t *)&unk_1005D3AA0);
    v65 = v87;
LABEL_19:
    sub_1000051EC(v65, &qword_1005D6710);
    return v50;
  }
  sub_1000051EC((uint64_t)v15, &qword_1005D6710);
  v49 = v85;
  sub_100007464(v44, v85, (uint64_t *)&unk_1005D3AA0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v49, 1, v45) != 1)
  {
    v66 = v80;
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v80, v49, v45);
    v67 = objc_msgSend((id)objc_opt_self(NSBundle), "mainBundle");
    v90._countAndFlagsBits = 0xD00000000000001BLL;
    v68._countAndFlagsBits = 0xD000000000000032;
    v90._object = (void *)0x80000001004A91F0;
    v68._object = (void *)0x80000001004C5AE0;
    v69.value._object = (void *)0x80000001004A91D0;
    v69.value._countAndFlagsBits = 0xD000000000000016;
    v70._countAndFlagsBits = 0;
    v70._object = (void *)0xE000000000000000;
    v71 = NSLocalizedString(_:tableName:bundle:value:comment:)(v68, v69, (NSBundle)v67, v70, v90);

    v72 = sub_100053F2C((uint64_t *)&unk_1005D33E0);
    v73 = swift_allocObject(v72, 72, 7);
    *(_OWORD *)(v73 + 16) = xmmword_100481740;
    v74 = v43;
    v75 = FMIPItem.name.getter(v73);
    v77 = v76;
    *(_QWORD *)(v73 + 56) = &type metadata for String;
    *(_QWORD *)(v73 + 64) = sub_100071E88();
    *(_QWORD *)(v73 + 32) = v75;
    *(_QWORD *)(v73 + 40) = v77;
    v50 = String.init(format:_:)(v71._countAndFlagsBits, v71._object, v73);
    v78 = swift_bridgeObjectRelease(v71._object);
    (*(void (**)(char *, uint64_t, __n128))(v74 + 8))(v66, v45, v78);
    sub_1000051EC(v44, (uint64_t *)&unk_1005D3AA0);
    v65 = v46;
    goto LABEL_19;
  }
  sub_1000051EC(v49, (uint64_t *)&unk_1005D3AA0);
  sub_1000051EC(v44, (uint64_t *)&unk_1005D3AA0);
  sub_1000051EC(v46, &qword_1005D6710);
  return 0;
}

id sub_1003F9CD8(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __n128 v30;
  _QWORD *v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  _QWORD *v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t *v48;
  uint64_t v49;
  char **v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  double v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __n128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __n128 v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t (*v93)(char *, unint64_t, uint64_t, __n128);
  __n128 v94;
  char *v95;
  uint64_t v96;
  char v97;
  __n128 v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  __n128 v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  __n128 v111;
  uint64_t v112;
  __n128 v113;
  double v114;
  double v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  int v123;
  int v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unsigned int v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t (*v146)(uint64_t, uint64_t, uint64_t);
  _QWORD v147[3];
  _QWORD *v148;
  uint64_t v149;

  v7 = v6;
  v128 = a6;
  v127 = a5;
  v126 = a4;
  v123 = a3;
  v124 = a2;
  v122 = a1;
  v132 = type metadata accessor for FMFDevice(0);
  v133 = *(_QWORD *)(v132 - 8);
  __chkstk_darwin(v132);
  v131 = (char *)&v119 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_100053F2C(&qword_1005D2BC8);
  __chkstk_darwin(v9);
  v121 = (char *)&v119 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = type metadata accessor for FMIPSafeLocationApprovalState(0);
  v144 = *(_QWORD *)(v141 - 8);
  v11 = __chkstk_darwin(v141);
  v143 = (char *)&v119 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v142 = (char *)&v119 - v13;
  v14 = sub_100053F2C((uint64_t *)&unk_1005D2A40);
  v15 = __chkstk_darwin(v14);
  v130 = (char *)&v119 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __chkstk_darwin(v15);
  v19 = (char *)&v119 - v18;
  __chkstk_darwin(v17);
  v125 = (char *)&v119 - v20;
  v21 = type metadata accessor for FMIPSafeLocation(0);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = __chkstk_darwin(v21);
  v139 = (char *)&v119 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v26 = (char *)&v119 - v25;
  v135 = *(_QWORD *)(v6 + OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator);
  v27 = *(_QWORD *)(v135 + 24);
  v28 = swift_retain(v27);
  v29 = FMIPManager.safeLocations.getter(v28);
  v30 = swift_release(v27);
  v31 = _swiftEmptyArrayStorage;
  v148 = _swiftEmptyArrayStorage;
  v140 = *(_QWORD *)(v29 + 16);
  v129 = v7;
  if (!v140)
    goto LABEL_13;
  v120 = v19;
  v32 = 0;
  v138 = enum case for FMIPSafeLocationApprovalState.accepted(_:);
  v134 = v26;
  v136 = v21;
  v137 = v29;
  v33 = v143;
  v34 = v141;
  do
  {
    if (v32 >= *(_QWORD *)(v29 + 16))
    {
      __break(1u);
      goto LABEL_58;
    }
    v35 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    v145 = *(_QWORD *)(v22 + 72);
    v146 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v35;
    v36 = (*(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v22 + 16))(v26, v29 + v35 + v145 * v32, v21, v30);
    v37 = v142;
    FMIPSafeLocation.approvalState.getter(v36);
    v7 = v144;
    (*(void (**)(char *, _QWORD, uint64_t))(v144 + 104))(v33, v138, v34);
    v38 = sub_100008000(&qword_1005E3E10, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPSafeLocationApprovalState, (uint64_t)&protocol conformance descriptor for FMIPSafeLocationApprovalState);
    dispatch thunk of RawRepresentable.rawValue.getter(v147, v34, v38);
    dispatch thunk of RawRepresentable.rawValue.getter(&v149, v34, v38);
    v39 = v26;
    v40 = v147[0];
    v41 = v149;
    v42 = *(void (**)(char *, uint64_t))(v7 + 8);
    v42(v33, v34);
    v42(v37, v34);
    if (v40 == v41)
    {
      v7 = *(_QWORD *)(v22 + 32);
      v21 = v136;
      ((void (*)(char *, char *, uint64_t))v7)(v139, v39, v136);
      v43 = v148;
      if ((swift_isUniquelyReferenced_nonNull_native(v148) & 1) == 0)
      {
        sub_100111DA4(0, v43[2] + 1, 1);
        v43 = v148;
      }
      v29 = v137;
      v45 = v43[2];
      v44 = v43[3];
      if (v45 >= v44 >> 1)
      {
        sub_100111DA4(v44 > 1, v45 + 1, 1);
        v43 = v148;
      }
      v43[2] = v45 + 1;
      ((void (*)(char *, char *, uint64_t))v7)((char *)v146 + (_QWORD)v43 + v45 * v145, v139, v21);
      v148 = v43;
      v26 = v134;
    }
    else
    {
      v21 = v136;
      (*(void (**)(char *, uint64_t))(v22 + 8))(v39, v136);
      v26 = v39;
      v29 = v137;
    }
    ++v32;
  }
  while (v140 != v32);
  v31 = v148;
  v7 = v129;
  v19 = v120;
LABEL_13:
  swift_bridgeObjectRelease(v29);
  v46 = v122;
  swift_bridgeObjectRetain(v122);
  v47 = sub_1003FD05C((uint64_t)v31, v46);
  swift_release(v31);
  swift_bridgeObjectRelease(v46);
  v48 = (uint64_t *)(v7 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_assignedSafeLocations);
  swift_beginAccess(v7 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_assignedSafeLocations, &v148, 1, 0);
  v49 = *v48;
  *v48 = v46;
  swift_bridgeObjectRetain(v46);
  swift_bridgeObjectRelease(v49);
  v50 = (char **)(v7 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_suggestedSafeLocations);
  swift_beginAccess(v7 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_suggestedSafeLocations, v147, 1, 0);
  v51 = *v50;
  *v50 = v47;
  swift_bridgeObjectRetain(v47);
  swift_bridgeObjectRelease(v51);
  v52 = *(_QWORD *)(v7 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_trustedLocationsSection);
  sub_1002C4A98(v46);
  v53 = *(_QWORD *)(v7 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_suggestionsSection);
  sub_100428728((uint64_t)v47);
  *(_QWORD *)&v54 = swift_bridgeObjectRelease(v47).n128_u64[0];
  v55 = *(_QWORD *)(v7 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindSwitch);
  *(_BYTE *)(v55 + OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_isOn) = v123 & 1;
  objc_msgSend(*(id *)(v55 + OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_settingSwitch), "setOn:", v54);
  *(_BYTE *)(v55 + OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_isEnabled) = v124 & 1;
  sub_100115CF4();
  v56 = (_QWORD *)(v7 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_beaconUUID);
  v57 = *(_QWORD *)(v7 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_beaconUUID + 8);
  v58 = v126;
  v144 = v7 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_beaconUUID;
  v59 = v127;
  *v56 = v126;
  v56[1] = v59;
  swift_bridgeObjectRetain(v59);
  swift_bridgeObjectRelease(v57);
  v60 = (_QWORD *)(v53 + OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_beaconUUID);
  v61 = *(_QWORD *)(v53 + OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_beaconUUID + 8);
  *v60 = v58;
  v60[1] = v59;
  swift_bridgeObjectRetain(v59);
  swift_bridgeObjectRelease(v61);
  v62 = *(_QWORD *)(v53 + OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_groupBeaconUUIDs);
  v63 = v128;
  *(_QWORD *)(v53 + OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_groupBeaconUUIDs) = v128;
  swift_bridgeObjectRetain(v63);
  swift_bridgeObjectRelease(v62);
  v64 = (_QWORD *)(v52 + OBJC_IVAR____TtC6FindMy27FMTrustedLocationDetailView_beaconUUID);
  v65 = *(_QWORD *)(v52 + OBJC_IVAR____TtC6FindMy27FMTrustedLocationDetailView_beaconUUID + 8);
  *v64 = v58;
  v64[1] = v59;
  swift_bridgeObjectRetain(v59);
  swift_bridgeObjectRelease(v65);
  v66 = *(_QWORD *)(v52 + OBJC_IVAR____TtC6FindMy27FMTrustedLocationDetailView_groupBeaconUUIDs);
  *(_QWORD *)(v52 + OBJC_IVAR____TtC6FindMy27FMTrustedLocationDetailView_groupBeaconUUIDs) = v63;
  swift_bridgeObjectRetain(v63);
  swift_bridgeObjectRelease(v66);
  v67 = *(_QWORD *)(v135 + 48);
  v68 = swift_retain(v67);
  v69 = (uint64_t)v125;
  dispatch thunk of FMFManager.myInfo.getter(v68);
  swift_release(v67);
  v70 = type metadata accessor for FMFMyInfo(0);
  v71 = *(_QWORD *)(v70 - 8);
  v146 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v71 + 48);
  v72 = v146(v69, 1, v70);
  v73 = v132;
  if (v72 == 1)
  {
    sub_1000051EC(v69, (uint64_t *)&unk_1005D2A40);
    v74 = 0;
    v75 = 0;
  }
  else
  {
    v74 = FMFMyInfo.meDeviceId.getter();
    v75 = v76;
    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v69, v70);
  }
  v77 = *(_QWORD *)(v135 + 48);
  v78 = swift_retain(v77);
  dispatch thunk of FMFManager.myInfo.getter(v78);
  v79 = swift_release(v77);
  v80 = ((uint64_t (*)(char *, uint64_t, uint64_t, __n128))v146)(v19, 1, v70, v79);
  if ((_DWORD)v80 == 1)
  {
    sub_1000051EC((uint64_t)v19, (uint64_t *)&unk_1005D2A40);
    if (!v75)
    {
LABEL_27:
      v84 = 1;
      goto LABEL_30;
    }
LABEL_24:
    v84 = 0;
    v83 = v75;
  }
  else
  {
    v81 = FMFMyInfo.deviceId.getter(v80);
    v83 = v82;
    (*(void (**)(char *, uint64_t))(v71 + 8))(v19, v70);
    if (v75)
    {
      if (!v83)
        goto LABEL_24;
      if (v74 == v81 && v75 == v83)
      {
        swift_bridgeObjectRelease(v75);
        v84 = 1;
      }
      else
      {
        v84 = _stringCompareWithSmolCheck(_:_:expecting:)(v74, v75, v81, v83, 0);
        swift_bridgeObjectRelease(v75);
      }
    }
    else
    {
      if (!v83)
        goto LABEL_27;
      v84 = 0;
    }
  }
  swift_bridgeObjectRelease(v83);
LABEL_30:
  v85 = *(_QWORD *)(v135 + 48);
  v86 = swift_retain(v85);
  v87 = dispatch thunk of FMFManager.devices.getter(v86);
  v88 = swift_release(v85);
  if (!v87)
  {
    v109 = (uint64_t)v121;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v133 + 56))(v121, 1, 1, v73, v88);
    goto LABEL_49;
  }
  v89 = *(_QWORD *)(v87 + 16);
  if (!v89)
  {
    v110 = 1;
    v109 = (uint64_t)v121;
    goto LABEL_48;
  }
  LODWORD(v143) = v84;
  v145 = v71;
  v90 = v87 + ((*(unsigned __int8 *)(v133 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80));
  v91 = *(_QWORD *)(v133 + 72);
  v92 = (char *)v87;
  v93 = *(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v133 + 16);
  v142 = v92;
  v94 = swift_bridgeObjectRetain(v92);
  v95 = v131;
  v96 = (uint64_t)v130;
  while (2)
  {
    v99 = v93(v95, v90, v73, v94);
    v100 = FMFDevice.identifier.getter(v99);
    v102 = v101;
    v103 = *(_QWORD *)(v135 + 48);
    v104 = swift_retain(v103);
    dispatch thunk of FMFManager.myInfo.getter(v104);
    v105 = swift_release(v103);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t, __n128))v146)(v96, 1, v70, v105) == 1)
    {
      sub_1000051EC(v96, (uint64_t *)&unk_1005D2A40);
      goto LABEL_41;
    }
    v106 = FMFMyInfo.meDeviceId.getter();
    v108 = v107;
    (*(void (**)(uint64_t, uint64_t))(v145 + 8))(v96, v70);
    if (!v108)
    {
LABEL_41:
      v98 = swift_bridgeObjectRelease(v102);
LABEL_34:
      v95 = v131;
      v73 = v132;
      (*(void (**)(char *, uint64_t, __n128))(v133 + 8))(v131, v132, v98);
      v90 += v91;
      if (!--v89)
      {
        v87 = (uint64_t)v142;
        v88 = swift_bridgeObjectRelease(v142);
        v110 = 1;
        v7 = v129;
        v109 = (uint64_t)v121;
        goto LABEL_47;
      }
      continue;
    }
    break;
  }
  if (v100 == v106 && v108 == v102)
  {
    v87 = (uint64_t)v142;
    swift_bridgeObjectRelease(v142);
    swift_bridgeObjectRelease(v102);
    goto LABEL_46;
  }
  v97 = _stringCompareWithSmolCheck(_:_:expecting:)(v100, v102, v106, v108, 0);
  swift_bridgeObjectRelease(v102);
  v98 = swift_bridgeObjectRelease(v108);
  if ((v97 & 1) == 0)
    goto LABEL_34;
  v87 = (uint64_t)v142;
  v108 = v142;
LABEL_46:
  v73 = v132;
  v111 = swift_bridgeObjectRelease(v108);
  v109 = (uint64_t)v121;
  (*(void (**)(char *, char *, uint64_t, __n128))(v133 + 32))(v121, v131, v73, v111);
  v110 = 0;
  v7 = v129;
LABEL_47:
  LOBYTE(v84) = (_BYTE)v143;
LABEL_48:
  v112 = v133;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v133 + 56))(v109, v110, 1, v73, v88);
  v113 = swift_bridgeObjectRelease(v87);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v112 + 48))(v109, 1, v73, v113) == 1)
  {
LABEL_49:
    sub_1000051EC(v109, &qword_1005D2BC8);
    goto LABEL_50;
  }
  sub_1000051EC(v109, &qword_1005D2BC8);
  if ((v84 & 1) != 0 || !*(_QWORD *)(v144 + 8))
  {
LABEL_50:
    if (qword_1005D2088 == -1)
    {
LABEL_51:
      v114 = *((double *)&xmmword_1005F6070 + 1);
      objc_msgSend(*(id *)(v7 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_nonMeDescriptionPadView), "setHidden:", 1);
      return objc_msgSend(*(id *)(v7 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_contentStackView), "setCustomSpacing:afterView:", *(_QWORD *)(v7+ OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindDescription), v114);
    }
LABEL_58:
    swift_once(&qword_1005D2088, sub_1003F7318);
    goto LABEL_51;
  }
  objc_msgSend(*(id *)(v7 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_nonMeDescriptionPadView), "setHidden:", 0);
  if (qword_1005D2088 != -1)
    swift_once(&qword_1005D2088, sub_1003F7318);
  v116 = *(double *)&xmmword_1005F6070;
  v117 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_contentStackView;
  v118 = *(_QWORD *)(v7 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindDescription);
  objc_msgSend(*(id *)(v7 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_contentStackView), "setCustomSpacing:afterView:", v118, *(double *)&xmmword_1005F6070);
  return objc_msgSend(*(id *)(v7 + v117), "setCustomSpacing:afterView:", v118, v116 + v116);
}

void sub_1003FA8EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v6;
  uint64_t Strong;
  char *v8;
  id v9;
  char v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  NSString v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  char v27[24];

  v6 = a2 + 16;
  swift_beginAccess(a2 + 16, v27, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v6);
  if (Strong)
  {
    v8 = (char *)Strong;
    sub_100006C5C(0, (unint64_t *)&qword_1005D7A60, NSObject_ptr);
    v9 = *(id *)&v8[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindSwitch];
    v10 = static NSObject.== infix(_:_:)(a3, v9);

    if ((v10 & 1) != 0)
    {
      v11 = *(void **)(*(_QWORD *)&v8[OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator] + 16);
      v12 = (void *)objc_opt_self(NSUserDefaults);
      v13 = v11;
      v14 = objc_msgSend(v12, "standardUserDefaults");
      v15 = String._bridgeToObjectiveC()();
      v16 = objc_msgSend(v14, "BOOLForKey:", v15);

      if (v16)
      {
        if (qword_1005D1DE8 != -1)
          swift_once(&qword_1005D1DE8, sub_100005ADC);
        v17 = type metadata accessor for Logger(0);
        v18 = sub_100056D88(v17, (uint64_t)qword_1005F5748);
        v19 = Logger.logObject.getter(v18);
        v20 = static os_log_type_t.default.getter(v19);
        if (os_log_type_enabled(v19, v20))
        {
          v21 = (uint8_t *)swift_slowAlloc(2, -1);
          *(_WORD *)v21 = 0;
          _os_log_impl((void *)&_mh_execute_header, v19, v20, "FMItemNotificationsView:  User toggled notify when left behind switch", v21, 2u);
          swift_slowDealloc(v21, -1, -1);
        }

        v22 = &v8[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_delegate];
        v23 = swift_unknownObjectWeakLoadStrong(&v8[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_delegate]);
        if (v23)
        {
          v24 = v23;
          v25 = *((_QWORD *)v22 + 1);
          ObjectType = swift_getObjectType(v23);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 8))(v8, a4 & 1, ObjectType, v25);

          swift_unknownObjectRelease(v24);
          return;
        }
      }
      else
      {
        sub_1003FC26C();
      }
    }

  }
}

void sub_1003FAB2C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t Strong;
  void *v6;
  uint64_t v7;
  _BYTE v8[24];

  v4 = a2 + 16;
  swift_beginAccess(a2 + 16, v8, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v4);
  if (Strong)
  {
    v6 = (void *)Strong;
    v7 = *(_QWORD *)(Strong + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindSwitch);
    *(_BYTE *)(v7 + OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_isOn) = (a3 & 1) == 0;
    objc_msgSend(*(id *)(v7 + OBJC_IVAR____TtC6FindMy19FMSettingSwitchView_settingSwitch), "setOn:");

  }
}

uint64_t sub_1003FABBC(uint64_t a1)
{
  return sub_1003FB6E4(a1, (uint64_t)&unk_100564BA0, (uint64_t)sub_1003FDED8, (uint64_t)&unk_100564BB8);
}

void sub_1003FABD8(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  __n128 v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  void (*v24)(unint64_t *, uint64_t);
  __n128 v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  char *v46;
  uint64_t v47;
  __n128 v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  void (*v66)(unint64_t *, unint64_t, uint64_t, __n128);
  unint64_t v67;
  uint64_t v68;
  _QWORD v69[3];
  char v70[32];

  v67 = a2;
  v62 = type metadata accessor for FMIPSeparationEvent(0);
  v3 = *(_QWORD *)(v62 - 8);
  __chkstk_darwin(v62);
  v61 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FMIPSafeLocationType(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v64 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v63 = (char *)&v53 - v9;
  v10 = type metadata accessor for FMIPSafeLocation(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = __chkstk_darwin(v10);
  v65 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v15 = (unint64_t *)((char *)&v53 - v14);
  v16 = a1;
  v17 = (uint64_t *)(a1 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_assignedSafeLocations);
  v18 = swift_beginAccess(v17, v70, 0, 0);
  v19 = *v17;
  v20 = *(_QWORD *)(*v17 + 16);
  if (v20)
  {
    v57 = v5;
    v58 = v6;
    v59 = v17;
    v56 = v3;
    v21 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v66 = *(void (**)(unint64_t *, unint64_t, uint64_t, __n128))(v11 + 16);
    v66(v15, v19 + v21, v10, v18);
    v22 = sub_100008000(&qword_1005DAB18, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPSafeLocation, (uint64_t)&protocol conformance descriptor for FMIPSafeLocation);
    swift_bridgeObjectRetain(v19);
    v23 = dispatch thunk of static Equatable.== infix(_:_:)(v15, v67, v10, v22);
    v24 = *(void (**)(unint64_t *, uint64_t))(v11 + 8);
    v24(v15, v10);
    if ((v23 & 1) != 0)
    {
      v25 = swift_bridgeObjectRelease(v19);
LABEL_11:
      v20 = v67;
      v66((unint64_t *)v65, v67, v10, v25);
      v60 = v16;
      v15 = (unint64_t *)(v16
                               + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_suggestedSafeLocations);
      swift_beginAccess(v16 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_suggestedSafeLocations, v69, 33, 0);
      v22 = *v15;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v15);
      *v15 = v22;
      v26 = v58;
      v27 = v59;
      v24 = (void (*)(unint64_t *, uint64_t))v21;
      v19 = v11;
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        goto LABEL_12;
    }
    else
    {
      v55 = v19;
      if (v20 == 1)
      {
LABEL_9:
        v30 = v55;
LABEL_18:
        swift_bridgeObjectRelease(v30);
        return;
      }
      v60 = v16;
      v54 = v11;
      v26 = *(_QWORD *)(v11 + 72);
      v53 = v21;
      v27 = (uint64_t *)(v55 + v26 + v21);
      v28 = 1;
      while (1)
      {
        ((void (*)(unint64_t *, uint64_t *, uint64_t))v66)(v15, v27, v10);
        v29 = v28 + 1;
        if (__OFADD__(v28, 1))
          break;
        v19 = dispatch thunk of static Equatable.== infix(_:_:)(v15, v67, v10, v22);
        v24(v15, v10);
        if ((v19 & 1) != 0)
        {
          v25 = swift_bridgeObjectRelease(v55);
          v16 = v60;
          v11 = v54;
          v21 = v53;
          goto LABEL_11;
        }
        ++v28;
        v27 = (uint64_t *)((char *)v27 + v26);
        if (v29 == v20)
          goto LABEL_9;
      }
      __break(1u);
    }
    v22 = sub_100070284(0, *(_QWORD *)(v22 + 16) + 1, 1, v22);
    *v15 = v22;
LABEL_12:
    v33 = *(_QWORD *)(v22 + 16);
    v32 = *(_QWORD *)(v22 + 24);
    if (v33 >= v32 >> 1)
    {
      v22 = sub_100070284(v32 > 1, v33 + 1, 1, v22);
      *v15 = v22;
    }
    *(_QWORD *)(v22 + 16) = v33 + 1;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))((char *)v24 + v22 + *(_QWORD *)(v19 + 72) * v33, v65, v10);
    v34 = swift_endAccess(v69);
    __chkstk_darwin(v34);
    *(&v53 - 2) = v20;
    swift_beginAccess(v27, v69, 33, 0);
    sub_1003FC94C((uint64_t (*)(unint64_t, __n128))sub_1003FDF58, (uint64_t)(&v53 - 4));
    v36 = *(_QWORD *)(*v27 + 16);
    if (v36 < v35)
    {
      __break(1u);
      return;
    }
    sub_100202154(v35, v36);
    v37 = swift_endAccess(v69);
    v38 = v63;
    FMIPSafeLocation.type.getter(v37);
    v39 = v64;
    v40 = v57;
    (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v64, enum case for FMIPSafeLocationType.home(_:), v57);
    v41 = sub_100008000((unint64_t *)&unk_1005D45E0, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPSafeLocationType, (uint64_t)&protocol conformance descriptor for FMIPSafeLocationType);
    dispatch thunk of RawRepresentable.rawValue.getter(v69, v40, v41);
    dispatch thunk of RawRepresentable.rawValue.getter(&v68, v40, v41);
    v42 = v69[0];
    v43 = v68;
    v44 = *(void (**)(char *, uint64_t))(v26 + 8);
    v44(v39, v40);
    v44(v38, v40);
    v45 = v60;
    if (v42 == v43)
    {
      v46 = v61;
      FMIPSeparationEvent.init(itemOrDeviceCount:addSafeLocationTapped:addToAllTapped:homeRemoved:)(0, 0, 0, 1);
      v47 = *(_QWORD *)(*(_QWORD *)(v45 + OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator) + 24);
      swift_retain(v47);
      FMIPManager.enqueue(separationEvent:)(v46);
      v48 = swift_release(v47);
      (*(void (**)(char *, uint64_t, __n128))(v56 + 8))(v46, v62, v48);
    }
    v49 = *v27;
    swift_bridgeObjectRetain(*v27);
    sub_1002C4A98(v50);
    swift_bridgeObjectRelease(v49);
    v51 = *v15;
    swift_bridgeObjectRetain(*v15);
    sub_100428728(v52);
    v30 = v51;
    goto LABEL_18;
  }
}

uint64_t sub_1003FB124(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  _QWORD *v14;
  void *v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[5];
  _QWORD *v26;

  v3 = v2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v24 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for DispatchQoS(0);
  v9 = *(_QWORD *)(v23 - 8);
  __chkstk_darwin(v23);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v13 = (void *)static OS_dispatch_queue.main.getter(v12);
  v14 = (_QWORD *)swift_allocObject(&unk_100564B50, 40, 7);
  v14[2] = v2;
  v14[3] = a1;
  v14[4] = a2;
  aBlock[4] = sub_1003FDB54;
  v26 = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_100564B68;
  v15 = _Block_copy(aBlock);
  v16 = v26;
  v17 = v3;
  swift_bridgeObjectRetain(a2);
  swift_release(v16);
  static DispatchQoS.unspecified.getter(v18);
  aBlock[0] = _swiftEmptyArrayStorage;
  v19 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v20 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v21 = sub_1000555E4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v20, v21, v6, v19);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v11, v8, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v23);
}

double sub_1003FB334(_QWORD *a1, uint64_t a2, void (*a3)(char *, char *, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  unint64_t *v16;
  unint64_t *v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  __n128 v23;
  uint64_t v24;
  __n128 v25;
  char *v26;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v28;
  unint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  double result;
  uint64_t v36;
  char *v37;
  char *v38;
  _QWORD *v39;
  _BYTE v40[24];

  v6 = sub_100053F2C((uint64_t *)&unk_1005E2270);
  __chkstk_darwin(v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FMIPSafeLocation(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = __chkstk_darwin(v9);
  v37 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v38 = (char *)&v36 - v13;
  v14 = (_QWORD *)((char *)a1 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_suggestedSafeLocations);
  swift_beginAccess((char *)a1 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_suggestedSafeLocations, v40, 33, 0);
  swift_bridgeObjectRetain(a3);
  v15 = 0;
  sub_1003FDB60(v14, a2, (unint64_t)a3);
  v17 = v16;
  swift_bridgeObjectRelease(a3);
  v18 = *(_QWORD *)(*v14 + 16);
  if (v18 < (uint64_t)v17)
  {
    __break(1u);
LABEL_13:
    v15 = sub_100070284(0, *(_QWORD *)(v15 + 16) + 1, 1, v15);
    *v17 = v15;
    goto LABEL_8;
  }
  sub_100202154((uint64_t)v17, v18);
  swift_endAccess(v40);
  v39 = a1;
  v19 = *(_QWORD *)(*(_QWORD *)((char *)a1 + OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator) + 24);
  v20 = swift_retain(v19);
  v21 = FMIPManager.safeLocations.getter(v20);
  swift_bridgeObjectRetain(a3);
  v22 = sub_10041E75C(v21, a2, (uint64_t)a3);
  swift_bridgeObjectRelease(v21);
  v23 = swift_bridgeObjectRelease(a3);
  if (v22[2])
  {
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v10 + 16))(v8, (unint64_t)v22+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), v9, v23);
    v24 = 0;
  }
  else
  {
    v24 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v24, 1, v9);
  swift_release(v19);
  v25 = swift_bridgeObjectRelease(v22);
  a1 = &unk_1005E3000;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t, __n128))(v10 + 48))(v8, 1, v9, v25) == 1)
  {
    sub_1000051EC((uint64_t)v8, (uint64_t *)&unk_1005E2270);
    goto LABEL_11;
  }
  a3 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v26 = v38;
  a3(v38, v8, v9);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v37, v26, v9);
  v17 = (_QWORD *)((char *)v39 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_assignedSafeLocations);
  swift_beginAccess((char *)v39 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_assignedSafeLocations, v40, 33, 0);
  v15 = *v17;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v17);
  *v17 = v15;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    goto LABEL_13;
LABEL_8:
  v29 = *(_QWORD *)(v15 + 16);
  v28 = *(_QWORD *)(v15 + 24);
  if (v29 >= v28 >> 1)
  {
    v15 = sub_100070284(v28 > 1, v29 + 1, 1, v15);
    *v17 = v15;
  }
  *(_QWORD *)(v15 + 16) = v29 + 1;
  a3((char *)(v15+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v29), v37, v9);
  swift_endAccess(v40);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v38, v9);
LABEL_11:
  v30 = (_QWORD *)((char *)v39 + a1[442]);
  swift_beginAccess(v30, v40, 0, 0);
  v31 = *v30;
  swift_bridgeObjectRetain(v31);
  sub_1002C4A98(v32);
  swift_bridgeObjectRelease(v31);
  v33 = *v14;
  swift_bridgeObjectRetain(*v14);
  sub_100428728(v34);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v33).n128_u64[0];
  return result;
}

uint64_t sub_1003FB6C8(uint64_t a1)
{
  return sub_1003FB6E4(a1, (uint64_t)&unk_100564B00, (uint64_t)sub_1003FDB1C, (uint64_t)&unk_100564B18);
}

uint64_t sub_1003FB6E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD aBlock[5];
  uint64_t v38;

  v32 = a3;
  v33 = a4;
  v30 = a2;
  v5 = v4;
  v7 = type metadata accessor for DispatchWorkItemFlags(0);
  v36 = *(_QWORD *)(v7 - 8);
  __chkstk_darwin(v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v34 = *(_QWORD *)(v10 - 8);
  v35 = v10;
  __chkstk_darwin(v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for FMIPSafeLocation(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  __chkstk_darwin(v13);
  v16 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v31 = static OS_dispatch_queue.main.getter(v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v13);
  v17 = *(unsigned __int8 *)(v14 + 80);
  v18 = (v17 + 24) & ~v17;
  v19 = swift_allocObject(v30, v18 + v15, v17 | 7);
  *(_QWORD *)(v19 + 16) = v5;
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v19 + v18, (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  aBlock[4] = v32;
  v38 = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = v33;
  v20 = _Block_copy(aBlock);
  v21 = v38;
  v22 = v5;
  swift_release(v21);
  static DispatchQoS.unspecified.getter(v23);
  aBlock[0] = _swiftEmptyArrayStorage;
  v24 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v25 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v26 = sub_1000555E4();
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v25, v26, v7, v24);
  v27 = (void *)v31;
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v12, v9, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v12, v35);
}

double sub_1003FB94C(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unint64_t *v11;
  __n128 v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  void (*v18)(char *, uint64_t);
  unint64_t v19;
  __n128 v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  __n128 v24;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  double result;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t *v34;
  char *v35;
  uint64_t v36;
  unint64_t v37;
  void (*v38)(char *, unint64_t, uint64_t, __n128);
  _BYTE v39[24];
  char v40[24];

  v4 = type metadata accessor for FMIPSafeLocation(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v31 - v9;
  v11 = (unint64_t *)(a1 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_assignedSafeLocations);
  v12 = swift_beginAccess(a1 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_assignedSafeLocations, v40, 0, 0);
  v13 = *v11;
  v14 = *(_QWORD *)(*v11 + 16);
  if (v14)
  {
    v35 = v8;
    v36 = a1;
    v34 = v11;
    v15 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v38 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16);
    v38(v10, v13 + v15, v4, v12);
    v8 = (char *)sub_100008000(&qword_1005DAB18, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPSafeLocation, (uint64_t)&protocol conformance descriptor for FMIPSafeLocation);
    swift_bridgeObjectRetain(v13);
    v16 = dispatch thunk of static Equatable.== infix(_:_:)(v10, a2, v4, v8);
    v17 = v13;
    v18 = *(void (**)(char *, uint64_t))(v5 + 8);
    v18(v10, v4);
    if ((v16 & 1) != 0)
    {
      v19 = v17;
      goto LABEL_16;
    }
    v33 = v17;
    if (v14 != 1)
    {
      v37 = a2;
      v32 = v5;
      v21 = *(_QWORD *)(v5 + 72);
      v11 = (unint64_t *)(v33 + v21 + v15);
      v22 = 1;
      while (1)
      {
        ((void (*)(char *, unint64_t *, uint64_t))v38)(v10, v11, v4);
        v5 = v22 + 1;
        if (__OFADD__(v22, 1))
          break;
        v23 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v37, v4, v8);
        v18(v10, v4);
        if ((v23 & 1) != 0)
        {
          v19 = v33;
          goto LABEL_16;
        }
        ++v22;
        v11 = (unint64_t *)((char *)v11 + v21);
        if (v5 == v14)
        {
          v24 = swift_bridgeObjectRelease(v33);
          v8 = v35;
          v5 = v32;
          v11 = v34;
          v38(v35, v37, v4, v24);
          goto LABEL_12;
        }
      }
      __break(1u);
      goto LABEL_19;
    }
    v20 = swift_bridgeObjectRelease(v33);
    v11 = v34;
    v8 = v35;
    v38(v35, a2, v4, v20);
  }
  else
  {
    (*(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16))(v8, a2, v4, v12);
  }
LABEL_12:
  swift_beginAccess(v11, v39, 33, 0);
  v21 = *v11;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v11);
  *v11 = v21;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_19:
    v21 = sub_100070284(0, *(_QWORD *)(v21 + 16) + 1, 1, v21);
    *v11 = v21;
  }
  v27 = *(_QWORD *)(v21 + 16);
  v26 = *(_QWORD *)(v21 + 24);
  if (v27 >= v26 >> 1)
  {
    v21 = sub_100070284(v26 > 1, v27 + 1, 1, v21);
    *v11 = v21;
  }
  *(_QWORD *)(v21 + 16) = v27 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v21+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v27, v8, v4);
  v28 = *v11;
  swift_endAccess(v39);
  swift_bridgeObjectRetain(v28);
  sub_1002C4A98(v29);
  v19 = v28;
LABEL_16:
  *(_QWORD *)&result = swift_bridgeObjectRelease(v19).n128_u64[0];
  return result;
}

uint64_t sub_1003FBC48(uint64_t a1)
{
  return sub_1003FB6E4(a1, (uint64_t)&unk_100564AB0, (uint64_t)sub_1003FDAF0, (uint64_t)&unk_100564AC8);
}

double sub_1003FBC64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  int64_t v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  double result;
  _BYTE v18[16];
  uint64_t v19;
  _BYTE v20[24];

  v4 = type metadata accessor for FMIPSafeLocation(0);
  v5 = *(_QWORD *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = a2;
  v8 = (unint64_t *)(a1 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_assignedSafeLocations);
  swift_beginAccess(a1 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_assignedSafeLocations, v20, 33, 0);
  v9 = 0;
  sub_1003FC94C((uint64_t (*)(unint64_t, __n128))sub_1003FDAFC, (uint64_t)v18);
  v11 = *(_QWORD *)(*v8 + 16);
  if (v11 < v10)
  {
    __break(1u);
  }
  else
  {
    sub_100202154(v10, v11);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
    v9 = *v8;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v8);
    *v8 = v9;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_3;
  }
  v9 = sub_100070284(0, *(_QWORD *)(v9 + 16) + 1, 1, v9);
  *v8 = v9;
LABEL_3:
  v14 = *(_QWORD *)(v9 + 16);
  v13 = *(_QWORD *)(v9 + 24);
  if (v14 >= v13 >> 1)
  {
    v9 = sub_100070284(v13 > 1, v14 + 1, 1, v9);
    *v8 = v9;
  }
  *(_QWORD *)(v9 + 16) = v14 + 1;
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v5 + 32))(v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v14, v7, v4);
  v15 = *v8;
  swift_endAccess(v20);
  swift_bridgeObjectRetain(v15);
  sub_1002C4A98(v16);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v15).n128_u64[0];
  return result;
}

uint64_t sub_1003FBE04(uint64_t a1)
{
  return sub_1003FB6E4(a1, (uint64_t)&unk_100564A60, (uint64_t)sub_1003FD050, (uint64_t)&unk_100564A78);
}

void sub_1003FBE20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  __n128 v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, unint64_t, uint64_t, __n128);
  char v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, unint64_t, uint64_t, __n128);
  _BYTE v39[24];
  char v40[24];

  v4 = type metadata accessor for FMIPSafeLocation(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = __chkstk_darwin(v4);
  v8 = (unint64_t)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)&v32 - v9;
  v11 = (_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_assignedSafeLocations);
  v12 = swift_beginAccess(a1 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_assignedSafeLocations, v40, 0, 0);
  v13 = *v11;
  v14 = *(_QWORD *)(*v11 + 16);
  if (!v14)
  {
    (*(void (**)(unint64_t, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a2, v4, v12);
    goto LABEL_13;
  }
  v33 = v8;
  v34 = v11;
  v35 = a1;
  v8 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v15 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16);
  v15(v10, v13 + v8, v4, v12);
  a1 = sub_100008000(&qword_1005DAB18, (uint64_t (*)(uint64_t))&type metadata accessor for FMIPSafeLocation, (uint64_t)&protocol conformance descriptor for FMIPSafeLocation);
  swift_bridgeObjectRetain(v13);
  v16 = dispatch thunk of static Equatable.== infix(_:_:)(v10, a2, v4, a1);
  v36 = v5;
  v5 = *(_QWORD *)(v5 + 8);
  ((void (*)(char *, uint64_t))v5)(v10, v4);
  if ((v16 & 1) != 0)
  {
    v17 = v13;
LABEL_18:
    swift_bridgeObjectRelease(v17);
    return;
  }
  if (v14 == 1)
  {
    v18 = swift_bridgeObjectRelease(v13);
    v11 = v34;
    a1 = v35;
    v5 = v36;
    v8 = v33;
LABEL_12:
    v15((char *)v8, a2, v4, v18);
LABEL_13:
    swift_beginAccess(v11, v39, 33, 0);
    v10 = (char *)*v11;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v11);
    *v11 = v10;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_14;
    goto LABEL_21;
  }
  v37 = a2;
  v38 = v15;
  v19 = *(_QWORD *)(v36 + 72);
  v32 = v13;
  v11 = (_QWORD *)(v13 + v19 + v8);
  v20 = 1;
  while (1)
  {
    ((void (*)(char *, _QWORD *, uint64_t))v38)(v10, v11, v4);
    a2 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    v8 = dispatch thunk of static Equatable.== infix(_:_:)(v10, v37, v4, a1);
    ((void (*)(char *, uint64_t))v5)(v10, v4);
    if ((v8 & 1) != 0)
    {
      v17 = v32;
      goto LABEL_18;
    }
    ++v20;
    v11 = (_QWORD *)((char *)v11 + v19);
    if (a2 == v14)
    {
      v18 = swift_bridgeObjectRelease(v32);
      v11 = v34;
      a1 = v35;
      v5 = v36;
      a2 = v37;
      v8 = v33;
      v15 = v38;
      goto LABEL_12;
    }
  }
  __break(1u);
LABEL_21:
  v10 = (char *)sub_100070284(0, *((_QWORD *)v10 + 2) + 1, 1, (unint64_t)v10);
  *v11 = v10;
LABEL_14:
  v23 = *((_QWORD *)v10 + 2);
  v22 = *((_QWORD *)v10 + 3);
  if (v23 >= v22 >> 1)
  {
    v10 = (char *)sub_100070284(v22 > 1, v23 + 1, 1, (unint64_t)v10);
    *v11 = v10;
  }
  *((_QWORD *)v10 + 2) = v23 + 1;
  (*(void (**)(char *, unint64_t, uint64_t))(v5 + 32))(&v10[((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v23], v8, v4);
  v24 = swift_endAccess(v39);
  __chkstk_darwin(v24);
  *(&v32 - 2) = a2;
  v25 = (_QWORD *)(a1 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_suggestedSafeLocations);
  swift_beginAccess(a1 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_suggestedSafeLocations, v39, 33, 0);
  sub_1003FC94C((uint64_t (*)(unint64_t, __n128))sub_1003FDF58, (uint64_t)(&v32 - 4));
  v27 = *(_QWORD *)(*v25 + 16);
  if (v27 >= v26)
  {
    sub_100202154(v26, v27);
    swift_endAccess(v39);
    v28 = *v11;
    swift_bridgeObjectRetain(*v11);
    sub_1002C4A98(v29);
    swift_bridgeObjectRelease(v28);
    v30 = *v25;
    swift_bridgeObjectRetain(*v25);
    sub_100428728(v31);
    v17 = v30;
    goto LABEL_18;
  }
  __break(1u);
}

uint64_t sub_1003FC1BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v0 = FMIPSafeLocation.identifier.getter();
  v2 = v1;
  v4 = FMIPSafeLocation.identifier.getter();
  v5 = v3;
  if (v0 == v4 && v2 == v3)
  {
    v6 = 1;
    v5 = v2;
  }
  else
  {
    v6 = _stringCompareWithSmolCheck(_:_:expecting:)(v0, v2, v4, v3, 0);
  }
  swift_bridgeObjectRelease(v2);
  swift_bridgeObjectRelease(v5);
  return v6 & 1;
}

void sub_1003FC26C()
{
  char *v0;
  void *v1;
  uint64_t v2;
  objc_class *v3;
  id v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  objc_class *v14;
  char *v15;
  id v16;
  char *v17;
  char *v18;
  char *v19;
  id v20;
  char *v21;
  uint64_t v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  NSString v28;
  objc_super v29;
  uint64_t v30;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator];
  v3 = (objc_class *)type metadata accessor for FMSeparationWelcomeScreenViewController();
  v4 = objc_allocWithZone(v3);
  v5 = swift_retain(v2);
  v6 = sub_1004206A8(v5, 0);
  v7 = objc_allocWithZone(v3);
  v8 = swift_retain(v2);
  v9 = sub_1004206A8(v8, 1);
  v10 = &v9[OBJC_IVAR____TtC6FindMy39FMSeparationWelcomeScreenViewController_delegate];
  *((_QWORD *)v10 + 1) = &off_1005649B0;
  swift_unknownObjectWeakAssign(v10, v0);
  v11 = sub_100053F2C(&qword_1005D2F10);
  v12 = swift_allocObject(v11, 48, 7);
  *(_OWORD *)(v12 + 16) = xmmword_1004820B0;
  *(_QWORD *)(v12 + 32) = v6;
  *(_QWORD *)(v12 + 40) = v9;
  v30 = v12;
  specialized Array._endMutation()(v12);
  v13 = v30;
  v14 = (objc_class *)type metadata accessor for FMPageViewController();
  v15 = (char *)objc_allocWithZone(v14);
  *(_QWORD *)&v15[OBJC_IVAR____TtC6FindMy20FMPageViewController_pages] = _swiftEmptyArrayStorage;
  v16 = objc_allocWithZone((Class)UIPageViewController);
  swift_retain(v2);
  v17 = v6;
  v18 = v9;
  v19 = v15;
  v20 = objc_msgSend(v16, "initWithTransitionStyle:navigationOrientation:options:", 1, 0, 0);
  *(_QWORD *)&v19[OBJC_IVAR____TtC6FindMy20FMPageViewController_pageViewController] = v20;

  v29.receiver = v19;
  v29.super_class = v14;
  v21 = (char *)objc_msgSendSuper2(&v29, "initWithNibName:bundle:", 0, 0);
  swift_release(v2);
  v22 = *(_QWORD *)&v21[OBJC_IVAR____TtC6FindMy20FMPageViewController_pages];
  *(_QWORD *)&v21[OBJC_IVAR____TtC6FindMy20FMPageViewController_pages] = v13;
  swift_bridgeObjectRelease(v22);
  v23 = objc_msgSend(objc_allocWithZone((Class)UINavigationController), "initWithRootViewController:", v21);
  objc_msgSend(v1, "presentViewController:animated:completion:", v23, 1, 0);
  v24 = *(void **)(v2 + 16);
  v25 = (void *)objc_opt_self(NSUserDefaults);
  v26 = v24;
  v27 = objc_msgSend(v25, "standardUserDefaults");
  v28 = String._bridgeToObjectiveC()();
  objc_msgSend(v27, "setBool:forKey:", 1, v28);

}

double sub_1003FC4E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t Strong;
  double result;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;

  v1 = v0;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v2 = type metadata accessor for Logger(0);
  v3 = sub_100056D88(v2, (uint64_t)qword_1005F5748);
  v4 = Logger.logObject.getter(v3);
  v5 = static os_log_type_t.default.getter(v4);
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "FMItemNotificationsView:  User toggled notify when left behind switch", v6, 2u);
    swift_slowDealloc(v6, -1, -1);
  }

  v7 = v1 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_delegate;
  Strong = swift_unknownObjectWeakLoadStrong(v1 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_delegate);
  if (Strong)
  {
    v10 = Strong;
    v11 = *(_QWORD *)(v7 + 8);
    ObjectType = swift_getObjectType(Strong);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8))(v1, 1, ObjectType, v11);
    *(_QWORD *)&result = swift_unknownObjectRelease(v10).n128_u64[0];
  }
  return result;
}

double sub_1003FC608()
{
  uint64_t v0;
  double result;

  sub_10005E190(v0 + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_delegate);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindDescription));

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindSwitchSection));

  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_assignedSafeLocations));
  swift_bridgeObjectRelease(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_suggestedSafeLocations));
  *(_QWORD *)&result = swift_bridgeObjectRelease(*(_QWORD *)(v0
                                                           + OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_beaconUUID
                                                           + 8)).n128_u64[0];
  return result;
}

id sub_1003FC708()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMTrustedLocationDetailViewController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMTrustedLocationDetailViewController()
{
  return objc_opt_self(_TtC6FindMy37FMTrustedLocationDetailViewController);
}

double sub_1003FC864(void *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  double result;

  v4 = swift_allocObject(&unk_1005649E8, 24, 7);
  swift_unknownObjectWeakInit(v4 + 16);
  v5 = swift_allocObject(&unk_100564A10, 33, 7);
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = a1;
  *(_BYTE *)(v5 + 32) = a2;
  v6 = swift_allocObject(&unk_1005649E8, 24, 7);
  swift_unknownObjectWeakInit(v6 + 16);
  v7 = swift_allocObject(&unk_100564A38, 25, 7);
  *(_QWORD *)(v7 + 16) = v6;
  *(_BYTE *)(v7 + 24) = a2;
  v8 = a1;
  sub_1000A0F40((uint64_t)sub_1003FD010, v5, (uint64_t)sub_1003FD040, v7);
  swift_release(v5);
  *(_QWORD *)&result = swift_release(v7).n128_u64[0];
  return result;
}

void sub_1003FC94C(uint64_t (*a1)(unint64_t, __n128), uint64_t a2)
{
  unint64_t *v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __n128 v17;
  unint64_t v18;
  char v19;
  __n128 v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *);
  void (*v27)(char *, uint64_t, uint64_t, __n128);
  char *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v36;
  void (*v37)(unint64_t, char *, uint64_t);
  uint64_t v38;
  BOOL v39;
  unint64_t v40;
  _QWORD v41[2];
  uint64_t (*v42)(unint64_t, __n128);
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  unint64_t *v48;
  unint64_t v49;
  uint64_t v50;

  v4 = v2;
  v7 = type metadata accessor for FMIPSafeLocation(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v44 = (char *)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v43 = (char *)v41 - v12;
  __chkstk_darwin(v11);
  v48 = v4;
  v14 = *v4;
  v15 = *(_QWORD *)(*v4 + 16);
  if (v15)
  {
    v46 = (char *)v41 - v13;
    v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v50 = *(_QWORD *)(v8 + 72);
    v17 = swift_bridgeObjectRetain(v14);
    v18 = 0;
    v41[0] = v16;
    while (1)
    {
      v19 = a1(v14 + v16, v17);
      if (v3)
      {
LABEL_6:
        swift_bridgeObjectRelease(v14);
        return;
      }
      if ((v19 & 1) != 0)
        break;
      ++v18;
      v16 += v50;
      if (v15 == v18)
        goto LABEL_6;
    }
    v20 = swift_bridgeObjectRelease(v14);
    if (!__OFADD__(v18, 1))
    {
      v21 = *(_QWORD *)(v14 + 16);
      if (v18 + 1 == v21)
        return;
      v22 = v50 + v16;
      v23 = v18 + 1;
      v47 = v7;
      v41[1] = a2;
      v42 = a1;
      v45 = v8;
      while (v23 < v21)
      {
        v49 = v23;
        v24 = v22;
        v25 = v14 + v22;
        v26 = (uint64_t (*)(char *))a1;
        v27 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16);
        v28 = v46;
        v27(v46, v25, v7, v20);
        LOBYTE(v26) = v26(v28);
        (*(void (**)(char *, uint64_t))(v8 + 8))(v28, v7);
        if ((v26 & 1) != 0)
        {
          a1 = v42;
          v29 = v24;
          v30 = v49;
        }
        else
        {
          v30 = v49;
          v29 = v24;
          if (v49 != v18)
          {
            if ((v18 & 0x8000000000000000) != 0)
              goto LABEL_31;
            v31 = *v48;
            v32 = *(_QWORD *)(*v48 + 16);
            if (v18 >= v32)
              goto LABEL_32;
            v33 = v18 * v50;
            v34 = v47;
            ((void (*)(char *, unint64_t, uint64_t))v27)(v43, v31 + v41[0] + v18 * v50, v47);
            if (v49 >= v32)
              goto LABEL_33;
            ((void (*)(char *, unint64_t, uint64_t))v27)(v44, v31 + v24, v34);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v31);
            *v48 = v31;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              v31 = sub_100200118(v31);
              *v48 = v31;
            }
            if (v18 >= *(_QWORD *)(v31 + 16))
              goto LABEL_34;
            v36 = v31 + v41[0] + v33;
            v37 = *(void (**)(unint64_t, char *, uint64_t))(v45 + 40);
            v38 = v47;
            v37(v36, v44, v47);
            if (v49 >= *(_QWORD *)(*v48 + 16))
              goto LABEL_35;
            v37(*v48 + v24, v43, v38);
            v30 = v49;
          }
          v39 = __OFADD__(v18++, 1);
          a1 = v42;
          if (v39)
            goto LABEL_30;
        }
        v40 = v30 + 1;
        v7 = v47;
        v8 = v45;
        if (__OFADD__(v30, 1))
          goto LABEL_29;
        v14 = *v48;
        v21 = *(_QWORD *)(*v48 + 16);
        v23 = v30 + 1;
        v22 = v29 + v50;
        if (v40 == v21)
          return;
      }
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
    }
    __break(1u);
  }
}

char *sub_1003FCCA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v7;
  id v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  objc_class *v21;
  id v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  objc_super v33;

  v7 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_scrollView;
  v8 = objc_allocWithZone((Class)UIScrollView);
  v9 = v3;
  *(_QWORD *)&v3[v7] = objc_msgSend(v8, "init");
  v10 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_contentStackView;
  *(_QWORD *)&v9[v10] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  *(_QWORD *)&v9[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_heightConstraint] = 0;
  v11 = &v9[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_delegate];
  *((_QWORD *)v11 + 1) = 0;
  swift_unknownObjectWeakInit(v11);
  v12 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindImageView;
  sub_100006C5C(0, (unint64_t *)&qword_1005DDF90, UIImage_ptr);
  v13 = sub_100342F84(0xD00000000000001ALL, 0x80000001004BA8D0, 6778480, 0xE300000000000000);
  v14 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v13);

  *(_QWORD *)&v9[v12] = v14;
  v15 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindDescription;
  *(_QWORD *)&v9[v15] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v16 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_trustedLocationsDescription;
  *(_QWORD *)&v9[v16] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v17 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindSwitchSection;
  *(_QWORD *)&v9[v17] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMSectionPlatterGroupView()), "init");
  v18 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindSwitch;
  *(_QWORD *)&v9[v18] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMSettingSwitchView()), "init");
  v19 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_nonMeDescriptionPadView;
  *(_QWORD *)&v9[v19] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v9[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_assignedSafeLocations] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v9[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_suggestedSafeLocations] = _swiftEmptyArrayStorage;
  v20 = &v9[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_beaconUUID];
  v21 = (objc_class *)type metadata accessor for FMTrustedLocationDetailView(0);
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  v22 = objc_allocWithZone(v21);
  v23 = swift_retain(a1);
  v24 = sub_1002CB770(v23);
  swift_release(a1);
  *(_QWORD *)&v9[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_trustedLocationsSection] = v24;
  v25 = objc_allocWithZone((Class)type metadata accessor for FMSafeLocationSuggestionsView());
  v26 = swift_retain(a1);
  v27 = sub_10042B3C0(v26);
  swift_release(a1);
  *(_QWORD *)&v9[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_suggestionsSection] = v27;
  v28 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v20 = a2;
  *((_QWORD *)v20 + 1) = a3;

  swift_bridgeObjectRelease(v28);
  *(_QWORD *)&v9[OBJC_IVAR____TtC6FindMy24FMMediatedViewController_mediator] = a1;
  v33.receiver = v9;
  v33.super_class = (Class)type metadata accessor for FMMediatedViewController();
  swift_retain(a1);
  v29 = (char *)objc_msgSendSuper2(&v33, "initWithNibName:bundle:", 0, 0);
  v30 = *(_QWORD *)&v29[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_suggestionsSection]
      + OBJC_IVAR____TtC6FindMy29FMSafeLocationSuggestionsView_delegate;
  *(_QWORD *)(v30 + 8) = &off_1005649A0;
  swift_unknownObjectWeakAssign(v30, v29);
  v31 = *(_QWORD *)&v29[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_trustedLocationsSection]
      + OBJC_IVAR____TtC6FindMy27FMTrustedLocationDetailView_delegate;
  *(_QWORD *)(v31 + 8) = &off_100564978;
  swift_unknownObjectWeakAssign(v31, v29);
  return v29;
}

uint64_t sub_1003FCFC0()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003FCFE4()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));

  return swift_deallocObject(v0, 33, 7);
}

void sub_1003FD010(uint64_t a1)
{
  uint64_t v1;

  sub_1003FA8EC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
}

uint64_t sub_1003FD01C()
{
  uint64_t v0;

  swift_release(*(_QWORD *)(v0 + 16));
  return swift_deallocObject(v0, 25, 7);
}

void sub_1003FD040(uint64_t a1)
{
  uint64_t v1;

  sub_1003FAB2C(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

uint64_t sub_1003FD050()
{
  return sub_1003FDEE4((uint64_t (*)(_QWORD, uint64_t))sub_1003FBE20);
}

char *sub_1003FD05C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *result;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  __n128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD v32[2];
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;

  v5 = type metadata accessor for FMIPSafeLocation(0);
  v6 = __chkstk_darwin(v5);
  v40 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v10 = (char *)v32 - v9;
  result = (char *)_swiftEmptyArrayStorage;
  v41 = (char *)_swiftEmptyArrayStorage;
  v39 = *(_QWORD *)(a1 + 16);
  if (v39)
  {
    v32[1] = v2;
    v12 = 0;
    v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v14 = *(_QWORD *)(v8 + 72);
    v37 = a1 + v13;
    v38 = v8;
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v33 = v13;
    v34 = v5;
    v35 = a2 + v13;
    v36 = v15;
    v15(v10, a1 + v13, v5);
    while (1)
    {
      v17 = *(_QWORD *)(a2 + 16);
      if (v17)
      {
        v18 = a2;
        swift_bridgeObjectRetain(a2);
        v20 = v35;
        while (1)
        {
          v21 = FMIPSafeLocation.identifier.getter(v19);
          v23 = v22;
          v25 = FMIPSafeLocation.identifier.getter(v21);
          v26 = v24;
          if (v21 == v25 && v23 == v24)
            break;
          v27 = _stringCompareWithSmolCheck(_:_:expecting:)(v21, v23, v25, v24, 0);
          swift_bridgeObjectRelease(v23);
          swift_bridgeObjectRelease(v26);
          if ((v27 & 1) != 0)
          {
            a2 = v18;
            v23 = v18;
            goto LABEL_4;
          }
          v20 += v14;
          if (!--v17)
          {
            a2 = v18;
            swift_bridgeObjectRelease(v18);
            v5 = v34;
            goto LABEL_14;
          }
        }
        a2 = v18;
        swift_bridgeObjectRelease(v18);
        swift_bridgeObjectRelease(v23);
LABEL_4:
        v5 = v34;
        v16 = swift_bridgeObjectRelease(v23);
        (*(void (**)(char *, uint64_t, __n128))(v38 + 8))(v10, v5, v16);
        goto LABEL_5;
      }
LABEL_14:
      v28 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
      v28(v40, v10, v5);
      v29 = v41;
      if ((swift_isUniquelyReferenced_nonNull_native(v41) & 1) == 0)
      {
        sub_100111DA4(0, *((_QWORD *)v29 + 2) + 1, 1);
        v29 = v41;
      }
      v31 = *((_QWORD *)v29 + 2);
      v30 = *((_QWORD *)v29 + 3);
      if (v31 >= v30 >> 1)
      {
        sub_100111DA4(v30 > 1, v31 + 1, 1);
        v29 = v41;
      }
      *((_QWORD *)v29 + 2) = v31 + 1;
      v28(&v29[v33 + v31 * v14], v40, v5);
      v41 = v29;
LABEL_5:
      if (++v12 == v39)
        return v41;
      v36(v10, v37 + v14 * v12, v5);
    }
  }
  return result;
}

void sub_1003FD2E8()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;

  v1 = v0;
  v2 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_scrollView;
  *(_QWORD *)&v1[v2] = objc_msgSend(objc_allocWithZone((Class)UIScrollView), "init");
  v3 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_contentStackView;
  *(_QWORD *)&v1[v3] = objc_msgSend(objc_allocWithZone((Class)UIStackView), "init");
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_heightConstraint] = 0;
  v4 = &v1[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_delegate];
  *((_QWORD *)v4 + 1) = 0;
  swift_unknownObjectWeakInit(v4);
  v5 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindImageView;
  sub_100006C5C(0, (unint64_t *)&qword_1005DDF90, UIImage_ptr);
  v6 = sub_100342F84(0xD00000000000001ALL, 0x80000001004BA8D0, 6778480, 0xE300000000000000);
  v7 = objc_msgSend(objc_allocWithZone((Class)UIImageView), "initWithImage:", v6);

  *(_QWORD *)&v1[v5] = v7;
  v8 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindDescription;
  *(_QWORD *)&v1[v8] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v9 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_trustedLocationsDescription;
  *(_QWORD *)&v1[v9] = objc_msgSend(objc_allocWithZone((Class)UILabel), "init");
  v10 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindSwitchSection;
  *(_QWORD *)&v1[v10] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMSectionPlatterGroupView()), "init");
  v11 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindSwitch;
  *(_QWORD *)&v1[v11] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for FMSettingSwitchView()), "init");
  v12 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_nonMeDescriptionPadView;
  *(_QWORD *)&v1[v12] = objc_msgSend(objc_allocWithZone((Class)UIView), "init");
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_assignedSafeLocations] = _swiftEmptyArrayStorage;
  *(_QWORD *)&v1[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_suggestedSafeLocations] = _swiftEmptyArrayStorage;
  v13 = &v1[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_beaconUUID];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;

  _assertionFailure(_:_:file:line:flags:)("Fatal error", 11, 2, 0xD000000000000025, 0x80000001004A4C70, "FindMy/FMTrustedLocationDetailViewController.swift", 50, 2, 68, 0);
  __break(1u);
}

void sub_1003FD504()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  Class isa;
  uint64_t v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  Class v47;
  id v48;
  id v49;

  v1 = v0;
  v2 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_scrollView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_scrollView], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v3 = OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_contentStackView;
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_contentStackView], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindImageView], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindDescription], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_notifyWhenLeftBehindSwitchSection], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_trustedLocationsSection], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_suggestionsSection], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC6FindMy37FMTrustedLocationDetailViewController_trustedLocationsDescription], "setTranslatesAutoresizingMaskIntoConstraints:", 0);
  v4 = objc_msgSend(v0, "view");
  if (!v4)
  {
    __break(1u);
    goto LABEL_7;
  }
  v5 = v4;
  v6 = objc_msgSend(v4, "bottomAnchor");

  v7 = sub_100053F2C(&qword_1005D2F10);
  v8 = swift_allocObject(v7, 64, 7);
  *(_OWORD *)(v8 + 16) = xmmword_100481720;
  v9 = *(void **)&v1[v2];
  v49 = v6;
  v10 = objc_msgSend(v9, "leadingAnchor");
  v11 = objc_msgSend(v1, "view");
  if (!v11)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v12 = v11;
  v13 = objc_msgSend(v11, "leadingAnchor");

  v14 = objc_msgSend(v10, "constraintEqualToAnchor:", v13);
  *(_QWORD *)(v8 + 32) = v14;
  v15 = objc_msgSend(*(id *)&v1[v2], "trailingAnchor");
  v16 = objc_msgSend(v1, "view");
  if (!v16)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v17 = v16;
  v18 = objc_msgSend(v16, "trailingAnchor");

  v19 = objc_msgSend(v15, "constraintEqualToAnchor:", v18);
  *(_QWORD *)(v8 + 40) = v19;
  v20 = objc_msgSend(*(id *)&v1[v2], "topAnchor");
  v21 = objc_msgSend(v1, "view");
  if (v21)
  {
    v22 = v21;
    v48 = (id)objc_opt_self(NSLayoutConstraint);
    v23 = objc_msgSend(v22, "safeAreaLayoutGuide");

    v24 = objc_msgSend(v23, "topAnchor");
    v25 = objc_msgSend(v20, "constraintEqualToAnchor:", v24);

    *(_QWORD *)(v8 + 48) = v25;
    v26 = objc_msgSend(*(id *)&v1[v2], "bottomAnchor");
    v27 = objc_msgSend(v26, "constraintEqualToAnchor:constant:", v49, 0.0);

    *(_QWORD *)(v8 + 56) = v27;
    specialized Array._endMutation()(v28);
    sub_100006C5C(0, (unint64_t *)&qword_1005D2A60, NSLayoutConstraint_ptr);
    isa = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v48, "activateConstraints:", isa, swift_bridgeObjectRelease(v8).n128_f64[0]);

    v30 = swift_allocObject(v7, 64, 7);
    *(_OWORD *)(v30 + 16) = xmmword_100481720;
    v31 = objc_msgSend(*(id *)&v1[v3], "topAnchor");
    v32 = objc_msgSend(*(id *)&v1[v2], "topAnchor");
    v33 = objc_msgSend(v31, "constraintEqualToAnchor:", v32);

    *(_QWORD *)(v30 + 32) = v33;
    v34 = objc_msgSend(*(id *)&v1[v3], "bottomAnchor");
    v35 = objc_msgSend(*(id *)&v1[v2], "bottomAnchor");
    v36 = objc_msgSend(v34, "constraintEqualToAnchor:", v35);

    *(_QWORD *)(v30 + 40) = v36;
    v37 = objc_msgSend(*(id *)&v1[v3], "leadingAnchor");
    v38 = objc_msgSend(*(id *)&v1[v2], "layoutMarginsGuide");
    v39 = objc_msgSend(v38, "leadingAnchor");

    v40 = objc_msgSend(v37, "constraintEqualToAnchor:", v39);
    *(_QWORD *)(v30 + 48) = v40;
    v41 = objc_msgSend(*(id *)&v1[v3], "trailingAnchor");
    v42 = objc_msgSend(*(id *)&v1[v2], "layoutMarginsGuide");
    v43 = objc_msgSend(v42, "trailingAnchor");

    v44 = objc_msgSend(v41, "constraintEqualToAnchor:", v43);
    *(_QWORD *)(v30 + 56) = v44;
    specialized Array._endMutation()(v45);
    v46 = v30;
    v47 = Array._bridgeToObjectiveC()().super.isa;
    objc_msgSend(v48, "activateConstraints:", v47, swift_bridgeObjectRelease(v46).n128_f64[0]);

    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_1003FDAF0()
{
  return sub_1003FDEE4((uint64_t (*)(_QWORD, uint64_t))sub_1003FBC64);
}

uint64_t sub_1003FDAFC()
{
  return sub_1003FC1BC() & 1;
}

uint64_t sub_1003FDB1C()
{
  return sub_1003FDEE4((uint64_t (*)(_QWORD, uint64_t))sub_1003FB94C);
}

uint64_t sub_1003FDB28()
{
  uint64_t v0;

  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 32));
  return swift_deallocObject(v0, 40, 7);
}

double sub_1003FDB54()
{
  uint64_t v0;

  return sub_1003FB334(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(char *, char *, uint64_t))(v0 + 32));
}

void sub_1003FDB60(unint64_t *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char v23;
  unint64_t v24;
  __n128 v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t (*v30)(char *, unint64_t, uint64_t, __n128);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __n128 v35;
  char v36;
  __n128 v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v42;
  void (*v43)(unint64_t, char *, uint64_t);
  uint64_t v44;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  unint64_t *v54;
  char *v55;
  uint64_t v56;

  v6 = type metadata accessor for FMIPSafeLocation(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = __chkstk_darwin(v6);
  v52 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v51 = (char *)&v47 - v11;
  v12 = __chkstk_darwin(v10);
  v54 = a1;
  v55 = (char *)&v47 - v13;
  v14 = *a1;
  v15 = *(_QWORD *)(*a1 + 16);
  if (v15)
  {
    v53 = v12;
    v16 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v56 = *(_QWORD *)(v7 + 72);
    swift_bridgeObjectRetain(v14);
    v18 = 0;
    v50 = v16;
    while (1)
    {
      v19 = FMIPSafeLocation.identifier.getter(v17);
      if (v19 == a2 && v20 == a3)
      {
        swift_bridgeObjectRelease(v14);
        v24 = a3;
        goto LABEL_13;
      }
      v22 = v20;
      v23 = _stringCompareWithSmolCheck(_:_:expecting:)(v19, v20, a2, a3, 0);
      swift_bridgeObjectRelease(v22);
      if ((v23 & 1) != 0)
        break;
      ++v18;
      v16 += v56;
      if (v15 == v18)
      {
        swift_bridgeObjectRelease(v14);
        return;
      }
    }
    v24 = v14;
LABEL_13:
    v25 = swift_bridgeObjectRelease(v24);
    v26 = v53;
    if (!__OFADD__(v18, 1))
    {
      v27 = *(_QWORD *)(v14 + 16);
      if (v18 + 1 == v27)
        return;
      v28 = v56 + v16;
      v29 = v18 + 1;
      v48 = v7;
      while (v29 < v27)
      {
        v30 = *(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v7 + 16);
        v31 = v30(v55, v14 + v28, v26, v25);
        v32 = FMIPSafeLocation.identifier.getter(v31);
        v34 = v33;
        if (v32 == a2 && v33 == a3)
        {
          v35 = swift_bridgeObjectRelease(a3);
          v26 = v53;
          (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v55, v53, v35);
        }
        else
        {
          v36 = _stringCompareWithSmolCheck(_:_:expecting:)(v32, v33, a2, a3, 0);
          v37 = swift_bridgeObjectRelease(v34);
          v26 = v53;
          (*(void (**)(char *, uint64_t, __n128))(v7 + 8))(v55, v53, v37);
          if ((v36 & 1) == 0)
          {
            if (v29 != v18)
            {
              if ((v18 & 0x8000000000000000) != 0)
                goto LABEL_37;
              v38 = *v54;
              v39 = *(_QWORD *)(*v54 + 16);
              if (v18 >= v39)
                goto LABEL_38;
              v49 = v18 * v56;
              v40 = v53;
              ((void (*)(char *, unint64_t, uint64_t))v30)(v51, v38 + v50 + v18 * v56, v53);
              if (v29 >= v39)
                goto LABEL_39;
              ((void (*)(char *, unint64_t, uint64_t))v30)(v52, v38 + v28, v40);
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(v38);
              *v54 = v38;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                v38 = sub_100200118(v38);
                *v54 = v38;
              }
              v7 = v48;
              if (v18 >= *(_QWORD *)(v38 + 16))
                goto LABEL_40;
              v42 = v38 + v50 + v49;
              v43 = *(void (**)(unint64_t, char *, uint64_t))(v48 + 40);
              v44 = v53;
              v43(v42, v52, v53);
              if (v29 >= *(_QWORD *)(*v54 + 16))
                goto LABEL_41;
              v43(*v54 + v28, v51, v44);
              v26 = v44;
            }
            if (__OFADD__(v18++, 1))
              goto LABEL_36;
          }
        }
        v46 = v29 + 1;
        if (__OFADD__(v29, 1))
          goto LABEL_35;
        v14 = *v54;
        v27 = *(_QWORD *)(*v54 + 16);
        ++v29;
        v28 += v56;
        if (v46 == v27)
          return;
      }
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
    }
    __break(1u);
  }
}

uint64_t sub_1003FDED8()
{
  return sub_1003FDEE4((uint64_t (*)(_QWORD, uint64_t))sub_1003FABD8);
}

uint64_t sub_1003FDEE4(uint64_t (*a1)(_QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FMIPSafeLocation(0) - 8) + 80);
  return a1(*(_QWORD *)(v1 + 16), v1 + ((v2 + 24) & ~v2));
}

uint64_t sub_1003FDF24()
{
  uint64_t v0;

  return swift_deallocObject(v0, 32, 7);
}

id sub_1003FDF50()
{
  uint64_t v0;

  return sub_1003F8810(*(id *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1003FDF58()
{
  return sub_1003FDAFC() & 1;
}

void sub_1003FE05C()
{
  char *v0;
  void *v1;
  id v2;
  Swift::String v3;
  Swift::String_optional v4;
  Swift::String v5;
  void *object;
  NSString v7;
  id v8;
  Swift::String v9;
  Swift::String_optional v10;
  Swift::String v11;
  void *v12;
  NSString v13;
  id v14;
  void *v15;
  id v16;
  NSString v17;
  id v18;
  id v19;
  Swift::String v20;
  Swift::String_optional v21;
  Swift::String v22;
  void *v23;
  uint64_t v24;
  NSString v25;
  void *v26;
  id v27;
  id v28;
  _QWORD aBlock[5];
  uint64_t v30;
  Swift::String v31;
  Swift::String v32;
  Swift::String v33;

  objc_msgSend(v0, "setDismissalType:", 3);
  v1 = (void *)objc_opt_self(NSBundle);
  v2 = objc_msgSend(v1, "mainBundle");
  v3._countAndFlagsBits = 0xD00000000000001FLL;
  v31._object = (void *)0x80000001004B3420;
  v3._object = (void *)0x80000001004C5C80;
  v4.value._countAndFlagsBits = 0xD000000000000010;
  v4.value._object = (void *)0x80000001004B3400;
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  v31._countAndFlagsBits = 0xD000000000000015;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, v4, (NSBundle)v2, v5, v31)._object;

  v7 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setTitle:", v7, swift_bridgeObjectRelease(object).n128_f64[0]);

  v8 = objc_msgSend(v1, "mainBundle");
  v9._countAndFlagsBits = 0xD000000000000022;
  v32._object = (void *)0x80000001004B3420;
  v9._object = (void *)0x80000001004C5CA0;
  v10.value._countAndFlagsBits = 0xD000000000000010;
  v10.value._object = (void *)0x80000001004B3400;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  v32._countAndFlagsBits = 0xD000000000000015;
  v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, v10, (NSBundle)v8, v11, v32)._object;

  v13 = String._bridgeToObjectiveC()();
  objc_msgSend(v0, "setSubtitle:", v13, swift_bridgeObjectRelease(v12).n128_f64[0]);

  v14 = objc_msgSend((id)objc_opt_self(UIImageSymbolConfiguration), "configurationWithPointSize:", 80.0);
  v15 = *(void **)&v0[OBJC_IVAR____TtC6FindMy30FMAccessoryDiscoveryAttachCard_imageView];
  v16 = v14;
  v17 = String._bridgeToObjectiveC()();
  v18 = objc_msgSend((id)objc_opt_self(UIImage), "systemImageNamed:withConfiguration:", v17, v16);

  objc_msgSend(v15, "setImage:", v18);
  objc_msgSend(v15, "setContentMode:", 4);
  v19 = objc_msgSend(v1, "mainBundle");
  v20._countAndFlagsBits = 0xD000000000000020;
  v33._object = (void *)0x80000001004B3420;
  v20._object = (void *)0x80000001004C5CD0;
  v21.value._countAndFlagsBits = 0xD000000000000010;
  v21.value._object = (void *)0x80000001004B3400;
  v22._countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  v33._countAndFlagsBits = 0xD000000000000015;
  v23 = NSLocalizedString(_:tableName:bundle:value:comment:)(v20, v21, (NSBundle)v19, v22, v33)._object;

  v24 = swift_allocObject(&unk_100564C70, 24, 7);
  swift_unknownObjectWeakInit(v24 + 16);
  swift_retain_n(v24, 2);
  swift_bridgeObjectRetain(v23);
  v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease(v23);
  aBlock[4] = sub_1003FE924;
  v30 = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100008B40;
  aBlock[3] = &unk_100564C88;
  v26 = _Block_copy(aBlock);
  v27 = objc_msgSend((id)objc_opt_self(PRXAction), "actionWithTitle:style:handler:", v25, 0, v26);

  _Block_release(v26);
  v28 = objc_msgSend(v0, "addAction:", v27, swift_release(v30).n128_f64[0]);

  swift_bridgeObjectRelease(v23);
  swift_release_n(v24, 2);

}

void sub_1003FE448(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t Strong;
  void *v4;
  uint64_t v5;
  void *v6;
  _QWORD aBlock[5];
  uint64_t v8;
  _BYTE v9[24];

  v2 = a2 + 16;
  swift_beginAccess(a2 + 16, v9, 0, 0);
  Strong = swift_unknownObjectWeakLoadStrong(v2);
  if (Strong)
  {
    v4 = (void *)Strong;
    v5 = swift_allocObject(&unk_100564CC0, 32, 7);
    *(_QWORD *)(v5 + 16) = 0;
    *(_QWORD *)(v5 + 24) = 0;
    aBlock[4] = sub_100066830;
    v8 = v5;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100037DF8;
    aBlock[3] = &unk_100564CD8;
    v6 = _Block_copy(aBlock);
    objc_msgSend(v4, "dismissViewControllerAnimated:completion:", 1, v6, swift_release(v8).n128_f64[0]);
    _Block_release(v6);

  }
}

void sub_1003FE518()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  Class isa;

  v1 = v0;
  v26 = (void *)objc_opt_self(NSLayoutConstraint);
  v2 = sub_100053F2C(&qword_1005D2F10);
  v3 = swift_allocObject(v2, 64, 7);
  *(_OWORD *)(v3 + 16) = xmmword_100481720;
  v4 = *(void **)&v1[OBJC_IVAR____TtC6FindMy30FMAccessoryDiscoveryAttachCard_imageView];
  v5 = objc_msgSend(v4, "centerXAnchor");
  v6 = objc_msgSend(v1, "contentView");
  v7 = objc_msgSend(v6, "mainContentGuide");

  v8 = objc_msgSend(v7, "centerXAnchor");
  v9 = objc_msgSend(v5, "constraintEqualToAnchor:", v8);

  *(_QWORD *)(v3 + 32) = v9;
  v10 = objc_msgSend(v4, "topAnchor");
  v11 = objc_msgSend(v1, "contentView");
  v12 = objc_msgSend(v11, "mainContentGuide");

  v13 = objc_msgSend(v12, "topAnchor");
  v14 = objc_msgSend(v10, "constraintGreaterThanOrEqualToAnchor:", v13);

  *(_QWORD *)(v3 + 40) = v14;
  v15 = objc_msgSend(v4, "bottomAnchor");
  v16 = objc_msgSend(v1, "contentView");
  v17 = objc_msgSend(v16, "mainContentGuide");

  v18 = objc_msgSend(v17, "bottomAnchor");
  v19 = objc_msgSend(v15, "constraintLessThanOrEqualToAnchor:", v18);

  *(_QWORD *)(v3 + 48) = v19;
  v20 = objc_msgSend(v4, "centerYAnchor");
  v21 = objc_msgSend(v1, "contentView");
  v22 = objc_msgSend(v21, "mainContentGuide");

  v23 = objc_msgSend(v22, "centerYAnchor");
  v24 = objc_msgSend(v20, "constraintEqualToAnchor:", v23);

  *(_QWORD *)(v3 + 56) = v24;
  specialized Array._endMutation()(v25);
  sub_100048C64();
  isa = Array._bridgeToObjectiveC()().super.isa;
  objc_msgSend(v26, "activateConstraints:", isa, swift_bridgeObjectRelease(v3).n128_f64[0]);

}

id sub_1003FE868()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FMAccessoryDiscoveryAttachCard();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for FMAccessoryDiscoveryAttachCard()
{
  return objc_opt_self(_TtC6FindMy30FMAccessoryDiscoveryAttachCard);
}

uint64_t sub_1003FE900()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy(v0 + 16);
  return swift_deallocObject(v0, 24, 7);
}

void sub_1003FE924(uint64_t a1)
{
  uint64_t v1;

  sub_1003FE448(a1, v1);
}

uint64_t sub_1003FE92C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release(*(_QWORD *)(v0 + 24));
  return swift_deallocObject(v0, 32, 7);
}

_QWORD *sub_1003FE960(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  if ((unint64_t)a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v2)
      return _swiftEmptyArrayStorage;
    result = (_QWORD *)sub_1001121AC(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
      else
        v5 = *(id *)(a1 + 8 * v4 + 32);
      v6 = v5;
      objc_msgSend(v5, "coordinate");
      v8 = v7;
      v10 = v9;

      v12 = _swiftEmptyArrayStorage[2];
      v11 = _swiftEmptyArrayStorage[3];
      if (v12 >= v11 >> 1)
        sub_1001121AC(v11 > 1, v12 + 1, 1);
      ++v4;
      _swiftEmptyArrayStorage[2] = v12 + 1;
      v13 = &_swiftEmptyArrayStorage[2 * v12];
      v13[4] = v8;
      v13[5] = v10;
      if (v2 == v4)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_15:
    if (a1 < 0)
      v14 = a1;
    else
      v14 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v14);
    swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

_QWORD *sub_1003FEABC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if ((unint64_t)a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v2)
      return _swiftEmptyArrayStorage;
    result = (_QWORD *)sub_100112190(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)(v4, a1);
      else
        v5 = *(id *)(a1 + 8 * v4 + 32);
      v6 = v5;
      objc_msgSend(v5, "altitude");
      v8 = v7;

      v10 = _swiftEmptyArrayStorage[2];
      v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1)
        sub_100112190(v9 > 1, v10 + 1, 1);
      ++v4;
      _swiftEmptyArrayStorage[2] = v10 + 1;
      _swiftEmptyArrayStorage[v10 + 4] = v8;
      if (v2 == v4)
        return _swiftEmptyArrayStorage;
    }
    __break(1u);
LABEL_15:
    if (a1 < 0)
      v11 = a1;
    else
      v11 = a1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain(a1);
    v2 = _CocoaArrayWrapper.endIndex.getter(v11);
    swift_bridgeObjectRelease(a1);
  }
  __break(1u);
  return result;
}

void (*sub_1003FEC1C(_QWORD *a1, unsigned __int8 a2))(_QWORD *)
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_100413BC8(v4, a2);
  return sub_1003FEC68;
}

void (*sub_1003FEC6C(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain(a3);
  v6[5] = sub_100413C48(v6, a2, a3);
  return sub_1003FECD8;
}

void sub_1003FECD8(_QWORD *a1)
{
  void *v1;
  uint64_t v2;

  v1 = (void *)*a1;
  v2 = *(_QWORD *)(*a1 + 32);
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease(v2);
  free(v1);
}

void (*sub_1003FED10(_QWORD *a1, unsigned __int8 a2))(_QWORD *)
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_100413D28(v4, a2);
  return sub_1003FEC68;
}

void sub_1003FED5C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 32))(*a1, 0);
  free(v1);
}

void (*sub_1003FED8C(_QWORD *a1, uint64_t a2, unint64_t a3))(_QWORD *a1)
{
  _QWORD *v6;

  v6 = malloc(0x38uLL);
  *a1 = v6;
  v6[4] = a2;
  v6[5] = a3;
  sub_1000758C4(a2, a3);
  v6[6] = sub_100413DE0(v6, a2, a3);
  return sub_1003FEDFC;
}

void sub_1003FEDFC(_QWORD *a1)
{
  void *v1;
  unint64_t v2;
  uint64_t v3;

  v1 = (void *)*a1;
  v2 = *(_QWORD *)(*a1 + 40);
  v3 = *(_QWORD *)(*a1 + 32);
  (*(void (**)(_QWORD, _QWORD))(*a1 + 48))(*a1, 0);
  sub_1000758D8(v3, v2);
  free(v1);
}

uint64_t sub_1003FEE44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char v24;
  uint64_t v26;
  uint64_t v27;

  v27 = a4;
  v7 = sub_100053F2C((uint64_t *)&unk_1005E4250);
  v8 = __chkstk_darwin(v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v12 = (char *)&v26 - v11;
  v13 = type metadata accessor for Date(0);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  v14(v12, a1, v13);
  v15 = &v12[*(int *)(v7 + 48)];
  v16 = type metadata accessor for UUID(0);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  v17(v15, a2, v16);
  v14(v10, a3, v13);
  v18 = &v10[*(int *)(v7 + 48)];
  v17(v18, v27, v16);
  v19 = sub_100008000((unint64_t *)&qword_1005D3438, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
  if ((dispatch thunk of static Equatable.== infix(_:_:)(v12, v10, v13, v19) & 1) != 0)
  {
    v20 = sub_100008000(&qword_1005E4268, (uint64_t (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    v21 = v15;
    v22 = v18;
    v23 = v16;
  }
  else
  {
    v20 = sub_100008000(&qword_1005E4260, (uint64_t (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
    v21 = v12;
    v22 = v10;
    v23 = v13;
  }
  v24 = dispatch thunk of static Comparable.< infix(_:_:)(v21, v22, v23, v20);
  sub_1000051EC((uint64_t)v10, (uint64_t *)&unk_1005E4250);
  sub_1000051EC((uint64_t)v12, (uint64_t *)&unk_1005E4250);
  return v24 & 1;
}

uint64_t sub_1003FF024(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t result;
  _QWORD v23[5];
  uint64_t v24;
  _BYTE v25[24];

  v23[4] = a2;
  v3 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v3);
  v23[2] = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FMIPDevice(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = __chkstk_darwin(v5);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v23[3] = (char *)v23 - v10;
  v11 = type metadata accessor for FMSelectedSection(0);
  v12 = __chkstk_darwin(v11);
  v13 = __chkstk_darwin(v12);
  v15 = (_QWORD *)((char *)v23 - v14);
  __chkstk_darwin(v13);
  v17 = (char *)v23 - v16;
  v24 = a1;
  v18 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v18, v25, 0, 0);
  sub_10004FC74(v18, (uint64_t)v17, type metadata accessor for FMSelectedSection);
  sub_10004FC74((uint64_t)v17, (uint64_t)v15, type metadata accessor for FMSelectedSection);
  switch(swift_getEnumCaseMultiPayload(v15, v11))
  {
    case 0u:
      v19 = sub_100053F2C(&qword_1005DE9B0);
      sub_1000051EC((uint64_t)v15 + *(int *)(v19 + 48), (uint64_t *)&unk_1005D3AA0);
      (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v15, v5);
      break;
    case 6u:
      v20 = v15[1];
      v21 = v15[2];
      swift_bridgeObjectRelease(*v15);
      sub_1000758D8(v20, v21);
      break;
    case 7u:
      sub_10004FCB8((uint64_t)v15, type metadata accessor for FMSelectedSection);
      break;
    case 0xBu:
      break;
    default:
      sub_10004FCB8((uint64_t)v17, type metadata accessor for FMSelectedSection);
      return sub_10004FCB8((uint64_t)v15, type metadata accessor for FMSelectedSection);
  }
  v23[1] = v9;
  __asm { BR              X10 }
  return result;
}

uint64_t sub_1003FF4B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _BYTE v17[24];

  v4 = type metadata accessor for FMSelectedSection(0);
  v5 = __chkstk_darwin(v4);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v5);
  v9 = &v17[-v8 - 8];
  v10 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v10, v17, 0, 0);
  sub_10004FC74(v10, (uint64_t)v9, type metadata accessor for FMSelectedSection);
  sub_10004FC74((uint64_t)v9, (uint64_t)v7, type metadata accessor for FMSelectedSection);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7, v4);
  if ((EnumCaseMultiPayload - 16) >= 2)
  {
    if (EnumCaseMultiPayload == 5)
    {
      v12 = *(_QWORD *)v7;
      v13 = *((_QWORD *)v7 + 1);
      v14 = *((_QWORD *)v7 + 2);
      swift_bridgeObjectRelease(v12);
      sub_1000758D8(v13, v14);
    }
    else
    {
      if (EnumCaseMultiPayload != 3)
      {
        sub_10004FCB8((uint64_t)v9, type metadata accessor for FMSelectedSection);
        v9 = v7;
        return sub_10004FCB8((uint64_t)v9, type metadata accessor for FMSelectedSection);
      }
      sub_10004FCB8((uint64_t)v7, type metadata accessor for FMSelectedSection);
    }
  }
  if (*(unsigned __int8 *)(a1 + 56) - 1 >= 2)
    sub_1004084B4(a2);
  else
    sub_1004094FC(a2);
  return sub_10004FCB8((uint64_t)v9, type metadata accessor for FMSelectedSection);
}

uint64_t sub_1003FF62C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  _BYTE v14[24];

  v4 = type metadata accessor for FMSelectedSection(0);
  v5 = __chkstk_darwin(v4);
  v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v5);
  v9 = &v14[-v8 - 8];
  v10 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v10, v14, 0, 0);
  sub_10004FC74(v10, (uint64_t)v9, type metadata accessor for FMSelectedSection);
  sub_10004FC74((uint64_t)v9, (uint64_t)v7, type metadata accessor for FMSelectedSection);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v7, v4);
  if (EnumCaseMultiPayload != 9)
  {
    if (EnumCaseMultiPayload != 8)
    {
      sub_10004FCB8((uint64_t)v9, type metadata accessor for FMSelectedSection);
      v9 = v7;
      return sub_10004FCB8((uint64_t)v9, type metadata accessor for FMSelectedSection);
    }
    sub_10004FCB8((uint64_t)v7, type metadata accessor for FMSelectedSection);
  }
  if (*(unsigned __int8 *)(a1 + 56) - 1 >= 2)
    sub_10040BC24(a2);
  else
    sub_10040CD00(a2);
  return sub_10004FCB8((uint64_t)v9, type metadata accessor for FMSelectedSection);
}

uint64_t sub_1003FF780(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  id v22;
  id v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  __n128 v29;
  os_log_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  _QWORD *v45;
  os_log_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t aBlock[5];
  uint64_t v58;

  v4 = v3;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v55 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v54 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v52 = *(_QWORD *)(v10 - 8);
  v53 = v10;
  __chkstk_darwin(v10);
  v51 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FMIPItem(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v16 = type metadata accessor for Logger(0);
  sub_100056D88(v16, (uint64_t)qword_1005F5748);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a3, v12);
  v17 = a2;
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  v20 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    v21 = swift_slowAlloc(22, -1);
    v45 = (_QWORD *)swift_slowAlloc(8, -1);
    v49 = swift_slowAlloc(32, -1);
    v56 = (uint64_t)v17;
    aBlock[0] = v49;
    *(_DWORD *)v21 = 138412546;
    v48 = v20;
    v47 = v12;
    v50 = v8;
    v22 = v17;
    v46 = v18;
    v23 = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, aBlock);
    v24 = v45;
    *v45 = v17;

    *(_WORD *)(v21 + 12) = 2080;
    v26 = FMIPItem.debugDescription.getter(v25);
    v28 = v27;
    v56 = sub_100056DA0(v26, v27, aBlock);
    v8 = v50;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v56, aBlock);
    v29 = swift_bridgeObjectRelease(v28);
    (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v47, v29);
    v30 = v46;
    _os_log_impl((void *)&_mh_execute_header, v46, (os_log_type_t)v48, "FMMapViewDataSource: didUpdate image %@ item %s", (uint8_t *)v21, 0x16u);
    v31 = sub_100053F2C((uint64_t *)&unk_1005D9680);
    swift_arrayDestroy(v24, 1, v31);
    swift_slowDealloc(v24, -1, -1);
    v32 = v49;
    swift_arrayDestroy(v49, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v32, -1, -1);
    swift_slowDealloc(v21, -1, -1);

  }
  else
  {

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  v33 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v34 = (void *)static OS_dispatch_queue.main.getter(v33);
  v35 = swift_allocObject(&unk_1005657C8, 32, 7);
  *(_QWORD *)(v35 + 16) = v4;
  *(_QWORD *)(v35 + 24) = a1;
  aBlock[4] = (uint64_t)sub_10041662C;
  v58 = v35;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100037DF8;
  aBlock[3] = (uint64_t)&unk_1005657E0;
  v36 = _Block_copy(aBlock);
  v37 = v58;
  swift_retain(v4);
  swift_retain(a1);
  swift_release(v37);
  v38 = v51;
  static DispatchQoS.unspecified.getter(v39);
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  v40 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v41 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v42 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  v43 = v54;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v41, v42, v8, v40);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v38, v43, v36);
  _Block_release(v36);

  (*(void (**)(char *, uint64_t))(v55 + 8))(v43, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v38, v53);
}

uint64_t sub_1003FFC1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v17[24];

  v2 = type metadata accessor for FMSelectedSection(0);
  v3 = __chkstk_darwin(v2);
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v3);
  v7 = &v17[-v6 - 8];
  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v8, v17, 0, 0);
  sub_10004FC74(v8, (uint64_t)v7, type metadata accessor for FMSelectedSection);
  sub_10004FC74((uint64_t)v7, (uint64_t)v5, type metadata accessor for FMSelectedSection);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v2);
  if ((EnumCaseMultiPayload - 16) >= 2)
  {
    if ((_DWORD)EnumCaseMultiPayload == 5)
    {
      v10 = *(_QWORD *)v5;
      v11 = *((_QWORD *)v5 + 1);
      v12 = *((_QWORD *)v5 + 2);
      swift_bridgeObjectRelease(v10);
      EnumCaseMultiPayload = sub_1000758D8(v11, v12);
    }
    else
    {
      if ((_DWORD)EnumCaseMultiPayload != 3)
      {
        sub_10004FCB8((uint64_t)v7, type metadata accessor for FMSelectedSection);
        v7 = v5;
        return sub_10004FCB8((uint64_t)v7, type metadata accessor for FMSelectedSection);
      }
      EnumCaseMultiPayload = sub_10004FCB8((uint64_t)v5, type metadata accessor for FMSelectedSection);
    }
  }
  v13 = FMIPManager.items.getter(EnumCaseMultiPayload);
  v14 = v13;
  if (*(unsigned __int8 *)(a1 + 56) - 1 >= 2)
    sub_1004084B4(v13);
  else
    sub_1004094FC(v13);
  swift_bridgeObjectRelease(v14);
  return sub_10004FCB8((uint64_t)v7, type metadata accessor for FMSelectedSection);
}

uint64_t sub_1003FFDAC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  id v22;
  id v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  __n128 v30;
  os_log_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  _QWORD *v46;
  os_log_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t aBlock[5];
  uint64_t v59;

  v4 = v3;
  v8 = type metadata accessor for DispatchWorkItemFlags(0);
  v56 = *(_QWORD *)(v8 - 8);
  __chkstk_darwin(v8);
  v55 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DispatchQoS(0);
  v53 = *(_QWORD *)(v10 - 8);
  v54 = v10;
  __chkstk_darwin(v10);
  v52 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FMIPDevice(0);
  v13 = *(_QWORD *)(v12 - 8);
  __chkstk_darwin(v12);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v16 = type metadata accessor for Logger(0);
  sub_100056D88(v16, (uint64_t)qword_1005F5748);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a3, v12);
  v17 = a2;
  v18 = Logger.logObject.getter(v17);
  v19 = static os_log_type_t.default.getter(v18);
  v20 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    v21 = swift_slowAlloc(22, -1);
    v46 = (_QWORD *)swift_slowAlloc(8, -1);
    v50 = swift_slowAlloc(32, -1);
    v57 = (uint64_t)v17;
    aBlock[0] = v50;
    *(_DWORD *)v21 = 138412546;
    v49 = v20;
    v48 = v12;
    v51 = v8;
    v22 = v17;
    v47 = v18;
    v23 = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, aBlock);
    v24 = v46;
    *v46 = v17;

    *(_WORD *)(v21 + 12) = 2080;
    v27 = FMIPDevice.debugDescription.getter(v25, v26);
    v29 = v28;
    v57 = sub_100056DA0(v27, v28, aBlock);
    v8 = v51;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v57, aBlock);
    v30 = swift_bridgeObjectRelease(v29);
    (*(void (**)(char *, uint64_t, __n128))(v13 + 8))(v15, v48, v30);
    v31 = v47;
    _os_log_impl((void *)&_mh_execute_header, v47, (os_log_type_t)v49, "FMMapViewDataSource: didUpdate image %@ device %s", (uint8_t *)v21, 0x16u);
    v32 = sub_100053F2C((uint64_t *)&unk_1005D9680);
    swift_arrayDestroy(v24, 1, v32);
    swift_slowDealloc(v24, -1, -1);
    v33 = v50;
    swift_arrayDestroy(v50, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v33, -1, -1);
    swift_slowDealloc(v21, -1, -1);

  }
  else
  {

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  v34 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v35 = (void *)static OS_dispatch_queue.main.getter(v34);
  v36 = swift_allocObject(&unk_100565778, 32, 7);
  *(_QWORD *)(v36 + 16) = v4;
  *(_QWORD *)(v36 + 24) = a1;
  aBlock[4] = (uint64_t)sub_100416618;
  v59 = v36;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100037DF8;
  aBlock[3] = (uint64_t)&unk_100565790;
  v37 = _Block_copy(aBlock);
  v38 = v59;
  swift_retain(v4);
  swift_retain(a1);
  swift_release(v38);
  v39 = v52;
  static DispatchQoS.unspecified.getter(v40);
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  v41 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v42 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v43 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  v44 = v55;
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v42, v43, v8, v41);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v39, v44, v37);
  _Block_release(v37);

  (*(void (**)(char *, uint64_t))(v56 + 8))(v44, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v39, v54);
}

uint64_t sub_100400248(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;
  _BYTE v17[24];

  v2 = type metadata accessor for FMSelectedSection(0);
  v3 = __chkstk_darwin(v2);
  v5 = (uint64_t *)&v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v3);
  v7 = &v17[-v6 - 8];
  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v8, v17, 0, 0);
  sub_10004FC74(v8, (uint64_t)v7, type metadata accessor for FMSelectedSection);
  sub_10004FC74((uint64_t)v7, (uint64_t)v5, type metadata accessor for FMSelectedSection);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v2);
  switch((int)EnumCaseMultiPayload)
  {
    case 0:
      v10 = sub_100053F2C(&qword_1005DE9B0);
      sub_1000051EC((uint64_t)v5 + *(int *)(v10 + 48), (uint64_t *)&unk_1005D3AA0);
      v11 = type metadata accessor for FMIPDevice(0);
      EnumCaseMultiPayload = (*(uint64_t (**)(uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v5, v11);
      break;
    case 6:
      v12 = *v5;
      v13 = v5[1];
      v14 = v5[2];
      swift_bridgeObjectRelease(v12);
      EnumCaseMultiPayload = sub_1000758D8(v13, v14);
      break;
    case 7:
      EnumCaseMultiPayload = sub_10004FCB8((uint64_t)v5, type metadata accessor for FMSelectedSection);
      break;
    case 11:
      break;
    default:
      sub_10004FCB8((uint64_t)v7, type metadata accessor for FMSelectedSection);
      return sub_10004FCB8((uint64_t)v5, type metadata accessor for FMSelectedSection);
  }
  FMIPManager.devices.getter(EnumCaseMultiPayload);
  __asm { BR              X10 }
  return result;
}

uint64_t sub_100400450(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t aBlock[5];
  uint64_t v46;

  v3 = v2;
  v6 = type metadata accessor for DispatchWorkItemFlags(0);
  v41 = *(_QWORD *)(v6 - 8);
  __chkstk_darwin(v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DispatchQoS(0);
  v43 = *(_QWORD *)(v9 - 8);
  __chkstk_darwin(v9);
  v42 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v11 = type metadata accessor for Logger(0);
  sub_100056D88(v11, (uint64_t)qword_1005F5748);
  v12 = swift_bridgeObjectRetain_n(a2, 2);
  v13 = Logger.logObject.getter(v12);
  v14 = static os_log_type_t.default.getter(v13);
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc(12, -1);
    v40 = v6;
    v16 = (uint8_t *)v15;
    v17 = swift_slowAlloc(32, -1);
    aBlock[0] = v17;
    v38 = v9;
    v39 = v8;
    *(_DWORD *)v16 = 136315138;
    v18 = type metadata accessor for FMIPSafeLocation(0);
    swift_bridgeObjectRetain(a2);
    v20 = Array.description.getter(v19, v18);
    v37 = v3;
    v21 = a1;
    v23 = v22;
    swift_bridgeObjectRelease(a2);
    v44 = sub_100056DA0(v20, v23, aBlock);
    v9 = v38;
    v8 = v39;
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v44, aBlock);
    swift_bridgeObjectRelease_n(a2, 2);
    v24 = v23;
    a1 = v21;
    v3 = v37;
    swift_bridgeObjectRelease(v24);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "FMMapViewDataSource: didUpdate safeLocations %s", v16, 0xCu);
    swift_arrayDestroy(v17, 1, (char *)&type metadata for Any + 8);
    swift_slowDealloc(v17, -1, -1);
    v25 = v16;
    v6 = v40;
    swift_slowDealloc(v25, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n(a2, 2);
  }
  v26 = sub_100006C5C(0, (unint64_t *)&qword_1005D20E0, OS_dispatch_queue_ptr);
  v27 = (void *)static OS_dispatch_queue.main.getter(v26);
  v28 = swift_allocObject(&unk_100565728, 32, 7);
  *(_QWORD *)(v28 + 16) = v3;
  *(_QWORD *)(v28 + 24) = a1;
  aBlock[4] = (uint64_t)sub_100416604;
  v46 = v28;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_100037DF8;
  aBlock[3] = (uint64_t)&unk_100565740;
  v29 = _Block_copy(aBlock);
  v30 = v46;
  swift_retain(v3);
  swift_retain(a1);
  swift_release(v30);
  v31 = v42;
  static DispatchQoS.unspecified.getter(v32);
  aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
  v33 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v34 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v35 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(aBlock, v34, v35, v6, v33);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v31, v8, v29);
  _Block_release(v29);

  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v31, v9);
}

uint64_t sub_10040082C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  _BYTE v20[24];

  v2 = type metadata accessor for FMSelectedSection(0);
  v3 = __chkstk_darwin(v2);
  v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v3);
  v7 = &v20[-v6 - 8];
  v8 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v8, v20, 0, 0);
  sub_10004FC74(v8, (uint64_t)v7, type metadata accessor for FMSelectedSection);
  sub_10004FC74((uint64_t)v7, (uint64_t)v5, type metadata accessor for FMSelectedSection);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v5, v2);
  switch((int)EnumCaseMultiPayload)
  {
    case 5:
      v10 = *(_QWORD *)v5;
      v11 = *((_QWORD *)v5 + 1);
      v12 = *((_QWORD *)v5 + 2);
      swift_bridgeObjectRelease(v10);
      EnumCaseMultiPayload = sub_1000758D8(v11, v12);
      goto LABEL_3;
    case 6:
      v15 = *(_QWORD *)v5;
      v16 = *((_QWORD *)v5 + 1);
      v17 = *((_QWORD *)v5 + 2);
      swift_bridgeObjectRelease(v15);
      EnumCaseMultiPayload = sub_1000758D8(v16, v17);
      goto LABEL_6;
    case 11:
LABEL_6:
      FMIPManager.devices.getter(EnumCaseMultiPayload);
      __asm { BR              X10 }
      return result;
    case 16:
LABEL_3:
      v13 = FMIPManager.items.getter(EnumCaseMultiPayload);
      v14 = v13;
      if (*(unsigned __int8 *)(a1 + 56) - 1 >= 2)
        sub_1004084B4(v13);
      else
        sub_1004094FC(v13);
      swift_bridgeObjectRelease(v14);
      break;
    default:
      sub_10004FCB8((uint64_t)v7, type metadata accessor for FMSelectedSection);
      v7 = v5;
      break;
  }
  return sub_10004FCB8((uint64_t)v7, type metadata accessor for FMSelectedSection);
}

uint64_t sub_100400A28(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v15[24];

  v2 = type metadata accessor for FMSelectedSection(0);
  v3 = __chkstk_darwin(v2);
  v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v3);
  v7 = &v15[-v6 - 8];
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(v8 + 56) + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v9, v15, 0, 0);
  sub_10004FC74(v9, (uint64_t)v7, type metadata accessor for FMSelectedSection);
  sub_10004FC74((uint64_t)v7, (uint64_t)v5, type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload(v5, v2) == 9)
  {
    v10 = *(_QWORD *)(v8 + 24);
    v11 = swift_retain(v10);
    v12 = FMIPManager.unknownItems.getter(v11);
    swift_release(v10);
    if (*(unsigned __int8 *)(a1 + 56) - 1 >= 2)
      sub_10040BC24(v12);
    else
      sub_10040CD00(v12);
    swift_bridgeObjectRelease(v12);
  }
  else
  {
    sub_10004FCB8((uint64_t)v7, type metadata accessor for FMSelectedSection);
    v7 = v5;
  }
  return sub_10004FCB8((uint64_t)v7, type metadata accessor for FMSelectedSection);
}

double sub_100400B94(uint64_t a1)
{
  uint64_t v2;
  __n128 v3;
  uint64_t v4;
  double result;

  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 48);
  swift_retain(v2);
  v4 = dispatch thunk of FMFManager.friends.getter(v3);
  swift_release(v2);
  if (*(unsigned __int8 *)(a1 + 56) - 1 >= 2)
  {
    *(_BYTE *)(a1 + 57) = 0;
    sub_10003F4F8(v4);
  }
  else
  {
    sub_100406EC4(v4);
  }
  *(_QWORD *)&result = swift_bridgeObjectRelease(v4).n128_u64[0];
  return result;
}

double sub_100400C10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  double result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD aBlock[5];
  _QWORD *v24;

  v3 = type metadata accessor for DispatchWorkItemFlags(0);
  v21 = *(_QWORD *)(v3 - 8);
  __chkstk_darwin(v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for DispatchQoS(0);
  v6 = *(_QWORD *)(v20 - 8);
  __chkstk_darwin(v20);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = swift_allocObject(&unk_1005651B0, 24, 7);
  *(_QWORD *)(v9 + 16) = &_swiftEmptyDictionarySingleton;
  v10 = swift_allocObject(&unk_100565408, 24, 7);
  *(_QWORD *)(v10 + 16) = &_swiftEmptyDictionarySingleton;
  v19 = *(_QWORD *)(v1 + 88);
  v11 = (_QWORD *)swift_allocObject(&unk_100565638, 48, 7);
  v11[2] = a1;
  v11[3] = v1;
  v11[4] = v9;
  v11[5] = v10;
  aBlock[4] = sub_10041659C;
  v24 = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_100565650;
  v12 = _Block_copy(aBlock);
  swift_bridgeObjectRetain(a1);
  swift_retain(v1);
  swift_retain(v9);
  v13 = swift_retain(v10);
  static DispatchQoS.unspecified.getter(v13);
  v22 = _swiftEmptyArrayStorage;
  v14 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v15 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v16 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  dispatch thunk of SetAlgebra.init<A>(_:)(&v22, v15, v16, v3, v14);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v8, v5, v12);
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v20);
  v17 = v24;
  swift_release(v9);
  swift_release(v10);
  *(_QWORD *)&result = swift_release(v17).n128_u64[0];
  return result;
}

void sub_100400E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  unint64_t v60;
  BOOL v61;
  unint64_t v62;
  int64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __n128 v68;
  uint64_t v69;
  __n128 v70;
  uint64_t v71;
  uint64_t *v72;
  void (*v73)(char *, char *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  _QWORD *v86;
  char v87;
  unint64_t v88;
  uint64_t v89;
  _BOOL8 v90;
  uint64_t v91;
  char v92;
  unint64_t v93;
  char v94;
  _QWORD *v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  _QWORD *v101;
  char *v102;
  uint64_t v103;
  _QWORD *v104;
  char v105;
  unint64_t v106;
  uint64_t v107;
  _BOOL8 v108;
  uint64_t v109;
  char v110;
  unint64_t v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  void (*v116)(_QWORD *);
  _QWORD *v117;
  char *v118;
  unint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void (*v131)(char *, uint64_t, uint64_t);
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  uint64_t v140;
  char v141;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v143;
  _QWORD *v144;
  void (*v145)(_QWORD *);
  char *v146;
  _QWORD *v147;
  char *v148;
  unint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t *v153;
  uint64_t v154;
  _QWORD *v155;
  char *v156;
  char v157;
  uint64_t v158;
  __n128 v159;
  uint64_t *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  int64_t v166;
  uint64_t v167;
  uint64_t v168;
  _QWORD *v169;
  uint64_t v170;
  uint64_t *v171;
  _QWORD *v172;
  id v173;
  char v174;
  uint64_t v175;
  unint64_t v176;
  unint64_t v177;
  int64_t v178;
  uint64_t v179;
  uint64_t *v180;
  unint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  objc_class *v187;
  id v188;
  uint64_t v189;
  void *v190;
  void *v191;
  uint64_t v192;
  unint64_t v193;
  char v194;
  id v195;
  uint64_t v196;
  void *v197;
  char *v198;
  uint64_t v199;
  void *v200;
  id v201;
  char *v202;
  char *v203;
  uint64_t v204;
  uint64_t *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  char *v218;
  uint64_t v219;
  uint64_t (*v220)(uint64_t, uint64_t, uint64_t);
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t *v232;
  char *v233;
  _QWORD *v234;
  char *v235;
  uint64_t v236;
  _QWORD *v237;
  uint64_t v238;
  uint64_t v239;
  _QWORD *v240;
  _QWORD *v241;
  uint64_t v242;
  char *v243;
  uint64_t v244;
  int64_t v245;
  uint64_t v246;
  char *v247;
  int64_t v248;
  uint64_t v249;
  char *v250;
  uint64_t v251;
  uint64_t aBlock[5];
  uint64_t v253;
  uint64_t v254;
  _QWORD *v255;

  v251 = a4;
  v242 = a2;
  v231 = 0;
  v215 = type metadata accessor for DispatchQoS(0);
  v214 = *(_QWORD *)(v215 - 8);
  __chkstk_darwin(v215);
  v213 = (char *)&v208 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v212 = type metadata accessor for DispatchWorkItemFlags(0);
  v211 = *(_QWORD *)(v212 - 8);
  __chkstk_darwin(v212);
  v210 = (char *)&v208 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FMAnnotationIdentifier(0);
  v216 = *(_QWORD *)(v8 - 8);
  v9 = __chkstk_darwin(v8);
  v11 = (uint64_t *)((char *)&v208 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = __chkstk_darwin(v9);
  v232 = (uint64_t *)((char *)&v208 - v13);
  __chkstk_darwin(v12);
  v234 = (uint64_t *)((char *)&v208 - v14);
  v15 = sub_100053F2C((uint64_t *)&unk_1005D6700);
  v16 = __chkstk_darwin(v15);
  v218 = (char *)&v208 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v19 = (char *)&v208 - v18;
  v20 = type metadata accessor for FMIPLocation(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = __chkstk_darwin(v20);
  v217 = (char *)&v208 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v243 = (char *)&v208 - v24;
  v236 = type metadata accessor for FMIPItem(0);
  v239 = *(_QWORD *)(v236 - 8);
  __chkstk_darwin(v236);
  v233 = (char *)&v208 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  v27 = __chkstk_darwin(v26);
  v235 = (char *)&v208 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __chkstk_darwin(v27);
  v31 = (char *)&v208 - v30;
  __chkstk_darwin(v29);
  v33 = (char *)&v208 - v32;
  v34 = sub_100053F2C(&qword_1005D72D0);
  __chkstk_darwin(v34);
  v225 = (char *)&v208 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v224 = type metadata accessor for FMIPItemGroup(0);
  v226 = *(_QWORD *)(v224 - 8);
  __chkstk_darwin(v224);
  v37 = (char *)&v208 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v230 = type metadata accessor for FMIPDevice(0);
  __chkstk_darwin(v230);
  v238 = (uint64_t)&v208 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v240 = (_QWORD *)(a3 + 16);
  v237 = (_QWORD *)(v251 + 16);
  v40 = *(_QWORD *)(a1 + 16);
  v227 = v8;
  v241 = v11;
  v223 = v40;
  if (!v40)
    goto LABEL_85;
  v222 = a1 + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80));
  v221 = *(_QWORD *)(v38 + 72);
  v219 = v38;
  v220 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 16);
  v209 = a1;
  swift_bridgeObjectRetain(a1);
  v41 = 0;
  v229 = v20;
  v246 = v21;
  v42 = v236;
  v247 = v31;
  v250 = v33;
  v43 = (uint64_t)v225;
  v44 = v224;
  v248 = (int64_t)v37;
  v45 = v238;
  v46 = v20;
  while (1)
  {
    v228 = v41;
    v47 = v220(v45, v222 + v221 * v41, v230);
    FMIPDevice.itemGroup.getter(v47);
    v48 = v226;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v226 + 48))(v43, 1, v44) == 1)
    {
      v49 = sub_1000051EC(v43, &qword_1005D72D0);
      goto LABEL_69;
    }
    v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 32))(v37, v43, v44);
    if ((FMIPDevice.shouldDisplaySeparatedLocation.getter(v50) & 1) == 0)
    {
      v49 = (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v37, v44);
LABEL_69:
      v129 = (uint64_t)v218;
      v45 = v238;
      FMIPDevice.bestLocation.getter(v49);
      v130 = v246;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v246 + 48))(v129, 1, v46) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v219 + 8))(v45, v230);
        sub_1000051EC(v129, (uint64_t *)&unk_1005D6700);
        v43 = (uint64_t)v225;
        v44 = v224;
      }
      else
      {
        v131 = *(void (**)(char *, uint64_t, uint64_t))(v130 + 32);
        v132 = (uint64_t)v217;
        v131(v217, v129, v46);
        v133 = (uint64_t)v235;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v239 + 56))(v235, 1, 1, v42);
        v134 = *(_QWORD *)(v242 + 48);
        swift_bridgeObjectRetain(v134);
        v135 = (char *)sub_100406578(v45, v133, 0, v132, v134);
        swift_bridgeObjectRelease(v134);
        v136 = sub_1000051EC(v133, (uint64_t *)&unk_1005D3AA0);
        v137 = *(_QWORD *)&v135[OBJC_IVAR____TtC6FindMy12FMAnnotation_fmClusterIdentifier + 8];
        if (v137)
        {
          v138 = *(_QWORD *)&v135[OBJC_IVAR____TtC6FindMy12FMAnnotation_fmClusterIdentifier];
          v139 = v237;
          swift_beginAccess(v237, aBlock, 32, 0);
          v140 = *(_QWORD *)(*v139 + 16);
          sub_1000758C4(v138, v137);
          if (!v140 || (sub_100171E48(v138, v137), (v141 & 1) == 0))
          {
            swift_endAccess(aBlock);
            swift_beginAccess(v139, aBlock, 33, 0);
            sub_1000758C4(v138, v137);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v139);
            v255 = (_QWORD *)*v139;
            *v139 = 0x8000000000000000;
            sub_10017A724((uint64_t)_swiftEmptyArrayStorage, v138, v137, isUniquelyReferenced_nonNull_native);
            v143 = *v139;
            *v139 = v255;
            swift_bridgeObjectRelease(v143);
            sub_1000758D8(v138, v137);
          }
          swift_endAccess(aBlock);
          swift_beginAccess(v139, &v255, 33, 0);
          sub_1000758C4(v138, v137);
          v145 = sub_1003FED8C(aBlock, v138, v137);
          v146 = v217;
          if (*v144)
          {
            v147 = v144;
            v148 = v135;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v148);
            v150 = *(_QWORD *)((*v147 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v149 = *(_QWORD *)((*v147 & 0xFFFFFFFFFFFFFF8) + 0x18);
            if (v150 >= v149 >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v149 > 1, v150 + 1, 1);
            v151 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v150, v148);
            specialized Array._endMutation()(v151);
            ((void (*)(uint64_t *, _QWORD))v145)(aBlock, 0);
            swift_endAccess(&v255);
            sub_1000758D8(v138, v137);

            sub_1000758D8(v138, v137);
          }
          else
          {
            ((void (*)(uint64_t *, _QWORD))v145)(aBlock, 0);
            swift_endAccess(&v255);
            sub_1000758D8(v138, v137);
            sub_1000758D8(v138, v137);

          }
          v46 = v229;
          (*(void (**)(char *, uint64_t))(v246 + 8))(v146, v229);
          v45 = v238;
          (*(void (**)(uint64_t, uint64_t))(v219 + 8))(v238, v230);
        }
        else
        {
          v152 = FMIPDevice.identifier.getter(v136);
          v153 = v232;
          *v232 = v152;
          v153[1] = v154;
          swift_storeEnumTagMultiPayload(v153, v227, 2);
          v155 = v240;
          swift_beginAccess(v240, aBlock, 33, 0);
          v156 = v135;
          v157 = swift_isUniquelyReferenced_nonNull_native(*v155);
          v255 = (_QWORD *)*v155;
          *v155 = 0x8000000000000000;
          sub_10017A884((uint64_t)v156, (uint64_t)v153, v157);
          v158 = *v155;
          *v155 = v255;
          swift_bridgeObjectRelease(v158);
          sub_10004FCB8((uint64_t)v153, type metadata accessor for FMAnnotationIdentifier);
          swift_endAccess(aBlock);

          (*(void (**)(uint64_t, uint64_t))(v246 + 8))(v132, v46);
          (*(void (**)(uint64_t, uint64_t))(v219 + 8))(v45, v230);
        }
        v42 = v236;
        v43 = (uint64_t)v225;
        v44 = v224;
        v37 = (char *)v248;
      }
      goto LABEL_4;
    }
    v51 = FMIPItemGroup.groupedItems.getter();
    v52 = 0;
    v53 = *(_QWORD *)(v51 + 56);
    v244 = v51 + 56;
    v249 = v51;
    v54 = 1 << *(_BYTE *)(v51 + 32);
    if (v54 < 64)
      v55 = ~(-1 << v54);
    else
      v55 = -1;
    v56 = v55 & v53;
    v245 = (unint64_t)(v54 + 63) >> 6;
    v57 = v239;
    v58 = v233;
    if (v56)
    {
      do
      {
        while (1)
        {
          v59 = v19;
          v251 = (v56 - 1) & v56;
          v60 = __clz(__rbit64(v56)) | (v52 << 6);
LABEL_26:
          v64 = *(char **)(*(_QWORD *)(v249 + 48) + 8 * v60);
          v65 = swift_bridgeObjectRetain(v64);
          v66 = (uint64_t)v250;
          static FMIPItemGroup.primaryPart(group:)(v65);
          v67 = (uint64_t)v247;
          sub_100007464(v66, (uint64_t)v247, (uint64_t *)&unk_1005D3AA0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v67, 1, v42) != 1)
            break;
          sub_1000051EC(v66, (uint64_t *)&unk_1005D3AA0);
          swift_bridgeObjectRelease(v64);
          sub_1000051EC(v67, (uint64_t *)&unk_1005D3AA0);
          v37 = (char *)v248;
          v19 = v59;
          v56 = v251;
          if (!v251)
            goto LABEL_15;
        }
        v68.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(v57 + 32))(v58, v67, v42);
        v19 = v59;
        FMIPItem.location.getter(v68);
        v69 = v246;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v246 + 48))(v59, 1, v46) == 1)
        {
          v70 = swift_bridgeObjectRelease(v64);
          (*(void (**)(char *, uint64_t, __n128))(v57 + 8))(v58, v42, v70);
          sub_1000051EC((uint64_t)v250, (uint64_t *)&unk_1005D3AA0);
          v71 = (uint64_t)v59;
          v72 = (uint64_t *)&unk_1005D6700;
        }
        else
        {
          v73 = *(void (**)(char *, char *, uint64_t))(v69 + 32);
          v74 = (uint64_t)v243;
          v73(v243, v59, v46);
          v75 = (uint64_t)v235;
          (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v235, v58, v42);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v57 + 56))(v75, 0, 1, v42);
          v76 = *(_QWORD *)(v242 + 48);
          swift_bridgeObjectRetain(v76);
          v77 = (char *)sub_100406578(v238, v75, v64, v74, v76);
          swift_bridgeObjectRelease(v64);
          swift_bridgeObjectRelease(v76);
          v78 = sub_1000051EC(v75, (uint64_t *)&unk_1005D3AA0);
          v79 = *(_QWORD *)&v77[OBJC_IVAR____TtC6FindMy12FMAnnotation_fmClusterIdentifier + 8];
          if (v79)
          {
            v80 = v19;
            v81 = *(_QWORD *)&v77[OBJC_IVAR____TtC6FindMy12FMAnnotation_fmClusterIdentifier];
            v82 = v237;
            swift_beginAccess(v237, aBlock, 32, 0);
            v83 = *(_QWORD *)(*v82 + 16);
            sub_1000758C4(v81, v79);
            if (v83)
            {
              sub_100171E48(v81, v79);
              if ((v84 & 1) != 0)
                goto LABEL_50;
            }
            swift_endAccess(aBlock);
            swift_beginAccess(v82, aBlock, 33, 0);
            sub_1000758C4(v81, v79);
            v85 = swift_isUniquelyReferenced_nonNull_native(*v82);
            v255 = (_QWORD *)*v82;
            v86 = v255;
            *v82 = 0x8000000000000000;
            v88 = sub_100171E48(v81, v79);
            v89 = v86[2];
            v90 = (v87 & 1) == 0;
            v91 = v89 + v90;
            if (__OFADD__(v89, v90))
              goto LABEL_120;
            v92 = v87;
            if (v86[3] >= v91)
            {
              if ((v85 & 1) != 0)
              {
                v95 = v255;
                if ((v87 & 1) == 0)
                  goto LABEL_36;
              }
              else
              {
                sub_10017D8A4();
                v95 = v255;
                if ((v92 & 1) == 0)
                  goto LABEL_36;
              }
            }
            else
            {
              sub_1001775E4(v91, v85);
              v93 = sub_100171E48(v81, v79);
              if ((v92 & 1) != (v94 & 1))
                goto LABEL_127;
              v88 = v93;
              v95 = v255;
              if ((v92 & 1) == 0)
              {
LABEL_36:
                v95[(v88 >> 6) + 8] |= 1 << v88;
                v96 = (uint64_t *)(v95[6] + 16 * v88);
                *v96 = v81;
                v96[1] = v79;
                *(_QWORD *)(v95[7] + 8 * v88) = _swiftEmptyArrayStorage;
                v97 = v95[2];
                v61 = __OFADD__(v97, 1);
                v98 = v97 + 1;
                if (v61)
                  goto LABEL_123;
                v95[2] = v98;
                sub_1000758C4(v81, v79);
LABEL_49:
                v82 = v237;
                v114 = *v237;
                *v237 = v95;
                swift_bridgeObjectRelease(v114);
                sub_1000758D8(v81, v79);
LABEL_50:
                swift_endAccess(aBlock);
                v57 = v239;
                swift_beginAccess(v82, &v255, 33, 0);
                sub_1000758C4(v81, v79);
                v116 = sub_1003FED8C(aBlock, v81, v79);
                if (*v115)
                {
                  v117 = v115;
                  v118 = v77;
                  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v118);
                  v120 = *(_QWORD *)((*v117 & 0xFFFFFFFFFFFFFF8) + 0x10);
                  v119 = *(_QWORD *)((*v117 & 0xFFFFFFFFFFFFFF8) + 0x18);
                  if (v120 >= v119 >> 1)
                    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v119 > 1, v120 + 1, 1);
                  v121 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v120, v118);
                  specialized Array._endMutation()(v121);
                  ((void (*)(uint64_t *, _QWORD))v116)(aBlock, 0);
                  swift_endAccess(&v255);
                  sub_1000758D8(v81, v79);

                  sub_1000758D8(v81, v79);
                  v46 = v229;
                  (*(void (**)(char *, uint64_t))(v246 + 8))(v243, v229);
                  v57 = v239;
                }
                else
                {
                  ((void (*)(uint64_t *, _QWORD))v116)(aBlock, 0);
                  swift_endAccess(&v255);
                  sub_1000758D8(v81, v79);
                  sub_1000758D8(v81, v79);

                  v46 = v229;
                  (*(void (**)(char *, uint64_t))(v246 + 8))(v243, v229);
                }
                v58 = v233;
                v42 = v236;
                (*(void (**)(char *, uint64_t))(v57 + 8))(v233, v236);
                sub_1000051EC((uint64_t)v250, (uint64_t *)&unk_1005D3AA0);
                v19 = v80;
                goto LABEL_64;
              }
            }
            v113 = v95[7];
            swift_bridgeObjectRelease(*(_QWORD *)(v113 + 8 * v88));
            *(_QWORD *)(v113 + 8 * v88) = _swiftEmptyArrayStorage;
            goto LABEL_49;
          }
          __chkstk_darwin(v78);
          *(&v208 - 2) = (uint64_t)v77;
          v99 = v234;
          v100 = v231;
          OS_dispatch_queue.sync<A>(execute:)(v234, sub_100345634, &v208 - 4, v227);
          v231 = v100;
          v101 = v240;
          swift_beginAccess(v240, aBlock, 33, 0);
          v102 = v77;
          v103 = swift_isUniquelyReferenced_nonNull_native(*v101);
          v255 = (_QWORD *)*v101;
          v104 = v255;
          *v101 = 0x8000000000000000;
          v106 = sub_100171DF0((uint64_t)v99);
          v107 = v104[2];
          v108 = (v105 & 1) == 0;
          v109 = v107 + v108;
          if (__OFADD__(v107, v108))
            goto LABEL_121;
          v110 = v105;
          if (v104[3] >= v109)
          {
            if ((v103 & 1) == 0)
              sub_10017DA58();
          }
          else
          {
            sub_100177950(v109, v103);
            v111 = sub_100171DF0((uint64_t)v234);
            if ((v110 & 1) != (v112 & 1))
              goto LABEL_128;
            v106 = v111;
          }
          v122 = v246;
          v123 = v255;
          if ((v110 & 1) != 0)
          {
            v124 = v255[7];
            v125 = 8 * v106;

            *(_QWORD *)(v124 + v125) = v102;
          }
          else
          {
            v255[(v106 >> 6) + 8] |= 1 << v106;
            sub_10004FC74((uint64_t)v234, v123[6] + *(_QWORD *)(v216 + 72) * v106, type metadata accessor for FMAnnotationIdentifier);
            *(_QWORD *)(v123[7] + 8 * v106) = v102;
            v126 = v123[2];
            v61 = __OFADD__(v126, 1);
            v127 = v126 + 1;
            if (v61)
              goto LABEL_124;
            v123[2] = v127;
          }
          v128 = *v240;
          *v240 = v123;
          swift_bridgeObjectRelease(v128);
          sub_10004FCB8((uint64_t)v234, type metadata accessor for FMAnnotationIdentifier);
          swift_endAccess(aBlock);

          (*(void (**)(char *, uint64_t))(v122 + 8))(v243, v46);
          v57 = v239;
          v58 = v233;
          v42 = v236;
          (*(void (**)(char *, uint64_t))(v239 + 8))(v233, v236);
          v71 = (uint64_t)v250;
          v72 = (uint64_t *)&unk_1005D3AA0;
        }
        sub_1000051EC(v71, v72);
LABEL_64:
        v37 = (char *)v248;
        v56 = v251;
      }
      while (v251);
    }
LABEL_15:
    v61 = __OFADD__(v52++, 1);
    if (v61)
    {
      __break(1u);
      goto LABEL_119;
    }
    if (v52 < v245)
      break;
    v11 = v241;
LABEL_80:
    v159 = swift_release(v249);
    v44 = v224;
    (*(void (**)(char *, uint64_t, __n128))(v226 + 8))(v37, v224, v159);
    v45 = v238;
    (*(void (**)(uint64_t, uint64_t))(v219 + 8))(v238, v230);
    v43 = (uint64_t)v225;
LABEL_4:
    v41 = v228 + 1;
    if (v228 + 1 == v223)
    {
      swift_bridgeObjectRelease(v209);
LABEL_85:
      v160 = v237;
      swift_beginAccess(v237, &v255, 0, 0);
      v161 = *v160;
      v162 = *(_QWORD *)(*v160 + 64);
      v247 = (char *)(*v160 + 64);
      v163 = 1 << *(_BYTE *)(v161 + 32);
      v164 = -1;
      if (v163 < 64)
        v164 = ~(-1 << v163);
      v165 = v164 & v162;
      v248 = (unint64_t)(v163 + 63) >> 6;
      v249 = v161;
      swift_bridgeObjectRetain(v161);
      v166 = 0;
      v167 = v231;
      v168 = v227;
      while (1)
      {
        if (v165)
        {
          v250 = (char *)((v165 - 1) & v165);
          v176 = __clz(__rbit64(v165)) | (v166 << 6);
        }
        else
        {
          v61 = __OFADD__(v166++, 1);
          if (v61)
            goto LABEL_122;
          if (v166 >= v248)
          {
LABEL_117:
            swift_release(v249);
            v205 = v240;
            swift_beginAccess(v240, aBlock, 0, 0);
            v206 = *v205;
            v207 = swift_bridgeObjectRetain(v206);
            sub_100038120(v207, (uint64_t)_swiftEmptyArrayStorage);
            swift_bridgeObjectRelease(v206);
            return;
          }
          v177 = *(_QWORD *)&v247[8 * v166];
          if (!v177)
          {
            v178 = v166 + 1;
            if (v166 + 1 >= v248)
              goto LABEL_117;
            v177 = *(_QWORD *)&v247[8 * v178];
            if (!v177)
            {
              v178 = v166 + 2;
              if (v166 + 2 >= v248)
                goto LABEL_117;
              v177 = *(_QWORD *)&v247[8 * v178];
              if (!v177)
              {
                v178 = v166 + 3;
                if (v166 + 3 >= v248)
                  goto LABEL_117;
                v177 = *(_QWORD *)&v247[8 * v178];
                if (!v177)
                {
                  while (1)
                  {
                    v166 = v178 + 1;
                    if (__OFADD__(v178, 1))
                      goto LABEL_125;
                    if (v166 >= v248)
                      goto LABEL_117;
                    v177 = *(_QWORD *)&v247[8 * v166];
                    ++v178;
                    if (v177)
                      goto LABEL_102;
                  }
                }
              }
            }
            v166 = v178;
          }
LABEL_102:
          v250 = (char *)((v177 - 1) & v177);
          v176 = __clz(__rbit64(v177)) + (v166 << 6);
        }
        v179 = *(_QWORD *)(v249 + 56);
        v180 = (uint64_t *)(*(_QWORD *)(v249 + 48) + 16 * v176);
        v182 = *v180;
        v181 = v180[1];
        v183 = *(_QWORD *)(v179 + 8 * v176);
        if (v183 < 0 || (v183 & 0x4000000000000000) != 0)
        {
          swift_bridgeObjectRetain_n(*(_QWORD *)(v179 + 8 * v176), 2);
          sub_1000758C4(v182, v181);
          v184 = (uint64_t)sub_1003EFB10(v183);
          swift_bridgeObjectRelease(v183);
        }
        else
        {
          v184 = v183 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain_n(*(_QWORD *)(v179 + 8 * v176), 2);
          sub_1000758C4(v182, v181);
        }
        aBlock[0] = v184;
        sub_10040FC80(aBlock);
        if (v167)
          goto LABEL_126;
        sub_1000758D8(v182, v181);
        swift_bridgeObjectRelease(v183);
        v185 = aBlock[0];
        v186 = *(_QWORD *)(v242 + 48);
        v187 = (objc_class *)type metadata accessor for FMClusterAnnotation();
        v188 = objc_allocWithZone(v187);
        swift_bridgeObjectRetain(v186);
        v189 = swift_retain(v185);
        sub_100353488(v189);
        v191 = v190;
        *(&v208 - 2) = __chkstk_darwin(v190);
        OS_dispatch_queue.sync<A>(execute:)(v11, sub_1003540D8, &v208 - 4, v168);
        v192 = *(_QWORD *)(v186 + 16);
        v251 = v166;
        if (v192 && (v193 = sub_100171DF0((uint64_t)v11), (v194 & 1) != 0))
        {
          v195 = *(id *)(*(_QWORD *)(v186 + 56) + 8 * v193);
          sub_10004FCB8((uint64_t)v11, type metadata accessor for FMAnnotationIdentifier);
          v196 = swift_dynamicCastClass(v195, v187);
          if (v196)
          {
            v197 = (void *)v196;
            v198 = v210;
            static DispatchWorkItemFlags.barrier.getter(v196);
            v199 = swift_allocObject(&unk_100565688, 32, 7);
            *(_QWORD *)(v199 + 16) = v185;
            *(_QWORD *)(v199 + 24) = v197;
            aBlock[4] = (uint64_t)sub_100416634;
            v253 = v199;
            aBlock[0] = (uint64_t)_NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = (uint64_t)sub_100037DF8;
            aBlock[3] = (uint64_t)&unk_1005656A0;
            v200 = _Block_copy(aBlock);
            swift_retain(v185);
            v201 = v195;
            v202 = v213;
            static DispatchQoS.unspecified.getter(v201);
            OS_dispatch_queue.async(group:qos:flags:execute:)(0, v202, v198, v200);
            v169 = v241;
            _Block_release(v200);
            (*(void (**)(char *, uint64_t))(v214 + 8))(v202, v215);
            v203 = v198;
            v168 = v227;
            (*(void (**)(char *, uint64_t))(v211 + 8))(v203, v212);
            v204 = v253;
            swift_bridgeObjectRelease(v186);
            swift_release(v185);

            swift_release(v204);
            v191 = v197;
          }
          else
          {
            v169 = v11;
            swift_bridgeObjectRelease(v186);
            swift_release(v185);

          }
        }
        else
        {
          v169 = v11;
          sub_10004FCB8((uint64_t)v11, type metadata accessor for FMAnnotationIdentifier);
          swift_bridgeObjectRelease(v186);
          swift_release(v185);
        }
        __chkstk_darwin(v170);
        *(&v208 - 2) = (uint64_t)v191;
        v171 = v232;
        OS_dispatch_queue.sync<A>(execute:)(v232, sub_1003540D8, &v208 - 4, v168);
        v172 = v240;
        swift_beginAccess(v240, aBlock, 33, 0);
        v173 = v191;
        v174 = swift_isUniquelyReferenced_nonNull_native(*v172);
        v254 = *v172;
        *v172 = 0x8000000000000000;
        sub_10017A884((uint64_t)v173, (uint64_t)v171, v174);
        v175 = *v172;
        *v172 = v254;
        swift_bridgeObjectRelease(v175);
        sub_10004FCB8((uint64_t)v171, type metadata accessor for FMAnnotationIdentifier);
        swift_endAccess(aBlock);

        v11 = v169;
        v165 = (unint64_t)v250;
        v166 = v251;
      }
    }
  }
  v62 = *(_QWORD *)(v244 + 8 * v52);
  v11 = v241;
  if (v62)
    goto LABEL_25;
  v63 = v52 + 1;
  if (v52 + 1 >= v245)
    goto LABEL_80;
  v62 = *(_QWORD *)(v244 + 8 * v63);
  if (v62)
    goto LABEL_24;
  v63 = v52 + 2;
  if (v52 + 2 >= v245)
    goto LABEL_80;
  v62 = *(_QWORD *)(v244 + 8 * v63);
  if (v62)
    goto LABEL_24;
  v63 = v52 + 3;
  if (v52 + 3 >= v245)
    goto LABEL_80;
  v62 = *(_QWORD *)(v244 + 8 * v63);
  if (v62)
  {
LABEL_24:
    v52 = v63;
LABEL_25:
    v59 = v19;
    v251 = (v62 - 1) & v62;
    v60 = __clz(__rbit64(v62)) + (v52 << 6);
    goto LABEL_26;
  }
  while (1)
  {
    v52 = v63 + 1;
    if (__OFADD__(v63, 1))
      break;
    if (v52 >= v245)
      goto LABEL_80;
    v62 = *(_QWORD *)(v244 + 8 * v52);
    ++v63;
    if (v62)
      goto LABEL_25;
  }
LABEL_119:
  __break(1u);
LABEL_120:
  __break(1u);
LABEL_121:
  __break(1u);
LABEL_122:
  __break(1u);
LABEL_123:
  __break(1u);
LABEL_124:
  __break(1u);
LABEL_125:
  __break(1u);
LABEL_126:
  swift_release(aBlock[0]);
  __break(1u);
LABEL_127:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(&type metadata for FMAnnotationClusterIdentifier);
  __break(1u);
LABEL_128:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)(v227);
  __break(1u);
}

double sub_100402620(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, char *, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(char *, uint64_t, uint64_t, __n128);
  __n128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  __n128 v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  uint64_t v59;
  void (*v60)(uint64_t, char *, uint64_t);
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  void (*v83)(char *, uint64_t);
  uint64_t v84;
  double result;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(char *, char *, uint64_t, __n128);
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  _QWORD *v105;
  _QWORD aBlock[5];
  uint64_t v107;
  char v108[32];

  v95 = type metadata accessor for DispatchWorkItemFlags(0);
  v2 = *(_QWORD *)(v95 - 8);
  __chkstk_darwin(v95);
  v94 = (char *)&v86 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = type metadata accessor for DispatchQoS(0);
  v92 = *(_QWORD *)(v93 - 8);
  __chkstk_darwin(v93);
  v91 = (char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v5);
  v97 = (char *)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = type metadata accessor for FMIPDevice(0);
  v7 = *(_QWORD *)(v103 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = __chkstk_darwin(v103);
  v96 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v9);
  v90 = (char *)&v86 - v11;
  v12 = __chkstk_darwin(v10);
  v14 = (char *)&v86 - v13;
  v15 = __chkstk_darwin(v12);
  v98 = (char *)&v86 - v16;
  __chkstk_darwin(v15);
  v18 = (char *)&v86 - v17;
  v19 = type metadata accessor for FMSelectedSection(0);
  v20 = __chkstk_darwin(v19);
  v22 = (char *)&v86 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v102 = (uint64_t)&v86 - v23;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v99 = a1;
  v104 = v18;
  v24 = type metadata accessor for Logger(0);
  v25 = sub_100056D88(v24, (uint64_t)qword_1005F5748);
  v26 = Logger.logObject.getter(v25);
  v27 = static os_log_type_t.default.getter(v26);
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v28 = 0;
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "FMMapViewDataSource: updateSelectedDevice", v28, 2u);
    swift_slowDealloc(v28, -1, -1);
  }

  v29 = swift_allocObject(&unk_1005651B0, 24, 7);
  *(_QWORD *)(v29 + 16) = &_swiftEmptyDictionarySingleton;
  v30 = v101;
  v31 = *(_QWORD *)(*(_QWORD *)(v101 + 16) + 56)
      + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v31, v108, 0, 0);
  v32 = v31;
  v33 = v102;
  sub_10004FC74(v32, v102, type metadata accessor for FMSelectedSection);
  sub_10004FC74(v33, (uint64_t)v22, type metadata accessor for FMSelectedSection);
  if (swift_getEnumCaseMultiPayload(v22, v19) == 7)
  {
    v89 = v29;
    v34 = *(uint64_t (**)(char *, char *, uint64_t))(v7 + 32);
    v36 = v103;
    v35 = v104;
    v37 = v34(v104, v22, v103);
    if ((FMIPDevice.shouldDisplaySeparatedLocation.getter(v37) & 1) != 0)
    {
      v88 = (void (*)(char *, char *, uint64_t, __n128))v34;
      v87 = v2;
      v38 = v99;
      v39 = *(_QWORD *)(v99 + 16);
      if (v39)
      {
        v40 = v99 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
        v41 = *(_QWORD *)(v7 + 72);
        v100 = v7;
        v42 = *(uint64_t (**)(char *, uint64_t, uint64_t, __n128))(v7 + 16);
        v43 = swift_bridgeObjectRetain(v99);
        while (1)
        {
          v44 = v42(v14, v40, v36, v43);
          v45 = FMIPDevice.identifier.getter(v44);
          v47 = v46;
          v49 = FMIPDevice.identifier.getter(v45);
          v50 = v48;
          if (v45 == v49 && v47 == v48)
            break;
          v51 = _stringCompareWithSmolCheck(_:_:expecting:)(v45, v47, v49, v48, 0);
          swift_bridgeObjectRelease(v47);
          v52 = swift_bridgeObjectRelease(v50);
          if ((v51 & 1) != 0)
            goto LABEL_19;
          v36 = v103;
          (*(void (**)(char *, uint64_t, __n128))(v100 + 8))(v14, v103, v52);
          v40 += v41;
          --v39;
          v35 = v104;
          if (!v39)
          {
            v53 = 1;
            v7 = v100;
            v30 = v101;
            v54 = v98;
            v38 = v99;
            goto LABEL_17;
          }
        }
        swift_bridgeObjectRelease_n(v47, 2);
LABEL_19:
        v57 = (uint64_t)v97;
        v36 = v103;
        v88(v97, v14, v103, v52);
        v53 = 0;
        v7 = v100;
        v30 = v101;
        v35 = v104;
        v54 = v98;
        v38 = v99;
        v56 = v89;
      }
      else
      {
        swift_bridgeObjectRetain(v99);
        v53 = 1;
        v54 = v98;
LABEL_17:
        v56 = v89;
        v57 = (uint64_t)v97;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v57, v53, 1, v36);
      v58 = swift_bridgeObjectRelease(v38);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v7 + 48))(v57, 1, v36, v58) == 1)
      {
        sub_1000051EC(v57, &qword_1005D6710);
LABEL_25:
        *(_BYTE *)(v30 + 58) = 0;
        sub_100400C10(v38);
        sub_10004FCB8(v102, type metadata accessor for FMSelectedSection);
        (*(void (**)(char *, uint64_t))(v7 + 8))(v35, v36);
        v55 = v56;
        goto LABEL_26;
      }
      v59 = v57;
      v60 = (void (*)(uint64_t, char *, uint64_t))v88;
      v61 = ((uint64_t (*)(char *, uint64_t, uint64_t))v88)(v54, v59, v36);
      if ((FMIPDevice.hasLocation.getter(v61) & 1) == 0)
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v54, v36);
        goto LABEL_25;
      }
      *(_BYTE *)(v30 + 58) = 1;
      v103 = *(_QWORD *)(v30 + 88);
      v62 = v7;
      v63 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      v64 = v62;
      v100 = v62;
      v65 = v90;
      v63(v90, v54, v36);
      v63(v96, v35, v36);
      v66 = *(unsigned __int8 *)(v64 + 80);
      v67 = (v66 + 16) & ~v66;
      v68 = v66 | 7;
      v69 = (v8 + v66 + v67) & ~v66;
      v70 = v8 + v69 + 7;
      v71 = v30;
      v72 = v70 & 0xFFFFFFFFFFFFFFF8;
      v73 = ((v70 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
      v74 = swift_allocObject(&unk_1005655E8, v73 + 8, v68);
      v60(v74 + v67, v65, v36);
      v60(v74 + v69, v96, v36);
      *(_QWORD *)(v74 + v72) = v56;
      *(_QWORD *)(v74 + v73) = v71;
      aBlock[4] = sub_100416504;
      v107 = v74;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100037DF8;
      aBlock[3] = &unk_100565600;
      v75 = _Block_copy(aBlock);
      swift_retain(v56);
      v76 = swift_retain(v71);
      v77 = v91;
      static DispatchQoS.unspecified.getter(v76);
      v105 = _swiftEmptyArrayStorage;
      v78 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
      v79 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
      v80 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
      v82 = v94;
      v81 = v95;
      dispatch thunk of SetAlgebra.init<A>(_:)(&v105, v79, v80, v95, v78);
      OS_dispatch_queue.async(group:qos:flags:execute:)(0, v77, v82, v75);
      _Block_release(v75);
      (*(void (**)(char *, uint64_t))(v87 + 8))(v82, v81);
      (*(void (**)(char *, uint64_t))(v92 + 8))(v77, v93);
      v83 = *(void (**)(char *, uint64_t))(v100 + 8);
      v83(v98, v36);
      sub_10004FCB8(v102, type metadata accessor for FMSelectedSection);
      v83(v104, v36);
      v84 = v107;
      swift_release(v56);
      v55 = v84;
    }
    else
    {
      sub_100403C7C(v99);
      sub_10004FCB8(v102, type metadata accessor for FMSelectedSection);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v35, v36);
      v55 = v89;
    }
  }
  else
  {
    sub_10004FCB8(v33, type metadata accessor for FMSelectedSection);
    sub_10004FCB8((uint64_t)v22, type metadata accessor for FMSelectedSection);
    v55 = v29;
  }
LABEL_26:
  *(_QWORD *)&result = swift_release(v55).n128_u64[0];
  return result;
}

double sub_100402E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(char *, uint64_t, uint64_t);
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  __int128 v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t i;
  int64_t v85;
  unint64_t v86;
  int64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  __n128 v93;
  uint64_t v94;
  __n128 v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  uint64_t v101;
  NSObject *v102;
  os_log_type_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t *v108;
  __n128 v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  __n128 v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t *v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  NSObject *v138;
  os_log_type_t v139;
  uint8_t *v140;
  uint64_t v141;
  uint64_t v142;
  double result;
  uint64_t v144;
  char *v145;
  __int128 v146;
  uint64_t *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t *v150;
  unint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t *v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t *v158;
  uint64_t v159;
  uint64_t v160;
  void (*v161)(char *, uint64_t, __n128);
  void (*v162)(char *, char *, uint64_t);
  void (*v163)(char *, uint64_t, __n128);
  unint64_t v164;
  char *v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  int64_t v172;
  char *v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char v180[8];

  v166 = a4;
  v157 = type metadata accessor for FMAnnotationIdentifier(0);
  v6 = __chkstk_darwin(v157);
  v153 = (uint64_t)&v144 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v158 = (uint64_t *)((char *)&v144 - v8);
  v9 = sub_100053F2C((uint64_t *)&unk_1005D6700);
  v10 = __chkstk_darwin(v9);
  v175 = (char *)&v144 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v155 = (char *)&v144 - v12;
  v174 = type metadata accessor for FMIPLocation(0);
  v168 = *(_QWORD *)(v174 - 8);
  v13 = __chkstk_darwin(v174);
  v173 = (char *)&v144 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __chkstk_darwin(v13);
  v165 = (char *)&v144 - v16;
  __chkstk_darwin(v15);
  v169 = (uint64_t)&v144 - v17;
  v160 = type metadata accessor for FMIPItem(0);
  v176 = *(_QWORD *)(v160 - 8);
  v18 = __chkstk_darwin(v160);
  v152 = (char *)&v144 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v21 = (char *)&v144 - v20;
  v22 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  v23 = __chkstk_darwin(v22);
  v156 = (char *)&v144 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __chkstk_darwin(v23);
  v154 = (uint64_t *)((char *)&v144 - v26);
  __chkstk_darwin(v25);
  v170 = (uint64_t)&v144 - v27;
  v28 = sub_100053F2C(&qword_1005D72D0);
  v29 = __chkstk_darwin(v28);
  v31 = (char *)&v144 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __chkstk_darwin(v29);
  v34 = (char *)&v144 - v33;
  v35 = (uint64_t *)(a3 + 16);
  v36 = FMIPDevice.identifier.getter(v32);
  v38 = v37;
  v40 = FMIPDevice.identifier.getter(v36);
  v41 = v39;
  if (v36 == v40 && v38 == v39)
  {
    v42 = swift_bridgeObjectRelease_n(v38, 2);
  }
  else
  {
    v43 = _stringCompareWithSmolCheck(_:_:expecting:)(v36, v38, v40, v39, 0);
    swift_bridgeObjectRelease(v38);
    swift_bridgeObjectRelease(v41);
    if ((v43 & 1) == 0)
      goto LABEL_47;
  }
  v44 = a3;
  v45 = a1;
  v148 = FMIPDevice.identifier.getter(v42);
  v47 = v46;
  FMIPDevice.itemGroup.getter(v148);
  v48 = type metadata accessor for FMIPItemGroup(0);
  v49 = *(_QWORD *)(v48 - 8);
  v50 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 48);
  v51 = v50(v34, 1, v48);
  v159 = v45;
  if (v51 == 1)
  {
    swift_bridgeObjectRelease(v47);
    v52 = sub_1000051EC((uint64_t)v34, &qword_1005D72D0);
    goto LABEL_11;
  }
  v151 = v47;
  v53 = sub_1000051EC((uint64_t)v34, &qword_1005D72D0);
  v54 = FMIPDevice.shouldDisplaySeparatedLocation.getter(v53);
  if ((v54 & 1) == 0)
  {
    swift_bridgeObjectRelease(v151);
LABEL_11:
    a3 = v44;
    v58 = (uint64_t)v175;
    v59 = v159;
    FMIPDevice.bestLocation.getter(v52);
    v60 = v168;
    v61 = v174;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v168 + 48))(v58, 1, v174) == 1)
    {
      sub_1000051EC(v58, (uint64_t *)&unk_1005D6700);
    }
    else
    {
      v62 = (uint64_t)v173;
      v63 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v60 + 32))(v173, v58, v61);
      v64 = FMIPDevice.identifier.getter(v63);
      v65 = (uint64_t)v158;
      *v158 = v64;
      *(_QWORD *)(v65 + 8) = v66;
      swift_storeEnumTagMultiPayload(v65, v157, 2);
      v67 = (uint64_t)v156;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v176 + 56))(v156, 1, 1, v160);
      v68 = *(_QWORD *)(v166 + 48);
      swift_bridgeObjectRetain(v68);
      v69 = sub_100406578(v59, v67, 0, v62, v68);
      v70 = v60;
      v71 = v69;
      swift_bridgeObjectRelease(v68);
      sub_1000051EC(v67, (uint64_t *)&unk_1005D3AA0);
      swift_beginAccess(v35, &v179, 33, 0);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v35);
      v177 = *v35;
      *v35 = 0x8000000000000000;
      sub_10017A884(v71, v65, isUniquelyReferenced_nonNull_native);
      v73 = *v35;
      *v35 = v177;
      swift_bridgeObjectRelease(v73);
      sub_10004FCB8(v65, type metadata accessor for FMAnnotationIdentifier);
      swift_endAccess(&v179);
      (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v62, v61);
    }
LABEL_47:
    if (qword_1005D1DE8 != -1)
      goto LABEL_54;
    goto LABEL_48;
  }
  FMIPDevice.itemGroup.getter(v54);
  v55 = v50(v31, 1, v48);
  v150 = v35;
  v144 = v44;
  if (v55 == 1)
  {
    sub_1000051EC((uint64_t)v31, &qword_1005D72D0);
    v57 = (char *)&_swiftEmptySetSingleton;
  }
  else
  {
    v57 = (char *)FMIPItemGroup.groupedItems.getter();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v31, v48);
  }
  v74 = v155;
  v75 = v165;
  v35 = v154;
  v76 = v170;
  v77 = 0;
  v78 = *((_QWORD *)v57 + 7);
  v171 = v57 + 56;
  v79 = 1 << v57[32];
  v80 = -1;
  if (v79 < 64)
    v80 = ~(-1 << v79);
  v81 = v80 & v78;
  v172 = (unint64_t)(v79 + 63) >> 6;
  v147 = &v178;
  *(_QWORD *)&v56 = 136315651;
  v146 = v56;
  v145 = (char *)&type metadata for Any + 8;
  v82 = v168;
  a3 = v160;
  v167 = v21;
  v173 = v57;
  if ((v80 & v78) == 0)
    goto LABEL_19;
LABEL_18:
  v83 = __clz(__rbit64(v81));
  v81 &= v81 - 1;
  v175 = v77;
  for (i = v83 | ((_QWORD)v77 << 6); ; i = __clz(__rbit64(v86)) + (v87 << 6))
  {
    v89 = *(char **)(*((_QWORD *)v57 + 6) + 8 * i);
    swift_bridgeObjectRetain(v89);
    static FMIPItemGroup.primaryPart(group:)(v90);
    sub_100007464(v76, (uint64_t)v35, (uint64_t *)&unk_1005D3AA0);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v176 + 48))(v35, 1, a3) == 1)
    {
      sub_1000051EC(v76, (uint64_t *)&unk_1005D3AA0);
      swift_bridgeObjectRelease(v89);
      v91 = (uint64_t)v35;
      v92 = (uint64_t *)&unk_1005D3AA0;
LABEL_37:
      sub_1000051EC(v91, v92);
      goto LABEL_44;
    }
    v93.n128_f64[0] = (*(double (**)(char *, uint64_t *, uint64_t))(v176 + 32))(v21, v35, a3);
    FMIPItem.location.getter(v93);
    v94 = v174;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v74, 1, v174) == 1)
    {
      v95 = swift_bridgeObjectRelease(v89);
      (*(void (**)(char *, uint64_t, __n128))(v176 + 8))(v21, a3, v95);
      v76 = v170;
      sub_1000051EC(v170, (uint64_t *)&unk_1005D3AA0);
      v91 = (uint64_t)v74;
      v92 = (uint64_t *)&unk_1005D6700;
      goto LABEL_37;
    }
    v96 = v169;
    (*(void (**)(uint64_t, char *, uint64_t))(v82 + 32))(v169, v74, v94);
    v97 = v75;
    if (qword_1005D1DE8 != -1)
      swift_once(&qword_1005D1DE8, sub_100005ADC);
    v164 = v81;
    v98 = type metadata accessor for Logger(0);
    sub_100056D88(v98, (uint64_t)qword_1005F5748);
    v99 = v152;
    v162 = *(void (**)(char *, char *, uint64_t))(v176 + 16);
    v162(v152, v167, a3);
    (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v75, v96, v94);
    v100 = v151;
    v101 = swift_bridgeObjectRetain_n(v151, 2);
    v102 = Logger.logObject.getter(v101);
    v103 = static os_log_type_t.default.getter(v102);
    if (os_log_type_enabled(v102, v103))
    {
      v104 = swift_slowAlloc(32, -1);
      v149 = swift_slowAlloc(96, -1);
      v179 = v149;
      *(_DWORD *)v104 = v146;
      v105 = FMIPItem.debugDescription.getter();
      v107 = v106;
      v177 = sub_100056DA0(v105, v106, &v179);
      v108 = v147;
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v177, v147);
      v109 = swift_bridgeObjectRelease(v107);
      v163 = *(void (**)(char *, uint64_t, __n128))(v176 + 8);
      v163(v99, a3, v109);
      *(_WORD *)(v104 + 12) = 2080;
      swift_bridgeObjectRetain(v100);
      v177 = sub_100056DA0(v148, v100, &v179);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v177, v108);
      v110 = swift_bridgeObjectRelease_n(v100, 3);
      *(_WORD *)(v104 + 22) = 2081;
      v111 = v165;
      v112 = FMIPLocation.debugDescription.getter(v110);
      v114 = v113;
      v177 = sub_100056DA0(v112, v113, &v179);
      UnsafeMutableRawBufferPointer.copyMemory(from:)(&v177, v108);
      v115 = swift_bridgeObjectRelease(v114);
      v161 = *(void (**)(char *, uint64_t, __n128))(v168 + 8);
      v161(v111, v174, v115);
      _os_log_impl((void *)&_mh_execute_header, v102, v103, "FMMapViewDataSource: Creating annotation for item %s, groupIdentifier: %s - %{private}s", (uint8_t *)v104, 0x20u);
      v116 = v149;
      swift_arrayDestroy(v149, 3, v145);
      swift_slowDealloc(v116, -1, -1);
      swift_slowDealloc(v104, -1, -1);
    }
    else
    {
      v163 = *(void (**)(char *, uint64_t, __n128))(v176 + 8);
      ((void (*)(char *, uint64_t))v163)(v99, a3);
      swift_bridgeObjectRelease_n(v100, 2);
      v161 = *(void (**)(char *, uint64_t, __n128))(v82 + 8);
      ((void (*)(char *, uint64_t))v161)(v97, v94);
    }

    v117 = v159;
    v119 = FMIPDevice.identifier.getter(v118);
    v121 = v120;
    v122 = v167;
    v123 = FMIPItem.identifier.getter(v119);
    v124 = v158;
    *v158 = v119;
    v124[1] = v121;
    v124[2] = v123;
    v124[3] = v125;
    swift_storeEnumTagMultiPayload(v124, v157, 4);
    v126 = v153;
    sub_10004FC74((uint64_t)v124, v153, type metadata accessor for FMAnnotationIdentifier);
    v127 = (uint64_t)v156;
    a3 = v160;
    v162(v156, v122, v160);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v176 + 56))(v127, 0, 1, a3);
    v128 = *(_QWORD *)(v166 + 48);
    swift_bridgeObjectRetain(v128);
    v129 = v117;
    v130 = v169;
    v131 = sub_100406578(v129, v127, v89, v169, v128);
    swift_bridgeObjectRelease(v89);
    swift_bridgeObjectRelease(v128);
    v132 = v127;
    v21 = v122;
    sub_1000051EC(v132, (uint64_t *)&unk_1005D3AA0);
    v133 = v150;
    swift_beginAccess(v150, &v179, 33, 0);
    v134 = swift_isUniquelyReferenced_nonNull_native(*v133);
    v177 = *v133;
    *v133 = 0x8000000000000000;
    sub_10017A884(v131, v126, v134);
    v135 = *v133;
    *v133 = v177;
    swift_bridgeObjectRelease(v135);
    sub_10004FCB8(v126, type metadata accessor for FMAnnotationIdentifier);
    swift_endAccess(&v179);
    sub_10004FCB8((uint64_t)v124, type metadata accessor for FMAnnotationIdentifier);
    ((void (*)(uint64_t, uint64_t))v161)(v130, v174);
    ((void (*)(char *, uint64_t))v163)(v122, a3);
    v76 = v170;
    sub_1000051EC(v170, (uint64_t *)&unk_1005D3AA0);
    v82 = v168;
    v74 = v155;
    v81 = v164;
    v75 = v165;
    v35 = v154;
LABEL_44:
    v57 = v173;
    v77 = v175;
    if (v81)
      goto LABEL_18;
LABEL_19:
    v85 = (int64_t)(v77 + 1);
    if (__OFADD__(v77, 1))
    {
      __break(1u);
      goto LABEL_53;
    }
    if (v85 >= v172)
      goto LABEL_46;
    v86 = *(_QWORD *)&v171[8 * v85];
    v87 = (int64_t)(v77 + 1);
    if (!v86)
    {
      v87 = (int64_t)(v77 + 2);
      if ((uint64_t)(v77 + 2) >= v172)
        goto LABEL_46;
      v86 = *(_QWORD *)&v171[8 * v87];
      if (!v86)
      {
        v87 = (int64_t)(v77 + 3);
        if ((uint64_t)(v77 + 3) >= v172)
          goto LABEL_46;
        v86 = *(_QWORD *)&v171[8 * v87];
        if (!v86)
          break;
      }
    }
LABEL_32:
    v81 = (v86 - 1) & v86;
    v175 = (char *)v87;
  }
  v88 = v77 + 4;
  if ((uint64_t)(v77 + 4) >= v172)
  {
LABEL_46:
    swift_bridgeObjectRelease(v151);
    swift_release(v57);
    a3 = v144;
    v35 = v150;
    goto LABEL_47;
  }
  v86 = *(_QWORD *)&v171[8 * (_QWORD)v88];
  if (v86)
  {
    v87 = (int64_t)(v77 + 4);
    goto LABEL_32;
  }
  while (1)
  {
    v87 = (int64_t)(v88 + 1);
    if (__OFADD__(v88, 1))
      break;
    if (v87 >= v172)
      goto LABEL_46;
    v86 = *(_QWORD *)&v171[8 * v87];
    ++v88;
    if (v86)
      goto LABEL_32;
  }
LABEL_53:
  __break(1u);
LABEL_54:
  swift_once(&qword_1005D1DE8, sub_100005ADC);
LABEL_48:
  v136 = type metadata accessor for Logger(0);
  sub_100056D88(v136, (uint64_t)qword_1005F5748);
  v137 = swift_retain(a3);
  v138 = Logger.logObject.getter(v137);
  v139 = static os_log_type_t.default.getter(v138);
  if (os_log_type_enabled(v138, v139))
  {
    v140 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v140 = 134217984;
    swift_beginAccess(v35, &v177, 0, 0);
    v179 = *(_QWORD *)(*(_QWORD *)(a3 + 16) + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v179, v180);
    swift_release(a3);
    _os_log_impl((void *)&_mh_execute_header, v138, v139, "FMMapViewDataSource: result %ld", v140, 0xCu);
    swift_slowDealloc(v140, -1, -1);

  }
  else
  {

    swift_release(a3);
  }
  swift_beginAccess(v35, &v179, 0, 0);
  v141 = *v35;
  swift_bridgeObjectRetain(*v35);
  sub_100038120(v142, (uint64_t)_swiftEmptyArrayStorage);
  *(_QWORD *)&result = swift_bridgeObjectRelease(v141).n128_u64[0];
  return result;
}

double sub_100403C7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  char *v28;
  uint8_t *v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  int EnumCaseMultiPayload;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  __n128 v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(char *, unint64_t, uint64_t, __n128);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  __n128 v52;
  __n128 v53;
  int v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t);
  uint64_t v81;
  uint64_t v82;
  double result;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t);
  uint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  _QWORD *v101;
  _QWORD aBlock[5];
  uint64_t v103;
  char v104[32];

  v2 = type metadata accessor for DispatchWorkItemFlags(0);
  v91 = *(_QWORD *)(v2 - 8);
  v92 = v2;
  __chkstk_darwin(v2);
  v90 = (char *)&v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = type metadata accessor for DispatchQoS(0);
  v88 = *(_QWORD *)(v89 - 8);
  __chkstk_darwin(v89);
  v87 = (char *)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_100053F2C(&qword_1005D6710);
  __chkstk_darwin(v5);
  v95 = (char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FMIPDevice(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = __chkstk_darwin(v7);
  v86 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __chkstk_darwin(v9);
  v13 = (char *)&v84 - v12;
  v14 = __chkstk_darwin(v11);
  v96 = (char *)&v84 - v15;
  v85 = v16;
  __chkstk_darwin(v14);
  v100 = (char *)&v84 - v17;
  v18 = type metadata accessor for FMSelectedSection(0);
  v19 = __chkstk_darwin(v18);
  v21 = (char *)&v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  v23 = (char *)&v84 - v22;
  if (qword_1005D1DE8 != -1)
    swift_once(&qword_1005D1DE8, sub_100005ADC);
  v24 = type metadata accessor for Logger(0);
  v25 = sub_100056D88(v24, (uint64_t)qword_1005F5748);
  v26 = Logger.logObject.getter(v25);
  v27 = static os_log_type_t.default.getter(v26);
  if (os_log_type_enabled(v26, v27))
  {
    v28 = v23;
    v29 = (uint8_t *)swift_slowAlloc(2, -1);
    *(_WORD *)v29 = 0;
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "FMMapViewDataSource: updateSelectedDevice", v29, 2u);
    v30 = v29;
    v23 = v28;
    swift_slowDealloc(v30, -1, -1);
  }

  v98 = swift_allocObject(&unk_100565188, 24, 7);
  *(_QWORD *)(v98 + 16) = _swiftEmptyArrayStorage;
  v31 = swift_allocObject(&unk_1005651B0, 24, 7);
  *(_QWORD *)(v31 + 16) = &_swiftEmptyDictionarySingleton;
  v32 = *(_QWORD *)(*(_QWORD *)(v99 + 16) + 56)
      + OBJC_IVAR____TtC6FindMy21FMSelectionController_currentSelectedSection;
  swift_beginAccess(v32, v104, 0, 0);
  sub_10004FC74(v32, (uint64_t)v23, type metadata accessor for FMSelectedSection);
  sub_10004FC74((uint64_t)v23, (uint64_t)v21, type metadata accessor for FMSelectedSection);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload(v21, v18);
  v97 = v23;
  if (EnumCaseMultiPayload == 7 || EnumCaseMultiPayload == 1)
  {
    v35 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v35(v100, v21, v7);
    v36 = *(_QWORD *)(a1 + 16);
    if (!v36)
    {
LABEL_9:
      v37 = swift_bridgeObjectRetain(a1);
      v38 = 1;
      v39 = (uint64_t)v95;
      goto LABEL_20;
    }
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      sub_10004FCB8((uint64_t)v23, type metadata accessor for FMSelectedSection);
      sub_10004FCB8((uint64_t)v21, type metadata accessor for FMSelectedSection);
LABEL_26:
      swift_release(v98);
      v82 = v31;
      goto LABEL_27;
    }
    v34 = (uint64_t)&v21[*(int *)(sub_100053F2C(&qword_1005DE9B0) + 48)];
    v35 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v35(v100, v21, v7);
    sub_1000051EC(v34, (uint64_t *)&unk_1005D3AA0);
    v36 = *(_QWORD *)(a1 + 16);
    if (!v36)
      goto LABEL_9;
  }
  v93 = v35;
  v94 = v31;
  v40 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v41 = *(_QWORD *)(v8 + 72);
  v42 = a1;
  v43 = *(uint64_t (**)(char *, unint64_t, uint64_t, __n128))(v8 + 16);
  v84 = v42;
  v37 = swift_bridgeObjectRetain(v42);
  while (1)
  {
    v44 = v43(v13, v40, v7, v37);
    v45 = FMIPDevice.identifier.getter(v44);
    v47 = v46;
    v49 = FMIPDevice.identifier.getter(v45);
    v50 = v48;
    if (v45 == v49 && v47 == v48)
      break;
    v51 = _stringCompareWithSmolCheck(_:_:expecting:)(v45, v47, v49, v48, 0);
    swift_bridgeObjectRelease(v47);
    v52 = swift_bridgeObjectRelease(v50);
    if ((v51 & 1) != 0)
      goto LABEL_19;
    (*(void (**)(char *, uint64_t, __n128))(v8 + 8))(v13, v7, v52);
    v40 += v41;
    if (!--v36)
    {
      v38 = 1;
      a1 = v84;
      v31 = v94;
      v39 = (uint64_t)v95;
      v35 = v93;
      goto LABEL_20;
    }
  }
  swift_bridgeObjectRelease_n(v47, 2);
LABEL_19:
  v39 = (uint64_t)v95;
  v35 = v93;
  ((void (*)(char *, char *, uint64_t, __n128))v93)(v95, v13, v7, v52);
  v38 = 0;
  a1 = v84;
  v31 = v94;
LABEL_20:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v8 + 56))(v39, v38, 1, v7, v37);
  v53 = swift_bridgeObjectRelease(a1);
  v54 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, __n128))(v8 + 48))(v39, 1, v7, v53);
  v55 = v96;
  v56 = (uint64_t)v97;
  if (v54 == 1)
  {
    sub_1000051EC(v39, &qword_1005D6710);
LABEL_25:
    *(_BYTE *)(v99 + 58) = 0;
    sub_100400C10(a1);
    sub_10004FCB8(v56, type metadata accessor for FMSelectedSection);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v100, v7);
    goto LABEL_26;
  }
  v57 = ((uint64_t (*)(char *, uint64_t, uint64_t))v35)(v96, v39, v7);
  if ((FMIPDevice.hasLocation.getter(v57) & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v55, v7);
    goto LABEL_25;
  }
  v93 = v35;
  v59 = v99;
  v58 = v100;
  *(_BYTE *)(v99 + 58) = 1;
  v95 = *(char **)(v59 + 88);
  v60 = v86;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v86, v58, v7);
  v61 = *(unsigned __int8 *)(v8 + 80);
  v62 = (v61 + 24) & ~v61;
  v94 = v31;
  v63 = (v85 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
  v64 = a1;
  v65 = (v63 + 15) & 0xFFFFFFFFFFFFFFF8;
  v66 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  v67 = swift_allocObject(&unk_100565598, v66 + 8, v61 | 7);
  *(_QWORD *)(v67 + 16) = v64;
  v93((char *)(v67 + v62), v60, v7);
  *(_QWORD *)(v67 + v63) = v59;
  v68 = v94;
  *(_QWORD *)(v67 + v65) = v94;
  v69 = v98;
  *(_QWORD *)(v67 + v66) = v98;
  aBlock[4] = sub_1004163F8;
  v103 = v67;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100037DF8;
  aBlock[3] = &unk_1005655B0;
  v70 = _Block_copy(aBlock);
  swift_bridgeObjectRetain(v64);
  swift_retain(v59);
  v71 = v68;
  swift_retain(v68);
  v72 = swift_retain(v69);
  v73 = v87;
  static DispatchQoS.unspecified.getter(v72);
  v101 = _swiftEmptyArrayStorage;
  v74 = sub_100008000((unint64_t *)&qword_1005D2100, (uint64_t (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags, (uint64_t)&protocol conformance descriptor for DispatchWorkItemFlags);
  v75 = sub_100053F2C((uint64_t *)&unk_1005D33F0);
  v76 = sub_10003F774((unint64_t *)&qword_1005D2110, (uint64_t *)&unk_1005D33F0, (uint64_t)&protocol conformance descriptor for [A]);
  v77 = v90;
  v78 = v75;
  v79 = v92;
  dispatch thunk of SetAlgebra.init<A>(_:)(&v101, v78, v76, v92, v74);
  OS_dispatch_queue.async(group:qos:flags:execute:)(0, v73, v77, v70);
  _Block_release(v70);
  (*(void (**)(char *, uint64_t))(v91 + 8))(v77, v79);
  (*(void (**)(char *, uint64_t))(v88 + 8))(v73, v89);
  v80 = *(void (**)(char *, uint64_t))(v8 + 8);
  v80(v96, v7);
  sub_10004FCB8((uint64_t)v97, type metadata accessor for FMSelectedSection);
  v80(v100, v7);
  v81 = v103;
  swift_release(v69);
  swift_release(v71);
  v82 = v81;
LABEL_27:
  *(_QWORD *)&result = swift_release(v82).n128_u64[0];
  return result;
}

void sub_100404480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  __n128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  _QWORD *v84;
  uint64_t *v85;
  uint64_t i;
  _QWORD *v87;
  char *v88;
  uint64_t v89;
  void *v90;
  id v91;
  char *v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  id v101;
  id v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  char *v108;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  _QWORD *v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  id v136;
  _QWORD *v137;
  id v138;
  unint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unsigned int (*v145)(uint64_t, uint64_t, uint64_t);
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  _QWORD *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t *v162;
  char v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  __n128 v167;
  uint64_t v168;
  void (*v169)(uint64_t, uint64_t);
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  unint64_t v178;
  unint64_t v179;
  uint64_t v180;
  unint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  char *v186;
  __n128 v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  __n128 v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  char *v198;
  unint64_t v199;
  uint64_t v200;
  uint64_t v201;
  NSObject *v202;
  os_log_type_t v203;
  int v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  unint64_t v209;
  unint64_t v210;
  char *v211;
  __n128 v212;
  uint64_t v213;
  uint64_t v214;
  unint64_t v215;
  unint64_t v216;
  __n128 v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  uint64_t v224;
  uint64_t *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t *v232;
  char v233;
  uint64_t v234;
  __n128 v235;
  __n128 v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  unsigned int (*v241)(uint64_t, uint64_t, uint64_t);
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  _QWORD *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  unint64_t v253;
  unint64_t v254;
  unint64_t v255;
  uint64_t v256;
  unint64_t v257;
  uint64_t v258;
  char *v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  char *v263;
  __n128 v264;
  uint64_t v265;
  __n128 v266;
  uint64_t v267;
  uint64_t v268;
  char *v269;
  char *v270;
  uint64_t v271;
  uint64_t v272;
  NSObject *v273;
  os_log_type_t v274;
  uint8_t *v275;
  uint64_t v276;
  unint64_t v277;
  unint64_t v278;
  __n128 v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  char *v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t *v297;
  char v298;
  uint64_t v299;
  __n128 v300;
  uint64_t v301;
  uint64_t v302;
  void *v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t *v308;
  id v309;
  char v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  __n128 v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  NSObject *v318;
  os_log_type_t v319;
  BOOL v320;
  uint64_t *v321;
  uint8_t *v322;
  uint64_t v323;
  uint64_t *v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  char *v328;
  char *v329;
  char *v330;
  char *v331;
  char *v332;
  _QWORD *v333;
  __n128 v334;
  char *v335;
  char *v336;
  char *v337;
  uint64_t v338;
  uint64_t (*v339)(uint64_t, uint64_t, uint64_t);
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  char *v344;
  __n128 v345;
  uint64_t v346;
  char *v347;
  char *v348;
  char *v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  int v353;
  uint64_t v354;
  char *v355;
  uint64_t v356;
  char *v357;
  char *v358;
  char *v359;
  uint64_t *v360;
  uint64_t v361;
  char *v362;
  char *v363;
  void (*v364)(char *, uint64_t, __n128);
  void (*v365)(char *, uint64_t, __n128);
  void (*v366)(char *, char *, uint64_t);
  char *v367;
  uint64_t v368;
  char *v369;
  uint64_t v370;
  _QWORD *v371;
  uint64_t v372;
  char *v373;
  uint64_t v374;
  char *v375;
  uint64_t v376;
  char *v377;
  char *v378;
  uint64_t v379;
  uint64_t v380;
  char *v381;
  uint64_t *v382;
  uint64_t v383;
  uint64_t *v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  char v388[8];
  uint64_t v389;
  char v390;
  uint64_t v391;
  char v392[8];

  v386 = a5;
  v383 = a3;
  v343 = a2;
  v7 = sub_100053F2C((uint64_t *)&unk_1005D6700);
  v8 = __chkstk_darwin(v7);
  v347 = (char *)&v326 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __chkstk_darwin(v8);
  v12 = (char *)&v326 - v11;
  v13 = __chkstk_darwin(v10);
  v335 = (char *)&v326 - v14;
  __chkstk_darwin(v13);
  v369 = (char *)&v326 - v15;
  v16 = type metadata accessor for FMIPLocation(0);
  v372 = *(_QWORD *)(v16 - 8);
  v17 = __chkstk_darwin(v16);
  v346 = (uint64_t)&v326 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __chkstk_darwin(v17);
  v21 = (char *)&v326 - v20;
  v22 = __chkstk_darwin(v19);
  v332 = (char *)&v326 - v23;
  v24 = __chkstk_darwin(v22);
  v26 = (char *)&v326 - v25;
  __chkstk_darwin(v24);
  v368 = (uint64_t)&v326 - v27;
  v374 = type metadata accessor for FMIPItem(0);
  v376 = *(_QWORD *)(v374 - 8);
  v28 = __chkstk_darwin(v374);
  v336 = (char *)&v326 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __chkstk_darwin(v28);
  v357 = (char *)&v326 - v31;
  v32 = __chkstk_darwin(v30);
  v355 = (char *)&v326 - v33;
  __chkstk_darwin(v32);
  v35 = (char *)&v326 - v34;
  v36 = sub_100053F2C((uint64_t *)&unk_1005D3AA0);
  v37 = __chkstk_darwin(v36);
  v348 = (char *)&v326 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __chkstk_darwin(v37);
  v41 = (char *)&v326 - v40;
  v42 = __chkstk_darwin(v39);
  v358 = (char *)&v326 - v43;
  v44 = __chkstk_darwin(v42);
  v46 = (char *)&v326 - v45;
  __chkstk_darwin(v44);
  v385 = (uint64_t)&v326 - v47;
  v48 = sub_100053F2C(&qword_1005D72D0);
  v49 = __chkstk_darwin(v48);
  v328 = (char *)&v326 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __chkstk_darwin(v49);
  v330 = (char *)&v326 - v52;
  v53 = __chkstk_darwin(v51);
  v329 = (char *)&v326 - v54;
  __chkstk_darwin(v53);
  v337 = (char *)&v326 - v55;
  v387 = type metadata accessor for FMAnnotationIdentifier(0);
  v56 = __chkstk_darwin(v387);
  v356 = (uint64_t)&v326 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __chkstk_darwin(v56);
  v382 = (uint64_t *)((char *)&v326 - v59);
  __chkstk_darwin(v58);
  v360 = (uint64_t *)((char *)&v326 - v60);
  v61 = type metadata accessor for FMIPHistoricalLocation(0);
  v379 = *(_QWORD *)(v61 - 8);
  v380 = v61;
  __chkstk_darwin(v61);
  v378 = (char *)&v326 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  v352 = type metadata accessor for FMIPDevice(0);
  __chkstk_darwin(v352);
  v65 = (char *)&v326 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  v327 = a4;
  v384 = (uint64_t *)(a4 + 16);
  v333 = (_QWORD *)(v386 + 16);
  v342 = *(_QWORD *)(a1 + 16);
  if (!v342)
  {
LABEL_125:
    if (qword_1005D1DE8 != -1)
      goto LABEL_134;
    goto LABEL_126;
  }
  v331 = v12;
  v341 = a1 + ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80));
  v340 = *(_QWORD *)(v63 + 72);
  v338 = v63;
  v339 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v63 + 16);
  v349 = &v390;
  v326 = a1;
  v66 = swift_bridgeObjectRetain(a1);
  v67 = 0;
  v66.n128_u64[0] = 136315651;
  v345 = v66;
  v344 = (char *)&type metadata for Any + 8;
  v66.n128_u64[0] = 136315138;
  v334 = v66;
  v370 = v16;
  v362 = v21;
  v367 = v26;
  v381 = v35;
  v363 = v41;
  v359 = v46;
  v68 = v385;
  v375 = v65;
  v69 = (uint64_t)v65;
  while (1)
  {
    v351 = v67;
    v71 = v339(v69, v341 + v340 * v67, v352);
    v72 = FMIPDevice.identifier.getter(v71);
    v74 = v73;
    v76 = FMIPDevice.identifier.getter(v72);
    v77 = v75;
    if (v72 != v76 || v74 != v75)
      break;
    v78 = swift_bridgeObjectRelease_n(v74, 2);
LABEL_11:
    v350 = FMIPDevice.identifier.getter(v78);
    v361 = v80;
    v81 = FMIPDevice.historicalLocations.getter(v350);
    if (v81)
    {
      v82 = *(_QWORD *)(v81 + 16);
      v373 = (char *)v81;
      if (v82)
      {
        v83 = v81 + ((*(unsigned __int8 *)(v379 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v379 + 80));
        v386 = *(_QWORD *)(v379 + 72);
        v377 = *(char **)(v379 + 16);
        v84 = _swiftEmptyArrayStorage;
        v85 = v360;
        for (i = ((uint64_t (*)(char *, unint64_t, uint64_t))v377)(v378, v83, v380);
              ;
              i = ((uint64_t (*)(char *, unint64_t, uint64_t))v377)(v88, v83, v89))
        {
          v90 = (void *)FMIPHistoricalLocation.location.getter(i);
          v91 = objc_allocWithZone((Class)type metadata accessor for FMTrackAnnotation(0));
          v92 = (char *)sub_10037C830(v90);

          v93 = OBJC_IVAR____TtC6FindMy17FMTrackAnnotation_location;
          v94 = *(id *)&v92[OBJC_IVAR____TtC6FindMy17FMTrackAnnotation_location];
          v95 = sub_100274294();
          v97 = v96;

          *v85 = v95;
          v85[1] = v97;
          swift_storeEnumTagMultiPayload(v85, v387, 3);
          v98 = *(_QWORD *)(v383 + 48);
          if (*(_QWORD *)(v98 + 16))
          {
            swift_bridgeObjectRetain(*(_QWORD *)(v383 + 48));
            v99 = sub_100171DF0((uint64_t)v85);
            if ((v100 & 1) != 0)
            {
              v101 = *(id *)(*(_QWORD *)(v98 + 56) + 8 * v99);
              swift_bridgeObjectRelease(v98);
              sub_10004FCB8((uint64_t)v85, type metadata accessor for FMAnnotationIdentifier);
              v102 = *(id *)&v92[v93];
              v103 = sub_100274294();
              v105 = v104;

              v106 = (uint64_t)v382;
              *v382 = v103;
              *(_QWORD *)(v106 + 8) = v105;
              swift_storeEnumTagMultiPayload(v106, v387, 3);
              v107 = v384;
              swift_beginAccess(v384, &v391, 33, 0);
              v108 = (char *)v101;
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native(*v107);
              v389 = *v107;
              *v107 = 0x8000000000000000;
              sub_10017A884((uint64_t)v108, v106, isUniquelyReferenced_nonNull_native);
              v110 = *v107;
              *v107 = v389;
              swift_bridgeObjectRelease(v110);
              sub_10004FCB8(v106, type metadata accessor for FMAnnotationIdentifier);
              swift_endAccess(&v391);
              objc_msgSend(v108, "coordinate");
              v112 = v111;
              v114 = v113;
              if ((swift_isUniquelyReferenced_nonNull_native(v84) & 1) == 0)
                v84 = sub_100070CB0(0, v84[2] + 1, 1, v84);
              v68 = v385;
              v116 = v84[2];
              v115 = v84[3];
              v85 = v360;
              if (v116 >= v115 >> 1)
                v84 = sub_100070CB0((_QWORD *)(v115 > 1), v116 + 1, 1, v84);
              v84[2] = v116 + 1;
              v117 = &v84[2 * v116];
              v117[4] = v112;
              v117[5] = v114;

              goto LABEL_15;
            }
            swift_bridgeObjectRelease(v98);
          }
          sub_10004FCB8((uint64_t)v85, type metadata accessor for FMAnnotationIdentifier);
          v118 = *(id *)&v92[v93];
          v119 = sub_100274294();
          v121 = v120;

          v122 = (uint64_t)v382;
          *v382 = v119;
          *(_QWORD *)(v122 + 8) = v121;
          swift_storeEnumTagMultiPayload(v122, v387, 3);
          v123 = v384;
          swift_beginAccess(v384, &v391, 33, 0);
          v108 = v92;
          v124 = swift_isUniquelyReferenced_nonNull_native(*v123);
          v389 = *v123;
          *v123 = 0x8000000000000000;
          sub_10017A884((uint64_t)v108, v122, v124);
          v125 = *v123;
          *v123 = v389;
          swift_bridgeObjectRelease(v125);
          sub_10004FCB8(v122, type metadata accessor for FMAnnotationIdentifier);
          swift_endAccess(&v391);
          objc_msgSend(v108, "coordinate");
          v127 = v126;
          v129 = v128;
          if ((swift_isUniquelyReferenced_nonNull_native(v84) & 1) == 0)
            v84 = sub_100070CB0(0, v84[2] + 1, 1, v84);
          v68 = v385;
          v131 = v84[2];
          v130 = v84[3];
          if (v131 >= v130 >> 1)
            v84 = sub_100070CB0((_QWORD *)(v130 > 1), v131 + 1, 1, v84);
          v84[2] = v131 + 1;
          v87 = &v84[2 * v131];
          v87[4] = v127;
          v87[5] = v129;
LABEL_15:

          v88 = v378;
          v89 = v380;
          (*(void (**)(char *, uint64_t))(v379 + 8))(v378, v380);
          v83 += v386;
          if (!--v82)
            goto LABEL_32;
        }
      }
      v84 = _swiftEmptyArrayStorage;
LABEL_32:
      swift_bridgeObjectRelease(v373);
      v135 = v84[2];
      v21 = v362;
      if (v135 <= 1)
      {
        swift_bridgeObjectRelease(v84);
        v16 = v370;
      }
      else
      {
        v136 = objc_msgSend((id)objc_opt_self(MKPolyline), "polylineWithCoordinates:count:", v84 + 4, v135);
        swift_bridgeObjectRelease(v84);
        v137 = v333;
        swift_beginAccess(v333, &v391, 33, 0);
        v138 = v136;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()(v138);
        v140 = *(_QWORD *)((*v137 & 0xFFFFFFFFFFFFFF8) + 0x10);
        v139 = *(_QWORD *)((*v137 & 0xFFFFFFFFFFFFFF8) + 0x18);
        v16 = v370;
        if (v140 >= v139 >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)(v139 > 1, v140 + 1, 1);
        v141 = specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)(v140, v138);
        specialized Array._endMutation()(v141);
        swift_endAccess(&v391);

      }
      v46 = v359;
    }
    v142 = (uint64_t)v337;
    FMIPDevice.itemGroup.getter(v81);
    v143 = type metadata accessor for FMIPItemGroup(0);
    v144 = *(_QWORD *)(v143 - 8);
    v145 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v144 + 48);
    if (v145(v142, 1, v143) == 1)
    {
      swift_bridgeObjectRelease(v361);
      v146 = sub_1000051EC(v142, &qword_1005D72D0);
    }
    else
    {
      v147 = sub_1000051EC(v142, &qword_1005D72D0);
      v148 = FMIPDevice.shouldDisplaySeparatedLocation.getter(v147);
      if ((v148 & 1) != 0)
      {
        v149 = (uint64_t)v329;
        FMIPDevice.itemGroup.getter(v148);
        if (v145(v149, 1, v143) == 1)
        {
          sub_1000051EC(v149, &qword_1005D72D0);
          v150 = &_swiftEmptySetSingleton;
        }
        else
        {
          v168 = FMIPItemGroup.groupedItems.getter();
          v169 = *(void (**)(uint64_t, uint64_t))(v144 + 8);
          v150 = (_QWORD *)v168;
          v169(v149, v143);
        }
        v170 = v372;
        v171 = v374;
        v172 = v376;
        v173 = 0;
        v174 = v150[7];
        v373 = (char *)(v150 + 7);
        v175 = 1 << *((_BYTE *)v150 + 32);
        if (v175 < 64)
          v176 = ~(-1 << v175);
        else
          v176 = -1;
        v177 = v176 & v174;
        v377 = (char *)((unint64_t)(v175 + 63) >> 6);
        v371 = v150;
        if ((v176 & v174) != 0)
        {
          do
          {
            while (1)
            {
              v178 = __clz(__rbit64(v177));
              v177 &= v177 - 1;
              v386 = v173;
              v179 = v178 | (v173 << 6);
LABEL_72:
              v184 = *(char **)(v150[6] + 8 * v179);
              swift_bridgeObjectRetain(v184);
              static FMIPItemGroup.primaryPart(group:)(v185);
              sub_100007464(v68, (uint64_t)v46, (uint64_t *)&unk_1005D3AA0);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v172 + 48))(v46, 1, v171) != 1)
                break;
              sub_1000051EC(v68, (uint64_t *)&unk_1005D3AA0);
              swift_bridgeObjectRelease(v184);
              sub_1000051EC((uint64_t)v46, (uint64_t *)&unk_1005D3AA0);
              v173 = v386;
              if (!v177)
                goto LABEL_58;
            }
            v186 = v381;
            v187.n128_f64[0] = (*(double (**)(char *, char *, uint64_t))(v172 + 32))(v381, v46, v171);
            v188 = v16;
            v189 = v369;
            v190 = v172;
            FMIPItem.location.getter(v187);
            v191 = (uint64_t)v189;
            v16 = v188;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v170 + 48))(v191, 1, v188) == 1)
            {
              v192 = swift_bridgeObjectRelease(v184);
              (*(void (**)(char *, uint64_t, __n128))(v190 + 8))(v186, v171, v192);
              v193 = v385;
              sub_1000051EC(v385, (uint64_t *)&unk_1005D3AA0);
              sub_1000051EC(v191, (uint64_t *)&unk_1005D6700);
              v172 = v190;
              v68 = v193;
            }
            else
            {
              v194 = v368;
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v170 + 32))(v368, v191, v188);
              if (qword_1005D1DE8 != -1)
                swift_once(&qword_1005D1DE8, sub_100005ADC);
              v195 = type metadata accessor for Logger(0);
              sub_100056D88(v195, (uint64_t)qword_1005F5748);
              v196 = v376;
              v197 = v355;
              v366 = *(void (**)(char *, char *, uint64_t))(v376 + 16);
              v366(v355, v381, v374);
              v198 = v367;
              (*(void (**)(char *, uint64_t, uint64_t))(v170 + 16))(v367, v194, v188);
              v199 = v361;
              v200 = swift_bridgeObjectRetain_n(v361, 2);
              v201 = v170;
              v202 = Logger.logObject.getter(v200);
              v203 = static os_log_type_t.default.getter(v202);
              v204 = v203;
              if (os_log_type_enabled(v202, v203))
              {
                v205 = swift_slowAlloc(32, -1);
                v353 = v204;
                v206 = v196;
                v207 = v205;
                v354 = swift_slowAlloc(96, -1);
                v391 = v354;
                *(_DWORD *)v207 = v345.n128_u32[0];
                v208 = FMIPItem.debugDescription.getter();
                v210 = v209;
                v389 = sub_100056DA0(v208, v209, &v391);
                v211 = v349;
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v389, v349);
                v212 = swift_bridgeObjectRelease(v210);
                v365 = *(void (**)(char *, uint64_t, __n128))(v206 + 8);
                v365(v197, v374, v212);
                *(_WORD *)(v207 + 12) = 2080;
                swift_bridgeObjectRetain(v199);
                v389 = sub_100056DA0(v350, v199, &v391);
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v389, v211);
                v213 = swift_bridgeObjectRelease_n(v199, 3);
                *(_WORD *)(v207 + 22) = 2081;
                v214 = FMIPLocation.debugDescription.getter(v213);
                v216 = v215;
                v389 = sub_100056DA0(v214, v215, &v391);
                UnsafeMutableRawBufferPointer.copyMemory(from:)(&v389, v211);
                v217 = swift_bridgeObjectRelease(v216);
                v364 = *(void (**)(char *, uint64_t, __n128))(v372 + 8);
                v364(v367, v370, v217);
                _os_log_impl((void *)&_mh_execute_header, v202, (os_log_type_t)v353, "FMMapViewDataSource: Creating annotation for item %s, groupIdentifier: %s - %{private}s", (uint8_t *)v207, 0x20u);
                v218 = v354;
                swift_arrayDestroy(v354, 3, v344);
                swift_slowDealloc(v218, -1, -1);
                swift_slowDealloc(v207, -1, -1);
              }
              else
              {
                v365 = *(void (**)(char *, uint64_t, __n128))(v196 + 8);
                ((void (*)(char *, uint64_t))v365)(v197, v374);
                swift_bridgeObjectRelease_n(v199, 2);
                v364 = *(void (**)(char *, uint64_t, __n128))(v201 + 8);
                ((void (*)(char *, uint64_t))v364)(v198, v16);
              }

              v220 = FMIPDevice.identifier.getter(v219);
              v222 = v221;
              v223 = v381;
              v224 = FMIPItem.identifier.getter(v220);
              v225 = v382;
              *v382 = v220;
              v225[1] = v222;
              v225[2] = v224;
              v225[3] = v226;
              swift_storeEnumTagMultiPayload(v225, v387, 4);
              v227 = v356;
              sub_10004FC74((uint64_t)v225, v356, type metadata accessor for FMAnnotationIdentifier);
              v228 = (uint64_t)v358;
              v171 = v374;
              v366(v358, v223, v374);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v376 + 56))(v228, 0, 1, v171);
              v229 = *(_QWORD *)(v383 + 48);
              swift_bridgeObjectRetain(v229);
              v230 = v368;
              v231 = sub_100406578((uint64_t)v375, v228, v184, v368, v229);
              swift_bridgeObjectRelease(v184);
              swift_bridgeObjectRelease(v229);
              sub_1000051EC(v228, (uint64_t *)&unk_1005D3AA0);
              v232 = v384;
              swift_beginAccess(v384, &v391, 33, 0);
              v233 = swift_isUniquelyReferenced_nonNull_native(*v232);
              v389 = *v232;
              *v232 = 0x8000000000000000;
              sub_10017A884(v231, v227, v233);
              v234 = *v232;
              *v232 = v389;
              swift_bridgeObjectRelease(v234);
              sub_10004FCB8(v227, type metadata accessor for FMAnnotationIdentifier);
              swift_endAccess(&v391);
              sub_10004FCB8((uint64_t)v225, type metadata accessor for FMAnnotationIdentifier);
              v16 = v370;
              ((void (*)(uint64_t, uint64_t))v364)(v230, v370);
              ((void (*)(char *, uint64_t))v365)(v381, v171);
              v68 = v385;
              sub_1000051EC(v385, (uint64_t *)&unk_1005D3AA0);
              v170 = v372;
              v172 = v376;
              v46 = v359;
            }
            v150 = v371;
            v173 = v386;
          }
          while (v177);
        }
LABEL_58:
        v180 = v173 + 1;
        if (__OFADD__(v173, 1))
        {
          __break(1u);
LABEL_131:
          __break(1u);
          goto LABEL_132;
        }
        v21 = v362;
        if (v180 < (uint64_t)v377)
        {
          v181 = *(_QWORD *)&v373[8 * v180];
          v182 = v173 + 1;
          if (v181)
            goto LABEL_71;
          v182 = v173 + 2;
          if (v173 + 2 < (uint64_t)v377)
          {
            v181 = *(_QWORD *)&v373[8 * v182];
            if (v181)
              goto LABEL_71;
            v182 = v173 + 3;
            if (v173 + 3 < (uint64_t)v377)
            {
              v181 = *(_QWORD *)&v373[8 * v182];
              if (v181)
                goto LABEL_71;
              v183 = v173 + 4;
              if (v173 + 4 < (uint64_t)v377)
              {
                v181 = *(_QWORD *)&v373[8 * v183];
                if (v181)
                {
                  v182 = v173 + 4;
LABEL_71:
                  v177 = (v181 - 1) & v181;
                  v386 = v182;
                  v179 = __clz(__rbit64(v181)) + (v182 << 6);
                  goto LABEL_72;
                }
                while (1)
                {
                  v182 = v183 + 1;
                  if (__OFADD__(v183, 1))
                    break;
                  if (v182 >= (uint64_t)v377)
                    goto LABEL_83;
                  v181 = *(_QWORD *)&v373[8 * v182];
                  ++v183;
                  if (v181)
                    goto LABEL_71;
                }
LABEL_132:
                __break(1u);
                goto LABEL_133;
              }
            }
          }
        }
LABEL_83:
        swift_release(v150);
        v235 = swift_bridgeObjectRelease(v361);
        v69 = (uint64_t)v375;
        (*(void (**)(char *, uint64_t, __n128))(v338 + 8))(v375, v352, v235);
        goto LABEL_5;
      }
      swift_bridgeObjectRelease(v361);
    }
    v151 = (uint64_t)v335;
    v152 = (uint64_t)v375;
    FMIPDevice.bestLocation.getter(v146);
    v153 = v372;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v372 + 48))(v151, 1, v16) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v338 + 8))(v152, v352);
      sub_1000051EC(v151, (uint64_t *)&unk_1005D6700);
      v68 = v385;
      v70 = v351;
      v69 = v152;
      goto LABEL_6;
    }
    v154 = (uint64_t)v332;
    v155 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v153 + 32))(v332, v151, v16);
    v156 = FMIPDevice.identifier.getter(v155);
    v157 = (uint64_t)v382;
    *v382 = v156;
    *(_QWORD *)(v157 + 8) = v158;
    swift_storeEnumTagMultiPayload(v157, v387, 2);
    v159 = (uint64_t)v358;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v376 + 56))(v358, 1, 1, v374);
    v160 = *(_QWORD *)(v383 + 48);
    swift_bridgeObjectRetain(v160);
    v161 = sub_100406578((uint64_t)v375, v159, 0, v154, v160);
    swift_bridgeObjectRelease(v160);
    v69 = (uint64_t)v375;
    sub_1000051EC(v159, (uint64_t *)&unk_1005D3AA0);
    v162 = v384;
    swift_beginAccess(v384, &v391, 33, 0);
    v163 = swift_isUniquelyReferenced_nonNull_native(*v162);
    v389 = *v162;
    *v162 = 0x8000000000000000;
    sub_10017A884(v161, v157, v163);
    v164 = *v162;
    *v162 = v389;
    swift_bridgeObjectRelease(v164);
    sub_10004FCB8(v157, type metadata accessor for FMAnnotationIdentifier);
    swift_endAccess(&v391);
    (*(void (**)(uint64_t, uint64_t))(v153 + 8))(v154, v16);
    (*(void (**)(uint64_t, uint64_t))(v338 + 8))(v69, v352);
LABEL_47:
    v68 = v385;
LABEL_5:
    v70 = v351;
LABEL_6:
    v67 = v70 + 1;
    if (v67 == v342)
    {
      swift_bridgeObjectRelease(v326);
      goto LABEL_125;
    }
  }
  v79 = _stringCompareWithSmolCheck(_:_:expecting:)(v72, v74, v76, v75, 0);
  swift_bridgeObjectRelease(v74);
  swift_bridgeObjectRelease(v77);
  if ((v79 & 1) != 0)
    goto LABEL_11;
  v132 = (uint64_t)v331;
  FMIPDevice.bestLocation.getter(v78);
  v133 = v372;
  v371 = *(_QWORD **)(v372 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v371)(v132, 1, v16) == 1)
  {
    v134 = sub_1000051EC(v132, (uint64_t *)&unk_1005D6700);
  }
  else
  {
    v165 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v133 + 32))(v21, v132, v16);
    v166 = FMIPDevice.historicalLocations.getter(v165);
    v167 = swift_bridgeObjectRelease(v166);
    if (v166)
    {
      v134 = (*(uint64_t (**)(char *, uint64_t, __n128))(v133 + 8))(v21, v16, v167);
    }
    else
    {
      if ((FMIPDevice.pairingIncomplete.getter(v167) & 1) == 0)
      {
        v301 = (uint64_t)v358;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v376 + 56))(v358, 1, 1, v374);
        v302 = *(_QWORD *)(v383 + 48);
        swift_bridgeObjectRetain(v302);
        v303 = (void *)sub_100406578((uint64_t)v375, v301, 0, (uint64_t)v21, v302);
        swift_bridgeObjectRelease(v302);
        v304 = sub_1000051EC(v301, (uint64_t *)&unk_1005D3AA0);
        v305 = FMIPDevice.identifier.getter(v304);
        v306 = (uint64_t)v382;
        *v382 = v305;
        *(_QWORD *)(v306 + 8) = v307;
        swift_storeEnumTagMultiPayload(v306, v387, 2);
        v308 = v384;
        swift_beginAccess(v384, &v391, 33, 0);
        v309 = v303;
        v310 = swift_isUniquelyReferenced_nonNull_native(*v308);
        v389 = *v308;
        *v308 = 0x8000000000000000;
        sub_10017A884((uint64_t)v309, v306, v310);
        v311 = *v308;
        *v308 = v389;
        swift_bridgeObjectRelease(v311);
        v312 = v306;
        v313 = (uint64_t)v375;
        sub_10004FCB8(v312, type metadata accessor for FMAnnotationIdentifier);
        swift_endAccess(&v391);

        v69 = v313;
        (*(void (**)(char *, uint64_t))(v372 + 8))(v21, v16);
        (*(void (**)(uint64_t, uint64_t, __n128))(v338 + 8))(v313, v352, v314);
        goto LABEL_5;
      }
      v134 = (*(uint64_t (**)(char *, uint64_t, __n128))(v372 + 8))(v21, v16, v236);
    }
  }
  v237 = (uint64_t)v330;
  v238 = (uint64_t)v375;
  FMIPDevice.itemGroup.getter(v134);
  v239 = type metadata accessor for FMIPItemGroup(0);
  v240 = *(_QWORD *)(v239 - 8);
  v241 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v240 + 48);
  if (v241(v237, 1, v239) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v338 + 8))(v238, v352);
    sub_1000051EC(v237, &qword_1005D72D0);
LABEL_4:
    v69 = v238;
    goto LABEL_5;
  }
  v242 = sub_1000051EC(v237, &qword_1005D72D0);
  v243 = FMIPDevice.shouldDisplaySeparatedLocation.getter(v242);
  if ((v243 & 1) == 0)
  {
    (*(void (**)(uint64_t, uint64_t))(v338 + 8))(v238, v352);
    goto LABEL_4;
  }
  v244 = (uint64_t)v328;
  FMIPDevice.itemGroup.getter(v243);
  if (v241(v244, 1, v239) == 1)
  {
    sub_1000051EC(v244, &qword_1005D72D0);
    v245 = &_swiftEmptySetSingleton;
  }
  else
  {
    v245 = (_QWORD *)FMIPItemGroup.groupedItems.getter();
    (*(void (**)(uint64_t, uint64_t))(v240 + 8))(v244, v239);
  }
  v246 = v374;
  v247 = v376;
  v248 = (uint64_t)v348;
  v249 = 0;
  v250 = v245[7];
  v373 = (char *)(v245 + 7);
  v251 = 1 << *((_BYTE *)v245 + 32);
  if (v251 < 64)
    v252 = ~(-1 << v251);
  else
    v252 = -1;
  v253 = v252 & v250;
  v377 = (char *)((unint64_t)(v251 + 63) >> 6);
  v386 = (uint64_t)v245;
  while (v253)
  {
    v254 = __clz(__rbit64(v253));
    v253 &= v253 - 1;
    v255 = v254 | (v249 << 6);
LABEL_113:
    v259 = *(char **)(v245[6] + 8 * v255);
    swift_bridgeObjectRetain(v259);
    v260 = (uint64_t)v363;
    static FMIPItemGroup.primaryPart(group:)(v261);
    sub_100007464(v260, v248, (uint64_t *)&unk_1005D3AA0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v247 + 48))(v248, 1, v246) == 1)
    {
      sub_1000051EC(v260, (uint64_t *)&unk_1005D3AA0);
      swift_bridgeObjectRelease(v259);
      sub_1000051EC(v248, (uint64_t *)&unk_1005D3AA0);
      v245 = (_QWORD *)v386;
    }
    else
    {
      v262 = v248;
      v263 = v357;
      v264.n128_f64[0] = (*(double (**)(char *, uint64_t, uint64_t))(v247 + 32))(v357, v262, v246);
      v265 = (uint64_t)v347;
      FMIPItem.location.getter(v264);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v371)(v265, 1, v16) == 1)
      {
        v266 = swift_bridgeObjectRelease(v259);
        (*(void (**)(char *, uint64_t, __n128))(v247 + 8))(v263, v246, v266);
        sub_1000051EC((uint64_t)v363, (uint64_t *)&unk_1005D3AA0);
        sub_1000051EC(v265, (uint64_t *)&unk_1005D6700);
        v248 = (uint64_t)v348;
        v245 = (_QWORD *)v386;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v372 + 32))(v346, v265, v16);
        if (qword_1005D1DE8 != -1)
          swift_once(&qword_1005D1DE8, sub_100005ADC);
        v366 = (void (*)(char *, char *, uint64_t))v249;
        v267 = type metadata accessor for Logger(0);
        sub_100056D88(v267, (uint64_t)qword_1005F5748);
        v268 = v376;
        v269 = v336;
        v270 = v357;
        v271 = v374;
        v365 = *(void (**)(char *, uint64_t, __n128))(v376 + 16);
        v272 = ((uint64_t (*)(char *, char *, uint64_t))v365)(v336, v357, v374);
        v273 = Logger.logObject.getter(v272);
        v274 = static os_log_type_t.default.getter(v273);
        if (os_log_type_enabled(v273, v274))
        {
          v275 = (uint8_t *)swift_slowAlloc(12, -1);
          v361 = swift_slowAlloc(32, -1);
          v391 = v361;
          *(_DWORD *)v275 = v334.n128_u32[0];
          v364 = (void (*)(char *, uint64_t, __n128))(v275 + 4);
          v276 = FMIPItem.debugDescription.getter();
          v278 = v277;
          v389 = sub_100056DA0(v276, v277, &v391);
          UnsafeMutableRawBufferPointer.copyMemory(from:)(&v389, v349);
          v279 = swift_bridgeObjectRelease(v278);
          v270 = v357;
          v364 = *(void (**)(char *, uint64_t, __n128))(v268 + 8);
          v364(v269, v271, v279);
          _os_log_impl((void *)&_mh_execute_header, v273, v274, "FMMapViewDataSource: Creating annotation for item %s", v275, 0xCu);
          v280 = v361;
          swift_arrayDestroy(v361, 1, (char *)&type metadata for Any + 8);
          swift_slowDealloc(v280, -1, -1);
          swift_slowDealloc(v275, -1, -1);
        }
        else
        {
          v364 = *(void (**)(char *, uint64_t, __n128))(v268 + 8);
          ((void (*)(char *, uint64_t))v364)(v269, v271);
        }

        v281 = (uint64_t)v375;
        v283 = FMIPDevice.identifier.getter(v282);
        v285 = v284;
        v286 = FMIPItem.identifier.getter(v283);
        v287 = v382;
        *v382 = v283;
        v287[1] = v285;
        v287[2] = v286;
        v287[3] = v288;
        swift_storeEnumTagMultiPayload(v287, v387, 4);
        v289 = v356;
        sub_10004FC74((uint64_t)v287, v356, type metadata accessor for FMAnnotationIdentifier);
        v290 = (uint64_t)v358;
        v291 = v270;
        v292 = v374;
        ((void (*)(char *, char *, uint64_t))v365)(v358, v291, v374);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v376 + 56))(v290, 0, 1, v292);
        v293 = *(_QWORD *)(v383 + 48);
        swift_bridgeObjectRetain(v293);
        v294 = v281;
        v295 = v346;
        v296 = sub_100406578(v294, v290, v259, v346, v293);
        swift_bridgeObjectRelease(v259);
        swift_bridgeObjectRelease(v293);
        sub_1000051EC(v290, (uint64_t *)&unk_1005D3AA0);
        v297 = v384;
        swift_beginAccess(v384, &v391, 33, 0);
        v298 = swift_isUniquelyReferenced_nonNull_native(*v297);
        v389 = *v297;
        *v297 = 0x8000000000000000;
        sub_10017A884(v296, v289, v298);
        v299 = *v297;
        *v297 = v389;
        swift_bridgeObjectRelease(v299);
        sub_10004FCB8(v289, type metadata accessor for FMAnnotationIdentifier);
        swift_endAccess(&v391);
        sub_10004FCB8((uint64_t)v287, type metadata accessor for FMAnnotationIdentifier);
        v16 = v370;
        (*(void (**)(uint64_t, uint64_t))(v372 + 8))(v295, v370);
        ((void (*)(char *, uint64_t))v364)(v357, v292);
        sub_1000051EC((uint64_t)v363, (uint64_t *)&unk_1005D3AA0);
        v246 = v292;
        v247 = v376;
        v248 = (uint64_t)v348;
        v46 = v359;
        v245 = (_QWORD *)v386;
        v249 = (uint64_t)v366;
      }
    }
  }
  v256 = v249 + 1;
  if (__OFADD__(v249, 1))
    goto LABEL_131;
  v69 = (uint64_t)v375;
  if (v256 >= (uint64_t)v377)
  {
LABEL_122:
    v300 = swift_release(v245);
    (*(void (**)(uint64_t, uint64_t, __n128))(v338 + 8))(v69, v352, v300);
    v21 = v362;
    goto LABEL_47;
  }
  v257 = *(_QWORD *)&v373[8 * v256];
  ++v249;
  if (v257)
    goto LABEL_112;
  v249 = v256 + 1;
  if (v256 + 1 >= (uint64_t)v377)
    goto LABEL_122;
  v257 = *(_QWORD *)&v373[8 * v249];
  if (v257)
    goto LABEL_112;
  v249 = v256 + 2;
  if (v256 + 2 >= (uint64_t)v377)
    goto LABEL_122;
  v257 = *(_QWORD *)&v373[8 * v249];
  if (v257)
  {
LABEL_112:
    v253 = (v257 - 1) & v257;
    v255 = __clz(__rbit64(v257)) + (v249 << 6);
    goto LABEL_113;
  }
  v258 = v256 + 3;
  if (v258 >= (uint64_t)v377)
    goto LABEL_122;
  v257 = *(_QWORD *)&v373[8 * v258];
  if (v257)
  {
    v249 = v258;
    goto LABEL_112;
  }
  while (1)
  {
    v249 = v258 + 1;
    if (__OFADD__(v258, 1))
      break;
    if (v249 >= (uint64_t)v377)
      goto LABEL_122;
    v257 = *(_QWORD *)&v373[8 * v249];
    ++v258;
    if (v257)
      goto LABEL_112;
  }
LABEL_133:
  __break(1u);
LABEL_134:
  swift_once(&qword_1005D1DE8, sub_100005ADC);
LABEL_126:
  v315 = type metadata accessor for Logger(0);
  sub_100056D88(v315, (uint64_t)qword_1005F5748);
  v316 = v327;
  v317 = swift_retain(v327);
  v318 = Logger.logObject.getter(v317);
  v319 = static os_log_type_t.default.getter(v318);
  v320 = os_log_type_enabled(v318, v319);
  v321 = v384;
  if (v320)
  {
    v322 = (uint8_t *)swift_slowAlloc(12, -1);
    *(_DWORD *)v322 = 134217984;
    swift_beginAccess(v321, v388, 0, 0);
    v391 = *(_QWORD *)(*(_QWORD *)(v316 + 16) + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)(&v391, v392);
    swift_release(v316);
    _os_log_impl((void *)&_mh_execute_header, v318, v319, "FMMapViewDataSource: result %ld", v322, 0xCu);
    swift_slowDealloc(v322, -1, -1);

  }
  else
  {

    swift_release(v316);
  }
  swift_beginAccess(v321, &v391, 0, 0);
  v323 = *v321;
  v324 = v333;
  swift_beginAccess(v333, &v389, 0, 0);
  v325 = *v324;
  swift_bridgeObjectRetain(v323);
  swift_bridgeObjectRetain(v325);
  sub_100038120(v323, v325);
  swift_bridgeObjectRelease(v323);
  swift_bridgeObjectRelease(v325);
}

